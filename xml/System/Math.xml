<Type Name="Math" FullName="System.Math">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f29c16fa2bfcdba79ee10e1d4a1da7fd63010ea7" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959875" /></Metadata><TypeSignature Language="C#" Value="public static class Math" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Math extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Math" />
  <TypeSignature Language="VB.NET" Value="Public Class Math" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math abstract sealed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Math = class" />
  <TypeSignature Language="C#" Value="public sealed class Math" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Math extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Math" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Math sealed" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="27c91-101">三角関数や対数関数などの一般的な数値関数の定数と静的メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="27c91-101">Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-102">次の例では、<xref:System.Math> クラスのいくつかの数学関数と三角関数を使用して、台形の内側の角度を計算しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-102">The following example uses several mathematical and trigonometric functions from the <xref:System.Math> class to calculate the inner angles of a trapezoid.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb" id="Snippet1":::  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Abs">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-103">指定された数値の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-103">Returns the absolute value of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static decimal Abs (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Abs(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Abs(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Abs : decimal -&gt; decimal" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-104"><see cref="F:System.Decimal.MinValue" /> 以上で、<see cref="F:System.Decimal.MaxValue" /> 以下の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-104">A number that is greater than or equal to <see cref="F:System.Decimal.MinValue" />, but less than or equal to <see cref="F:System.Decimal.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="27c91-105"><see cref="T:System.Decimal" /> 数値の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-105">Returns the absolute value of a <see cref="T:System.Decimal" /> number.</span></span></summary>
        <returns><span data-ttu-id="27c91-106">0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" /> の 10 進数 x。</span><span class="sxs-lookup"><span data-stu-id="27c91-106">A decimal number, x, such that 0 ≤ x ≤<see cref="F:System.Decimal.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-107"><xref:System.Decimal> の絶対値は、符号なしの数値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-107">The absolute value of a <xref:System.Decimal> is its numeric value without its sign.</span></span> <span data-ttu-id="27c91-108">たとえば、1.2 と-1.2 の絶対値は1.2 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-108">For example, the absolute value of both 1.2 and -1.2 is 1.2.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-109">次の例では、<xref:System.Math.Abs%28System.Decimal%29> メソッドを使用して、多数の <xref:System.Decimal> 値の絶対値を取得します。</span><span class="sxs-lookup"><span data-stu-id="27c91-109">The following example uses the <xref:System.Math.Abs%28System.Decimal%29> method to get the absolute value of a number of <xref:System.Decimal> values.</span></span>  
  
 [!code-csharp-interactive[System.Math.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Math.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static double Abs (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Abs(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Abs(double value);" />
      <MemberSignature Language="F#" Value="static member Abs : double -&gt; double" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-110"><see cref="F:System.Double.MinValue" /> 以上で、<see cref="F:System.Double.MaxValue" /> 以下の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-110">A number that is greater than or equal to <see cref="F:System.Double.MinValue" />, but less than or equal to <see cref="F:System.Double.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="27c91-111">倍精度浮動小数点数の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-111">Returns the absolute value of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="27c91-112">0 ≤ x ≤<see cref="F:System.Double.MaxValue" /> の倍精度浮動小数点数 x。</span><span class="sxs-lookup"><span data-stu-id="27c91-112">A double-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Double.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-113"><xref:System.Double> の絶対値は、符号なしの数値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-113">The absolute value of a <xref:System.Double> is its numeric value without its sign.</span></span> <span data-ttu-id="27c91-114">たとえば、1.2 e03 と-1.2 e03 の絶対値は 1.2 e03 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-114">For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="27c91-115">`value` が <xref:System.Double.NegativeInfinity> または <xref:System.Double.PositiveInfinity>に等しい場合、戻り値は <xref:System.Double.PositiveInfinity>です。</span><span class="sxs-lookup"><span data-stu-id="27c91-115">If `value` is equal to <xref:System.Double.NegativeInfinity> or <xref:System.Double.PositiveInfinity>, the return value is <xref:System.Double.PositiveInfinity>.</span></span> <span data-ttu-id="27c91-116">`value` が <xref:System.Double.NaN>に等しい場合、戻り値は <xref:System.Double.NaN>です。</span><span class="sxs-lookup"><span data-stu-id="27c91-116">If `value` is equal to <xref:System.Double.NaN>, the return value is <xref:System.Double.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-117">次の例では、<xref:System.Math.Abs%28System.Double%29> メソッドを使用して、多数の <xref:System.Double> 値の絶対値を取得します。</span><span class="sxs-lookup"><span data-stu-id="27c91-117">The following example uses the <xref:System.Math.Abs%28System.Double%29> method to get the absolute value of a number of <xref:System.Double> values.</span></span>  
  
 [!code-csharp-interactive[System.Math.Abs#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs2.cs#2)]
 [!code-vb[System.Math.Abs#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static short Abs (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Abs(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Abs(short value);" />
      <MemberSignature Language="F#" Value="static member Abs : int16 -&gt; int16" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-118"><see cref="F:System.Int16.MinValue" /> より大きく、<see cref="F:System.Int16.MaxValue" /> 以下の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-118">A number that is greater than <see cref="F:System.Int16.MinValue" />, but less than or equal to <see cref="F:System.Int16.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="27c91-119">16 ビット符号付き整数の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-119">Returns the absolute value of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="27c91-120">0 ≤ x ≤<see cref="F:System.Int16.MaxValue" /> である 16 ビット符号付き整数 x。</span><span class="sxs-lookup"><span data-stu-id="27c91-120">A 16-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int16.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-121"><xref:System.Int16> の絶対値は、符号なしの数値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-121">The absolute value of an <xref:System.Int16> is its numeric value without its sign.</span></span> <span data-ttu-id="27c91-122">たとえば、123と-123 の絶対値は123です。</span><span class="sxs-lookup"><span data-stu-id="27c91-122">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-123">次の例では、<xref:System.Math.Abs%28System.Int16%29> メソッドを使用して、多数の <xref:System.Int16> 値の絶対値を取得します。</span><span class="sxs-lookup"><span data-stu-id="27c91-123">The following example uses the <xref:System.Math.Abs%28System.Int16%29> method to get the absolute value of a number of <xref:System.Int16> values.</span></span>  
  
 [!code-csharp-interactive[System.Math.Abs#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs3.cs#3)]
 [!code-vb[System.Math.Abs#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="27c91-124"><paramref name="value" /> と <see cref="F:System.Int16.MinValue" /> は等しい。</span><span class="sxs-lookup"><span data-stu-id="27c91-124"><paramref name="value" /> equals <see cref="F:System.Int16.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static int Abs (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Abs(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Abs(int value);" />
      <MemberSignature Language="F#" Value="static member Abs : int -&gt; int" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-125"><see cref="F:System.Int32.MinValue" /> より大きく、<see cref="F:System.Int32.MaxValue" /> 以下の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-125">A number that is greater than <see cref="F:System.Int32.MinValue" />, but less than or equal to <see cref="F:System.Int32.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="27c91-126">32 ビット符号付き整数の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-126">Returns the absolute value of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="27c91-127">0 ≤ x ≤<see cref="F:System.Int32.MaxValue" /> である 32 ビット符号付き整数 x。</span><span class="sxs-lookup"><span data-stu-id="27c91-127">A 32-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int32.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-128"><xref:System.Int32> の絶対値は、符号なしの数値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-128">The absolute value of an <xref:System.Int32> is its numeric value without its sign.</span></span> <span data-ttu-id="27c91-129">たとえば、123と-123 の絶対値は123です。</span><span class="sxs-lookup"><span data-stu-id="27c91-129">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-130">次の例では、<xref:System.Math.Abs%28System.Int32%29> メソッドを使用して、多数の <xref:System.Int32> 値の絶対値を取得します。</span><span class="sxs-lookup"><span data-stu-id="27c91-130">The following example uses the <xref:System.Math.Abs%28System.Int32%29> method to get the absolute value of a number of <xref:System.Int32> values.</span></span>  
  
 [!code-csharp-interactive[System.Math.Abs#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs4.cs#4)]
 [!code-vb[System.Math.Abs#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="27c91-131"><paramref name="value" /> と <see cref="F:System.Int32.MinValue" /> は等しい。</span><span class="sxs-lookup"><span data-stu-id="27c91-131"><paramref name="value" /> equals <see cref="F:System.Int32.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static long Abs (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Abs(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Abs(long value);" />
      <MemberSignature Language="F#" Value="static member Abs : int64 -&gt; int64" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-132"><see cref="F:System.Int64.MinValue" /> より大きく、<see cref="F:System.Int64.MaxValue" /> 以下の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-132">A number that is greater than <see cref="F:System.Int64.MinValue" />, but less than or equal to <see cref="F:System.Int64.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="27c91-133">64 ビット符号付き整数の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-133">Returns the absolute value of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="27c91-134">0 ≤ x ≤<see cref="F:System.Int64.MaxValue" /> である 64 ビット符号付き整数 x。</span><span class="sxs-lookup"><span data-stu-id="27c91-134">A 64-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.Int64.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-135"><xref:System.Int64> の絶対値は、符号なしの数値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-135">The absolute value of an <xref:System.Int64> is its numeric value without its sign.</span></span> <span data-ttu-id="27c91-136">たとえば、123と-123 の絶対値は123です。</span><span class="sxs-lookup"><span data-stu-id="27c91-136">For example, the absolute value of both 123 and -123 is 123.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-137">次の例では、<xref:System.Math.Abs%28System.Int64%29> メソッドを使用して、多数の <xref:System.Int64> 値の絶対値を取得します。</span><span class="sxs-lookup"><span data-stu-id="27c91-137">The following example uses the <xref:System.Math.Abs%28System.Int64%29> method to get the absolute value of a number of <xref:System.Int64> values.</span></span>  
  
 [!code-csharp-interactive[System.Math.Abs#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs5.cs#5)]
 [!code-vb[System.Math.Abs#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="27c91-138"><paramref name="value" /> と <see cref="F:System.Int64.MinValue" /> は等しい。</span><span class="sxs-lookup"><span data-stu-id="27c91-138"><paramref name="value" /> equals <see cref="F:System.Int64.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static sbyte Abs (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Abs(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Abs(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Abs : sbyte -&gt; sbyte" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-139"><see cref="F:System.SByte.MinValue" /> より大きく、<see cref="F:System.SByte.MaxValue" /> 以下の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-139">A number that is greater than <see cref="F:System.SByte.MinValue" />, but less than or equal to <see cref="F:System.SByte.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="27c91-140">8 ビット符号付き整数の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-140">Returns the absolute value of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="27c91-141">0 ≤ x ≤<see cref="F:System.SByte.MaxValue" /> である 8 ビット符号付き整数 x。</span><span class="sxs-lookup"><span data-stu-id="27c91-141">An 8-bit signed integer, x, such that 0 ≤ x ≤<see cref="F:System.SByte.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-142">符号付きバイトの絶対値は、符号なしの数値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-142">The absolute value of a signed byte is its numeric value without its sign.</span></span> <span data-ttu-id="27c91-143">たとえば、12と-12 の絶対値は12です。</span><span class="sxs-lookup"><span data-stu-id="27c91-143">For example, the absolute value of both 12 and -12 is 12.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-144">次の例では、<xref:System.Math.Abs%28System.SByte%29> メソッドを使用して、多数の <xref:System.SByte> 値の絶対値を取得します。</span><span class="sxs-lookup"><span data-stu-id="27c91-144">The following example uses the <xref:System.Math.Abs%28System.SByte%29> method to get the absolute value of a number of <xref:System.SByte> values.</span></span>  
  
 [!code-csharp-interactive[System.Math.Abs#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs6.cs#6)]
 [!code-vb[System.Math.Abs#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="27c91-145"><paramref name="value" /> と <see cref="F:System.SByte.MinValue" /> は等しい。</span><span class="sxs-lookup"><span data-stu-id="27c91-145"><paramref name="value" /> equals <see cref="F:System.SByte.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static float Abs (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Abs(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Abs(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Abs(float value);" />
      <MemberSignature Language="F#" Value="static member Abs : single -&gt; single" Usage="System.Math.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-146"><see cref="F:System.Single.MinValue" /> 以上で、<see cref="F:System.Single.MaxValue" /> 以下の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-146">A number that is greater than or equal to <see cref="F:System.Single.MinValue" />, but less than or equal to <see cref="F:System.Single.MaxValue" />.</span></span></param>
        <summary><span data-ttu-id="27c91-147">単精度浮動小数点数の絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-147">Returns the absolute value of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="27c91-148">0 ≤ x ≤<see cref="F:System.Single.MaxValue" /> の単精度浮動小数点数 x。</span><span class="sxs-lookup"><span data-stu-id="27c91-148">A single-precision floating-point number, x, such that 0 ≤ x ≤<see cref="F:System.Single.MaxValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-149"><xref:System.Single> の絶対値は、符号なしの数値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-149">The absolute value of a <xref:System.Single> is its numeric value without its sign.</span></span> <span data-ttu-id="27c91-150">たとえば、1.2 e-03 と-1.2 e03 の絶対値は 1.2 e03 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-150">For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</span></span>  
  
 <span data-ttu-id="27c91-151">`value` が <xref:System.Single.NegativeInfinity> または <xref:System.Single.PositiveInfinity>に等しい場合、戻り値は <xref:System.Single.PositiveInfinity>です。</span><span class="sxs-lookup"><span data-stu-id="27c91-151">If `value` is equal to <xref:System.Single.NegativeInfinity> or <xref:System.Single.PositiveInfinity>, the return value is <xref:System.Single.PositiveInfinity>.</span></span> <span data-ttu-id="27c91-152">`value` が <xref:System.Single.NaN>に等しい場合、戻り値は <xref:System.Single.NaN>です。</span><span class="sxs-lookup"><span data-stu-id="27c91-152">If `value` is equal to <xref:System.Single.NaN>, the return value is <xref:System.Single.NaN>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-153">次の例では、<xref:System.Math.Abs%28System.Single%29> メソッドを使用して、多数の <xref:System.Single> 値の絶対値を取得します。</span><span class="sxs-lookup"><span data-stu-id="27c91-153">The following example uses the <xref:System.Math.Abs%28System.Single%29> method to get the absolute value of a number of <xref:System.Single> values.</span></span>  
  
 [!code-csharp-interactive[System.Math.Abs#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Abs/cs/abs7.cs#7)]
 [!code-vb[System.Math.Abs#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Abs/vb/abs7.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static double Acos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acos(double d);" />
      <MemberSignature Language="F#" Value="static member Acos : double -&gt; double" Usage="System.Math.Acos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-154">コサインを表す数で、<paramref name="d" /> が -1 以上 1 以下である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-154">A number representing a cosine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="27c91-155">コサインが指定数となる角度を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-155">Returns the angle whose cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-156">0 ≤θ≤π の、ラジアンで表した角度 θ。</span><span class="sxs-lookup"><span data-stu-id="27c91-156">An angle, θ, measured in radians, such that 0 ≤θ≤π</span></span> 
<span data-ttu-id="27c91-157">または</span><span class="sxs-lookup"><span data-stu-id="27c91-157">-or-</span></span> 
 <span data-ttu-id="27c91-158"><paramref name="d" /> &lt; -1 または <paramref name="d" /> &gt; 1、あるいは <paramref name="d" /> が <see cref="F:System.Double.NaN" /> と等しい場合は、<see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-158"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-159">戻り値を 180/<xref:System.Math.PI?displayProperty=nameWithType> で乗算し、ラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="27c91-159">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-160">次の例では、<xref:System.Math.Acos%2A> メソッドを使用して、特定の台形の内部角度の計算を支援します。</span><span class="sxs-lookup"><span data-stu-id="27c91-160">The following example uses the <xref:System.Math.Acos%2A> method to assist in the computation of the inner angles of a given trapezoid.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acosh">
      <MemberSignature Language="C#" Value="public static double Acosh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Acosh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Acosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Acosh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Acosh(double d);" />
      <MemberSignature Language="F#" Value="static member Acosh : double -&gt; double" Usage="System.Math.Acosh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-161">ハイパーボリック コサインを表す数で、<paramref name="d" /> が 1 以上 <see cref="F:System.Double.PositiveInfinity" /> 以下である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-161">A number representing a hyperbolic cosine, where <paramref name="d" /> must be greater than or equal to 1, but less than or equal to <see cref="F:System.Double.PositiveInfinity" />.</span></span></param>
        <summary><span data-ttu-id="27c91-162">ハイパーボリック コサインが指定数となる角度を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-162">Returns the angle whose hyperbolic cosine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-163">0 ≤ θ ≤ ∞ の、ラジアンで表した角度 θ。</span><span class="sxs-lookup"><span data-stu-id="27c91-163">An angle, θ, measured in radians, such that 0 ≤ θ ≤ ∞.</span></span>  
  
<span data-ttu-id="27c91-164">または</span><span class="sxs-lookup"><span data-stu-id="27c91-164">-or-</span></span> 
 <span data-ttu-id="27c91-165"><paramref name="d" /> &lt; 1、または <paramref name="d" /> が <see cref="F:System.Double.NaN" /> と等しい場合は、<see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-165"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-166">戻り値を 180/<xref:System.Math.PI?displayProperty=nameWithType> で乗算し、ラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="27c91-166">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static double Asin (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asin(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asin (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asin(double d);" />
      <MemberSignature Language="F#" Value="static member Asin : double -&gt; double" Usage="System.Math.Asin d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-167">サインを表す数で、<paramref name="d" /> が -1 以上 1 以下である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-167">A number representing a sine, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="27c91-168">サインが指定数となる角度を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-168">Returns the angle whose sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-169">-π/2 ≤θ≤π/2 の、ラジアンで表した角度 θ。</span><span class="sxs-lookup"><span data-stu-id="27c91-169">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</span></span> 
<span data-ttu-id="27c91-170">または</span><span class="sxs-lookup"><span data-stu-id="27c91-170">-or-</span></span> 
 <span data-ttu-id="27c91-171"><paramref name="d" /> &lt; -1 または <paramref name="d" /> &gt; 1、あるいは <paramref name="d" /> が <see cref="F:System.Double.NaN" /> と等しい場合は、<see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-171"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-172">正の戻り値は x 軸から反時計回りの角度を表します。負の戻り値は、時計回りの角度を表します。</span><span class="sxs-lookup"><span data-stu-id="27c91-172">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="27c91-173">戻り値を 180/<xref:System.Math.PI?displayProperty=nameWithType> で乗算し、ラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="27c91-173">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-174">次の例では、<xref:System.Math.Asin%2A> を使用して、特定の台形の内部角度の計算を支援します。</span><span class="sxs-lookup"><span data-stu-id="27c91-174">The following example uses <xref:System.Math.Asin%2A> to assist in the computation of the inner angles of a given trapezoid.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asinh">
      <MemberSignature Language="C#" Value="public static double Asinh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Asinh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Asinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Asinh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Asinh(double d);" />
      <MemberSignature Language="F#" Value="static member Asinh : double -&gt; double" Usage="System.Math.Asinh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-175">ハイパーボリック サインを表す数で、<paramref name="d" /> が <see cref="F:System.Double.NegativeInfinity" /> 以上 <see cref="F:System.Double.PositiveInfinity" /> 以下である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-175">A number representing a hyperbolic sine, where <paramref name="d" /> must be greater than or equal to <see cref="F:System.Double.NegativeInfinity" />, but less than or equal to <see cref="F:System.Double.PositiveInfinity" />.</span></span></param>
        <summary><span data-ttu-id="27c91-176">ハイパーボリック サインが指定数となる角度を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-176">Returns the angle whose hyperbolic sine is the specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-177">-∞ &lt; θ ≤-1 または 1 ≤ θ &lt; ∞ の、ラジアンで表した角度 θ。</span><span class="sxs-lookup"><span data-stu-id="27c91-177">An angle, θ, measured in radians, such that -∞ &lt; θ ≤-1, or 1 ≤ θ &lt; ∞.</span></span> 
  
<span data-ttu-id="27c91-178">または</span><span class="sxs-lookup"><span data-stu-id="27c91-178">-or-</span></span> 
 <span data-ttu-id="27c91-179"><paramref name="d" /> が <see cref="F:System.Double.NaN" /> と等しい場合は <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-179"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-180">戻り値を 180/<xref:System.Math.PI?displayProperty=nameWithType> で乗算し、ラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="27c91-180">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static double Atan (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan(double d);" />
      <MemberSignature Language="F#" Value="static member Atan : double -&gt; double" Usage="System.Math.Atan d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-181">タンジェントを表す数。</span><span class="sxs-lookup"><span data-stu-id="27c91-181">A number representing a tangent.</span></span></param>
        <summary><span data-ttu-id="27c91-182">タンジェントが指定数となる角度を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-182">Returns the angle whose tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-183">-π/2 ≤θ≤π/2 の、ラジアンで表した角度 θ。</span><span class="sxs-lookup"><span data-stu-id="27c91-183">An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</span></span>  
  
<span data-ttu-id="27c91-184">または</span><span class="sxs-lookup"><span data-stu-id="27c91-184">-or-</span></span> 
 <span data-ttu-id="27c91-185"><paramref name="d" /> が <see cref="F:System.Double.NaN" /> に等しい場合は <see cref="F:System.Double.NaN" />。<paramref name="d" /> が <see cref="F:System.Double.NegativeInfinity" /> に等しい場合は、倍精度に丸めた -π/2 (-1.5707963267949)。<paramref name="d" /> が <see cref="F:System.Double.PositiveInfinity" /> に等しい場合は、倍精度に丸めた π/2 (1.5707963267949)。</span><span class="sxs-lookup"><span data-stu-id="27c91-185"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> equals <see cref="F:System.Double.NaN" />, -π/2 rounded to double precision (-1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, or π/2 rounded to double precision (1.5707963267949) if <paramref name="d" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-186">正の戻り値は x 軸から反時計回りの角度を表します。負の戻り値は、時計回りの角度を表します。</span><span class="sxs-lookup"><span data-stu-id="27c91-186">A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</span></span>  
  
 <span data-ttu-id="27c91-187">戻り値を 180/<xref:System.Math.PI?displayProperty=nameWithType> で乗算し、ラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="27c91-187">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-188">次の例は、値のアークタンジェントを計算し、それをコンソールに表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-188">The following example demonstrates how to calculate the arctangent of a value and display it to the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static double Atan2 (double y, double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atan2(float64 y, float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atan2(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atan2 (y As Double, x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atan2(double y, double x);" />
      <MemberSignature Language="F#" Value="static member Atan2 : double * double -&gt; double" Usage="System.Math.Atan2 (y, x)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="x" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="y"><span data-ttu-id="27c91-189">点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="27c91-189">The y coordinate of a point.</span></span></param>
        <param name="x"><span data-ttu-id="27c91-190">点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="27c91-190">The x coordinate of a point.</span></span></param>
        <summary><span data-ttu-id="27c91-191">タンジェントが 2 つの指定された数の商である角度を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-191">Returns the angle whose tangent is the quotient of two specified numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-192">-π≤θ≤π および tan(θ) = <paramref name="y" /> / <paramref name="x" /> の、ラジアンで示した角度 θ。(<paramref name="x" />, <paramref name="y" />) は、デカルト座標の点を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-192">An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <paramref name="y" /> / <paramref name="x" />, where (<paramref name="x" />, <paramref name="y" />) is a point in the Cartesian plane.</span></span> <span data-ttu-id="27c91-193">次の点に注意してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-193">Observe the following:</span></span> 
<span data-ttu-id="27c91-194">-   クワドラント 1 の (<paramref name="x" />, <paramref name="y" />) の場合は、0 &lt; θ &lt; π/2。</span><span class="sxs-lookup"><span data-stu-id="27c91-194">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 1, 0 &lt; θ &lt; π/2.</span></span>  
  
<span data-ttu-id="27c91-195">-   クワドラント 2 の (<paramref name="x" />, <paramref name="y" />) の場合は、π/2 &lt; θ≤π。</span><span class="sxs-lookup"><span data-stu-id="27c91-195">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 2, π/2 &lt; θ≤π.</span></span>  
  
<span data-ttu-id="27c91-196">-   クワドラント 3 の (<paramref name="x" />, <paramref name="y" />) の場合は、-π &lt; θ &lt; -π/2。</span><span class="sxs-lookup"><span data-stu-id="27c91-196">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 3, -π &lt; θ &lt; -π/2.</span></span>  
  
<span data-ttu-id="27c91-197">-   クワドラント 4 の (<paramref name="x" />, <paramref name="y" />) の場合は、-π/2 &lt; θ &lt; 0。</span><span class="sxs-lookup"><span data-stu-id="27c91-197">-   For (<paramref name="x" />, <paramref name="y" />) in quadrant 4, -π/2 &lt; θ &lt; 0.</span></span>  
  
<span data-ttu-id="27c91-198">クワドラント間の境界上にある点の場合は、次の戻り値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-198">For points on the boundaries of the quadrants, the return value is the following:</span></span> 
<span data-ttu-id="27c91-199">-   y が 0 で x が負数でない場合は、θ = 0。</span><span class="sxs-lookup"><span data-stu-id="27c91-199">-   If y is 0 and x is not negative, θ = 0.</span></span>  
  
<span data-ttu-id="27c91-200">-   y が 0 で x が負の場合は、θ = π。</span><span class="sxs-lookup"><span data-stu-id="27c91-200">-   If y is 0 and x is negative, θ = π.</span></span>  
  
<span data-ttu-id="27c91-201">-   y が正で x が 0 の場合は、θ = π/2。</span><span class="sxs-lookup"><span data-stu-id="27c91-201">-   If y is positive and x is 0, θ = π/2.</span></span>  
  
<span data-ttu-id="27c91-202">-   y が負数で x が 0 の場合は、θ = -π/2。</span><span class="sxs-lookup"><span data-stu-id="27c91-202">-   If y is negative and x is 0, θ = -π/2.</span></span>  
  
<span data-ttu-id="27c91-203">-   y が 0 かつ x が 0 の場合は、θ = 0。</span><span class="sxs-lookup"><span data-stu-id="27c91-203">-   If y is 0 and x is 0, θ = 0.</span></span>  
  
<span data-ttu-id="27c91-204"><paramref name="x" /> または <paramref name="y" /> が <see cref="F:System.Double.NaN" /> であるか、<paramref name="x" /> または <paramref name="y" /> が <see cref="F:System.Double.PositiveInfinity" /> または <see cref="F:System.Double.NegativeInfinity" /> のいずれである場合、メソッドは <see cref="F:System.Double.NaN" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-204">If <paramref name="x" /> or <paramref name="y" /> is <see cref="F:System.Double.NaN" />, or if <paramref name="x" /> and <paramref name="y" /> are either <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" />, the method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-205">戻り値は、x 軸によって形成されるデカルト平面の角度と、原点から始まるベクトル (0, 0) で、ポイント (x, y) で終了します。</span><span class="sxs-lookup"><span data-stu-id="27c91-205">The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-206">次の例は、角度とベクトルのアークタンジェントを計算する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-206">The following example demonstrates how to calculate the arctangent of an angle and a vector.</span></span> <span data-ttu-id="27c91-207">結果の値がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-207">The resulting value is displayed in the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atanh">
      <MemberSignature Language="C#" Value="public static double Atanh (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Atanh(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Atanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Atanh (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Atanh(double d);" />
      <MemberSignature Language="F#" Value="static member Atanh : double -&gt; double" Usage="System.Math.Atanh d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-208">ハイパーボリック タンジェントを表す数で、<paramref name="d" /> が -1 以上 1 以下である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-208">A number representing a hyperbolic tangent, where <paramref name="d" /> must be greater than or equal to -1, but less than or equal to 1.</span></span></param>
        <summary><span data-ttu-id="27c91-209">ハイパーボリック タンジェントが指定数となる角度を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-209">Returns the angle whose hyperbolic tangent is the specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-210">-∞ &lt; θ &lt; -1 または 1 &lt; θ &lt; ∞ の、ラジアンで表した角度 θ。</span><span class="sxs-lookup"><span data-stu-id="27c91-210">An angle, θ, measured in radians, such that -∞ &lt; θ &lt; -1, or 1 &lt; θ &lt; ∞.</span></span> 
  
<span data-ttu-id="27c91-211">または</span><span class="sxs-lookup"><span data-stu-id="27c91-211">-or-</span></span> 
 <span data-ttu-id="27c91-212"><paramref name="d" /> &lt; -1 または <paramref name="d" /> &gt; 1、あるいは <paramref name="d" /> が <see cref="F:System.Double.NaN" /> と等しい場合は、<see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-212"><see cref="F:System.Double.NaN" /> if <paramref name="d" /> &lt; -1 or <paramref name="d" /> &gt; 1 or <paramref name="d" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-213">戻り値を 180/<xref:System.Math.PI?displayProperty=nameWithType> で乗算し、ラジアンから度に変換します。</span><span class="sxs-lookup"><span data-stu-id="27c91-213">Multiply the return value by 180/<xref:System.Math.PI?displayProperty=nameWithType> to convert from radians to degrees.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BigMul">
      <MemberSignature Language="C#" Value="public static long BigMul (int a, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 BigMul(int32 a, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BigMul(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BigMul (a As Integer, b As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long BigMul(int a, int b);" />
      <MemberSignature Language="F#" Value="static member BigMul : int * int -&gt; int64" Usage="System.Math.BigMul (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="b" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="27c91-214">乗算対象の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-214">The first number to multiply.</span></span></param>
        <param name="b"><span data-ttu-id="27c91-215">乗算対象の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-215">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="27c91-216">2 つの 32 ビット数値の完全な積を生成します。</span><span class="sxs-lookup"><span data-stu-id="27c91-216">Produces the full product of two 32-bit numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-217">指定した数値の積を含む数。</span><span class="sxs-lookup"><span data-stu-id="27c91-217">The number containing the product of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-218">次の例では、<xref:System.Math.BigMul%2A> メソッドを使用して2つの整数値の積を計算する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-218">The following example demonstrates the use of the <xref:System.Math.BigMul%2A> method to calculate the product of two integer values.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.bigmul/CPP/bigmul.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.bigmul/CS/bigmul.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.bigmul/VB/bigmul.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitDecrement">
      <MemberSignature Language="C#" Value="public static double BitDecrement (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 BitDecrement(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BitDecrement(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitDecrement (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double BitDecrement(double x);" />
      <MemberSignature Language="F#" Value="static member BitDecrement : double -&gt; double" Usage="System.Math.BitDecrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-219">デクリメントする値。</span><span class="sxs-lookup"><span data-stu-id="27c91-219">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="27c91-220"><paramref name="x" /> 未満を比較する、次に小さい値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-220">Returns the next smallest value that compares less than <paramref name="x" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-221"><paramref name="x" /> 未満を比較する、次に小さい値。</span><span class="sxs-lookup"><span data-stu-id="27c91-221">The next smallest value that compares less than <paramref name="x" />.</span></span>  
  
<span data-ttu-id="27c91-222">または</span><span class="sxs-lookup"><span data-stu-id="27c91-222">-or-</span></span> 
 <span data-ttu-id="27c91-223"><paramref name="x" /> が <see cref="F:System.Double.NegativeInfinity" /> と等しい場合は <see cref="F:System.Double.NegativeInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-223"><see cref="F:System.Double.NegativeInfinity" /> if <paramref name="x" /> equals <see cref="F:System.Double.NegativeInfinity" />.</span></span>
  
<span data-ttu-id="27c91-224">または</span><span class="sxs-lookup"><span data-stu-id="27c91-224">-or-</span></span> 
 <span data-ttu-id="27c91-225"><paramref name="x" /> が <see cref="F:System.Double.NaN" /> と等しい場合は <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-225"><see cref="F:System.Double.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="BitIncrement">
      <MemberSignature Language="C#" Value="public static double BitIncrement (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 BitIncrement(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.BitIncrement(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitIncrement (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double BitIncrement(double x);" />
      <MemberSignature Language="F#" Value="static member BitIncrement : double -&gt; double" Usage="System.Math.BitIncrement x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-226">インクリメントする値。</span><span class="sxs-lookup"><span data-stu-id="27c91-226">The value to increment.</span></span></param>
        <summary><span data-ttu-id="27c91-227"><paramref name="x" /> を超える比較値の次に大きい値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-227">Returns the next largest value that compares greater than <paramref name="x" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-228"><paramref name="x" /> を超える比較値の次に大きい値。</span><span class="sxs-lookup"><span data-stu-id="27c91-228">The next largest value that compares greater than <paramref name="x" />.</span></span>  
  
<span data-ttu-id="27c91-229">または</span><span class="sxs-lookup"><span data-stu-id="27c91-229">-or-</span></span> 
 <span data-ttu-id="27c91-230"><paramref name="x" /> が <see cref="F:System.Double.PositiveInfinity" /> と等しい場合は <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-230"><see cref="F:System.Double.PositiveInfinity" /> if <paramref name="x" /> equals <see cref="F:System.Double.PositiveInfinity" />.</span></span>
  
<span data-ttu-id="27c91-231">または</span><span class="sxs-lookup"><span data-stu-id="27c91-231">-or-</span></span> 
 <span data-ttu-id="27c91-232"><paramref name="x" /> が <see cref="F:System.Double.NaN" /> と等しい場合は <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-232"><see cref="F:System.Double.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cbrt">
      <MemberSignature Language="C#" Value="public static double Cbrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cbrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cbrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cbrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cbrt(double d);" />
      <MemberSignature Language="F#" Value="static member Cbrt : double -&gt; double" Usage="System.Math.Cbrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-233">立方根を求める対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-233">The number whose cube root is to be found.</span></span></param>
        <summary><span data-ttu-id="27c91-234">指定された数値の立方根を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-234">Returns the cube root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-235"><paramref name="d" /> の立方根。</span><span class="sxs-lookup"><span data-stu-id="27c91-235">The cube root of <paramref name="d" />.</span></span>  
  
<span data-ttu-id="27c91-236">または</span><span class="sxs-lookup"><span data-stu-id="27c91-236">-or-</span></span> 
 <span data-ttu-id="27c91-237"><paramref name="x" /> が <see cref="F:System.Double.NaN" /> と等しい場合は <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-237"><see cref="F:System.Double.NaN" /> if <paramref name="x" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks></remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Ceiling">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-238">指定した数以上の数のうち、最小の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-238">Returns the smallest integral value greater than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-239">このメソッドの動作は、IEEE Standard 754 のセクション4に従います。</span><span class="sxs-lookup"><span data-stu-id="27c91-239">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="27c91-240">この種類の丸め処理は、正の無限大方向の丸めと呼ばれることもあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-240">This kind of rounding is sometimes called rounding toward positive infinity.</span></span>  

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static decimal Ceiling (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Ceiling(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Ceiling(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Ceiling : decimal -&gt; decimal" Usage="System.Math.Ceiling d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-241">10 進数。</span><span class="sxs-lookup"><span data-stu-id="27c91-241">A decimal number.</span></span></param>
        <summary><span data-ttu-id="27c91-242">指定した 10 進数以上の数のうち、最小の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-242">Returns the smallest integral value that is greater than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="27c91-243"><paramref name="d" /> 以上の最小の整数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-243">The smallest integral value that is greater than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="27c91-244">このメソッドは、整数型ではなく <see cref="T:System.Decimal" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-244">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-245">このメソッドの動作は、IEEE Standard 754 のセクション4に従います。</span><span class="sxs-lookup"><span data-stu-id="27c91-245">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="27c91-246">この種類の丸め処理は、正の無限大方向の丸めと呼ばれることもあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-246">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="27c91-247">つまり、`d` が正である場合、小数部分が存在すると、`d` は次の最大の整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-247">In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer.</span></span> <span data-ttu-id="27c91-248">`d` が負の場合、丸め処理によって `d` の小数部が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-248">If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded.</span></span> <span data-ttu-id="27c91-249">このメソッドの操作は、負の無限大への丸め処理をサポートする <xref:System.Math.Floor%28System.Decimal%29> メソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="27c91-249">The operation of this method differs from the <xref:System.Math.Floor%28System.Decimal%29> method, which supports rounding toward negative infinity.</span></span>  
  
## Examples  
 <span data-ttu-id="27c91-250">次の例は、<xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> メソッドを示し、<xref:System.Math.Floor%28System.Decimal%29> メソッドと比較しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-250">The following example illustrates the <xref:System.Math.Ceiling%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static double Ceiling (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Ceiling(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Ceiling(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Ceiling (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Ceiling(double a);" />
      <MemberSignature Language="F#" Value="static member Ceiling : double -&gt; double" Usage="System.Math.Ceiling a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="27c91-251">倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-251">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="27c91-252">指定した倍精度浮動小数点数以上の数のうち、最小の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-252">Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="27c91-253"><paramref name="a" /> 以上の最小の整数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-253">The smallest integral value that is greater than or equal to <paramref name="a" />.</span></span> <span data-ttu-id="27c91-254"><paramref name="a" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合は、その値が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-254">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="27c91-255">このメソッドは、整数型ではなく <see cref="T:System.Double" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-255">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-256">このメソッドの動作は、IEEE Standard 754 のセクション4に従います。</span><span class="sxs-lookup"><span data-stu-id="27c91-256">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="27c91-257">この種類の丸め処理は、正の無限大方向の丸めと呼ばれることもあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-257">This kind of rounding is sometimes called rounding toward positive infinity.</span></span> <span data-ttu-id="27c91-258">つまり、`a` が正である場合、小数部分が存在すると、`a` は次の最大の整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-258">In other words, if `a` is positive, the presence of any fractional component causes `a` to be rounded to the next highest integer.</span></span> <span data-ttu-id="27c91-259">`a` が負の場合、丸め処理によって `a` の小数部が破棄されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-259">If `a` is negative, the rounding operation causes any fractional component of `a` to be discarded.</span></span> <span data-ttu-id="27c91-260">このメソッドの操作は、負の無限大への丸め処理をサポートする <xref:System.Math.Floor%28System.Double%29> メソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="27c91-260">The operation of this method differs from the <xref:System.Math.Floor%28System.Double%29> method, which supports rounding toward negative infinity.</span></span>  
  
<span data-ttu-id="27c91-261">Visual Basic 15.8 以降では、`Ceiling` メソッドから返された値を任意の[整数変換関数](/dotnet/visual-basic/language-reference/functions/conversion-functions)に渡す場合、または `Ceiling` によって返される double 値が[Option Strict](/dotnet/visual-basic/language-reference/statements/option-strict-statement)が Off に設定されている整数に自動的に変換される場合は、倍精度整数変換のパフォーマンスが最適化されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-261">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Ceiling` method to the any of the [integral conversion functions](/dotnet/visual-basic/language-reference/functions/conversion-functions), or if the Double value returned by `Ceiling` is automatically converted to an integer with [Option Strict](/dotnet/visual-basic/language-reference/statements/option-strict-statement) set to Off.</span></span> <span data-ttu-id="27c91-262">この最適化によって、コードをより速く実行できます。大きい数値の整数型への変換を行うコードでは、最大で 2 倍速くなります。</span><span class="sxs-lookup"><span data-stu-id="27c91-262">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="27c91-263">次の例は、このような最適化された変換を示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-263">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7969
```   

## Examples  
 <span data-ttu-id="27c91-264">次の例は、<xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> メソッドを示し、<xref:System.Math.Floor%28System.Double%29> メソッドと比較しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-264">The following example illustrates the <xref:System.Math.Ceiling%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Floor%28System.Double%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static byte Clamp (byte value, byte min, byte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Clamp(unsigned int8 value, unsigned int8 min, unsigned int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Byte,System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Byte, min As Byte, max As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Clamp(System::Byte value, System::Byte min, System::Byte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : byte * byte * byte -&gt; byte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.Byte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.Byte" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-265">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-265">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-266">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-266">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-267">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-267">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-268"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-268">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-269"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-269"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>  
  
<span data-ttu-id="27c91-270">または</span><span class="sxs-lookup"><span data-stu-id="27c91-270">-or-</span></span> 
 <span data-ttu-id="27c91-271"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-271"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-272">または</span><span class="sxs-lookup"><span data-stu-id="27c91-272">-or-</span></span> 
 <span data-ttu-id="27c91-273"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-273"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static decimal Clamp (decimal value, decimal min, decimal max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Clamp(valuetype System.Decimal value, valuetype System.Decimal min, valuetype System.Decimal max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Decimal,System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Decimal, min As Decimal, max As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Clamp(System::Decimal value, System::Decimal min, System::Decimal max);" />
      <MemberSignature Language="F#" Value="static member Clamp : decimal * decimal * decimal -&gt; decimal" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.Decimal" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.Decimal" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-274">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-274">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-275">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-275">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-276">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-276">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-277"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-277">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-278"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-278"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="27c91-279">または</span><span class="sxs-lookup"><span data-stu-id="27c91-279">-or-</span></span> 
 <span data-ttu-id="27c91-280"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-280"><paramref name="min" /> if <paramref name="value" /> &lt;<paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-281">または</span><span class="sxs-lookup"><span data-stu-id="27c91-281">-or-</span></span> 
 <span data-ttu-id="27c91-282"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-282"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static double Clamp (double value, double min, double max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Clamp(float64 value, float64 min, float64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Double, min As Double, max As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Clamp(double value, double min, double max);" />
      <MemberSignature Language="F#" Value="static member Clamp : double * double * double -&gt; double" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.Double" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.Double" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-283">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-283">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-284">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-284">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-285">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-285">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-286"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-286">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-287"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-287"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="27c91-288">または</span><span class="sxs-lookup"><span data-stu-id="27c91-288">-or-</span></span> 
 <span data-ttu-id="27c91-289"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-289"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-290">または</span><span class="sxs-lookup"><span data-stu-id="27c91-290">-or-</span></span> 
 <span data-ttu-id="27c91-291"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。\`\`</span><span class="sxs-lookup"><span data-stu-id="27c91-291"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.\`\`</span></span> 
<span data-ttu-id="27c91-292">または</span><span class="sxs-lookup"><span data-stu-id="27c91-292">-or-</span></span> 
  <span data-ttu-id="27c91-293"><paramref name="value" /> が <see cref="F:System.Double.NaN" /> と等しい場合は <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-293"><see cref="F:System.Double.NaN" /> if <paramref name="value" /> equals <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static short Clamp (short value, short min, short max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Clamp(int16 value, int16 min, int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int16,System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Short, min As Short, max As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Clamp(short value, short min, short max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int16 * int16 * int16 -&gt; int16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.Int16" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-294">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-294">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-295">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-295">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-296">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-296">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-297"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-297">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-298"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-298"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="27c91-299">または</span><span class="sxs-lookup"><span data-stu-id="27c91-299">-or-</span></span> 
 <span data-ttu-id="27c91-300"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-300"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-301">または</span><span class="sxs-lookup"><span data-stu-id="27c91-301">-or-</span></span> 
 <span data-ttu-id="27c91-302"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-302"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static int Clamp (int value, int min, int max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Clamp(int32 value, int32 min, int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Integer, min As Integer, max As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Clamp(int value, int min, int max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int * int * int -&gt; int" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-303">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-303">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-304">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-304">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-305">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-305">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-306"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-306">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-307"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-307"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="27c91-308">または</span><span class="sxs-lookup"><span data-stu-id="27c91-308">-or-</span></span> 
 <span data-ttu-id="27c91-309"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-309"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-310">または</span><span class="sxs-lookup"><span data-stu-id="27c91-310">-or-</span></span> 
 <span data-ttu-id="27c91-311"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-311"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static long Clamp (long value, long min, long max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Clamp(int64 value, int64 min, int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Long, min As Long, max As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Clamp(long value, long min, long max);" />
      <MemberSignature Language="F#" Value="static member Clamp : int64 * int64 * int64 -&gt; int64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.Int64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-312">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-312">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-313">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-313">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-314">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-314">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-315"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-315">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-316"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-316"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="27c91-317">または</span><span class="sxs-lookup"><span data-stu-id="27c91-317">-or-</span></span> 
 <span data-ttu-id="27c91-318"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-318"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-319">または</span><span class="sxs-lookup"><span data-stu-id="27c91-319">-or-</span></span> 
 <span data-ttu-id="27c91-320"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-320"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static sbyte Clamp (sbyte value, sbyte min, sbyte max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Clamp(int8 value, int8 min, int8 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.SByte,System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As SByte, min As SByte, max As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Clamp(System::SByte value, System::SByte min, System::SByte max);" />
      <MemberSignature Language="F#" Value="static member Clamp : sbyte * sbyte * sbyte -&gt; sbyte" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.SByte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.SByte" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-321">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-321">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-322">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-322">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-323">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-323">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-324"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-324">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-325"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-325"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="27c91-326">または</span><span class="sxs-lookup"><span data-stu-id="27c91-326">-or-</span></span> 
 <span data-ttu-id="27c91-327"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-327"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-328">または</span><span class="sxs-lookup"><span data-stu-id="27c91-328">-or-</span></span> 
 <span data-ttu-id="27c91-329"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-329"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static float Clamp (float value, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Clamp(float32 value, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As Single, min As Single, max As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Clamp(float value, float min, float max);" />
      <MemberSignature Language="F#" Value="static member Clamp : single * single * single -&gt; single" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.Single" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-330">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-330">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-331">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-331">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-332">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-332">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-333"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-333">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-334"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-334"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>  
  
<span data-ttu-id="27c91-335">または</span><span class="sxs-lookup"><span data-stu-id="27c91-335">-or-</span></span> 
 <span data-ttu-id="27c91-336"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-336"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-337">または</span><span class="sxs-lookup"><span data-stu-id="27c91-337">-or-</span></span> 
 <span data-ttu-id="27c91-338"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-338"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span>
  
<span data-ttu-id="27c91-339">または</span><span class="sxs-lookup"><span data-stu-id="27c91-339">-or-</span></span> 
  <span data-ttu-id="27c91-340"><paramref name="value" /> が <see cref="F:System.Single.NaN" /> と等しい場合は <see cref="F:System.Single.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-340"><see cref="F:System.Single.NaN" /> if <paramref name="value" /> equals <see cref="F:System.Single.NaN" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ushort Clamp (ushort value, ushort min, ushort max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Clamp(unsigned int16 value, unsigned int16 min, unsigned int16 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt16,System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UShort, min As UShort, max As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Clamp(System::UInt16 value, System::UInt16 min, System::UInt16 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint16 * uint16 * uint16 -&gt; uint16" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.UInt16" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-341">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-341">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-342">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-342">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-343">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-343">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-344"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-344">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-345"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-345"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>  
  
<span data-ttu-id="27c91-346">または</span><span class="sxs-lookup"><span data-stu-id="27c91-346">-or-</span></span> 
 <span data-ttu-id="27c91-347"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-347"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-348">または</span><span class="sxs-lookup"><span data-stu-id="27c91-348">-or-</span></span> 
 <span data-ttu-id="27c91-349"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-349"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static uint Clamp (uint value, uint min, uint max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Clamp(unsigned int32 value, unsigned int32 min, unsigned int32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt32,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As UInteger, min As UInteger, max As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Clamp(System::UInt32 value, System::UInt32 min, System::UInt32 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint32 * uint32 * uint32 -&gt; uint32" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.UInt32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-350">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-350">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-351">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-351">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-352">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-352">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-353"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-353">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-354"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-354"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>  
  
<span data-ttu-id="27c91-355">または</span><span class="sxs-lookup"><span data-stu-id="27c91-355">-or-</span></span> 
 <span data-ttu-id="27c91-356"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-356"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-357">または</span><span class="sxs-lookup"><span data-stu-id="27c91-357">-or-</span></span> 
 <span data-ttu-id="27c91-358"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-358"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Clamp">
      <MemberSignature Language="C#" Value="public static ulong Clamp (ulong value, ulong min, ulong max);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Clamp(unsigned int64 value, unsigned int64 min, unsigned int64 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Clamp(System.UInt64,System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Clamp (value As ULong, min As ULong, max As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Clamp(System::UInt64 value, System::UInt64 min, System::UInt64 max);" />
      <MemberSignature Language="F#" Value="static member Clamp : uint64 * uint64 * uint64 -&gt; uint64" Usage="System.Math.Clamp (value, min, max)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="min" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="max" Type="System.UInt64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-359">固定される値。</span><span class="sxs-lookup"><span data-stu-id="27c91-359">The value to be clamped.</span></span></param>
        <param name="min"><span data-ttu-id="27c91-360">結果の下限。</span><span class="sxs-lookup"><span data-stu-id="27c91-360">The lower bound of the result.</span></span></param>
        <param name="max"><span data-ttu-id="27c91-361">結果の上限。</span><span class="sxs-lookup"><span data-stu-id="27c91-361">The upper bound of the result.</span></span></param>
        <summary><span data-ttu-id="27c91-362"><paramref name="min" /> 以上 <paramref name="max" /> 以下の範囲に固定される <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-362">Returns <paramref name="value" /> clamped to the inclusive range of <paramref name="min" /> and <paramref name="max" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-363"><paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" /> の場合は <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-363"><paramref name="value" /> if <paramref name="min" /> ≤ <paramref name="value" /> ≤ <paramref name="max" />.</span></span>
  
<span data-ttu-id="27c91-364">または</span><span class="sxs-lookup"><span data-stu-id="27c91-364">-or-</span></span> 
 <span data-ttu-id="27c91-365"><paramref name="value" /> &lt; <paramref name="min" /> の場合は <paramref name="min" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-365"><paramref name="min" /> if <paramref name="value" /> &lt; <paramref name="min" />.</span></span>
  
<span data-ttu-id="27c91-366">または</span><span class="sxs-lookup"><span data-stu-id="27c91-366">-or-</span></span> 
 <span data-ttu-id="27c91-367"><paramref name="max" /> &lt; <paramref name="value" /> の場合は <paramref name="max" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-367"><paramref name="max" /> if <paramref name="max" /> &lt; <paramref name="value" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySign">
      <MemberSignature Language="C#" Value="public static double CopySign (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 CopySign(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.CopySign(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopySign (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double CopySign(double x, double y);" />
      <MemberSignature Language="F#" Value="static member CopySign : double * double -&gt; double" Usage="System.Math.CopySign (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-368">結果に絶対値が使用される数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-368">A number whose magnitude is used in the result.</span></span></param>
        <param name="y"><span data-ttu-id="27c91-369">結果に符号が使用される数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-369">A number whose sign is the used in the result.</span></span></param>
        <summary><span data-ttu-id="27c91-370"><paramref name="x" /> の絶対値と符号 <paramref name="y" /> の値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-370">Returns a value with the magnitude of <paramref name="x" /> and the sign of <paramref name="y" />.</span></span></summary>
        <returns><span data-ttu-id="27c91-371"><paramref name="x" /> の絶対値と符号 <paramref name="y" /> の値。</span><span class="sxs-lookup"><span data-stu-id="27c91-371">A value with the magnitude of <paramref name="x" /> and the sign of <paramref name="y" />.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static double Cos (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cos(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cos(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cos (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cos(double d);" />
      <MemberSignature Language="F#" Value="static member Cos : double -&gt; double" Usage="System.Math.Cos d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-372">ラジアンで表した角度。</span><span class="sxs-lookup"><span data-stu-id="27c91-372">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="27c91-373">指定された角度のコサインを返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-373">Returns the cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="27c91-374"><paramref name="d" /> のコサイン。</span><span class="sxs-lookup"><span data-stu-id="27c91-374">The cosine of <paramref name="d" />.</span></span> <span data-ttu-id="27c91-375"><paramref name="d" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合、このメソッドは <see cref="F:System.Double.NaN" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-375">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-376">角度 (`d`) は、ラジアンで指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-376">The angle, `d`, must be in radians.</span></span> <span data-ttu-id="27c91-377">度をラジアンに変換するには、<xref:System.Math.PI?displayProperty=nameWithType>/180 を乗算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-377">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="27c91-378">`d` の許容値は、約9223372036854775295から約9223372036854775295の範囲です。</span><span class="sxs-lookup"><span data-stu-id="27c91-378">Acceptable values of `d` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="27c91-379">この範囲外の値の場合、<xref:System.Math.Cos%2A> メソッドは、例外をスローするのではなく `d` を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-379">For values outside this range, the <xref:System.Math.Cos%2A> method returns `d` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-380">次の例では、<xref:System.Math.Cos%2A> を使用して、選択した角度の特定の三角関数 id を評価します。</span><span class="sxs-lookup"><span data-stu-id="27c91-380">The following example uses <xref:System.Math.Cos%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cosh">
      <MemberSignature Language="C#" Value="public static double Cosh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Cosh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Cosh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Cosh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Cosh(double value);" />
      <MemberSignature Language="F#" Value="static member Cosh : double -&gt; double" Usage="System.Math.Cosh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-381">ラジアンで表した角度。</span><span class="sxs-lookup"><span data-stu-id="27c91-381">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="27c91-382">指定された角度のハイパーボリック コサインを返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-382">Returns the hyperbolic cosine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="27c91-383"><paramref name="value" /> のハイパーボリック コサイン。</span><span class="sxs-lookup"><span data-stu-id="27c91-383">The hyperbolic cosine of <paramref name="value" />.</span></span> <span data-ttu-id="27c91-384"><paramref name="value" /> が <see cref="F:System.Double.NegativeInfinity" /> または <see cref="F:System.Double.PositiveInfinity" /> に等しい場合は、<see cref="F:System.Double.PositiveInfinity" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-384">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />, <see cref="F:System.Double.PositiveInfinity" /> is returned.</span></span> <span data-ttu-id="27c91-385"><paramref name="value" /> が <see cref="F:System.Double.NaN" /> に等しい場合は、<see cref="F:System.Double.NaN" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-385">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-386">角度 (`value`) は、ラジアンで指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-386">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="27c91-387">度をラジアンに変換するには、<xref:System.Math.PI?displayProperty=nameWithType>/180 を乗算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-387">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-388">次の例では、<xref:System.Math.Cosh%2A> を使用して、選択した値の特定のハイパーボリック id を評価します。</span><span class="sxs-lookup"><span data-stu-id="27c91-388">The following example uses <xref:System.Math.Cosh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DivRem">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-389">2 つの数値の商を計算し、出力パラメーターの剰余を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-389">Calculates the quotient of two numbers and also returns the remainder in an output parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static int DivRem (int a, int b, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DivRem(int32 a, int32 b, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Integer, b As Integer, ByRef result As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DivRem(int a, int b, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int * int * int -&gt; int" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="b" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="27c91-390">被除数。</span><span class="sxs-lookup"><span data-stu-id="27c91-390">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="27c91-391">除数。</span><span class="sxs-lookup"><span data-stu-id="27c91-391">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="27c91-392">剰余。</span><span class="sxs-lookup"><span data-stu-id="27c91-392">The remainder.</span></span></param>
        <summary><span data-ttu-id="27c91-393">2 つの 32 ビット符号付き整数の商を計算し、出力パラメーターの剰余を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-393">Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="27c91-394">指定した数値の商。</span><span class="sxs-lookup"><span data-stu-id="27c91-394">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-395">剰余の値は、[剰余演算子](/dotnet/csharp/language-reference/operators/remainder-operator)の結果と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="27c91-395">The remainder value equals the result of the [remainder operator](/dotnet/csharp/language-reference/operators/remainder-operator).</span></span>  
   
## Examples  
 <span data-ttu-id="27c91-396"><xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-396">The following example demonstrates the <xref:System.Math.DivRem%28System.Int32%2CSystem.Int32%2CSystem.Int32%40%29> method.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem1.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="27c91-397"><paramref name="b" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-397"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static long DivRem (long a, long b, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DivRem(int64 a, int64 b, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (a As Long, b As Long, ByRef result As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DivRem(long a, long b, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member DivRem : int64 * int64 * int64 -&gt; int64" Usage="System.Math.DivRem (a, b, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="b" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Int64" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="27c91-398">被除数。</span><span class="sxs-lookup"><span data-stu-id="27c91-398">The dividend.</span></span></param>
        <param name="b"><span data-ttu-id="27c91-399">除数。</span><span class="sxs-lookup"><span data-stu-id="27c91-399">The divisor.</span></span></param>
        <param name="result"><span data-ttu-id="27c91-400">剰余。</span><span class="sxs-lookup"><span data-stu-id="27c91-400">The remainder.</span></span></param>
        <summary><span data-ttu-id="27c91-401">2 つの 64 ビット符号付き整数の商を計算し、出力パラメーターの剰余を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-401">Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="27c91-402">指定した数値の商。</span><span class="sxs-lookup"><span data-stu-id="27c91-402">The quotient of the specified numbers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-403">剰余の値は、[剰余演算子](/dotnet/csharp/language-reference/operators/remainder-operator)の結果と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="27c91-403">The remainder value equals the result of the [remainder operator](/dotnet/csharp/language-reference/operators/remainder-operator).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-404"><xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-404">The following example demonstrates the <xref:System.Math.DivRem%28System.Int64%2CSystem.Int64%2CSystem.Int64%40%29> method.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.divrem/cs/divrem2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.divrem/vb/divrem2.vb" id="Snippet2":::  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="27c91-405"><paramref name="b" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-405"><paramref name="b" /> is zero.</span></span></exception>
        <altmember cref="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="E">
      <MemberSignature Language="C#" Value="public const double E = 2.7182818284590451;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 E = (2.7182818284590451)" />
      <MemberSignature Language="DocId" Value="F:System.Math.E" />
      <MemberSignature Language="VB.NET" Value="Public Const E As Double  = 2.7182818284590451" />
      <MemberSignature Language="C++ CLI" Value="public: double E = 2.7182818284590451;" />
      <MemberSignature Language="F#" Value="val mutable E : double" Usage="System.Math.E" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>2.7182818284590451</MemberValue>
      <Docs>
        <summary><span data-ttu-id="27c91-406">定数 <see langword="e" /> によって示される、自然対数の底を表します。</span><span class="sxs-lookup"><span data-stu-id="27c91-406">Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-407">このフィールドの値は2.7182818284590451 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-407">The value of this field is 2.7182818284590451.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-408">次の例では、<xref:System.Math.E> を、指数部から計算された値と比較します。</span><span class="sxs-lookup"><span data-stu-id="27c91-408">The following example compares <xref:System.Math.E> with the value calculated from a power series.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.E/CPP/efield.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.E/CS/efield.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.E/VB/efield.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static double Exp (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exp(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Exp(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exp (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exp(double d);" />
      <MemberSignature Language="F#" Value="static member Exp : double -&gt; double" Usage="System.Math.Exp d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-409">累乗を指定する数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-409">A number specifying a power.</span></span></param>
        <summary><span data-ttu-id="27c91-410">指定した値で <see langword="e" /> を累乗した値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-410">Returns <see langword="e" /> raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="27c91-411">数値 <see langword="e" /> を <paramref name="d" /> で累乗した値。</span><span class="sxs-lookup"><span data-stu-id="27c91-411">The number <see langword="e" /> raised to the power <paramref name="d" />.</span></span> <span data-ttu-id="27c91-412"><paramref name="d" /> が <see cref="F:System.Double.NaN" /> または <see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合は、その値が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-412">If <paramref name="d" /> equals <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span> <span data-ttu-id="27c91-413"><paramref name="d" /> が <see cref="F:System.Double.NegativeInfinity" /> に等しい場合は、0 が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-413">If <paramref name="d" /> equals <see cref="F:System.Double.NegativeInfinity" />, 0 is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-414">`e` は、約2.71828 の値を持つ数値定数です。</span><span class="sxs-lookup"><span data-stu-id="27c91-414">`e` is a mathematical constant whose value is approximately 2.71828.</span></span>  
  
 <span data-ttu-id="27c91-415"><xref:System.Math.Pow%2A> メソッドを使用して、他のベースのべき乗を計算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-415">Use the <xref:System.Math.Pow%2A> method to calculate powers of other bases.</span></span>  
  
 <span data-ttu-id="27c91-416"><xref:System.Math.Exp%2A> は <xref:System.Math.Log%2A>の逆です。</span><span class="sxs-lookup"><span data-stu-id="27c91-416"><xref:System.Math.Exp%2A> is the inverse of <xref:System.Math.Log%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-417">次の例では、<xref:System.Math.Exp%2A> を使用して、選択した値の特定の指数と対数の id を評価します。</span><span class="sxs-lookup"><span data-stu-id="27c91-417">The following example uses <xref:System.Math.Exp%2A> to evaluate certain exponential and logarithmic identities for selected values.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Exp/CPP/exp.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Exp/CS/exp.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Exp/VB/exp.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
        <altmember cref="M:System.Math.Log(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Floor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-418">指定した数以下の数のうち、最大の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-418">Returns the largest integral value less than or equal to the specified number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-419">このメソッドの動作は、IEEE Standard 754 のセクション4に従います。</span><span class="sxs-lookup"><span data-stu-id="27c91-419">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="27c91-420">この種類の丸め処理は、負の無限大方向の丸めと呼ばれることもあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-420">This kind of rounding is sometimes called rounding toward negative infinity.</span></span>  

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static decimal Floor (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Floor(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Floor(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Floor : decimal -&gt; decimal" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-421">10 進数。</span><span class="sxs-lookup"><span data-stu-id="27c91-421">A decimal number.</span></span></param>
        <summary><span data-ttu-id="27c91-422">指定した 10 進数以下の数のうち、最大の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-422">Returns the largest integral value less than or equal to the specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="27c91-423"><paramref name="d" /> 以下の最大の整数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-423">The largest integral value less than or equal to <paramref name="d" />.</span></span>  <span data-ttu-id="27c91-424">このメソッドは、<see cref="T:System.Decimal" /> 型の整数値を返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-424">Note that the method returns an integral value of type <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-425">このメソッドの動作は、IEEE Standard 754 のセクション4に従います。</span><span class="sxs-lookup"><span data-stu-id="27c91-425">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="27c91-426">この種類の丸め処理は、負の無限大方向の丸めと呼ばれることもあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-426">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="27c91-427">つまり、`d` が正の場合、小数部分は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="27c91-427">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="27c91-428">`d` が負の場合は、小数部分が存在することにより、それより小さい整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-428">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="27c91-429">このメソッドの操作は、正の無限大方向への丸め処理をサポートする <xref:System.Math.Ceiling%2A> メソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="27c91-429">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

## Examples  
 <span data-ttu-id="27c91-430">次の例は、<xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> メソッドを示し、<xref:System.Math.Ceiling%28System.Decimal%29> メソッドと比較しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-430">The following example illustrates the <xref:System.Math.Floor%28System.Decimal%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Decimal%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#1)]
 [!code-vb[System.Math.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Decimal.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static double Floor (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Floor(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Floor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Floor (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Floor(double d);" />
      <MemberSignature Language="F#" Value="static member Floor : double -&gt; double" Usage="System.Math.Floor d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-431">倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-431">A double-precision floating-point number.</span></span></param>
        <summary><span data-ttu-id="27c91-432">指定した倍精度浮動小数点数以下の数のうち、最大の整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-432">Returns the largest integral value less than or equal to the specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="27c91-433"><paramref name="d" /> 以下の最大の整数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-433">The largest integral value less than or equal to <paramref name="d" />.</span></span> <span data-ttu-id="27c91-434"><paramref name="d" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合は、その値が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-434">If <paramref name="d" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, that value is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-435">このメソッドの動作は、IEEE Standard 754 のセクション4に従います。</span><span class="sxs-lookup"><span data-stu-id="27c91-435">The behavior of this method follows IEEE Standard 754, section 4.</span></span> <span data-ttu-id="27c91-436">この種類の丸め処理は、負の無限大方向の丸めと呼ばれることもあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-436">This kind of rounding is sometimes called rounding toward negative infinity.</span></span> <span data-ttu-id="27c91-437">つまり、`d` が正の場合、小数部分は切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="27c91-437">In other words, if `d` is positive, any fractional component is truncated.</span></span> <span data-ttu-id="27c91-438">`d` が負の場合は、小数部分が存在することにより、それより小さい整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-438">If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</span></span> <span data-ttu-id="27c91-439">このメソッドの操作は、正の無限大方向への丸め処理をサポートする <xref:System.Math.Ceiling%2A> メソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="27c91-439">The operation of this method differs from the <xref:System.Math.Ceiling%2A> method, which supports rounding toward positive infinity.</span></span>  

<span data-ttu-id="27c91-440">Visual Basic 15.8 以降では、`Floor` メソッドから返された値を任意の[整数変換関数](/dotnet/visual-basic/language-reference/functions/conversion-functions)に渡す場合、または `Floor` によって返される double 値が[Option Strict](/dotnet/visual-basic/language-reference/statements/option-strict-statement)が Off に設定されている整数に自動的に変換される場合は、倍精度整数変換のパフォーマンスが最適化されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-440">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Floor` method to the any of the [integral conversion functions](/dotnet/visual-basic/language-reference/functions/conversion-functions), or if the Double value returned by `Floor` is automatically converted to an integer with [Option Strict](/dotnet/visual-basic/language-reference/statements/option-strict-statement) set to Off.</span></span> <span data-ttu-id="27c91-441">この最適化によって、コードをより速く実行できます。大きい数値の整数型への変換を行うコードでは、最大で 2 倍速くなります。</span><span class="sxs-lookup"><span data-stu-id="27c91-441">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="27c91-442">次の例は、このような最適化された変換を示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-442">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1043

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

## Examples  
 <span data-ttu-id="27c91-443">次の例は、<xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> メソッドを示し、<xref:System.Math.Ceiling%28System.Double%29> メソッドと比較しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-443">The following example illustrates the <xref:System.Math.Floor%28System.Double%29?displayProperty=nameWithType> method and contrasts it with the <xref:System.Math.Ceiling%28System.Double%29> method.</span></span>  
  
 [!code-csharp-interactive[System.Math.Ceiling#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Ceiling/cs/Ceiling1.cs#2)]
 [!code-vb[System.Math.Ceiling#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Ceiling/vb/Ceiling1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FusedMultiplyAdd">
      <MemberSignature Language="C#" Value="public static double FusedMultiplyAdd (double x, double y, double z);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 FusedMultiplyAdd(float64 x, float64 y, float64 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.FusedMultiplyAdd(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FusedMultiplyAdd (x As Double, y As Double, z As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double FusedMultiplyAdd(double x, double y, double z);" />
      <MemberSignature Language="F#" Value="static member FusedMultiplyAdd : double * double * double -&gt; double" Usage="System.Math.FusedMultiplyAdd (x, y, z)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="z" Type="System.Double" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-444"><paramref name="y" /> と乗算する数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-444">The number to be multiplied with <paramref name="y" />.</span></span></param>
        <param name="y"><span data-ttu-id="27c91-445"><paramref name="x" /> と乗算する数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-445">The number to be multiplied with <paramref name="x" />.</span></span></param>
        <param name="z"><span data-ttu-id="27c91-446"><paramref name="x" /> に <paramref name="y" /> を乗算した結果に加算される数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-446">The number to be added to the result of <paramref name="x" /> multiplied by <paramref name="y" />.</span></span></param>
        <summary><span data-ttu-id="27c91-447">1 つの三項演算として丸められた、(x \* y) + z を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-447">Returns (x \* y) + z, rounded as one ternary operation.</span></span></summary>
        <returns><span data-ttu-id="27c91-448">1 つの三項演算として丸められた、(x \* y) + z。</span><span class="sxs-lookup"><span data-stu-id="27c91-448">(x \* y) + z, rounded as one ternary operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-449">これは、無期限の有効桁数の場合と同様に `(x * y)` を計算し、無限精度になるかのように結果に `z` を追加し、最後に最も近い表現可能な値に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-449">This computes `(x * y)` as if to infinite precision, adds `z` to that result as if to infinite precision, and finally rounds to the nearest representable value.</span></span>
  
 <span data-ttu-id="27c91-450">これは非ヒューズのシーケンスとは異なります。これは、精度が無限であるかのように `(x * y)` を計算し、結果を最も近い表現可能な値に丸めて、無限の精度になるように丸められた結果に `z` を加算し、最後に最も近い表現可能な値に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-450">This differs from the non-fused sequence which would compute `(x * y)` as if to infinite precision, round the result to the nearest representable value, add `z` to the rounded result as if to infinite precision, and finally round to the nearest representable value.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IEEERemainder">
      <MemberSignature Language="C#" Value="public static double IEEERemainder (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 IEEERemainder(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.IEEERemainder(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IEEERemainder (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double IEEERemainder(double x, double y);" />
      <MemberSignature Language="F#" Value="static member IEEERemainder : double * double -&gt; double" Usage="System.Math.IEEERemainder (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-451">被除数。</span><span class="sxs-lookup"><span data-stu-id="27c91-451">A dividend.</span></span></param>
        <param name="y"><span data-ttu-id="27c91-452">除数。</span><span class="sxs-lookup"><span data-stu-id="27c91-452">A divisor.</span></span></param>
        <summary><span data-ttu-id="27c91-453">指定した数を別の指定数で除算した結果の剰余を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-453">Returns the remainder resulting from the division of a specified number by another specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-454"><paramref name="x" /> - (<paramref name="y" /> Q) に等しい数値。Q は <paramref name="x" /> / <paramref name="y" /> の商を丸めた近似整数を示します。<paramref name="x" /> / <paramref name="y" /> が 2 つの整数の中間に位置する場合は、偶数の整数が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-454">A number equal to <paramref name="x" /> - (<paramref name="y" /> Q), where Q is the quotient of <paramref name="x" /> / <paramref name="y" /> rounded to the nearest integer (if <paramref name="x" /> / <paramref name="y" /> falls halfway between two integers, the even integer is returned).</span></span>  
  
<span data-ttu-id="27c91-455"><paramref name="x" /> - (<paramref name="y" /> Q) がゼロのとき、<paramref name="x" /> が正である場合は値 +0、<paramref name="x" /> が負である場合は -0 が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-455">If <paramref name="x" /> - (<paramref name="y" /> Q) is zero, the value +0 is returned if <paramref name="x" /> is positive, or -0 if <paramref name="x" /> is negative.</span></span>  
  
<span data-ttu-id="27c91-456"><paramref name="y" /> = 0 の場合は、<see cref="F:System.Double.NaN" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-456">If <paramref name="y" /> = 0, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-457">この操作は、ANSI/IEEE Std 754-1985 のセクション5.1 で定義されている剰余演算に準拠しています。バイナリ浮動小数点演算の IEEE 標準電化技術研究所、Inc.1985。</span><span class="sxs-lookup"><span data-stu-id="27c91-457">This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</span></span>  
  
 <span data-ttu-id="27c91-458"><xref:System.Math.IEEERemainder%2A> メソッドは、[剰余演算子](/dotnet/csharp/language-reference/operators/remainder-operator)と同じではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-458">The <xref:System.Math.IEEERemainder%2A> method is not the same as the [remainder operator](/dotnet/csharp/language-reference/operators/remainder-operator).</span></span> <span data-ttu-id="27c91-459">どちらも除算後の剰余を返しますが、使用する数式は異なります。</span><span class="sxs-lookup"><span data-stu-id="27c91-459">Although both return the remainder after division, the formulas they use are different.</span></span> <span data-ttu-id="27c91-460"><xref:System.Math.IEEERemainder%2A> メソッドの式は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="27c91-460">The formula for the <xref:System.Math.IEEERemainder%2A> method is:</span></span>  
  
```  
IEEERemainder = dividend - (divisor * Math.Round(dividend / divisor))  
```  
  
 <span data-ttu-id="27c91-461">これに対し、剰余演算子の数式は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="27c91-461">In contrast, the formula for the remainder operator is:</span></span>  
  
```  
Remainder = (Math.Abs(dividend) - (Math.Abs(divisor) *   
            (Math.Floor(Math.Abs(dividend) / Math.Abs(divisor))))) *   
            Math.Sign(dividend)  
```  
  
   
  
## Examples  
 <span data-ttu-id="27c91-462">次の例では、<xref:System.Math.IEEERemainder%2A> メソッドによって返される剰余と、剰余[演算子](/dotnet/csharp/language-reference/operators/remainder-operator)によって返される剰余を比較しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-462">The following example contrasts the remainder returned by the <xref:System.Math.IEEERemainder%2A> method with the remainder returned by the [remainder operator](/dotnet/csharp/language-reference/operators/remainder-operator).</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.ieeeremainder/cs/ieeeremainder1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.ieeeremainder/vb/ieeeremainder1.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ILogB">
      <MemberSignature Language="C#" Value="public static int ILogB (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ILogB(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.ILogB(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ILogB (x As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ILogB(double x);" />
      <MemberSignature Language="F#" Value="static member ILogB : double -&gt; int" Usage="System.Math.ILogB x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-463">対数を求める対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-463">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="27c91-464">指定した数の底 2 の整数の対数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-464">Returns the base 2 integer logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-465">次の表に示した値のいずれか</span><span class="sxs-lookup"><span data-stu-id="27c91-465">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="27c91-466"><paramref name="x" /> パラメーター</span><span class="sxs-lookup"><span data-stu-id="27c91-466"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="27c91-467">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-467">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-468">Default</span><span class="sxs-lookup"><span data-stu-id="27c91-468">Default</span></span> 
 </term><description> <span data-ttu-id="27c91-469"><paramref name="x" /> の底 2 の整数の対数。つまり、(int)log2(<paramref name="x" />)。</span><span class="sxs-lookup"><span data-stu-id="27c91-469">The base 2 integer log of <paramref name="x" />; that is, (int)log2(<paramref name="x" />).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-470">ゼロ</span><span class="sxs-lookup"><span data-stu-id="27c91-470">Zero</span></span> 
 </term><description><see cref="F:System.Int32.MinValue" /></description></item><item><term> <span data-ttu-id="27c91-471"><see cref="F:System.Double.NaN" /> または <see cref="F:System.Double.PositiveInfinity" /> または <see cref="F:System.Double.NegativeInfinity" /> と等しい</span><span class="sxs-lookup"><span data-stu-id="27c91-471">Equal to <see cref="F:System.Double.NaN" /> or <see cref="F:System.Double.PositiveInfinity" /> or <see cref="F:System.Double.NegativeInfinity" /></span></span></term><description><see cref="F:System.Int32.MaxValue" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-472">パラメーター `x` が10進数として指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-472">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-473">指定した数の対数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-473">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double d);" />
      <MemberSignature Language="F#" Value="static member Log : double -&gt; double" Usage="System.Math.Log d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-474">対数を求める対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-474">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="27c91-475">指定した数の自然 (底 <see langword="e" />) 対数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-475">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-476">次の表に示した値のいずれか</span><span class="sxs-lookup"><span data-stu-id="27c91-476">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="27c91-477"><paramref name="d" /> パラメーター</span><span class="sxs-lookup"><span data-stu-id="27c91-477"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="27c91-478">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-478">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-479">Positive</span><span class="sxs-lookup"><span data-stu-id="27c91-479">Positive</span></span> 
 </term><description> <span data-ttu-id="27c91-480"><paramref name="d" /> の自然対数。つまり、ln <paramref name="d" /> または log e <paramref name="d" /></span><span class="sxs-lookup"><span data-stu-id="27c91-480">The natural logarithm of <paramref name="d" />; that is, ln <paramref name="d" />, or log e <paramref name="d" /></span></span></description></item><item><term> <span data-ttu-id="27c91-481">ゼロ</span><span class="sxs-lookup"><span data-stu-id="27c91-481">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="27c91-482">Negative</span><span class="sxs-lookup"><span data-stu-id="27c91-482">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="27c91-483"><see cref="F:System.Double.NaN" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="27c91-483">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="27c91-484"><see cref="F:System.Double.PositiveInfinity" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="27c91-484">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-485">パラメーター `d` が10進数として指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-485">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-486">次の例は、<xref:System.Math.Log%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-486">The following example illustrates the <xref:System.Math.Log%2A> method.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/log1.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/log1.vb" id="Snippet2":::  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Math.E" />
        <altmember cref="M:System.Math.Exp(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (double a, double newBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(float64 a, float64 newBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (a As Double, newBase As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(double a, double newBase);" />
      <MemberSignature Language="F#" Value="static member Log : double * double -&gt; double" Usage="System.Math.Log (a, newBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
        <Parameter Name="newBase" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="27c91-487">対数を求める対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-487">The number whose logarithm is to be found.</span></span></param>
        <param name="newBase"><span data-ttu-id="27c91-488">対数の底。</span><span class="sxs-lookup"><span data-stu-id="27c91-488">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="27c91-489">指定した数値の指定した底での対数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-489">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="27c91-490">次の表に示した値のいずれか</span><span class="sxs-lookup"><span data-stu-id="27c91-490">One of the values in the following table.</span></span> <span data-ttu-id="27c91-491">(+Infinity は <see cref="F:System.Double.PositiveInfinity" />、-Infinity は <see cref="F:System.Double.NegativeInfinity" />、NaN は <see cref="F:System.Double.NaN" /> をそれぞれ示しています。)</span><span class="sxs-lookup"><span data-stu-id="27c91-491">(+Infinity denotes <see cref="F:System.Double.PositiveInfinity" />, -Infinity denotes <see cref="F:System.Double.NegativeInfinity" />, and NaN denotes <see cref="F:System.Double.NaN" />.)</span></span> 
 <list type="table"><listheader><term><paramref name="a" /></term><description><paramref name="newBase" /></description><description> <span data-ttu-id="27c91-492">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-492">Return value</span></span> 
 </description></listheader><item><term><span data-ttu-id="27c91-493"><paramref name="a" />&gt; 0</span><span class="sxs-lookup"><span data-stu-id="27c91-493"><paramref name="a" />&gt; 0</span></span> 
 </term><description> <span data-ttu-id="27c91-494">(0 &lt;<paramref name="newBase" />&lt; 1) - または -(<paramref name="newBase" />&gt; 1)</span><span class="sxs-lookup"><span data-stu-id="27c91-494">(0 &lt;<paramref name="newBase" />&lt; 1) -or-(<paramref name="newBase" />&gt; 1)</span></span> 
 </description><description> <span data-ttu-id="27c91-495">lognewBase(a)</span><span class="sxs-lookup"><span data-stu-id="27c91-495">lognewBase(a)</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-496"><paramref name="a" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="27c91-496"><paramref name="a" />&lt; 0</span></span> 
 </term><description> <span data-ttu-id="27c91-497">(任意の値)</span><span class="sxs-lookup"><span data-stu-id="27c91-497">(any value)</span></span> 
 </description><description> <span data-ttu-id="27c91-498">(NaN)</span><span class="sxs-lookup"><span data-stu-id="27c91-498">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="27c91-499">(任意の値)</span><span class="sxs-lookup"><span data-stu-id="27c91-499">(any value)</span></span> 
 </term><description><span data-ttu-id="27c91-500"><paramref name="newBase" />&lt; 0</span><span class="sxs-lookup"><span data-stu-id="27c91-500"><paramref name="newBase" />&lt; 0</span></span> 
 </description><description> <span data-ttu-id="27c91-501">(NaN)</span><span class="sxs-lookup"><span data-stu-id="27c91-501">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-502"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="27c91-502"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="27c91-503"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="27c91-503"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="27c91-504">(NaN)</span><span class="sxs-lookup"><span data-stu-id="27c91-504">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-505"><paramref name="a" /> != 1</span><span class="sxs-lookup"><span data-stu-id="27c91-505"><paramref name="a" /> != 1</span></span> 
 </term><description><span data-ttu-id="27c91-506"><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="27c91-506"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="27c91-507">(NaN)</span><span class="sxs-lookup"><span data-stu-id="27c91-507">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-508"><paramref name="a" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="27c91-508"><paramref name="a" /> = NaN</span></span> 
 </term><description> <span data-ttu-id="27c91-509">(任意の値)</span><span class="sxs-lookup"><span data-stu-id="27c91-509">(any value)</span></span> 
 </description><description> <span data-ttu-id="27c91-510">(NaN)</span><span class="sxs-lookup"><span data-stu-id="27c91-510">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="27c91-511">(任意の値)</span><span class="sxs-lookup"><span data-stu-id="27c91-511">(any value)</span></span> 
 </term><description><span data-ttu-id="27c91-512"><paramref name="newBase" /> = NaN</span><span class="sxs-lookup"><span data-stu-id="27c91-512"><paramref name="newBase" /> = NaN</span></span> 
 </description><description> <span data-ttu-id="27c91-513">(NaN)</span><span class="sxs-lookup"><span data-stu-id="27c91-513">NaN</span></span> 
 </description></item><item><term> <span data-ttu-id="27c91-514">(任意の値)</span><span class="sxs-lookup"><span data-stu-id="27c91-514">(any value)</span></span> 
 </term><description><span data-ttu-id="27c91-515"><paramref name="newBase" /> = 1</span><span class="sxs-lookup"><span data-stu-id="27c91-515"><paramref name="newBase" /> = 1</span></span> 
 </description><description> <span data-ttu-id="27c91-516">(NaN)</span><span class="sxs-lookup"><span data-stu-id="27c91-516">NaN</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-517"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="27c91-517"><paramref name="a" /> = 0</span></span> 
 </term><description> <span data-ttu-id="27c91-518">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="27c91-518">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="27c91-519">+Infinity</span><span class="sxs-lookup"><span data-stu-id="27c91-519">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-520"><paramref name="a" /> = 0</span><span class="sxs-lookup"><span data-stu-id="27c91-520"><paramref name="a" /> = 0</span></span> 
 </term><description><span data-ttu-id="27c91-521"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="27c91-521"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="27c91-522">-Infinity</span><span class="sxs-lookup"><span data-stu-id="27c91-522">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-523"><paramref name="a" /> =  +無限大</span><span class="sxs-lookup"><span data-stu-id="27c91-523"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description> <span data-ttu-id="27c91-524">0 &lt;<paramref name="newBase" />&lt; 1</span><span class="sxs-lookup"><span data-stu-id="27c91-524">0 &lt;<paramref name="newBase" />&lt; 1</span></span> 
 </description><description> <span data-ttu-id="27c91-525">-Infinity</span><span class="sxs-lookup"><span data-stu-id="27c91-525">-Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-526"><paramref name="a" /> =  +無限大</span><span class="sxs-lookup"><span data-stu-id="27c91-526"><paramref name="a" /> =  +Infinity</span></span> 
 </term><description><span data-ttu-id="27c91-527"><paramref name="newBase" />&gt; 1</span><span class="sxs-lookup"><span data-stu-id="27c91-527"><paramref name="newBase" />&gt; 1</span></span> 
 </description><description> <span data-ttu-id="27c91-528">+Infinity</span><span class="sxs-lookup"><span data-stu-id="27c91-528">+Infinity</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-529"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="27c91-529"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="27c91-530"><paramref name="newBase" /> = 0</span><span class="sxs-lookup"><span data-stu-id="27c91-530"><paramref name="newBase" /> = 0</span></span> 
 </description><description> <span data-ttu-id="27c91-531">0</span><span class="sxs-lookup"><span data-stu-id="27c91-531">0</span></span> 
 </description></item><item><term><span data-ttu-id="27c91-532"><paramref name="a" /> = 1</span><span class="sxs-lookup"><span data-stu-id="27c91-532"><paramref name="a" /> = 1</span></span> 
 </term><description><span data-ttu-id="27c91-533"><paramref name="newBase" /> = +Infinity</span><span class="sxs-lookup"><span data-stu-id="27c91-533"><paramref name="newBase" /> = +Infinity</span></span> 
 </description><description> <span data-ttu-id="27c91-534">0</span><span class="sxs-lookup"><span data-stu-id="27c91-534">0</span></span> 
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-535">次の例では、<xref:System.Math.Log%2A> を使用して、選択した値の特定の対数の id を評価します。</span><span class="sxs-lookup"><span data-stu-id="27c91-535">The following example uses <xref:System.Math.Log%2A> to evaluate certain logarithmic identities for selected values.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CPP/loggen.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log_Overloads/CS/loggen.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log_Overloads/VB/loggen.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log10(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(double d);" />
      <MemberSignature Language="F#" Value="static member Log10 : double -&gt; double" Usage="System.Math.Log10 d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-536">対数を検索する対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-536">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="27c91-537">指定した数の底 10 の対数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-537">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-538">次の表に示した値のいずれか</span><span class="sxs-lookup"><span data-stu-id="27c91-538">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="27c91-539"><paramref name="d" /> パラメーター</span><span class="sxs-lookup"><span data-stu-id="27c91-539"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="27c91-540">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-540">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-541">Positive</span><span class="sxs-lookup"><span data-stu-id="27c91-541">Positive</span></span> 
 </term><description> <span data-ttu-id="27c91-542"><paramref name="d" /> の底 10 の log。つまり、log 10<paramref name="d" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-542">The base 10 log of <paramref name="d" />; that is, log 10<paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-543">ゼロ</span><span class="sxs-lookup"><span data-stu-id="27c91-543">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="27c91-544">Negative</span><span class="sxs-lookup"><span data-stu-id="27c91-544">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="27c91-545"><see cref="F:System.Double.NaN" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="27c91-545">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="27c91-546"><see cref="F:System.Double.PositiveInfinity" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="27c91-546">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-547">パラメーター `d` が10進数として指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-547">Parameter `d` is specified as a base 10 number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-548">次の例では、<xref:System.Math.Log10%2A> メソッドを使用して、選択した値の10を底とする対数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-548">The following example uses the <xref:System.Math.Log10%2A> method to return the base 10 logarithm for selected values.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Log10/CS/log10.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Log10/VB/log10.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static double Log2 (double x);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log2(float64 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Log2(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (x As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log2(double x);" />
      <MemberSignature Language="F#" Value="static member Log2 : double -&gt; double" Usage="System.Math.Log2 x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-549">対数を検索する対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-549">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="27c91-550">指定した数の底 2 の対数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-550">Returns the base 2 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-551">次の表に示した値のいずれか</span><span class="sxs-lookup"><span data-stu-id="27c91-551">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="27c91-552"><paramref name="x" /> パラメーター</span><span class="sxs-lookup"><span data-stu-id="27c91-552"><paramref name="x" /> parameter</span></span> 
 </term><description> <span data-ttu-id="27c91-553">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-553">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-554">Positive</span><span class="sxs-lookup"><span data-stu-id="27c91-554">Positive</span></span> 
 </term><description> <span data-ttu-id="27c91-555"><paramref name="x" /> の底 2 の対数。つまり、log 2<paramref name="x" />。</span><span class="sxs-lookup"><span data-stu-id="27c91-555">The base 2 log of <paramref name="x" />; that is, log 2<paramref name="x" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-556">ゼロ</span><span class="sxs-lookup"><span data-stu-id="27c91-556">Zero</span></span> 
 </term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term> <span data-ttu-id="27c91-557">Negative</span><span class="sxs-lookup"><span data-stu-id="27c91-557">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="27c91-558"><see cref="F:System.Double.NaN" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="27c91-558">Equal to <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="27c91-559"><see cref="F:System.Double.PositiveInfinity" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="27c91-559">Equal to <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-560">パラメーター `x` が10進数として指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-560">Parameter `x` is specified as a base 10 number.</span></span>   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Max">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-561">指定された 2 つの数のうち、大きい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-561">Returns the larger of two specified numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

<span data-ttu-id="27c91-562">次の例では、<xref:System.Math.Max%2A> メソッドを使用して、2つの変数のうち大きい方の値を返して表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-562">The following example demonstrates how to use the <xref:System.Math.Max%2A> method to return and display the greater of two variables:</span></span>

[!code-cpp[Math.Max#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.max/CPP/max.cpp#1)]
[!code-csharp-interactive[Math.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.max/CS/max.cs#1)]
[!code-vb[Math.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.max/VB/max.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static byte Max (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Max(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Max(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Max : byte * byte -&gt; byte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-563">比較する 2 つの 8 ビット符号なし整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-563">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-564">比較する 2 つの 8 ビット符号なし整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-564">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-565">2 つの 8 ビット符号なし整数のうち、大きな方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-565">Returns the larger of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-566">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-566">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static decimal Max (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Max(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Max(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Max : decimal * decimal -&gt; decimal" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-567">比較する 2 つの 10 進数の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-567">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-568">比較する 2 つの 10 進数の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-568">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-569">2 つの 10 進数のうち、大きい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-569">Returns the larger of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-570">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-570">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static double Max (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Max(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Max(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Max : double * double -&gt; double" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-571">比較する 2 つの倍精度浮動小数点数の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-571">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-572">比較する 2 つの倍精度浮動小数点数の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-572">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-573">2 つの倍精度浮動小数点数のうち、大きい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-573">Returns the larger of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-574">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-574">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="27c91-575"><paramref name="val1" />、<paramref name="val2" />、または <paramref name="val1" /> と <paramref name="val2" /> の両方が <see cref="F:System.Double.NaN" /> に等しい場合、<see cref="F:System.Double.NaN" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-575">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static short Max (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Max(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Max(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Max : int16 * int16 -&gt; int16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-576">比較する 2 つの 16 ビット符号付き整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-576">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-577">比較する 2 つの 16 ビット符号付き整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-577">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-578">2 つの 16 ビット符号付き整数のうち、大きい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-578">Returns the larger of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-579">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-579">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static int Max (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Max(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Max(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Max : int * int -&gt; int" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-580">比較する 2 つの 32 ビット符号付き整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-580">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-581">比較する 2 つの 32 ビット符号付き整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-581">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-582">2 つの 32 ビット符号付き整数のうち、大きい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-582">Returns the larger of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-583">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-583">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static long Max (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Max(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Max(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Max : int64 * int64 -&gt; int64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-584">比較する 2 つの 64 ビット符号付き整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-584">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-585">比較する 2 つの 64 ビット符号付き整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-585">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-586">2 つの 64 ビット符号付き整数のうち、大きい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-586">Returns the larger of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-587">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-587">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static sbyte Max (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Max(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Max(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Max : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-588">比較する 2 つの 8 ビット符号付き整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-588">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-589">比較する 2 つの 8 ビット符号付き整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-589">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-590">2 つの 8 ビット符号付き整数のうち、大きい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-590">Returns the larger of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-591">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-591">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static float Max (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Max(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Max(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Max : single * single -&gt; single" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-592">比較する 2 つの単精度浮動小数点数の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-592">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-593">比較する 2 つの単精度浮動小数点数の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-593">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-594">2 つの単精度浮動小数点数のうち、大きい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-594">Returns the larger of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-595">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-595">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span> <span data-ttu-id="27c91-596"><paramref name="val1" />、または <paramref name="val2" />、または <paramref name="val1" /> と <paramref name="val2" /> の両方が <see cref="F:System.Single.NaN" /> に等しい場合、<see cref="F:System.Single.NaN" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-596">If <paramref name="val1" />, or <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ushort Max (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Max(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Max(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint16 * uint16 -&gt; uint16" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-597">比較する 2 つの 16 ビット符号なし整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-597">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-598">比較する 2 つの 16 ビット符号なし整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-598">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-599">2 つの 16 ビット符号なし整数のうち、大きな方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-599">Returns the larger of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-600">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-600">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static uint Max (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Max(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Max(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint32 * uint32 -&gt; uint32" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-601">比較する 2 つの 32 ビット符号なし整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-601">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-602">比較する 2 つの 32 ビット符号なし整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-602">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-603">2 つの 32 ビット符号なし整数のうち、大きな方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-603">Returns the larger of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-604">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-604">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static ulong Max (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Max(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Max(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Max(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Max : uint64 * uint64 -&gt; uint64" Usage="System.Math.Max (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-605">比較する 2 つの 64 ビット符号なし整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-605">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-606">比較する 2 つの 64 ビット符号なし整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-606">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-607">2 つの 64 ビット符号なし整数のうち、大きな方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-607">Returns the larger of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-608">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-608">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is larger.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMagnitude">
      <MemberSignature Language="C#" Value="public static double MaxMagnitude (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 MaxMagnitude(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.MaxMagnitude(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MaxMagnitude (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MaxMagnitude(double x, double y);" />
      <MemberSignature Language="F#" Value="static member MaxMagnitude : double * double -&gt; double" Usage="System.Math.MaxMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-609">比較する 2 つの倍精度浮動小数点数の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-609">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="27c91-610">比較する 2 つの倍精度浮動小数点数の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-610">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-611">2 つの倍精度浮動小数点数のうち、大きい絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-611">Returns the larger magnitude of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-612">パラメーター <paramref name="x" /> または <paramref name="y" /> のうち、絶対値が大きい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-612">Parameter <paramref name="x" /> or <paramref name="y" />, whichever has the larger magnitude.</span></span> <span data-ttu-id="27c91-613"><paramref name="x" />、または <paramref name="y" />、または <paramref name="x" /> と <paramref name="y" /> の両方が <see cref="F:System.Double.NaN" /> に等しい場合、<see cref="F:System.Double.NaN" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-613">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Min">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-614">2 つの数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-614">Returns the smaller of two numbers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Examples

<span data-ttu-id="27c91-615">次の例では、<xref:System.Math.Min%2A> メソッドを使用して、2つの変数のうち小さい方の値を返して表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-615">The following example demonstrates how to use the <xref:System.Math.Min%2A> method to return and display the smaller of two variables:</span></span>

[!code-cpp[Math.Min#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.min/CPP/min.cpp#1)]
[!code-csharp-interactive[Math.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.min/CS/min.cs#1)]
[!code-vb[Math.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.min/VB/min.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static byte Min (byte val1, byte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Min(unsigned int8 val1, unsigned int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Byte,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Byte, val2 As Byte) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Min(System::Byte val1, System::Byte val2);" />
      <MemberSignature Language="F#" Value="static member Min : byte * byte -&gt; byte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Byte" />
        <Parameter Name="val2" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-616">比較する 2 つの 8 ビット符号なし整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-616">The first of two 8-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-617">比較する 2 つの 8 ビット符号なし整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-617">The second of two 8-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-618">2 つの 8 ビット符号なし整数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-618">Returns the smaller of two 8-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-619">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-619">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static decimal Min (decimal val1, decimal val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Min(valuetype System.Decimal val1, valuetype System.Decimal val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Decimal,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Decimal, val2 As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Min(System::Decimal val1, System::Decimal val2);" />
      <MemberSignature Language="F#" Value="static member Min : decimal * decimal -&gt; decimal" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Decimal" />
        <Parameter Name="val2" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-620">比較する 2 つの 10 進数の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-620">The first of two decimal numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-621">比較する 2 つの 10 進数の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-621">The second of two decimal numbers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-622">2 つの 10 進数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-622">Returns the smaller of two decimal numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-623">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-623">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static double Min (double val1, double val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Min(float64 val1, float64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Double, val2 As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Min(double val1, double val2);" />
      <MemberSignature Language="F#" Value="static member Min : double * double -&gt; double" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Double" />
        <Parameter Name="val2" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-624">比較する 2 つの倍精度浮動小数点数の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-624">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-625">比較する 2 つの倍精度浮動小数点数の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-625">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-626">2 つの倍精度浮動小数点数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-626">Returns the smaller of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-627">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-627">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="27c91-628"><paramref name="val1" />、<paramref name="val2" />、または <paramref name="val1" /> と <paramref name="val2" /> の両方が <see cref="F:System.Double.NaN" /> に等しい場合、<see cref="F:System.Double.NaN" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-628">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static short Min (short val1, short val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Min(int16 val1, int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int16,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Short, val2 As Short) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Min(short val1, short val2);" />
      <MemberSignature Language="F#" Value="static member Min : int16 * int16 -&gt; int16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int16" />
        <Parameter Name="val2" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-629">比較する 2 つの 16 ビット符号付き整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-629">The first of two 16-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-630">比較する 2 つの 16 ビット符号付き整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-630">The second of two 16-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-631">2 つの 16 ビット符号付き整数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-631">Returns the smaller of two 16-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-632">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-632">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static int Min (int val1, int val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Min(int32 val1, int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Integer, val2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Min(int val1, int val2);" />
      <MemberSignature Language="F#" Value="static member Min : int * int -&gt; int" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int32" />
        <Parameter Name="val2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-633">比較する 2 つの 32 ビット符号付き整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-633">The first of two 32-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-634">比較する 2 つの 32 ビット符号付き整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-634">The second of two 32-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-635">2 つの 32 ビット符号付き整数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-635">Returns the smaller of two 32-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-636">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-636">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static long Min (long val1, long val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Min(int64 val1, int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Long, val2 As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Min(long val1, long val2);" />
      <MemberSignature Language="F#" Value="static member Min : int64 * int64 -&gt; int64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Int64" />
        <Parameter Name="val2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-637">比較する 2 つの 64 ビット符号付き整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-637">The first of two 64-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-638">比較する 2 つの 64 ビット符号付き整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-638">The second of two 64-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-639">2 つの 64 ビット符号付き整数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-639">Returns the smaller of two 64-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-640">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-640">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static sbyte Min (sbyte val1, sbyte val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 Min(int8 val1, int8 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.SByte,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As SByte, val2 As SByte) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte Min(System::SByte val1, System::SByte val2);" />
      <MemberSignature Language="F#" Value="static member Min : sbyte * sbyte -&gt; sbyte" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.SByte" />
        <Parameter Name="val2" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-641">比較する 2 つの 8 ビット符号付き整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-641">The first of two 8-bit signed integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-642">比較する 2 つの 8 ビット符号付き整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-642">The second of two 8-bit signed integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-643">2 つの 8 ビット符号付き整数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-643">Returns the smaller of two 8-bit signed integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-644">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-644">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static float Min (float val1, float val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Min(float32 val1, float32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As Single, val2 As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Min(float val1, float val2);" />
      <MemberSignature Language="F#" Value="static member Min : single * single -&gt; single" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.Single" />
        <Parameter Name="val2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-645">比較する 2 つの単精度浮動小数点数の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-645">The first of two single-precision floating-point numbers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-646">比較する 2 つの単精度浮動小数点数の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-646">The second of two single-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-647">2 つの単精度浮動小数点数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-647">Returns the smaller of two single-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-648">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-648">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span> <span data-ttu-id="27c91-649"><paramref name="val1" />、<paramref name="val2" />、または <paramref name="val1" /> と <paramref name="val2" /> の両方が <see cref="F:System.Single.NaN" /> に等しい場合、<see cref="F:System.Single.NaN" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-649">If <paramref name="val1" />, <paramref name="val2" />, or both <paramref name="val1" /> and <paramref name="val2" /> are equal to <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NaN" /> is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ushort Min (ushort val1, ushort val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 Min(unsigned int16 val1, unsigned int16 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt16,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UShort, val2 As UShort) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 Min(System::UInt16 val1, System::UInt16 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint16 * uint16 -&gt; uint16" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt16" />
        <Parameter Name="val2" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-650">比較する 2 つの 16 ビット符号なし整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-650">The first of two 16-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-651">比較する 2 つの 16 ビット符号なし整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-651">The second of two 16-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-652">2 つの 16 ビット符号なし整数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-652">Returns the smaller of two 16-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-653">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-653">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static uint Min (uint val1, uint val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Min(unsigned int32 val1, unsigned int32 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As UInteger, val2 As UInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Min(System::UInt32 val1, System::UInt32 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint32 * uint32 -&gt; uint32" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt32" />
        <Parameter Name="val2" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-654">比較する 2 つの 32 ビット符号なし整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-654">The first of two 32-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-655">比較する 2 つの 32 ビット符号なし整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-655">The second of two 32-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-656">2 つの 32 ビット符号なし整数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-656">Returns the smaller of two 32-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-657">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-657">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static ulong Min (ulong val1, ulong val2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 Min(unsigned int64 val1, unsigned int64 val2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Min(System.UInt64,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (val1 As ULong, val2 As ULong) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 Min(System::UInt64 val1, System::UInt64 val2);" />
      <MemberSignature Language="F#" Value="static member Min : uint64 * uint64 -&gt; uint64" Usage="System.Math.Min (val1, val2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="val1" Type="System.UInt64" />
        <Parameter Name="val2" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="val1"><span data-ttu-id="27c91-658">比較する 2 つの 64 ビット符号なし整数の最初の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-658">The first of two 64-bit unsigned integers to compare.</span></span></param>
        <param name="val2"><span data-ttu-id="27c91-659">比較する 2 つの 64 ビット符号なし整数の 2 番目の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-659">The second of two 64-bit unsigned integers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-660">2 つの 64 ビット符号なし整数のうち、小さい方を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-660">Returns the smaller of two 64-bit unsigned integers.</span></span></summary>
        <returns><span data-ttu-id="27c91-661">パラメーター <paramref name="val1" /> または <paramref name="val2" /> のいずれか小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-661">Parameter <paramref name="val1" /> or <paramref name="val2" />, whichever is smaller.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinMagnitude">
      <MemberSignature Language="C#" Value="public static double MinMagnitude (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 MinMagnitude(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.MinMagnitude(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MinMagnitude (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double MinMagnitude(double x, double y);" />
      <MemberSignature Language="F#" Value="static member MinMagnitude : double * double -&gt; double" Usage="System.Math.MinMagnitude (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="y" Type="System.Double" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-662">比較する 2 つの倍精度浮動小数点数の最初の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-662">The first of two double-precision floating-point numbers to compare.</span></span></param>
        <param name="y"><span data-ttu-id="27c91-663">比較する 2 つの倍精度浮動小数点数の 2 番目の数。</span><span class="sxs-lookup"><span data-stu-id="27c91-663">The second of two double-precision floating-point numbers to compare.</span></span></param>
        <summary><span data-ttu-id="27c91-664">2 つの倍精度浮動小数点数のうち、小さい絶対値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-664">Returns the smaller magnitude of two double-precision floating-point numbers.</span></span></summary>
        <returns><span data-ttu-id="27c91-665">パラメーター <paramref name="x" /> または <paramref name="y" /> のうち、絶対値が小さい方。</span><span class="sxs-lookup"><span data-stu-id="27c91-665">Parameter <paramref name="x" /> or <paramref name="y" />, whichever has the smaller magnitude.</span></span> <span data-ttu-id="27c91-666"><paramref name="x" />、または <paramref name="y" />、または <paramref name="x" /> と <paramref name="y" /> の両方が <see cref="F:System.Double.NaN" /> に等しい場合、<see cref="F:System.Double.NaN" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-666">If <paramref name="x" />, or <paramref name="y" />, or both <paramref name="x" /> and <paramref name="y" /> are equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NaN" /> is returned.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="PI">
      <MemberSignature Language="C#" Value="public const double PI = 3.1415926535897931;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 PI = (3.1415926535897931)" />
      <MemberSignature Language="DocId" Value="F:System.Math.PI" />
      <MemberSignature Language="VB.NET" Value="Public Const PI As Double  = 3.1415926535897931" />
      <MemberSignature Language="C++ CLI" Value="public: double PI = 3.1415926535897931;" />
      <MemberSignature Language="F#" Value="val mutable PI : double" Usage="System.Math.PI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>3.1415926535897931</MemberValue>
      <Docs>
        <summary><span data-ttu-id="27c91-667">定数 (π) を指定して、円の直径に対する円周の割合を表します。</span><span class="sxs-lookup"><span data-stu-id="27c91-667">Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-668">このフィールドの値は3.1415926535897931 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-668">The value of this field is 3.1415926535897931.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-669">次の例では、<xref:System.Math.PI> を使用して、特定の台形の内部角度の計算を支援します。</span><span class="sxs-lookup"><span data-stu-id="27c91-669">The following example uses <xref:System.Math.PI> to assist in the computation of the inner angles of a given trapezoid.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/MathSample/CPP/mathsample.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/MathSample/CS/mathsample.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/MathSample/VB/mathsample.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static double Pow (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Pow(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Pow(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (x As Double, y As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Pow(double x, double y);" />
      <MemberSignature Language="F#" Value="static member Pow : double * double -&gt; double" Usage="System.Math.Pow (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-670">累乗対象の倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-670">A double-precision floating-point number to be raised to a power.</span></span></param>
        <param name="y"><span data-ttu-id="27c91-671">累乗を指定する倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-671">A double-precision floating-point number that specifies a power.</span></span></param>
        <summary><span data-ttu-id="27c91-672">指定の数値を指定した値で累乗した値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-672">Returns a specified number raised to the specified power.</span></span></summary>
        <returns><span data-ttu-id="27c91-673">数値 <paramref name="x" /> を <paramref name="y" /> で累乗した値。</span><span class="sxs-lookup"><span data-stu-id="27c91-673">The number <paramref name="x" /> raised to the power <paramref name="y" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-674">次の表は、`x` と `y` のパラメーターに対してさまざまな値または値の範囲が指定されている場合の戻り値を示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-674">The following table indicates the return value when various values or ranges of values are specified for the `x` and `y` parameters.</span></span> <span data-ttu-id="27c91-675">詳細については、「<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>」、「<xref:System.Double.NegativeInfinity?displayProperty=nameWithType>」、および「<xref:System.Double.NaN?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-675">For more information, see <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>, <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, and <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>  
  
|<span data-ttu-id="27c91-676">パラメーター</span><span class="sxs-lookup"><span data-stu-id="27c91-676">Parameters</span></span>|<span data-ttu-id="27c91-677">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-677">Return value</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="27c91-678">`x` または `y` = `NaN`。</span><span class="sxs-lookup"><span data-stu-id="27c91-678">`x` or `y` = `NaN`.</span></span>|`NaN`|  
|<span data-ttu-id="27c91-679">`x` = `NaN`を除く任意の値`y` = 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-679">`x` = Any value except `NaN`; `y` = 0.</span></span>|<span data-ttu-id="27c91-680">1</span><span class="sxs-lookup"><span data-stu-id="27c91-680">1</span></span>|  
|<span data-ttu-id="27c91-681">`x` = `NegativeInfinity`;`y` < 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-681">`x` = `NegativeInfinity`; `y` < 0.</span></span>|<span data-ttu-id="27c91-682">0</span><span class="sxs-lookup"><span data-stu-id="27c91-682">0</span></span>|  
|<span data-ttu-id="27c91-683">`x` = `NegativeInfinity`;`y` は、正の整数です。</span><span class="sxs-lookup"><span data-stu-id="27c91-683">`x` = `NegativeInfinity`; `y` is a positive odd integer.</span></span>|`NegativeInfinity`|  
|<span data-ttu-id="27c91-684">`x` = `NegativeInfinity`;`y` は正の値ですが、奇数の整数ではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-684">`x` = `NegativeInfinity`; `y` is positive but not an odd integer.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="27c91-685">`x` < 0 ですが `NegativeInfinity`はありません。`y` が整数、`NegativeInfinity`、または `PositiveInfinity`ではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-685">`x` < 0 but not `NegativeInfinity`; `y` is not an integer, `NegativeInfinity`, or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="27c91-686">`x` =-1;`y` = `NegativeInfinity` または `PositiveInfinity`。</span><span class="sxs-lookup"><span data-stu-id="27c91-686">`x` = -1; `y` = `NegativeInfinity` or `PositiveInfinity`.</span></span>|`NaN`|  
|<span data-ttu-id="27c91-687">-1 < `x` < 1; = `NegativeInfinity`を `y`します。</span><span class="sxs-lookup"><span data-stu-id="27c91-687">-1 < `x` < 1; `y` = `NegativeInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="27c91-688">-1 < `x` < 1; = `PositiveInfinity`を `y`します。</span><span class="sxs-lookup"><span data-stu-id="27c91-688">-1 < `x` < 1; `y` = `PositiveInfinity`.</span></span>|<span data-ttu-id="27c91-689">0</span><span class="sxs-lookup"><span data-stu-id="27c91-689">0</span></span>|  
|<span data-ttu-id="27c91-690">`x` <-1 または`x`> 1 になります;`y` = `NegativeInfinity`.</span><span class="sxs-lookup"><span data-stu-id="27c91-690">`x` < -1 or `x` > 1; `y` = `NegativeInfinity`.</span></span>|<span data-ttu-id="27c91-691">0</span><span class="sxs-lookup"><span data-stu-id="27c91-691">0</span></span>|  
|<span data-ttu-id="27c91-692">`x` <-1 または`x`> 1 になります;`y` = `PositiveInfinity`.</span><span class="sxs-lookup"><span data-stu-id="27c91-692">`x` < -1 or `x` > 1; `y` = `PositiveInfinity`.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="27c91-693">`x` = 0;`y` < 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-693">`x` = 0; `y` < 0.</span></span>|`PositiveInfinity`|  
|<span data-ttu-id="27c91-694">`x` = 0;`y` > 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-694">`x` = 0; `y` > 0.</span></span>|<span data-ttu-id="27c91-695">0</span><span class="sxs-lookup"><span data-stu-id="27c91-695">0</span></span>|  
|<span data-ttu-id="27c91-696">`x` = 1 です。`y` は `NaN`を除く任意の値です。</span><span class="sxs-lookup"><span data-stu-id="27c91-696">`x` = 1; `y` is any value except `NaN`.</span></span>|<span data-ttu-id="27c91-697">1</span><span class="sxs-lookup"><span data-stu-id="27c91-697">1</span></span>|  
|<span data-ttu-id="27c91-698">`x` = `PositiveInfinity`;`y` < 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-698">`x` = `PositiveInfinity`; `y` < 0.</span></span>|<span data-ttu-id="27c91-699">0</span><span class="sxs-lookup"><span data-stu-id="27c91-699">0</span></span>|  
|<span data-ttu-id="27c91-700">`x` = `PositiveInfinity`;`y` > 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-700">`x` = `PositiveInfinity`; `y` > 0.</span></span>|`PositiveInfinity`|  
  
   
  
## Examples  

 <span data-ttu-id="27c91-701">次の例では、<xref:System.Math.Pow%2A> メソッドを使用して、0 ~ 32 の範囲で2を累乗した結果の値を計算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-701">The following example uses the <xref:System.Math.Pow%2A> method to calculate the value that results from raising 2 to a power ranging from 0 to 32.</span></span>  
  
 [!code-csharp-interactive[System.Math.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.pow/cs/pow1.cs#1)]
 [!code-vb[System.Math.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.pow/vb/pow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Sqrt(System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-702">最も近い整数または指定した小数点以下の桁数に値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-702">Rounds a value to the nearest integer or to the specified number of fractional digits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
<a name="remarks-round"></a> 
## Remarks 

<span data-ttu-id="27c91-703">このセクションの内容は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="27c91-703">In this section:</span></span>

- [<span data-ttu-id="27c91-704">どの方法を呼び出すか。</span><span class="sxs-lookup"><span data-stu-id="27c91-704">Which method do I call?</span></span>](#which-method-do-i-call)
- [<span data-ttu-id="27c91-705">中間値と丸め規則</span><span class="sxs-lookup"><span data-stu-id="27c91-705">Midpoint values and rounding conventions</span></span>](#midpoint-values-and-rounding-conventions)   
- [<span data-ttu-id="27c91-706">丸めと精度</span><span class="sxs-lookup"><span data-stu-id="27c91-706">Rounding and precision</span></span>](#rounding-and-precision) 
- [<span data-ttu-id="27c91-707">丸めと単精度浮動小数点値</span><span class="sxs-lookup"><span data-stu-id="27c91-707">Rounding and single-precision floating point values</span></span>](#rounding-and-single-precision-floating-point-values)
- [<span data-ttu-id="27c91-708">個々のオーバーロードの例</span><span class="sxs-lookup"><span data-stu-id="27c91-708">Examples of individual overloads</span></span>](#round-examples)

### <a name="which-method-do-i-call"></a><span data-ttu-id="27c91-709">どの方法を呼び出すか。</span><span class="sxs-lookup"><span data-stu-id="27c91-709">Which method do I call?</span></span>

<span data-ttu-id="27c91-710">次の表を使用して、適切な丸め方法を選択できます。</span><span class="sxs-lookup"><span data-stu-id="27c91-710">You can use the following table to select an appropriate rounding method.</span></span> <span data-ttu-id="27c91-711">`Math.Round` メソッドに加えて、<xref:System.Math.Ceiling%2A?displayProperty=nameWithType> と <xref:System.Math.Floor%2A?displayProperty=nameWithType>も含まれています。</span><span class="sxs-lookup"><span data-stu-id="27c91-711">In addition to the `Math.Round` methods, it also includes <xref:System.Math.Ceiling%2A?displayProperty=nameWithType> and <xref:System.Math.Floor%2A?displayProperty=nameWithType>.</span></span>

|<span data-ttu-id="27c91-712">ターゲット</span><span class="sxs-lookup"><span data-stu-id="27c91-712">To</span></span>|<span data-ttu-id="27c91-713">Call (英語の可能性あり)</span><span class="sxs-lookup"><span data-stu-id="27c91-713">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="27c91-714">近似値への丸め規則を使用して、数値を整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-714">Round a number to an integer by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%29><br /><br /> <span data-ttu-id="27c91-715">または</span><span class="sxs-lookup"><span data-stu-id="27c91-715">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%29>|  
|<span data-ttu-id="27c91-716">指定された丸め規則を使用して、数値を整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-716">Round a number to an integer by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="27c91-717">または</span><span class="sxs-lookup"><span data-stu-id="27c91-717">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="27c91-718">最も近い規則に丸め処理を使用して、指定した小数部の桁数に数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-718">Round a number to a specified number of fractional digits by using the rounding to nearest convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29><br /><br /> <span data-ttu-id="27c91-719">または</span><span class="sxs-lookup"><span data-stu-id="27c91-719">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|  
|<span data-ttu-id="27c91-720">指定された丸め規則を使用して、指定した小数部の桁数に数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-720">Round a number to a specified number of fractional digits by using a specified rounding convention.</span></span>|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29><br /><br /> <span data-ttu-id="27c91-721">または</span><span class="sxs-lookup"><span data-stu-id="27c91-721">-or-</span></span><br /><br /> <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|  
|<span data-ttu-id="27c91-722">指定された丸め規則を使用し、精度の低下を最小限に抑えることで、<xref:System.Single> 値を指定した小数点以下桁数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-722">Round a <xref:System.Single> value to a specified number of fractional digits by using a specified rounding convention and minimizing the loss of precision.</span></span>|<span data-ttu-id="27c91-723"><xref:System.Single> を <xref:System.Decimal> に変換し、<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="27c91-723">Convert the <xref:System.Single> to a <xref:System.Decimal> and call <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>.</span></span>|  
|<span data-ttu-id="27c91-724">中間値の丸めの精度に関する問題を最小限に抑えるために、数値を指定した小数部の桁数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-724">Round a number to a specified number of fractional digits while minimizing problems of precision in rounding midpoint values.</span></span>|<span data-ttu-id="27c91-725">"以上" の比較を実装する丸めメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="27c91-725">Call a rounding method that implements a "greater than or approximately equal to" comparison.</span></span> <span data-ttu-id="27c91-726">「[丸めと有効桁数」を](#precision)参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-726">See [Rounding and precision](#precision).</span></span>|  
|<span data-ttu-id="27c91-727">小数部の値を小数部より大きい整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-727">Round a fractional value to an integer that is greater than the fractional value.</span></span> <span data-ttu-id="27c91-728">たとえば、3.1 を4に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-728">For example, round 3.1 to 4.</span></span>|<xref:System.Math.Ceiling%2A>|  
|<span data-ttu-id="27c91-729">小数部の値を小数部より小さい整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-729">Round a fractional value to an integer that is less than the fractional value.</span></span> <span data-ttu-id="27c91-730">たとえば、3.9 を3に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-730">For example, round 3.9 to 3.</span></span>|<xref:System.Math.Floor%2A>|  

### <a name="midpoint-values-and-rounding-conventions"></a><span data-ttu-id="27c91-731">中間値と丸め規則</span><span class="sxs-lookup"><span data-stu-id="27c91-731">Midpoint values and rounding conventions</span></span> 

<span data-ttu-id="27c91-732">丸め処理では、指定された有効桁数を持つ数値を、精度の低い最も近い値に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-732">Rounding involves converting a numeric value with a specified precision to the nearest value with less precision.</span></span> <span data-ttu-id="27c91-733">たとえば、<xref:System.Math.Round%28System.Double%29> メソッドを使用して3.4 の値を3.0 に丸め、<xref:System.Math.Round%28System.Double%2CSystem.Int32%29> メソッドを使用して3.579 の値を3.58 に丸めることができます。</span><span class="sxs-lookup"><span data-stu-id="27c91-733">For example, you can use the <xref:System.Math.Round%28System.Double%29> method to round a value of 3.4 to 3.0, and the <xref:System.Math.Round%28System.Double%2CSystem.Int32%29> method to round a value of 3.579 to 3.58.</span></span>  
  
<span data-ttu-id="27c91-734">中間値では、結果の最下位の数字の後の値は、2つの数値の間の中間方向になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-734">In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.</span></span> <span data-ttu-id="27c91-735">たとえば、3.47500 は小数点以下2桁に丸められる場合は中間値、7.500 は整数に丸められる場合は中間値になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-735">For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.</span></span> <span data-ttu-id="27c91-736">このような場合、最も近い値を丸め規則なしに簡単に識別することはできません。</span><span class="sxs-lookup"><span data-stu-id="27c91-736">In these cases, the nearest value can't be easily identified without a rounding convention.</span></span>  
  
<span data-ttu-id="27c91-737"><xref:System.Math.Round%2A> メソッドでは、中間値を処理するための2つの丸め規則がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="27c91-737">The <xref:System.Math.Round%2A> method supports two rounding conventions for handling midpoint values:</span></span>  
  
- <span data-ttu-id="27c91-738">**ゼロからの丸め**</span><span class="sxs-lookup"><span data-stu-id="27c91-738">**Rounding away from zero**</span></span>  

   <span data-ttu-id="27c91-739">中間値は、ゼロから離れる次の数値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-739">Midpoint values are rounded to the next number away from zero.</span></span> <span data-ttu-id="27c91-740">たとえば、3.75 は3.8 に丸め、3.85 は3.9 に、-3.75 は-3.8、-3.85 は-3.9 に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-740">For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.</span></span> <span data-ttu-id="27c91-741">この形式の丸め処理は、<xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> 列挙型のメンバーによって表されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-741">This form of rounding is represented by the <xref:System.MidpointRounding.AwayFromZero?displayProperty=nameWithType> enumeration member.</span></span>  
  
   <span data-ttu-id="27c91-742">0からの丸め処理は、最も広く知られている丸め形式です。</span><span class="sxs-lookup"><span data-stu-id="27c91-742">Rounding away from zero is the most widely known form of rounding.</span></span>  
  
- <span data-ttu-id="27c91-743">**近似値への丸めまたは銀行型丸め**</span><span class="sxs-lookup"><span data-stu-id="27c91-743">**Rounding to nearest, or banker's rounding**</span></span>  

   <span data-ttu-id="27c91-744">中間値は、最も近い偶数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-744">Midpoint values are rounded to the nearest even number.</span></span> <span data-ttu-id="27c91-745">たとえば、3.75 と3.85 の両方が3.8 に丸められ、-3.75 と-3.85 の両方が-3.8 に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-745">For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.</span></span> <span data-ttu-id="27c91-746">この形式の丸め処理は、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> 列挙型のメンバーによって表されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-746">This form of rounding is represented by the <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType> enumeration member.</span></span>  
  
  <span data-ttu-id="27c91-747">近似値への丸めは、財務および統計演算で使用される丸めの標準形式です。</span><span class="sxs-lookup"><span data-stu-id="27c91-747">Rounding to nearest is the standard form of rounding used in financial and statistical operations.</span></span> <span data-ttu-id="27c91-748">これは、IEEE Standard 754 のセクション4に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-748">It conforms to IEEE Standard 754, section 4.</span></span> <span data-ttu-id="27c91-749">複数の丸め処理で使用すると、一貫して中間値を一方向に丸めることによって発生する丸め誤差を減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="27c91-749">When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="27c91-750">場合によっては、この丸め誤差が重要になることがあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-750">In some cases, this rounding error can be significant.</span></span>  
  
  <span data-ttu-id="27c91-751">次の例は、中間値を常に一方向に丸めることによって生じる可能性があるバイアスを示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-751">The following example illustrates the bias that can result from consistently rounding midpoint values in a single direction.</span></span> <span data-ttu-id="27c91-752">この例では、<xref:System.Decimal> 値の配列の真の平均を計算し、2つの規則を使用して配列内の値が丸められる場合の平均を計算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-752">The example computes the true mean of an array of <xref:System.Decimal> values, and then computes the mean when the values in the array are rounded by using the two conventions.</span></span> <span data-ttu-id="27c91-753">この例では、実際の平均値と、最も近いに丸めたときの平均値が同じであることを意味します。</span><span class="sxs-lookup"><span data-stu-id="27c91-753">In this example, the true mean and the mean that results when rounding to nearest are the same.</span></span> <span data-ttu-id="27c91-754">ただし、0から丸めたときの結果の平均は、0.05 (または3.6%) によって異なります。真の平均からです。</span><span class="sxs-lookup"><span data-stu-id="27c91-754">However, the mean that results when rounding away from zero differs by .05 (or by 3.6%) from the true mean.</span></span>  
  
  [!code-csharp-interactive[System.Math.Round.Overload#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mean1.cs#2)]
  [!code-vb[System.Math.Round.Overload#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mean1.vb#2)]  
  
<span data-ttu-id="27c91-755">既定では、<xref:System.Math.Round%2A> メソッドは、最も近い規則に丸め処理を使用します。</span><span class="sxs-lookup"><span data-stu-id="27c91-755">By default, the <xref:System.Math.Round%2A> method uses the rounding to nearest convention.</span></span> <span data-ttu-id="27c91-756">次の表に、<xref:System.Math.Round%2A> メソッドのオーバーロードと、それぞれが使用する丸め規則の一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-756">The following table lists the overloads of the <xref:System.Math.Round%2A> method and the rounding convention that each uses.</span></span>  
  
|<span data-ttu-id="27c91-757">オーバーロード</span><span class="sxs-lookup"><span data-stu-id="27c91-757">Overload</span></span>|<span data-ttu-id="27c91-758">丸め規則</span><span class="sxs-lookup"><span data-stu-id="27c91-758">Rounding convention</span></span>|  
|--------------|-------------------------|  
|<xref:System.Math.Round%28System.Decimal%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%29>|<xref:System.MidpointRounding.ToEven>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29>|<span data-ttu-id="27c91-759">`mode` パラメーターによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-759">Determined by `mode` parameter.</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29>|<span data-ttu-id="27c91-760">`mode` パラメーターによって決定されます</span><span class="sxs-lookup"><span data-stu-id="27c91-760">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="27c91-761">`mode` パラメーターによって決定されます</span><span class="sxs-lookup"><span data-stu-id="27c91-761">Determined by `mode` parameter</span></span>|  
|<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29>|<span data-ttu-id="27c91-762">`mode` パラメーターによって決定されます</span><span class="sxs-lookup"><span data-stu-id="27c91-762">Determined by `mode` parameter</span></span>|  

<a name="precision"></a>
### <a name="rounding-and-precision"></a><span data-ttu-id="27c91-763">丸めと精度</span><span class="sxs-lookup"><span data-stu-id="27c91-763">Rounding and precision</span></span>  

<span data-ttu-id="27c91-764">丸め処理によって中間値が使用されるかどうかを判断するために、<xref:System.Math.Round%2A> メソッドは元の値を 10<sup>n</sup>で丸めます。ここで、 *n*は戻り値の小数部の桁数で、値の残りの小数部が .5 以上かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="27c91-764">In order to determine whether a rounding operation involves a midpoint value, the <xref:System.Math.Round%2A> method multiplies the original value to be rounded by 10<sup>n</sup>, where *n* is the desired number of fractional digits in the return value, and then determines whether the remaining fractional portion of the value is greater than or equal to .5.</span></span> <span data-ttu-id="27c91-765">これは、等しいかどうかのテストの微妙な違いです。 <xref:System.Double> リファレンストピックの「等しいかどうかのテスト」で説明されているように、浮動小数点値と等しいかどうかのテストは、バイナリ表現と精度に関する浮動小数点形式の問題のために問題になります。</span><span class="sxs-lookup"><span data-stu-id="27c91-765">This is a slight variation on a test for equality, and as discussed in the "Testing for Equality" section of the <xref:System.Double> reference topic, tests for equality with floating-point values are problematic because of the floating-point format's issues with binary representation and precision.</span></span> <span data-ttu-id="27c91-766">これは、精度が低下しているために0.5 未満の数値の小数部分が切り上げられないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="27c91-766">This means that any fractional portion of a number that is slightly less than .5 (because of a loss of precision) will not be rounded upward.</span></span>  

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="27c91-767">この問題を説明する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-767">The following example illustrates the problem.</span></span> <span data-ttu-id="27c91-768">繰り返し、0.1 を11.0 に加算し、その結果を最も近い整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-768">It repeatedly adds .1 to 11.0 and rounds the result to the nearest integer.</span></span> <span data-ttu-id="27c91-769">丸め規則に関係なく、11.5 は12に丸められる必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-769">Regardless of the rounding convention, 11.5 should round to 12.</span></span> <span data-ttu-id="27c91-770">ただし、この例の出力に示されているように、表示されません。</span><span class="sxs-lookup"><span data-stu-id="27c91-770">However, as the output from the example shows, it does not.</span></span> <span data-ttu-id="27c91-771">この例では、"R"[標準の数値書式指定文字列](/dotnet/standard/base-types/standard-numeric-format-strings)を使用して浮動小数点値の完全な有効桁数を表示し、丸められる値が反復的に追加されたときに精度が失われ、その値が実際には11.499999999999998 であることを示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-771">The example uses the "R" [standard numeric format string](/dotnet/standard/base-types/standard-numeric-format-strings) to display the floating point value's full precision, and shows that the value to be rounded has lost precision during repeated additions, and its value is actually 11.499999999999998.</span></span> <span data-ttu-id="27c91-772">. 499999999999998 は .5 未満であるため、値は次の最大の整数に丸められません。</span><span class="sxs-lookup"><span data-stu-id="27c91-772">Because .499999999999998 is less than .5, the value is not rounded to the next highest integer.</span></span> <span data-ttu-id="27c91-773">この例に示すように、単に定数値11.5 を <xref:System.Double> 変数に代入すると、この問題は発生しません。</span><span class="sxs-lookup"><span data-stu-id="27c91-773">As the example also shows, this problem does not occur if we simply assign the constant value 11.5 to a <xref:System.Double> variable.</span></span>  
  
:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision1.cs" interactive="try-dotnet" id="Snippet7":::
:::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision1.vb" id="Snippet7":::
  
<span data-ttu-id="27c91-774">中間値の丸めの精度の問題は、次の条件で発生する可能性が最も高くなります。</span><span class="sxs-lookup"><span data-stu-id="27c91-774">Problems of precision in rounding midpoint values are most likely to arise in the following conditions:</span></span>  
  
- <span data-ttu-id="27c91-775">小数点値を浮動小数点型のバイナリ形式で正確に表現できない場合。</span><span class="sxs-lookup"><span data-stu-id="27c91-775">When a fractional value cannot be expressed precisely in the floating-point type's binary format.</span></span>  
  
- <span data-ttu-id="27c91-776">丸められる値が1つ以上の浮動小数点演算から計算される場合。</span><span class="sxs-lookup"><span data-stu-id="27c91-776">When the value to be rounded is calculated from one or more floating-point operations.</span></span>  
  
- <span data-ttu-id="27c91-777">丸められる値が、<xref:System.Double> または <xref:System.Decimal>ではなく、<xref:System.Single> である場合。</span><span class="sxs-lookup"><span data-stu-id="27c91-777">When the value to be rounded is a <xref:System.Single> rather than a <xref:System.Double> or <xref:System.Decimal>.</span></span> <span data-ttu-id="27c91-778">詳細については、次のセクション「[丸め処理と単精度浮動小数点値](#rounding-and-single-precision-floating-point-values)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-778">For more information, see the next section, [Rounding and single-precision floating-point values](#rounding-and-single-precision-floating-point-values).</span></span>  
  
 <span data-ttu-id="27c91-779">丸め処理の精度が十分でない場合は、次のようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="27c91-779">In cases where the lack of precision in rounding operations is problematic, you can do the following:</span></span>  
  
- <span data-ttu-id="27c91-780">丸め処理で <xref:System.Double> 値を丸めたオーバーロードを呼び出す場合、<xref:System.Double> を <xref:System.Decimal> 値に変更し、代わりに <xref:System.Decimal> 値を丸めるオーバーロードを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="27c91-780">If the rounding operation calls an overload that rounds a <xref:System.Double> value, you can change the <xref:System.Double> to a <xref:System.Decimal> value and call an overload that rounds a <xref:System.Decimal> value instead.</span></span> <span data-ttu-id="27c91-781"><xref:System.Decimal> のデータ型にも表現の問題があり、精度が失われていますが、これらの問題はあまり一般的ではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-781">Although the <xref:System.Decimal> data type also has problems of representation and loss of precision, these issues are far less common.</span></span>  
  
- <span data-ttu-id="27c91-782">"ほぼ等しい" テストを実行して、丸められる値が中間値に対して許容可能であるかどうかを判断するカスタム丸めアルゴリズムを定義します。</span><span class="sxs-lookup"><span data-stu-id="27c91-782">Define a custom rounding algorithm that performs a "nearly equal" test to determine whether the value to be rounded is acceptably close to a midpoint value.</span></span> <span data-ttu-id="27c91-783">次の例では、中間値が中間値に十分に近いかどうかを確認する `RoundApproximate` メソッドを定義しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-783">The following example defines a `RoundApproximate` method that examines whether a fractional value is sufficiently near to a midpoint value to be subject to midpoint rounding.</span></span> <span data-ttu-id="27c91-784">この例の出力に示されているように、前の例に示されている丸めの問題を修正します。</span><span class="sxs-lookup"><span data-stu-id="27c91-784">As the output from the example shows, it corrects the rounding problem shown in the previous example.</span></span>  
  
      :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/precision2.cs" interactive="try-dotnet" id="Snippet8":::
      :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/precision2.vb" id="Snippet8":::
  
#### <a name="rounding-and-single-precision-floating-point-values"></a><span data-ttu-id="27c91-785">丸めと単精度浮動小数点値</span><span class="sxs-lookup"><span data-stu-id="27c91-785">Rounding and single-precision floating-point values</span></span>  

<span data-ttu-id="27c91-786"><xref:System.Math.Round%2A> メソッドには、<xref:System.Decimal> と <xref:System.Double>型の引数を受け入れるオーバーロードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="27c91-786">The <xref:System.Math.Round%2A> method includes overloads that accept arguments of type <xref:System.Decimal> and <xref:System.Double>.</span></span> <span data-ttu-id="27c91-787"><xref:System.Single>型の値を丸めるメソッドはありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-787">There are no methods that round values of type <xref:System.Single>.</span></span> <span data-ttu-id="27c91-788"><xref:System.Single> 値を <xref:System.Math.Round%2A> メソッドのいずれかのオーバーロードに渡すと、その値は (でC#は) キャストされるか、または (Visual Basic の) <xref:System.Double>に変換され、<xref:System.Math.Round%2A> パラメーターを持つ対応する <xref:System.Double> オーバーロードが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-788">If you pass a <xref:System.Single> value to one of the overloads of the <xref:System.Math.Round%2A> method, it is cast (in C#) or converted (in Visual Basic) to a <xref:System.Double>, and the corresponding <xref:System.Math.Round%2A> overload with a <xref:System.Double> parameter is called.</span></span> <span data-ttu-id="27c91-789">これは拡大変換ですが、次の例に示すように、精度が失われることがよくあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-789">Although this is a widening conversion, it often involves a loss of precision, as the following example illustrates.</span></span> <span data-ttu-id="27c91-790"><xref:System.Single> 値16.325 が <xref:System.Math.Round%2A> メソッドに渡され、近似値への丸め処理を使用して小数点以下2桁に丸められた場合、結果は16.33 になり、予期された16.32 の結果ではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-790">When a <xref:System.Single> value of 16.325 is passed to the <xref:System.Math.Round%2A> method and rounded to two decimal places using the rounding to nearest convention, the result is 16.33 and not the expected result of 16.32.</span></span>  

:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/single1.cs" interactive="try-dotnet" id="Snippet1":::
:::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/single1.vb" id="Snippet1":::
 
<span data-ttu-id="27c91-791">この予期しない結果は、<xref:System.Single> 値を <xref:System.Double>に変換する際の精度が失われたことが原因です。</span><span class="sxs-lookup"><span data-stu-id="27c91-791">This unexpected result is due to a loss of precision in the conversion of the <xref:System.Single> value to a <xref:System.Double>.</span></span> <span data-ttu-id="27c91-792">16.325000762939453 の結果の <xref:System.Double> 値は中間値ではなく、16.325 より大きいため、常に上向きに切り上げられます。</span><span class="sxs-lookup"><span data-stu-id="27c91-792">Because the resulting <xref:System.Double> value of 16.325000762939453 is not a midpoint value and is greater than 16.325, it is always rounded upward.</span></span>  
  
<span data-ttu-id="27c91-793">多くの場合、例に示すように、<xref:System.Single> 値を <xref:System.Decimal>にキャストまたは変換することで、精度の低下を最小限に抑えることができます。</span><span class="sxs-lookup"><span data-stu-id="27c91-793">In many cases, as the example illustrates, the loss of precision can be minimized or eliminated by casting or converting the <xref:System.Single> value to a <xref:System.Decimal>.</span></span> <span data-ttu-id="27c91-794">これは縮小変換であるため、キャスト演算子を使用するか、変換メソッドを呼び出す必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-794">Note that, because this is a narrowing conversion, it requires using a cast operator or calling a conversion method.</span></span>  

<a name="round-examples"></a>  
## Examples 

<span data-ttu-id="27c91-795">この記事には、 [「解説](#remarks-round)」の例に加えて、`Math.Round` メソッドの次のオーバーロードを示す例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="27c91-795">In addition to the examples in the [Remarks](#remarks-round) section, this article includes examples that illustrate the following overloads of the `Math.Round` method:</span></span>

[<span data-ttu-id="27c91-796">Math. Round (Decimal)</span><span class="sxs-lookup"><span data-stu-id="27c91-796">Math.Round(Decimal)</span></span>](#Round1_Example)  
[<span data-ttu-id="27c91-797">Math. Round (Double)</span><span class="sxs-lookup"><span data-stu-id="27c91-797">Math.Round(Double)</span></span>](#Round2_Example)  
[<span data-ttu-id="27c91-798">Math. Round (Decimal, Int32)</span><span class="sxs-lookup"><span data-stu-id="27c91-798">Math.Round(Decimal, Int32)</span></span>](#Round3_Example)  
[<span data-ttu-id="27c91-799">Math. Round (Decimal, Midpointrounding.awayfromzero)</span><span class="sxs-lookup"><span data-stu-id="27c91-799">Math.Round(Decimal, MidpointRounding)</span></span>](#Round4_Example)  
[<span data-ttu-id="27c91-800">Math. Round (Double, Int32)</span><span class="sxs-lookup"><span data-stu-id="27c91-800">Math.Round(Double, Int32)</span></span>](#Round5_Example)  
[<span data-ttu-id="27c91-801">Math. Round (Double, Midpointrounding.awayfromzero)</span><span class="sxs-lookup"><span data-stu-id="27c91-801">Math.Round(Double, MidpointRounding)</span></span>](#Round6_Example)  
[<span data-ttu-id="27c91-802">Math. Round (Decimal, Int32, Midpointrounding.awayfromzero)</span><span class="sxs-lookup"><span data-stu-id="27c91-802">Math.Round(Decimal, Int32, MidpointRounding)</span></span>](#Round7_Example)  
[<span data-ttu-id="27c91-803">Math. Round (Double, Int32, Midpointrounding.awayfromzero)</span><span class="sxs-lookup"><span data-stu-id="27c91-803">Math.Round(Double, Int32, MidpointRounding)</span></span>](#Round8_Example)  

       ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
        <altmember cref="M:System.Math.Truncate(System.Decimal)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Round : decimal -&gt; decimal" Usage="System.Math.Round d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-804">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="27c91-804">A decimal number to be rounded.</span></span></param>
        <summary><span data-ttu-id="27c91-805">10 進数の値は最も近い整数値に丸められ、中間値は最も近い偶数値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-805">Rounds a decimal value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="27c91-806"><paramref name="d" /> パラメーターに最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="27c91-806">The integer nearest the <paramref name="d" /> parameter.</span></span> <span data-ttu-id="27c91-807"><paramref name="d" /> の小数部が 2 つの整数 (一方が偶数で、もう一方が奇数) の中間にある場合は、偶数が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-807">If the fractional component of <paramref name="d" /> is halfway between two integers, one of which is even and the other odd, the even number is returned.</span></span> <span data-ttu-id="27c91-808">このメソッドは、整数型ではなく <see cref="T:System.Decimal" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-808">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
  
<span data-ttu-id="27c91-809">このメソッドは、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>の既定の丸め規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="27c91-809">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27c91-810">中間値を使用した数値の丸め処理の詳細については[、「中間値と丸め規則](#midpoint-values-and-rounding-conventions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-810">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round1_Example"></a> 
## Examples

<span data-ttu-id="27c91-811"><xref:System.Math.Round%28System.Decimal%29>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-811">The following example demonstrates the <xref:System.Math.Round%28System.Decimal%29> method.</span></span> <span data-ttu-id="27c91-812">このオーバーロードでは既定の <xref:System.MidpointRounding.ToEven> 規約が使用されるため、<xref:System.Decimal> 値4.5 は5ではなく4に丸められることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-812">Note that the <xref:System.Decimal> value of 4.5 rounds to 4 rather than 5, because this overload uses the default <xref:System.MidpointRounding.ToEven> convention.</span></span>  
  
[!code-csharp-interactive[System.Math.Round#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/rounddecimal1.cs#6)]
[!code-vb[System.Math.Round#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/rounddecimal1.vb#6)]  

       ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="27c91-813">結果が <see cref="T:System.Decimal" /> の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="27c91-813">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double a);" />
      <MemberSignature Language="F#" Value="static member Round : double -&gt; double" Usage="System.Math.Round a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="27c91-814">丸め対象の倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-814">A double-precision floating-point number to be rounded.</span></span></param>
        <summary><span data-ttu-id="27c91-815">倍精度浮動小数点の値は最も近い整数値に丸められ、中間値は最も近い偶数値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-815">Rounds a double-precision floating-point value to the nearest integral value, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="27c91-816"><paramref name="a" /> に最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="27c91-816">The integer nearest <paramref name="a" />.</span></span> <span data-ttu-id="27c91-817"><paramref name="a" /> の小数部が 2 つの整数 (一方が偶数で、もう一方が奇数) の中間にある場合は、偶数が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-817">If the fractional component of <paramref name="a" /> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</span></span> <span data-ttu-id="27c91-818">このメソッドは、整数型ではなく <see cref="T:System.Double" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-818">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="27c91-819">このメソッドは、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>の既定の丸め規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="27c91-819">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27c91-820">中間値を使用した数値の丸め処理の詳細については[、「中間値と丸め規則](#midpoint-values-and-rounding-conventions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-820">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="27c91-821">`a` 引数の値が <xref:System.Double.NaN?displayProperty=nameWithType>の場合、メソッドは <xref:System.Double.NaN?displayProperty=nameWithType>を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-821">If the value of the `a` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27c91-822">`a` が <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> または <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>の場合、メソッドは <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> または <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-822">If `a` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<span data-ttu-id="27c91-823">Visual Basic 15.8 以降では、`Round` メソッドから返された値を任意の[整数変換関数](/dotnet/visual-basic/language-reference/functions/conversion-functions)に渡す場合、または `Round` によって返される double 値が[Option Strict](/dotnet/visual-basic/language-reference/statements/option-strict-statement)が Off に設定されている整数に自動的に変換される場合は、倍精度整数変換のパフォーマンスが最適化されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-823">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Round` method to the any of the [integral conversion functions](/dotnet/visual-basic/language-reference/functions/conversion-functions), or if the Double value returned by `Round` is automatically converted to an integer with [Option Strict](/dotnet/visual-basic/language-reference/statements/option-strict-statement) set to Off.</span></span> <span data-ttu-id="27c91-824">この最適化によって、コードをより速く実行できます。大きい数値の整数型への変換を行うコードでは、最大で 2 倍速くなります。</span><span class="sxs-lookup"><span data-stu-id="27c91-824">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="27c91-825">次の例は、このような最適化された変換を示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-825">The following example illustrates such optimized conversions:</span></span>
   
```vb
Dim d1 As Double = 1043.75133
Dim i1 As Integer = CInt(Math.Ceiling(d1))        ' Result: 1044

Dim d2 As Double = 7968.4136
Dim i2 As Integer = CInt(Math.Ceiling(d2))        ' Result: 7968
```

<a name="Round2_Example"></a>   
## <a name="example"></a><span data-ttu-id="27c91-826">例</span><span class="sxs-lookup"><span data-stu-id="27c91-826">Example</span></span>  

<span data-ttu-id="27c91-827">次の例では、最も近い整数値に丸める方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-827">The following example demonstrates rounding to the nearest integer value.</span></span>  
  
[!code-cpp[Classic Math.Round Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round Example/CPP/source.cpp#1)]
[!code-csharp-interactive[Classic Math.Round Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round Example/CS/source.cs#1)]
[!code-vb[Classic Math.Round Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round Example/VB/source.vb#1)]  

       ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="27c91-828">Decimal 値を浮動小数点数として表現したり、浮動小数点値に対して算術演算を実行したりすることによって精度が低下するため、場合によっては、<see cref="M:System.Math.Round(System.Double)" /> メソッドを使用して、中間値が最も近い偶数の整数に丸められないことがあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-828">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="27c91-829">次の例では、浮動小数点値 .1 に有限のバイナリ表現がないため、11.5 の値を指定して <see cref="M:System.Math.Round(System.Double)" /> メソッドを最初に呼び出した場合、12ではなく11が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-829">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  

<span data-ttu-id="27c91-830">::: code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs" interactive = "dotnet" id = "Snippet1":::::: code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb" id = "Snippet1":::</span><span class="sxs-lookup"><span data-stu-id="27c91-830">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round2.cs" interactive="try-dotnet" id="Snippet1"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round2.vb" id="Snippet1":::</span></span> 
          </para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int -&gt; decimal" Usage="System.Math.Round (d, decimals)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" />
        <Parameter Name="decimals" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-831">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="27c91-831">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="27c91-832">戻り値の小数部の桁数。</span><span class="sxs-lookup"><span data-stu-id="27c91-832">The number of decimal places in the return value.</span></span></param>
        <summary><span data-ttu-id="27c91-833">10 進数の値は指定した小数部の桁数に丸められ、中間値は最も近い偶数値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-833">Rounds a decimal value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="27c91-834"><paramref name="d" /> に等しい小数部の桁数を格納する <paramref name="decimals" /> に最も近い数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-834">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="27c91-835">`decimals` 引数の値は、0から28までの範囲で指定できます。</span><span class="sxs-lookup"><span data-stu-id="27c91-835">The value of the `decimals` argument can range from 0 to 28.</span></span>

<span data-ttu-id="27c91-836">このメソッドは、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>の既定の丸め規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="27c91-836">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27c91-837">中間値を使用した数値の丸め処理の詳細については[、「中間値と丸め規則](#midpoint-values-and-rounding-conventions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-837">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round3_Example"></a>   
## <a name="example"></a><span data-ttu-id="27c91-838">例</span><span class="sxs-lookup"><span data-stu-id="27c91-838">Example</span></span>  

<span data-ttu-id="27c91-839">次の例では、小数点以下2桁の10進値を、1桁の小数部を持つ値に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-839">The following example rounds decimal values with two fractional digits to values that have a single fractional digit.</span></span>  
  
[!code-csharp-interactive[System.Math.Round.Overload#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/source.cs#3)]
[!code-vb[System.Math.Round.Overload#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/source.vb#3)]  
  
      ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="27c91-840"><paramref name="decimals" /> が 0 未満か、28 を超えています。</span><span class="sxs-lookup"><span data-stu-id="27c91-840"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="27c91-841">結果が <see cref="T:System.Decimal" /> の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="27c91-841">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-842">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="27c91-842">A decimal number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="27c91-843"><paramref name="d" /> が 2 つの数値の中間にある場合に丸める方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="27c91-843">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="27c91-844">10 進数の値は最も近い整数に丸められ、中間値には指定した丸め処理が使用されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-844">Rounds a decimal value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="27c91-845"><paramref name="d" /> に最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="27c91-845">The integer nearest <paramref name="d" />.</span></span> <span data-ttu-id="27c91-846"><paramref name="d" /> が 2 つの数値 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> によって 2 つの数値のどちらが返されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="27c91-846">If <paramref name="d" /> is halfway between two numbers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="27c91-847">このメソッドは、整数型ではなく <see cref="T:System.Decimal" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-847">Note that this method returns a <see cref="T:System.Decimal" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="27c91-848">中間値を使用した数値の丸め処理の詳細については[、「中間値と丸め規則](#midpoint-values-and-rounding-conventions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-848">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<a name="Round5_Example"></a>   
## <a name="example"></a><span data-ttu-id="27c91-849">例</span><span class="sxs-lookup"><span data-stu-id="27c91-849">Example</span></span>  

<span data-ttu-id="27c91-850">次の例では、<xref:System.Math.Round%28System.Decimal%29> メソッドによって返される値、<xref:System.MidpointRounding.ToEven>の `mode` 引数を持つ <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> メソッド、および <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> の `mode` 引数を持つ <xref:System.MidpointRounding.AwayFromZero>メソッドによって返される値を表示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-850">The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  

:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs" interactive="try-dotnet" id="Snippet5":::
:::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb" id="Snippet5":::
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27c91-851"><paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> の正しい値ではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-851"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="27c91-852">結果が <see cref="T:System.Decimal" /> の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="27c91-852">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits);" />
      <MemberSignature Language="F#" Value="static member Round : double * int -&gt; double" Usage="System.Math.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="digits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-853">丸め対象の倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-853">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="27c91-854">戻り値の小数部の桁数。</span><span class="sxs-lookup"><span data-stu-id="27c91-854">The number of fractional digits in the return value.</span></span></param>
        <summary><span data-ttu-id="27c91-855">倍精度浮動小数点の値は指定した小数部の桁数に丸められ、中間値は最も近い偶数値に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-855">Rounds a double-precision floating-point value to a specified number of fractional digits, and rounds midpoint values to the nearest even number.</span></span></summary>
        <returns><span data-ttu-id="27c91-856"><paramref name="value" /> に等しい小数部の桁数を格納する <paramref name="digits" /> に最も近い数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-856">The number nearest to <paramref name="value" /> that contains a number of fractional digits equal to <paramref name="digits" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="27c91-857">`digits` 引数の値は 0 ~ 15 の範囲で指定できます。</span><span class="sxs-lookup"><span data-stu-id="27c91-857">The value of the `digits` argument can range from 0 to 15.</span></span> <span data-ttu-id="27c91-858">15は <xref:System.Double> 型でサポートされる整数および小数部の最大数であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-858">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span>

<span data-ttu-id="27c91-859">このメソッドは、<xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>の既定の丸め規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="27c91-859">This method uses the default rounding convention of <xref:System.MidpointRounding.ToEven?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27c91-860">中間値を使用した数値の丸め処理の詳細については[、「中間値と丸め規則](#midpoint-values-and-rounding-conventions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-860">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="27c91-861">`value` 引数の値が <xref:System.Double.NaN?displayProperty=nameWithType>の場合、メソッドは <xref:System.Double.NaN?displayProperty=nameWithType>を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-861">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27c91-862">`value` が <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> または <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>の場合、メソッドは <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> または <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-862">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round4_Example"></a>   
## <a name="example"></a><span data-ttu-id="27c91-863">例</span><span class="sxs-lookup"><span data-stu-id="27c91-863">Example</span></span>  

<span data-ttu-id="27c91-864">次の例では、2桁の小数部を含む double 型の値を、1桁の小数部を持つ倍精度浮動小数点数で丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-864">The following example rounds double values with two fractional digits to doubles that have a single fractional digit.</span></span>  
  
[!code-cpp[Classic Math.Round2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CPP/source.cpp#1)]
[!code-csharp[Classic Math.Round2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Math.Round2 Example/CS/source.cs#1)]
[!code-vb[Classic Math.Round2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Math.Round2 Example/VB/source.vb#1)]  
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="27c91-865"><paramref name="digits" /> が 0 より小さいか、15 を超えています。</span><span class="sxs-lookup"><span data-stu-id="27c91-865"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="27c91-866">Decimal 型の値を浮動小数点数として表現したり、浮動小数点値に対して算術演算を実行したりすることによって精度が低下することがあるため、<see cref="M:System.Math.Round(System.Double,System.Int32)" /> メソッドは、中間点の値を <paramref name="digits" /> の小数点位置にある最も近い偶数の値に丸めて表示されない場合があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-866">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32)" /> method may not appear to round midpoint values to the nearest even value in the <paramref name="digits" /> decimal position.</span></span> <span data-ttu-id="27c91-867">これを次の例に示します。2.135 は2.14 ではなく2.13 に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-867">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="27c91-868">これは、内部的にメソッドが 10<sup>桁</sup>の <paramref name="value" /> を乗算し、この場合の乗算演算で精度が低下するために発生します。</span><span class="sxs-lookup"><span data-stu-id="27c91-868">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  

<span data-ttu-id="27c91-869">::: code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs" interactive = "dotnet" id = "Snippet2":::::: code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb" id = "Snippet2":::</span><span class="sxs-lookup"><span data-stu-id="27c91-869">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round3.cs" interactive="try-dotnet" id="Snippet2"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round3.vb" id="Snippet2":::</span></span> 
          </para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * MidpointRounding -&gt; double" Usage="System.Math.Round (value, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-870">丸め対象の倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-870">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="mode"><span data-ttu-id="27c91-871"><paramref name="value" /> が 2 つの数値の中間にある場合に丸める方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="27c91-871">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="27c91-872">倍精度浮動小数点の値は最も近い整数に丸められ、中間値には指定した丸め処理が使用されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-872">Rounds a double-precision floating-point value to the nearest integer, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="27c91-873"><paramref name="value" /> に最も近い整数。</span><span class="sxs-lookup"><span data-stu-id="27c91-873">The integer nearest <paramref name="value" />.</span></span> <span data-ttu-id="27c91-874"><paramref name="value" /> が 2 つの整数 (一方が偶数でもう一方が奇数) の中間にある場合、<paramref name="mode" /> によって 2 つの数値のどちらが返されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="27c91-874">If <paramref name="value" /> is halfway between two integers, one of which is even and the other odd, then <paramref name="mode" /> determines which of the two is returned.</span></span> <span data-ttu-id="27c91-875">このメソッドは、整数型ではなく <see cref="T:System.Double" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-875">Note that this method returns a <see cref="T:System.Double" /> instead of an integral type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="27c91-876">中間値を使用した数値の丸め処理の詳細については[、「中間値と丸め規則](#midpoint-values-and-rounding-conventions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-876">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="27c91-877">`value` 引数の値が <xref:System.Double.NaN?displayProperty=nameWithType>の場合、メソッドは <xref:System.Double.NaN?displayProperty=nameWithType>を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-877">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27c91-878">`value` が <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> または <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>の場合、メソッドは <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> または <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-878">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round6_Example"></a>   
## <a name="example"></a><span data-ttu-id="27c91-879">例</span><span class="sxs-lookup"><span data-stu-id="27c91-879">Example</span></span>  
<span data-ttu-id="27c91-880">次の例では、<xref:System.Math.Round%28System.Double%29> メソッドによって返される値、<xref:System.MidpointRounding.ToEven>の `mode` 引数を持つ <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> メソッド、および <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> の `mode` 引数を持つ <xref:System.MidpointRounding.AwayFromZero>メソッドによって返される値を表示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-880">The following example displays values returned by the <xref:System.Math.Round%28System.Double%29> method, the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Double%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.</span></span>  
  
:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint2.cs" interactive="try-dotnet" id="Snippet6":::
:::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint2.vb" id="Snippet6":::
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27c91-881"><paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> の正しい値ではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-881"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="27c91-882">Decimal 値を浮動小数点数として表現したり、浮動小数点値に対して算術演算を実行したりすることによって精度が低下するため、場合によっては、<see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> メソッドを使用して、中間値が最も近い偶数の整数に丸められないことがあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-882">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.MidpointRounding)" /> method may not appear to round midpoint values to the nearest even integer.</span></span> <span data-ttu-id="27c91-883">次の例では、浮動小数点値 .1 に有限のバイナリ表現がないため、11.5 の値を指定して <see cref="M:System.Math.Round(System.Double)" /> メソッドを最初に呼び出した場合、12ではなく11が返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-883">In the following example, because the floating-point value .1 has no finite binary representation, the first call to the <see cref="M:System.Math.Round(System.Double)" /> method with a value of 11.5 returns 11 instead of 12.</span></span>  
  
<span data-ttu-id="27c91-884">::: code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs" interactive = "dotnet" id = "Snippet4":::::: code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb" id = "Snippet4":::</span><span class="sxs-lookup"><span data-stu-id="27c91-884">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round5.cs" interactive="try-dotnet" id="Snippet4"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round5.vb" id="Snippet4":::</span></span>

          </para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static decimal Round (decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Round(valuetype System.Decimal d, int32 decimals, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (d As Decimal, decimals As Integer, mode As MidpointRounding) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Round(System::Decimal d, int decimals, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : decimal * int * MidpointRounding -&gt; decimal" Usage="System.Math.Round (d, decimals, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="decimals" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-885">丸め対象の 10 進数。</span><span class="sxs-lookup"><span data-stu-id="27c91-885">A decimal number to be rounded.</span></span></param>
        <param name="decimals"><span data-ttu-id="27c91-886">戻り値の小数部の桁数。</span><span class="sxs-lookup"><span data-stu-id="27c91-886">The number of decimal places in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="27c91-887"><paramref name="d" /> が 2 つの数値の中間にある場合に丸める方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="27c91-887">Specification for how to round <paramref name="d" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="27c91-888">10 進数の値は指定した小数部の桁数に丸められ、中間値には指定した丸め処理が使用されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-888">Rounds a decimal value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="27c91-889"><paramref name="d" /> に等しい小数部の桁数を格納する <paramref name="decimals" /> に最も近い数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-889">The number nearest to <paramref name="d" /> that contains a number of fractional digits equal to <paramref name="decimals" />.</span></span> <span data-ttu-id="27c91-890"><paramref name="d" /> の小数部の桁数が <paramref name="decimals" /> よりも少ない場合、<paramref name="d" /> がそのまま返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-890">If <paramref name="d" /> has fewer fractional digits than <paramref name="decimals" />, <paramref name="d" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="27c91-891">中間値を使用した数値の丸め処理の詳細については[、「中間値と丸め規則](#midpoint-values-and-rounding-conventions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-891">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]  

<span data-ttu-id="27c91-892">`decimals` 引数の値は、0から28までの範囲で指定できます。</span><span class="sxs-lookup"><span data-stu-id="27c91-892">The value of the `decimals` argument can range from 0 to 28.</span></span>

<a name="Round7_Example"></a>   
## <a name="example"></a><span data-ttu-id="27c91-893">例</span><span class="sxs-lookup"><span data-stu-id="27c91-893">Example</span></span>  

<span data-ttu-id="27c91-894">次の例では、<xref:System.Math.Round%2A> メソッドを <xref:System.MidpointRounding> 列挙体と共に使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-894">The following example demonstrates how to use the <xref:System.Math.Round%2A> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
[!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
[!code-csharp-interactive[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
[!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  

       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="27c91-895"><paramref name="decimals" /> が 0 未満か、28 を超えています。</span><span class="sxs-lookup"><span data-stu-id="27c91-895"><paramref name="decimals" /> is less than 0 or greater than 28.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27c91-896"><paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> の正しい値ではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-896"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="27c91-897">結果が <see cref="T:System.Decimal" /> の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="27c91-897">The result is outside the range of a <see cref="T:System.Decimal" />.</span></span></exception>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static double Round (double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Round(float64 value, int32 digits, valuetype System.MidpointRounding mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Round (value As Double, digits As Integer, mode As MidpointRounding) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Round(double value, int digits, MidpointRounding mode);" />
      <MemberSignature Language="F#" Value="static member Round : double * int * MidpointRounding -&gt; double" Usage="System.Math.Round (value, digits, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="digits" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mode" Type="System.MidpointRounding" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-898">丸め対象の倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-898">A double-precision floating-point number to be rounded.</span></span></param>
        <param name="digits"><span data-ttu-id="27c91-899">戻り値の小数部の桁数。</span><span class="sxs-lookup"><span data-stu-id="27c91-899">The number of fractional digits in the return value.</span></span></param>
        <param name="mode"><span data-ttu-id="27c91-900"><paramref name="value" /> が 2 つの数値の中間にある場合に丸める方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="27c91-900">Specification for how to round <paramref name="value" /> if it is midway between two other numbers.</span></span></param>
        <summary><span data-ttu-id="27c91-901">倍精度浮動小数点の値は指定した小数部の桁数に丸められ、中間値には指定した丸め処理が使用されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-901">Rounds a double-precision floating-point value to a specified number of fractional digits, and uses the specified rounding convention for midpoint values.</span></span></summary>
        <returns><span data-ttu-id="27c91-902"><paramref name="digits" /> に等しい小数部の桁数を格納する <paramref name="value" /> に最も近い数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-902">The number nearest to <paramref name="value" /> that has a number of fractional digits equal to <paramref name="digits" />.</span></span> <span data-ttu-id="27c91-903"><paramref name="value" /> の小数部の桁数が <paramref name="digits" /> よりも少ない場合、<paramref name="value" /> がそのまま返されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-903">If <paramref name="value" /> has fewer fractional digits than <paramref name="digits" />, <paramref name="value" /> is returned unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="27c91-904">`digits` 引数の値は 0 ~ 15 の範囲で指定できます。</span><span class="sxs-lookup"><span data-stu-id="27c91-904">The value of the `digits` argument can range from 0 to 15.</span></span> <span data-ttu-id="27c91-905">15は <xref:System.Double> 型でサポートされる整数および小数部の最大数であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-905">Note that 15 is the maximum number of integral and fractional digits supported by the <xref:System.Double> type.</span></span>

<span data-ttu-id="27c91-906">中間値を使用した数値の丸め処理の詳細については[、「中間値と丸め規則](#midpoint-values-and-rounding-conventions)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27c91-906">See [Midpoint values and rounding conventions](#midpoint-values-and-rounding-conventions) for information about rounding numbers with midpoint values.</span></span>

[!INCLUDE[midpoint-rounding](~/includes/floating-point-equality.md)]

<span data-ttu-id="27c91-907">`value` 引数の値が <xref:System.Double.NaN?displayProperty=nameWithType>の場合、メソッドは <xref:System.Double.NaN?displayProperty=nameWithType>を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-907">If the value of the `value` argument is <xref:System.Double.NaN?displayProperty=nameWithType>, the method returns <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="27c91-908">`value` が <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> または <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>の場合、メソッドは <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> または <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-908">If `value` is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, the method returns <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> or <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>, respectively.</span></span>  

<a name="Round8_Example"></a>   
## <a name="example"></a><span data-ttu-id="27c91-909">例</span><span class="sxs-lookup"><span data-stu-id="27c91-909">Example</span></span>  

<span data-ttu-id="27c91-910">次の例では、<xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> メソッドを <xref:System.MidpointRounding> 列挙体と共に使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-910">The following example demonstrates how to use the <xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.</span></span>  
  
:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/mpr.cs" interactive="try-dotnet-method" id="Snippet4":::
:::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/mpr.vb" id="Snippet4":::
  
       ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="27c91-911"><paramref name="digits" /> が 0 より小さいか、15 を超えています。</span><span class="sxs-lookup"><span data-stu-id="27c91-911"><paramref name="digits" /> is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27c91-912"><paramref name="mode" /> が <see cref="T:System.MidpointRounding" /> の正しい値ではありません。</span><span class="sxs-lookup"><span data-stu-id="27c91-912"><paramref name="mode" /> is not a valid value of <see cref="T:System.MidpointRounding" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="27c91-913">Decimal 型の値を浮動小数点数として表現したり、浮動小数点値に対して算術演算を実行したりすることによって精度が低下するため、場合によっては、<paramref name="mode" /> パラメーターで指定されたように、<see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> メソッドが中間値を丸めることがないことがあります。</span><span class="sxs-lookup"><span data-stu-id="27c91-913">Because of the loss of precision that can result from representing decimal values as floating-point numbers or performing arithmetic operations on floating-point values, in some cases the <see cref="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)" /> method may not appear to round midpoint values as specified by the <paramref name="mode" /> parameter.</span></span> <span data-ttu-id="27c91-914">これを次の例に示します。2.135 は2.14 ではなく2.13 に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-914">This is illustrated in the following example, where 2.135 is rounded to 2.13 instead of 2.14.</span></span> <span data-ttu-id="27c91-915">これは、内部的にメソッドが 10<sup>桁</sup>の <paramref name="value" /> を乗算し、この場合の乗算演算で精度が低下するために発生します。</span><span class="sxs-lookup"><span data-stu-id="27c91-915">This occurs because internally the method multiplies <paramref name="value" /> by 10<sup>digits</sup>, and the multiplication operation in this case suffers from a loss of precision.</span></span>  

<span data-ttu-id="27c91-916">::: code language = "csharp" source = "~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs" interactive = "dotnet-method" id = "Snippet3":::::: code language = "vb" source = "~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb" id = "Snippet3":::</span><span class="sxs-lookup"><span data-stu-id="27c91-916">:::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round/cs/round4.cs" interactive="try-dotnet-method" id="Snippet3"::: :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round/vb/round4.vb" id="Snippet3":::</span></span> 
          </para></block>
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
        <altmember cref="M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleB">
      <MemberSignature Language="C#" Value="public static double ScaleB (double x, int n);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ScaleB(float64 x, int32 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.ScaleB(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ScaleB (x As Double, n As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ScaleB(double x, int n);" />
      <MemberSignature Language="F#" Value="static member ScaleB : double * int -&gt; double" Usage="System.Math.ScaleB (x, n)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
        <Parameter Name="n" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="27c91-917">基底値を指定する倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="27c91-917">A double-precision floating-point number that specifies the base value.</span></span></param>
        <param name="n"><span data-ttu-id="27c91-918">累乗を指定する 32 ビット整数。</span><span class="sxs-lookup"><span data-stu-id="27c91-918">A 32-bit integer that specifies the power.</span></span></param>
        <summary><span data-ttu-id="27c91-919">効率的に計算された x \* 2^n を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-919">Returns x \* 2^n computed efficiently.</span></span></summary>
        <returns><span data-ttu-id="27c91-920">効率的に計算された x \* 2^n。</span><span class="sxs-lookup"><span data-stu-id="27c91-920">x \* 2^n computed efficiently.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-921">数の符号を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-921">Returns an integer that indicates the sign of a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Decimal) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member Sign : decimal -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-922">符号付きの 10 進数。</span><span class="sxs-lookup"><span data-stu-id="27c91-922">A signed decimal number.</span></span></param>
        <summary><span data-ttu-id="27c91-923">10 進数の符号を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-923">Returns an integer that indicates the sign of a decimal number.</span></span></summary>
        <returns><span data-ttu-id="27c91-924"><paramref name="value" /> の符号を示す数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="27c91-924">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="27c91-925">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-925">Return value</span></span> 
 </term><description> <span data-ttu-id="27c91-926">意味</span><span class="sxs-lookup"><span data-stu-id="27c91-926">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-927">-1</span><span class="sxs-lookup"><span data-stu-id="27c91-927">-1</span></span> 
 </term><description><span data-ttu-id="27c91-928"><paramref name="value" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-928"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-929">0</span><span class="sxs-lookup"><span data-stu-id="27c91-929">0</span></span> 
 </term><description><span data-ttu-id="27c91-930"><paramref name="value" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-930"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-931">1</span><span class="sxs-lookup"><span data-stu-id="27c91-931">1</span></span> 
 </term><description><span data-ttu-id="27c91-932"><paramref name="value" /> が 0 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="27c91-932"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-933">次の例では、<xref:System.Math.Sign%28System.Decimal%29> メソッドを使用して <xref:System.Decimal> 値の符号を決定し、それをコンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-933">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Decimal%29> method to determine the sign of a <xref:System.Decimal> value and display it to the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb" id="Snippet1":::
    
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(double value);" />
      <MemberSignature Language="F#" Value="static member Sign : double -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-934">符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-934">A signed number.</span></span></param>
        <summary><span data-ttu-id="27c91-935">倍精度浮動小数点数の符号を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-935">Returns an integer that indicates the sign of a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="27c91-936"><paramref name="value" /> の符号を示す数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="27c91-936">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="27c91-937">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-937">Return value</span></span> 
 </term><description> <span data-ttu-id="27c91-938">意味</span><span class="sxs-lookup"><span data-stu-id="27c91-938">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-939">-1</span><span class="sxs-lookup"><span data-stu-id="27c91-939">-1</span></span> 
 </term><description><span data-ttu-id="27c91-940"><paramref name="value" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-940"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-941">0</span><span class="sxs-lookup"><span data-stu-id="27c91-941">0</span></span> 
 </term><description><span data-ttu-id="27c91-942"><paramref name="value" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-942"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-943">1</span><span class="sxs-lookup"><span data-stu-id="27c91-943">1</span></span> 
 </term><description><span data-ttu-id="27c91-944"><paramref name="value" /> が 0 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="27c91-944"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-945">次の例では、<xref:System.Math.Sign%28System.Double%29> メソッドを使用して <xref:System.Double> 値の符号を決定し、それをコンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-945">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Double%29> method to determine the sign of a <xref:System.Double> value and display it to the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="27c91-946"><paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="27c91-946"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(short value);" />
      <MemberSignature Language="F#" Value="static member Sign : int16 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-947">符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-947">A signed number.</span></span></param>
        <summary><span data-ttu-id="27c91-948">16 ビット符号付き整数の符号を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-948">Returns an integer that indicates the sign of a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="27c91-949"><paramref name="value" /> の符号を示す数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="27c91-949">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="27c91-950">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-950">Return value</span></span> 
 </term><description> <span data-ttu-id="27c91-951">意味</span><span class="sxs-lookup"><span data-stu-id="27c91-951">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-952">-1</span><span class="sxs-lookup"><span data-stu-id="27c91-952">-1</span></span> 
 </term><description><span data-ttu-id="27c91-953"><paramref name="value" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-953"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-954">0</span><span class="sxs-lookup"><span data-stu-id="27c91-954">0</span></span> 
 </term><description><span data-ttu-id="27c91-955"><paramref name="value" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-955"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-956">1</span><span class="sxs-lookup"><span data-stu-id="27c91-956">1</span></span> 
 </term><description><span data-ttu-id="27c91-957"><paramref name="value" /> が 0 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="27c91-957"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-958">次の例では、<xref:System.Math.Sign%28System.Int16%29> メソッドを使用して <xref:System.Int16> 値の符号を決定し、それをコンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-958">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int16%29> method to determine the sign of an <xref:System.Int16> value and display it to the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(int value);" />
      <MemberSignature Language="F#" Value="static member Sign : int -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-959">符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-959">A signed number.</span></span></param>
        <summary><span data-ttu-id="27c91-960">32 ビット符号付き整数の符号を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-960">Returns an integer that indicates the sign of a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="27c91-961"><paramref name="value" /> の符号を示す数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="27c91-961">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="27c91-962">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-962">Return value</span></span> 
 </term><description> <span data-ttu-id="27c91-963">意味</span><span class="sxs-lookup"><span data-stu-id="27c91-963">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-964">-1</span><span class="sxs-lookup"><span data-stu-id="27c91-964">-1</span></span> 
 </term><description><span data-ttu-id="27c91-965"><paramref name="value" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-965"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-966">0</span><span class="sxs-lookup"><span data-stu-id="27c91-966">0</span></span> 
 </term><description><span data-ttu-id="27c91-967"><paramref name="value" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-967"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-968">1</span><span class="sxs-lookup"><span data-stu-id="27c91-968">1</span></span> 
 </term><description><span data-ttu-id="27c91-969"><paramref name="value" /> が 0 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="27c91-969"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-970">次の例では、<xref:System.Math.Sign%28System.Int32%29> メソッドを使用して <xref:System.Int32> 値の符号を決定し、それをコンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-970">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int32%29> method to determine the sign of an <xref:System.Int32> value and display it to the console.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(long value);" />
      <MemberSignature Language="F#" Value="static member Sign : int64 -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-971">符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-971">A signed number.</span></span></param>
        <summary><span data-ttu-id="27c91-972">64 ビット符号付き整数の符号を示す正数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-972">Returns an integer that indicates the sign of a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="27c91-973"><paramref name="value" /> の符号を示す数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="27c91-973">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="27c91-974">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-974">Return value</span></span> 
 </term><description> <span data-ttu-id="27c91-975">意味</span><span class="sxs-lookup"><span data-stu-id="27c91-975">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-976">-1</span><span class="sxs-lookup"><span data-stu-id="27c91-976">-1</span></span> 
 </term><description><span data-ttu-id="27c91-977"><paramref name="value" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-977"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-978">0</span><span class="sxs-lookup"><span data-stu-id="27c91-978">0</span></span> 
 </term><description><span data-ttu-id="27c91-979"><paramref name="value" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-979"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-980">1</span><span class="sxs-lookup"><span data-stu-id="27c91-980">1</span></span> 
 </term><description><span data-ttu-id="27c91-981"><paramref name="value" /> が 0 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="27c91-981"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-982">次の例では、<xref:System.Math.Sign%28System.Int64%29> メソッドを使用して <xref:System.Int64> 値の符号を決定し、それをコンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-982">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Int64%29> method to determine the sign of an <xref:System.Int64> value and display it to the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member Sign : sbyte -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-983">符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-983">A signed number.</span></span></param>
        <summary><span data-ttu-id="27c91-984">8 ビット符号付き整数の符号を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-984">Returns an integer that indicates the sign of an 8-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="27c91-985"><paramref name="value" /> の符号を示す数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="27c91-985">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="27c91-986">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-986">Return value</span></span> 
 </term><description> <span data-ttu-id="27c91-987">意味</span><span class="sxs-lookup"><span data-stu-id="27c91-987">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-988">-1</span><span class="sxs-lookup"><span data-stu-id="27c91-988">-1</span></span> 
 </term><description><span data-ttu-id="27c91-989"><paramref name="value" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-989"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-990">0</span><span class="sxs-lookup"><span data-stu-id="27c91-990">0</span></span> 
 </term><description><span data-ttu-id="27c91-991"><paramref name="value" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-991"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-992">1</span><span class="sxs-lookup"><span data-stu-id="27c91-992">1</span></span> 
 </term><description><span data-ttu-id="27c91-993"><paramref name="value" /> が 0 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="27c91-993"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-994">次の例では、<xref:System.Math.Sign%28System.SByte%29> メソッドを使用して <xref:System.SByte> 値の符号を決定し、それをコンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-994">The following example demonstrates how to use the <xref:System.Math.Sign%28System.SByte%29> method to determine the sign of an <xref:System.SByte> value and display it to the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static int Sign (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Sign(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sign(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sign (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Sign(float value);" />
      <MemberSignature Language="F#" Value="static member Sign : single -&gt; int" Usage="System.Math.Sign value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-995">符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-995">A signed number.</span></span></param>
        <summary><span data-ttu-id="27c91-996">単精度浮動小数点数の符号を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-996">Returns an integer that indicates the sign of a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="27c91-997"><paramref name="value" /> の符号を示す数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="27c91-997">A number that indicates the sign of <paramref name="value" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="27c91-998">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-998">Return value</span></span> 
 </term><description> <span data-ttu-id="27c91-999">意味</span><span class="sxs-lookup"><span data-stu-id="27c91-999">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-1000">-1</span><span class="sxs-lookup"><span data-stu-id="27c91-1000">-1</span></span> 
 </term><description><span data-ttu-id="27c91-1001"><paramref name="value" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="27c91-1001"><paramref name="value" /> is less than zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-1002">0</span><span class="sxs-lookup"><span data-stu-id="27c91-1002">0</span></span> 
 </term><description><span data-ttu-id="27c91-1003"><paramref name="value" /> が 0 です。</span><span class="sxs-lookup"><span data-stu-id="27c91-1003"><paramref name="value" /> is equal to zero.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-1004">1</span><span class="sxs-lookup"><span data-stu-id="27c91-1004">1</span></span> 
 </term><description><span data-ttu-id="27c91-1005"><paramref name="value" /> が 0 より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="27c91-1005"><paramref name="value" /> is greater than zero.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="27c91-1006">次の例では、<xref:System.Math.Sign%28System.Single%29> メソッドを使用して <xref:System.Single> 値の符号を決定し、それをコンソールに表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1006">The following example demonstrates how to use the <xref:System.Math.Sign%28System.Single%29> method to determine the sign of a <xref:System.Single> value and display it to the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.sign/CPP/sign.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.sign/CS/sign.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.sign/VB/sign.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArithmeticException"><span data-ttu-id="27c91-1007"><paramref name="value" /> と <see cref="F:System.Single.NaN" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="27c91-1007"><paramref name="value" /> is equal to <see cref="F:System.Single.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static double Sin (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sin(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sin(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sin (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sin(double a);" />
      <MemberSignature Language="F#" Value="static member Sin : double -&gt; double" Usage="System.Math.Sin a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="27c91-1008">ラジアンで表した角度。</span><span class="sxs-lookup"><span data-stu-id="27c91-1008">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="27c91-1009">指定された角度のサインを返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1009">Returns the sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="27c91-1010"><paramref name="a" /> のサイン。</span><span class="sxs-lookup"><span data-stu-id="27c91-1010">The sine of <paramref name="a" />.</span></span> <span data-ttu-id="27c91-1011"><paramref name="a" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合、このメソッドは <see cref="F:System.Double.NaN" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1011">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-1012">角度 (`a`) は、ラジアンで指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-1012">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="27c91-1013">度をラジアンに変換するには、<xref:System.Math.PI?displayProperty=nameWithType>/180 を乗算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1013">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
 <span data-ttu-id="27c91-1014">`a` の許容値は、約9223372036854775295から約9223372036854775295の範囲です。</span><span class="sxs-lookup"><span data-stu-id="27c91-1014">Acceptable values of `a` range from approximately -9223372036854775295 to approximately 9223372036854775295.</span></span> <span data-ttu-id="27c91-1015">この範囲外の値の場合、<xref:System.Math.Sin%2A> メソッドは、例外をスローするのではなく `a` を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1015">For values outside of this range, the <xref:System.Math.Sin%2A> method returns `a` unchanged rather than throwing an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-1016">次の例では、<xref:System.Math.Sin%2A> を使用して、選択した角度の特定の三角関数 id を評価します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1016">The following example uses <xref:System.Math.Sin%2A> to evaluate certain trigonometric identities for selected angles.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinCos/CPP/sincos.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinCos/CS/sincos.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinCos/VB/sincos.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sinh">
      <MemberSignature Language="C#" Value="public static double Sinh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sinh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sinh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sinh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sinh(double value);" />
      <MemberSignature Language="F#" Value="static member Sinh : double -&gt; double" Usage="System.Math.Sinh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-1017">ラジアンで表した角度。</span><span class="sxs-lookup"><span data-stu-id="27c91-1017">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="27c91-1018">指定された角度のハイパーボリック サインを返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1018">Returns the hyperbolic sine of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="27c91-1019"><paramref name="value" /> のハイパーボリック サイン。</span><span class="sxs-lookup"><span data-stu-id="27c91-1019">The hyperbolic sine of <paramref name="value" />.</span></span> <span data-ttu-id="27c91-1020"><paramref name="value" /> が <see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" />、または <see cref="F:System.Double.NaN" /> のいずれかに等しい場合、このメソッドは <paramref name="value" /> に等しい <see cref="T:System.Double" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1020">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NaN" />, this method returns a <see cref="T:System.Double" /> equal to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-1021">角度 (`value`) は、ラジアンで指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-1021">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="27c91-1022">度をラジアンに変換するには、<xref:System.Math.PI?displayProperty=nameWithType>/180 を乗算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1022">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-1023">次の例では、<xref:System.Math.Sinh%2A> を使用して、選択した値の特定のハイパーボリック id を評価します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1023">The following example uses <xref:System.Math.Sinh%2A> to evaluate certain hyperbolic identities for selected values.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.SinhCosh/CPP/sinhcosh.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.SinhCosh/CS/sinhcosh.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.SinhCosh/VB/sinhcosh.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sqrt">
      <MemberSignature Language="C#" Value="public static double Sqrt (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Sqrt(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Sqrt(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Sqrt (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Sqrt(double d);" />
      <MemberSignature Language="F#" Value="static member Sqrt : double -&gt; double" Usage="System.Math.Sqrt d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-1024">平方根を求める対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-1024">The number whose square root is to be found.</span></span></param>
        <summary><span data-ttu-id="27c91-1025">指定された数値の平方根を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1025">Returns the square root of a specified number.</span></span></summary>
        <returns><span data-ttu-id="27c91-1026">次の表に示した値のいずれか</span><span class="sxs-lookup"><span data-stu-id="27c91-1026">One of the values in the following table.</span></span>  
  
 <list type="table"><listheader><term><span data-ttu-id="27c91-1027"><paramref name="d" /> パラメーター</span><span class="sxs-lookup"><span data-stu-id="27c91-1027"><paramref name="d" /> parameter</span></span> 
 </term><description> <span data-ttu-id="27c91-1028">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-1028">Return value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="27c91-1029">0 または正</span><span class="sxs-lookup"><span data-stu-id="27c91-1029">Zero or positive</span></span> 
 </term><description> <span data-ttu-id="27c91-1030"><paramref name="d" /> の正の平方根。</span><span class="sxs-lookup"><span data-stu-id="27c91-1030">The positive square root of <paramref name="d" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="27c91-1031">Negative</span><span class="sxs-lookup"><span data-stu-id="27c91-1031">Negative</span></span> 
 </term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="27c91-1032"><see cref="F:System.Double.NaN" /> と等しい</span><span class="sxs-lookup"><span data-stu-id="27c91-1032">Equals <see cref="F:System.Double.NaN" /></span></span></term><description><see cref="F:System.Double.NaN" /></description></item><item><term> <span data-ttu-id="27c91-1033"><see cref="F:System.Double.PositiveInfinity" /> と等しい</span><span class="sxs-lookup"><span data-stu-id="27c91-1033">Equals <see cref="F:System.Double.PositiveInfinity" /></span></span></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  

  <span data-ttu-id="27c91-1034">正方形の面積の平方根は、正方形の任意の辺の長さを表します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1034">The square root of the area of a square represents the length of any side of the square.</span></span> <span data-ttu-id="27c91-1035">次の例では、米国内の一部の都市の面積を表示し、四角形で表されている場合、各都市のサイズの印象を示します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1035">The following example displays the area of some cities in the United States and gives an impression of each city's size if it were represented by a square.</span></span>  
  
 [!code-csharp-interactive[System.Math.Sqrt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.sqrt/cs/sqrt1.cs#1)]
 [!code-vb[System.Math.Sqrt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.sqrt/vb/sqrt1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Pow(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static double Tan (double a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tan(float64 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tan(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tan (a As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tan(double a);" />
      <MemberSignature Language="F#" Value="static member Tan : double -&gt; double" Usage="System.Math.Tan a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="27c91-1036">ラジアンで表した角度。</span><span class="sxs-lookup"><span data-stu-id="27c91-1036">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="27c91-1037">指定された角度のタンジェントを返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1037">Returns the tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="27c91-1038"><paramref name="a" /> のタンジェント。</span><span class="sxs-lookup"><span data-stu-id="27c91-1038">The tangent of <paramref name="a" />.</span></span> <span data-ttu-id="27c91-1039"><paramref name="a" /> が <see cref="F:System.Double.NaN" />、<see cref="F:System.Double.NegativeInfinity" />、<see cref="F:System.Double.PositiveInfinity" /> のいずれかに等しい場合、このメソッドは <see cref="F:System.Double.NaN" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1039">If <paramref name="a" /> is equal to <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-1040">角度 (`a`) は、ラジアンで指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-1040">The angle, `a`, must be in radians.</span></span> <span data-ttu-id="27c91-1041">度をラジアンに変換するには、<xref:System.Math.PI?displayProperty=nameWithType>/180 を乗算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1041">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-1042">次の例は、角度のタンジェントを計算し、それをコンソールに表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-1042">The following example demonstrates how to calculate the tangent of an angle and display it to the console.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/math.atanx/CPP/atan.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/math.atanx/CS/atan.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/math.atanx/VB/atan.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tanh">
      <MemberSignature Language="C#" Value="public static double Tanh (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Tanh(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Tanh(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Tanh (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Tanh(double value);" />
      <MemberSignature Language="F#" Value="static member Tanh : double -&gt; double" Usage="System.Math.Tanh value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="27c91-1043">ラジアンで表した角度。</span><span class="sxs-lookup"><span data-stu-id="27c91-1043">An angle, measured in radians.</span></span></param>
        <summary><span data-ttu-id="27c91-1044">指定された角度のハイパーボリック タンジェントを返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1044">Returns the hyperbolic tangent of the specified angle.</span></span></summary>
        <returns><span data-ttu-id="27c91-1045"><paramref name="value" /> のハイパーボリック タンジェント。</span><span class="sxs-lookup"><span data-stu-id="27c91-1045">The hyperbolic tangent of <paramref name="value" />.</span></span> <span data-ttu-id="27c91-1046"><paramref name="value" /> が <see cref="F:System.Double.NegativeInfinity" /> に等しい場合、このメソッドは -1 を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1046">If <paramref name="value" /> is equal to <see cref="F:System.Double.NegativeInfinity" />, this method returns -1.</span></span> <span data-ttu-id="27c91-1047">値が <see cref="F:System.Double.PositiveInfinity" /> に等しい場合、このメソッドは 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1047">If value is equal to <see cref="F:System.Double.PositiveInfinity" />, this method returns 1.</span></span> <span data-ttu-id="27c91-1048"><paramref name="value" /> が <see cref="F:System.Double.NaN" /> に等しい場合、このメソッドは <see cref="F:System.Double.NaN" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1048">If <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />, this method returns <see cref="F:System.Double.NaN" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-1049">角度 (`value`) は、ラジアンで指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27c91-1049">The angle, `value`, must be in radians.</span></span> <span data-ttu-id="27c91-1050">度をラジアンに変換するには、<xref:System.Math.PI?displayProperty=nameWithType>/180 を乗算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1050">Multiply by <xref:System.Math.PI?displayProperty=nameWithType>/180 to convert degrees to radians.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-1051">次の例では、<xref:System.Math.Tanh%2A> を使用して、選択した値の特定のハイパーボリックタンジェント id を評価します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1051">The following example uses <xref:System.Math.Tanh%2A> to evaluate certain hyperbolic tangent identities for selected values.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Math.Tanh/CPP/tanh.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Tanh/CS/tanh.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Tanh/VB/tanh.vb" id="Snippet1"::: 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Truncate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27c91-1052">数値の整数部を計算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1052">Calculates the integral part of a number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-1053">数値は、0方向に最も近い整数に丸められます。</span><span class="sxs-lookup"><span data-stu-id="27c91-1053">The number is rounded to the nearest integer towards zero.</span></span>  
  
  ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static decimal Truncate (decimal d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal Truncate(valuetype System.Decimal d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Decimal) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal Truncate(System::Decimal d);" />
      <MemberSignature Language="F#" Value="static member Truncate : decimal -&gt; decimal" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-1054">切り捨て対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-1054">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="27c91-1055">指定した 10 進数の整数部を計算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1055">Calculates the integral part of a specified decimal number.</span></span></summary>
        <returns><span data-ttu-id="27c91-1056"><paramref name="d" /> の整数部。つまり、小数部の桁を破棄した後に残る数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-1056">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27c91-1057"><xref:System.Math.Truncate%2A> は、`d` を0方向の最も近い整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-1057"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27c91-1058">次の例では、<xref:System.Math.Truncate%28System.Decimal%29> メソッドを呼び出して、正の値と負の <xref:System.Decimal> 値の両方を切り捨てます。</span><span class="sxs-lookup"><span data-stu-id="27c91-1058">The following example calls the <xref:System.Math.Truncate%28System.Decimal%29> method to truncate both a positive and a negative <xref:System.Decimal> value.</span></span>  
  
 [!code-csharp-interactive[System.Math.Truncate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#2)]
 [!code-vb[System.Math.Truncate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Decimal)" />
        <altmember cref="M:System.Math.Floor(System.Decimal)" />
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static double Truncate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Truncate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Math.Truncate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Truncate (d As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Truncate(double d);" />
      <MemberSignature Language="F#" Value="static member Truncate : double -&gt; double" Usage="System.Math.Truncate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="27c91-1059">切り捨て対象の数値。</span><span class="sxs-lookup"><span data-stu-id="27c91-1059">A number to truncate.</span></span></param>
        <summary><span data-ttu-id="27c91-1060">指定した倍精度浮動小数点数の整数部を計算します。</span><span class="sxs-lookup"><span data-stu-id="27c91-1060">Calculates the integral part of a specified double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="27c91-1061"><paramref name="d" /> の整数部。つまり、小数部の桁を破棄した後に残る数値 (次の表にリストされている値のいずれか)。</span><span class="sxs-lookup"><span data-stu-id="27c91-1061">The integral part of <paramref name="d" />; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</span></span>  
  
 <list type="table"><listheader><term><paramref name="d" /></term><description> <span data-ttu-id="27c91-1062">戻り値</span><span class="sxs-lookup"><span data-stu-id="27c91-1062">Return value</span></span> 
 </description></listheader><item><term><see cref="F:System.Double.NaN" /></term><description><see cref="F:System.Double.NaN" /></description></item><item><term><see cref="F:System.Double.NegativeInfinity" /></term><description><see cref="F:System.Double.NegativeInfinity" /></description></item><item><term><see cref="F:System.Double.PositiveInfinity" /></term><description><see cref="F:System.Double.PositiveInfinity" /></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="27c91-1063"><xref:System.Math.Truncate%2A> は、`d` を0方向の最も近い整数に丸めます。</span><span class="sxs-lookup"><span data-stu-id="27c91-1063"><xref:System.Math.Truncate%2A> rounds `d` to the nearest integer towards zero.</span></span>  
  
<span data-ttu-id="27c91-1064">Visual Basic 15.8 以降では、`Truncate` メソッドから返された値を任意の[整数変換関数](/dotnet/visual-basic/language-reference/functions/conversion-functions)に渡す場合、または `Truncate` によって返される double 値が[Option Strict](/dotnet/visual-basic/language-reference/statements/option-strict-statement)が Off に設定されている整数に自動的に変換される場合は、倍精度整数変換のパフォーマンスが最適化されます。</span><span class="sxs-lookup"><span data-stu-id="27c91-1064">Starting with Visual Basic 15.8, the performance of Double-to-integer conversion is optimized if you pass the value returned by the `Truncate` method to the any of the [integral conversion functions](/dotnet/visual-basic/language-reference/functions/conversion-functions), or if the Double value returned by `Truncate` is automatically converted to an integer with [Option Strict](/dotnet/visual-basic/language-reference/statements/option-strict-statement) set to Off.</span></span> <span data-ttu-id="27c91-1065">この最適化によって、コードをより速く実行できます。大きい数値の整数型への変換を行うコードでは、最大で 2 倍速くなります。</span><span class="sxs-lookup"><span data-stu-id="27c91-1065">This optimization allows code to run faster -- up to twice as fast for code that does a large number of conversions to integer types.</span></span> <span data-ttu-id="27c91-1066">次の例は、このように最適化された変換を示しています。</span><span class="sxs-lookup"><span data-stu-id="27c91-1066">The following example illustrates such an optimized conversion:</span></span>
   
```vb
Dim d As Double = 164.7194
Dim i As Integer = CInt(Math.Truncate(d))     ' Result: 164
```

## Examples  
 <span data-ttu-id="27c91-1067">次の例では、<xref:System.Math.Truncate%28System.Double%29> メソッドを呼び出して、正の値と負の <xref:System.Double> 値の両方を切り捨てます。</span><span class="sxs-lookup"><span data-stu-id="27c91-1067">The following example calls the <xref:System.Math.Truncate%28System.Double%29> method to truncate both a positive and a negative <xref:System.Double> value.</span></span>  
  
 [!code-csharp-interactive[System.Math.Truncate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Math.Truncate/cs/Truncate1.cs#1)]
 [!code-vb[System.Math.Truncate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Math.Truncate/vb/Truncate1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Math.Round" />
        <altmember cref="M:System.Math.Ceiling(System.Double)" />
        <altmember cref="M:System.Math.Floor(System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>
