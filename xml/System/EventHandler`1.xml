<Type Name="EventHandler&lt;TEventArgs&gt;" FullName="System.EventHandler&lt;TEventArgs&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="73f79ef56df0958ba52f12fb3f60940c0e263744" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82441525" /></Metadata><TypeSignature Language="C#" Value="public delegate void EventHandler&lt;TEventArgs&gt;(object sender, TEventArgs e);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EventHandler`1&lt;TEventArgs&gt; extends System.MulticastDelegate" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(Of TEventArgs)(sender As Object, e As TEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventArgs&gt;&#xA;public delegate void EventHandler(System::Object ^ sender, TEventArgs e);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type EventHandler&lt;'EventArgs&gt; = delegate of obj * 'EventArgs -&gt; unit" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public delegate void EventHandler&lt;TEventArgs&gt;(object sender, TEventArgs e) where TEventArgs : EventArgs;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler`1&lt;(class System.EventArgs) TEventArgs&gt; extends System.MulticastDelegate" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventArgs&gt;&#xA; where TEventArgs : EventArgspublic delegate void EventHandler(System::Object ^ sender, TEventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="F#" Value="type EventHandler&lt;'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; = delegate of obj * 'EventArgs -&gt; unit" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler`1&lt;TEventArgs&gt; extends System.MulticastDelegate" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="TEventArgs" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="TEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="TEventArgs">イベントにより生成されるイベント データの型。</typeparam>
    <param name="sender">イベントのソース。</param>
    <param name="e">イベント データを格納しているオブジェクト。</param>
    <summary>イベントがデータを提供するときにイベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework のイベントモデルは、イベントをハンドラーに接続するイベントデリゲートを持つことに基づいています。 イベントを発生させるには、次の2つの要素が必要です。  
  
-   イベントへの応答を提供するメソッドを参照するデリゲート。  
  
-   イベントがデータを提供する場合は、イベントデータを保持するクラス (オプション)。  
  
 デリゲートは、メソッドのシグネチャ (戻り値の型とパラメーターリスト型) を定義する型です。 デリゲート型を使用して、デリゲートと同じシグネチャを持つ任意のメソッドを参照できる変数を宣言できます。  
  
 イベントハンドラーデリゲートの標準シグネチャは、値を返さないメソッドを定義します。 このメソッドの最初のパラメーターは <xref:System.Object> 型で、イベントを発生させるインスタンスを参照します。 2番目のパラメーターは <xref:System.EventArgs> 型から派生し、イベントデータを保持します。 イベントがイベントデータを生成しない場合、2番目のパラメーターは単に <xref:System.EventArgs.Empty?displayProperty=nameWithType> フィールドの値です。 それ以外の場合、2番目のパラメーターは <xref:System.EventArgs> から派生した型であり、イベントデータを保持するために必要なフィールドまたはプロパティを提供します。  
  
 <xref:System.EventHandler%601> デリゲートは、データを生成するイベントのイベントハンドラーメソッドを表す、事前に定義されたデリゲートです。 <xref:System.EventHandler%601> を使用する利点は、イベントによってイベントデータが生成される場合に、独自のカスタムデリゲートをコーディングする必要がないことです。 単純に、イベントデータオブジェクトの型をジェネリックパラメーターとして指定します。  
  
 イベントを処理するメソッドにイベントを関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。  
  
 イベントハンドラーデリゲートの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 次の例は、`ThresholdReached`という名前のイベントを示しています。 イベントは <xref:System.EventHandler%601> デリゲートに関連付けられています。  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altCompliant cref="T:System.EventHandler" />
    <altmember cref="T:System.EventHandler" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
    <related type="Article" href="~/docs/standard/events/index.md">イベントの処理と発生</related>
    <related type="Article" href="~/docs/standard/events/how-to-raise-and-consume-events.md">方法 : イベントを発生させる/処理する</related>
    <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/events/index.md">イベント (Visual Basic)</related>
    <related type="Article" href="~/docs/csharp/programming-guide/events/index.md">イベント (C# プログラミング ガイド)</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/windows/apps/hh758286(v=win.10)">イベントとルーティングイベントの概要 (Windows ストアアプリ)</related>
  </Docs>
</Type>
