<Type Name="Tuple&lt;T1,T2&gt;" FullName="System.Tuple&lt;T1,T2&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="18ba922da01a1c58ecb5f0116d302b71265a9cb2" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75038905" /></Metadata><TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`2&lt;T1, T2&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`2" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Tuple&lt;'T1, 'T2&gt; = class&#xA;    interface IStructuralEquatable&#xA;    interface IStructuralComparable&#xA;    interface IComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="e508c-101">組の 1 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="e508c-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="e508c-102">組の 2 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="e508c-102">The type of the tuple's second component.</span></span></typeparam>
    <summary><span data-ttu-id="e508c-103">2 タプル、すなわちペアを表します。</span><span class="sxs-lookup"><span data-stu-id="e508c-103">Represents a 2-tuple, or pair.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-104">組は、特定の数と値のシーケンスを持つデータ構造です。</span><span class="sxs-lookup"><span data-stu-id="e508c-104">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="e508c-105"><xref:System.Tuple%602> クラスは2つのタプル (ペア) を表します。これは2つのコンポーネントを持つタプルです。</span><span class="sxs-lookup"><span data-stu-id="e508c-105">The <xref:System.Tuple%602> class represents a 2-tuple, or pair, which is a tuple that has two components.</span></span> <span data-ttu-id="e508c-106">2組は <xref:System.Collections.Generic.KeyValuePair%602> 構造体に似ています。</span><span class="sxs-lookup"><span data-stu-id="e508c-106">A 2-tuple is similar to a <xref:System.Collections.Generic.KeyValuePair%602> structure.</span></span>  
  
 <span data-ttu-id="e508c-107"><xref:System.Tuple%602.%23ctor%2A> コンストラクターまたは静的 <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> メソッドを呼び出すことによって、<xref:System.Tuple%602> オブジェクトをインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="e508c-107">You can instantiate a <xref:System.Tuple%602> object by calling either the <xref:System.Tuple%602.%23ctor%2A> constructor or the static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e508c-108">タプルのコンポーネントの値を取得するには、読み取り専用の <xref:System.Tuple%602.Item1%2A> と <xref:System.Tuple%602.Item2%2A> インスタンスのプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e508c-108">You can retrieve the values of the tuple's components by using the read-only <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> instance properties.</span></span>  
  
 <span data-ttu-id="e508c-109">組は、主に次の4つの方法で使用されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-109">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="e508c-110">データの1つのセットを表す場合は。</span><span class="sxs-lookup"><span data-stu-id="e508c-110">To represent a single set of data.</span></span> <span data-ttu-id="e508c-111">たとえば、組はデータベース内のレコードを表すことができ、そのコンポーネントはそのレコードのフィールドを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="e508c-111">For example, a tuple can represent a record in a database, and its components can represent that record's fields.</span></span>  
  
-   <span data-ttu-id="e508c-112">データセットに簡単にアクセスして操作できるようにするため。</span><span class="sxs-lookup"><span data-stu-id="e508c-112">To provide easy access to, and manipulation of, a data set.</span></span> <span data-ttu-id="e508c-113">次の例では、学生の名前とそれに対応するテストスコアを含む <xref:System.Tuple%602> オブジェクトの配列を定義します。</span><span class="sxs-lookup"><span data-stu-id="e508c-113">The following example defines an array of <xref:System.Tuple%602> objects that contain the names of students and their corresponding test scores.</span></span> <span data-ttu-id="e508c-114">次に、配列を反復処理して平均テストスコアを計算します。</span><span class="sxs-lookup"><span data-stu-id="e508c-114">It then iterates the array to calculate the mean test score.</span></span>  
  
     [!code-csharp[System.Tuple\`2.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`2.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.class/vb/example1.vb#1)]  
  
-   <span data-ttu-id="e508c-115">`out` パラメーター (でC#は) または `ByRef` パラメーター (Visual Basic) を使用せずに、メソッドから複数の値を返す場合は。</span><span class="sxs-lookup"><span data-stu-id="e508c-115">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="e508c-116">たとえば、次の例では、<xref:System.Tuple%602> オブジェクトを使用して、商と、整数除算によって得られる剰余を返します。</span><span class="sxs-lookup"><span data-stu-id="e508c-116">For example, the following example uses a <xref:System.Tuple%602> object to return the quotient and the remainder that result from integer division.</span></span>  
  
     [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
     [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
-   <span data-ttu-id="e508c-117">1つのパラメーターを使用して複数の値をメソッドに渡す場合は。</span><span class="sxs-lookup"><span data-stu-id="e508c-117">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="e508c-118">たとえば、<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> メソッドには、起動時にスレッドが実行するメソッドに1つの値を指定できる1つのパラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="e508c-118">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="e508c-119">メソッドの引数として <xref:System.Tuple%602> オブジェクトを指定した場合は、スレッドのスタートアップルーチンに2つのデータ項目を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e508c-119">If you supply a <xref:System.Tuple%602> object as the method argument, you can supply the thread's startup routine with two items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.#ctor(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2);" />
      <MemberSignature Language="F#" Value="new Tuple&lt;'T1, 'T2&gt; : 'T1 * 'T2 -&gt; Tuple&lt;'T1, 'T2&gt;" Usage="new System.Tuple&lt;'T1, 'T2&gt; (item1, item2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="e508c-120">組の 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="e508c-120">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="e508c-121">組の 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="e508c-121">The value of the tuple's second component.</span></span></param>
        <summary><span data-ttu-id="e508c-122"><see cref="T:System.Tuple`2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e508c-122">Initializes a new instance of the <see cref="T:System.Tuple`2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-123">また、静的 <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> メソッドを使用して、コンポーネントの型を明示的に指定せずに2タプルオブジェクトをインスタンス化することもできます。</span><span class="sxs-lookup"><span data-stu-id="e508c-123">You can also use the static <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method to instantiate a 2-tuple object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="e508c-124">次の例では、<xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> メソッドを使用して、<xref:System.String> と <xref:System.Double>型のコンポーネントを持つ2タプルをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="e508c-124">The following example uses the <xref:System.Tuple.Create%60%602%28%60%600%2C%60%601%29?displayProperty=nameWithType> method to instantiate a 2-tuple whose components are of type <xref:System.String> and <xref:System.Double>.</span></span>  
  
 [!code-csharp[System.Tuple.Create#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#3)]
 [!code-vb[System.Tuple.Create#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#3)]  
  
 <span data-ttu-id="e508c-125">これは、<xref:System.Tuple%602.%23ctor%2A> クラスコンストラクターへの次の呼び出しに相当します。</span><span class="sxs-lookup"><span data-stu-id="e508c-125">This is equivalent to the following call to the <xref:System.Tuple%602.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple.Create#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#4)]
 [!code-vb[System.Tuple.Create#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="tuple.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e508c-126">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e508c-126">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="e508c-127">現在の <see cref="T:System.Tuple`2" /> オブジェクトが、指定されたオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e508c-127">Returns a value that indicates whether the current <see cref="T:System.Tuple`2" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="e508c-128">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e508c-128"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-129">`obj` パラメーターは、次の条件下で現在のインスタンスと等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="e508c-129">The `obj` parameter is considered to be equal to the current instance under the following conditions:</span></span>  
  
-   <span data-ttu-id="e508c-130">これは <xref:System.Tuple%602> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="e508c-130">It is a <xref:System.Tuple%602> object.</span></span>  
  
-   <span data-ttu-id="e508c-131">その2つのコンポーネントは、現在のインスタンスと同じ型です。</span><span class="sxs-lookup"><span data-stu-id="e508c-131">Its two components are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="e508c-132">2つのコンポーネントは、現在のインスタンスのコンポーネントと同じです。</span><span class="sxs-lookup"><span data-stu-id="e508c-132">Its two components are equal to those of the current instance.</span></span> <span data-ttu-id="e508c-133">等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-133">Equality is determined by the default object equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e508c-134">次の例では、<xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType> メソッドを呼び出して、<xref:System.Tuple%602> オブジェクトの配列内のいずれかのオブジェクトが互いに等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="e508c-134">The following example calls the <xref:System.Tuple%602.Equals%28System.Object%29?displayProperty=nameWithType> method to determine whether any of the objects in an array of <xref:System.Tuple%602> objects are equal to one another.</span></span> <span data-ttu-id="e508c-135">出力には、コンポーネントが等しい値を持つ <xref:System.Tuple%602> オブジェクトを比較するときに、<xref:System.Tuple%602.Equals%28System.Object%29> メソッドによって `true` 返される事実が反映されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-135">The output reflects the fact that the <xref:System.Tuple%602.Equals%28System.Object%29> method returns `true` when comparing <xref:System.Tuple%602> objects whose components have equal values.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`2.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="tuple.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e508c-136">現在の <see cref="T:System.Tuple`2" /> オブジェクトのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="e508c-136">Returns the hash code for the current <see cref="T:System.Tuple`2" /> object.</span></span></summary>
        <returns><span data-ttu-id="e508c-137">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="e508c-137">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item1 : 'T1" Usage="System.Tuple&lt;'T1, 'T2&gt;.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e508c-138">現在の <see cref="T:System.Tuple`2" /> オブジェクトの 1 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e508c-138">Gets the value of the current <see cref="T:System.Tuple`2" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="e508c-139">現在の <see cref="T:System.Tuple`2" /> オブジェクトの 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="e508c-139">The value of the current <see cref="T:System.Tuple`2" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-140"><xref:System.Tuple%602.Item1%2A> コンポーネントの型は、次の2つの方法のいずれかで動的に決定できます。</span><span class="sxs-lookup"><span data-stu-id="e508c-140">You can dynamically determine the type of the <xref:System.Tuple%602.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="e508c-141"><xref:System.Tuple%602.Item1%2A> プロパティによって返される値に対して `GetType` メソッドを呼び出す。</span><span class="sxs-lookup"><span data-stu-id="e508c-141">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%602.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="e508c-142"><xref:System.Tuple%602> オブジェクトを表す <xref:System.Type> オブジェクトを取得し、その <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> メソッドによって返される配列から最初の要素を取得する。</span><span class="sxs-lookup"><span data-stu-id="e508c-142">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%602> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e508c-143">この例では、<xref:System.Tuple%602.Item1%2A> プロパティと <xref:System.Tuple%602.Item2%2A> プロパティを使用して、2タプルの形式で複数の値を返すメソッドを定義しています。</span><span class="sxs-lookup"><span data-stu-id="e508c-143">The example illustrates the use of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties to define a method that returns multiple values in the form of a 2-tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberSignature Language="F#" Value="member this.Item2 : 'T2" Usage="System.Tuple&lt;'T1, 'T2&gt;.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e508c-144">現在の <see cref="T:System.Tuple`2" /> オブジェクトの 2 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e508c-144">Gets the value of the current <see cref="T:System.Tuple`2" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="e508c-145">現在の <see cref="T:System.Tuple`2" /> オブジェクトの 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="e508c-145">The value of the current <see cref="T:System.Tuple`2" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-146"><xref:System.Tuple%602.Item2%2A> コンポーネントの型は、次の2つの方法のいずれかで動的に決定できます。</span><span class="sxs-lookup"><span data-stu-id="e508c-146">You can dynamically determine the type of the <xref:System.Tuple%602.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="e508c-147"><xref:System.Tuple%602.Item2%2A> プロパティによって返される値に対して `GetType` メソッドを呼び出す。</span><span class="sxs-lookup"><span data-stu-id="e508c-147">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%602.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="e508c-148"><xref:System.Tuple%602> オブジェクトを表す <xref:System.Type> オブジェクトを取得し、その <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> メソッドによって返される配列から2番目の要素を取得する。</span><span class="sxs-lookup"><span data-stu-id="e508c-148">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%602> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e508c-149">この例では、<xref:System.Tuple%602.Item1%2A> プロパティと <xref:System.Tuple%602.Item2%2A> プロパティを使用して、2タプルの形式で複数の値を返すメソッドを定義しています。</span><span class="sxs-lookup"><span data-stu-id="e508c-149">The example illustrates the use of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties to define a method that returns multiple values in the form of a 2-tuple.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`2.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e508c-150">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e508c-150">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="e508c-151">比較用のカスタムの規則を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e508c-151">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="e508c-152">指定された比較子を使用して現在の <see cref="T:System.Tuple`2" /> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="e508c-152">Compares the current <see cref="T:System.Tuple`2" /> object to a specified object by using a specified comparer, and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="e508c-153">並べ替え順序における、このインスタンスと <paramref name="other" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="e508c-153">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e508c-154">[値]</span><span class="sxs-lookup"><span data-stu-id="e508c-154">Value</span></span> 
 </term><description> <span data-ttu-id="e508c-155">説明</span><span class="sxs-lookup"><span data-stu-id="e508c-155">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e508c-156">負の整数</span><span class="sxs-lookup"><span data-stu-id="e508c-156">A negative integer</span></span> 
 </term><description> <span data-ttu-id="e508c-157">このインスタンスの位置が <paramref name="other" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="e508c-157">This instance precedes <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e508c-158">0</span><span class="sxs-lookup"><span data-stu-id="e508c-158">Zero</span></span> 
 </term><description> <span data-ttu-id="e508c-159">このインスタンスと <paramref name="other" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="e508c-159">This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e508c-160">正の整数</span><span class="sxs-lookup"><span data-stu-id="e508c-160">A positive integer</span></span> 
 </term><description> <span data-ttu-id="e508c-161">このインスタンスの位置が <paramref name="other" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="e508c-161">This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-162">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e508c-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e508c-163">これは、<xref:System.Tuple%602> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e508c-163">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="e508c-164">このメソッドは直接呼び出すことができますが、コレクションのメンバーを並べ替える <xref:System.Collections.IComparer> パラメーターを含むコレクションの並べ替えメソッドによって最も一般的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-164">Although this method can be called directly, it is most commonly called by collection sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="e508c-165">たとえば、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> メソッドと、<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> コンストラクターを使用してインスタンス化される <xref:System.Collections.SortedList> オブジェクトの <xref:System.Collections.SortedList.Add%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-165">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e508c-166"><xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> メソッドは、並べ替え操作で使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="e508c-166">The <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="e508c-167">比較の主な目的が2つのオブジェクトが等しいかどうかを判断する場合は、この値を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="e508c-167">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="e508c-168">2つのオブジェクトが等しいかどうかを判断するには、<xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e508c-168">To determine whether two objects are equal, call the <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e508c-169">次の例では、学生の名前とテストスコアで構成される <xref:System.Tuple%602> オブジェクトの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="e508c-169">The following example creates an array of <xref:System.Tuple%602> objects that consist of a student's name and test score.</span></span> <span data-ttu-id="e508c-170">配列内の各組のコンポーネントを並べ替えられていない順序で表示し、配列を並べ替えた後、<xref:System.Tuple%602.ToString%2A> を呼び出して各組の値を並べ替え順に表示します。</span><span class="sxs-lookup"><span data-stu-id="e508c-170">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%602.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="e508c-171">この例では、配列を並べ替えるために、<xref:System.Collections.IComparer> インターフェイスを実装するジェネリック `ScoreComparer` クラスを定義し、最初のコンポーネントではなく、2番目のコンポーネントの値に基づいて <xref:System.Tuple%602> オブジェクトを昇順で並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="e508c-171">To sort the array, the example defines a generic `ScoreComparer` class that implements the <xref:System.Collections.IComparer> interface and sorts the <xref:System.Tuple%602> objects in ascending order by the value of their second component rather than their first component.</span></span> <span data-ttu-id="e508c-172">この例では、<xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> メソッドが直接呼び出されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e508c-172">Note that the example does not directly call the <xref:System.Tuple%602.System%23Collections%23IStructuralComparable%23CompareTo%2A> method.</span></span> <span data-ttu-id="e508c-173">このメソッドは、配列内の各要素に対して <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> メソッドによって暗黙的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-173">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`2.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`2.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e508c-174"><paramref name="other" /> は <see cref="T:System.Tuple`2" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="e508c-174"><paramref name="other" /> is not a <see cref="T:System.Tuple`2" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="e508c-175">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e508c-175">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="e508c-176">2 つのオブジェクトが等しいかどうかの評価に使用するメソッドを定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e508c-176">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="e508c-177">指定された比較メソッドに基づいて、現在の <see cref="T:System.Tuple`2" /> オブジェクトが指定したオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="e508c-177">Returns a value that indicates whether the current <see cref="T:System.Tuple`2" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns><span data-ttu-id="e508c-178">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e508c-178"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-179">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e508c-179">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e508c-180">これは、<xref:System.Tuple%602> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e508c-180">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="e508c-181"><xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> 実装は、`other` が `null`されていない場合、およびそのコンポーネントが現在のインスタンスC#と同じ型の <xref:System.Tuple%602> オブジェクトに正常にキャスト (in) または変換 (Visual Basic) できる場合にのみ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-181">The <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%602> object whose components are of the same types as the current instance.</span></span> <span data-ttu-id="e508c-182"><xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> メソッドは、最初に <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> 実装と比較する <xref:System.Tuple%602> オブジェクトの <xref:System.Tuple%602.Item1%2A> 値を渡します。</span><span class="sxs-lookup"><span data-stu-id="e508c-182">The <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method first passes the <xref:System.Tuple%602.Item1%2A> values of the <xref:System.Tuple%602> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="e508c-183">このメソッド呼び出しによって `true`が返された場合、メソッドが再度呼び出され、2つの <xref:System.Tuple%602> オブジェクトの <xref:System.Tuple%602.Item2%2A> 値が渡されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-183">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%602.Item2%2A> values of the two <xref:System.Tuple%602> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e508c-184">次の例では、<xref:System.Collections.IEqualityComparer> インターフェイスを実装する `Item2Comparer` クラスを定義し、<xref:System.Tuple%602> オブジェクトが等しいかどうかを評価する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="e508c-184">The following example defines an `Item2Comparer` class that implements the <xref:System.Collections.IEqualityComparer> interface and changes the way in which <xref:System.Tuple%602> objects are evaluated for equality.</span></span> <span data-ttu-id="e508c-185">メソッドは、2つの <xref:System.Tuple%602> オブジェクトの <xref:System.Tuple%602.Item1%2A> プロパティ値が渡されたときに常に `true` を返し、<xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> メソッドを呼び出して <xref:System.Tuple%602.Item2%2A> プロパティ値を評価します。</span><span class="sxs-lookup"><span data-stu-id="e508c-185">The method always returns `true` when it is passed the <xref:System.Tuple%602.Item1%2A> property values of two <xref:System.Tuple%602> objects, and it calls the <xref:System.Tuple%602.System%23Collections%23IStructuralEquatable%23Equals%2A> method to evaluate their <xref:System.Tuple%602.Item2%2A> property values.</span></span> <span data-ttu-id="e508c-186">その結果、メソッドは、<xref:System.Tuple%602.Item2%2A> プロパティの値のみに基づいて等しいかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="e508c-186">As a result, the method tests for equality based only on the value of the <xref:System.Tuple%602.Item2%2A> property.</span></span> <span data-ttu-id="e508c-187">出力は、ランナーの名前と実行された距離を記録する <xref:System.Tuple%602> オブジェクトのデータセットの結果を示しています。</span><span class="sxs-lookup"><span data-stu-id="e508c-187">The output illustrates the result for a data set of <xref:System.Tuple%602> objects that record the names of runners and the distances that they ran.</span></span>  
  
 [!code-csharp[System.Tuple\`2.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`2.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="e508c-188">現在の <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> オブジェクトのハッシュ コードを計算する <see cref="T:System.Tuple`2" /> メソッドを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e508c-188">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`2" /> object.</span></span></param>
        <summary><span data-ttu-id="e508c-189">指定した計算メソッドを使用して、現在の <see cref="T:System.Tuple`2" /> オブジェクトのハッシュ コードを計算します。</span><span class="sxs-lookup"><span data-stu-id="e508c-189">Calculates the hash code for the current <see cref="T:System.Tuple`2" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="e508c-190">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="e508c-190">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-191">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e508c-191">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e508c-192">これは、<xref:System.Tuple%602> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e508c-192">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="e508c-193">メソッドは、`comparer` オブジェクトの <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> の実装の呼び出しを単にラップします。</span><span class="sxs-lookup"><span data-stu-id="e508c-193">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="e508c-194">ハッシュコードを計算するために使用されるアルゴリズムは、等しいと見なされる2つの <xref:System.Tuple%602> オブジェクトに対して同じハッシュコードを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e508c-194">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%602> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="e508c-195">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e508c-195">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="e508c-196">現在の <see cref="T:System.Tuple`2" /> オブジェクトと指定したオブジェクトを比較して、現在のオブジェクトが、並べ替え順序において、指定したオブジェクトの前後または同じ位置のいずれにあるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="e508c-196">Compares the current <see cref="T:System.Tuple`2" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="e508c-197">並べ替え順序における、このインスタンスと <paramref name="obj" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="e508c-197">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="e508c-198">[値]</span><span class="sxs-lookup"><span data-stu-id="e508c-198">Value</span></span> 
 </term><description> <span data-ttu-id="e508c-199">説明</span><span class="sxs-lookup"><span data-stu-id="e508c-199">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="e508c-200">負の整数</span><span class="sxs-lookup"><span data-stu-id="e508c-200">A negative integer</span></span> 
 </term><description> <span data-ttu-id="e508c-201">このインスタンスの位置が <paramref name="obj" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="e508c-201">This instance precedes <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e508c-202">0</span><span class="sxs-lookup"><span data-stu-id="e508c-202">Zero</span></span> 
 </term><description> <span data-ttu-id="e508c-203">このインスタンスと <paramref name="obj" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="e508c-203">This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="e508c-204">正の整数</span><span class="sxs-lookup"><span data-stu-id="e508c-204">A positive integer</span></span> 
 </term><description> <span data-ttu-id="e508c-205">このインスタンスの位置が <paramref name="obj" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="e508c-205">This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-206">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="e508c-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="e508c-207">これは、<xref:System.Tuple%602> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="e508c-207">It can be used only when the <xref:System.Tuple%602> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="e508c-208">このメソッドは、<xref:System.Tuple%602> クラスの <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="e508c-208">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%602> class.</span></span> <span data-ttu-id="e508c-209">メソッドは直接呼び出すことができますが、最も一般的に呼び出されるのは、コレクションのメンバーの順序を指定するために、<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> や <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>などのコレクションの並べ替えメソッドの既定のオーバーロードです。</span><span class="sxs-lookup"><span data-stu-id="e508c-209">Although the method can be called directly, it is most commonly called by the default overloads of collection sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e508c-210"><xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> メソッドは、並べ替え操作で使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="e508c-210">The <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method is intended for use in sorting operations.</span></span> <span data-ttu-id="e508c-211">比較の主な目的が2つのオブジェクトが等しいかどうかを判断する場合は、この値を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="e508c-211">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="e508c-212">2つのオブジェクトが等しいかどうかを判断するには、<xref:System.Tuple%602.Equals%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e508c-212">To determine whether two objects are equal, call the <xref:System.Tuple%602.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="e508c-213"><xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> メソッドでは、既定のオブジェクト比較子を使用して、各コンポーネントを比較します。</span><span class="sxs-lookup"><span data-stu-id="e508c-213">The <xref:System.Tuple%602.System%23IComparable%23CompareTo%2A?displayProperty=nameWithType> method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e508c-214">次の例では、学生の名前とテストスコアで構成される <xref:System.Tuple%602> オブジェクトの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="e508c-214">The following example creates an array of <xref:System.Tuple%602> objects that consist of a student's name and test score.</span></span> <span data-ttu-id="e508c-215">配列内の各組のコンポーネントを並べ替えられていない順序で表示し、配列を並べ替えた後、<xref:System.Tuple%602.ToString%2A> を呼び出して各組の値を並べ替え順に表示します。</span><span class="sxs-lookup"><span data-stu-id="e508c-215">It displays the component of each tuple in the array in unsorted order, sorts the array, and then calls <xref:System.Tuple%602.ToString%2A> to display the value of each tuple in sorted order.</span></span> <span data-ttu-id="e508c-216">出力は、配列が最初のコンポーネントによって並べ替えられていることを示しています。</span><span class="sxs-lookup"><span data-stu-id="e508c-216">The output shows that the array has been sorted by its first component.</span></span> <span data-ttu-id="e508c-217">この例では、<xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29> メソッドが直接呼び出されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e508c-217">Note that the example does not directly call the <xref:System.Tuple%602.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="e508c-218">このメソッドは、配列内の各要素に対して <xref:System.Array.Sort%28System.Array%29> メソッドによって暗黙的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-218">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`2.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`2.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e508c-219"><paramref name="obj" /> は <see cref="T:System.Tuple`2" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="e508c-219"><paramref name="obj" /> is not a <see cref="T:System.Tuple`2" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple`2.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Runtime::CompilerServices::ITuple::Item[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="e508c-220">指定した <see langword="Tuple" /> 要素のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e508c-220">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="e508c-221"><paramref name="index" /> は 0 から 1 までです。</span><span class="sxs-lookup"><span data-stu-id="e508c-221"><paramref name="index" /> can range from 0 to 1.</span></span></param>
        <summary><span data-ttu-id="e508c-222">指定した <see langword="Tuple" /> 要素の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e508c-222">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="e508c-223">指定した位置にある <see langword="Tuple" /> 要素の値。</span><span class="sxs-lookup"><span data-stu-id="e508c-223">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-224"><xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> プロパティは、明示的なインターフェイスの実装です。</span><span class="sxs-lookup"><span data-stu-id="e508c-224">The <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="e508c-225">これを呼び出すには、<xref:System.Tuple%602> オブジェクトを <xref:System.Runtime.CompilerServices.ITuple> インターフェイスオブジェクトにキャストまたは変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e508c-225">To call it, you must cast or convert the <xref:System.Tuple%602> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="e508c-226"><paramref name="index" /> が 0 より小さいか、または 1 を超えています。</span><span class="sxs-lookup"><span data-stu-id="e508c-226"><paramref name="index" /> is less than 0 or greater than 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`2.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System::Runtime::CompilerServices::ITuple::Length { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Runtime.CompilerServices.ITuple.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e508c-227"><see langword="Tuple" /> にある要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e508c-227">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="e508c-228"><see cref="T:System.Tuple`2" /> オブジェクト内の要素数、2。</span><span class="sxs-lookup"><span data-stu-id="e508c-228">2, the number of elements in a <see cref="T:System.Tuple`2" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-229"><xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> プロパティは、明示的なインターフェイスの実装です。</span><span class="sxs-lookup"><span data-stu-id="e508c-229">The <xref:System.Tuple%602.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="e508c-230">これを呼び出すには、<xref:System.Tuple%602> オブジェクトを <xref:System.Runtime.CompilerServices.ITuple> インターフェイスオブジェクトにキャストまたは変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e508c-230">To call it, you must cast or convert the <xref:System.Tuple%602> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="tuple.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e508c-231">この <see cref="T:System.Tuple`2" /> インスタンスの値を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="e508c-231">Returns a string that represents the value of this <see cref="T:System.Tuple`2" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e508c-232">この <see cref="T:System.Tuple`2" /> オブジェクトの文字列表現。</span><span class="sxs-lookup"><span data-stu-id="e508c-232">The string representation of this <see cref="T:System.Tuple`2" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e508c-233">このメソッドによって返される文字列の形式は、(*Item1*, *Item2*) です。ここで、 *Item1*と*Item2*は <xref:System.Tuple%602.Item1%2A> プロパティと <xref:System.Tuple%602.Item2%2A> プロパティの値を表します。</span><span class="sxs-lookup"><span data-stu-id="e508c-233">The string returned by this method takes the form (*Item1*, *Item2*), where *Item1* and *Item2* represent the values of the <xref:System.Tuple%602.Item1%2A> and <xref:System.Tuple%602.Item2%2A> properties.</span></span> <span data-ttu-id="e508c-234">どちらかのプロパティ値が `null`場合は、<xref:System.String.Empty?displayProperty=nameWithType>として表されます。</span><span class="sxs-lookup"><span data-stu-id="e508c-234">If either property value is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e508c-235">次の例は、<xref:System.Tuple%602.ToString%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="e508c-235">The following example illustrates the <xref:System.Tuple%602.ToString%2A> method.</span></span>  
  
 [!code-csharp[System.Tuple\`2.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`2.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`2.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`2.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
