<Type Name="Activator" FullName="System.Activator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0533097c0348242efeed77e8f4d1b15822b51559" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400968" /></Metadata><TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <TypeSignature Language="F#" Value="type Activator = class&#xA;    interface _Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="68621-101">オブジェクトの型をローカル サイトまたはリモート サイトに作成するメソッド、または既存のリモート オブジェクトへの参照を取得するメソッドを保持します。</span><span class="sxs-lookup"><span data-stu-id="68621-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span></span> <span data-ttu-id="68621-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="68621-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-103"><xref:System.Activator.CreateInstance%2A> メソッドは、指定された引数に最も一致するコンストラクターを呼び出すことによって、アセンブリで定義されている型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="68621-104">引数が指定されていない場合、パラメーターをとらないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-104">If no arguments are specified, the constructor that takes no parameters, that is, the parameterless constructor, is invoked.</span></span>  
  
 <span data-ttu-id="68621-105">コンストラクターを検索して呼び出すには、十分なアクセス許可が必要です。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68621-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="68621-106">既定では、コンストラクターの検索中に、パブリックコンストラクターだけが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="68621-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="68621-107">コンストラクターまたはパラメーターなしのコンストラクターが見つからない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68621-107">If no constructor or parameterless constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="68621-108">バインダーパラメーターは、アセンブリ内で適切なコンストラクターを検索するオブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="68621-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="68621-109">独自のバインダーと検索条件を指定できます。</span><span class="sxs-lookup"><span data-stu-id="68621-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="68621-110">バインダーが指定されていない場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="68621-111">詳細については、<xref:System.Reflection.Binder?displayProperty=nameWithType> クラスおよび <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="68621-112">証拠パラメーターは、コンストラクターのセキュリティポリシーとアクセス許可に影響します。</span><span class="sxs-lookup"><span data-stu-id="68621-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="68621-113">詳細については、<xref:System.Security.Policy.Evidence?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="68621-114">型のインスタンスは、ローカルまたはリモートのサイトで作成できます。</span><span class="sxs-lookup"><span data-stu-id="68621-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="68621-115">型がリモートで作成されている場合、アクティブ化属性のパラメーターはリモートサイトの URI を指定します。</span><span class="sxs-lookup"><span data-stu-id="68621-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="68621-116">インスタンスを作成するための呼び出しは、リモートサイトに到達する前に中間サイトを通過する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68621-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="68621-117">その他のアクティブ化属性では、呼び出しがリモートサイトと中間サイトで動作する環境またはコンテキストを変更できます。</span><span class="sxs-lookup"><span data-stu-id="68621-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="68621-118">インスタンスがローカルで作成されている場合は、そのオブジェクトへの参照が返されます。</span><span class="sxs-lookup"><span data-stu-id="68621-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="68621-119">インスタンスがリモートで作成された場合は、プロキシへの参照が返されます。</span><span class="sxs-lookup"><span data-stu-id="68621-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="68621-120">リモートオブジェクトは、ローカルオブジェクトであるかのように、プロキシを介して操作されます。</span><span class="sxs-lookup"><span data-stu-id="68621-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="68621-121"><xref:System.Activator.GetObject%2A> メソッドは、現在実行中のリモートオブジェクト、サーバー側でアクティブ化された既知のオブジェクト、または XML Web サービスへのプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="68621-122">接続メディア、つまりチャネルを指定できます。</span><span class="sxs-lookup"><span data-stu-id="68621-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="68621-123">詳細については、<xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="68621-124">アセンブリには型定義が含まれています。</span><span class="sxs-lookup"><span data-stu-id="68621-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="68621-125"><xref:System.Activator.CreateInstance%2A> メソッドは、現在実行中のアセンブリから型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="68621-126"><xref:System.Activator.CreateInstanceFrom%2A> メソッドは、アセンブリを含むファイルからインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="68621-127"><xref:System.Activator.CreateComInstanceFrom%2A> メソッドは、アセンブリを含むファイルから COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68621-128">次の例は、<xref:System.Activator> クラスを使用して、実行時にオブジェクトを動的に構築する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="68621-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68621-129">名前を指定した COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-129">Creates an instance of the COM object whose name is specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="68621-130"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-130">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-131">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-131">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="68621-132">名前を指定したアセンブリ ファイルと、パラメーターなしのコンストラクターを使用して、名前を指定した COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-133">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-133">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-134"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-135">`true` の値を持つ <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> 属性は、明示的に、または既定で COM 型に適用する必要があります。これにより、<xref:System.Activator.CreateComInstanceFrom%2A> メソッドがその型のインスタンスを作成できるようになります。それ以外の場合、<xref:System.TypeLoadException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68621-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="68621-136">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、「<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>」および「<xref:System.Activator.CreateInstance%2A> メソッド」の「例外」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-137">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメソッドを使用して、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が許可されていて、非パブリック型を含むアセンブリの許可セットが呼び出し元の許可セットまたはサブセットに制限されている場合に、非パブリック型を作成できます。reof。</span><span class="sxs-lookup"><span data-stu-id="68621-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-138">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-139">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-140"><paramref name="typeName" /> または <paramref name="assemblyName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-140"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-141">COM を使用してインスタンスを作成できません。</span><span class="sxs-lookup"><span data-stu-id="68621-141">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="68621-142">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-142">-or-</span></span> 
 <span data-ttu-id="68621-143"><paramref name="typename" /> が <paramref name="assemblyName" /> で見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-143"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-144">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-144">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-145"><paramref name="assemblyName" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="68621-145"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-146">抽象クラスのインスタンスを作成できません。</span><span class="sxs-lookup"><span data-stu-id="68621-146">Cannot create an instance of an abstract class.</span></span>  
  
 <span data-ttu-id="68621-147">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-147">-or-</span></span>  
  
 <span data-ttu-id="68621-148">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-148">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-149">呼び出し元は、<see cref="T:System.MarshalByRefObject" /> を継承しないオブジェクトのアクティベーション属性を提供できません。</span><span class="sxs-lookup"><span data-stu-id="68621-149">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68621-150"><paramref name="assemblyName" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68621-150"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-151">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-151">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="68621-152">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-152">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashValue" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="68621-153"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-153">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-154">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-154">The name of the preferred type.</span></span></param>
        <param name="hashValue"><span data-ttu-id="68621-155">計算されたハッシュ コードの値。</span><span class="sxs-lookup"><span data-stu-id="68621-155">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="68621-156">ファイルのハッシュ処理および厳密な名前の生成に使用されるハッシュ アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="68621-156">The hash algorithm used for hashing files and generating the strong name.</span></span></param>
        <summary><span data-ttu-id="68621-157">名前を指定したアセンブリ ファイルと、パラメーターなしのコンストラクターを使用して、名前を指定した COM オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-157">Creates an instance of the COM object whose name is specified, using the named assembly file and the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-158">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-158">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-159"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-159">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-160">`true` の値を持つ <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> 属性は、明示的に、または既定で COM 型に適用する必要があります。これにより、<xref:System.Activator.CreateComInstanceFrom%2A> メソッドがその型のインスタンスを作成できるようになります。それ以外の場合、<xref:System.TypeLoadException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="68621-160">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="68621-161">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、「<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>」および「<xref:System.Activator.CreateInstance%2A> メソッド」の「例外」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-161">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-162">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメソッドを使用して、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が許可されていて、非パブリック型を含むアセンブリの許可セットが呼び出し元の許可セットまたはサブセットに制限されている場合に、非パブリック型を作成できます。reof。</span><span class="sxs-lookup"><span data-stu-id="68621-162">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-163">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-163">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-164">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-164">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-165"><paramref name="typeName" /> または <paramref name="assemblyName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-165"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68621-166"><paramref name="assemblyName" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="68621-166"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="68621-167">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="68621-167">An assembly or module was loaded twice with two different evidences.</span></span>
        
<span data-ttu-id="68621-168">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-168">-or-</span></span> 
 <span data-ttu-id="68621-169"><paramref name="assemblyName" /> がシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="68621-169"><paramref name="assemblyName" /> is longer than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-170"><paramref name="assemblyName" /> が見つからないか、読み込もうとしているモジュールにファイル名拡張子が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="68621-170"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="68621-171"><paramref name="assemblyName" /> が見つかりましたが、読み込めません。</span><span class="sxs-lookup"><span data-stu-id="68621-171"><paramref name="assemblyName" /> is found but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-172"><paramref name="assemblyName" /> は有効なアセンブリ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-172"><paramref name="assemblyName" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68621-173">"file://" で始まっていないコードベースが、必須の <see langword="WebPermission" /> なしで指定されました。</span><span class="sxs-lookup"><span data-stu-id="68621-173">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-174">COM を使用してインスタンスを作成できません</span><span class="sxs-lookup"><span data-stu-id="68621-174">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="68621-175">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-175">-or-</span></span> 
 <span data-ttu-id="68621-176"><paramref name="typename" /> が <paramref name="assemblyName" /> で見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-176"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-177">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-177">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-178">抽象クラスのインスタンスを作成できません。</span><span class="sxs-lookup"><span data-stu-id="68621-178">An instance of an abstract class cannot be created.</span></span>  
  
 <span data-ttu-id="68621-179">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-179">-or-</span></span>  
  
 <span data-ttu-id="68621-180">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-180">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-181">呼び出し元は、<see cref="T:System.MarshalByRefObject" /> を継承しないオブジェクトのアクティベーション属性を提供できません。</span><span class="sxs-lookup"><span data-stu-id="68621-181">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-182">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-182">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="68621-183">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="68621-184">"file://" で始まる URI を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="68621-184">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="68621-185">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68621-185">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="68621-186">"file://" で始まらない URI を読み取る場合。</span><span class="sxs-lookup"><span data-stu-id="68621-186">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68621-187">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-187">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="68621-188">作成するオブジェクトを指定するアクティベーション コンテキスト オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-188">An activation context object that specifies the object to create.</span></span></param>
        <summary><span data-ttu-id="68621-189">指定した <see cref="T:System.ActivationContext" /> オブジェクトによって決定される型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-189">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span></span></summary>
        <returns><span data-ttu-id="68621-190">新しく作成されたオブジェクトにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-190">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-191"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-191">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-192">アクティベーションコンテキストは、マニフェストに基づくアクティベーション中に、ドメインポリシーを設定し、アプリケーションベースのセキュリティモデルを提供するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-192">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="68621-193"><xref:System.ActivationContext> クラスには、アプリケーションマニフェストへのアクセスを提供する <xref:System.ApplicationIdentity> オブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="68621-193">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="68621-194">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-194">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type -&gt; obj" Usage="System.Activator.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68621-195">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="68621-195">The type of object to create.</span></span></param>
        <summary><span data-ttu-id="68621-196">指定された型のパラメーターなしのコンストラクターを使用して、指定された型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-196">Creates an instance of the specified type using that type's parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-197">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="68621-197">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-198">呼び出すコンストラクターにアクセスできる必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-198">The constructor to be invoked must be accessible.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-199">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が付与されている場合、および非パブリック型を含むアセンブリの許可セットが呼び出し元の許可セットまたはサブセットに制限されている場合に、このメソッドを使用して非パブリック型にアクセスできます。reof。</span><span class="sxs-lookup"><span data-stu-id="68621-199">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-200">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-200">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-201">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-201">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68621-202">次のコード例は、<xref:System.Activator.CreateInstance%28System.Type%29> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="68621-202">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="68621-203">複数の異なる型のインスタンスが作成され、その既定値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="68621-203">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-204"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-204"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68621-205"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-205"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="68621-206">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-206">-or-</span></span> 
 <span data-ttu-id="68621-207"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="68621-207"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-208"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="68621-208"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="68621-209">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-209">-or-</span></span> 
<span data-ttu-id="68621-210"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-210">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-211">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-211">-or-</span></span> 
<span data-ttu-id="68621-212"><paramref name="type" /> を格納するアセンブリは <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="68621-212">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-213">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68621-213">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="68621-214"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MemberAccessException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="68621-214">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="68621-215">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-215">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-216">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-216">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-217"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-217">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="68621-218"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="68621-218">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="68621-219">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-219">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="68621-220"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="68621-220"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-221"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-221"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-222">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-222">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-223">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-224">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-224">for accessing nonpublic types regardless of their grant sets.</span></span> <span data-ttu-id="68621-225">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-225">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="activationCustomData" Type="System.String[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="68621-226">作成するオブジェクトを指定するアクティベーション コンテキスト オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-226">An activation context object that specifies the object to create.</span></span></param>
        <param name="activationCustomData"><span data-ttu-id="68621-227">カスタム アクティベーション データを格納する Unicode 文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-227">An array of Unicode strings that contain custom activation data.</span></span></param>
        <summary><span data-ttu-id="68621-228">指定した <see cref="T:System.ActivationContext" /> オブジェクトによって決定され、指定したカスタム アクティベーション データによってアクティブにされる型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-228">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span></span></summary>
        <returns><span data-ttu-id="68621-229">新しく作成されたオブジェクトにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-229">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-230"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-230">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-231">アクティベーションコンテキストは、マニフェストに基づくアクティベーション中に、ドメインポリシーを設定し、アプリケーションベースのセキュリティモデルを提供するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-231">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="68621-232"><xref:System.ActivationContext> クラスには、アプリケーションマニフェストへのアクセスを提供する <xref:System.ApplicationIdentity> オブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="68621-232">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="68621-233">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-233">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="68621-234"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-234">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="68621-235"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="68621-235">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-236">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="68621-236">The fully qualified name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="68621-237">名前を指定したアセンブリと、パラメーターなしのコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-237">Creates an instance of the type whose name is specified, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-238">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-238">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-239">戻り値のラップを解除するには、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> を使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-239">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-240">`assemblyName` には、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="68621-240">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="68621-241">アセンブリのパスまたはファイル拡張子を持たない単純な名前。</span><span class="sxs-lookup"><span data-stu-id="68621-241">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="68621-242">たとえば、.\bin\TypeExtensions.dll. というパスと名前を持つアセンブリの `TypeExtensions` を指定します。</span><span class="sxs-lookup"><span data-stu-id="68621-242">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="68621-243">単純な名前、バージョン、カルチャ、および公開キートークンで構成される署名付きアセンブリの完全名。たとえば、"TypeExtensions, Version = 1.0.0.0, Culture = ニュートラル, PublicKeyToken = 181869f2f7435b51" のようになります。</span><span class="sxs-lookup"><span data-stu-id="68621-243">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="68621-244">共通言語ランタイムがアセンブリを識別および読み込む方法の詳細については、「[ランタイムがアセンブリを検索する方法](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-244">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="68621-245">アプリケーション構成ファイルを使用してアセンブリの場所を定義する方法の詳細については、「[アセンブリの場所の指定](~/docs/framework/configure-apps/specify-assembly-location.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-245">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="68621-246">`assemblyName` が見つかった場合は、既定のコンテキストで読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="68621-246">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-247">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメソッドを使用して、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が許可されていて、非パブリック型を含むアセンブリの許可セットが呼び出し元の許可セットまたはサブセットに制限されている場合に、非パブリック型を作成できます。reof。</span><span class="sxs-lookup"><span data-stu-id="68621-247">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-248">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-248">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-249">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-249">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68621-250">次の例では、`PersonInfo`という名前のアセンブリ内の `Person` という名前のクラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="68621-250">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="68621-251">`Person` クラスには2つのコンストラクターがあり、そのうちの1つがパラメーターなしであることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="68621-251">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="68621-252">次の例では、<xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> メソッドを呼び出して、`Person` クラスをインスタンス化しています。</span><span class="sxs-lookup"><span data-stu-id="68621-252">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="68621-253">このためには、プロジェクトに追加するための参照が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-253">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="68621-254"><xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> メソッドは、`Person` クラスのパラメーターなしのコンストラクターを呼び出すため、この例では `Name` プロパティに値を割り当てています。</span><span class="sxs-lookup"><span data-stu-id="68621-254">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class parameterless constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="68621-255">ただし、<xref:System.Activator.CreateInstance%2A> は、コンピューターの境界を越えているか、デザイン時に認識されていない型をインスタンス化するために頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-255">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="68621-256">この場合、プロジェクトにアセンブリへの参照を含めることはできず、その型のメンバーへの事前バインディング呼び出しを行うことはできません。</span><span class="sxs-lookup"><span data-stu-id="68621-256">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="68621-257">この制限を回避するには、次の例では、<xref:System.Activator.CreateInstance%2A> メソッドをリフレクションと共に使用して、`Person` オブジェクトの `Name` プロパティに値を割り当て、その値を表示します。</span><span class="sxs-lookup"><span data-stu-id="68621-257">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-258"><paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-258"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-259">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-259">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-260"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-260"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-261"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-261"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-262">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-262">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-263">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-263">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-264">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-264">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-265"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" />を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-265">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-266"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-266">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-267"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-267"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-268">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-268">-or-</span></span> 
<span data-ttu-id="68621-269">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-269">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-270">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-270">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="68621-271">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="68621-271">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="68621-272">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-272">-or-</span></span>  
  
 <span data-ttu-id="68621-273">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68621-273">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-274">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-274">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-275">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-275">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-276">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-276">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="68621-277">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-277">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * bool -&gt; obj" Usage="System.Activator.CreateInstance (type, nonPublic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="nonPublic" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68621-278">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="68621-278">The type of object to create.</span></span></param>
        <param name="nonPublic"><span data-ttu-id="68621-279">パブリックまたはパブリックでないパラメーターなしのコンストラクターを一致させる場合は <see langword="true" />。パブリックのパラメーターなしのコンストラクターだけを一致させる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-279"><see langword="true" /> if a public or nonpublic parameterless constructor can match; <see langword="false" /> if only a public parameterless constructor can match.</span></span></param>
        <summary><span data-ttu-id="68621-280">指定された型のパラメーターなしのコンストラクターを使用して、指定された型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-280">Creates an instance of the specified type using that type's parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-281">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="68621-281">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="68621-282">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメソッドを使用して、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が許可されている場合、および非パブリック型とメンバーを含むアセンブリの許可セットが呼び出し元のに制限されている場合に、非パブリックな型とメンバーにアクセスすることができます。set またはそのサブセットを許可します。</span><span class="sxs-lookup"><span data-stu-id="68621-282">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-283">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-283">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-284">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-284">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-285"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-285"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68621-286"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-286"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="68621-287">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-287">-or-</span></span> 
 <span data-ttu-id="68621-288"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="68621-288"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-289"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="68621-289"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="68621-290">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-290">-or-</span></span> 
<span data-ttu-id="68621-291"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-291">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-292">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-292">-or-</span></span> 
<span data-ttu-id="68621-293"><paramref name="type" /> を格納するアセンブリは <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="68621-293">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-294">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68621-294">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-295">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-295">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-296">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-296">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-297"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-297">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-298">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-298">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="68621-299"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="68621-299"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-300"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-300"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-301">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-301">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-302">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-303">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-303">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-304">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-304">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args)" />
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68621-305">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="68621-305">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="68621-306">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-306">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-307"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-307">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <summary><span data-ttu-id="68621-308">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-308">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-309">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="68621-309">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-310">呼び出されるコンストラクターはアクセス可能である必要があり、指定された引数リストと最も限定的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-310">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-311">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が付与されている場合、および非パブリック型を含むアセンブリの許可セットが呼び出し元の許可セットまたはサブセットに制限されている場合に、このメソッドを使用して非パブリック型にアクセスできます。reof。</span><span class="sxs-lookup"><span data-stu-id="68621-311">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-312">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-312">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-313">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-313">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68621-314">次の例では、<xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> メソッドを呼び出して、<xref:System.String> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-314">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="68621-315"><xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> コンストラクターを呼び出して、14番目位置から始まる文字配列から10個の要素を含む文字列をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="68621-315">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="68621-316">次の例では、要素が <xref:System.String> コンストラクターに渡される引数であるジャグ配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-316">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="68621-317">この例では、各配列を <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> メソッドに渡して、適切な文字列コンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68621-317">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-318"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-318"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68621-319"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-319"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="68621-320">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-320">-or-</span></span> 
 <span data-ttu-id="68621-321"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="68621-321"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-322"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="68621-322"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="68621-323">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-323">-or-</span></span> 
<span data-ttu-id="68621-324"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-324">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-325">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-325">-or-</span></span> 
<span data-ttu-id="68621-326"><paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="68621-326">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="68621-327">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-327">-or-</span></span> 
<span data-ttu-id="68621-328"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="68621-328">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-329">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68621-329">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="68621-330"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MemberAccessException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="68621-330">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="68621-331">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-331">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-332">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-332">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-333"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-333">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="68621-334"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="68621-334">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="68621-335">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-335">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="68621-336"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="68621-336"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-337"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-337"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-338">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-338">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-339">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-339">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-340">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-340">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="68621-341">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-341">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="68621-342"><paramref name="typeName" /> という名前の型が作成されるリモート ドメイン。</span><span class="sxs-lookup"><span data-stu-id="68621-342">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="68621-343"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-343">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="68621-344"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="68621-344">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-345">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="68621-345">The fully qualified name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="68621-346">名前を指定したアセンブリとパラメーターなしのコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-346">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-347">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-347">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-348"><xref:System.Activator.CreateInstance%2A> は、セキュリティアクセス許可が制限されたアプリケーションドメインでホストがコードを実行する必要がある場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-348">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="68621-349">戻り値のラップを解除するには、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> を使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-349">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-350">このメソッドは <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> を使用して、直前の呼び出し元に完全信頼を要求します。</span><span class="sxs-lookup"><span data-stu-id="68621-350">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-351"><paramref name="typeName" /> または <paramref name="domain" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-351"><paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-352">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-352">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-353"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-353"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-354"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-354"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-355">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-355">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-356">抽象型のインスタンスは作成できません。</span><span class="sxs-lookup"><span data-stu-id="68621-356">Cannot create an instance of an abstract type.</span></span>  
  
 <span data-ttu-id="68621-357">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-357">-or-</span></span>  
  
 <span data-ttu-id="68621-358">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-358">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-359">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-359">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-360"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" />を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-360">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-361"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-361">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-362"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-362"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-363">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-363">-or-</span></span> 
<span data-ttu-id="68621-364">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-364">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-365">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-365">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="68621-366">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="68621-366">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="68621-367">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-367">-or-</span></span>  
  
 <span data-ttu-id="68621-368">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68621-368">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-369">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-369">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-370">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-370">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-371">すべての型のメンバーに対して操作を呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="68621-371">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="68621-372">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-372">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="68621-373">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-373">requires full trust for the immediate caller.</span></span> <span data-ttu-id="68621-374">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68621-374">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="68621-375"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-375">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="68621-376"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="68621-376">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-377">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="68621-377">The fully qualified name of the preferred type.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-378">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-378">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-379">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-379">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-380">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-380">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-381">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-381">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-382">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-382">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="68621-383">名前を指定したアセンブリと、パラメーターなしのコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-383">Creates an instance of the type whose name is specified, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-384">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-384">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-385">戻り値のラップを解除するには、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> を使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-385">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-386">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が付与されている場合、および非パブリック型の許可セットが呼び出し元の許可セットまたはサブセットに制限されている場合に、このメソッドを使用して非パブリックな型を作成できます。</span><span class="sxs-lookup"><span data-stu-id="68621-386">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-387">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-387">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-388">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-388">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-389"><paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-389"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-390">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-390">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-391"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-391"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-392"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-392"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-393">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-393">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-394">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-394">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-395"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-395">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-396"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-396">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-397">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-397">-or-</span></span> 
 <span data-ttu-id="68621-398"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-398"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="68621-399">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-399">-or-</span></span> 
 <span data-ttu-id="68621-400"><paramref name="activationAttributes" /> が <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-400"><paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span></span>  
  
<span data-ttu-id="68621-401">配列。</span><span class="sxs-lookup"><span data-stu-id="68621-401">array.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-402"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-402"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-403">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-403">-or-</span></span> 
<span data-ttu-id="68621-404">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-404">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-405">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-405">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="68621-406">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="68621-406">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="68621-407">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-407">-or-</span></span>  
  
 <span data-ttu-id="68621-408">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68621-408">The assembly name or code base is invalid.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-409"><paramref name="activationAttributes" /> で指定されたターゲットでリモートからのアクティブ化を試みたときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="68621-409">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-410">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-410">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-411">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-411">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-412">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-412">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="68621-413">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-413">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68621-414">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="68621-414">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="68621-415">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-415">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-416"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-416">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-417">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-417">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-418">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-418">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-419">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-419">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-420">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-420">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-421">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-421">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="68621-422">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-422">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-423">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="68621-423">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-424">呼び出されるコンストラクターはアクセス可能である必要があり、指定された引数リストと最も限定的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-424">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-425">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が付与されている場合、および非パブリック型を含むアセンブリの許可セットが呼び出し元の許可セットまたはサブセットに制限されている場合に、このメソッドを使用して非パブリック型にアクセスできます。reof。</span><span class="sxs-lookup"><span data-stu-id="68621-425">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-426">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-426">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-427">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-427">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-428"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-428"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68621-429"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-429"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="68621-430">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-430">-or-</span></span> 
 <span data-ttu-id="68621-431"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="68621-431"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-432"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="68621-432"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="68621-433">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-433">-or-</span></span> 
<span data-ttu-id="68621-434"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-434">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-435">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-435">-or-</span></span> 
 <span data-ttu-id="68621-436"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-436"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="68621-437">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-437">-or-</span></span> 
<span data-ttu-id="68621-438"><paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="68621-438">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="68621-439">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-439">-or-</span></span> 
<span data-ttu-id="68621-440"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="68621-440">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-441">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68621-441">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-442">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-442">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-443">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-443">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-444"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-444">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-445">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-445">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="68621-446"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="68621-446"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-447"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-447"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-448">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-448">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-449">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-450">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-450">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="68621-451">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-451">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68621-452">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="68621-452">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-453"><paramref name="type" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-453">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="68621-454"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-454">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-455"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="type" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-455">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="68621-456"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-456">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-457">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-457">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-458"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-458">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-459"><paramref name="args" /> から <paramref name="type" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-459">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="68621-460"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-460">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="68621-461">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-461">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-462">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="68621-462">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-463">呼び出されるコンストラクターは、指定されたバインダーおよびバインド属性の制約の下で、指定された引数リストと最も限定的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-463">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-464">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメソッドを使用して、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が許可されている場合、および非パブリック型とメンバーを含むアセンブリの許可セットが呼び出し元のに制限されている場合に、非パブリックな型とメンバーにアクセスすることができます。set またはそのサブセットを許可します。</span><span class="sxs-lookup"><span data-stu-id="68621-464">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-465">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-465">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-466">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-466">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-467"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-467"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68621-468"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-468"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="68621-469">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-469">-or-</span></span> 
 <span data-ttu-id="68621-470"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="68621-470"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-471"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="68621-471"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="68621-472">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-472">-or-</span></span> 
<span data-ttu-id="68621-473"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-473">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-474">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-474">-or-</span></span> 
<span data-ttu-id="68621-475"><paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="68621-475">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="68621-476">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-476">-or-</span></span> 
<span data-ttu-id="68621-477"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="68621-477">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-478">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68621-478">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-479">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-479">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-480">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-480">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-481">COM 型が <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> 経由で取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-481">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-482">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-482">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="68621-483"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="68621-483"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-484"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-484"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-485">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-485">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-486">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-486">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-487">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-487">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-488">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-488">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68621-489">作成するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="68621-489">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-490"><paramref name="type" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-490">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="68621-491"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-491">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-492"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="type" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-492">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="68621-493"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-493">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-494">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-494">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-495"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-495">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-496"><paramref name="args" /> から <paramref name="type" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-496">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="68621-497"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-497">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-498">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-498">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-499">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-499">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-500">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-500">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-501">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-501">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-502">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-502">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="68621-503">指定したパラメーターに最も一致するコンストラクターを使用して、指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-503">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-504">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="68621-504">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-505">呼び出されるコンストラクターは、指定されたバインダーおよびバインド属性の制約の下で、指定された引数リストと最も限定的な一致を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-505">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-506">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメソッドを使用して、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が許可されている場合、および非パブリック型とメンバーの許可セットが呼び出し元の許可セットまたはサブセットに限定されている場合に、非パブリック型およびメンバーにアクセスできます。f.</span><span class="sxs-lookup"><span data-stu-id="68621-506">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-507">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-507">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-508">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-508">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-509"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-509"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68621-510"><paramref name="type" /> が <see langword="RuntimeType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-510"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="68621-511">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-511">-or-</span></span> 
 <span data-ttu-id="68621-512"><paramref name="type" /> はオープン ジェネリック型です (つまり、<see cref="P:System.Type.ContainsGenericParameters" /> プロパティは <see langword="true" /> を返します)。</span><span class="sxs-lookup"><span data-stu-id="68621-512"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-513"><paramref name="type" /> を <see cref="T:System.Reflection.Emit.TypeBuilder" /> にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="68621-513"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="68621-514">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-514">-or-</span></span> 
<span data-ttu-id="68621-515"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-515">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-516">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-516">-or-</span></span> 
 <span data-ttu-id="68621-517"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-517"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="68621-518">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-518">-or-</span></span> 
<span data-ttu-id="68621-519"><paramref name="type" /> を格納するアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> を使用して作成された動的アセンブリです。</span><span class="sxs-lookup"><span data-stu-id="68621-519">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="68621-520">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-520">-or-</span></span> 
<span data-ttu-id="68621-521"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="68621-521">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-522">呼び出されるコンストラクターは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="68621-522">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-523">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-523">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-524">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-524">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-525">COM 型が <see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" /> 経由で取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-525">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-526">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-526">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="68621-527"><paramref name="type" /> は COM オブジェクトですが、型を取得するために使用されるクラス ID が有効でないか、または識別されたクラスが登録されていません。</span><span class="sxs-lookup"><span data-stu-id="68621-527"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-528"><paramref name="type" /> は有効な型ではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-528"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-529">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="68621-529">for supplying evidence.</span></span> <span data-ttu-id="68621-530">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="68621-530">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-531">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-531">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-532">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-532">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="68621-533"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-533">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="68621-534"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="68621-534">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-535">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="68621-535">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="68621-536"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-536"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-537"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-537">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-538"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-538">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-539"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-539">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-540"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-540">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-541">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-541">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-542"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-542">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-543"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-543">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-544"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-544">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-545">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-545">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-546">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-546">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-547">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-547">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-548">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-548">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-549">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-549">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="68621-550">名前を指定したアセンブリと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-550">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-551">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-551">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-552">戻り値のラップを解除するには、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> を使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-552">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-553">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメソッドを使用して、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が許可されている場合、および非パブリック型とメンバーを含むアセンブリの許可セットが呼び出し元のに制限されている場合に、非パブリックな型とメンバーを作成できます。set またはそのサブセットを許可します。</span><span class="sxs-lookup"><span data-stu-id="68621-553">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-554">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-554">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-555">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-555">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-556"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68621-556"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-557">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-557">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-558"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-558"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-559"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-559"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-560">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-560">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-561">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-561">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-562">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-562">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-563"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" />を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-563">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-564"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-564">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-565">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-565">-or-</span></span> 
 <span data-ttu-id="68621-566"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-566"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="68621-567">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-567">-or-</span></span> 
<span data-ttu-id="68621-568"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="68621-568">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-569"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-569"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-570">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-570">-or-</span></span> 
<span data-ttu-id="68621-571">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-571">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-572">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-572">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="68621-573">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="68621-573">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="68621-574">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-574">-or-</span></span>  
  
 <span data-ttu-id="68621-575">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68621-575">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-576">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-576">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-577">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-577">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-578">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-578">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-579">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-579">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="68621-580"><paramref name="typeName" /> という名前の型が作成されるドメイン。</span><span class="sxs-lookup"><span data-stu-id="68621-580">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="68621-581"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-581">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="68621-582"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="68621-582">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-583">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="68621-583">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="68621-584"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-584"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-585"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-585">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-586"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-586">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-587"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-587">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-588"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-588">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-589">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-589">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-590"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-590">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-591"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-591">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-592"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-592">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-593">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-593">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-594">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-594">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-595">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-595">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-596">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-596">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-597">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-597">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="68621-598">名前を指定したアセンブリと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-598">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-599">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-599">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-600"><xref:System.Activator.CreateInstance%2A> は、セキュリティアクセス許可が制限されたアプリケーションドメインでホストがコードを実行する必要がある場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-600">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="68621-601">戻り値のラップを解除するには、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> を使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-601">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-602">このメソッドは <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> を使用して、直前の呼び出し元に完全信頼を要求します。</span><span class="sxs-lookup"><span data-stu-id="68621-602">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-603"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-603"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-604">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-604">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-605"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-605"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-606"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-606"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-607">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-607">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-608">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-608">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-609">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-609">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-610"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" />を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-610">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-611"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-611">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-612">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-612">-or-</span></span> 
 <span data-ttu-id="68621-613"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-613"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="68621-614">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-614">-or-</span></span> 
<span data-ttu-id="68621-615"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="68621-615">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-616"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-616"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-617">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-617">-or-</span></span> 
<span data-ttu-id="68621-618">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-618">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-619">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-619">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="68621-620">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="68621-620">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="68621-621">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-621">-or-</span></span>  
  
 <span data-ttu-id="68621-622">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68621-622">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="68621-623">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-623">requires full trust for the immediate caller.</span></span> <span data-ttu-id="68621-624">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68621-624">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-625">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-625">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-626">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-626">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-627">すべての型のメンバーに対して操作を呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="68621-627">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="68621-628">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-628">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See https://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" Index="8" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="68621-629"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-629">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="68621-630"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="68621-630">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-631">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="68621-631">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="68621-632"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-632"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-633"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-633">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-634"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-634">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-635"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-635">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-636"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-636">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-637">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-637">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-638"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-638">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-639"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-639">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-640"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-640">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-641">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-641">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-642">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-642">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-643">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-643">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-644">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-644">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-645">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-645">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="68621-646">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span><span class="sxs-lookup"><span data-stu-id="68621-646">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="68621-647">名前を指定したアセンブリと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-647">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-648">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-648">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-649">戻り値のラップを解除するには、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> を使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-649">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-650">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメソッドを使用して、呼び出し元に <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> が許可されている場合、および非パブリック型とメンバーを含むアセンブリの許可セットが呼び出し元のに制限されている場合に、非パブリックな型とメンバーを作成できます。set またはそのサブセットを許可します。</span><span class="sxs-lookup"><span data-stu-id="68621-650">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="68621-651">(「[リフレクションのセキュリティに関する考慮事項」を](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)参照してください)。</span><span class="sxs-lookup"><span data-stu-id="68621-651">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="68621-652">この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象とする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-652">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-653"><paramref name="typeName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68621-653"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-654">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-654">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-655"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-655"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-656"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-656"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-657">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-657">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-658">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-658">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-659">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-659">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-660"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" />を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-660">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-661"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-661">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-662">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-662">-or-</span></span> 
 <span data-ttu-id="68621-663"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-663"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="68621-664">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-664">-or-</span></span> 
<span data-ttu-id="68621-665"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="68621-665">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-666"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-666"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-667">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-667">-or-</span></span> 
<span data-ttu-id="68621-668">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-668">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-669">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-669">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="68621-670">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="68621-670">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="68621-671">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-671">-or-</span></span>  
  
 <span data-ttu-id="68621-672">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68621-672">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-673">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-673">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-674">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-674">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-675">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-675">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-676">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-676">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See https://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" Index="9" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="68621-677"><paramref name="typeName" /> という名前の型が作成されるドメイン。</span><span class="sxs-lookup"><span data-stu-id="68621-677">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="68621-678"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-678">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="68621-679"><paramref name="assemblyName" /> が <see langword="null" /> の場合は、実行中のアセンブリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="68621-679">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-680">必要な型の完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="68621-680">The fully qualified name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="68621-681"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-681"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-682"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-682">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-683"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-683">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-684"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-684">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-685"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-685">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-686">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-686">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-687"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-687">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-688"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-688">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-689"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-689">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-690">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-690">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-691">通常、これは単一の <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-691">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span></span> <span data-ttu-id="68621-692"><see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> により、リモート オブジェクトのアクティブ化に必要な URL が指定されます。</span><span class="sxs-lookup"><span data-stu-id="68621-692">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="68621-693">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span><span class="sxs-lookup"><span data-stu-id="68621-693">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="68621-694">名前を指定したアセンブリと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-694">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-695">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-695">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-696"><xref:System.Activator.CreateInstance%2A> は、セキュリティアクセス許可が制限されたアプリケーションドメインでホストがコードを実行する必要がある場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-696">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="68621-697">戻り値のラップを解除するには、<xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> を使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-697">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-698">このメソッドは <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> を使用して、直前の呼び出し元に完全信頼を要求します。</span><span class="sxs-lookup"><span data-stu-id="68621-698">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-699"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-699"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-700">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-700">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-701"><paramref name="typename" /> が <paramref name="assemblyName" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-701"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-702"><paramref name="assemblyName" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-702"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-703">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-703">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-704">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-704">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-705">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-705">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="68621-706"><see cref="Overload:System.Type.GetTypeFromProgID" /> または <see cref="Overload:System.Type.GetTypeFromCLSID" />を通じて COM 型が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-706">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-707"><see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" />、および <see cref="T:System.RuntimeArgumentHandle" /> 型、またはそれらの型の配列の作成はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-707">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="68621-708">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-708">-or-</span></span> 
 <span data-ttu-id="68621-709"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-709"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="68621-710">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-710">-or-</span></span> 
<span data-ttu-id="68621-711"><paramref name="args" /> と最もよく一致するコンストラクターに <see langword="varargs" /> 引数があります。</span><span class="sxs-lookup"><span data-stu-id="68621-711">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-712"><paramref name="assemblyName" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-712"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-713">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-713">-or-</span></span> 
<span data-ttu-id="68621-714">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-714">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-715">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-715">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="68621-716">アセンブリまたはモジュールが、2 つの異なる証拠を使用して 2 回読み込まれました。</span><span class="sxs-lookup"><span data-stu-id="68621-716">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="68621-717">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-717">-or-</span></span>  
  
 <span data-ttu-id="68621-718">アセンブリ名かコード ベースが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="68621-718">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-719">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-719">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-720">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-720">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-721">すべての型のメンバーに対して操作を呼び出すことができる。</span><span class="sxs-lookup"><span data-stu-id="68621-721">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="68621-722">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-722">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="68621-723">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-723">requires full trust for the immediate caller.</span></span> <span data-ttu-id="68621-724">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68621-724">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberSignature Language="F#" Value="static member CreateInstance : unit -&gt; 'T" Usage="System.Activator.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="68621-725">作成する型。</span><span class="sxs-lookup"><span data-stu-id="68621-725">The type to create.</span></span></typeparam>
        <summary><span data-ttu-id="68621-726">パラメーターなしのコンストラクターを使用して、指定されたジェネリック型パラメーターによって決定される型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-726">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-727">新しく作成されたオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="68621-727">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-728"><xref:System.Activator.CreateInstance%60%601> のジェネリックメソッドは、型パラメーターによって指定された型のインスタンス化を実装するためにコンパイラによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-728">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="68621-729">たとえば、次のジェネリックメソッドでは、`new T()` (のC++`gcnew T()`) の実装では <xref:System.Activator.CreateInstance%60%601> ジェネリックメソッドが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-729">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="68621-730">一般に、型はコンパイル時に既知である必要があるため、<xref:System.Activator.CreateInstance%60%601> のジェネリックメソッドをアプリケーションコードに使用することはありません。</span><span class="sxs-lookup"><span data-stu-id="68621-730">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="68621-731">コンパイル時に型がわかっている場合は、通常のインスタンス化構文を使用できC#ます (`new` 演算子 in、`New` C++in Visual Basic、`gcnew` in)。</span><span class="sxs-lookup"><span data-stu-id="68621-731">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="68621-732">コンパイル時に型が不明な場合は、<xref:System.Activator.CreateInstance%2A>の非ジェネリックオーバーロードを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="68621-732">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="68621-733"><xref:System.Activator.CreateInstance%2A> の非ジェネリックオーバーロードには、遅延バインディングされたコンストラクター解決が既に用意されているため、引数リストを受け取る <xref:System.Activator.CreateInstance%60%601> ジェネリックメソッドのオーバーロードはありません。</span><span class="sxs-lookup"><span data-stu-id="68621-733">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="68621-734"><see href="https://go.microsoft.com/fwlink/?LinkID=247912">Windows ストア アプリ用 .NET</see> または<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">ポータブル クラス ライブラリ</see>では、基本クラスの例外である <see cref="T:System.MissingMemberException" /> を代わりにキャッチします。</span><span class="sxs-lookup"><span data-stu-id="68621-734">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="68621-735">抽象クラスのインスタンスを作成できません。または、<typeparamref name="T" /> に指定されている型にパラメーターなしのコンストラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="68621-735">Cannot create an instance of an abstract class, or the type that is specified for <typeparamref name="T" /> does not have a parameterless constructor.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68621-736">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-736">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="68621-737"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-737">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-738">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-738">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="68621-739">名前を指定したアセンブリ ファイルと、パラメーターなしのコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-739">Creates an instance of the type whose name is specified, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-740">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-740">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-741"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-741">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-742">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、「<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>」および「<xref:System.Activator.CreateInstance%2A> メソッド」の「例外」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-742">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68621-743">次のコード例は、<xref:System.Activator.CreateInstanceFrom%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="68621-743">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="68621-744">このコード例は、<xref:System.Activator> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="68621-744">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-745"><paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-745"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-746">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-746">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-747"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-747"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-748"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-748"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-749">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-749">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-750">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-750">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-751">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-751">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68621-752">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-752">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-753"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-753"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-754">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-754">-or-</span></span> 
<span data-ttu-id="68621-755">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-755">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-756">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-756">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-757">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-757">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-758">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-758">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="68621-759">ディレクトリパスを検索し、その内容を読み取る機能。</span><span class="sxs-lookup"><span data-stu-id="68621-759">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="68621-760">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68621-760">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-761">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-761">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="68621-762">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-762">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="68621-763"><paramref name="typeName" /> という名前の型が作成されるリモート ドメイン。</span><span class="sxs-lookup"><span data-stu-id="68621-763">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="68621-764"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-764">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-765">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-765">The name of the preferred type.</span></span></param>
        <summary><span data-ttu-id="68621-766">名前を指定したアセンブリ ファイルとパラメーターなしのコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-766">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-767">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-767">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-768"><xref:System.Activator.CreateInstanceFrom%2A> は、セキュリティアクセス許可が制限されたアプリケーションドメインでホストがコードを実行する必要がある場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-768">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="68621-769"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-769">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-770">このメソッドは <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> を使用して、直前の呼び出し元に完全信頼を要求します。</span><span class="sxs-lookup"><span data-stu-id="68621-770">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="68621-771">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、「<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>」および「<xref:System.Activator.CreateInstance%2A> メソッド」の「例外」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-771">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-772"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-772"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-773">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-773">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-774"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-774"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-775"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-775"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-776">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-776">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-777">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-777">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-778">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-778">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68621-779">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-779">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-780"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-780"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-781">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-781">-or-</span></span> 
<span data-ttu-id="68621-782">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-782">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-783">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-783">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-784">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-784">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-785">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-785">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="68621-786">ディレクトリパスを検索し、その内容を読み取る機能。</span><span class="sxs-lookup"><span data-stu-id="68621-786">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="68621-787">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68621-787">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="68621-788">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-788">requires full trust for the immediate caller.</span></span> <span data-ttu-id="68621-789">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68621-789">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="68621-790"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-790">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-791">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-791">The name of the preferred type.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-792">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-792">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-793">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-793">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-794">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-794">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-795">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-795">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-796">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-796">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="68621-797">名前を指定したアセンブリ ファイルと、パラメーターなしのコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-797">Creates an instance of the type whose name is specified, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="68621-798">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-798">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-799"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-799">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-800">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、「<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>」および「<xref:System.Activator.CreateInstance%2A> メソッド」の「例外」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-800">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-801"><paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-801"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-802">一致するパブリック コンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-802">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-803"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-803"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-804"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-804"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-805">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-805">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-806">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-806">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-807">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-807">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-808"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-808"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68621-809">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-809">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-810"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-810"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-811">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-811">-or-</span></span> 
<span data-ttu-id="68621-812">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-812">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-813">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-813">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-814">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-814">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-815">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-815">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="68621-816">ディレクトリパスを検索し、その内容を読み取る機能。</span><span class="sxs-lookup"><span data-stu-id="68621-816">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="68621-817">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68621-817">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-818">許可セットに関係なく、非パブリック型にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="68621-818">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="68621-819">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-819">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="68621-820"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-820">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-821">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-821">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="68621-822"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-822"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-823"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-823">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-824"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-824">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-825"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-825">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-826"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-826">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-827">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-827">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-828"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-828">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-829"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-829">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-830"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-830">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-831">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-831">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-832">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-832">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-833">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-833">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-834">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-834">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-835">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-835">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="68621-836">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-836">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-837">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-837">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-838"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-838">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-839">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、「<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>」および「<xref:System.Activator.CreateInstance%2A> メソッド」の「例外」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-839">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-840"><paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-840"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-841">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-841">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-842"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-842"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-843"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-843"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-844">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-844">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-845">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-845">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-846">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-846">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68621-847">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-847">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-848"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-848"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-849"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-849"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-850">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-850">-or-</span></span> 
<span data-ttu-id="68621-851">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-851">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-852">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-852">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-853">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-853">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-854">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-854">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="68621-855">ディレクトリパスを検索し、その内容を読み取る機能。</span><span class="sxs-lookup"><span data-stu-id="68621-855">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="68621-856">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68621-856">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-857">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-857">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-858">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-858">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="68621-859"><paramref name="typeName" /> という名前の型が作成されるリモート ドメイン。</span><span class="sxs-lookup"><span data-stu-id="68621-859">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="68621-860"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-860">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-861">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-861">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="68621-862"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-862"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-863"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-863">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-864"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-864">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-865"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-865">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-866"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-866">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-867">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-867">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-868"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-868">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-869"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-869">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-870"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-870">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-871">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-871">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-872">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-872">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-873">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-873">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-874">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-874">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-875">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-875">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="68621-876">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-876">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-877">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-877">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-878"><xref:System.Activator.CreateInstanceFrom%2A> は、セキュリティアクセス許可が制限されたアプリケーションドメインでホストがコードを実行する必要がある場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-878">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="68621-879"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-879">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-880">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> および <xref:System.Activator.CreateInstance%2A> メソッドの例外に関するセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-880">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-881"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-881"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-882">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-882">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-883"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-883"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-884"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-884"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-885">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-885">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-886">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-886">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-887">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-887">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68621-888">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-888">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-889"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-889"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-890"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-890"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-891">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-891">-or-</span></span> 
 <span data-ttu-id="68621-892"><paramref name="assemblyName" /> が、現在読み込まれているバージョンよりも新しいバージョンの共通言語ランタイムを対象としてコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-892"><paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-893">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="68621-893">for supplying evidence.</span></span> <span data-ttu-id="68621-894">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="68621-894">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="68621-895">ディレクトリパスを検索し、その内容を読み取る機能。</span><span class="sxs-lookup"><span data-stu-id="68621-895">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="68621-896">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68621-896">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-897">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-897">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-898">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-898">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="68621-899">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-899">requires full trust for the immediate caller.</span></span> <span data-ttu-id="68621-900">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68621-900">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See https://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" Index="8" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="68621-901"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-901">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-902">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-902">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="68621-903"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-903"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-904"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-904">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-905"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-905">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-906"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-906">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-907"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-907">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-908">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-908">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-909"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-909">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-910"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-910">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-911"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-911">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-912">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-912">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-913">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-913">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-914">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-914">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-915">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-915">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-916">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-916">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="68621-917">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span><span class="sxs-lookup"><span data-stu-id="68621-917">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="68621-918">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も一致するコンストラクターを使用して、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-918">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-919">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-919">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-920"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-920">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="68621-921">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、「<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>」および「<xref:System.Activator.CreateInstance%2A> メソッド」の「例外」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-921">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-922"><paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-922"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-923">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-923">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-924"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-924"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-925"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-925"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-926">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-926">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-927">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-927">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-928">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-928">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68621-929">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-929">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-930"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-930"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-931"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-931"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-932">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-932">-or-</span></span> 
<span data-ttu-id="68621-933">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-933">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-934">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-934">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-935">デリゲートのインスタンスを作成するときに、アンマネージコードを呼び出すことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="68621-935">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="68621-936">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="68621-936">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="68621-937">ディレクトリパスを検索し、その内容を読み取る機能。</span><span class="sxs-lookup"><span data-stu-id="68621-937">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="68621-938">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68621-938">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-939">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-939">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-940">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-940">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See https://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" Index="9" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="68621-941"><paramref name="typeName" /> という名前の型が作成されるリモート ドメイン。</span><span class="sxs-lookup"><span data-stu-id="68621-941">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="68621-942"><paramref name="typeName" /> という名前の型をシークする場所となるアセンブリが含まれているファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="68621-942">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="68621-943">推奨される型の名前。</span><span class="sxs-lookup"><span data-stu-id="68621-943">The name of the preferred type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="68621-944"><paramref name="typeName" /> の検索で大文字と小文字を区別しない場合は <see langword="true" />。検索で大文字と小文字を区別する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68621-944"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="68621-945"><paramref name="typeName" /> コンストラクターの検索に影響を与える 0 個以上のビット フラグの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="68621-945">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-946"><paramref name="bindingAttr" /> が 0 の場合は、大文字と小文字を区別してパブリック コンストラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="68621-946">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="68621-947"><paramref name="bindingAttr" /> および <paramref name="args" /> を使用して <paramref name="typeName" /> コンストラクターをシークおよび識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-947">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-948"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-948">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="68621-949">呼び出すコンストラクターのパラメーターと、数、順序、および型が一致する引数の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-949">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="68621-950"><paramref name="args" /> が空の配列または <see langword="null" /> である場合は、パラメーターを受け取らないコンストラクター (パラメーターなしのコンストラクター) が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="68621-950">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="68621-951"><paramref name="args" /> から <paramref name="typeName" /> コンストラクターに対して宣言された仮引数型への強制変換を制御するカルチャ固有の情報。</span><span class="sxs-lookup"><span data-stu-id="68621-951">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="68621-952"><paramref name="culture" /> が <see langword="null" /> の場合は、現在のスレッドの <see cref="T:System.Globalization.CultureInfo" /> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="68621-952">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="68621-953">アクティべーションに参加できる 1 つ以上の属性の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-953">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="68621-954">これは、通常、リモート オブジェクトをアクティブ化するために必要な URL を指定する 1 つの <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> オブジェクトを含む配列です。</span><span class="sxs-lookup"><span data-stu-id="68621-954">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="68621-955">このパラメーターは、クライアント側でアクティブ化されるオブジェクトに関連しています。</span><span class="sxs-lookup"><span data-stu-id="68621-955">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="68621-956">クライアント アクティベーションは、下位互換性のために残されているレガシ テクノロジです。新規の開発には使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-956">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="68621-957">分散アプリケーションは、代わりに Windows Communication Foundation (WCF) を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-957">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="68621-958">セキュリティ ポリシーがコードに与えるアクセス許可を決定するために使用する情報。</span><span class="sxs-lookup"><span data-stu-id="68621-958">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="68621-959">名前を指定したアセンブリ ファイルと、指定したパラメーターに最も適したコンストラクターを使用して、指定したリモート ドメインに、名前を指定した型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-959">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="68621-960">新しく作成されたインスタンスにアクセスするために、ラップを解除する必要があるハンドル。</span><span class="sxs-lookup"><span data-stu-id="68621-960">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-961"><xref:System.Activator.CreateInstanceFrom%2A> は、セキュリティアクセス許可が制限されたアプリケーションドメインでホストがコードを実行する必要がある場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="68621-961">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="68621-962"><xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> メソッドを使用して、戻り値のラップを解除します。</span><span class="sxs-lookup"><span data-stu-id="68621-962">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68621-963">このメソッドは <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> を使用して、直前の呼び出し元に完全信頼を要求します。</span><span class="sxs-lookup"><span data-stu-id="68621-963">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="68621-964">呼び出されたメソッドによってスローされる可能性のある他の例外の詳細については、「<xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType>」および「<xref:System.Activator.CreateInstance%2A> メソッド」の「例外」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-964">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-965"><paramref name="domain" /> または <paramref name="typeName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-965"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="68621-966">一致するコンストラクターが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-966">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="68621-967"><paramref name="typename" /> が <paramref name="assemblyFile" /> に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-967"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="68621-968"><paramref name="assemblyFile" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="68621-968"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="68621-969">呼び出し元には、このコンストラクターを呼び出すアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-969">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-970">抽象クラスのインスタンスを作成することができないか、またはこのメンバーは遅延バインド メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-970">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="68621-971">リフレクションを通じて呼び出されたコンストラクターが、例外をスローしました。</span><span class="sxs-lookup"><span data-stu-id="68621-971">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="68621-972">呼び出し元に、必要な <see cref="T:System.Security.Permissions.FileIOPermission" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="68621-972">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="68621-973"><paramref name="activationAttributes" /> が空の配列ではないか、作成される型が <see cref="T:System.MarshalByRefObject" /> から派生したものではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-973"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="68621-974"><paramref name="assemblyFile" /> は正しいアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="68621-974"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="68621-975">- または -</span><span class="sxs-lookup"><span data-stu-id="68621-975">-or-</span></span> 
<span data-ttu-id="68621-976">共通言語ランタイム (CLR) バージョン 2.0 以降が現在読み込まれており、<paramref name="assemblyName" /> は現在読み込まれているバージョンより新しいバージョンの CLR 用にコンパイルされました。</span><span class="sxs-lookup"><span data-stu-id="68621-976">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="68621-977">.NET Framework のバージョン 2.0、3.0、3.5 はすべて、CLR バージョン 2.0 を使うことにご注意ください。</span><span class="sxs-lookup"><span data-stu-id="68621-977">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="68621-978">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="68621-978">for supplying evidence.</span></span> <span data-ttu-id="68621-979">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="68621-979">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="68621-980">ディレクトリパスを検索し、その内容を読み取る機能。</span><span class="sxs-lookup"><span data-stu-id="68621-980">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="68621-981">関連付けられた列挙型: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> および <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="68621-981">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="68621-982">許可セットに関係なく、非パブリックな型とメンバーにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="68621-982">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="68621-983">関連付けられた列挙型: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="68621-983">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="68621-984">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-984">requires full trust for the immediate caller.</span></span> <span data-ttu-id="68621-985">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68621-985">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68621-986">既知のオブジェクト用または XML Web サービス用のプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-986">Creates a proxy for a well-known object or XML Web service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string -&gt; obj" Usage="System.Activator.GetObject (type, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68621-987">接続する既知のオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="68621-987">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="68621-988">既知のオブジェクトの URL。</span><span class="sxs-lookup"><span data-stu-id="68621-988">The URL of the well-known object.</span></span></param>
        <summary><span data-ttu-id="68621-989">指定された型と URL が示す既知のオブジェクト用にプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-989">Creates a proxy for the well-known object indicated by the specified type and URL.</span></span></summary>
        <returns><span data-ttu-id="68621-990">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span><span class="sxs-lookup"><span data-stu-id="68621-990">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-991">プロキシを呼び出して、リモートオブジェクトにメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="68621-991">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="68621-992">プロキシでメソッドが呼び出されるまで、ネットワーク経由でメッセージが送信されることはありません。</span><span class="sxs-lookup"><span data-stu-id="68621-992">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-993"><paramref name="type" /> または <paramref name="url" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-993"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="68621-994"><paramref name="type" /> は、参照渡しでマーシャリングされません。インターフェイスでもありません。</span><span class="sxs-lookup"><span data-stu-id="68621-994"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-995">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-995">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="68621-996">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-996">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="68621-997">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68621-997">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string * obj -&gt; obj" Usage="System.Activator.GetObject (type, url, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="68621-998">接続する既知のオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="68621-998">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="68621-999">既知のオブジェクトの URL。</span><span class="sxs-lookup"><span data-stu-id="68621-999">The URL of the well-known object.</span></span></param>
        <param name="state"><span data-ttu-id="68621-1000">チャネル固有データまたは <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="68621-1000">Channel-specific data or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="68621-1001">指定された型、URL、およびチャネル データが示す既知のオブジェクト用にプロキシを作成します。</span><span class="sxs-lookup"><span data-stu-id="68621-1001">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span></span></summary>
        <returns><span data-ttu-id="68621-1002">要求した既知のオブジェクトによって提供されたエンドポイントを指すプロキシ。</span><span class="sxs-lookup"><span data-stu-id="68621-1002">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-1003">プロキシを呼び出して、リモートオブジェクトにメッセージを送信します。</span><span class="sxs-lookup"><span data-stu-id="68621-1003">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="68621-1004">プロキシでメソッドが呼び出されるまで、ネットワーク経由でメッセージが送信されることはありません。</span><span class="sxs-lookup"><span data-stu-id="68621-1004">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="68621-1005">`state` パラメーターは、情報をチャネルに伝達し、<xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="68621-1005">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68621-1006"><paramref name="type" /> または <paramref name="url" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68621-1006"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="68621-1007"><paramref name="type" /> は、参照渡しでマーシャリングされません。インターフェイスでもありません。</span><span class="sxs-lookup"><span data-stu-id="68621-1007"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="68621-1008">このメンバーは、遅延バインディング メカニズムで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="68621-1008">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="68621-1009">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="68621-1009">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="68621-1010">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="68621-1010">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="68621-1011">将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="68621-1011">Reserved for future use.</span></span> <span data-ttu-id="68621-1012">IID_NULL にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-1012">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="68621-1013">渡された割り当てる名前の配列。</span><span class="sxs-lookup"><span data-stu-id="68621-1013">The passed-in array of names to map.</span></span></param>
        <param name="cNames"><span data-ttu-id="68621-1014">割り当てる名前のカウント。</span><span class="sxs-lookup"><span data-stu-id="68621-1014">The count of the names to map.</span></span></param>
        <param name="lcid"><span data-ttu-id="68621-1015">名前を解釈するロケール コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="68621-1015">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="68621-1016">名前に対応する ID を受け取る、呼び出し元割り当て済み配列。</span><span class="sxs-lookup"><span data-stu-id="68621-1016">The caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="68621-1017">一連の名前を対応する一連のディスパッチ識別子に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="68621-1017">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-1018">このメソッドは、アンマネージコードからマネージクラスにアクセスするために使用されます。マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-1018">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="68621-1019">`IDispatch::GetIDsOfNames`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-1019">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="68621-1020">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-1020">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="68621-1021">返される型情報。</span><span class="sxs-lookup"><span data-stu-id="68621-1021">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="68621-1022">型情報のロケール ID。</span><span class="sxs-lookup"><span data-stu-id="68621-1022">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="68621-1023">要求された型情報オブジェクトへのポインターを受け取るオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="68621-1023">An object that receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="68621-1024">オブジェクトの型情報を取得します。この型情報を使用して、インターフェイスの型情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="68621-1024">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-1025">このメソッドは、アンマネージコードからマネージクラスにアクセスするために使用されます。マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-1025">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="68621-1026">`IDispatch::GetTypeInfo`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-1026">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="68621-1027">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-1027">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="68621-1028">このメソッドから制御が戻るときに、オブジェクトが提供する型情報インターフェイスの数を受け取る場所へのポインターが格納されます。</span><span class="sxs-lookup"><span data-stu-id="68621-1028">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="68621-1029">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="68621-1029">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="68621-1030">オブジェクトが提供する型情報インターフェイスの数 (0 または 1) を取得します。</span><span class="sxs-lookup"><span data-stu-id="68621-1030">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-1031">このメソッドは、アンマネージコードからマネージクラスにアクセスするために使用されます。マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-1031">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="68621-1032">`IDispatch::GetTypeInfoCount`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-1032">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="68621-1033">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-1033">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="68621-1034">メンバーを識別するディパッチ ID。</span><span class="sxs-lookup"><span data-stu-id="68621-1034">A dispatch identifier that identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="68621-1035">将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="68621-1035">Reserved for future use.</span></span> <span data-ttu-id="68621-1036">IID_NULL にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="68621-1036">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="68621-1037">引数を解釈する対象のロケール コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="68621-1037">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="68621-1038">呼び出しのコンテキストを記述するフラグ。</span><span class="sxs-lookup"><span data-stu-id="68621-1038">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="68621-1039">引数の配列、名前付き引数の引数 DISPID の配列、および各配列内の要素数のカウントを格納している構造体へのポインター。</span><span class="sxs-lookup"><span data-stu-id="68621-1039">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="68621-1040">結果が格納される場所へのポインター。</span><span class="sxs-lookup"><span data-stu-id="68621-1040">A pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="68621-1041">例外情報を格納する構造体へのポインター。</span><span class="sxs-lookup"><span data-stu-id="68621-1041">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="68621-1042">エラーが存在する最初の引数のインデックス。</span><span class="sxs-lookup"><span data-stu-id="68621-1042">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="68621-1043">オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="68621-1043">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68621-1044">このメソッドは、アンマネージコードからマネージクラスにアクセスするために使用されます。マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="68621-1044">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="68621-1045">`IDispatch::Invoke`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="68621-1045">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="68621-1046">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="68621-1046">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
