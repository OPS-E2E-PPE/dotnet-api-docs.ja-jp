<Type Name="BitConverter" FullName="System.BitConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="959c16cfbca68d48c84ddf279efd54ea463d4d78" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400927" /></Metadata><TypeSignature Language="C#" Value="public static class BitConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BitConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.BitConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BitConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitConverter abstract sealed" />
  <TypeSignature Language="F#" Value="type BitConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="68b5e-101">基本データ型をバイト配列に、バイト配列を基本データ型に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-101">Converts base data types to an array of bytes, and an array of bytes to base data types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-102"><xref:System.BitConverter> クラスは、一連のバイトとしての基本的な形式の値型を操作するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="68b5e-102">The <xref:System.BitConverter> class helps manipulate value types in their fundamental form, as a series of bytes.</span></span> <span data-ttu-id="68b5e-103">1バイトは8ビット符号なし整数として定義されます。</span><span class="sxs-lookup"><span data-stu-id="68b5e-103">A byte is defined as an 8-bit unsigned integer.</span></span> <span data-ttu-id="68b5e-104"><xref:System.BitConverter> クラスには、次の表に示すように、各プリミティブ型をバイト配列との間で変換するための静的メソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-104">The <xref:System.BitConverter> class includes static methods to convert each of the primitive types to and from an array of bytes, as the following table illustrates.</span></span>  
  
|<span data-ttu-id="68b5e-105">型</span><span class="sxs-lookup"><span data-stu-id="68b5e-105">Type</span></span>|<span data-ttu-id="68b5e-106">To byte 変換</span><span class="sxs-lookup"><span data-stu-id="68b5e-106">To byte conversion</span></span>|<span data-ttu-id="68b5e-107">バイト変換から</span><span class="sxs-lookup"><span data-stu-id="68b5e-107">From byte conversion</span></span>|  
|----------|------------------------|--------------------------|  
|<xref:System.Boolean>|<xref:System.BitConverter.GetBytes%28System.Boolean%29>|<xref:System.BitConverter.ToBoolean%2A>|  
|<xref:System.Char>|<xref:System.BitConverter.GetBytes%28System.Char%29>|<xref:System.BitConverter.ToChar%2A>|  
|<xref:System.Double>|<xref:System.BitConverter.GetBytes%28System.Double%29><br /><br /> <span data-ttu-id="68b5e-108">- または -</span><span class="sxs-lookup"><span data-stu-id="68b5e-108">-or-</span></span><br /><br /> <xref:System.BitConverter.DoubleToInt64Bits%28System.Double%29>|<xref:System.BitConverter.ToDouble%2A><br /><br /> <span data-ttu-id="68b5e-109">- または -</span><span class="sxs-lookup"><span data-stu-id="68b5e-109">-or-</span></span><br /><br /> <xref:System.BitConverter.Int64BitsToDouble%2A>|  
|<xref:System.Int16>|<xref:System.BitConverter.GetBytes%28System.Int16%29>|<xref:System.BitConverter.ToInt16%2A>|  
|<xref:System.Int32>|<xref:System.BitConverter.GetBytes%28System.Int32%29>|<xref:System.BitConverter.ToInt32%2A>|  
|<xref:System.Int64>|<xref:System.BitConverter.GetBytes%28System.Int64%29>|<xref:System.BitConverter.ToInt64%2A>|  
|<xref:System.Single>|<xref:System.BitConverter.GetBytes%28System.Single%29>|<xref:System.BitConverter.ToSingle%2A>|  
|<xref:System.UInt16>|<xref:System.BitConverter.GetBytes%28System.UInt16%29>|<xref:System.BitConverter.ToUInt16%2A>|  
|<xref:System.UInt32>|<xref:System.BitConverter.GetBytes%28System.UInt32%29>|<xref:System.BitConverter.ToUInt32%2A>|  
|<xref:System.UInt64>|<xref:System.BitConverter.GetBytes%28System.UInt64%29>|<xref:System.BitConverter.ToUInt64%2A>|  
  
 <span data-ttu-id="68b5e-110"><xref:System.BitConverter> メソッドを使用してデータをラウンドトリップする場合は、<xref:System.BitConverter.GetBytes%2A> のオーバーロードと `To`*型*のメソッドが同じ型を指定していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-110">If you use <xref:System.BitConverter> methods to round-trip data, make sure that the <xref:System.BitConverter.GetBytes%2A> overload and the `To`*Type* method specify the same type.</span></span> <span data-ttu-id="68b5e-111">次の例に示すように、<xref:System.BitConverter.ToUInt32%2A> メソッドを呼び出すことによって符号付き整数を表す配列を復元すると、元のとは異なる値が返される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-111">As the following example illustrates, restoring an array that represents a signed integer by calling the <xref:System.BitConverter.ToUInt32%2A> method can result in a value that is different from the original.</span></span> <span data-ttu-id="68b5e-112">詳細については、「BCL チームのブログ」の「[符号付きの非10進数とビットごとの値の使用](https://go.microsoft.com/fwlink/?LinkId=186999)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-112">For more information, see the entry [Working with Signed Non-Decimal and Bitwise Values](https://go.microsoft.com/fwlink/?LinkId=186999) in the BCL Team Blog.</span></span>  
  
 [!code-csharp[System.BitConverter.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/example1.cs#3)]
 [!code-vb[System.BitConverter.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/example1.vb#3)]  
  
 <span data-ttu-id="68b5e-113"><xref:System.BitConverter.GetBytes%2A> メソッドのオーバーロードによって返される配列内のバイトの順序 (<xref:System.BitConverter.DoubleToInt64Bits%2A> メソッドによって返される整数のビットの順序、および <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29> メソッドによって返される16進数の文字列の順序) は、コンピューターのアーキテクチャによって異なります。はリトルエンディアンまたはビッグエンディアンです。</span><span class="sxs-lookup"><span data-stu-id="68b5e-113">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method overloads (as well as the order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method and the order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%28System.Byte%5B%5D%29> method) depends on whether the computer architecture is little-endian or big-endian.</span></span> <span data-ttu-id="68b5e-114">同様に、配列内のバイトの順序と `To`*整数値*のメソッドと <xref:System.BitConverter.ToChar%2A> メソッドによって返されるバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-114">Similarly, the order of bytes in the array and returned by the `To`*IntegerValue* methods and the <xref:System.BitConverter.ToChar%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span> <span data-ttu-id="68b5e-115">アーキテクチャのエンディアンは <xref:System.BitConverter.IsLittleEndian> プロパティによって示されます。このプロパティは、リトルエンディアンシステムでは `true` を、ビッグエンディアンシステムでは `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-115">The endianness of an architecture is indicated by the <xref:System.BitConverter.IsLittleEndian> property, which returns `true` on little-endian systems and `false` on big-endian systems.</span></span> <span data-ttu-id="68b5e-116">リトルエンディアンシステムでは、上位バイトの前に下位バイトがあります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-116">On little-endian systems, lower-order bytes precede higher-order bytes.</span></span> <span data-ttu-id="68b5e-117">ビッグエンディアンシステムでは、下位バイトの前に上位バイトがあります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-117">On big-endian system, higher-order bytes precede lower-order bytes.</span></span> <span data-ttu-id="68b5e-118">次の表は、整数 1234567890 (0x499602D2) を <xref:System.BitConverter.GetBytes%28System.Int32%29> メソッドに渡すことによって生成されるバイト配列の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-118">The following table illustrates the difference in the byte arrays that result from passing the integer 1,234,567,890 (0x499602D2) to the <xref:System.BitConverter.GetBytes%28System.Int32%29> method.</span></span> <span data-ttu-id="68b5e-119">バイトは、インデックス0のバイトからインデックス3のバイトまでの順序で表示されます。</span><span class="sxs-lookup"><span data-stu-id="68b5e-119">The bytes are listed in order from the byte at index 0 to the byte at index 3.</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="68b5e-120">リトルエンディアン</span><span class="sxs-lookup"><span data-stu-id="68b5e-120">Little-endian</span></span>|<span data-ttu-id="68b5e-121">D2-02-96-49</span><span class="sxs-lookup"><span data-stu-id="68b5e-121">D2-02-96-49</span></span>|  
|<span data-ttu-id="68b5e-122">ビッグエンディアン</span><span class="sxs-lookup"><span data-stu-id="68b5e-122">Big-endian</span></span>|<span data-ttu-id="68b5e-123">49-96-02-D2</span><span class="sxs-lookup"><span data-stu-id="68b5e-123">49-96-02-D2</span></span>|  
  
 <span data-ttu-id="68b5e-124">一部のメソッドの戻り値はシステムアーキテクチャによって異なるため、コンピューターの境界を越えてバイトデータを送信する場合は注意が必要です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-124">Because the return value of some methods depends on system architecture, be careful when transmitting byte data beyond machine boundaries:</span></span>  
  
-   <span data-ttu-id="68b5e-125">データを送受信するすべてのシステムのエンディアンが同じであることが保証されている場合は、データに対して何も実行されません。</span><span class="sxs-lookup"><span data-stu-id="68b5e-125">If all systems sending and receiving data are guaranteed to have the same endianness, nothing has be done to the data.</span></span>  
  
-   <span data-ttu-id="68b5e-126">データを送受信するシステムが異なるエンディアンを持つことができる場合、は常に特定の順序でデータを送信します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-126">If systems sending and receiving data can have different endianness, always transmit data in a particular order.</span></span> <span data-ttu-id="68b5e-127">つまり、配列内のバイトの順序は、送信前に、または受け取った後に、元に戻す必要がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-127">This means that the order of bytes in the array may have to be reversed either before sending them or after receiving them.</span></span> <span data-ttu-id="68b5e-128">一般的な規則では、データをネットワークのバイト順 (ビッグエンディアンの順序) で転送します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-128">A common convention is to transmit data in network byte order (big-endian order).</span></span> <span data-ttu-id="68b5e-129">次の例は、ネットワークのバイト順で整数値を送信するための実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-129">The following example provides an implementation for sending an integer value in network byte order.</span></span>  
  
     [!code-csharp[System.BitConverter.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/networkorder1.cs#4)]
     [!code-vb[System.BitConverter.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/networkorder1.vb#4)]  
  
-   <span data-ttu-id="68b5e-130">データを送受信するシステムがさまざまなエンディアンを持つことができ、転送されるデータが符号付き整数で構成されている場合は、<xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> メソッドを呼び出して、データをネットワークのバイト順に変換し、<xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType> のメソッドを呼び出して、それをによって要求される順序に変換します。人.</span><span class="sxs-lookup"><span data-stu-id="68b5e-130">If systems sending and receiving data can have different endianness and the data to be transmitted consists of signed integers, call the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> method to convert the data to network byte order and the <xref:System.Net.IPAddress.NetworkToHostOrder%2A?displayProperty=nameWithType> method to convert it to the order required by the recipient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-131">次のコード例は、複数の <xref:System.BitConverter> クラスのメソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-131">The following code example illustrates the use of several <xref:System.BitConverter> class methods.</span></span>  
  
 [!code-cpp[System.BitConverter.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/bitconv.cpp#1)]
 [!code-csharp[System.BitConverter.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/bitconv.cs#1)]
 [!code-vb[System.BitConverter.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/bitconv.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Byte" />
  </Docs>
  <Members>
    <Member MemberName="DoubleToInt64Bits">
      <MemberSignature Language="C#" Value="public static long DoubleToInt64Bits (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 DoubleToInt64Bits(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.DoubleToInt64Bits(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DoubleToInt64Bits (value As Double) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long DoubleToInt64Bits(double value);" />
      <MemberSignature Language="F#" Value="static member DoubleToInt64Bits : double -&gt; int64" Usage="System.BitConverter.DoubleToInt64Bits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-132">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-132">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-133">指定した倍精度浮動小数点数を 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-133">Converts the specified double-precision floating point number to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="68b5e-134"><paramref name="value" /> と等価の値を持つ 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-134">A 64-bit signed integer whose value is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-135"><xref:System.BitConverter.DoubleToInt64Bits%2A> メソッドによって返される整数のビットの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-135">The order of bits in the integer returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-136">次のコード例では、`DoubleToInt64Bits` メソッドを使用して、複数の <xref:System.Double> 値のビットパターンを <xref:System.Int64> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-136">The following code example converts the bit patterns of several <xref:System.Double> values to <xref:System.Int64> values with the `DoubleToInt64Bits` method.</span></span>  
  
 [!code-cpp[System.BitConverter.DoubleInt64#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/dbltobits.cpp#2)]
 [!code-csharp[System.BitConverter.DoubleInt64#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/dbltobits.cs#2)]
 [!code-vb[System.BitConverter.DoubleInt64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/dbltobits.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.Int64BitsToDouble(System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68b5e-137">指定したデータをバイト配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-137">Converts the specified data to an array of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(bool value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : bool -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-138">ブール値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-138">A Boolean value.</span></span></param>
        <summary><span data-ttu-id="68b5e-139">指定したブール値をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-139">Returns the specified Boolean value as a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-140">長さ 1 のバイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-140">A byte array with length 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-141"><xref:System.BitConverter.ToBoolean%2A> メソッドを呼び出すことにより、バイト配列を <xref:System.Boolean> 値に変換できます。</span><span class="sxs-lookup"><span data-stu-id="68b5e-141">You can convert a byte array back to a <xref:System.Boolean> value by calling the <xref:System.BitConverter.ToBoolean%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-142">次の例では、<xref:System.Boolean> 値のビットパターンを、`GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-142">The following example converts the bit patterns of <xref:System.Boolean> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesbool.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesbool.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesbool.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Char) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(char value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : char -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-143">変換する文字。</span><span class="sxs-lookup"><span data-stu-id="68b5e-143">A character to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-144">指定した Unicode 文字値をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-144">Returns the specified Unicode character value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-145">長さが 2 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-145">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-146"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-146">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-147">次のコード例では、<xref:System.Char> 値 (Unicode 文字) のビットパターンを、`GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-147">The following code example converts the bit patterns of <xref:System.Char> values (Unicode characters) to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/byteschar.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/byteschar.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/byteschar.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToChar(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Double) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(double value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : double -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-148">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-148">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-149">指定した倍精度浮動小数点値をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-149">Returns the specified double-precision floating point value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-150">長さが 8 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-150">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-151"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-151">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-152">次のコード例では、<xref:System.Double> 値のビットパターンを `GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-152">The following code example converts the bit patterns of <xref:System.Double> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytesdouble.cpp#4)]
 [!code-csharp[System.BitConverter.GetBytes.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytesdouble.cs#4)]
 [!code-vb[System.BitConverter.GetBytes.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytesdouble.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Short) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(short value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int16 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-153">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-153">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-154">指定した 16 ビットの符号なし整数値をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-154">Returns the specified 16-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-155">長さが 2 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-155">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-156"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-156">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-157">次のコード例では、<xref:System.Int16> 値のビットパターンを `GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-157">The following code example converts the bit patterns of <xref:System.Int16> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint16.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint16.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(int value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-158">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-158">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-159">バイト配列として指定した 32 ビット符号付き整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-159">Returns the specified 32-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-160">長さが 4 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-160">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-161"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-161">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-162">次のコード例では、<xref:System.Int32> 値のビットパターンを `GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-162">The following code example converts the bit patterns of <xref:System.Int32> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint32.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint32.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.SInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Long) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(long value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : int64 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-163">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-163">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-164">バイト配列として指定した 64 ビット符号付き整数値を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-164">Returns the specified 64-bit signed integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-165">長さが 8 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-165">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-166"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-166">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-167">次の例では、<xref:System.BitConverter.GetBytes%2A> メソッドを呼び出して、<xref:System.Int64> 配列内の各要素を <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-167">The following example calls the <xref:System.BitConverter.GetBytes%2A> method to convert each element in an <xref:System.Int64> array to a <xref:System.Byte> arrays.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CPP/bytesint64.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/CS/bytesint64.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.SInts/VB/bytesint64.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As Single) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(float value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : single -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-168">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-168">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-169">指定した単精度浮動小数点値をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-169">Returns the specified single-precision floating point value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-170">長さが 4 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-170">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-171"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-171">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-172">次のコード例では、<xref:System.Single> 値のビットパターンを `GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-172">The following code example converts the bit patterns of <xref:System.Single> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CPP/bytessingle.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/CS/bytessingle.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.Others/VB/bytessingle.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As UShort) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint16 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-173">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-173">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-174">指定した 16 ビットの符号なし整数値をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-174">Returns the specified 16-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-175">長さが 2 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-175">An array of bytes with length 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-176"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-176">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-177">次のコード例では、<xref:System.UInt16> 値のビットパターンを `GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-177">The following code example converts the bit patterns of <xref:System.UInt16> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint16.cpp#3)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint16.cs#3)]
 [!code-vb[System.BitConverter.GetBytes.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint16.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As UInteger) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint32 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-178">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-178">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-179">指定した 32 ビットの符号なし整数値をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-179">Returns the specified 32-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-180">長さが 4 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-180">An array of bytes with length 4.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-181"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-181">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-182">次のコード例では、<xref:System.UInt32> 値のビットパターンを `GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-182">The following code example converts the bit patterns of <xref:System.UInt32> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint32.cpp#2)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint32.cs#2)]
 [!code-vb[System.BitConverter.GetBytes.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static byte[] GetBytes (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetBytes(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.GetBytes(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBytes (value As ULong) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ GetBytes(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member GetBytes : uint64 -&gt; byte[]" Usage="System.BitConverter.GetBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-183">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-183">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-184">指定した 64 ビットの符号なし整数値をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-184">Returns the specified 64-bit unsigned integer value as an array of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-185">長さが 8 バイトの配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-185">An array of bytes with length 8.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-186"><xref:System.BitConverter.GetBytes%2A> メソッドによって返される配列内のバイトの順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-186">The order of bytes in the array returned by the <xref:System.BitConverter.GetBytes%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-187">次のコード例では、<xref:System.UInt64> 値のビットパターンを `GetBytes` メソッドを使用して <xref:System.Byte> 配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-187">The following code example converts the bit patterns of <xref:System.UInt64> values to <xref:System.Byte> arrays with the `GetBytes` method.</span></span>  
  
 [!code-cpp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CPP/bytesuint64.cpp#1)]
 [!code-csharp[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/CS/bytesuint64.cs#1)]
 [!code-vb[System.BitConverter.GetBytes.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.GetBytes.UInts/VB/bytesuint64.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Int32BitsToSingle">
      <MemberSignature Language="C#" Value="public static float Int32BitsToSingle (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Int32BitsToSingle(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.Int32BitsToSingle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Int32BitsToSingle (value As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Int32BitsToSingle(int value);" />
      <MemberSignature Language="F#" Value="static member Int32BitsToSingle : int -&gt; single" Usage="System.BitConverter.Int32BitsToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-188">変換する整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-188">The integer to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-189">指定した 32 ビット整数を単精度浮動小数点の値として再解釈します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-189">Reinterprets the specified 32-bit integer as a single-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="68b5e-190">変換された整数を表す単精度浮動小数点の値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-190">A single-precision floating-point value that represents the converted integer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Int64BitsToDouble">
      <MemberSignature Language="C#" Value="public static double Int64BitsToDouble (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Int64BitsToDouble(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.Int64BitsToDouble(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Int64BitsToDouble (value As Long) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Int64BitsToDouble(long value);" />
      <MemberSignature Language="F#" Value="static member Int64BitsToDouble : int64 -&gt; double" Usage="System.BitConverter.Int64BitsToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-191">変換する数値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-191">The number to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-192">指定した 64 ビット符号付き整数を倍精度浮動小数点数に再解釈します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-192">Reinterprets the specified 64-bit signed integer to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="68b5e-193"><paramref name="value" /> と等価の値を持つ倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-193">A double-precision floating point number whose value is equivalent to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-194">通常、`value` は、<xref:System.BitConverter.DoubleToInt64Bits%2A> メソッドによって返される整数です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-194">Typically, `value` is an integer that is returned by the <xref:System.BitConverter.DoubleToInt64Bits%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-195">次のコード例では、`Int64BitsToDouble` メソッドを使用して、複数の <xref:System.Int64> 値のビットパターンを <xref:System.Double> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-195">The following code example converts the bit patterns of several <xref:System.Int64> values to <xref:System.Double> values with the `Int64BitsToDouble` method.</span></span>  
  
 [!code-cpp[System.BitConverter.DoubleInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CPP/bitstodbl.cpp#1)]
 [!code-csharp[System.BitConverter.DoubleInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/CS/bitstodbl.cs#1)]
 [!code-vb[System.BitConverter.DoubleInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.DoubleInt64/VB/bitstodbl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.BitConverter.DoubleToInt64Bits(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="IsLittleEndian">
      <MemberSignature Language="C#" Value="public static readonly bool IsLittleEndian;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly bool IsLittleEndian" />
      <MemberSignature Language="DocId" Value="F:System.BitConverter.IsLittleEndian" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLittleEndian As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly bool IsLittleEndian;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsLittleEndian : bool" Usage="System.BitConverter.IsLittleEndian" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68b5e-196">このコンピューターのアーキテクチャにデータを格納するバイト順 ("エンディアン") を示します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-196">Indicates the byte order ("endianness") in which data is stored in this computer architecture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-197">コンピューターアーキテクチャによって、異なるバイト順を使用してデータが格納します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-197">Different computer architectures store data using different byte orders.</span></span> <span data-ttu-id="68b5e-198">"ビッグエンディアン" とは、最上位バイトが単語の左端にあることを意味します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-198">"Big-endian" means the most significant byte is on the left end of a word.</span></span> <span data-ttu-id="68b5e-199">"リトルエンディアン" とは、最上位バイトが単語の右端にあることを意味します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-199">"Little-endian" means the most significant byte is on the right end of a word.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68b5e-200"><xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> メソッドに16ビット、32ビット、または64ビット整数を渡すことによって、<xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> フィールドの値を取得せずに、ネットワークバイト順からホストコンピューターのバイト順に変換できます。</span><span class="sxs-lookup"><span data-stu-id="68b5e-200">You can convert from network byte order to the byte order of the host computer without retrieving  the value of the <xref:System.BitConverter.IsLittleEndian?displayProperty=nameWithType> field by passing a 16-bit, 32-bit, or 64 bit integer to the <xref:System.Net.IPAddress.HostToNetworkOrder%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-201">次のコード例は、`IsLittleEndian` フィールドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-201">The following code example illustrates the use of the `IsLittleEndian` field.</span></span>  
  
 [!code-cpp[System.BitConverter.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.Class/CPP/littleend.cpp#2)]
 [!code-csharp[System.BitConverter.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.Class/CS/littleend.cs#2)]
 [!code-vb[System.BitConverter.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.Class/VB/littleend.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleToInt32Bits">
      <MemberSignature Language="C#" Value="public static int SingleToInt32Bits (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SingleToInt32Bits(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.SingleToInt32Bits(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SingleToInt32Bits (value As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SingleToInt32Bits(float value);" />
      <MemberSignature Language="F#" Value="static member SingleToInt32Bits : single -&gt; int" Usage="System.BitConverter.SingleToInt32Bits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-202">変換する単精度浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-202">The single-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-203">単精度浮動小数点値を整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-203">Converts a single-precision floating-point value into an integer.</span></span></summary>
        <returns><span data-ttu-id="68b5e-204">変換された単精度浮動小数点の値を表す整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-204">An integer representing the converted single-precision floating-point value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToBoolean(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As ReadOnlySpan(Of Byte)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : ReadOnlySpan&lt;byte&gt; -&gt; bool" Usage="System.BitConverter.ToBoolean value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-205">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-205">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-206">読み取り専用のバイト スパンをブール値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-206">Converts a read-only byte span to a Boolean value.</span></span></summary>
        <returns><span data-ttu-id="68b5e-207">変換後のバイトを表すブール値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-207">A Boolean representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-208"><paramref name="value" /> の長さは 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-208">The length of <paramref name="value" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (value As Byte(), startIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : byte[] * int -&gt; bool" Usage="System.BitConverter.ToBoolean (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-209">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-209">A byte array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-210"><paramref name="value" /> 内のバイトのインデックス。</span><span class="sxs-lookup"><span data-stu-id="68b5e-210">The index of the byte within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-211">バイト配列内の指定位置にあるバイトから変換されたブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-211">Returns a Boolean value converted from the byte at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-212"><paramref name="startIndex" /> の <paramref name="value" /> にあるバイトが 0 以外の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-212"><see langword="true" /> if the byte at <paramref name="startIndex" /> in <paramref name="value" /> is nonzero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-213"><xref:System.Boolean> 値をバイト表現に変換するには、<xref:System.BitConverter.GetBytes(System.Boolean)> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-213">To convert a <xref:System.Boolean> value to its byte representation, call the <xref:System.BitConverter.GetBytes(System.Boolean)> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-214">次のコード例では、<xref:System.Byte> 配列の要素を、`ToBoolean` メソッドを使用して <xref:System.Boolean> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-214">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Boolean> values with the `ToBoolean` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batobool.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.Others#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batobool.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.Others#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batobool.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-215"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-215"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-216"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-216"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToChar(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As ReadOnlySpan(Of Byte)) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToChar : ReadOnlySpan&lt;byte&gt; -&gt; char" Usage="System.BitConverter.ToChar value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-217">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-217">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-218">読み取り専用のバイト スパンを文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-218">Converts a read-only byte span into a character.</span></span></summary>
        <returns><span data-ttu-id="68b5e-219">変換後のバイトを表す文字。</span><span class="sxs-lookup"><span data-stu-id="68b5e-219">A character representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-220"><paramref name="value" /> の長さが <see cref="T:System.Char" /> の長さを下回っています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-220">The length of <paramref name="value" /> is less than the length of a <see cref="T:System.Char" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToChar(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (value As Byte(), startIndex As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToChar : byte[] * int -&gt; char" Usage="System.BitConverter.ToChar (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-221">配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-221">An array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-222"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-222">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-223">バイト配列内の指定位置にある 2 バイトから変換された Unicode 文字を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-223">Returns a Unicode character converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-224"><paramref name="startIndex" /> から始まる 2 バイトで構成される文字。</span><span class="sxs-lookup"><span data-stu-id="68b5e-224">A character formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-225"><xref:System.BitConverter.ToChar%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 1 から <xref:System.Char> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-225">The <xref:System.BitConverter.ToChar%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.Char> value.</span></span> <span data-ttu-id="68b5e-226">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、<xref:System.BitConverter> クラスのトピックの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-226">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-227">次のコード例では、<xref:System.Byte> 配列の要素を、`ToChar` メソッドを使用して <xref:System.Char> 値 (Unicode 文字) に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-227">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Char> values (Unicode characters) with the `ToChar` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batochar.cpp#2)]
 [!code-csharp[System.BitConverter.ToXXX.Others#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batochar.cs#2)]
 [!code-vb[System.BitConverter.ToXXX.Others#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batochar.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-228"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 1 を引いた値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-228"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-229"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-229"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-230"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-230"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToDouble(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As ReadOnlySpan(Of Byte)) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToDouble : ReadOnlySpan&lt;byte&gt; -&gt; double" Usage="System.BitConverter.ToDouble value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-231">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-231">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-232">読み取り専用のバイト スパンを倍精度浮動小数点の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-232">Converts a read-only byte span into a double-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="68b5e-233">変換されたバイトを表す倍精度浮動小数点の値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-233">A double-precision floating-point value that represents the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-234"><paramref name="value" /> の長さが <see cref="T:System.Double" /> の値の長さを下回っています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-234">The length of <paramref name="value" /> is less than the length of a <see cref="T:System.Double" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (value As Byte(), startIndex As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToDouble : byte[] * int -&gt; double" Usage="System.BitConverter.ToDouble (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-235">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-235">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-236"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-236">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-237">バイト配列内の指定位置にある 8 バイトから変換された倍精度浮動小数点数を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-237">Returns a double-precision floating point number converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-238"><paramref name="startIndex" /> から始まる 8 バイトで構成される倍精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-238">A double precision floating point number formed by eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-239"><xref:System.BitConverter.ToDouble%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 7 から <xref:System.Double> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-239">The <xref:System.BitConverter.ToDouble%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Double> value.</span></span> <span data-ttu-id="68b5e-240">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、<xref:System.BitConverter> クラスのトピックの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-240">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-241">次のコード例では、<xref:System.Byte> 配列の要素を、`ToDouble` メソッドを使用して <xref:System.Double> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-241">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Double> values with the `ToDouble` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batodouble.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.Others#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batodouble.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.Others#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batodouble.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-242"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 7 を引いた値以上で、<paramref name="value" /> の長さから 1 を引いた値以下です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-242"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-243"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-243"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-244"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-244"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt16(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As ReadOnlySpan(Of Byte)) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : ReadOnlySpan&lt;byte&gt; -&gt; int16" Usage="System.BitConverter.ToInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-245">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-245">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-246">読み取り専用のバイト スパンを 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-246">Converts a read-only byte span into a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="68b5e-247">変換されたバイトを表す 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-247">A 16-bit signed integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-248"><paramref name="value" /> の長さは 2 未満です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-248">The length of <paramref name="value" /> is less than 2.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (value As Byte(), startIndex As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : byte[] * int -&gt; int16" Usage="System.BitConverter.ToInt16 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-249">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-249">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-250"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-250">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-251">バイト配列内の指定位置にある 2 バイトから変換された 16 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-251">Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-252"><paramref name="startIndex" /> から始まる 2 バイトで構成される 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-252">A 16-bit signed integer formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-253"><xref:System.BitConverter.ToInt16%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 1 から <xref:System.Int16> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-253">The <xref:System.BitConverter.ToInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to an <xref:System.Int16> value.</span></span> <span data-ttu-id="68b5e-254">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、<xref:System.BitConverter> クラスのトピックの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-254">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-255">次のコード例では、<xref:System.Byte> 配列の要素を、`ToInt16` メソッドを使用して <xref:System.Int16> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-255">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int16> values with the `ToInt16` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint16.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint16.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.SInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint16.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-256"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 1 を引いた値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-256"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-257"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-257"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-258"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-258"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int16)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt32(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="System.BitConverter.ToInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-259">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-259">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-260">読み取り専用のバイト スパンを 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-260">Converts a read-only byte span into a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="68b5e-261">変換されたバイトを表す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-261">A 32-bit signed integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-262"><paramref name="value" /> の長さは 4 未満です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-262">The length of <paramref name="value" /> is less than 4.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (value As Byte(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : byte[] * int -&gt; int" Usage="System.BitConverter.ToInt32 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-263">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-263">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-264"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-264">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-265">バイト配列内の指定位置にある 4 バイトから変換された 32 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-265">Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-266"><paramref name="startIndex" /> から始まる 4 バイトで構成される 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-266">A 32-bit signed integer formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-267"><xref:System.BitConverter.ToInt32%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 3 から <xref:System.Int32> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-267">The <xref:System.BitConverter.ToInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to an <xref:System.Int32> value.</span></span> <span data-ttu-id="68b5e-268">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、「<xref:System.BitConverter>」の「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-268">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-269">次の例では、<xref:System.BitConverter.ToInt32%2A> メソッドを使用して、4バイト配列と8バイト配列の上位4バイトから <xref:System.Int32> の値を作成します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-269">The following example uses the <xref:System.BitConverter.ToInt32%2A> method to create <xref:System.Int32> values from a four-byte array and from the upper four bytes of an eight-byte array.</span></span> <span data-ttu-id="68b5e-270">また、<xref:System.BitConverter.GetBytes%28System.Int32%29> および <xref:System.BitConverter.ToInt32%2A> の各メソッドを使用して、<xref:System.Int32> の値をラウンドトリップします。</span><span class="sxs-lookup"><span data-stu-id="68b5e-270">It also uses the <xref:System.BitConverter.GetBytes%28System.Int32%29> and <xref:System.BitConverter.ToInt32%2A> methods to round-trip an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[System.BitConverter.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.bitconverter.toint32/cs/toint32.cs#1)]
 [!code-vb[System.BitConverter.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.bitconverter.toint32/vb/toint32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-271"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 3 を引いた値以上で、<paramref name="value" /> の長さから 1 を引いた値以下です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-271"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-272"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-272"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-273"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-273"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt64(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As ReadOnlySpan(Of Byte)) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : ReadOnlySpan&lt;byte&gt; -&gt; int64" Usage="System.BitConverter.ToInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-274">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-274">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-275">読み取り専用のバイト スパンを 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-275">Converts a read-only byte span into a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="68b5e-276">変換されたバイトを表す 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-276">A 64-bit signed integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-277"><paramref name="value" /> の長さは 8 未満です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-277">The length of <paramref name="value" /> is less than 8.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (value As Byte(), startIndex As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : byte[] * int -&gt; int64" Usage="System.BitConverter.ToInt64 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-278">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-278">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-279"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-279">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-280">バイト配列内の指定位置にある 8 バイトから変換された 64 ビット符号付き整数を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-280">Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-281"><paramref name="startIndex" /> から始まる 8 バイトで構成される 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-281">A 64-bit signed integer formed by eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-282"><xref:System.BitConverter.ToInt64%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 7 から <xref:System.Int64> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-282">The <xref:System.BitConverter.ToInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.Int64> value.</span></span> <span data-ttu-id="68b5e-283">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、<xref:System.BitConverter> クラスのトピックの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-283">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-284">次のコード例では、<xref:System.Byte> 配列の要素を、`ToInt64` メソッドを使用して <xref:System.Int64> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-284">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Int64> values with the `ToInt64` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CPP/batoint64.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/CS/batoint64.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.SInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.SInts/VB/batoint64.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-285"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 7 を引いた値以上で、<paramref name="value" /> の長さから 1 を引いた値以下です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-285"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-286"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-286"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-287"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-287"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToSingle(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As ReadOnlySpan(Of Byte)) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToSingle : ReadOnlySpan&lt;byte&gt; -&gt; single" Usage="System.BitConverter.ToSingle value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-288">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-288">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-289">読み取り専用のバイト スパンを倍精度浮動小数点の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-289">Converts a read-only byte span into a double-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="68b5e-290">変換されたバイトを表す倍精度浮動小数点の値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-290">A double-precision floating-point value representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-291"><paramref name="value" /> の長さが <see cref="T:System.Double" /> の値の長さを下回っています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-291">The length of <paramref name="value" /> is less than the length of a <see cref="T:System.Double" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (value As Byte(), startIndex As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToSingle : byte[] * int -&gt; single" Usage="System.BitConverter.ToSingle (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-292">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-292">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-293"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-293">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-294">バイト配列内の指定位置にある 4 バイトから変換された単精度浮動小数点数を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-294">Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-295"><paramref name="startIndex" /> から始まる 4 バイトで構成される単精度浮動小数点数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-295">A single-precision floating point number formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-296"><xref:System.BitConverter.ToSingle%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 3 から <xref:System.Single> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-296">The <xref:System.BitConverter.ToSingle%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.Single> value.</span></span> <span data-ttu-id="68b5e-297">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、「<xref:System.BitConverter>」の「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-297">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of <xref:System.BitConverter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-298">次のコード例では、<xref:System.Byte> 配列の要素を、`ToSingle` メソッドを使用して <xref:System.Single> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-298">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.Single> values with the `ToSingle` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CPP/batosingle.cpp#4)]
 [!code-csharp[System.BitConverter.ToXXX.Others#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/CS/batosingle.cs#4)]
 [!code-vb[System.BitConverter.ToXXX.Others#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.Others/VB/batosingle.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-299"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 3 を引いた値以上で、<paramref name="value" /> の長さから 1 を引いた値以下です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-299"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-300"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-300"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-301"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-301"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.Single)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68b5e-302">指定されたバイト配列の各要素の数値をそれと等価な 16 進数文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-302">Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] -&gt; string" Usage="System.BitConverter.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-303">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-303">An array of bytes.</span></span></param>
        <summary><span data-ttu-id="68b5e-304">指定されたバイト配列の各要素の数値をそれと等価な 16 進数文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-304">Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="68b5e-305"><paramref name="value" /> 内の対応する要素を表す 16 進値がハイフンで区切られている文字列 ("7F-2C-4A-00" など)。</span><span class="sxs-lookup"><span data-stu-id="68b5e-305">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-306">`value` のすべての要素が変換されます。</span><span class="sxs-lookup"><span data-stu-id="68b5e-306">All the elements of `value` are converted.</span></span> <span data-ttu-id="68b5e-307"><xref:System.BitConverter.ToString%2A> メソッドによって返される16進数文字列の順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-307">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-308">次のコード例では、<xref:System.Byte> の配列を、`ToString` メソッドで <xref:System.String> オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-308">The following code example converts <xref:System.Byte> arrays to <xref:System.String> objects with the `ToString` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostring.cpp#1)]
 [!code-csharp[System.BitConverter.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostring.cs#1)]
 [!code-vb[System.BitConverter.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-309"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-309"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte(), startIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] * int -&gt; string" Usage="System.BitConverter.ToString (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-310">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-310">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-311"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-311">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-312">指定されたバイト サブ配列の各要素の数値をそれと等価な 16 進数文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-312">Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="68b5e-313"><paramref name="value" /> のサブ配列内の対応する要素を表す 16 進値がハイフンで区切られている文字列 ("7F-2C-4A-00" など)。</span><span class="sxs-lookup"><span data-stu-id="68b5e-313">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-314">配列の位置の要素 `startIndex` から配列の末尾までの要素が変換されます。</span><span class="sxs-lookup"><span data-stu-id="68b5e-314">The elements from array position `startIndex` to the end of the array are converted.</span></span> <span data-ttu-id="68b5e-315"><xref:System.BitConverter.ToString%2A> メソッドによって返される16進数文字列の順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-315">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-316">次のコード例では、指定された `startIndex` で始まる <xref:System.Byte> 配列の部分を、`ToString` メソッドを使用して <xref:System.String> に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-316">The following code example converts the part of a <xref:System.Byte> array starting at the specified `startIndex` to a <xref:System.String> with the `ToString` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]
 [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]
 [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-317"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-317"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-318"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-318"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte[] value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte(), startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] * int * int -&gt; string" Usage="System.BitConverter.ToString (value, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-319">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-319">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-320"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-320">The starting position within <paramref name="value" />.</span></span></param>
        <param name="length"><span data-ttu-id="68b5e-321">変換する <paramref name="value" /> の配列要素の数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-321">The number of array elements in <paramref name="value" /> to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-322">指定されたバイト サブ配列の各要素の数値をそれと等価な 16 進数文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-322">Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.</span></span></summary>
        <returns><span data-ttu-id="68b5e-323"><paramref name="value" /> のサブ配列内の対応する要素を表す 16 進値がハイフンで区切られている文字列 ("7F-2C-4A-00" など)。</span><span class="sxs-lookup"><span data-stu-id="68b5e-323">A string of hexadecimal pairs separated by hyphens, where each pair represents the corresponding element in a subarray of <paramref name="value" />; for example, "7F-2C-4A-00".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-324">配列位置 `startIndex` の `length` 要素が変換されます。</span><span class="sxs-lookup"><span data-stu-id="68b5e-324">The `length` elements from array position `startIndex` are converted.</span></span> <span data-ttu-id="68b5e-325">`length` が0の場合、メソッドは <xref:System.String.Empty?displayProperty=nameWithType>を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-325">If `length` equals zero, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="68b5e-326"><xref:System.BitConverter.ToString%2A> メソッドによって返される16進数文字列の順序は、コンピューターのアーキテクチャがリトルエンディアンであるか、ビッグエンディアンであるかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="68b5e-326">The order of hexadecimal strings returned by the <xref:System.BitConverter.ToString%2A> method depends on whether the computer architecture is little-endian or big-endian.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-327">次の例では、<xref:System.BitConverter.ToString%2A> メソッドを使用して、指定した `startIndex` から、指定した `length` を持つバイト配列の一部を文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-327">The following example uses the <xref:System.BitConverter.ToString%2A> method to convert part of a byte array, starting at the specified `startIndex` and with the specified `length`, to a string.</span></span>  
  
 [!code-cpp[System.BitConverter.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToString/CPP/batostringii.cpp#2)]
 [!code-csharp[System.BitConverter.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToString/CS/batostringii.cs#2)]
 [!code-vb[System.BitConverter.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToString/VB/batostringii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-328"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-328"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-329"><paramref name="startIndex" /> または <paramref name="length" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-329"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>  
  
<span data-ttu-id="68b5e-330">- または -</span><span class="sxs-lookup"><span data-stu-id="68b5e-330">-or-</span></span> 
 <span data-ttu-id="68b5e-331"><paramref name="startIndex" /> が 0 より大きく、<paramref name="value" /> の長さ以上になっています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-331"><paramref name="startIndex" /> is greater than zero and is greater than or equal to the length of <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-332"><paramref name="startIndex" /> と <paramref name="length" /> の組み合わせが、<paramref name="value" /> 内の位置を指定していません。つまり、<paramref name="startIndex" /> パラメーターが、<paramref name="value" /> の長さから <paramref name="length" /> パラメーターの値を減算した値より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="68b5e-332">The combination of <paramref name="startIndex" /> and <paramref name="length" /> does not specify a position within <paramref name="value" />; that is, the <paramref name="startIndex" /> parameter is greater than the length of <paramref name="value" /> minus the <paramref name="length" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt16(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As ReadOnlySpan(Of Byte)) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : ReadOnlySpan&lt;byte&gt; -&gt; uint16" Usage="System.BitConverter.ToUInt16 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-333">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-333">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-334">読み取り専用のバイト スパンを 16 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-334">Converts a read-only byte-span into a 16-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="68b5e-335">変換されたバイトを表す 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-335">An 16-bit unsigned integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-336"><paramref name="value" /> の長さは 2 未満です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-336">The length of <paramref name="value" /> is less than the 2.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (value As Byte(), startIndex As Integer) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : byte[] * int -&gt; uint16" Usage="System.BitConverter.ToUInt16 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-337">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-337">The array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-338"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-338">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-339">バイト配列内の指定位置にある 2 バイトから変換された 16 ビット符号なし整数を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-339">Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-340"><paramref name="startIndex" /> から始まる 2 バイトで構成される 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-340">A 16-bit unsigned integer formed by two bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-341"><xref:System.BitConverter.ToUInt16%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 1 から <xref:System.UInt16> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-341">The <xref:System.BitConverter.ToUInt16%2A> method converts the bytes from index `startIndex` to `startIndex` + 1 to a <xref:System.UInt16> value.</span></span> <span data-ttu-id="68b5e-342">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、<xref:System.BitConverter> クラスのトピックの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-342">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-343">次のコード例では、<xref:System.Byte> 配列の要素を、`ToUInt16` メソッドを使用して <xref:System.UInt16> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-343">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt16> values with the `ToUInt16` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint16.cpp#1)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint16.cs#1)]
 [!code-vb[System.BitConverter.ToXXX.UInts#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint16.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-344"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 1 を引いた値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-344"><paramref name="startIndex" /> equals the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-345"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-345"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-346"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-346"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt16)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt32(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As ReadOnlySpan(Of Byte)) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : ReadOnlySpan&lt;byte&gt; -&gt; uint32" Usage="System.BitConverter.ToUInt32 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-347">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-347">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-348">読み取り専用のバイト スパンを 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-348">Converts a read-only byte span into a 32-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="68b5e-349">変換されたバイトを表す 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-349">A 32-bit unsigned integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-350"><paramref name="value" /> の長さは 4 未満です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-350">The length of <paramref name="value" /> is less than 4.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (value As Byte(), startIndex As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : byte[] * int -&gt; uint32" Usage="System.BitConverter.ToUInt32 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-351">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-351">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-352"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-352">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-353">バイト配列内の指定位置にある 4 バイトから変換された 32 ビット符号なし整数を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-353">Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-354"><paramref name="startIndex" /> から始まる 4 バイトで構成される 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-354">A 32-bit unsigned integer formed by four bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-355"><xref:System.BitConverter.ToUInt32%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 3 から <xref:System.UInt32> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-355">The <xref:System.BitConverter.ToUInt32%2A> method converts the bytes from index `startIndex` to `startIndex` + 3 to a <xref:System.UInt32> value.</span></span> <span data-ttu-id="68b5e-356">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、<xref:System.BitConverter> クラスのトピックの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-356">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-357">次のコード例では、<xref:System.Byte> 配列の要素を、`ToUInt32` メソッドを使用して <xref:System.UInt32> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-357">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt32> values with the `ToUInt32` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint32.cpp#2)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint32.cs#2)]
 [!code-vb[System.BitConverter.ToXXX.UInts#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-358"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 3 を引いた値以上で、<paramref name="value" /> の長さから 1 を引いた値以下です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-358"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 3, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-359"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-359"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-360"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-360"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt32)" />
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (ReadOnlySpan&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt64(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As ReadOnlySpan(Of Byte)) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(ReadOnlySpan&lt;System::Byte&gt; value);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : ReadOnlySpan&lt;byte&gt; -&gt; uint64" Usage="System.BitConverter.ToUInt64 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-361">変換するバイトを含む読み取り専用のスパン。</span><span class="sxs-lookup"><span data-stu-id="68b5e-361">A read-only span containing the bytes to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-362">byte を符号なしの long に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-362">Converts bytes into an unsigned long.</span></span></summary>
        <returns><span data-ttu-id="68b5e-363">変換されたバイトを表す 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-363">A 64-bit unsigned integer representing the converted bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (byte[] value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(unsigned int8[] value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (value As Byte(), startIndex As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(cli::array &lt;System::Byte&gt; ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : byte[] * int -&gt; uint64" Usage="System.BitConverter.ToUInt64 (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="68b5e-364">バイト配列。</span><span class="sxs-lookup"><span data-stu-id="68b5e-364">An array of bytes.</span></span></param>
        <param name="startIndex"><span data-ttu-id="68b5e-365"><paramref name="value" /> 内の開始位置。</span><span class="sxs-lookup"><span data-stu-id="68b5e-365">The starting position within <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="68b5e-366">バイト配列内の指定位置にある 8 バイトから変換された 64 ビット符号なし整数を返します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-366">Returns a 64-bit unsigned integer converted from eight bytes at a specified position in a byte array.</span></span></summary>
        <returns><span data-ttu-id="68b5e-367"><paramref name="startIndex" /> から始まる 8 バイトで構成される 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-367">A 64-bit unsigned integer formed by the eight bytes beginning at <paramref name="startIndex" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68b5e-368"><xref:System.BitConverter.ToUInt64%2A> メソッドは、インデックス `startIndex` のバイトを `startIndex` + 7 から <xref:System.UInt64> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-368">The <xref:System.BitConverter.ToUInt64%2A> method converts the bytes from index `startIndex` to `startIndex` + 7 to a <xref:System.UInt64> value.</span></span> <span data-ttu-id="68b5e-369">配列内のバイトの順序は、コンピューターシステムのアーキテクチャのエンディアンを反映している必要があります。詳細については、<xref:System.BitConverter> クラスのトピックの「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="68b5e-369">The order of bytes in the array must reflect the endianness of the computer system's architecture; for more information, see the Remarks section of the <xref:System.BitConverter> class topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="68b5e-370">次のコード例では、<xref:System.Byte> 配列の要素を、`ToUInt64` メソッドを使用して <xref:System.UInt64> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-370">The following code example converts elements of <xref:System.Byte> arrays to <xref:System.UInt64> values with the `ToUInt64` method.</span></span>  
  
 [!code-cpp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CPP/batouint64.cpp#3)]
 [!code-csharp[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/CS/batouint64.cs#3)]
 [!code-vb[System.BitConverter.ToXXX.UInts#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.BitConverter.ToXXX.UInts/VB/batouint64.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="68b5e-371"><paramref name="startIndex" /> が <paramref name="value" /> の長さから 7 を引いた値以上で、<paramref name="value" /> の長さから 1 を引いた値以下です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-371"><paramref name="startIndex" /> is greater than or equal to the length of <paramref name="value" /> minus 7, and is less than or equal to the length of <paramref name="value" /> minus 1.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="68b5e-372"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-372"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="68b5e-373"><paramref name="startIndex" /> が 0 未満か、<paramref name="value" /> の長さから 1 を引いた値より大きい値です。</span><span class="sxs-lookup"><span data-stu-id="68b5e-373"><paramref name="startIndex" /> is less than zero or greater than the length of <paramref name="value" /> minus 1.</span></span></exception>
        <altmember cref="M:System.BitConverter.GetBytes(System.UInt64)" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, bool value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * bool -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-374">このメソッドから制御が戻るときに、変換されたブール値を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-374">When this method returns, the bytes representing the converted Boolean.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-375">変換するブール値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-375">The Boolean to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-376">ブール値をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-376">Converts a Boolean into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-377">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-377"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, char value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * char -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-378">このメソッドから制御が戻るときに、変換された文字を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-378">When this method returns, the bytes representing the converted character.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-379">変換する文字。</span><span class="sxs-lookup"><span data-stu-id="68b5e-379">The character to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-380">文字をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-380">Converts a character into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-381">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-381"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, double value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * double -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Double" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-382">このメソッドから制御が戻るときに、変換された倍精度浮動小数点の値を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-382">When this method returns, the bytes representing the converted double-precision floating-point value.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-383">変換する倍精度浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-383">The double-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-384">倍精度浮動小数点値をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-384">Converts a double-precision floating-point value into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-385">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-385"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, short value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int16 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-386">このメソッドから制御が戻るときに、変換された 16 ビット符号付き整数を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-386">When this method returns, the bytes representing the converted 16-bit signed integer.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-387">変換する 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-387">The 16-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-388">16 ビット符号付き整数をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-388">Converts a 16-bit signed integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-389">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-389"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, int value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-390">このメソッドから制御が戻るときに、変換された 32 ビット符号付き整数を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-390">When this method returns, the bytes representing the converted 32-bit signed integer.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-391">変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-391">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-392">32 ビット符号付き整数をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-392">Converts a 32-bit signed integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-393">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-393"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, long value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * int64 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-394">このメソッドから制御が戻るときに、変換された 64 ビット符号付き整数を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-394">When this method returns, the bytes representing the converted 64-bit signed integer.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-395">変換する 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-395">The 64-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-396">64 ビット符号付き整数をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-396">Converts a 64-bit signed integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-397">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-397"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, float value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * single -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Single" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-398">このメソッドから制御が戻るときに、変換された倍精度浮動小数点の値を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-398">When this method returns, the bytes representing the converted double-precision floating-point value.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-399">変換する倍精度浮動小数点値。</span><span class="sxs-lookup"><span data-stu-id="68b5e-399">The double-precision floating-point value to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-400">倍精度浮動小数点値をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-400">Converts a double-precision floating-point value into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-401">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-401"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As UShort) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint16 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-402">このメソッドから制御が戻るときに、変換された 16 ビット符号なし整数を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-402">When this method returns, the bytes representing the converted unsigned 16-bit integer.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-403">変換する 16 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-403">The unsigned 16-bit integer to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-404">16 ビット符号なし整数をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-404">Converts an unsigned 16-bit integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-405">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-405"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint32 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-406">このメソッドから制御が戻るときに、変換された 32 ビット符号なし整数を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-406">When this method returns, the bytes representing the converted unsigned 32-bit integer.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-407">変換する 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-407">The unsigned 32-bit integer to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-408">32 ビット符号なし整数をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-408">Converts a 32-bit unsigned integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-409">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-409"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public static bool TryWriteBytes (Span&lt;byte&gt; destination, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.BitConverter.TryWriteBytes(System.Span{System.Byte},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryWriteBytes (destination As Span(Of Byte), value As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryWriteBytes(Span&lt;System::Byte&gt; destination, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member TryWriteBytes : Span&lt;byte&gt; * uint64 -&gt; bool" Usage="System.BitConverter.TryWriteBytes (destination, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.0;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="68b5e-410">このメソッドから制御が戻るときに、変換された 64 ビット符号なし整数を表すバイト。</span><span class="sxs-lookup"><span data-stu-id="68b5e-410">When this method returns, the bytes representing the converted unsigned 64-bit integer.</span></span></param>
        <param name="value"><span data-ttu-id="68b5e-411">変換する 64 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="68b5e-411">The unsigned 64-bit integer to convert.</span></span></param>
        <summary><span data-ttu-id="68b5e-412">64 ビット符号なし整数をバイトのスパンに変換します。</span><span class="sxs-lookup"><span data-stu-id="68b5e-412">Converts an unsigned 64-bit integer into a span of bytes.</span></span></summary>
        <returns><span data-ttu-id="68b5e-413">変換が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="68b5e-413"><see langword="true" /> if the conversion was successful; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
