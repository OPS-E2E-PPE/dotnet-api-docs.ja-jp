<Type Name="EntryPointNotFoundException" FullName="System.EntryPointNotFoundException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d3ef92d5c5f0f7d464daa67216113e2acd80f51" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83528774" /></Metadata><TypeSignature Language="C#" Value="public class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntryPointNotFoundException extends System.TypeLoadException" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.EntryPointNotFoundException" />
  <TypeSignature Language="VB.NET" Value="Public Class EntryPointNotFoundException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntryPointNotFoundException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type EntryPointNotFoundException = class&#xA;    inherit TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit EntryPointNotFoundException extends System.TypeLoadException" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="79bd2-101">開始メソッドが指定されていないことが原因でクラスの読み込みに失敗した場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="79bd2-101">The exception that is thrown when an attempt to load a class fails due to the absence of an entry method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79bd2-102"><xref:System.EntryPointNotFoundException> 例外は、アセンブリのエントリポイントを識別できないために、共通言語ランタイムがアセンブリを読み込むことができない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="79bd2-102">An <xref:System.EntryPointNotFoundException> exception is thrown when the common language runtime is unable to load an assembly because it cannot identify the assembly's entry point.</span></span>  <span data-ttu-id="79bd2-103">この例外は、次の状況でスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="79bd2-103">This exception can be thrown under the following conditions:</span></span>  
  
-   <span data-ttu-id="79bd2-104">共通言語ランタイムは、実行可能アセンブリにアプリケーションのエントリポイント (通常は `Main` メソッド) を見つけることができません。</span><span class="sxs-lookup"><span data-stu-id="79bd2-104">The common language runtime is unable to locate an application entry point (typically a `Main` method) in an executable assembly.</span></span> <span data-ttu-id="79bd2-105">アプリケーションのエントリポイントは、唯一のパラメーターとしてパラメーターまたは文字列の配列を持たない、グローバルメソッドまたは `static` メソッドである必要があります。</span><span class="sxs-lookup"><span data-stu-id="79bd2-105">The application entry point must be a global or `static` method that has either no parameters or a string array as its only parameter.</span></span> <span data-ttu-id="79bd2-106">エントリポイントは `void`を返すことができます。または、<xref:System.Int32> または <xref:System.UInt32> 終了コードを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="79bd2-106">The entry point can return `void`, or it can return an <xref:System.Int32> or <xref:System.UInt32> exit code.</span></span> <span data-ttu-id="79bd2-107">アプリケーションアセンブリで複数のエントリポイントを定義することはできません。</span><span class="sxs-lookup"><span data-stu-id="79bd2-107">An application assembly cannot define more than one entry point.</span></span>  
  
-   <span data-ttu-id="79bd2-108">関数が見つからないため、Windows DLL 内の関数の呼び出しを解決できません。</span><span class="sxs-lookup"><span data-stu-id="79bd2-108">The call to a function in a Windows DLL cannot be resolved because the function cannot be found.</span></span> <span data-ttu-id="79bd2-109">次の例では、User32.dll に `GetMyNumber`という名前の関数が含まれていないため、<xref:System.EntryPointNotFoundException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="79bd2-109">In the following example, an <xref:System.EntryPointNotFoundException> exception is thrown because User32.dll does not include a function named `GetMyNumber`.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/nofunction1.cs#1)]
     [!code-vb[System.EntryPointNotFoundException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/nofunction1.vb#1)]  
  
-   <span data-ttu-id="79bd2-110">メソッドの呼び出しで使用されている名前がアセンブリ内で見つかった名前と一致しないため、Windows DLL 内の関数の呼び出しを解決できません。</span><span class="sxs-lookup"><span data-stu-id="79bd2-110">The call to a function in a Windows DLL cannot be resolved because the name used in the method call does not match a name found in the assembly.</span></span> <span data-ttu-id="79bd2-111">多くの場合、このエラーが発生するのは、<xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> フィールドが暗黙的または明示的に `true`に設定されているためです。呼び出されたメソッドには、1つまたは複数の文字列パラメーターが含まれ、ANSI と Unicode の両方のバージョンが含まれています。メソッドの呼び出しで使用される名前は、この ANSI または Unicode の</span><span class="sxs-lookup"><span data-stu-id="79bd2-111">Frequently, this occurs because the <xref:System.Runtime.InteropServices.DllImportAttribute.ExactSpelling?displayProperty=nameWithType> field is either implicitly or explicitly set to `true`, the called method includes one or more string parameters and has both an ANSI and a Unicode version, and the name used in the method call does not correspond to the name of this ANSI or Unicode version.</span></span> <span data-ttu-id="79bd2-112">次の例では、User32.dll で Windows `MessageBox` 関数を呼び出そうとしています。</span><span class="sxs-lookup"><span data-stu-id="79bd2-112">The following example provides an illustration by attempting to call the Windows `MessageBox` function in User32.dll.</span></span> <span data-ttu-id="79bd2-113">最初のメソッド定義では文字列のマーシャリングに <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> が指定されているため、共通言語では、メソッドの `MessageBox`呼び出しで使用されている名前ではなく、関数のワイド文字バージョンの `MessageBoxW`が検索されます。</span><span class="sxs-lookup"><span data-stu-id="79bd2-113">Because the first method definition specifies <xref:System.Runtime.InteropServices.CharSet.Unicode?displayProperty=nameWithType> for string marshaling, the common language looks for the wide-character version of the function, `MessageBoxW`, instead of the name used in the method call, `MessageBox`.</span></span>  <span data-ttu-id="79bd2-114">2番目のメソッド定義では、`MessageBox` 関数の代わりに `MessageBoxW` を呼び出すことによって、この問題を修正します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-114">The second method definition corrects this problem by calling the `MessageBoxW` instead of the `MessageBox` function.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/badcall1.cs#2)]
     [!code-vb[System.EntryPointNotFoundException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/badcall1.vb#2)]  
  
-   <span data-ttu-id="79bd2-115">ダイナミックリンクライブラリ内の関数を、その装飾名ではなく単純な名前で呼び出そうとしています。</span><span class="sxs-lookup"><span data-stu-id="79bd2-115">You are trying to call a function in a dynamic link library by its simple name rather than its decorated name.</span></span> <span data-ttu-id="79bd2-116">通常、コンパイラC++は DLL 関数の装飾名を生成します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-116">Typically, the C++ compiler generates a decorated name for DLL functions.</span></span> <span data-ttu-id="79bd2-117">たとえば、次C++のコードでは、testdll .dll という名前のライブラリに `Double` という名前の関数が定義されています。</span><span class="sxs-lookup"><span data-stu-id="79bd2-117">For example, the following C++ code defines a function named `Double` in a library named TestDll.dll.</span></span>  
  
     [!code-cpp[System.EntryPointNotFoundException.Class#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cpp/testdll.cpp#6)]  
  
     <span data-ttu-id="79bd2-118">次の例のコードで関数を呼び出そうとすると、`Double` 関数が見つからないため、<xref:System.EntryPointNotFoundException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="79bd2-118">When the code in the following example tries to call the function, an <xref:System.EntryPointNotFoundException> exception is thrown because the `Double` function cannot be found.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle1.cs#7)]
     [!code-vb[System.EntryPointNotFoundException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle1.vb#7)]  
  
     <span data-ttu-id="79bd2-119">ただし、次の例に示すように、関数が装飾名 (この場合は `?Double@@YAHH@Z`) を使用して呼び出された場合、関数呼び出しは成功します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-119">However, if the function is called by using its decorated name (in this case, `?Double@@YAHH@Z`), the function call succeeds, as the following example shows.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/mangle2.cs#8)]
     [!code-vb[System.EntryPointNotFoundException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/mangle2.vb#8)]  
  
     <span data-ttu-id="79bd2-120">Dumpbin などのユーティリティを使用して、DLL によってエクスポートされた関数の装飾名を見つけることができます。</span><span class="sxs-lookup"><span data-stu-id="79bd2-120">You can find the decorated names of functions exported by a DLL by using a utility such as Dumpbin.exe.</span></span>  
  
-   <span data-ttu-id="79bd2-121">マネージアセンブリ内のメソッドをアンマネージダイナミックリンクライブラリと同様に呼び出そうとしています。</span><span class="sxs-lookup"><span data-stu-id="79bd2-121">You are attempting to call a method in a managed assembly as if it were an unmanaged dynamic link library.</span></span> <span data-ttu-id="79bd2-122">これを実際に確認するには、次の例を StringUtilities という名前のアセンブリにコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="79bd2-122">To see this in action, compile the following example to an assembly named StringUtilities.dll.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/stringutilities.cs#3)]
     [!code-vb[System.EntryPointNotFoundException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/stringutilities.vb#3)]  
  
     <span data-ttu-id="79bd2-123">次に、次の例をコンパイルして実行します。この例では、アンマネージコードのように StringUtilities dll ダイナミックリンクライブラリ内の `StringUtilities.SayGoodMorning` メソッドを呼び出そうとしています。</span><span class="sxs-lookup"><span data-stu-id="79bd2-123">Then compile and execute the following example, which attempts to call the `StringUtilities.SayGoodMorning` method in the StringUtilities.dll dynamic link library as if it were unmanaged code.</span></span> <span data-ttu-id="79bd2-124">結果は <xref:System.EntryPointNotFoundException> 例外になります。</span><span class="sxs-lookup"><span data-stu-id="79bd2-124">The result is an <xref:System.EntryPointNotFoundException> exception.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/importassembly1.cs#4)]
     [!code-vb[System.EntryPointNotFoundException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/importassembly1.vb#4)]  
  
     <span data-ttu-id="79bd2-125">例外を排除するには、マネージアセンブリへの参照を追加し、マネージコード内の他のメソッドにアクセスするのと同じように `StringUtilities.SayGoodMorning` メソッドにアクセスします。次の例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="79bd2-125">To eliminate the exception, add a reference to the managed assembly and access the `StringUtilities.SayGoodMorning` method just as you would access any other method in managed code, as the following example does.</span></span>  
  
     [!code-csharp[System.EntryPointNotFoundException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/cs/fiximportassembly1.cs#5)]
     [!code-vb[System.EntryPointNotFoundException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.entrypointnotfoundexception.class/vb/fiximportassembly1.vb#5)]  
  
-   <span data-ttu-id="79bd2-126">COM DLL 内のメソッドを、Windows DLL であるかのように呼び出そうとしています。</span><span class="sxs-lookup"><span data-stu-id="79bd2-126">You are trying to call a method in a COM DLL as if it were a Windows DLL.</span></span> <span data-ttu-id="79bd2-127">COM DLL にアクセスするには、Visual Studio の **[参照の追加]** オプションを選択してプロジェクトへの参照を追加し、**[COM]** タブからタイプライブラリを選択します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-127">To access a COM DLL, select the **Add Reference** option in Visual Studio to add a reference to the project, and then select the type library from the **COM** tab.</span></span>  
  
 <span data-ttu-id="79bd2-128"><xref:System.EntryPointNotFoundException>インスタンスの初期プロパティ値の一覧については、<xref:System.EntryPointNotFoundException.%23ctor%2A>コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="79bd2-128">For a list of initial property values for an instance of <xref:System.EntryPointNotFoundException>, see the <xref:System.EntryPointNotFoundException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="79bd2-129">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="79bd2-129">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="79bd2-130"><see cref="T:System.EntryPointNotFoundException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-130">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79bd2-131"><see cref="T:System.EntryPointNotFoundException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-131">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79bd2-132">このコンストラクターは、"エントリポイントが見つかりませんでした" などのエラーを説明するシステム提供のメッセージに、新しいインスタンスの <xref:System.Exception.Message%2A> プロパティを初期化します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-132">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Entry point was not found."</span></span> <span data-ttu-id="79bd2-133">このメッセージは、システムの現在のカルチャを考慮して指定します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-133">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="79bd2-134">次の表に、<xref:System.EntryPointNotFoundException> のインスタンスに対するプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-134">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="79bd2-135">プロパティ</span><span class="sxs-lookup"><span data-stu-id="79bd2-135">Property</span></span>|<span data-ttu-id="79bd2-136">値</span><span class="sxs-lookup"><span data-stu-id="79bd2-136">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="79bd2-137">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="79bd2-137">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="79bd2-138">ローカライズされたエラー メッセージの文字列です。</span><span class="sxs-lookup"><span data-stu-id="79bd2-138">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="79bd2-139">例外の原因を示すエラー メッセージです。</span><span class="sxs-lookup"><span data-stu-id="79bd2-139">The error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="79bd2-140">指定したエラー メッセージを使用して、<see cref="T:System.EntryPointNotFoundException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-140">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79bd2-141">`message` の内容は、ユーザーが理解できる内容にします。</span><span class="sxs-lookup"><span data-stu-id="79bd2-141">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="79bd2-142">このコンストラクターの呼び出し元は、この文字列が現在のシステム環境向けにローカライズされていることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="79bd2-142">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="79bd2-143">次の表に、<xref:System.EntryPointNotFoundException> のインスタンスに対するプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-143">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="79bd2-144">プロパティ</span><span class="sxs-lookup"><span data-stu-id="79bd2-144">Property</span></span>|<span data-ttu-id="79bd2-145">値</span><span class="sxs-lookup"><span data-stu-id="79bd2-145">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="79bd2-146">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="79bd2-146">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="79bd2-147">エラー メッセージ文字列です。</span><span class="sxs-lookup"><span data-stu-id="79bd2-147">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EntryPointNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EntryPointNotFoundException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="79bd2-148">シリアル化されたオブジェクトのデータを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="79bd2-148">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="79bd2-149">転送元または転送先に関するコンテキスト情報です。</span><span class="sxs-lookup"><span data-stu-id="79bd2-149">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="79bd2-150">シリアル化されたデータを使用して <see cref="T:System.EntryPointNotFoundException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-150">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79bd2-151">このコンストラクターは、シリアル化解除の際に呼び出されて、ストリームで送信された例外オブジェクトを再構成します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-151">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryPointNotFoundException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EntryPointNotFoundException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntryPointNotFoundException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new EntryPointNotFoundException : string * Exception -&gt; EntryPointNotFoundException" Usage="new System.EntryPointNotFoundException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="79bd2-152">例外の原因を示すエラー メッセージです。</span><span class="sxs-lookup"><span data-stu-id="79bd2-152">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="79bd2-153">現在の例外の原因になった例外。</span><span class="sxs-lookup"><span data-stu-id="79bd2-153">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="79bd2-154"><paramref name="inner" /> パラメーターが null 参照 (Visual Basic の場合は <see langword="Nothing" />) でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-154">If the <paramref name="inner" /> parameter is not a null reference (<see langword="Nothing" /> in Visual Basic), the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="79bd2-155">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.EntryPointNotFoundException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-155">Initializes a new instance of the <see cref="T:System.EntryPointNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79bd2-156">前回の例外の直接的な結果としてスローされる例外は、<xref:System.Exception.InnerException%2A> プロパティに前回の例外への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="79bd2-156">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="79bd2-157"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。内部例外値がコンストラクターに渡されなかった場合、<xref:System.Exception.InnerException%2A> プロパティはnull 参照 (Visual Basic の場合は `Nothing`) を返します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-157">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or a null reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="79bd2-158">次の表に、<xref:System.EntryPointNotFoundException> のインスタンスに対するプロパティの初期値を示します。</span><span class="sxs-lookup"><span data-stu-id="79bd2-158">The following table shows the initial property values for an instance of <xref:System.EntryPointNotFoundException>.</span></span>  
  
|<span data-ttu-id="79bd2-159">プロパティ</span><span class="sxs-lookup"><span data-stu-id="79bd2-159">Property</span></span>|<span data-ttu-id="79bd2-160">値</span><span class="sxs-lookup"><span data-stu-id="79bd2-160">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="79bd2-161">内部例外の参照です。</span><span class="sxs-lookup"><span data-stu-id="79bd2-161">The inner exception reference.</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="79bd2-162">エラー メッセージ文字列です。</span><span class="sxs-lookup"><span data-stu-id="79bd2-162">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="79bd2-163">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="79bd2-163">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
