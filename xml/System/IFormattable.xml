<Type Name="IFormattable" FullName="System.IFormattable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d4ae89c72b5a41371e0e3591beb8e3537cb0d2a6" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172805" /></Metadata><TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFormattable" />
  <TypeSignature Language="F#" Value="type IFormattable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="515c1-101">オブジェクトの値を文字列形式で書式設定する機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="515c1-101">Provides functionality to format the value of an object into a string representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515c1-102"><xref:System.IFormattable> インターフェイスは、書式指定文字列と書式プロバイダーに基づいて、オブジェクトを文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="515c1-102">The <xref:System.IFormattable> interface converts an object to its string representation based on a format string and a format provider.</span></span>  
  
 <span data-ttu-id="515c1-103">書式指定文字列は、通常、オブジェクトの全般的な外観を定義します。</span><span class="sxs-lookup"><span data-stu-id="515c1-103">A format string typically defines the general appearance of an object.</span></span> <span data-ttu-id="515c1-104">たとえば、.NET Framework では次のことがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="515c1-104">For example, the .NET Framework supports the following:</span></span>  
  
-   <span data-ttu-id="515c1-105">列挙値の書式を設定するための標準書式指定文字列 (「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="515c1-105">Standard format strings for formatting enumeration values (see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="515c1-106">数値の書式設定に使用する標準およびカスタムの書式指定文字列 (「[標準の数値書式指定](~/docs/standard/base-types/standard-numeric-format-strings.md)文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="515c1-106">Standard and custom format strings for formatting numeric values (see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="515c1-107">日付と時刻の値を書式設定するための標準およびカスタムの書式指定文字列 (「[標準の日付と時刻の書式指定](~/docs/standard/base-types/standard-date-and-time-format-strings.md)文字列」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照)。</span><span class="sxs-lookup"><span data-stu-id="515c1-107">Standard and custom format strings for formatting date and time values (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span>  
  
-   <span data-ttu-id="515c1-108">時間間隔を書式設定するための標準およびカスタムの書式指定文字列 (「[標準の Timespan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="515c1-108">Standard and custom format strings for formatting time intervals (see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md)).</span></span>  
  
 <span data-ttu-id="515c1-109">独自の書式指定文字列を定義して、アプリケーション定義型の書式設定をサポートすることもできます。</span><span class="sxs-lookup"><span data-stu-id="515c1-109">You can also define your own format strings to support formatting of your application-defined types.</span></span>  
  
 <span data-ttu-id="515c1-110">書式プロバイダーは、オブジェクトを文字列形式に変換するときに使用するシンボルを定義する書式設定オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="515c1-110">A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation.</span></span> <span data-ttu-id="515c1-111">たとえば、数値を通貨値に変換すると、書式プロバイダーによって、結果文字列に表示される通貨記号が定義されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-111">For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string.</span></span> <span data-ttu-id="515c1-112">.NET Framework は、次の3つの書式プロバイダーを定義します。</span><span class="sxs-lookup"><span data-stu-id="515c1-112">The .NET Framework defines three format providers:</span></span>  
  
-   <span data-ttu-id="515c1-113"><xref:System.Globalization.CultureInfo?displayProperty=nameWithType> クラス。数値の書式設定に使用する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返すか、日付と時刻の値を書式設定するための <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="515c1-113">The <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> class, which returns either a <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values, or a <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.</span></span>  
  
-   <span data-ttu-id="515c1-114"><xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> クラス。数値を書式設定するために、それ自体のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="515c1-114">The <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> class, which returns an instance of itself for formatting numeric values.</span></span>  
  
-   <span data-ttu-id="515c1-115"><xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> クラス。日付と時刻の値を書式設定するために自身のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="515c1-115">The <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType> class, which returns an instance of itself for formatting date and time values.</span></span>  
  
 <span data-ttu-id="515c1-116">また、独自のカスタム書式プロバイダーを定義して、書式設定で使用されるカルチャ固有の情報、職業に固有の情報、または業界固有の情報を提供することもできます。</span><span class="sxs-lookup"><span data-stu-id="515c1-116">In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting.</span></span> <span data-ttu-id="515c1-117">カスタム書式プロバイダーを使用したカスタム書式設定の実装の詳細については、「<xref:System.ICustomFormatter>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="515c1-117">For more information about implementing custom formatting by using a custom format provider, see <xref:System.ICustomFormatter>.</span></span>  
  
 <span data-ttu-id="515c1-118"><xref:System.IFormattable> インターフェイスは、実装する型の書式指定サービスを提供する単一のメソッド <xref:System.IFormattable.ToString%2A>を定義します。</span><span class="sxs-lookup"><span data-stu-id="515c1-118">The <xref:System.IFormattable> interface defines a single method, <xref:System.IFormattable.ToString%2A>, that supplies formatting services for the implementing type.</span></span> <span data-ttu-id="515c1-119"><xref:System.IFormattable.ToString%2A> メソッドは、直接呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="515c1-119">The <xref:System.IFormattable.ToString%2A> method can be called directly.</span></span> <span data-ttu-id="515c1-120">さらに、<xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> および <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドによって、および .NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用するメソッドによって自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-120">In addition, it is called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods, and by methods that use the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) in the .NET Framework.</span></span> <span data-ttu-id="515c1-121">そのような方法には、<xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>、<xref:System.String.Format%2A?displayProperty=nameWithType>、<xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>などがあります。</span><span class="sxs-lookup"><span data-stu-id="515c1-121">Such methods include <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, <xref:System.String.Format%2A?displayProperty=nameWithType>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=nameWithType>, among others.</span></span> <span data-ttu-id="515c1-122"><xref:System.IFormattable.ToString%2A> メソッドは、メソッドの書式指定文字列の各書式指定項目に対して呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-122">The <xref:System.IFormattable.ToString%2A> method is called for each format item in the method's format string.</span></span>  
  
 <span data-ttu-id="515c1-123"><xref:System.IFormattable> インターフェイスは、基本データ型によって実装されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-123">The <xref:System.IFormattable> interface is implemented by the base data types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="515c1-124">次の例では、 `Temperature` インターフェイスを実装する <xref:System.IFormattable> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="515c1-124">The following example defines a `Temperature` class that implements the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="515c1-125">クラスは、"G" および "C" という4つの書式指定子をサポートしています。これは、気温が摂氏で表示されることを示します。"F"。気温が華氏で表示されることを示します。"K" は、気温がケルビンで表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="515c1-125">The class supports four format specifiers: "G" and "C", which indicate that the temperature is to be displayed in Celsius; "F", which indicates that the temperature is to be displayed in Fahrenheit; and "K", which indicates that the temperature is to be displayed in Kelvin.</span></span> <span data-ttu-id="515c1-126">さらに、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> の実装では、`null` または空の書式指定文字列を処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="515c1-126">In addition, the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation also can handle a format string that is `null` or empty.</span></span> <span data-ttu-id="515c1-127">`Temperature` クラスによって定義される他の2つの `ToString` メソッドは、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> の実装への呼び出しをラップするだけです。</span><span class="sxs-lookup"><span data-stu-id="515c1-127">The other two `ToString` methods defined by the `Temperature` class simply wrap a call to the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 <span data-ttu-id="515c1-128">次の例では、<xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> 実装を直接呼び出すか、複合書式指定文字列を使用して呼び出します。</span><span class="sxs-lookup"><span data-stu-id="515c1-128">The following example then calls the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation either directly or by using a composite format string.</span></span>  
  
 [!code-csharp[System.IFormattable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="515c1-129"><see cref="M:System.Object.ToString" /> で提供される文字列の書式設定をより詳細に制御する必要があるクラスは <see cref="T:System.IFormattable" />を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="515c1-129">Classes that require more control over the formatting of strings than <see cref="M:System.Object.ToString" /> provides should implement <see cref="T:System.IFormattable" />.</span></span>  
  
<span data-ttu-id="515c1-130"><see cref="T:System.IFormattable" /> を実装するクラスは、"G" (general) 書式指定子をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="515c1-130">A class that implements <see cref="T:System.IFormattable" /> must support the "G" (general) format specifier.</span></span> <span data-ttu-id="515c1-131">"G" 指定子に加えて、クラスは、サポートする書式指定子のリストを定義できます。</span><span class="sxs-lookup"><span data-stu-id="515c1-131">Besides the "G" specifier, the class can define the list of format specifiers that it supports.</span></span> <span data-ttu-id="515c1-132">また、クラスは、<see langword="null" />された書式指定子を処理できるように準備する必要があります。</span><span class="sxs-lookup"><span data-stu-id="515c1-132">In addition, the class must be prepared to handle a format specifier that is <see langword="null" />.</span></span> <span data-ttu-id="515c1-133">書式設定および書式設定コードの詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="515c1-133">For more information about formatting and formatting codes, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)</span></span></para></block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="515c1-134">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="515c1-134">Formatting Types in .NET</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="abstract member ToString : string * IFormatProvider -&gt; string" Usage="iFormattable.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="515c1-135">使用する書式。</span><span class="sxs-lookup"><span data-stu-id="515c1-135">The format to use.</span></span>  
  
<span data-ttu-id="515c1-136">または</span><span class="sxs-lookup"><span data-stu-id="515c1-136">-or-</span></span> 
<span data-ttu-id="515c1-137"><see langword="Nothing" /> 実装の型に対して定義されている既定の形式を使用するには null 参照 (Visual Basic では<see cref="T:System.IFormattable" />)。</span><span class="sxs-lookup"><span data-stu-id="515c1-137">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="515c1-138">値を書式設定するために使用するプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="515c1-138">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="515c1-139">または</span><span class="sxs-lookup"><span data-stu-id="515c1-139">-or-</span></span> 
<span data-ttu-id="515c1-140">オペレーティング システムの現在のロケール設定から数値形式の情報を取得するための null 参照 (Visual Basic では <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="515c1-140">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="515c1-141">指定された書式を使用して現在のインスタンスの値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="515c1-141">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="515c1-142">指定された書式の現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="515c1-142">The value of the current instance in the specified format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="515c1-143"><xref:System.IFormattable.ToString%2A> メソッドは、値を複数の方法で表現できる文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="515c1-143">The <xref:System.IFormattable.ToString%2A> method converts a value to a string representation that can be expressed in multiple ways.</span></span> <span data-ttu-id="515c1-144">正確な形式は、特定のカルチャ、職業、または業界によって定義された特定の記号や指定された順序によって異なります。</span><span class="sxs-lookup"><span data-stu-id="515c1-144">Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries.</span></span> <span data-ttu-id="515c1-145">メソッドは直接呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="515c1-145">You can call the method directly.</span></span> <span data-ttu-id="515c1-146">また、<xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> および <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドによって自動的に呼び出されるほか、.NET Framework の複合書式指定機能 (<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>、<xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>、<xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>など) を使用するメソッドによっても呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-146">It is also called automatically by the <xref:System.Convert.ToString%28System.Object%29?displayProperty=nameWithType> and <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>, and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="515c1-147">(詳細については、「[複合書式指定](~/docs/standard/base-types/composite-formatting.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="515c1-147">(For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).)</span></span>  
  
 <span data-ttu-id="515c1-148">複合書式指定メソッドは、書式指定文字列の書式指定項目ごとに <xref:System.IFormattable.ToString%2A> メソッドを1回呼び出します。</span><span class="sxs-lookup"><span data-stu-id="515c1-148">Composite formatting methods call the <xref:System.IFormattable.ToString%2A> method once for each format item in a format string.</span></span> <span data-ttu-id="515c1-149">メソッドに渡されるパラメーターは、次のように、書式指定項目の内容および書式指定項目の内容に対して呼び出される特定の書式指定メソッドによって異なります。</span><span class="sxs-lookup"><span data-stu-id="515c1-149">The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:</span></span>  
  
-   <span data-ttu-id="515c1-150">書式指定項目に書式文字列が含まれていない場合 (たとえば、書式項目が単に `{0}`)、<xref:System.String?displayProperty=nameWithType> パラメーターの値として `null` 渡されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-150">If the format item does not include a format string (for example, if the format item is simply `{0}`), it is passed `null` as the value of the <xref:System.String?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="515c1-151">書式指定文字列 (`{0:G}`など) が書式設定項目に含まれている場合は、その書式文字列が <xref:System.String?displayProperty=nameWithType> パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-151">If the format item includes a format string (for example, `{0:G}`), that format string is passed as the value of the <xref:System.String?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="515c1-152">元のメソッド呼び出しに <xref:System.IFormatProvider?displayProperty=nameWithType> パラメーターが含まれていない場合、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> は <xref:System.IFormatProvider?displayProperty=nameWithType> パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-152">If the original method call does not include an <xref:System.IFormatProvider?displayProperty=nameWithType> parameter, <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> is passed as the value of the <xref:System.IFormatProvider?displayProperty=nameWithType> parameter.</span></span>  
  
-   <span data-ttu-id="515c1-153">元のメソッドの呼び出しに <xref:System.IFormatProvider?displayProperty=nameWithType> パラメーターが含まれている場合、メソッドの呼び出しで指定されたプロバイダーは、<xref:System.IFormatProvider?displayProperty=nameWithType> パラメーターの値として渡されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-153">If the original method call includes an <xref:System.IFormatProvider?displayProperty=nameWithType> parameter, the provider that is supplied in the method call is passed as the value of the <xref:System.IFormatProvider?displayProperty=nameWithType> parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="515c1-154">オブジェクトの <xref:System.IFormattable.ToString%2A> 実装は、<xref:System.ICustomFormatter> 形式プロバイダーが渡されない場合、またはカスタム書式プロバイダーの <xref:System.ICustomFormatter.Format%2A> メソッドが `null`を返す場合にのみ、複合書式指定メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="515c1-154">An object's <xref:System.IFormattable.ToString%2A> implementation is called by composite formatting methods only if they are not passed an <xref:System.ICustomFormatter> format provider, or if the <xref:System.ICustomFormatter.Format%2A> method of the custom format provider returns `null`.</span></span>  
  
 <span data-ttu-id="515c1-155">.NET Framework には、次の3つの書式プロバイダーが含まれています。これらはすべて <xref:System.IFormatProvider> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="515c1-155">The .NET Framework includes three format providers, all of which implement the <xref:System.IFormatProvider> interface:</span></span>  
  
-   <span data-ttu-id="515c1-156"><xref:System.Globalization.NumberFormatInfo> には、小数点と桁区切り記号に使用する文字、通貨記号のスペルと位置など、数値の書式設定情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="515c1-156"><xref:System.Globalization.NumberFormatInfo> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.</span></span>  
  
-   <span data-ttu-id="515c1-157"><xref:System.Globalization.DateTimeFormatInfo> は、日付パターンにおける月、日、および年の位置など、日付関連および時間に関連する書式設定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="515c1-157"><xref:System.Globalization.DateTimeFormatInfo> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.</span></span>  
  
-   <span data-ttu-id="515c1-158"><xref:System.Globalization.CultureInfo> には、数値書式情報や日付関連の書式設定情報など、特定のカルチャの既定の書式情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="515c1-158"><xref:System.Globalization.CultureInfo> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.</span></span>  
  
 <span data-ttu-id="515c1-159">また、独自のカスタム書式プロバイダーを定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="515c1-159">In addition, you can define your own custom format provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="515c1-160">次の例は、<xref:System.IFormattable.ToString%2A> メソッドを実装する `Temperature` クラスを示しています。</span><span class="sxs-lookup"><span data-stu-id="515c1-160">The following example demonstrates a `Temperature` class that implements the <xref:System.IFormattable.ToString%2A> method.</span></span> <span data-ttu-id="515c1-161">このコード例は、<xref:System.IFormattable> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="515c1-161">This code example is part of a larger example provided for the <xref:System.IFormattable> class.</span></span>  
  
 [!code-csharp[System.IFormattable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="515c1-162"><see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> メソッドでは、"G" (general) 書式指定子をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="515c1-162">The <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> method must support the "G" (general) format specifier.</span></span> <span data-ttu-id="515c1-163">"G" 指定子に加えて、クラスは、サポートする書式指定子のリストを定義できます。</span><span class="sxs-lookup"><span data-stu-id="515c1-163">Besides the "G" specifier, the class can define the list of format specifiers that it supports.</span></span> <span data-ttu-id="515c1-164">また、クラスは、<see langword="null" />された書式指定子を処理できるように準備する必要があります。</span><span class="sxs-lookup"><span data-stu-id="515c1-164">In addition, the class must be prepared to handle a format specifier that is <see langword="null" />.</span></span> <span data-ttu-id="515c1-165">書式設定と書式設定のコードの詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="515c1-165">For more information about formatting and formatting codes, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span></para></block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
