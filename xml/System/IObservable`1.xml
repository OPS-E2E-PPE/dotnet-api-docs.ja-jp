<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16d6b6bb1263ad440a991cc79fff68af1d546ade" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78684507" /></Metadata><TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObservable(Of Out T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObservable" />
  <TypeSignature Language="F#" Value="type IObservable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="4a128-101">通知情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4a128-101">The object that provides notification information.</span></span></typeparam>
    <summary><span data-ttu-id="4a128-102">プッシュ ベースの通知用プロバイダーを定義します。</span><span class="sxs-lookup"><span data-stu-id="4a128-102">Defines a provider for push-based notification.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a128-103"><xref:System.IObserver%601> インターフェイスと <xref:System.IObservable%601> インターフェイスは、オブザーバーデザインパターンとも呼ばれる、プッシュベースの通知の一般化されたメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="4a128-103">The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</span></span> <span data-ttu-id="4a128-104"><xref:System.IObservable%601> インターフェイスは、通知を送信するクラス (プロバイダー) を表します。<xref:System.IObserver%601> インターフェイスは、それを受け取るクラス (オブザーバー) を表します。</span><span class="sxs-lookup"><span data-stu-id="4a128-104">The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer).</span></span> <span data-ttu-id="4a128-105">`T` は、通知情報を提供するクラスを表します。</span><span class="sxs-lookup"><span data-stu-id="4a128-105">`T` represents the class that provides the notification information.</span></span> <span data-ttu-id="4a128-106">一部のプッシュベースの通知では、<xref:System.IObserver%601> の実装と `T` は同じ型を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="4a128-106">In some push-based notifications, the <xref:System.IObserver%601> implementation and `T` can represent the same type.</span></span>  
  
 <span data-ttu-id="4a128-107">プロバイダーは、オブザーバーがプッシュベースの通知を受け取ることを示す1つのメソッド <xref:System.IObservable%601.Subscribe%2A>を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a128-107">The provider must implement a single method, <xref:System.IObservable%601.Subscribe%2A>, that indicates that an observer wants to receive push-based notifications.</span></span> <span data-ttu-id="4a128-108">メソッドへの呼び出し元は、オブザーバーのインスタンスを渡します。</span><span class="sxs-lookup"><span data-stu-id="4a128-108">Callers to the method pass an instance of the observer.</span></span> <span data-ttu-id="4a128-109">メソッドは、プロバイダーが通知の送信を停止する前に、オブザーバーが通知をキャンセルできるようにする <xref:System.IDisposable> の実装を返します。</span><span class="sxs-lookup"><span data-stu-id="4a128-109">The method returns an <xref:System.IDisposable> implementation that enables observers to cancel notifications at any time before the provider has stopped sending them.</span></span>  
  
 <span data-ttu-id="4a128-110">特定の時点で、指定されたプロバイダーは、0、1、または複数のオブザーバーを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="4a128-110">At any given time, a given provider may have zero, one, or multiple observers.</span></span> <span data-ttu-id="4a128-111">プロバイダーは、オブザーバーへの参照を保存し、通知を送信する前に有効であることを確認します。</span><span class="sxs-lookup"><span data-stu-id="4a128-111">The provider is responsible for storing references to observers and ensuring that they are valid before it sends notifications.</span></span> <span data-ttu-id="4a128-112"><xref:System.IObservable%601> インターフェイスは、オブザーバーの数や通知が送信される順序については想定していません。</span><span class="sxs-lookup"><span data-stu-id="4a128-112">The <xref:System.IObservable%601> interface does not make any assumptions about the number of observers or the order in which notifications are sent.</span></span>  
  
 <span data-ttu-id="4a128-113">プロバイダーは、<xref:System.IObserver%601> メソッドを呼び出すことによって、次の3種類の通知をオブザーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="4a128-113">The provider sends the following three kinds of notifications to the observer by calling <xref:System.IObserver%601> methods:</span></span>  
  
-   <span data-ttu-id="4a128-114">現在のデータ。</span><span class="sxs-lookup"><span data-stu-id="4a128-114">The current data.</span></span> <span data-ttu-id="4a128-115">プロバイダーは、<xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> メソッドを呼び出して、現在のデータ、変更されたデータ、または新しいデータを持つ `T` オブジェクトをオブザーバーに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="4a128-115">The provider can call the <xref:System.IObserver%601.OnNext%2A?displayProperty=nameWithType> method to pass the observer a `T` object that has current data, changed data, or fresh data.</span></span>  
  
-   <span data-ttu-id="4a128-116">エラー状態。</span><span class="sxs-lookup"><span data-stu-id="4a128-116">An error condition.</span></span> <span data-ttu-id="4a128-117">プロバイダーは、<xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> メソッドを呼び出して、何らかのエラー状態が発生したことをオブザーバーに通知できます。</span><span class="sxs-lookup"><span data-stu-id="4a128-117">The provider can call the <xref:System.IObserver%601.OnError%2A?displayProperty=nameWithType> method to notify the observer that some error condition has occurred.</span></span>  
  
-   <span data-ttu-id="4a128-118">それ以上のデータはありません。</span><span class="sxs-lookup"><span data-stu-id="4a128-118">No further data.</span></span> <span data-ttu-id="4a128-119">プロバイダーは、<xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> メソッドを呼び出して、通知の送信が完了したことをオブザーバーに通知できます。</span><span class="sxs-lookup"><span data-stu-id="4a128-119">The provider can call the <xref:System.IObserver%601.OnCompleted%2A?displayProperty=nameWithType> method to notify the observer that it has finished sending notifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a128-120">次の例は、オブザーバーデザインパターンを示しています。</span><span class="sxs-lookup"><span data-stu-id="4a128-120">The following example illustrates the observer design pattern.</span></span> <span data-ttu-id="4a128-121">緯度と経度の情報を含む `Location` クラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="4a128-121">It defines a `Location` class that contains latitude and longitude information.</span></span>  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 <span data-ttu-id="4a128-122">`LocationTracker` クラスは、<xref:System.IObservable%601> の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="4a128-122">The `LocationTracker` class provides the <xref:System.IObservable%601> implementation.</span></span> <span data-ttu-id="4a128-123">`TrackLocation` メソッドには、緯度と経度のデータを格納する null 許容の `Location` オブジェクトが渡されます。</span><span class="sxs-lookup"><span data-stu-id="4a128-123">Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data.</span></span> <span data-ttu-id="4a128-124">`Location` 値が `null`でない場合、`TrackLocation` メソッドは各オブザーバーの <xref:System.IObserver%601.OnNext%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4a128-124">If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 <span data-ttu-id="4a128-125">`Location` 値が `null`の場合、`TrackLocation` メソッドによって `LocationUnknownException` オブジェクトがインスタンス化されます。これを次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="4a128-125">If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationUnknownException` object, which is shown in the following example.</span></span> <span data-ttu-id="4a128-126">次に、各オブザーバーの <xref:System.IObserver%601.OnError%2A> メソッドを呼び出し、`LocationUnknownException` オブジェクトに渡します。</span><span class="sxs-lookup"><span data-stu-id="4a128-126">It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationUnknownException` object.</span></span> <span data-ttu-id="4a128-127">`LocationUnknownException` は <xref:System.Exception>から派生しますが、新しいメンバーは追加されません。</span><span class="sxs-lookup"><span data-stu-id="4a128-127">Note that `LocationUnknownException` derives from <xref:System.Exception>, but does not add any new members.</span></span>  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 <span data-ttu-id="4a128-128">オブザーバーは、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドを呼び出すことによって `TrackLocation` オブジェクトから通知を受信するように登録します。これにより、オブザーバーオブジェクトへの参照がプライベートの汎用 <xref:System.Collections.Generic.List%601> オブジェクトに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="4a128-128">Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="4a128-129">メソッドは `Unsubscriber` オブジェクトを返します。これは、オブザーバーが通知の受信を停止できるようにする <xref:System.IDisposable> の実装です。</span><span class="sxs-lookup"><span data-stu-id="4a128-129">The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications.</span></span> <span data-ttu-id="4a128-130">`LocationTracker` クラスには、`EndTransmission` メソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a128-130">The `LocationTracker` class also includes an `EndTransmission` method.</span></span> <span data-ttu-id="4a128-131">これ以上の場所データが使用できない場合、メソッドは各オブザーバーの <xref:System.IObserver%601.OnCompleted%2A> メソッドを呼び出し、オブザーバーの内部リストをクリアします。</span><span class="sxs-lookup"><span data-stu-id="4a128-131">When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.</span></span>  
  
 <span data-ttu-id="4a128-132">この例では、`LocationReporter` クラスによって <xref:System.IObserver%601> の実装が提供されます。</span><span class="sxs-lookup"><span data-stu-id="4a128-132">In this example, the `LocationReporter` class provides the <xref:System.IObserver%601> implementation.</span></span> <span data-ttu-id="4a128-133">現在の場所に関する情報がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="4a128-133">It displays information about the current location to the console.</span></span> <span data-ttu-id="4a128-134">コンストラクターには `name` パラメーターが含まれています。これにより、`LocationReporter` インスタンスはその文字列の出力で自身を識別できます。</span><span class="sxs-lookup"><span data-stu-id="4a128-134">Its constructor includes a `name` parameter, which enables the `LocationReporter` instance to identify itself in its string output.</span></span> <span data-ttu-id="4a128-135">また、プロバイダーの <xref:System.IObservable%601.Subscribe%2A> メソッドの呼び出しをラップする `Subscribe` メソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a128-135">It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method.</span></span> <span data-ttu-id="4a128-136">これにより、メソッドは、返された <xref:System.IDisposable> 参照をプライベート変数に割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="4a128-136">This allows the method to assign the returned <xref:System.IDisposable> reference to a private variable.</span></span> <span data-ttu-id="4a128-137">`LocationReporter` クラスには、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドによって返されるオブジェクトの <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> メソッドを呼び出す `Unsubscribe` メソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="4a128-137">The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method of the object that is returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4a128-138">次のコードでは、`LocationReporter` クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="4a128-138">The following code defines the `LocationReporter` class.</span></span>  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 <span data-ttu-id="4a128-139">次のコードでは、プロバイダーとオブザーバーをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="4a128-139">The following code then instantiates the provider and the observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/3680171f-f522-453c-aa4a-54f755a78f88"><span data-ttu-id="4a128-140">オブザーバーデザインパターン</span><span class="sxs-lookup"><span data-stu-id="4a128-140">The Observer Design Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Subscribe (observer As IObserver(Of Out T)) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Subscribe(IObserver&lt;T&gt; ^ observer);" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : IObserver&lt;'T&gt; -&gt; IDisposable" Usage="iObservable.Subscribe observer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer"><span data-ttu-id="4a128-141">通知を受け取るオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4a128-141">The object that is to receive notifications.</span></span></param>
        <summary><span data-ttu-id="4a128-142">オブザーバーが通知を受け取ることをプロバイダーに通知します。</span><span class="sxs-lookup"><span data-stu-id="4a128-142">Notifies the provider that an observer is to receive notifications.</span></span></summary>
        <returns><span data-ttu-id="4a128-143">プロバイダーが通知の送信を完了する前に、オブザーバーが通知の受信を停止できるインターフェイスへの参照。</span><span class="sxs-lookup"><span data-stu-id="4a128-143">A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a128-144">プッシュベースの通知にオブザーバーを登録するには、<xref:System.IObservable%601.Subscribe%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="4a128-144">The <xref:System.IObservable%601.Subscribe%2A> method must be called to register an observer for push-based notifications.</span></span> <span data-ttu-id="4a128-145"><xref:System.IObservable%601.Subscribe%2A> メソッドの一般的な実装では、次のことを行います。</span><span class="sxs-lookup"><span data-stu-id="4a128-145">A typical implementation of the <xref:System.IObservable%601.Subscribe%2A> method does the following:</span></span>  
  
-   <span data-ttu-id="4a128-146">このメソッドは、<xref:System.Collections.Generic.List%601> オブジェクトなどのコレクションオブジェクトにオブザーバーへの参照を格納します。</span><span class="sxs-lookup"><span data-stu-id="4a128-146">It stores a reference to the observer in a collection object, such as a <xref:System.Collections.Generic.List%601> object.</span></span>  
  
-   <span data-ttu-id="4a128-147"><xref:System.IDisposable> インターフェイスへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="4a128-147">It returns a reference to an <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="4a128-148">これにより、オブザーバーは、プロバイダーがサブスクリプションの送信を終了し、サブスクライバーの <xref:System.IObserver%601.OnCompleted%2A> メソッドと呼ばれる前に、通知の受信を停止することができます。</span><span class="sxs-lookup"><span data-stu-id="4a128-148">This enables observers to unsubscribe (that is, to stop receiving notifications) before the provider has finished sending them and called the subscriber's <xref:System.IObserver%601.OnCompleted%2A> method.</span></span>  
  
 <span data-ttu-id="4a128-149">任意の時点で、<xref:System.IObservable%601> の実装の特定のインスタンスが、すべてのサブスクリプションを処理し、すべてのサブスクライバーに通知する役割を担います。</span><span class="sxs-lookup"><span data-stu-id="4a128-149">At any given time, a particular instance of an <xref:System.IObservable%601> implementation is responsible for handling all subscriptions and notifying all subscribers.</span></span> <span data-ttu-id="4a128-150">特定の <xref:System.IObservable%601> の実装に関するドキュメントで特に指定されていない限り、オブザーバーは、複数のオブザーバーが受信する通知の順序など、<xref:System.IObservable%601> の実装について想定しません。</span><span class="sxs-lookup"><span data-stu-id="4a128-150">Unless the documentation for a particular <xref:System.IObservable%601> implementation indicates otherwise, observers should make no assumptions about the <xref:System.IObservable%601> implementation, such as the order of notifications that multiple observers will receive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a128-151">次の例は、緯度と経度の情報を報告するアプリケーションの <xref:System.IObservable%601.Subscribe%2A> 方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4a128-151">The following example illustrates the <xref:System.IObservable%601.Subscribe%2A> method for an application that reports latitude and longitude information.</span></span> <span data-ttu-id="4a128-152">すべてのオブザーバーへの参照を格納する <xref:System.Collections.Generic.IList%601> collection オブジェクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="4a128-152">It defines an <xref:System.Collections.Generic.IList%601> collection object that stores references to all observers.</span></span> <span data-ttu-id="4a128-153">また、<xref:System.IDisposable> インターフェイスを実装する `Unsubscriber` という名前のプライベートクラスを返し、サブスクライバーがイベント通知の受信を停止できるようにします。</span><span class="sxs-lookup"><span data-stu-id="4a128-153">It also returns a private class named `Unsubscriber` that implements the <xref:System.IDisposable> interface and enables subscribers to stop receiving event notifications.</span></span>  <span data-ttu-id="4a128-154">完全な例については、<xref:System.IObservable%601> のトピックの「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4a128-154">See the Example section of the <xref:System.IObservable%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>
