<Type Name="NullReferenceException" FullName="System.NullReferenceException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02584712667e8e9974eb2538f5f90ededae83b70" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75040166" /></Metadata><TypeSignature Language="C#" Value="public class NullReferenceException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit NullReferenceException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.NullReferenceException" />
  <TypeSignature Language="VB.NET" Value="Public Class NullReferenceException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class NullReferenceException : SystemException" />
  <TypeSignature Language="F#" Value="type NullReferenceException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4dd80-101">null オブジェクト参照を逆参照しようとした場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="4dd80-101">The exception that is thrown when there is an attempt to dereference a null object reference.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd80-102"><xref:System.NullReferenceException> 例外は、値が `null`型のメンバーにアクセスしようとした場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-102">A <xref:System.NullReferenceException> exception is thrown when you try to access a member on a type whose value is `null`.</span></span> <span data-ttu-id="4dd80-103"><xref:System.NullReferenceException> 例外は通常、開発者エラーを反映し、次のシナリオでスローされます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-103">A <xref:System.NullReferenceException> exception typically reflects developer error and is thrown in the following scenarios:</span></span>  
  
-   <span data-ttu-id="4dd80-104">参照型のインスタンス化を忘れました。</span><span class="sxs-lookup"><span data-stu-id="4dd80-104">You've forgotten to instantiate a reference type.</span></span> <span data-ttu-id="4dd80-105">次の例では、`names` が宣言されていますが、インスタンス化されていません。</span><span class="sxs-lookup"><span data-stu-id="4dd80-105">In the following example, `names` is declared but never instantiated:</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example1.cs#1)]
     [!code-vb[System.NullReferenceException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example1.vb#1)]  
  
     <span data-ttu-id="4dd80-106">コンパイラによっては、このコードをコンパイルするときに警告が発行される場合があります。</span><span class="sxs-lookup"><span data-stu-id="4dd80-106">Some compilers issue a warning when they compile this code.</span></span> <span data-ttu-id="4dd80-107">他のユーザーがエラーを発行すると、コンパイルは失敗します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-107">Others issue an error, and the compilation fails.</span></span> <span data-ttu-id="4dd80-108">この問題に対処するには、オブジェクトの値が `null`されないようにインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-108">To address this problem, instantiate the object so that its value is no longer `null`.</span></span> <span data-ttu-id="4dd80-109">次の例では、型のクラスコンストラクターを呼び出すことによってこれを行います。</span><span class="sxs-lookup"><span data-stu-id="4dd80-109">The following example does this by calling a type's class constructor.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example1a.cs#2)]
     [!code-vb[System.NullReferenceException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example1a.vb#2)]  
  
-   <span data-ttu-id="4dd80-110">配列を初期化する前に、その次元を忘れています。</span><span class="sxs-lookup"><span data-stu-id="4dd80-110">You've forgotten to dimension an array before initializing it.</span></span> <span data-ttu-id="4dd80-111">次の例では、`values` が整数の配列として宣言されていますが、含まれている要素の数が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="4dd80-111">In the following example, `values` is declared to be an integer array, but the number of elements that it contains is never specified.</span></span> <span data-ttu-id="4dd80-112">その値を初期化しようとすると、<xref:System.NullReferenceException> 例外がスローされました。</span><span class="sxs-lookup"><span data-stu-id="4dd80-112">The attempt to initialize its values therefore thrown a  <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array3.cs#10)]
     [!code-vb[System.NullReferenceException.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array3.vb#10)]  
  
     <span data-ttu-id="4dd80-113">次の例に示すように、配列内の要素の数を初期化する前に宣言することにより、例外を除去できます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-113">You can eliminate the exception by declaring the number of elements in the array before initializing it, as the following example does.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array4.cs#11)]
     [!code-vb[System.NullReferenceException.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array4.vb#11)]  
  
     <span data-ttu-id="4dd80-114">配列の宣言と初期化の詳細については、「[配列](~/docs/csharp/programming-guide/arrays/index.md)[と配列」](~/docs/visual-basic/programming-guide/language-features/arrays/index.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4dd80-114">For more information on declaring and initializing arrays, see [Arrays](~/docs/csharp/programming-guide/arrays/index.md) and [Arrays](~/docs/visual-basic/programming-guide/language-features/arrays/index.md).</span></span>  
  
-   <span data-ttu-id="4dd80-115">メソッドから**null**の戻り値を取得し、返された型に対してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-115">You get a **null** return value from a method, and then call a method on the returned type.</span></span> <span data-ttu-id="4dd80-116">これは、ドキュメントエラーの結果である可能性があります。このドキュメントでは、メソッドの呼び出しで `null`を返すことができることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="4dd80-116">This sometimes is the result of a documentation error; the documentation fails to note that a method call can return `null`.</span></span> <span data-ttu-id="4dd80-117">それ以外の場合、コードでは、メソッドが常に**null**以外の値を返すと想定しています。</span><span class="sxs-lookup"><span data-stu-id="4dd80-117">In other cases, your code erroneously assumes that the method will always return a non-**null** value.</span></span>  
  
     <span data-ttu-id="4dd80-118">次の例のコードは、<xref:System.Array.Find%2A?displayProperty=nameWithType> メソッドが、`FirstName` フィールドが検索文字列に一致する `Person` オブジェクトを常に返すことを前提としています。</span><span class="sxs-lookup"><span data-stu-id="4dd80-118">The code in the following example assumes that the <xref:System.Array.Find%2A?displayProperty=nameWithType> method always returns `Person` object whose `FirstName` field matches a search string.</span></span> <span data-ttu-id="4dd80-119">一致するものがないため、ランタイムは <xref:System.NullReferenceException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4dd80-119">Because there is no match, the runtime throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/nullreturn2.cs#4)]
     [!code-vb[System.NullReferenceException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/nullreturn2.vb#4)]  
  
     <span data-ttu-id="4dd80-120">この問題に対処するには、次の例に示すように、メソッドの戻り値をテストして、そのメンバーを呼び出す前にメソッドが `null` されていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-120">To address this problem, test the method's return value to ensure that it is not `null` before calling any of its members, as the following example does.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/nullreturn2a.cs#5)]
     [!code-vb[System.NullReferenceException.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/nullreturn2a.vb#5)]  
  
-   <span data-ttu-id="4dd80-121">式を使用しています (たとえば、メソッドまたはプロパティのリストを連結して値を取得しています)。値が `null`かどうかを確認している場合でも、ランタイムは <xref:System.NullReferenceException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4dd80-121">You're using an expression (for example, you're chaining a list of methods or properties together) to retrieve a value and, although you're checking whether the value is `null`, the runtime still throws a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="4dd80-122">このエラーは、式の中間値の1つが `null`を返すために発生します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-122">This occurs because one of the intermediate values in the expression returns `null`.</span></span> <span data-ttu-id="4dd80-123">その結果、`null` のテストは評価されません。</span><span class="sxs-lookup"><span data-stu-id="4dd80-123">As a result, your test for `null` is never evaluated.</span></span>  
  
     <span data-ttu-id="4dd80-124">次の例では、`Page` オブジェクトによって提供される web ページに関する情報をキャッシュする `Pages` オブジェクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-124">The following example defines a `Pages` object that  caches information about web pages, which are presented by `Page` objects.</span></span> <span data-ttu-id="4dd80-125">`Example.Main` メソッドは、現在の web ページに null 以外のタイトルがあるかどうかを確認し、存在する場合はタイトルを表示します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-125">The `Example.Main` method checks whether the current web page has a non-null title and, if it does, displays the title.</span></span> <span data-ttu-id="4dd80-126">ただし、このチェックにかかわらず、メソッドは <xref:System.NullReferenceException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4dd80-126">Despite this check, however, the method throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Chain1.cs#6)]
     [!code-vb[System.NullReferenceException.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Chain1.vb#6)]  
  
     <span data-ttu-id="4dd80-127">この例外がスローされるのは、ページ情報がキャッシュに格納されていない場合に `pages.CurrentPage` が `null` を返すためです。</span><span class="sxs-lookup"><span data-stu-id="4dd80-127">The exception is thrown because `pages.CurrentPage` returns `null` if no page information is  stored in the cache.</span></span> <span data-ttu-id="4dd80-128">この例外を修正するには、次の例に示すように、現在の `Page` オブジェクトの `Title` プロパティを取得する前に、`CurrentPage` プロパティの値をテストします。</span><span class="sxs-lookup"><span data-stu-id="4dd80-128">This exception can be corrected by testing the value of the `CurrentPage` property before retrieving the current `Page` object's `Title` property, as the following example does:</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Chain2.cs#7)]
     [!code-vb[System.NullReferenceException.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Chain2.vb#7)]  
  
-   <span data-ttu-id="4dd80-129">参照型を含む配列の要素を列挙しているときに、いずれかの要素を処理しようとすると、<xref:System.NullReferenceException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-129">You're enumerating the elements of an array that contains reference types, and your attempt to process one of the elements throws a <xref:System.NullReferenceException> exception.</span></span>  
  
     <span data-ttu-id="4dd80-130">次の例では、文字列配列を定義します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-130">The following example defines a string array.</span></span> <span data-ttu-id="4dd80-131">`for` ステートメントは、文字列を表示する前に、配列内の要素を列挙し、各文字列の <xref:System.String.Trim%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-131">A `for` statement enumerates the elements in the array and calls each string's <xref:System.String.Trim%2A> method before displaying the string.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array1.cs#8)]
     [!code-vb[System.NullReferenceException.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array1.vb#8)]  
  
     <span data-ttu-id="4dd80-132">この例外は、配列の各要素に null 以外の値を含める必要があり、配列要素の値が実際には `null`であると想定している場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-132">This exception occurs if you assume that each element of the array must contain a non-null value, and the value of the array element is in fact `null`.</span></span> <span data-ttu-id="4dd80-133">この例外は、次の例に示すように、要素に対して操作を実行する前に、要素が `null` かどうかをテストすることで削除できます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-133">The exception can be eliminated by testing whether the element is `null` before performing any operation on that element, as the following example shows.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/Array2.cs#9)]
     [!code-vb[System.NullReferenceException.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/Array2.vb#9)]  
  
-   <span data-ttu-id="4dd80-134"><xref:System.NullReferenceException> 例外は、`null`渡されたメソッドによってスローされます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-134">A <xref:System.NullReferenceException> exception is thrown by a method that is passed `null`.</span></span> <span data-ttu-id="4dd80-135">メソッドによっては、渡される引数が検証されます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-135">Some methods validate the arguments that are passed to them.</span></span> <span data-ttu-id="4dd80-136">これらの引数のいずれかが `null`の場合、メソッドは <xref:System.ArgumentNullException?displayProperty=nameWithType> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4dd80-136">If they do and one of the arguments is `null`, the method throws an <xref:System.ArgumentNullException?displayProperty=nameWithType> exception.</span></span> <span data-ttu-id="4dd80-137">それ以外の場合は、<xref:System.NullReferenceException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4dd80-137">Otherwise, it throws a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="4dd80-138">次の例は、このシナリオを示しています。</span><span class="sxs-lookup"><span data-stu-id="4dd80-138">The following example illustrates this scenario.</span></span>  
  
     [!code-csharp[System.NullReferenceException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.nullreferenceexception.class/cs/example2.cs#3)]
     [!code-vb[System.NullReferenceException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.nullreferenceexception.class/vb/example2.vb#3)]  
  
     <span data-ttu-id="4dd80-139">この問題に対処するには、メソッドに渡された引数が `null`ないこと、またはスローされた例外を `try…catch…finally` ブロックで処理していることを確認します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-139">To address this issue, make sure that the argument passed to the method is not `null`, or handle the thrown exception in a `try…catch…finally` block.</span></span> <span data-ttu-id="4dd80-140">詳細については、「 [例外](~/docs/standard/exceptions/index.md)で定義されているインターフェイスのプライベート C++ 固有の実装です。</span><span class="sxs-lookup"><span data-stu-id="4dd80-140">For more information, see [Exceptions](~/docs/standard/exceptions/index.md).</span></span>  
  
 <span data-ttu-id="4dd80-141">次の Microsoft 中間言語 (MSIL) 命令は <xref:System.NullReferenceException>をスローします: `callvirt`、`cpblk`、`cpobj`、`initblk`、`ldelem.<type>`、`ldelema`、`ldfld`、`ldflda`、`ldind.<type>`、`ldlen`、`stelem.<type>`、`stfld`。`stind.<type>``throw``unbox`</span><span class="sxs-lookup"><span data-stu-id="4dd80-141">The following Microsoft intermediate language (MSIL) instructions throw <xref:System.NullReferenceException>: `callvirt`, `cpblk`, `cpobj`, `initblk`, `ldelem.<type>`, `ldelema`, `ldfld`, `ldflda`, `ldind.<type>`, `ldlen`, `stelem.<type>`, `stfld`, `stind.<type>`, `throw`, and `unbox`.</span></span>  
  
 <span data-ttu-id="4dd80-142"><xref:System.NullReferenceException> は、値が0x80004003 の HRESULT COR_E_NULLREFERENCE を使用します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-142"><xref:System.NullReferenceException> uses the HRESULT COR_E_NULLREFERENCE, which has the value 0x80004003.</span></span>  
  
 <span data-ttu-id="4dd80-143"><xref:System.NullReferenceException>インスタンスの初期プロパティ値の一覧については、<xref:System.NullReferenceException.%23ctor%2A>コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="4dd80-143">For a list of initial property values for an instance of <xref:System.NullReferenceException>, see the <xref:System.NullReferenceException.%23ctor%2A> constructors.</span></span>  
  
 <span data-ttu-id="4dd80-144">**リリースコードでの NullReferenceException の処理**</span><span class="sxs-lookup"><span data-stu-id="4dd80-144">**Handling NullReferenceException in release code**</span></span>  
  
 <span data-ttu-id="4dd80-145">通常は、発生後に処理するよりも NullReferenceException を回避することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4dd80-145">It's usually better to avoid a NullReferenceException than to handle it after it occurs.</span></span> <span data-ttu-id="4dd80-146">例外の処理によって、コードは管理や理解が難しくなることがあるうえ、他のバグが生じることも考えられます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-146">Handling an exception can make your code harder to maintain and understand, and can sometimes introduce other bugs.</span></span> <span data-ttu-id="4dd80-147">NullReferenceException は多くの場合、回復不能なエラーです。</span><span class="sxs-lookup"><span data-stu-id="4dd80-147">A NullReferenceException is often a non-recoverable error.</span></span> <span data-ttu-id="4dd80-148">こうした場合、例外によってアプリを停止させることが最良の代替策である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4dd80-148">In these cases, letting the exception stop the app might be the best alternative.</span></span>  
  
 <span data-ttu-id="4dd80-149">ただし、次のように、エラーの処理が有用である状況は多く存在します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-149">However, there are many situations where handling the error can be useful:</span></span>  
  
-   <span data-ttu-id="4dd80-150">アプリは null であるオブジェクトを無視できます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-150">Your app can ignore objects that are null.</span></span> <span data-ttu-id="4dd80-151">たとえば、アプリがデータベース内のレコードを取得して処理する場合、結果として null オブジェクトである、いくつかの不良レコードを無視できる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4dd80-151">For example, if your app retrieves and processes records in a database, you might be able to ignore some number of bad records that result in null objects.</span></span> <span data-ttu-id="4dd80-152">必要な処理は、ログ ファイルまたはアプリケーションの UI に不良データを記録することだけであることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-152">Recording the bad data in a log file or in the application UI might be all you have to do.</span></span>  
  
-   <span data-ttu-id="4dd80-153">例外から回復することができます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-153">You can recover from the exception.</span></span> <span data-ttu-id="4dd80-154">たとえば、参照型を返す web サービスを呼び出すと、接続が失われたり、接続がタイムアウトしたりすると、null が返されることがあります。接続を再確立してから、呼び出しを再試行することができます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-154">For example, a call to a web service that returns a reference type might return null if the connection is lost or the connection times out. You can attempt to reestablish the connection and try the call again.</span></span>  
  
-   <span data-ttu-id="4dd80-155">アプリの状態を有効な状態に復元できます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-155">You can restore the state of your app to a valid state.</span></span> <span data-ttu-id="4dd80-156">たとえば、NullReferenceException をスローするメソッドを呼び出す前に、情報をデータ ストアに保存する必要がある、複数手順のタスクを実行していることがあります。</span><span class="sxs-lookup"><span data-stu-id="4dd80-156">For example, you might be performing a multi-step task that requires you to save information to a data store before you call a method that throws a NullReferenceException.</span></span> <span data-ttu-id="4dd80-157">初期化されていないオブジェクトがデータ レコードを破損する可能性がある場合、アプリを終了する前に過去のデータを削除できます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-157">If the uninitialized object would corrupt the data record, you can remove the previous data before you close the app.</span></span>  
  
-   <span data-ttu-id="4dd80-158">例外の報告が推奨されます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-158">You want to report the exception.</span></span> <span data-ttu-id="4dd80-159">たとえば、エラーがアプリのユーザーによる間違いに起因する場合、メッセージを生成して、ユーザーが正しい情報を入力するのを支援できます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-159">For example, if the error was caused by a mistake from the user of your app, you can generate a message to help him supply the correct information.</span></span> <span data-ttu-id="4dd80-160">問題の解決に役立てるために、エラーに関する情報をログに記録することもできます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-160">You can also log information about the error to help you fix the problem.</span></span> <span data-ttu-id="4dd80-161">ASP.NET などのいくつかのフレームワークには、アプリのクラッシュを防止するために、すべてのエラーをキャプチャする上位レベルの例外ハンドラーが用意されています。このハンドラーを使用した場合、例外をログに記録することが、その例外が発生したことを知る唯一の方法になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4dd80-161">Some frameworks, like ASP.NET, have a high-level exception handler that captures all errors to that the app never crashes; in that case, logging the exception might be the only way you can know that it occurs.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="4dd80-162">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="4dd80-162">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4dd80-163"><see cref="T:System.NullReferenceException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-163">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4dd80-164"><see cref="T:System.NullReferenceException" /> クラスの新しいインスタンスを初期化し、その <see cref="P:System.Exception.Message" /> プロパティの値として、"オブジェクトのインスタンスを指定する必要がある部分に null 値が指定されています" などのシステム提供のエラーを指定します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-164">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class, setting the <see cref="P:System.Exception.Message" /> property of the new instance to a system-supplied message that describes the error, such as "The value 'null' was found where an instance of an object was required."</span></span> <span data-ttu-id="4dd80-165">このメッセージには、現在のシステムのカルチャが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-165">This message takes into account the current system culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd80-166"><xref:System.NullReferenceException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-166">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="4dd80-167">property</span><span class="sxs-lookup"><span data-stu-id="4dd80-167">Property</span></span>|<span data-ttu-id="4dd80-168">[値]</span><span class="sxs-lookup"><span data-stu-id="4dd80-168">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4dd80-169">`null` で初期化します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-169">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4dd80-170">ローカライズされたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="4dd80-170">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : string -&gt; NullReferenceException" Usage="new System.NullReferenceException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4dd80-171">エラーを説明する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="4dd80-171">A <see cref="T:System.String" /> that describes the error.</span></span> <span data-ttu-id="4dd80-172"><paramref name="message" /> の内容は、ユーザーが理解できる内容にします。</span><span class="sxs-lookup"><span data-stu-id="4dd80-172">The content of <paramref name="message" /> is intended to be understood by humans.</span></span> <span data-ttu-id="4dd80-173">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="4dd80-173">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="4dd80-174">指定したエラー メッセージを使用して、<see cref="T:System.NullReferenceException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-174">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd80-175"><xref:System.NullReferenceException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-175">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="4dd80-176">property</span><span class="sxs-lookup"><span data-stu-id="4dd80-176">Property</span></span>|<span data-ttu-id="4dd80-177">[値]</span><span class="sxs-lookup"><span data-stu-id="4dd80-177">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4dd80-178">`null` で初期化します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-178">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4dd80-179">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="4dd80-179">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NullReferenceException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NullReferenceException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; NullReferenceException" Usage="new System.NullReferenceException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="4dd80-180">シリアル化されたオブジェクト データを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4dd80-180">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="4dd80-181">転送元または転送先に関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="4dd80-181">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="4dd80-182">シリアル化したデータを使用して、<see cref="T:System.NullReferenceException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-182">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd80-183">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4dd80-183">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="4dd80-184">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-184">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="4dd80-185">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="4dd80-185">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NullReferenceException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.NullReferenceException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NullReferenceException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new NullReferenceException : string * Exception -&gt; NullReferenceException" Usage="new System.NullReferenceException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4dd80-186">例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="4dd80-186">The error message that explains the reason for the exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="4dd80-187">現在の例外の原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="4dd80-187">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="4dd80-188"><paramref name="innerException" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-188">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="4dd80-189">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.NullReferenceException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-189">Initializes a new instance of the <see cref="T:System.NullReferenceException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4dd80-190">前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="4dd80-190">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="4dd80-191"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-191">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="4dd80-192"><xref:System.NullReferenceException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="4dd80-192">The following table shows the initial property values for an instance of <xref:System.NullReferenceException>.</span></span>  
  
|<span data-ttu-id="4dd80-193">property</span><span class="sxs-lookup"><span data-stu-id="4dd80-193">Property</span></span>|<span data-ttu-id="4dd80-194">[値]</span><span class="sxs-lookup"><span data-stu-id="4dd80-194">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="4dd80-195">内部例外の参照。</span><span class="sxs-lookup"><span data-stu-id="4dd80-195">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="4dd80-196">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="4dd80-196">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="4dd80-197">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="4dd80-197">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
