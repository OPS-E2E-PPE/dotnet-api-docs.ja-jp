<Type Name="TypeAccessException" FullName="System.TypeAccessException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4aa16c3cea179ff24afb4ea3e6ea1f5ac28f5a1" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78680705" /></Metadata><TypeSignature Language="C#" Value="public class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeAccessException extends System.TypeLoadException" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.TypeAccessException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeAccessException&#xA;Inherits TypeLoadException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeAccessException : TypeLoadException" />
  <TypeSignature Language="F#" Value="type TypeAccessException = class&#xA;    inherit TypeLoadException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeAccessException extends System.TypeLoadException" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.TypeLoadException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="070f1-101">メソッドでアクセスできない型を使用しようとした場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="070f1-101">The exception that is thrown when a method attempts to use a type that it does not have access to.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="070f1-102"><xref:System.TypeAccessException> は、メソッドがメソッドからアクセスできない型にオブジェクトをキャストしようとした場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="070f1-102"><xref:System.TypeAccessException> is thrown when a method attempts to cast an object to a type that is not accessible from the method.</span></span> <span data-ttu-id="070f1-103">たとえば、匿名でホストされる動的メソッドは、メソッドが[透過的](~/docs/framework/misc/security-transparent-code.md)であるため、セキュリティクリティカルな型にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="070f1-103">For example, an anonymously hosted dynamic method cannot access a security-critical type because the method is [transparent](~/docs/framework/misc/security-transparent-code.md).</span></span> <span data-ttu-id="070f1-104">メソッドに、オブジェクトをセキュリティクリティカルな型にキャストする <xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType> 命令が含まれている場合、または、その型パラメーターの1つとしてセキュリティクリティカルな型を持つジェネリック型にメソッドが含まれている場合は、<xref:System.TypeAccessException> が JIT コンパイラによってスローされます。</span><span class="sxs-lookup"><span data-stu-id="070f1-104">If the method contains a <xref:System.Reflection.Emit.OpCodes.Castclass?displayProperty=nameWithType> instruction that casts an object to a security-critical type, or to a generic type that has a security-critical type as one of its type parameters, <xref:System.TypeAccessException> is thrown by the JIT compiler.</span></span>  
  
 <span data-ttu-id="070f1-105">同様に、別のアセンブリの内部型を使用する動的メソッドに対して <xref:System.TypeAccessException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="070f1-105">Similarly, <xref:System.TypeAccessException> is thrown for a dynamic method that uses an internal type from another assembly.</span></span> <span data-ttu-id="070f1-106">メソッドは、それを含んでいる型、戻り値の型、またはパラメーターの型のいずれかにアクセスできない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="070f1-106">A method might not have access to its containing type, its return type, or one of its parameter types.</span></span>  
  
 <span data-ttu-id="070f1-107">[!INCLUDE[net_native](~/includes/net-native-md.md)] ツールチェーンを使用してコンパイルされたアプリは、実行時に例外をスローすることがあります。</span><span class="sxs-lookup"><span data-stu-id="070f1-107">Apps compiled by using the [!INCLUDE[net_native](~/includes/net-native-md.md)] tool chain may throw a  exception at runtime.</span></span>  <span data-ttu-id="070f1-108">は <xref:System.TypeAccessException>から派生した内部専用の例外型です。</span><span class="sxs-lookup"><span data-stu-id="070f1-108">is an internal-only exception type derived from <xref:System.TypeAccessException>.</span></span> <span data-ttu-id="070f1-109">例外は、アプリを正常に実行するために必要なメタデータが実行時に存在しないことを示します。</span><span class="sxs-lookup"><span data-stu-id="070f1-109">The exception indicates that metadata needed for the successful execution of an app is not present at runtime.</span></span> <span data-ttu-id="070f1-110">例外を処理するには、`try`/`catch` ブロックを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="070f1-110">You should not use a `try`/`catch` block to handle the exception.</span></span> <span data-ttu-id="070f1-111">代わりに、どのメタデータが不足しているかを判断し、アプリを変更して実行時に確実に存在するようにしてください。</span><span class="sxs-lookup"><span data-stu-id="070f1-111">Instead, you should determine what metadata is missing and modify your app's  to ensure that it is present at runtime.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="070f1-112"><see cref="T:System.TypeAccessException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="070f1-112">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="070f1-113">エラーを説明するシステム提供のメッセージを使用して、<see cref="T:System.TypeAccessException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="070f1-113">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="070f1-114">このコンストラクターは、新しいインスタンスの <xref:System.Exception.Message%2A> プロパティを初期化し、エラーを説明するシステム提供のメッセージ ("型へのアクセスの試行に失敗しました" など) を指定します。</span><span class="sxs-lookup"><span data-stu-id="070f1-114">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Attempt to access the type failed."</span></span> <span data-ttu-id="070f1-115">このメッセージでは、現在のシステムのカルチャが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="070f1-115">This message takes the current system culture into account.</span></span>  
  
 <span data-ttu-id="070f1-116"><xref:System.TypeAccessException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="070f1-116">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="070f1-117">プロパティ</span><span class="sxs-lookup"><span data-stu-id="070f1-117">Property</span></span>|<span data-ttu-id="070f1-118">[値]</span><span class="sxs-lookup"><span data-stu-id="070f1-118">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="070f1-119">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="070f1-119">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="070f1-120">ローカライズされたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="070f1-120">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="070f1-121">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="070f1-121">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : string -&gt; TypeAccessException" Usage="new System.TypeAccessException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="070f1-122">例外を説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="070f1-122">The message that describes the exception.</span></span> <span data-ttu-id="070f1-123">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="070f1-123">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="070f1-124">エラーを説明する指定したメッセージを使用して、<see cref="T:System.TypeAccessException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="070f1-124">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="070f1-125"><xref:System.TypeAccessException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="070f1-125">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="070f1-126">プロパティ</span><span class="sxs-lookup"><span data-stu-id="070f1-126">Property</span></span>|<span data-ttu-id="070f1-127">[値]</span><span class="sxs-lookup"><span data-stu-id="070f1-127">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="070f1-128">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="070f1-128">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="070f1-129">`message` に指定されたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="070f1-129">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="070f1-130">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="070f1-130">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeAccessException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeAccessException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; TypeAccessException" Usage="new System.TypeAccessException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="070f1-131">シリアル化されたデータを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="070f1-131">The object that holds the serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="070f1-132">転送元または転送先に関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="070f1-132">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="070f1-133">シリアル化したデータを使用して、<see cref="T:System.TypeAccessException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="070f1-133">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="070f1-134">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="070f1-134">This constructor is called during deserialization to reconstitute the exception object that was transmitted over a stream.</span></span> <span data-ttu-id="070f1-135">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="070f1-135">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="070f1-136">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="070f1-136">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeAccessException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeAccessException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeAccessException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new TypeAccessException : string * Exception -&gt; TypeAccessException" Usage="new System.TypeAccessException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="070f1-137">例外を説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="070f1-137">The message that describes the exception.</span></span> <span data-ttu-id="070f1-138">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="070f1-138">The caller of this constructor must ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="inner"><span data-ttu-id="070f1-139">現在の例外の原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="070f1-139">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="070f1-140"><paramref name="inner" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="070f1-140">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="070f1-141">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.TypeAccessException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="070f1-141">Initializes a new instance of the <see cref="T:System.TypeAccessException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="070f1-142">前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="070f1-142">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="070f1-143"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="070f1-143">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="070f1-144"><xref:System.TypeAccessException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="070f1-144">The following table shows the initial property values for an instance of <xref:System.TypeAccessException>.</span></span>  
  
|<span data-ttu-id="070f1-145">プロパティ</span><span class="sxs-lookup"><span data-stu-id="070f1-145">Property</span></span>|<span data-ttu-id="070f1-146">[値]</span><span class="sxs-lookup"><span data-stu-id="070f1-146">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="070f1-147">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="070f1-147">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="070f1-148">`message` に指定されたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="070f1-148">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="070f1-149">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="070f1-149">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
