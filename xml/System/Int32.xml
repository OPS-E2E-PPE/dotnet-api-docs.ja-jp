<Type Name="Int32" FullName="System.Int32">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a302793dbeb5ae53e89e688f7729f46f7a53762d" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73399932" /></Metadata><TypeSignature Language="C#" Value="public struct Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;int32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int32" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int32&#xA;Implements IComparable, IComparable(Of Integer), IConvertible, IEquatable(Of Integer), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int32 : IComparable, IComparable&lt;int&gt;, IConvertible, IEquatable&lt;int&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3dd35-101">32 ビット符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-101">Represents a 32-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-102"><xref:System.Int32> は、負の 2147483648 (<xref:System.Int32.MinValue?displayProperty=nameWithType> 定数で表されます) から正の 2147483647 (<xref:System.Int32.MaxValue?displayProperty=nameWithType> 定数で表される) までの値を持つ符号付き整数を表す、変更できない値型です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-102"><xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=nameWithType> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="3dd35-103">.NET Framework には、0 ~ 4294967295 の範囲の値を表す、<xref:System.UInt32>の符号なし32ビット整数値型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-103">The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.</span></span>  
  
## <a name="instantiating-an-int32-value"></a><span data-ttu-id="3dd35-104">Int32 値のインスタンス化</span><span class="sxs-lookup"><span data-stu-id="3dd35-104">Instantiating an Int32 Value</span></span>  
 <span data-ttu-id="3dd35-105"><xref:System.Int32> 値は、いくつかの方法でインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-105">You can instantiate an <xref:System.Int32> value in several ways:</span></span>  
  
-   <span data-ttu-id="3dd35-106"><xref:System.Int32> 変数を宣言し、<xref:System.Int32> データ型の範囲内のリテラル整数値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-106">You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="3dd35-107">次の例では、2つの <xref:System.Int32> 変数を宣言し、その値をこのように代入します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-107">The following example declares two <xref:System.Int32> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]
     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  
  
-   <span data-ttu-id="3dd35-108">範囲が <xref:System.Int32> 型のサブセットである整数型の値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-108">You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type.</span></span> <span data-ttu-id="3dd35-109">これは、のC#キャスト演算子や Visual Basic の変換メソッドを必要としない拡大変換です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]
     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  
  
-   <span data-ttu-id="3dd35-110">範囲が <xref:System.Int32> 型の値を超えている数値型の値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type.</span></span> <span data-ttu-id="3dd35-111">これは縮小変換であるため、のキャスト演算子C#と、`Option Strict` がオンの場合の Visual Basic の変換メソッドが必要です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="3dd35-112">数値が <xref:System.Single>、<xref:System.Double>、または小数部分を含む <xref:System.Decimal> 値の場合、その小数部の処理は、変換を実行するコンパイラによって異なります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="3dd35-113">次の例では、縮小変換を実行して <xref:System.Int32> 変数に複数の数値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]
     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  
  
-   <span data-ttu-id="3dd35-114"><xref:System.Convert> クラスのメソッドを呼び出して、サポートされている任意の型を <xref:System.Int32> の値に変換できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value.</span></span> <span data-ttu-id="3dd35-115">これは、<xref:System.Int32> が <xref:System.IConvertible> インターフェイスをサポートしているために発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-115">This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-116">次の例は、<xref:System.Decimal> 値の配列を <xref:System.Int32> 値に変換する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]
     [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  
  
-   <span data-ttu-id="3dd35-117"><xref:System.Int32.Parse%2A> または <xref:System.Int32.TryParse%2A> メソッドを呼び出して、<xref:System.Int32> 値の文字列形式を <xref:System.Int32>に変換することができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-117">You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>.</span></span> <span data-ttu-id="3dd35-118">文字列には、10進数または16進数のいずれかを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="3dd35-119">次の例は、10進数と16進数の文字列の両方を使用した解析操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]
     [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int32-values"></a><span data-ttu-id="3dd35-120">Int32 値に対する操作の実行</span><span class="sxs-lookup"><span data-stu-id="3dd35-120">Performing Operations on Int32 Values</span></span>  
 <span data-ttu-id="3dd35-121"><xref:System.Int32> 型は、加算、減算、除算、乗算、否定、単項否定などの標準的な数値演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-121">The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="3dd35-122">他の整数型と同様に、<xref:System.Int32> 型では、ビットごとの `AND`、`OR`、`XOR`、左シフト、右シフト演算子もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-122">Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="3dd35-123">標準の数値演算子を使用して2つの <xref:System.Int32> 値を比較することも、<xref:System.Int32.CompareTo%2A> または <xref:System.Int32.Equals%2A> メソッドを呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-123">You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="3dd35-124">また、<xref:System.Math> クラスのメンバーを呼び出して、数値の絶対値を取得したり、整数の除算から商と剰余を計算したり、2の最大値または最小値を決定したりするなど、さまざまな数値演算を実行することもできます。整数。数値の符号を取得し、数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int32-as-a-string"></a><span data-ttu-id="3dd35-125">Int32 を文字列として表す</span><span class="sxs-lookup"><span data-stu-id="3dd35-125">Representing an Int32 as a String</span></span>  
 <span data-ttu-id="3dd35-126"><xref:System.Int32> 型は、標準およびカスタムの数値書式指定文字列を完全にサポートします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-126">The <xref:System.Int32> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="3dd35-127">(詳細については、「[書式設定型](~/docs/standard/base-types/formatting-types.md)」、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」、および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="3dd35-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="3dd35-128"><xref:System.Int32> 値を、先行ゼロを含まない整数文字列として書式設定するには、パラメーターなしの <xref:System.Int32.ToString> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-128">To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="3dd35-129">"D" 書式指定子を使用すると、指定した数の先行ゼロを文字列形式で含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="3dd35-130">"N" 書式指定子を使用すると、桁区切り記号を含めたり、数値の文字列形式で表示する小数点以下の桁数を指定したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="3dd35-131">"X" 書式指定子を使用すると、<xref:System.Int32> 値を16進数文字列として表すことができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-131">By using the "X" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string.</span></span> <span data-ttu-id="3dd35-132">次の例では、これらの4つの方法で <xref:System.Int32> 値の配列の要素の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-132">The following example formats the elements in an array of <xref:System.Int32> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]
 [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]  
  
 <span data-ttu-id="3dd35-133">また、<xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> メソッドを呼び出し、メソッドの2番目のパラメーターとして base を指定することによって、<xref:System.Int32> 値をバイナリ、8進数、10進数、または16進数の文字列として書式設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-133">You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="3dd35-134">次の例では、このメソッドを呼び出して、整数値の配列のバイナリ、8進数、および16進数表現を表示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]
 [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="3dd35-135">10進数以外の32ビット整数値の使用</span><span class="sxs-lookup"><span data-stu-id="3dd35-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="3dd35-136">個々の整数を10進値として使用するだけでなく、整数値を使用してビットごとの演算を実行したり、整数値のバイナリまたは16進表現を使用したりすることもできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-136">In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.</span></span> <span data-ttu-id="3dd35-137"><xref:System.Int32> 値は31ビットで表され、30秒のビットは符号ビットとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-137"><xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit.</span></span> <span data-ttu-id="3dd35-138">正の値は、符号と絶対値表現を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="3dd35-139">負の値は、2の補数表現に含まれています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="3dd35-140">これは、<xref:System.Int32> 値に対してビットごとの演算を実行する場合や、個々のビットを操作する場合に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits.</span></span> <span data-ttu-id="3dd35-141">数値、ブール値、または比較演算を任意の2つの非10進値に対して実行するには、両方の値が同じ表現を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="3dd35-142">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="3dd35-142">All members of this type are thread safe.</span></span> <span data-ttu-id="3dd35-143">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="3dd35-144">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt32" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="3dd35-145">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="3dd35-145">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="3dd35-146">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3dd35-146">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3dd35-147">指定したオブジェクトまたは <see cref="T:System.Int32" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-147">Compares this instance to a specified object or <see cref="T:System.Int32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(int value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int -&gt; int&#xA;override this.CompareTo : int -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3dd35-148">比較対象の整数。</span><span class="sxs-lookup"><span data-stu-id="3dd35-148">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="3dd35-149">指定した 32 ビット符号付き整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-149">Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="3dd35-150">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-150">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="3dd35-151">戻り値</span><span class="sxs-lookup"><span data-stu-id="3dd35-151">Return Value</span></span> 
 </term><description> <span data-ttu-id="3dd35-152">説明</span><span class="sxs-lookup"><span data-stu-id="3dd35-152">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="3dd35-153">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="3dd35-153">Less than zero</span></span> 
 </term><description> <span data-ttu-id="3dd35-154">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-154">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="3dd35-155">0</span><span class="sxs-lookup"><span data-stu-id="3dd35-155">Zero</span></span> 
 </term><description> <span data-ttu-id="3dd35-156">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-156">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="3dd35-157">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="3dd35-157">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="3dd35-158">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-158">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-159">このメソッドは、<xref:System.IComparable%601?displayProperty=nameWithType> インターフェイスを実装し、`value` パラメーターをオブジェクトに変換する必要がないため、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-159">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="3dd35-160">プログラミング言語によっては、パラメーターの型がインスタンスの型よりも少ない (幅が狭い) <xref:System.Int32.CompareTo%2A> メソッドをコーディングすることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-160">Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="3dd35-161">これが可能なのは、一部のプログラミング言語では、インスタンスと同数のビットを持つ型として、パラメーターを表す暗黙的な拡大変換が実行されるためです。</span><span class="sxs-lookup"><span data-stu-id="3dd35-161">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="3dd35-162">たとえば、インスタンスの型が <xref:System.Int32> で、パラメーターの型が <xref:System.Byte>であるとします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-162">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="3dd35-163">Microsoft C#コンパイラは、パラメーターの値を <xref:System.Int32>として表す命令を生成し、<xref:System.Int32> インスタンスと <xref:System.Int32> パラメーター表現の値を比較する <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> メソッドを生成します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-163">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="3dd35-164">プログラミング言語のドキュメントを参照して、コンパイラが数値型の暗黙的な拡大変換を実行するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-164">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-165"><xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-165">The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3dd35-166">4つの異なる比較のために、メソッドによって返される値を表示するだけでなく、戻り値をカスタム `Comparison` 列挙体のメンバーに変換し、その値にも表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-166">In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.</span></span>  
  
 [!code-csharp[System.Int32.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs#1)]
 [!code-vb[System.Int32.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3dd35-167">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3dd35-167">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3dd35-168">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-168">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="3dd35-169">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-169">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="3dd35-170">戻り値</span><span class="sxs-lookup"><span data-stu-id="3dd35-170">Return Value</span></span> 
 </term><description> <span data-ttu-id="3dd35-171">説明</span><span class="sxs-lookup"><span data-stu-id="3dd35-171">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="3dd35-172">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="3dd35-172">Less than zero</span></span> 
 </term><description> <span data-ttu-id="3dd35-173">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-173">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="3dd35-174">0</span><span class="sxs-lookup"><span data-stu-id="3dd35-174">Zero</span></span> 
 </term><description> <span data-ttu-id="3dd35-175">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-175">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="3dd35-176">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="3dd35-176">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="3dd35-177">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-177">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="3dd35-178">- または -</span><span class="sxs-lookup"><span data-stu-id="3dd35-178">-or-</span></span> 
 <span data-ttu-id="3dd35-179"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-179"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-180"><xref:System.Int32>のインスタンスは、その値に関係なく、`null`よりも大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-180">Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="3dd35-181">`value` は `null` または <xref:System.Int32>のインスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-181">`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3dd35-182"><paramref name="value" /> が <see cref="T:System.Int32" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-182"><paramref name="value" /> is not an <see cref="T:System.Int32" />.</span></span></exception>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Int32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3dd35-183">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int32" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-183">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (int obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(int obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3dd35-184">このインスタンスと比較する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-184">An <see cref="T:System.Int32" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="3dd35-185">このインスタンスが指定した <see cref="T:System.Int32" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-185">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int32" /> value.</span></span></summary>
        <returns><span data-ttu-id="3dd35-186"><see langword="true" /> の値がこのインスタンスと同じ場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3dd35-186"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-187">このメソッドは <xref:System.IEquatable%601?displayProperty=nameWithType> インターフェイスを実装し、`obj` パラメーターをオブジェクトに変換する必要がないため、<xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> よりもわずかにパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-187">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=nameWithType> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="3dd35-188">コンパイラのオーバーロードの解決では、2つの <see cref="M:System.Int32.Equals(System.Int32)" /> メソッドオーバーロードの動作の明らかな違いが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-188">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="3dd35-189"><paramref name="obj" /> 引数と <see cref="T:System.Int32" /> の間の暗黙的な変換が定義されていて、引数が <see cref="T:System.Object" />として型指定されていない場合、コンパイラは暗黙的な変換を実行し、<see cref="M:System.Int32.Equals(System.Int32)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-189">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="3dd35-190">それ以外の場合は、<see cref="M:System.Int32.Equals(System.Object)" /> メソッドを呼び出します。このメソッドは、<paramref name="obj" /> 引数が <see cref="T:System.Int32" /> 値でない場合は常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-190">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="3dd35-191">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-191">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="3dd35-192"><see cref="T:System.Byte" />、<see cref="T:System.Int16" />、<see cref="T:System.SByte" />、および <see cref="T:System.UInt16" /> の値の場合、最初の比較では <see langword="true" /> が返されます。これは、コンパイラが自動的に拡大変換を実行して <see cref="M:System.Int32.Equals(System.Int32)" /> メソッドを呼び出し、2番目の比較はを返すためです <see langword="false" />コンパイラは <see cref="M:System.Int32.Equals(System.Object)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-192">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="3dd35-193">[! code-csharp[# 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)][! code-vb system.string[# 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="3dd35-193">[!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3dd35-194">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-194">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="3dd35-195">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-195">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="3dd35-196"><see langword="true" /> が <paramref name="obj" /> のインスタンスで、このインスタンスの値に等しい場合は <see cref="T:System.Int32" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3dd35-196"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3dd35-197">次の例では、`Int32`のコンテキストで `Equals` を使用し、2つの `int` 値を比較し、同じ数値を表す場合は `true` を返し、そうでない場合は `false` します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-197">The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp#1)]
 [!code-csharp[Int32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs#1)]
 [!code-vb[Int32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="3dd35-198">コンパイラのオーバーロードの解決では、2つの <see cref="M:System.Int32.Equals(System.Int32)" /> メソッドオーバーロードの動作の明らかな違いが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-198">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int32.Equals(System.Int32)" /> method overloads.</span></span> <span data-ttu-id="3dd35-199"><paramref name="obj" /> 引数と <see cref="T:System.Int32" /> の間の暗黙的な変換が定義されていて、引数が <see cref="T:System.Object" />として型指定されていない場合、コンパイラは暗黙的な変換を実行し、<see cref="M:System.Int32.Equals(System.Int32)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-199">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int32.Equals(System.Int32)" /> method.</span></span> <span data-ttu-id="3dd35-200">それ以外の場合は、<see cref="M:System.Int32.Equals(System.Object)" /> メソッドを呼び出します。このメソッドは、<paramref name="obj" /> 引数が <see cref="T:System.Int32" /> 値でない場合は常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-200">Otherwise, they call the <see cref="M:System.Int32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int32" /> value.</span></span> <span data-ttu-id="3dd35-201">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-201">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="3dd35-202"><see cref="T:System.Byte" />、<see cref="T:System.Int16" />、<see cref="T:System.SByte" />、および <see cref="T:System.UInt16" /> の値の場合、最初の比較では <see langword="true" /> が返されます。これは、コンパイラが自動的に拡大変換を実行して <see cref="M:System.Int32.Equals(System.Int32)" /> メソッドを呼び出し、2番目の比較はを返すためです <see langword="false" />コンパイラは <see cref="M:System.Int32.Equals(System.Object)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-202">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.SByte" />, and <see cref="T:System.UInt16" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int32.Equals(System.Int32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int32.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="3dd35-203">[! code-csharp[# 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)][! code-vb system.string[# 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="3dd35-203">[!code-csharp[System.Int32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.equals/cs/equalsoverloads2.cs#1)] [!code-vb[System.Int32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.equals/vb/equalsoverloads2.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Int32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dd35-204">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-204">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="3dd35-205">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="3dd35-205">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dd35-206"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-206">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-207">列挙型定数 <see cref="F:System.TypeCode.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="3dd35-207">The enumerated constant, <see cref="F:System.TypeCode.Int32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const int MaxValue = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValue = int32(2147483647)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Integer  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValue = 2147483647;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int" Usage="System.int.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3dd35-208"><see cref="T:System.Int32" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-208">Represents the largest possible value of an <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="3dd35-209">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-209">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-210">この定数の値は2147483647です。つまり、16進数の0x7FFFFFFF です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-210">The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-211">次の例では、<xref:System.Int32.MaxValue> プロパティを使用して、<xref:System.Int32> 値に変換するときに <xref:System.OverflowException> を回避します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-211">The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const int MinValue = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinValue = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:System.Int32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int MinValue = -2147483648;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int" Usage="System.int.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary><span data-ttu-id="3dd35-212"><see cref="T:System.Int32" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-212">Represents the smallest possible value of <see cref="T:System.Int32" />.</span></span> <span data-ttu-id="3dd35-213">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-213">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-214">この定数の値は-2147483648 です。つまり、16進数の0x80000000 です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-214">The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-215">次の例では、<xref:System.Int32.MinValue> プロパティを使用して、<xref:System.Int32> 値に変換するときに <xref:System.OverflowException> を回避します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-215">The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.</span></span>  
  
 [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]
 [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]
 [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3dd35-216">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-216">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int" Usage="System.int.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3dd35-217">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="3dd35-217">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="3dd35-218">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-218">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="3dd35-219"><paramref name="s" /> に格納されている数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="3dd35-219">A 32-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-220">`s` パラメーターには、次の形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-220">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="3dd35-221">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-221">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="3dd35-222">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-222">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="3dd35-223">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-223">The following table describes each element.</span></span>  
  
|<span data-ttu-id="3dd35-224">要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-224">Element</span></span>|<span data-ttu-id="3dd35-225">説明</span><span class="sxs-lookup"><span data-stu-id="3dd35-225">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="3dd35-226">ws</span><span class="sxs-lookup"><span data-stu-id="3dd35-226">ws</span></span>|<span data-ttu-id="3dd35-227">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="3dd35-227">Optional white space.</span></span>|  
|<span data-ttu-id="3dd35-228">sign</span><span class="sxs-lookup"><span data-stu-id="3dd35-228">sign</span></span>|<span data-ttu-id="3dd35-229">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-229">An optional sign.</span></span>|  
|<span data-ttu-id="3dd35-230">数字</span><span class="sxs-lookup"><span data-stu-id="3dd35-230">digits</span></span>|<span data-ttu-id="3dd35-231">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="3dd35-231">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="3dd35-232">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-232">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="3dd35-233">10進数に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-233">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="3dd35-234">`s`で使用できるスタイル要素を明示的に定義するには、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> または <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-234">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3dd35-235">`s` パラメーターは、現在のシステムカルチャに対して初期化された <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-235">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="3dd35-236">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-236">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="3dd35-237">他のカルチャの書式設定情報を使用して文字列を解析するには、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-237">To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-238">次の例では、<xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> メソッドを使用して、文字列値を32ビット符号付き整数値に変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-238">The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3dd35-239">結果の整数値がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-239">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int32.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dd35-240"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-240"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3dd35-241"><paramref name="s" /> は正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-241"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="3dd35-242"><paramref name="s" /> は、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-242"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="3dd35-243">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="3dd35-243">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int" Usage="System.int.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3dd35-244">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="3dd35-244">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="3dd35-245"><paramref name="s" /> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="3dd35-245">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="3dd35-246">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-246">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="3dd35-247">指定したスタイルの数値の文字列形式を、それと等しい 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-247">Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="3dd35-248"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="3dd35-248">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-249">`style` パラメーターは、解析操作を成功させるために、`s` パラメーターで使用できるスタイル要素 (空白、正または負の記号、または桁区切り記号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-249">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="3dd35-250"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-250">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="3dd35-251">`style`の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-251">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="3dd35-252">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-252">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="3dd35-253">または、`style` が <xref:System.Globalization.NumberStyles.AllowHexSpecifier>を含む場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-253">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="3dd35-254">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-254">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="3dd35-255">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-255">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="3dd35-256">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-256">The following table describes each element.</span></span>  
  
|<span data-ttu-id="3dd35-257">要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-257">Element</span></span>|<span data-ttu-id="3dd35-258">説明</span><span class="sxs-lookup"><span data-stu-id="3dd35-258">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="3dd35-259">*ws*</span><span class="sxs-lookup"><span data-stu-id="3dd35-259">*ws*</span></span>|<span data-ttu-id="3dd35-260">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="3dd35-260">Optional white space.</span></span> <span data-ttu-id="3dd35-261">`style` に <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが含まれている場合、`s` の先頭に空白が表示され、`style` に <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合、`s` の最後に表示されることがあります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-261">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="3dd35-262">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-262">A culture-specific currency symbol.</span></span> <span data-ttu-id="3dd35-263">文字列内の位置は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> および <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-263">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="3dd35-264">現在のカルチャの通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-264">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-265">*sign*</span><span class="sxs-lookup"><span data-stu-id="3dd35-265">*sign*</span></span>|<span data-ttu-id="3dd35-266">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-266">An optional sign.</span></span> <span data-ttu-id="3dd35-267"><xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> フラグが `style` に含まれている場合、`s` の先頭に符号が表示されます。また、`style` に <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> フラグが含まれている場合は、`s` の最後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-267">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="3dd35-268"><xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> フラグが `style` 含まれている場合は、`s` でかっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-268">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-269">*digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-269">*digits*</span></span><br /><br /> <span data-ttu-id="3dd35-270">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-270">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="3dd35-271">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-271">*exponential_digits*</span></span>|<span data-ttu-id="3dd35-272">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="3dd35-272">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="3dd35-273">*Fractional_digits*の場合、数字0のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-273">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="3dd35-274">*、*</span><span class="sxs-lookup"><span data-stu-id="3dd35-274">*,*</span></span>|<span data-ttu-id="3dd35-275">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-275">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="3dd35-276">現在のカルチャの桁区切り記号は、`style` に <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-276">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-277">*.*</span><span class="sxs-lookup"><span data-stu-id="3dd35-277">*.*</span></span>|<span data-ttu-id="3dd35-278">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-278">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="3dd35-279">現在のカルチャの小数点の記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-279">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="3dd35-280">解析操作が成功するためには、数字0のみが小数点の数字として表示されます。*fractional_digits*に他の数字が含まれている場合は、<xref:System.OverflowException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-280">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="3dd35-281">*e*</span><span class="sxs-lookup"><span data-stu-id="3dd35-281">*e*</span></span>|<span data-ttu-id="3dd35-282">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-282">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="3dd35-283">`s` パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-283">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-284">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-284">*hexdigits*</span></span>|<span data-ttu-id="3dd35-285">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="3dd35-285">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="3dd35-286">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-286">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="3dd35-287">数字のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-287">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="3dd35-288">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-288">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="3dd35-289">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-289">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="3dd35-290">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="3dd35-290">NumberStyles value</span></span>|<span data-ttu-id="3dd35-291">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-291">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="3dd35-292">*Digits*要素のみ。</span><span class="sxs-lookup"><span data-stu-id="3dd35-292">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="3dd35-293">小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="3dd35-293">The decimal point ( *.*</span></span> <span data-ttu-id="3dd35-294">) と*小数部の数字*の要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-294">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="3dd35-295">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-295">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="3dd35-296">`s`の先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-296">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="3dd35-297">`s`の末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-297">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="3dd35-298">`s`の先頭にある*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-298">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="3dd35-299">`s`の末尾の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-299">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="3dd35-300">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-300">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="3dd35-301">桁区切り記号 ( *,* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-301">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="3dd35-302">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-302">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="3dd35-303">すべて。</span><span class="sxs-lookup"><span data-stu-id="3dd35-303">All.</span></span> <span data-ttu-id="3dd35-304">`s` パラメーターは、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-304">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="3dd35-305">`s`の先頭または末尾の*ws*要素、`s`の先頭にある*記号*、および小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="3dd35-305">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="3dd35-306">表す.</span><span class="sxs-lookup"><span data-stu-id="3dd35-306">) symbol.</span></span> <span data-ttu-id="3dd35-307">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-307">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="3dd35-308">`ws`、`sign`、桁区切り記号 ( *、* )、および小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="3dd35-308">The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="3dd35-309">要素.</span><span class="sxs-lookup"><span data-stu-id="3dd35-309">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="3dd35-310">`s` を除くすべてのスタイルは、16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-310">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="3dd35-311"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-311">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="3dd35-312">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-312">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="3dd35-313">`s` パラメーターと組み合わせることができるフラグは、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-313">The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3dd35-314">(<xref:System.Globalization.NumberStyles> 列挙には、両方の空白フラグを含む複合数値スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>が含まれています)。</span><span class="sxs-lookup"><span data-stu-id="3dd35-314">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="3dd35-315">`s` パラメーターは、現在のシステムカルチャに対して初期化された <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-315">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="3dd35-316">解析操作に使用する書式設定情報を持つカルチャを指定するには、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-316">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-317">次の例では、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> メソッドを使用して、複数の <xref:System.Int32> 値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-317">The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int32> values.</span></span> <span data-ttu-id="3dd35-318">この例の現在のカルチャは en-us です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-318">The current culture for the example is en-US.</span></span>  
  
 [!code-cpp[System.Int32.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dd35-319"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-319"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3dd35-320"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-320"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="3dd35-321">- または -</span><span class="sxs-lookup"><span data-stu-id="3dd35-321">-or-</span></span> 
 <span data-ttu-id="3dd35-322"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-322"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3dd35-323"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-323"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="3dd35-324"><paramref name="s" /> は、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-324"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="3dd35-325">- または -</span><span class="sxs-lookup"><span data-stu-id="3dd35-325">-or-</span></span> 
 <span data-ttu-id="3dd35-326"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-326"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="3dd35-327">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="3dd35-327">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int" Usage="System.int.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3dd35-328">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="3dd35-328">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="3dd35-329"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-329">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3dd35-330">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-330">Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="3dd35-331"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="3dd35-331">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-332"><xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> メソッドのこのオーバーロードは、通常、さまざまな方法で書式設定できるテキストを <xref:System.Int32> の値に変換するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-332">This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value.</span></span> <span data-ttu-id="3dd35-333">たとえば、ユーザーが入力したテキストを HTML テキストボックスに数値に変換するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-333">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="3dd35-334">`s` パラメーターには、次の形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-334">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="3dd35-335">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-335">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="3dd35-336">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-336">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="3dd35-337">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-337">The following table describes each element.</span></span>  
  
|<span data-ttu-id="3dd35-338">要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-338">Element</span></span>|<span data-ttu-id="3dd35-339">説明</span><span class="sxs-lookup"><span data-stu-id="3dd35-339">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="3dd35-340">*ws*</span><span class="sxs-lookup"><span data-stu-id="3dd35-340">*ws*</span></span>|<span data-ttu-id="3dd35-341">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="3dd35-341">Optional white space.</span></span>|  
|<span data-ttu-id="3dd35-342">*sign*</span><span class="sxs-lookup"><span data-stu-id="3dd35-342">*sign*</span></span>|<span data-ttu-id="3dd35-343">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-343">An optional sign.</span></span>|  
|<span data-ttu-id="3dd35-344">*digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-344">*digits*</span></span>|<span data-ttu-id="3dd35-345">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="3dd35-345">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="3dd35-346">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-346">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="3dd35-347">10進数に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-347">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="3dd35-348">`s`で使用できるスタイル要素を明示的に定義するには、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-348">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3dd35-349">`provider` パラメーターは、<xref:System.Globalization.NumberFormatInfo> や <xref:System.Globalization.CultureInfo> オブジェクトなどの <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-349">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="3dd35-350">`provider` パラメーターは、`s`の形式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-350">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="3dd35-351">`provider` が `null`場合は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-351">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-352">次の例は、Web フォームのボタンクリックイベントハンドラーです。</span><span class="sxs-lookup"><span data-stu-id="3dd35-352">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="3dd35-353"><xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> プロパティによって返される配列を使用して、ユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-353">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="3dd35-354">次に、そのロケールに対応する <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-354">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="3dd35-355">その <xref:System.Globalization.CultureInfo> オブジェクトに属する <xref:System.Globalization.NumberFormatInfo> オブジェクトを <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> メソッドに渡して、ユーザーの入力を <xref:System.Int32> 値に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-355">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.</span></span>  
  
 [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]
 [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dd35-356"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-356"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3dd35-357"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-357"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="3dd35-358"><paramref name="s" /> は、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-358"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <altmember cref="Overload:System.Int32.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="3dd35-359">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="3dd35-359">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Integer" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int" Usage="System.int.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3dd35-360">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="3dd35-360">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="3dd35-361"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="3dd35-361">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="3dd35-362">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-362">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="3dd35-363"><paramref name="s" /> の書式設定に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-363">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3dd35-364">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-364">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="3dd35-365"><paramref name="s" /> で指定した数値と等しい 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="3dd35-365">A 32-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-366">`style` パラメーターは、解析操作を成功させるために `s` パラメーターで使用できるスタイル要素 (空白や正符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-366">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="3dd35-367"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-367">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="3dd35-368">`style`の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-368">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="3dd35-369">jax-ws[$]シャープ[数字,] 数字 [. fractional_digist] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-369">[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="3dd35-370">または、`style` が <xref:System.Globalization.NumberStyles.AllowHexSpecifier>を含む場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-370">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="3dd35-371">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-371">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="3dd35-372">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-372">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="3dd35-373">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-373">The following table describes each element.</span></span>  
  
|<span data-ttu-id="3dd35-374">要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-374">Element</span></span>|<span data-ttu-id="3dd35-375">説明</span><span class="sxs-lookup"><span data-stu-id="3dd35-375">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="3dd35-376">*ws*</span><span class="sxs-lookup"><span data-stu-id="3dd35-376">*ws*</span></span>|<span data-ttu-id="3dd35-377">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="3dd35-377">Optional white space.</span></span> <span data-ttu-id="3dd35-378">`style` に <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが含まれている場合、`s` の先頭に空白が表示され、`style` に <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合、`s` の最後に表示されることがあります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-378">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="3dd35-379">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-379">A culture-specific currency symbol.</span></span> <span data-ttu-id="3dd35-380">文字列内の位置は、`provider` パラメーターの <xref:System.IFormatProvider.GetFormat%2A> メソッドによって返される <xref:System.Globalization.NumberFormatInfo> オブジェクトの <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-380">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="3dd35-381">通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-381">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-382">*sign*</span><span class="sxs-lookup"><span data-stu-id="3dd35-382">*sign*</span></span>|<span data-ttu-id="3dd35-383">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-383">An optional sign.</span></span> <span data-ttu-id="3dd35-384"><xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-384">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="3dd35-385"><xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> フラグが `style` 含まれている場合は、`s` でかっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-385">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-386">*digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-386">*digits*</span></span><br /><br /> <span data-ttu-id="3dd35-387">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-387">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="3dd35-388">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-388">*exponential_digits*</span></span>|<span data-ttu-id="3dd35-389">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="3dd35-389">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="3dd35-390">*Fractional_digits*の場合、数字0のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-390">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="3dd35-391">*、*</span><span class="sxs-lookup"><span data-stu-id="3dd35-391">*,*</span></span>|<span data-ttu-id="3dd35-392">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-392">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="3dd35-393">`provider` で指定されたカルチャの桁区切り記号は、`style` に <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-393">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-394">*.*</span><span class="sxs-lookup"><span data-stu-id="3dd35-394">*.*</span></span>|<span data-ttu-id="3dd35-395">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-395">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="3dd35-396">`provider` によって指定されたカルチャの小数点記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-396">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="3dd35-397">解析操作が成功するためには、数字0のみが小数点の数字として表示されます。*fractional_digits*に他の数字が含まれている場合は、<xref:System.OverflowException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-397">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="3dd35-398">*e*</span><span class="sxs-lookup"><span data-stu-id="3dd35-398">*e*</span></span>|<span data-ttu-id="3dd35-399">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-399">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="3dd35-400">`s` パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-400">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-401">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-401">*hexdigits*</span></span>|<span data-ttu-id="3dd35-402">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="3dd35-402">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="3dd35-403">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-403">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="3dd35-404">小数点以下の数字のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> スタイルに対応) は、<xref:System.Int32> 型の範囲内にある場合は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-404">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int32> type.</span></span> <span data-ttu-id="3dd35-405">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-405">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="3dd35-406">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-406">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="3dd35-407">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="3dd35-407">Non-composite NumberStyles values</span></span>|<span data-ttu-id="3dd35-408">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-408">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="3dd35-409">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="3dd35-409">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="3dd35-410">小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="3dd35-410">The decimal point ( *.*</span></span> <span data-ttu-id="3dd35-411">) と*小数部の数字*の要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-411">) and *fractional-digits* elements.</span></span> <span data-ttu-id="3dd35-412">ただし、*小数点以下*の桁数は、1桁以上の0桁で構成されている必要があります。または、<xref:System.OverflowException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-412">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="3dd35-413">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-413">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="3dd35-414">`s` が指数表記の数値を表す場合は、0以外の小数部分を含まない、<xref:System.Int32> データ型の範囲内の整数を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-414">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="3dd35-415">`s`の先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-415">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="3dd35-416">`s`の末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-416">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="3dd35-417">正の符号は、*数字*の前に表示できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-417">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="3dd35-418">正の記号は、*数字*の後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-418">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="3dd35-419">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-419">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="3dd35-420">桁区切り記号 ( *,* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-420">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="3dd35-421">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-421">The *$* element.</span></span>|  
  
 <span data-ttu-id="3dd35-422"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-422">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="3dd35-423">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-423">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="3dd35-424">`style` に存在できる他のフラグは <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="3dd35-424">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3dd35-425">(<xref:System.Globalization.NumberStyles> 列挙体には、2つの空白フラグを含む複合数値スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>があります)。</span><span class="sxs-lookup"><span data-stu-id="3dd35-425">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="3dd35-426">`provider` パラメーターは、<xref:System.Globalization.NumberFormatInfo> や <xref:System.Globalization.CultureInfo> オブジェクトなどの <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-426">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="3dd35-427">`provider` パラメーターは、解析に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-427">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="3dd35-428">`provider` が `null`場合は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-428">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-429">次の例では、さまざまな `style` パラメーターと `provider` パラメーターを使用して、<xref:System.Int32> 値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-429">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values.</span></span> <span data-ttu-id="3dd35-430">また、解析操作で書式情報が使用されているカルチャに応じて、同じ文字列を解釈できるいくつかの方法についても説明します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-430">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-cpp[System.Int32.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int32.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int32.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3dd35-431"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-431"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3dd35-432"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-432"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="3dd35-433">- または -</span><span class="sxs-lookup"><span data-stu-id="3dd35-433">-or-</span></span> 
 <span data-ttu-id="3dd35-434"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-434"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3dd35-435"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-435"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="3dd35-436"><paramref name="s" /> は、<see cref="F:System.Int32.MinValue" /> 未満の数値か、<see cref="F:System.Int32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-436"><paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span>  
  
<span data-ttu-id="3dd35-437">- または -</span><span class="sxs-lookup"><span data-stu-id="3dd35-437">-or-</span></span> 
 <span data-ttu-id="3dd35-438"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-438"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="3dd35-439">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="3dd35-439">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-440">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-440">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-441">このメンバーの説明については、<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-441">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-442">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3dd35-442"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-443">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-443">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-444">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-444">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-445">別の方法として、<xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-445">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-446">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-446">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-447">このメンバーの説明については、<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-447">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-448"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-448">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-449">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-449">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-450">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-450">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-451">別の方法として、<xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-451">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-452">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-452">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-453">このメンバーの説明については、<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-453">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-454"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-454">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-455">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-455">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-456">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-456">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-457">別の方法として、<xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-457">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-458">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-458">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-459">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-459">This conversion is not supported.</span></span> <span data-ttu-id="3dd35-460">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-460">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-461">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-461">This conversion is not supported.</span></span> <span data-ttu-id="3dd35-462">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-462">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3dd35-463">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="3dd35-463">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-464">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-464">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-465">このメンバーの説明については、<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-465">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-466"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-466">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-467">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-467">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-468">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-468">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-469">別の方法として、<xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-469">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-470">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-470">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-471">このメンバーの説明については、<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-471">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-472"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-472">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-473">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-473">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-474">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-474">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-475">別の方法として、<xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-475">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-476">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-476">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-477">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-477">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-478"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-478">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-479">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-479">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-480">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-480">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-481">別の方法として、<xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-481">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-482">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-482">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-483">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-483">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-484">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-484">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-485">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-485">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-486">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-486">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-487">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-487">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-488">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-488">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-489"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-489">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-490">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-490">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-491">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-491">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-492">別の方法として、<xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-492">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-493">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-493">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-494">このメンバーの説明については、<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-494">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-495"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-495">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-496">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-496">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-497">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-497">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-498">別の方法として、<xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-498">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-499">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-499">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-500">このメンバーの説明については、<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-500">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-501"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-501">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-502">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-502">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-503">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-503">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-504">別の方法として、<xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-504">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="3dd35-505">この <see cref="T:System.Int32" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="3dd35-505">The type to which to convert this <see cref="T:System.Int32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="3dd35-506">戻り値の書式に関する情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-506">An object that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="3dd35-507">このメンバーの説明については、<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-507">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-508"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-508">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-509">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-509">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-510">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-510">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-511">別の方法として、代わりに `static` (Visual Basic で`Shared`) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-511">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-512">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-512">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-513">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-513">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-514"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-514">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-515">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-515">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-516">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-516">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-517">別の方法として、<xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-517">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-518">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-518">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-519">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-519">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-520"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-520">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-521">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-521">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-522">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-522">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-523">別の方法として、<xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-523">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-524">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-524">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3dd35-525">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-525">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3dd35-526"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="3dd35-526">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-527">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-527">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3dd35-528">これは、<xref:System.Int32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-528">It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3dd35-529">別の方法として、<xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="3dd35-529">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3dd35-530">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-530">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3dd35-531">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-531">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="3dd35-532">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 の一連の数字から構成される、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="3dd35-532">The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-533"><xref:System.Int32.ToString> メソッドは、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して、<xref:System.Int32> 値を既定値 ("G" または一般) 形式で書式設定します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-533">The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="3dd35-534">別の形式またはカルチャを指定する場合は、次のように <xref:System.Int32.ToString%2A> メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-534">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="3dd35-535">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="3dd35-535">To use format</span></span>|<span data-ttu-id="3dd35-536">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="3dd35-536">For culture</span></span>|<span data-ttu-id="3dd35-537">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="3dd35-537">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="3dd35-538">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-538">Default ("G") format</span></span>|<span data-ttu-id="3dd35-539">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-539">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="3dd35-540">特定の形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-540">A specific format</span></span>|<span data-ttu-id="3dd35-541">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-541">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="3dd35-542">特定の形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-542">A specific format</span></span>|<span data-ttu-id="3dd35-543">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-543">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="3dd35-544">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-544">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="3dd35-545">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-545">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="3dd35-546">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-546">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-547">次の例では、既定の <xref:System.Int32.ToString> メソッドを使用して <xref:System.Int32> 値を表示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-547">The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method.</span></span> <span data-ttu-id="3dd35-548">また、多くの標準書式指定子を使用した結果として得られる <xref:System.Int32> 値の文字列形式も表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-548">It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="3dd35-549">これらの例は、en-us カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-549">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]
 [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="3dd35-550">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="3dd35-550">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3dd35-551">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-551">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="3dd35-552">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-552">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="3dd35-553"><paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="3dd35-553">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-554"><xref:System.Int32.ToString%28System.IFormatProvider%29> メソッドは、指定されたカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して、<xref:System.Int32> 値を既定値 ("G" または一般) 形式で書式設定します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-554">The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="3dd35-555">別の形式または現在のカルチャを指定する場合は、次のように <xref:System.Int32.ToString%2A> メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-555">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="3dd35-556">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="3dd35-556">To use format</span></span>|<span data-ttu-id="3dd35-557">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="3dd35-557">For culture</span></span>|<span data-ttu-id="3dd35-558">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="3dd35-558">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="3dd35-559">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-559">Default ("G") format</span></span>|<span data-ttu-id="3dd35-560">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-560">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="3dd35-561">特定の形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-561">A specific format</span></span>|<span data-ttu-id="3dd35-562">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-562">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
|<span data-ttu-id="3dd35-563">特定の形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-563">A specific format</span></span>|<span data-ttu-id="3dd35-564">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-564">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="3dd35-565">`provider` パラメーターは、<xref:System.IFormatProvider> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="3dd35-565">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="3dd35-566"><xref:System.IFormatProvider.GetFormat%2A> メソッドは、このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-566">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="3dd35-567"><xref:System.IFormatProvider> を実装するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-567">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="3dd35-568">書式規則を使用するカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-568">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="3dd35-569">この値の特定の数値書式情報を格納している <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-569">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="3dd35-570"><xref:System.IFormatProvider> を実装し、<xref:System.IFormatProvider.GetFormat%2A> メソッドが書式設定情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返すカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-570">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="3dd35-571">`provider` が `null` 場合、または `provider`から <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得できない場合、戻り値は、スレッドの現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-571">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="3dd35-572">スレッドの現在のカルチャの詳細については、「<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-572">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3dd35-573">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-573">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="3dd35-574">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-574">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="3dd35-575">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-575">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-576">次の例では、複数の異なるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを使用して、<xref:System.Int32> 値の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-576">The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp#2)]
 [!code-csharp[System.Int32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="3dd35-577">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="3dd35-577">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="3dd35-578">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="3dd35-578">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="3dd35-579">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-579">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="3dd35-580"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="3dd35-580">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-581"><xref:System.Int32.ToString%28System.String%29> メソッドは、現在のカルチャの規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して、指定した書式で <xref:System.Int32> 値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-581">The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="3dd35-582">既定の形式 ("G" または一般) を使用する場合、または別のカルチャを指定する場合は、次のように、<xref:System.Int32.ToString%2A> メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-582">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="3dd35-583">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="3dd35-583">To use format</span></span>|<span data-ttu-id="3dd35-584">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="3dd35-584">For culture</span></span>|<span data-ttu-id="3dd35-585">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="3dd35-585">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="3dd35-586">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-586">Default ("G") format</span></span>|<span data-ttu-id="3dd35-587">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-587">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="3dd35-588">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-588">Default ("G") format</span></span>|<span data-ttu-id="3dd35-589">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-589">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="3dd35-590">特定の形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-590">A specific format</span></span>|<span data-ttu-id="3dd35-591">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-591">A specific culture</span></span>|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="3dd35-592">`format` パラメーターには、"R" 以外の任意の有効な標準数値書式指定子を指定できます。また、カスタム数値書式指定子の任意の組み合わせを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-592">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="3dd35-593">`format` が `null` または空の文字列 ("") の場合、このインスタンスの戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-593">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="3dd35-594">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-594">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="3dd35-595">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-595">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="3dd35-596">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-596">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="3dd35-597">このインスタンスの戻り値は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-597">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-598">次の例では、サポートされている各標準数値書式指定子と、2つのカスタム数値書式指定文字列を使用して、<xref:System.Int32> 値を表示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-598">The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings.</span></span> <span data-ttu-id="3dd35-599">数値を文字列に変換する場合、この例では en-us カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-599">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-cpp[System.Int32.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp#3)]
 [!code-csharp[System.Int32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3dd35-600"><paramref name="format" /> は使用できないか、またはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-600"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="3dd35-601">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="3dd35-601">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="3dd35-602">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="3dd35-602">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="3dd35-603">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="3dd35-603">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="3dd35-604">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="3dd35-604">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="3dd35-605">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="3dd35-605">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="3dd35-606">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-606">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="3dd35-607">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-607">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="3dd35-608"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="3dd35-608">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-609"><xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> メソッドは、指定されたカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して、指定された書式で <xref:System.Int32> 値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-609">The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="3dd35-610">既定の書式設定またはカルチャ設定を使用する場合は、次のように、<xref:System.Int32.ToString%2A> メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-610">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="3dd35-611">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="3dd35-611">To use format</span></span>|<span data-ttu-id="3dd35-612">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="3dd35-612">For culture</span></span>|<span data-ttu-id="3dd35-613">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="3dd35-613">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="3dd35-614">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-614">Default ("G") format</span></span>|<span data-ttu-id="3dd35-615">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-615">Default (current) culture</span></span>|<xref:System.Int32.ToString>|  
|<span data-ttu-id="3dd35-616">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-616">Default ("G") format</span></span>|<span data-ttu-id="3dd35-617">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-617">A specific culture</span></span>|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="3dd35-618">特定の形式</span><span class="sxs-lookup"><span data-stu-id="3dd35-618">A specific format</span></span>|<span data-ttu-id="3dd35-619">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="3dd35-619">Default (current) culture</span></span>|<xref:System.Int32.ToString%28System.String%29>|  
  
 <span data-ttu-id="3dd35-620">`format` パラメーターには、標準またはカスタムの数値書式指定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-620">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="3dd35-621">すべてのカスタム数値書式指定文字と同様に、"R" (または "r") 以外のすべての標準の数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-621">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="3dd35-622">`format` が `null` または空の文字列 ("") の場合、このインスタンスの戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-622">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="3dd35-623">`provider` パラメーターは、<xref:System.IFormatProvider> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="3dd35-623">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="3dd35-624"><xref:System.IFormatProvider.GetFormat%2A> メソッドは、このメソッドによって返される文字列の書式に関するカルチャ固有の書式情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-624">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="3dd35-625"><xref:System.IFormatProvider> を実装するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-625">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="3dd35-626">書式規則を使用するカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-626">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="3dd35-627">この値の特定の数値書式情報を格納している <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-627">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="3dd35-628"><xref:System.IFormatProvider> を実装し、<xref:System.IFormatProvider.GetFormat%2A> メソッドが書式設定情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返すカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-628">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="3dd35-629">`provider` が `null` 場合、または `provider`から <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得できない場合、このインスタンスの戻り値は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-629">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="3dd35-630">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-630">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="3dd35-631">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-631">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="3dd35-632">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-632">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-633">次の例では、3つの異なるカルチャに対してサポートされている各標準数値書式指定子を使用して、正の値と負の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-633">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-cpp[System.Int32.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp#4)]
 [!code-csharp[System.Int32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="3dd35-634"><paramref name="format" /> は使用できないか、またはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-634"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="3dd35-635">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="3dd35-635">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="3dd35-636">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="3dd35-636">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="3dd35-637">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="3dd35-637">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="3dd35-638">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="3dd35-638">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="3dd35-639">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="3dd35-639">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="3dd35-640">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3dd35-640">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3dd35-641">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-641">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="3dd35-642">戻り値は、演算が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-642">A return value indicates whether the operation succeeded.</span></span></summary>
        <altmember cref="Overload:System.Int32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * int -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * int -&gt; bool" Usage="System.int.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3dd35-643">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="3dd35-643">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="3dd35-644">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 32 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-644">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="3dd35-645"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-645">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="3dd35-646">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-646">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="3dd35-647">数値の文字列形式を、それと等価な 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-647">Converts the string representation of a number to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="3dd35-648">戻り値は、変換が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-648">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="3dd35-649"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3dd35-649"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-650"><xref:System.Int32.TryParse%2A> メソッドは、<xref:System.Int32.Parse%2A> メソッドに似ていますが、変換に失敗した場合に <xref:System.Int32.TryParse%2A> メソッドが例外をスローしない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-650">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="3dd35-651">これにより、`s` が無効で、正常に解析できない場合に、例外処理を使用して <xref:System.FormatException> をテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-651">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="3dd35-652">`s` パラメーターには、次の形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-652">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="3dd35-653">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-653">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="3dd35-654">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-654">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="3dd35-655">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-655">The following table describes each element.</span></span>  
  
|<span data-ttu-id="3dd35-656">要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-656">Element</span></span>|<span data-ttu-id="3dd35-657">説明</span><span class="sxs-lookup"><span data-stu-id="3dd35-657">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="3dd35-658">*ws*</span><span class="sxs-lookup"><span data-stu-id="3dd35-658">*ws*</span></span>|<span data-ttu-id="3dd35-659">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="3dd35-659">Optional white space.</span></span>|  
|<span data-ttu-id="3dd35-660">*sign*</span><span class="sxs-lookup"><span data-stu-id="3dd35-660">*sign*</span></span>|<span data-ttu-id="3dd35-661">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-661">An optional sign.</span></span>|  
|<span data-ttu-id="3dd35-662">*digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-662">*digits*</span></span>|<span data-ttu-id="3dd35-663">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="3dd35-663">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="3dd35-664">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-664">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="3dd35-665">10進数の数字に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-665">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="3dd35-666">`s`に表示されるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-666">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="3dd35-667">`s` パラメーターは、現在のシステムカルチャに対して初期化された <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-667">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="3dd35-668">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3dd35-668">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="3dd35-669"><xref:System.Int32.TryParse%2A> メソッドのこのオーバーロードは、`s` パラメーター内のすべての数字を10進数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-669">This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="3dd35-670">16進数の文字列形式を解析するには、<xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> のオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-670">To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-671">次の例では、さまざまな文字列値を指定して <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-671">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp#1)]
 [!code-csharp[System.Int32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="3dd35-672">この例では、<xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> メソッドによって変換できない文字列の一部を次に示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-672">Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="3dd35-673">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="3dd35-673">"9432.0".</span></span> <span data-ttu-id="3dd35-674">文字列に小数点の区切り文字を含めることができないため、変換に失敗します。整数の数字のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-674">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="3dd35-675">"16,667".</span><span class="sxs-lookup"><span data-stu-id="3dd35-675">"16,667".</span></span> <span data-ttu-id="3dd35-676">文字列にはグループ区切り記号を含めることができないため、変換に失敗します。整数の数字のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-676">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="3dd35-677">"(100)".</span><span class="sxs-lookup"><span data-stu-id="3dd35-677">"(100)".</span></span> <span data-ttu-id="3dd35-678">現在のカルチャの <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> と <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> のプロパティで定義されているもの以外の負の符号を文字列に含めることはできないため、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-678">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="3dd35-679">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="3dd35-679">"01FA".</span></span> <span data-ttu-id="3dd35-680">文字列に16進数の数字を含めることができないため、変換に失敗します。10進数のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-680">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="3dd35-681">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="3dd35-681">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="3dd35-682">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="3dd35-682">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="3dd35-683">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3dd35-683">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * int -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] int % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * int -&gt; bool" Usage="System.int.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3dd35-684">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="3dd35-684">A string containing a number to convert.</span></span> <span data-ttu-id="3dd35-685">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-685">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="3dd35-686"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="3dd35-686">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="3dd35-687">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-687">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="3dd35-688"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3dd35-688">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="3dd35-689">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 32 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-689">When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="3dd35-690"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.Int32.MinValue" /> より小さいか <see cref="F:System.Int32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-690">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span></span> <span data-ttu-id="3dd35-691">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-691">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="3dd35-692">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 32 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-692">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.</span></span> <span data-ttu-id="3dd35-693">戻り値は、変換が成功したかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-693">A return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="3dd35-694"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3dd35-694"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3dd35-695"><xref:System.Int32.TryParse%2A> メソッドは、<xref:System.Int32.Parse%2A> メソッドに似ていますが、変換に失敗した場合に <xref:System.Int32.TryParse%2A> メソッドが例外をスローしない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-695">The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="3dd35-696">これにより、`s` が無効で、正常に解析できない場合に、例外処理を使用して <xref:System.FormatException> をテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-696">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="3dd35-697">`style` パラメーターは、解析操作を成功させるために `s` パラメーターで使用できるスタイル要素 (空白、正または負の符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-697">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="3dd35-698"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-698">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="3dd35-699">`style`の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-699">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="3dd35-700">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-700">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="3dd35-701">または、`style` パラメーターに <xref:System.Globalization.NumberStyles.AllowHexSpecifier>が含まれている場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-701">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="3dd35-702">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="3dd35-702">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="3dd35-703">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-703">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="3dd35-704">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="3dd35-704">The following table describes each element.</span></span>  
  
|<span data-ttu-id="3dd35-705">要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-705">Element</span></span>|<span data-ttu-id="3dd35-706">説明</span><span class="sxs-lookup"><span data-stu-id="3dd35-706">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="3dd35-707">*ws*</span><span class="sxs-lookup"><span data-stu-id="3dd35-707">*ws*</span></span>|<span data-ttu-id="3dd35-708">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="3dd35-708">Optional white space.</span></span> <span data-ttu-id="3dd35-709"><xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に空白が表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-709">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="3dd35-710">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-710">A culture-specific currency symbol.</span></span> <span data-ttu-id="3dd35-711">文字列内の位置は、`provider` パラメーターの <xref:System.IFormatProvider.GetFormat%2A> メソッドによって返される <xref:System.Globalization.NumberFormatInfo> オブジェクトの <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-711">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="3dd35-712">通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-712">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-713">*sign*</span><span class="sxs-lookup"><span data-stu-id="3dd35-713">*sign*</span></span>|<span data-ttu-id="3dd35-714">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-714">An optional sign.</span></span> <span data-ttu-id="3dd35-715">符号は、`style` に <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> または <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-715">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="3dd35-716">*digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-716">*digits*</span></span>|<span data-ttu-id="3dd35-717">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="3dd35-717">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="3dd35-718">*、*</span><span class="sxs-lookup"><span data-stu-id="3dd35-718">*,*</span></span>|<span data-ttu-id="3dd35-719">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-719">A culture-specific thousands separator.</span></span> <span data-ttu-id="3dd35-720">`provider` で指定されたカルチャの桁区切り記号は、`style` に <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-720">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-721">*.*</span><span class="sxs-lookup"><span data-stu-id="3dd35-721">*.*</span></span>|<span data-ttu-id="3dd35-722">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-722">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="3dd35-723">`provider` によって指定されたカルチャの小数点記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-723">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-724">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-724">*fractional_digits*</span></span>|<span data-ttu-id="3dd35-725">数字0の1回以上の出現。</span><span class="sxs-lookup"><span data-stu-id="3dd35-725">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="3dd35-726">小数点以下の桁数は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合にのみ `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-726">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-727">*e*</span><span class="sxs-lookup"><span data-stu-id="3dd35-727">*e*</span></span>|<span data-ttu-id="3dd35-728">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-728">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="3dd35-729">`s` パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-729">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="3dd35-730">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="3dd35-730">*hexdigits*</span></span>|<span data-ttu-id="3dd35-731">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="3dd35-731">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="3dd35-732">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-732">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="3dd35-733">10進数の数字のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> フラグに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-733">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="3dd35-734">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-734">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="3dd35-735">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="3dd35-735">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="3dd35-736">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="3dd35-736">Non-composite NumberStyles values</span></span>|<span data-ttu-id="3dd35-737">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="3dd35-737">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="3dd35-738">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="3dd35-738">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="3dd35-739">小数点 (*.*) と*fractional_digits*の要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-739">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="3dd35-740">ただし、 *fractional_digits*は1桁以上の0桁で構成されている必要があります。それ以外の場合、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-740">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="3dd35-741">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-741">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="3dd35-742">`s` が指数表記の数値を表す場合は、0以外の小数部分を含まない、<xref:System.Int32> データ型の範囲内の整数を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-742">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="3dd35-743">`s`の先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-743">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="3dd35-744">`s`の末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-744">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="3dd35-745">*数字*の前に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-745">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="3dd35-746">*数字*の後に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-746">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="3dd35-747">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-747">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="3dd35-748">桁区切り記号 (*,*) 要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-748">The thousands separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="3dd35-749">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-749">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="3dd35-750">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-750">All elements.</span></span> <span data-ttu-id="3dd35-751">`s` パラメーターは、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-751">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="3dd35-752">`s`の先頭または末尾にある*ws*要素、`s`の先頭に*符号*、小数点 (*.*) 記号。</span><span class="sxs-lookup"><span data-stu-id="3dd35-752">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="3dd35-753">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-753">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="3dd35-754">*Ws*、 *sign*、桁区切り記号 (*、*)、および小数点 (*.*) の要素。</span><span class="sxs-lookup"><span data-stu-id="3dd35-754">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="3dd35-755">`s` を除くすべてのスタイルは、16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-755">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="3dd35-756"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3dd35-756">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="3dd35-757">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-757">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="3dd35-758">`style` に存在できる他のフラグは <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="3dd35-758">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3dd35-759">(<xref:System.Globalization.NumberStyles> 列挙体には、2つの空白フラグを含む複合スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>があります)。</span><span class="sxs-lookup"><span data-stu-id="3dd35-759">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="3dd35-760">`provider` パラメーターは、<xref:System.Globalization.CultureInfo> オブジェクトや <xref:System.Globalization.NumberFormatInfo> オブジェクトなどの <xref:System.IFormatProvider> の実装で、<xref:System.IFormatProvider.GetFormat%2A> メソッドが <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-760">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="3dd35-761"><xref:System.Globalization.NumberFormatInfo> オブジェクトは、`s`の形式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-761">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="3dd35-762">`provider` が `null`場合は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="3dd35-762">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3dd35-763">次の例では、さまざまな文字列と <xref:System.Globalization.NumberStyles> 値を指定して <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3dd35-763">The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=nameWithType> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-cpp[System.Int32.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp#2)]
 [!code-csharp[System.Int32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3dd35-764"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-764"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="3dd35-765">- または -</span><span class="sxs-lookup"><span data-stu-id="3dd35-765">-or-</span></span> 
 <span data-ttu-id="3dd35-766"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="3dd35-766"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int32.Parse(System.String)" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int32.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="3dd35-767">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="3dd35-767">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
