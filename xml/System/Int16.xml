<Type Name="Int16" FullName="System.Int16">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0f180eedeb49dfae091f25f9dcb6a8b02610eb1" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400820" /></Metadata><TypeSignature Language="C#" Value="public struct Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int16 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int16&gt;, class System.IConvertible, class System.IEquatable`1&lt;int16&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int16" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int16&#xA;Implements IComparable, IComparable(Of Short), IConvertible, IEquatable(Of Short), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int16 : IComparable, IComparable&lt;short&gt;, IConvertible, IEquatable&lt;short&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int16 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int16&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="503f3-101">16 ビット符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="503f3-101">Represents a 16-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-102"><xref:System.Int16> 値の型は、負の32768から正の32767までの範囲の値を持つ符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="503f3-102">The <xref:System.Int16> value type represents signed integers with values ranging from negative 32768 through positive 32767.</span></span>  
  
 <span data-ttu-id="503f3-103">この型は、この型のインスタンスの値を文字列形式に変換し、数値の文字列形式をこの型のインスタンスに変換し、この型のインスタンスを比較するメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="503f3-103">This type provides methods to convert the value of an instance of this type to its string representation, to convert the string representation of a number to an instance of this type, and to compare instances of this type.</span></span>  
  
 <span data-ttu-id="503f3-104">また、<xref:System.Math> クラスのメンバーを呼び出して、数値の絶対値を取得したり、整数の除算から商と剰余を計算したり、2の最大値または最小値を決定したりするなど、さまざまな数値演算を実行することもできます。整数。数値の符号を取得し、数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="503f3-104">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
 <span data-ttu-id="503f3-105">書式指定コードによる値型の文字列形式の制御方法の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-105">For information about how format specification codes control the string representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="503f3-106">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="503f3-106">All members of this type are thread safe.</span></span> <span data-ttu-id="503f3-107">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-107">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="503f3-108">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-108">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt16" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="503f3-109">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="503f3-109">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="503f3-110">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="503f3-110">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="503f3-111">このインスタンスと指定したオブジェクトまたは別の <see cref="T:System.Int16" /> インスタンスを比較し、このインスタンスの値が指定したオブジェクトの値またはもう一方の <see cref="T:System.Int16" /> インスタンスの値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-111">Compares this instance to a specified object or another <see cref="T:System.Int16" /> instance and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or the other <see cref="T:System.Int16" /> instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(short value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int16 -&gt; int&#xA;override this.CompareTo : int16 -&gt; int" Usage="int16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="503f3-112">比較対象の整数。</span><span class="sxs-lookup"><span data-stu-id="503f3-112">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="503f3-113">このインスタンスと指定した 16 ビット符号付き整数を比較し、このインスタンスの値が指定した 16 ビット符号付き整数の値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-113">Compares this instance to a specified 16-bit signed integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="503f3-114">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="503f3-114">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="503f3-115">戻り値</span><span class="sxs-lookup"><span data-stu-id="503f3-115">Return Value</span></span> 
 </term><description> <span data-ttu-id="503f3-116">説明</span><span class="sxs-lookup"><span data-stu-id="503f3-116">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="503f3-117">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="503f3-117">Less than zero</span></span> 
 </term><description> <span data-ttu-id="503f3-118">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="503f3-118">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="503f3-119">0</span><span class="sxs-lookup"><span data-stu-id="503f3-119">Zero</span></span> 
 </term><description> <span data-ttu-id="503f3-120">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="503f3-120">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="503f3-121">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="503f3-121">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="503f3-122">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="503f3-122">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-123">このメソッドは、<xref:System.IComparable%601?displayProperty=nameWithType> インターフェイスを実装し、`value` パラメーターをオブジェクトに変換する必要がないため、<xref:System.Int16.CompareTo%2A?displayProperty=nameWithType> メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="503f3-123">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int16.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="503f3-124">プログラミング言語によっては、パラメーターの型がインスタンスの型よりも少ない (幅が狭い) <xref:System.Int16.CompareTo%2A> メソッドをコーディングすることができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-124">Depending on your programming language, it might be possible to code a <xref:System.Int16.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="503f3-125">これが可能なのは、一部のプログラミング言語では、インスタンスと同数のビットを持つ型として、パラメーターを表す暗黙的な拡大変換が実行されるためです。</span><span class="sxs-lookup"><span data-stu-id="503f3-125">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="503f3-126">たとえば、インスタンスの型が <xref:System.Int32> で、パラメーターの型が <xref:System.Byte>であるとします。</span><span class="sxs-lookup"><span data-stu-id="503f3-126">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="503f3-127">Microsoft C#コンパイラは、パラメーターの値を <xref:System.Int32> オブジェクトとして表す命令を生成し、<xref:System.Int32> インスタンスと <xref:System.Int32> パラメーター表現の値を比較する <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> メソッドを生成します。</span><span class="sxs-lookup"><span data-stu-id="503f3-127">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="503f3-128">プログラミング言語のドキュメントを参照して、コンパイラが数値型の暗黙的な拡大変換を実行するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="503f3-128">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-129">次のコード例は、いくつかの値および参照型について、<xref:System.Int16.CompareTo%2A> メソッドのジェネリックおよび非ジェネリックバージョンを示しています。</span><span class="sxs-lookup"><span data-stu-id="503f3-129">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int16.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Int16.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int16.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="503f3-130">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-130">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="503f3-131">このインスタンスと指定したオブジェクトを比較し、このインスタンスの値がオブジェクトの値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-131">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the object.</span></span></summary>
        <returns><span data-ttu-id="503f3-132">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="503f3-132">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="503f3-133">戻り値</span><span class="sxs-lookup"><span data-stu-id="503f3-133">Return Value</span></span> 
 </term><description> <span data-ttu-id="503f3-134">説明</span><span class="sxs-lookup"><span data-stu-id="503f3-134">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="503f3-135">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="503f3-135">Less than zero</span></span> 
 </term><description> <span data-ttu-id="503f3-136">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="503f3-136">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="503f3-137">0</span><span class="sxs-lookup"><span data-stu-id="503f3-137">Zero</span></span> 
 </term><description> <span data-ttu-id="503f3-138">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="503f3-138">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="503f3-139">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="503f3-139">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="503f3-140">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="503f3-140">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="503f3-141">- または -</span><span class="sxs-lookup"><span data-stu-id="503f3-141">-or-</span></span> 
 <span data-ttu-id="503f3-142"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="503f3-142"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-143">値に関係なく <xref:System.Int16>は、null 参照よりも大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-143">An <xref:System.Int16>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="503f3-144">`value` パラメーターは、`null` または <xref:System.Int16>のインスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-144">The `value` parameter must be `null` or an instance of <xref:System.Int16>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="503f3-145"><paramref name="value" /> が <see cref="T:System.Int16" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-145"><paramref name="value" /> is not an <see cref="T:System.Int16" />.</span></span></exception>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="503f3-146">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int16" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-146">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int16" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (short obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int16 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(short obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int16 -&gt; bool" Usage="int16.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int16" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="503f3-147">このインスタンスと比較する <see cref="T:System.Int16" /> 値。</span><span class="sxs-lookup"><span data-stu-id="503f3-147">An <see cref="T:System.Int16" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="503f3-148">このインスタンスが指定した <see cref="T:System.Int16" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-148">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int16" /> value.</span></span></summary>
        <returns><span data-ttu-id="503f3-149"><see langword="true" /> の値がこのインスタンスと同じ場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-149"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-150">このメソッドは <xref:System.IEquatable%601?displayProperty=nameWithType> インターフェイスを実装し、`obj` パラメーターをオブジェクトに変換する必要がないため、<xref:System.Int16.Equals%2A> よりもわずかにパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="503f3-150">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int16.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="503f3-151">コンパイラのオーバーロードの解決では、2つの <see cref="M:System.Int16.Equals(System.Int16)" /> メソッドオーバーロードの動作の明らかな違いが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-151">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads.</span></span> <span data-ttu-id="503f3-152"><paramref name="obj" /> 引数と <see cref="T:System.Int16" /> の間の暗黙的な変換が定義されていて、引数が <see cref="T:System.Object" />として型指定されていない場合、コンパイラは暗黙的な変換を実行し、<see cref="M:System.Int16.Equals(System.Int16)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="503f3-152">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method.</span></span> <span data-ttu-id="503f3-153">それ以外の場合は、<see cref="M:System.Int16.Equals(System.Object)" /> メソッドを呼び出します。このメソッドは、<paramref name="obj" /> 引数が <see cref="T:System.Int16" /> 値でない場合は常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-153">Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value.</span></span> <span data-ttu-id="503f3-154">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="503f3-154">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="503f3-155"><see cref="T:System.Byte" /> と <see cref="T:System.SByte" /> の値の場合、最初の比較では <see langword="true" /> が返されます。これは、コンパイラが自動的に拡大変換を実行して <see cref="M:System.Int16.Equals(System.Int16)" /> メソッドを呼び出しますが、2番目の比較では、コンパイラによって <see langword="false" /> が返されるためです。<see cref="M:System.Int16.Equals(System.Object)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="503f3-155">In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="503f3-156">[! code-csharp[# 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)][! コード-vb[システム. Int16. Equals # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="503f3-156">[!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Int16.Equals(System.Object)" />
        <altmember cref="Overload:System.Int16.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int16.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="503f3-157">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="503f3-157">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="503f3-158">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-158">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="503f3-159"><see langword="true" /> が <paramref name="obj" /> のインスタンスで、このインスタンスの値に等しい場合は <see cref="T:System.Int16" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-159"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Int16" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="503f3-160">次のコード例は、`Int16`のコンテキストでの `Equals` の使用方法を示しています。2つの short 値を比較して、同じ数値を表す場合は `true` を返し、そうでない場合は `false` します。</span><span class="sxs-lookup"><span data-stu-id="503f3-160">The following code example illustrates the use of `Equals` in the context of `Int16`, comparing two short values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int16_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int16_Equals/CPP/int16_equals.cpp#1)]
 [!code-csharp[Int16_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int16_Equals/CS/int16_equals.cs#1)]
 [!code-vb[Int16_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int16_Equals/VB/int16_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="503f3-161">コンパイラのオーバーロードの解決では、2つの <see cref="M:System.Int16.Equals(System.Int16)" /> メソッドオーバーロードの動作の明らかな違いが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-161">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int16.Equals(System.Int16)" /> method overloads.</span></span> <span data-ttu-id="503f3-162"><paramref name="obj" /> 引数と <see cref="T:System.Int16" /> の間の暗黙的な変換が定義されていて、引数が <see cref="T:System.Object" />として型指定されていない場合、コンパイラは暗黙的な変換を実行し、<see cref="M:System.Int16.Equals(System.Int16)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="503f3-162">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int16" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int16.Equals(System.Int16)" /> method.</span></span> <span data-ttu-id="503f3-163">それ以外の場合は、<see cref="M:System.Int16.Equals(System.Object)" /> メソッドを呼び出します。このメソッドは、<paramref name="obj" /> 引数が <see cref="T:System.Int16" /> 値でない場合は常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-163">Otherwise, they call the <see cref="M:System.Int16.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int16" /> value.</span></span> <span data-ttu-id="503f3-164">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="503f3-164">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="503f3-165"><see cref="T:System.Byte" /> と <see cref="T:System.SByte" /> の値の場合、最初の比較では <see langword="true" /> が返されます。これは、コンパイラが自動的に拡大変換を実行して <see cref="M:System.Int16.Equals(System.Int16)" /> メソッドを呼び出しますが、2番目の比較では、コンパイラによって <see langword="false" /> が返されるためです。<see cref="M:System.Int16.Equals(System.Object)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="503f3-165">In the case of the <see cref="T:System.Byte" /> and <see cref="T:System.SByte" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int16.Equals(System.Int16)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int16.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="503f3-166">[! code-csharp[# 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)][! コード-vb[システム. Int16. Equals # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="503f3-166">[!code-csharp[System.Int16.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int16.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int16.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int16.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int16.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="503f3-167">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-167">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="503f3-168">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="503f3-168">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int16.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="503f3-169"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int16" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-169">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-170">列挙型定数 <see cref="F:System.TypeCode.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-170">The enumerated constant, <see cref="F:System.TypeCode.Int16" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const short MaxValue = 32767;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MaxValue = int16(32767)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Short  = 32767" />
      <MemberSignature Language="C++ CLI" Value="public: short MaxValue = 32767;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int16" Usage="System.int16.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>32767</MemberValue>
      <Docs>
        <summary><span data-ttu-id="503f3-171"><see cref="T:System.Int16" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="503f3-171">Represents the largest possible value of an <see cref="T:System.Int16" />.</span></span> <span data-ttu-id="503f3-172">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="503f3-172">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-173">この定数の値は32767です。つまり、16進数であるということです。</span><span class="sxs-lookup"><span data-stu-id="503f3-173">The value of this constant is 32767; that is, hexadecimal 0x7FFF.</span></span>  
  
 <span data-ttu-id="503f3-174"><xref:System.Int16.MaxValue> プロパティは通常、<xref:System.UInt16> または <xref:System.Int32>などの数値型から <xref:System.Int16>に変換するときに <xref:System.OverflowException> を防ぐために使用されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-174">The <xref:System.Int16.MaxValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater upper range (such as a <xref:System.UInt16> or a <xref:System.Int32>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="503f3-175">この例では、この使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-175">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-176">次の例では、<xref:System.Int16.MaxValue> プロパティを使用して、<xref:System.Int16> 値に変換するときに <xref:System.OverflowException> を回避します。</span><span class="sxs-lookup"><span data-stu-id="503f3-176">The following example uses the <xref:System.Int16.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const short MinValue = -32768;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int16 MinValue = int16(-32768)" />
      <MemberSignature Language="DocId" Value="F:System.Int16.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Short  = -32768" />
      <MemberSignature Language="C++ CLI" Value="public: short MinValue = -32768;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int16" Usage="System.int16.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <MemberValue>-32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="503f3-177"><see cref="T:System.Int16" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="503f3-177">Represents the smallest possible value of <see cref="T:System.Int16" />.</span></span> <span data-ttu-id="503f3-178">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="503f3-178">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-179">この定数の値は-32768 です。つまり、は16進数0x8000 です。</span><span class="sxs-lookup"><span data-stu-id="503f3-179">The value of this constant is -32768; that is, hexadecimal 0x8000.</span></span>  
  
 <span data-ttu-id="503f3-180"><xref:System.Int16.MinValue> プロパティは、通常、より低い範囲 (<xref:System.Int32> や <xref:System.Int64>など) を持つ数値型から <xref:System.Int16>に変換するときに、<xref:System.OverflowException> を防ぐために使用されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-180">The <xref:System.Int16.MinValue> property is typically used to prevent an <xref:System.OverflowException> when converting from a numeric type with a greater lower range (such as an <xref:System.Int32> or an <xref:System.Int64>) to an <xref:System.Int16>.</span></span> <span data-ttu-id="503f3-181">この例では、この使用方法を示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-181">The example illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-182">次の例では、<xref:System.Int16.MinValue> プロパティを使用して、<xref:System.Int16> 値に変換するときに <xref:System.OverflowException> を回避します。</span><span class="sxs-lookup"><span data-stu-id="503f3-182">The following example uses the <xref:System.Int16.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int16> value.</span></span>  
  
 [!code-cpp[System.Int16.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.MaxValue/cpp/minvalue.cpp#1)]
 [!code-csharp[System.Int16.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.MaxValue/cs/MaxValue.cs#1)]
 [!code-vb[System.Int16.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.MaxValue/vb/MaxValue.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int16.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="503f3-183">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-183">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int16.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int16" Usage="System.int16.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="503f3-184">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="503f3-184">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="503f3-185">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-185">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="503f3-186"><paramref name="s" /> に格納されている数値と等しい 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="503f3-186">A 16-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-187">`s` パラメーターには、次の形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="503f3-187">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="503f3-188">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-188">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="503f3-189">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="503f3-189">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="503f3-190">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="503f3-190">The following table describes each element.</span></span>  
  
|<span data-ttu-id="503f3-191">要素</span><span class="sxs-lookup"><span data-stu-id="503f3-191">Element</span></span>|<span data-ttu-id="503f3-192">説明</span><span class="sxs-lookup"><span data-stu-id="503f3-192">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="503f3-193">*ws*</span><span class="sxs-lookup"><span data-stu-id="503f3-193">*ws*</span></span>|<span data-ttu-id="503f3-194">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="503f3-194">Optional white space.</span></span>|  
|<span data-ttu-id="503f3-195">*sign*</span><span class="sxs-lookup"><span data-stu-id="503f3-195">*sign*</span></span>|<span data-ttu-id="503f3-196">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="503f3-196">An optional sign.</span></span>|  
|<span data-ttu-id="503f3-197">*digits*</span><span class="sxs-lookup"><span data-stu-id="503f3-197">*digits*</span></span>|<span data-ttu-id="503f3-198">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="503f3-198">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="503f3-199">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-199">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="503f3-200">整数値の10進数に加えて、先頭と末尾のスペースだけを先頭の符号と共に使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-200">In addition to the integer value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="503f3-201">`s`で使用できるスタイル要素を明示的に定義するには、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> または <xref:System.Int16.Parse%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="503f3-201">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%2A> method.</span></span>  
  
 <span data-ttu-id="503f3-202">`s` パラメーターは、現在のシステムカルチャに対して初期化された <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-202">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="503f3-203">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-203">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="503f3-204">他のカルチャの書式設定情報を使用して文字列を解析するには、<xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> または <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="503f3-204">To parse a string using the formatting information of some other culture, use the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-205">次の例では、<xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> メソッドを使用して、文字列値を16ビット符号付き整数値に変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-205">The following example demonstrates how to convert a string value into a 16-bit signed integer value using the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="503f3-206">結果の整数値がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-206">The resulting integer value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Int16.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse1.cpp#1)]
 [!code-csharp[System.Int16.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#1)]
 [!code-vb[System.Int16.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="503f3-207"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="503f3-207"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="503f3-208"><paramref name="s" /> は正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-208"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="503f3-209"><paramref name="s" /> は、<see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="503f3-209"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="503f3-210">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="503f3-210">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int16" Usage="System.int16.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="503f3-211">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="503f3-211">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="503f3-212"><paramref name="s" /> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="503f3-212">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="503f3-213">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="503f3-213">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="503f3-214">指定したスタイルの数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-214">Converts the string representation of a number in a specified style to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="503f3-215"><paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="503f3-215">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-216">`style` パラメーターは、解析操作を成功させるために `s` パラメーターで使用できるスタイル要素 (空白や記号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="503f3-216">The `style` parameter defines the style elements (such as white space or a sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="503f3-217"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-217">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="503f3-218">`style`の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-218">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="503f3-219">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-219">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="503f3-220">または、`style` が <xref:System.Globalization.NumberStyles.AllowHexSpecifier>を含む場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="503f3-220">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="503f3-221">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-221">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="503f3-222">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="503f3-222">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="503f3-223">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="503f3-223">The following table describes each element.</span></span>  
  
|<span data-ttu-id="503f3-224">要素</span><span class="sxs-lookup"><span data-stu-id="503f3-224">Element</span></span>|<span data-ttu-id="503f3-225">説明</span><span class="sxs-lookup"><span data-stu-id="503f3-225">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="503f3-226">*ws*</span><span class="sxs-lookup"><span data-stu-id="503f3-226">*ws*</span></span>|<span data-ttu-id="503f3-227">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="503f3-227">Optional white space.</span></span> <span data-ttu-id="503f3-228"><xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に空白が表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-228">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="503f3-229">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-229">A culture-specific currency symbol.</span></span> <span data-ttu-id="503f3-230">文字列内での位置は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> および <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-230">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="503f3-231">現在のカルチャの通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-231">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-232">*sign*</span><span class="sxs-lookup"><span data-stu-id="503f3-232">*sign*</span></span>|<span data-ttu-id="503f3-233">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="503f3-233">An optional sign.</span></span> <span data-ttu-id="503f3-234"><xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> フラグが `style` に含まれている場合、`s` の先頭に符号が表示されます。また、`style` に <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> フラグが含まれている場合は、`s` の最後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-234">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="503f3-235"><xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> フラグが `style` 含まれている場合は、`s` でかっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-235">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-236">*digits*</span><span class="sxs-lookup"><span data-stu-id="503f3-236">*digits*</span></span>|<span data-ttu-id="503f3-237">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="503f3-237">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="503f3-238">*、*</span><span class="sxs-lookup"><span data-stu-id="503f3-238">*,*</span></span>|<span data-ttu-id="503f3-239">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-239">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="503f3-240">現在のカルチャの桁区切り記号は、`style` に <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-240">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-241">*.*</span><span class="sxs-lookup"><span data-stu-id="503f3-241">*.*</span></span>|<span data-ttu-id="503f3-242">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-242">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="503f3-243">現在のカルチャの小数点の記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-243">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-244">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="503f3-244">*fractional_digits*</span></span>|<span data-ttu-id="503f3-245">0の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="503f3-245">A sequence of the 0 digit.</span></span> <span data-ttu-id="503f3-246">`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合、`s` に小数点以下の桁数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-246">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="503f3-247">*Fractional_digits*に0以外の数字が含まれている場合、メソッドは <xref:System.OverflowException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="503f3-247">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="503f3-248">*e*</span><span class="sxs-lookup"><span data-stu-id="503f3-248">*e*</span></span>|<span data-ttu-id="503f3-249">"E" または "E" 文字。 `s` を指数表記で表すことができることを示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-249">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="503f3-250">`s` パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-250">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="503f3-251">ただし、`s` パラメーターは、<xref:System.Int16> データ型の範囲の数値を表す必要があり、0以外の小数部分を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="503f3-251">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="503f3-252">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="503f3-252">*hexdigits*</span></span>|<span data-ttu-id="503f3-253">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="503f3-253">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="503f3-254">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-254">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="503f3-255">*数字*のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-255">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="503f3-256">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="503f3-256">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="503f3-257">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="503f3-257">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="503f3-258">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="503f3-258">Non-composite NumberStyles values</span></span>|<span data-ttu-id="503f3-259">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="503f3-259">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="503f3-260">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="503f3-260">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="503f3-261">*.*</span><span class="sxs-lookup"><span data-stu-id="503f3-261">The *.*</span></span> <span data-ttu-id="503f3-262">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-262">and *fractional_digits* elements.</span></span> <span data-ttu-id="503f3-263">ただし、 *fractional_digits*は1桁以上の0桁で構成する必要があります。または、<xref:System.OverflowException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-263">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="503f3-264">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="503f3-264">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="503f3-265">`s`の先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-265">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="503f3-266">`s`の末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-266">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="503f3-267">*数字*の前に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-267">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="503f3-268">*数字*の後に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-268">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="503f3-269">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-269">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="503f3-270">要素 *、* 要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-270">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="503f3-271">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-271">The *$* element.</span></span>|  
  
 <span data-ttu-id="503f3-272"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` は、プレフィックスのない16進数値の文字列形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-272">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="503f3-273">たとえば、"9AF3" は正常に解析されますが、"0x9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="503f3-273">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="503f3-274">`style` に存在できる他のフラグは <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="503f3-274">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="503f3-275">(<xref:System.Globalization.NumberStyles> 列挙体には、2つの空白フラグを含む複合数値スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>があります)。</span><span class="sxs-lookup"><span data-stu-id="503f3-275">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="503f3-276">`s` パラメーターは、現在のシステムカルチャに対して初期化された <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-276">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="503f3-277">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-277">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="503f3-278">特定のカルチャの書式情報を使用して `s` を解析するには、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="503f3-278">To parse `s` using the formatting information of a specific culture, call the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-279">次の例では、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> メソッドを使用して、en-us カルチャを使用して <xref:System.Int16> 値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="503f3-279">The following example uses the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of <xref:System.Int16> values using the en-US culture.</span></span>  
  
 [!code-cpp[System.Int16.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse2.cpp#2)]
 [!code-csharp[System.Int16.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int16.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="503f3-280"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="503f3-280"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="503f3-281"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-281"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="503f3-282">- または -</span><span class="sxs-lookup"><span data-stu-id="503f3-282">-or-</span></span> 
 <span data-ttu-id="503f3-283"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-283"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="503f3-284"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="503f3-284"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="503f3-285"><paramref name="s" /> は、<see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="503f3-285"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="503f3-286">- または -</span><span class="sxs-lookup"><span data-stu-id="503f3-286">-or-</span></span> 
 <span data-ttu-id="503f3-287"><paramref name="s" /> に 0 以外の小数の桁数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="503f3-287"><paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="503f3-288">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="503f3-288">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="503f3-289">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="503f3-289">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="503f3-290"><see cref="T:System.IFormatProvider" /> に関するカルチャに固有の書式設定情報を提供する <paramref name="s" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-290">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="503f3-291">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-291">Converts the string representation of a number in a specified culture-specific format to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="503f3-292"><paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="503f3-292">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-293">`s` パラメーターには、次の形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="503f3-293">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="503f3-294">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-294">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="503f3-295">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="503f3-295">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="503f3-296">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="503f3-296">The following table describes each element.</span></span>  
  
|<span data-ttu-id="503f3-297">要素</span><span class="sxs-lookup"><span data-stu-id="503f3-297">Element</span></span>|<span data-ttu-id="503f3-298">説明</span><span class="sxs-lookup"><span data-stu-id="503f3-298">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="503f3-299">ws</span><span class="sxs-lookup"><span data-stu-id="503f3-299">ws</span></span>|<span data-ttu-id="503f3-300">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="503f3-300">An optional white space.</span></span>|  
|<span data-ttu-id="503f3-301">sign</span><span class="sxs-lookup"><span data-stu-id="503f3-301">sign</span></span>|<span data-ttu-id="503f3-302">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="503f3-302">An optional sign.</span></span>|  
|<span data-ttu-id="503f3-303">数字</span><span class="sxs-lookup"><span data-stu-id="503f3-303">digits</span></span>|<span data-ttu-id="503f3-304">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="503f3-304">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="503f3-305">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-305">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="503f3-306">10進数に加えて、先頭と末尾のスペースだけでなく先頭の符号を `s`に使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-306">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed in `s`.</span></span> <span data-ttu-id="503f3-307">`s`に表示されるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="503f3-307">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="503f3-308">`provider` パラメーターは、<xref:System.Globalization.NumberFormatInfo> オブジェクトを取得する <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-308">The `provider` parameter is an <xref:System.IFormatProvider> implementation that obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="503f3-309"><xref:System.Globalization.NumberFormatInfo> は、`s`の形式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="503f3-309">The <xref:System.Globalization.NumberFormatInfo> provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="503f3-310">`provider` が `null`場合は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-310">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-311">次の例では、<xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用して <xref:System.Int16> 値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="503f3-311">The following example parses string representations of <xref:System.Int16> values with the <xref:System.Int16.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Int16.Parse#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse4.cpp#4)]
 [!code-csharp[System.Int16.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#4)]
 [!code-vb[System.Int16.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="503f3-312"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="503f3-312"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="503f3-313"><paramref name="s" /> は正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-313"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="503f3-314"><paramref name="s" /> は、<see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="503f3-314"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int16.ToString" />
        <altmember cref="Overload:System.Int16.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="503f3-315">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="503f3-315">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Short" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static short Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int16" Usage="System.int16.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="503f3-316">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="503f3-316">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="503f3-317"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="503f3-317">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="503f3-318">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="503f3-318">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="503f3-319"><see cref="T:System.IFormatProvider" /> に関するカルチャに固有の書式設定情報を提供する <paramref name="s" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-319">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="503f3-320">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-320">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="503f3-321"><paramref name="s" /> で指定した数値と等しい 16 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="503f3-321">A 16-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-322">`style` パラメーターは、解析操作を成功させるために `s` パラメーターで使用できるスタイル要素 (空白や正符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="503f3-322">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="503f3-323"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-323">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="503f3-324">`style`の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-324">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="503f3-325">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-325">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="503f3-326">または、`style` が <xref:System.Globalization.NumberStyles.AllowHexSpecifier>を含む場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="503f3-326">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="503f3-327">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-327">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="503f3-328">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="503f3-328">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="503f3-329">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="503f3-329">The following table describes each element.</span></span>  
  
|<span data-ttu-id="503f3-330">要素</span><span class="sxs-lookup"><span data-stu-id="503f3-330">Element</span></span>|<span data-ttu-id="503f3-331">説明</span><span class="sxs-lookup"><span data-stu-id="503f3-331">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="503f3-332">*ws*</span><span class="sxs-lookup"><span data-stu-id="503f3-332">*ws*</span></span>|<span data-ttu-id="503f3-333">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="503f3-333">Optional white space.</span></span> <span data-ttu-id="503f3-334"><xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に空白が表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-334">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="503f3-335">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-335">A culture-specific currency symbol.</span></span> <span data-ttu-id="503f3-336">文字列内での位置は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> および <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-336">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="503f3-337">現在のカルチャの通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-337">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-338">*sign*</span><span class="sxs-lookup"><span data-stu-id="503f3-338">*sign*</span></span>|<span data-ttu-id="503f3-339">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="503f3-339">An optional sign.</span></span> <span data-ttu-id="503f3-340"><xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> フラグが `style` に含まれている場合、`s` の先頭に符号が表示されます。また、`style` に <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> フラグが含まれている場合は、`s` の最後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-340">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="503f3-341"><xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> フラグが `style` 含まれている場合は、`s` でかっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-341">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-342">*digits*</span><span class="sxs-lookup"><span data-stu-id="503f3-342">*digits*</span></span>|<span data-ttu-id="503f3-343">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="503f3-343">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="503f3-344">*、*</span><span class="sxs-lookup"><span data-stu-id="503f3-344">*,*</span></span>|<span data-ttu-id="503f3-345">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-345">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="503f3-346">現在のカルチャの桁区切り記号は、`style` に <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-346">The current culture's thousands separator symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-347">*.*</span><span class="sxs-lookup"><span data-stu-id="503f3-347">*.*</span></span>|<span data-ttu-id="503f3-348">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-348">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="503f3-349">現在のカルチャの小数点の記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-349">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-350">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="503f3-350">*fractional_digits*</span></span>|<span data-ttu-id="503f3-351">0の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="503f3-351">A sequence of the 0 digit.</span></span> <span data-ttu-id="503f3-352">`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合、`s` に小数点以下の桁数が表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-352">Fractional digits can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="503f3-353">*Fractional_digits*に0以外の数字が含まれている場合、メソッドは <xref:System.OverflowException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="503f3-353">If any digit other than 0 appears in *fractional_digits*, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="503f3-354">*e*</span><span class="sxs-lookup"><span data-stu-id="503f3-354">*e*</span></span>|<span data-ttu-id="503f3-355">"E" または "E" 文字。 `s` を指数表記で表すことができることを示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-355">The 'e' or 'E' character, which indicates that `s` can be represented in exponential notation.</span></span> <span data-ttu-id="503f3-356">`s` パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-356">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="503f3-357">ただし、`s` パラメーターは、<xref:System.Int16> データ型の範囲の数値を表す必要があり、0以外の小数部分を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="503f3-357">However, the `s` parameter must represent a number in the range of the <xref:System.Int16> data type and cannot have a non-zero fractional component.</span></span>|  
|<span data-ttu-id="503f3-358">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="503f3-358">*hexdigits*</span></span>|<span data-ttu-id="503f3-359">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="503f3-359">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="503f3-360">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-360">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="503f3-361">*数字*のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-361">A string with *digits* only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="503f3-362">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="503f3-362">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="503f3-363">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="503f3-363">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="503f3-364">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="503f3-364">Non-composite NumberStyles values</span></span>|<span data-ttu-id="503f3-365">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="503f3-365">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="503f3-366">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="503f3-366">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="503f3-367">*.*</span><span class="sxs-lookup"><span data-stu-id="503f3-367">The *.*</span></span> <span data-ttu-id="503f3-368">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-368">and *fractional_digits* elements.</span></span> <span data-ttu-id="503f3-369">ただし、 *fractional_digits*は1桁以上の0桁で構成する必要があります。または、<xref:System.OverflowException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-369">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="503f3-370">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="503f3-370">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="503f3-371">`s`の先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-371">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="503f3-372">`s`の末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-372">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="503f3-373">*数字*の前に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-373">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="503f3-374">*数字*の後に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-374">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="503f3-375">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-375">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="503f3-376">要素 *、* 要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-376">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="503f3-377">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-377">The *$* element.</span></span>|  
  
 <span data-ttu-id="503f3-378"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` は、プレフィックスのない16進数値の文字列形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-378">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be the string representation of a hexadecimal value without a prefix.</span></span> <span data-ttu-id="503f3-379">たとえば、"9AF3" は正常に解析されますが、"0x9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="503f3-379">For example, "9AF3" parses successfully, but "0x9AF3" does not..</span></span> <span data-ttu-id="503f3-380">`style` に存在できる他のフラグは <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="503f3-380">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="503f3-381">(<xref:System.Globalization.NumberStyles> 列挙体には、2つの空白フラグを含む複合数値スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>があります)。</span><span class="sxs-lookup"><span data-stu-id="503f3-381">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="503f3-382">`provider` パラメーターは、<xref:System.IFormatProvider.GetFormat%2A> メソッドが <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得する <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-382">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method obtains a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="503f3-383"><xref:System.Globalization.NumberFormatInfo> オブジェクトは、`s`の形式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="503f3-383">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="503f3-384">`provider` が `null`場合は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-384">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-385">次の例では、さまざまな `style` パラメーターと `provider` パラメーターを使用して、<xref:System.Int16> 値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="503f3-385">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int16> values.</span></span>  
  
 [!code-cpp[System.Int16.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int16.Parse/cpp/parse3.cpp#3)]
 [!code-csharp[System.Int16.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.Parse/cs/Parse.cs#3)]
 [!code-vb[System.Int16.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.Parse/vb/Parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="503f3-386"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="503f3-386"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="503f3-387"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-387"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="503f3-388">- または -</span><span class="sxs-lookup"><span data-stu-id="503f3-388">-or-</span></span> 
 <span data-ttu-id="503f3-389"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-389"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="503f3-390"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="503f3-390"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="503f3-391"><paramref name="s" /> は、<see cref="F:System.Int16.MinValue" /> 未満の数値か、<see cref="F:System.Int16.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="503f3-391"><paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span>  
  
<span data-ttu-id="503f3-392">- または -</span><span class="sxs-lookup"><span data-stu-id="503f3-392">-or-</span></span> 
 <span data-ttu-id="503f3-393"><paramref name="s" /> に 0 以外の小数の桁数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="503f3-393"><paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="503f3-394">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="503f3-394">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-395">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-395">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-396">このメンバーの説明については、<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-396">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-397">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-397"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-398">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-398">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-399">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-399">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-400">別の方法として、<xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-400">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-401">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-401">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-402">このメンバーの説明については、<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-402">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-403"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-403">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-404">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-404">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-405">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-405">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-406">別の方法として、<xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-406">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int16%29?displayProperty=nameWithType> method</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-407">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-407">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-408">このメンバーの説明については、<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-408">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-409"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-409">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-410">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-410">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-411">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-411">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-412">別の方法として、<xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-412">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-413">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-413">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-414">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="503f3-414">This conversion is not supported.</span></span> <span data-ttu-id="503f3-415">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-415">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-416">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="503f3-416">This conversion is not supported.</span></span> <span data-ttu-id="503f3-417">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="503f3-417">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="503f3-418">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="503f3-418">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-419">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-419">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-420">このメンバーの説明については、<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-420">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-421"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-421">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-422">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-422">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-423">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-423">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-424">別の方法として、<xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-424">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-425">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-425">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-426">このメンバーの説明については、<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-426">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-427"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-427">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-428">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-428">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-429">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-429">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-430">別の方法として、<xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-430">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-431">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-431">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-432">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-432">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-433">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-433">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-434">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-434">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-435">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-435">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-436">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-436">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-437">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-437">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-438"><see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-438">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-439">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-440">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-440">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-441">別の方法として、<xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-441">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-442">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-442">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-443">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-443">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-444"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-444">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-445">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-445">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-446">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-446">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-447">別の方法として、<xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-447">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-448">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-449">このメンバーの説明については、<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-449">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-450"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-450">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-451">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-451">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-452">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-452">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-453">別の方法として、<xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-453">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-454">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-455">このメンバーの説明については、<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-455">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-456"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-456">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-457">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-458">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-458">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-459">別の方法として、<xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-459">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="503f3-460">この <see cref="T:System.Int16" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="503f3-460">The type to which to convert this <see cref="T:System.Int16" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="503f3-461">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="503f3-461">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="503f3-462">このメンバーの説明については、<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-462">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-463"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-463">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-464">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-464">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-465">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-465">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-466">別の方法として、`static` (Visual Basic で`Shared`) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-466">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-467">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-467">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-468">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-468">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-469">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-469">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-470">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-470">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-471">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-471">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-472">別の方法として、<xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-472">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-473">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-473">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-474">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-474">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-475"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-475">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-476">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-476">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-477">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-477">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-478">別の方法として、<xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-478">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-479">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-479">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="503f3-480">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-480">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="503f3-481"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="503f3-481">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-482">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="503f3-483">これは、<xref:System.Int16> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-483">It can be used only when the <xref:System.Int16> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="503f3-484">別の方法として、<xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="503f3-484">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int16%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="503f3-485">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-485">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int16.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="503f3-486">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-486">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="503f3-487">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 までの一連の数字から構成される、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="503f3-487">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-488"><xref:System.Int16.ToString> メソッドは、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して、<xref:System.Int16> 値を既定値 ("G" または一般) 形式で書式設定します。</span><span class="sxs-lookup"><span data-stu-id="503f3-488">The <xref:System.Int16.ToString> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="503f3-489">別の形式またはカルチャを指定する場合は、次のように <xref:System.Int16.ToString%2A> メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="503f3-489">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="503f3-490">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="503f3-490">To use format</span></span>|<span data-ttu-id="503f3-491">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="503f3-491">For culture</span></span>|<span data-ttu-id="503f3-492">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="503f3-492">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="503f3-493">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="503f3-493">Default ("G") format</span></span>|<span data-ttu-id="503f3-494">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-494">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="503f3-495">特定の形式</span><span class="sxs-lookup"><span data-stu-id="503f3-495">A specific format</span></span>|<span data-ttu-id="503f3-496">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-496">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="503f3-497">特定の形式</span><span class="sxs-lookup"><span data-stu-id="503f3-497">A specific format</span></span>|<span data-ttu-id="503f3-498">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-498">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="503f3-499">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-499">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="503f3-500">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-500">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="503f3-501">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-501">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-502">次の例では、<xref:System.Int16.ToString> メソッドを使用して、<xref:System.Int16> 値の配列をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-502">The following example uses the <xref:System.Int16.ToString> method to display an array of <xref:System.Int16> values to the console.</span></span>  
  
 [!code-csharp[System.Int16.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Int16.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="503f3-503">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="503f3-503">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int16.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="503f3-504">カルチャ固有の書式情報を提供する <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-504">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="503f3-505">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-505">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="503f3-506"><paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="503f3-506">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-507"><xref:System.Int16.ToString%28System.IFormatProvider%29> メソッドは、指定されたカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して、<xref:System.Int16> 値を既定値 ("G" または一般) 形式で書式設定します。</span><span class="sxs-lookup"><span data-stu-id="503f3-507">The <xref:System.Int16.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int16> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="503f3-508">別の形式または現在のカルチャを指定する場合は、次のように <xref:System.Int16.ToString%2A> メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="503f3-508">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="503f3-509">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="503f3-509">To use format</span></span>|<span data-ttu-id="503f3-510">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="503f3-510">For culture</span></span>|<span data-ttu-id="503f3-511">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="503f3-511">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="503f3-512">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="503f3-512">Default ("G") format</span></span>|<span data-ttu-id="503f3-513">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-513">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="503f3-514">特定の形式</span><span class="sxs-lookup"><span data-stu-id="503f3-514">A specific format</span></span>|<span data-ttu-id="503f3-515">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-515">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
|<span data-ttu-id="503f3-516">特定の形式</span><span class="sxs-lookup"><span data-stu-id="503f3-516">A specific format</span></span>|<span data-ttu-id="503f3-517">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-517">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="503f3-518">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-518">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="503f3-519">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-519">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="503f3-520">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-520">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="503f3-521">`provider` パラメーターは、<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドが <xref:System.Globalization.NumberFormatInfo> オブジェクトを返す <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-521">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="503f3-522">通常、`provider` は <xref:System.Globalization.NumberFormatInfo> オブジェクトまたは <xref:System.Globalization.CultureInfo> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="503f3-522">Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="503f3-523"><xref:System.Globalization.NumberFormatInfo> オブジェクトは、このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="503f3-523">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="503f3-524">`provider` が `null`場合、このインスタンスは、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトで書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-524">If `provider` is `null`, this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-525">次の例では、<xref:System.Int16> 値の配列を反復処理し、異なる書式プロバイダーで <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出すことによって、各値をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-525">The following example iterates an array of <xref:System.Int16> values and displays each of them to the console by calling the <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method with different format providers.</span></span> <span data-ttu-id="503f3-526">既定の "G" 書式指定子によって定義された単純な書式設定により、<xref:System.Int16> 値ごとに生成される書式設定された文字列は、`provider` パラメーターの値に関係なく同一になります。</span><span class="sxs-lookup"><span data-stu-id="503f3-526">Because of the simple formatting defined by the default "G" format specifier, the formatted strings produced for each <xref:System.Int16> value are identical regardless of the value of the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Int16.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#2)]
 [!code-vb[System.Int16.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="503f3-527">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="503f3-527">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int16.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="503f3-528">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="503f3-528">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="503f3-529">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-529">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="503f3-530"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="503f3-530">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-531"><xref:System.Int16.ToString%28System.String%29> メソッドは、現在のカルチャの規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して、指定した書式で <xref:System.Int16> 値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="503f3-531">The <xref:System.Int16.ToString%28System.String%29> method formats an <xref:System.Int16> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="503f3-532">既定の形式 ("G" または一般) を使用する場合、または別のカルチャを指定する場合は、次のように、<xref:System.Int16.ToString%2A> メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="503f3-532">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="503f3-533">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="503f3-533">To use format</span></span>|<span data-ttu-id="503f3-534">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="503f3-534">For culture</span></span>|<span data-ttu-id="503f3-535">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="503f3-535">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="503f3-536">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="503f3-536">Default ("G") format</span></span>|<span data-ttu-id="503f3-537">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-537">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="503f3-538">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="503f3-538">Default ("G") format</span></span>|<span data-ttu-id="503f3-539">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-539">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="503f3-540">特定の形式</span><span class="sxs-lookup"><span data-stu-id="503f3-540">A specific format</span></span>|<span data-ttu-id="503f3-541">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-541">A specific culture</span></span>|<xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="503f3-542">`format` パラメーターには、標準またはカスタムの数値書式指定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-542">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="503f3-543">すべてのカスタム数値書式指定文字と同様に、"R" (または "r") 以外のすべての標準の数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-543">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="503f3-544">`format` が `null` または空の文字列の場合、このインスタンスの戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-544">If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="503f3-545">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-545">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="503f3-546">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-546">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="503f3-547">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-547">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="503f3-548">このインスタンスの戻り値は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-548">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-549">次の例では、2つの <xref:System.Int16> 値を初期化し、サポートされている各標準書式指定文字列といくつかのカスタム書式指定文字列を使用してコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-549">The following example initializes two <xref:System.Int16> values and displays them to the console using each of the supported standard format strings and several custom format strings.</span></span> <span data-ttu-id="503f3-550">この例は、現在のカルチャとして en-us を使用して実行されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-550">The example is run with en-US as the current culture.</span></span>  
  
 [!code-csharp[System.Int16.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Int16.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="503f3-551">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="503f3-551">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="503f3-552">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="503f3-552">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="503f3-553">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="503f3-553">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="503f3-554">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="503f3-554">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int16.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="503f3-555">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="503f3-555">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="503f3-556">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="503f3-556">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="503f3-557">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-557">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="503f3-558"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="503f3-558">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-559"><xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29> メソッドは、指定されたカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して、指定された書式で <xref:System.Int16> 値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="503f3-559">The <xref:System.Int16.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int16> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="503f3-560">既定の書式設定またはカルチャ設定を使用する場合は、次のように、<xref:System.Int16.ToString%2A> メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="503f3-560">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int16.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="503f3-561">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="503f3-561">To use format</span></span>|<span data-ttu-id="503f3-562">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="503f3-562">For culture</span></span>|<span data-ttu-id="503f3-563">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="503f3-563">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="503f3-564">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="503f3-564">Default ("G") format</span></span>|<span data-ttu-id="503f3-565">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-565">Default (current) culture</span></span>|<xref:System.Int16.ToString>|  
|<span data-ttu-id="503f3-566">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="503f3-566">Default ("G") format</span></span>|<span data-ttu-id="503f3-567">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-567">A specific culture</span></span>|<xref:System.Int16.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="503f3-568">特定の形式</span><span class="sxs-lookup"><span data-stu-id="503f3-568">A specific format</span></span>|<span data-ttu-id="503f3-569">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="503f3-569">Default (current) culture</span></span>|<xref:System.Int16.ToString%28System.String%29>|  
  
 <span data-ttu-id="503f3-570">`format` パラメーターには、標準またはカスタムの数値書式指定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-570">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="503f3-571">すべてのカスタム数値書式指定文字と同様に、"R" (または "r") 以外のすべての標準の数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-571">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="503f3-572">`format` が `null` または空の文字列 ("") の場合、このメソッドによって返される文字列は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-572">If `format` is `null` or an empty string (""), the string returned by this method is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="503f3-573">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-573">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="503f3-574">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-574">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="503f3-575">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-575">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="503f3-576">`provider` パラメーターは、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="503f3-576">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="503f3-577"><xref:System.IFormatProvider.GetFormat%2A> メソッドは、このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-577">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="503f3-578"><xref:System.IFormatProvider> を実装するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="503f3-578">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="503f3-579">書式規則を使用するカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="503f3-579">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="503f3-580">この値の特定の数値書式情報を格納している <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="503f3-580">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="503f3-581"><xref:System.IFormatProvider>を実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="503f3-581">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="503f3-582">`provider` が `null`場合、または `provider`から <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得できない場合、戻り値は現在のカルチャの <xref:System.Globalization.NumberFormatInfo> で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-582">If `provider` is `null`, or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-583">次の例では、4つの異なるカルチャでサポートされている各標準書式指定文字列を使用して、<xref:System.Int16> 値を表示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-583">The following example displays an <xref:System.Int16> value using each of the supported standard format strings in four different cultures.</span></span>  
  
 [!code-csharp[System.Int16.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Int16.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="503f3-584">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="503f3-584">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="503f3-585">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="503f3-585">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="503f3-586">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="503f3-586">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="503f3-587">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="503f3-587">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="503f3-588">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="503f3-588">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="503f3-589">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="503f3-589">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int16.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="503f3-590">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-590">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="503f3-591">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-591">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Int16.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * int16 -&gt; bool" Usage="System.int16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int16" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * int16 -&gt; bool" Usage="System.int16.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int16" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="503f3-592">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="503f3-592">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="503f3-593">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 16 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="503f3-593">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="503f3-594"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="503f3-594">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span> <span data-ttu-id="503f3-595">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-595">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="503f3-596">数値の文字列形式を、それと等価な 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-596">Converts the string representation of a number to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="503f3-597">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-597">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="503f3-598"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-598"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-599"><xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> メソッドは、解析された <xref:System.Int16> 値を返すのではなく、解析操作が成功したかどうかを示すブール値を返すことによって、<xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> メソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="503f3-599">The <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="503f3-600">これにより、`s` が無効で、正常に解析できない場合に、例外処理を使用して <xref:System.FormatException> をテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="503f3-600">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="503f3-601">`s` パラメーターは、次の形式の数値の文字列形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-601">The `s` parameter should be the string representation of a number in the form:</span></span>  
  
 <span data-ttu-id="503f3-602">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-602">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="503f3-603">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="503f3-603">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="503f3-604">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="503f3-604">The following table describes each element.</span></span>  
  
|<span data-ttu-id="503f3-605">要素</span><span class="sxs-lookup"><span data-stu-id="503f3-605">Element</span></span>|<span data-ttu-id="503f3-606">説明</span><span class="sxs-lookup"><span data-stu-id="503f3-606">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="503f3-607">*ws*</span><span class="sxs-lookup"><span data-stu-id="503f3-607">*ws*</span></span>|<span data-ttu-id="503f3-608">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="503f3-608">Optional white space.</span></span>|  
|<span data-ttu-id="503f3-609">*sign*</span><span class="sxs-lookup"><span data-stu-id="503f3-609">*sign*</span></span>|<span data-ttu-id="503f3-610">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="503f3-610">An optional sign.</span></span>|  
|<span data-ttu-id="503f3-611">*digits*</span><span class="sxs-lookup"><span data-stu-id="503f3-611">*digits*</span></span>|<span data-ttu-id="503f3-612">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="503f3-612">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="503f3-613">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-613">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="503f3-614">10進数の数字に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="503f3-614">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="503f3-615">`s`に表示されるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、<xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="503f3-615">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="503f3-616">`s` パラメーターは、現在のシステムカルチャに対して初期化された <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-616">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="503f3-617">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="503f3-617">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="503f3-618"><xref:System.Int16.TryParse%2A> メソッドのこのオーバーロードは、`s` パラメーター内のすべての数字を10進数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="503f3-618">This overload of the <xref:System.Int16.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="503f3-619">16進数の文字列形式を解析するには、<xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> のオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="503f3-619">To parse the string representation of a hexadecimal number, call the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-620">次の例では、さまざまな文字列値を指定して <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="503f3-620">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int16.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="503f3-621">この例では、<xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29> メソッドによって変換できない文字列の一部を次に示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-621">Some of the strings that the <xref:System.Int16.TryParse%28System.String%2CSystem.Int16%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="503f3-622">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="503f3-622">"9432.0".</span></span> <span data-ttu-id="503f3-623">文字列に小数点の区切り文字を含めることができないため、変換に失敗します。整数の数字のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-623">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="503f3-624">"16,667".</span><span class="sxs-lookup"><span data-stu-id="503f3-624">"16,667".</span></span> <span data-ttu-id="503f3-625">文字列にはグループ区切り記号を含めることができないため、変換に失敗します。整数の数字のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-625">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="503f3-626">"(100)".</span><span class="sxs-lookup"><span data-stu-id="503f3-626">"(100)".</span></span> <span data-ttu-id="503f3-627">現在のカルチャの <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> と <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> のプロパティで定義されているもの以外の負の符号を文字列に含めることはできないため、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="503f3-627">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="503f3-628">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="503f3-628">"01FA".</span></span> <span data-ttu-id="503f3-629">文字列に16進数の数字を含めることができないため、変換に失敗します。10進数のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-629">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int16.Parse(System.String)" />
        <altmember cref="M:System.Int16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="503f3-630">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="503f3-630">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="503f3-631">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="503f3-631">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="503f3-632">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="503f3-632">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * int16 -&gt; bool" Usage="System.int16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int16" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out short result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int16&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] short % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * int16 -&gt; bool" Usage="System.int16.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int16" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="503f3-633">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="503f3-633">A string containing a number to convert.</span></span> <span data-ttu-id="503f3-634">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-634">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="503f3-635"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="503f3-635">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="503f3-636">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="503f3-636">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="503f3-637"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="503f3-637">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="503f3-638">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 16 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="503f3-638">When this method returns, contains the 16-bit signed integer value equivalent to the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="503f3-639"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.Int16.MinValue" /> より小さいか <see cref="F:System.Int16.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="503f3-639">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span></span> <span data-ttu-id="503f3-640">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="503f3-640">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="503f3-641">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 16 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="503f3-641">Converts the string representation of a number in a specified style and culture-specific format to its 16-bit signed integer equivalent.</span></span> <span data-ttu-id="503f3-642">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-642">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="503f3-643"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="503f3-643"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="503f3-644"><xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> メソッドは、解析された <xref:System.Int16> 値を返すのではなく、解析操作が成功したかどうかを示すブール値を返すことによって、<xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="503f3-644">The <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method differs from the <xref:System.Int16.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed <xref:System.Int16> value.</span></span> <span data-ttu-id="503f3-645">これにより、`s` が無効で、正常に解析できない場合に、例外処理を使用して <xref:System.FormatException> をテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="503f3-645">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="503f3-646">`style` パラメーターは、解析操作を成功させるために `s` パラメーターで使用できるスタイル要素 (空白、正または負の符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="503f3-646">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="503f3-647"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-647">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="503f3-648">Style の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-648">Depending on the value of style, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="503f3-649">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] 数字] [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-649">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="503f3-650">または、`style` パラメーターに <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>が含まれている場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="503f3-650">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="503f3-651">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="503f3-651">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="503f3-652">角かっこ ([および]) 内の項目は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="503f3-652">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="503f3-653">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="503f3-653">The following table describes each element.</span></span>  
  
|<span data-ttu-id="503f3-654">要素</span><span class="sxs-lookup"><span data-stu-id="503f3-654">Element</span></span>|<span data-ttu-id="503f3-655">説明</span><span class="sxs-lookup"><span data-stu-id="503f3-655">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="503f3-656">*ws*</span><span class="sxs-lookup"><span data-stu-id="503f3-656">*ws*</span></span>|<span data-ttu-id="503f3-657">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="503f3-657">Optional white space.</span></span> <span data-ttu-id="503f3-658"><xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に空白が表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-658">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="503f3-659">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-659">A culture-specific currency symbol.</span></span> <span data-ttu-id="503f3-660">文字列内の位置は、`provider` パラメーターの <xref:System.IFormatProvider.GetFormat%2A> メソッドによって返される <xref:System.Globalization.NumberFormatInfo> オブジェクトの <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-660">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="503f3-661">通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-661">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-662">*sign*</span><span class="sxs-lookup"><span data-stu-id="503f3-662">*sign*</span></span>|<span data-ttu-id="503f3-663">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="503f3-663">An optional sign.</span></span>|  
|<span data-ttu-id="503f3-664">*digits*</span><span class="sxs-lookup"><span data-stu-id="503f3-664">*digits*</span></span>|<span data-ttu-id="503f3-665">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="503f3-665">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="503f3-666">*、*</span><span class="sxs-lookup"><span data-stu-id="503f3-666">*,*</span></span>|<span data-ttu-id="503f3-667">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-667">A culture-specific thousands separator.</span></span> <span data-ttu-id="503f3-668">`provider` で指定されたカルチャの桁区切り記号は、`style` に <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-668">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-669">*.*</span><span class="sxs-lookup"><span data-stu-id="503f3-669">*.*</span></span>|<span data-ttu-id="503f3-670">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="503f3-670">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="503f3-671">`provider` によって指定されたカルチャの小数点記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-671">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-672">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="503f3-672">*fractional_digits*</span></span>|<span data-ttu-id="503f3-673">数字0の1回以上の出現。</span><span class="sxs-lookup"><span data-stu-id="503f3-673">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="503f3-674">小数点以下の桁数は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合にのみ `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-674">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-675">*e*</span><span class="sxs-lookup"><span data-stu-id="503f3-675">*e*</span></span>|<span data-ttu-id="503f3-676">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="503f3-676">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="503f3-677">`s` パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-677">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="503f3-678">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="503f3-678">*hexdigits*</span></span>|<span data-ttu-id="503f3-679">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="503f3-679">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="503f3-680">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-680">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="503f3-681">10進数の数字のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> フラグに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-681">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="503f3-682">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="503f3-682">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="503f3-683">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="503f3-683">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="503f3-684">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="503f3-684">Non-composite NumberStyles values</span></span>|<span data-ttu-id="503f3-685">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="503f3-685">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="503f3-686">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="503f3-686">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="503f3-687">*.*</span><span class="sxs-lookup"><span data-stu-id="503f3-687">The *.*</span></span> <span data-ttu-id="503f3-688">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-688">and *fractional_digits* elements.</span></span> <span data-ttu-id="503f3-689">ただし、 *fractional_digits*は1桁以上の0桁で構成されている必要があります。それ以外の場合、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-689">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="503f3-690">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="503f3-690">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="503f3-691">`s` が指数表記の数値を表す場合、0以外の小数部分を含まない <xref:System.Int16> データ型の範囲内の整数を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-691">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int16> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="503f3-692">*の先頭*にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-692">The *ws* element at the beginning of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="503f3-693">*の末尾*にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-693">The *ws* element at the end of *s*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="503f3-694">*数字*の前に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="503f3-694">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="503f3-695">*数字*の後に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-695">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="503f3-696">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-696">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="503f3-697">要素 *、* 要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-697">The *,* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="503f3-698">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-698">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="503f3-699">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-699">All elements.</span></span> <span data-ttu-id="503f3-700">*S*パラメーターは、16進数または指数表記の数値を表すことができません。</span><span class="sxs-lookup"><span data-stu-id="503f3-700">The *s* parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="503f3-701">`s`の先頭または末尾にある*ws* *要素、`s`の先頭にある*、および *。*</span><span class="sxs-lookup"><span data-stu-id="503f3-701">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*</span></span> <span data-ttu-id="503f3-702">表す.</span><span class="sxs-lookup"><span data-stu-id="503f3-702">symbol.</span></span> <span data-ttu-id="503f3-703">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="503f3-703">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="503f3-704">*Ws*、 *sign*、桁区切り記号 (*、*)、および小数点 (*.*) の要素。</span><span class="sxs-lookup"><span data-stu-id="503f3-704">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="503f3-705">`s` を除くすべてのスタイルは、16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="503f3-705">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="503f3-706"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="503f3-706">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="503f3-707">たとえば、"9AF3" は正常に解析されますが、"0x9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="503f3-707">For example, "9AF3" parses successfully, but "0x9AF3" does not.</span></span> <span data-ttu-id="503f3-708">`style` に存在できる他のフラグは <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="503f3-708">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="503f3-709">(<xref:System.Globalization.NumberStyles> 列挙体には、2つの空白フラグを含む複合スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>があります)。</span><span class="sxs-lookup"><span data-stu-id="503f3-709">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="503f3-710">`provider` パラメーターは、<xref:System.Globalization.CultureInfo> オブジェクトや <xref:System.Globalization.NumberFormatInfo> オブジェクトなどの <xref:System.IFormatProvider> の実装で、<xref:System.IFormatProvider.GetFormat%2A> メソッドが <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="503f3-710">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="503f3-711"><xref:System.Globalization.NumberFormatInfo> オブジェクトは、`s`の形式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="503f3-711">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="503f3-712">`provider` が `null`場合は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="503f3-712">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="503f3-713">次の例では、さまざまな文字列値を指定して <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="503f3-713">The following example calls the <xref:System.Int16.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int16%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int16.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int16.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int16.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int16.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="503f3-714"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-714"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="503f3-715">- または -</span><span class="sxs-lookup"><span data-stu-id="503f3-715">-or-</span></span> 
 <span data-ttu-id="503f3-716"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="503f3-716"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="Overload:System.Int16.Parse" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="M:System.Int16.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="503f3-717">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="503f3-717">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
