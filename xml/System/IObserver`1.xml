<Type Name="IObserver&lt;T&gt;" FullName="System.IObserver&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc18739af56aa6854fa37ffce4e9ef9e780041cf" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78684405" /></Metadata><TypeSignature Language="C#" Value="public interface IObserver&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObserver`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObserver`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObserver(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObserver" />
  <TypeSignature Language="F#" Value="type IObserver&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="9633b-101">通知情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9633b-101">The object that provides notification information.</span></span></typeparam>
    <summary><span data-ttu-id="9633b-102">プッシュ ベースの通知を受信するメカニズムを定義します。</span><span class="sxs-lookup"><span data-stu-id="9633b-102">Provides a mechanism for receiving push-based notifications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9633b-103"><xref:System.IObserver%601> インターフェイスと <xref:System.IObservable%601> インターフェイスは、オブザーバーデザインパターンとも呼ばれる、プッシュベースの通知の一般化されたメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="9633b-103">The <xref:System.IObserver%601> and <xref:System.IObservable%601> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern.</span></span> <span data-ttu-id="9633b-104"><xref:System.IObservable%601> インターフェイスは、通知を送信するクラス (プロバイダー) を表します。<xref:System.IObserver%601> インターフェイスは、それを受け取るクラス (オブザーバー) を表します。</span><span class="sxs-lookup"><span data-stu-id="9633b-104">The <xref:System.IObservable%601> interface represents the class that sends notifications (the provider); the <xref:System.IObserver%601> interface represents the class that receives them (the observer).</span></span> <span data-ttu-id="9633b-105">`T` は、通知情報を提供するクラスを表します。</span><span class="sxs-lookup"><span data-stu-id="9633b-105">`T` represents the class that provides the notification information.</span></span>  
  
 <span data-ttu-id="9633b-106"><xref:System.IObserver%601> 実装は、プロバイダーのインスタンスをプロバイダーの <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドに渡すことによって、プロバイダー (<xref:System.IObservable%601> の実装) からの通知を受け取るように配置されます。</span><span class="sxs-lookup"><span data-stu-id="9633b-106">An <xref:System.IObserver%601> implementation arranges to receive notifications from a provider (an <xref:System.IObservable%601> implementation) by passing an instance of itself to the provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9633b-107">このメソッドは、プロバイダーが通知の送信を終了する前にオブザーバーの登録を解除するために使用できる <xref:System.IDisposable> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9633b-107">This method returns an <xref:System.IDisposable> object that can be used to unsubscribe the observer before the provider finishes sending notifications.</span></span>  
  
 <span data-ttu-id="9633b-108"><xref:System.IObserver%601> インターフェイスは、オブザーバーが実装する必要がある次の3つのメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="9633b-108">The <xref:System.IObserver%601> interface defines the following three methods that the observer must implement:</span></span>  
  
-   <span data-ttu-id="9633b-109"><xref:System.IObserver%601.OnNext%2A> メソッド。このメソッドは通常、オブザーバーに新しいデータまたは状態情報を提供するためにプロバイダーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9633b-109">The <xref:System.IObserver%601.OnNext%2A> method, which is typically called by the provider to supply the observer with new data or state information.</span></span>  
  
-   <span data-ttu-id="9633b-110"><xref:System.IObserver%601.OnError%2A> メソッド。通常、データが使用できない、アクセスできない、または破損していることを示すためにプロバイダーによって呼び出されます。または、プロバイダーによって他のエラー状態が発生したことを示します。</span><span class="sxs-lookup"><span data-stu-id="9633b-110">The <xref:System.IObserver%601.OnError%2A> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.</span></span>  
  
-   <span data-ttu-id="9633b-111"><xref:System.IObserver%601.OnCompleted%2A> メソッド。これは通常、オブザーバーへの通知の送信が完了したことを示すためにプロバイダーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9633b-111">The <xref:System.IObserver%601.OnCompleted%2A> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9633b-112">次の例は、オブザーバーデザインパターンを示しています。</span><span class="sxs-lookup"><span data-stu-id="9633b-112">The following example illustrates the observer design pattern.</span></span> <span data-ttu-id="9633b-113">緯度と経度の情報を含む `Location` クラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="9633b-113">It defines a `Location` class that contains latitude and longitude information.</span></span>  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 <span data-ttu-id="9633b-114">`LocationReporter` クラスは、<xref:System.IObserver%601> の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="9633b-114">The `LocationReporter` class provides the <xref:System.IObserver%601> implementation.</span></span> <span data-ttu-id="9633b-115">現在の場所に関する情報がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="9633b-115">It displays information about the current location to the console.</span></span> <span data-ttu-id="9633b-116">コンストラクターには `name` パラメーターが含まれています。これにより、`LocationReporter` インスタンスはその文字列の出力で自身を識別できます。</span><span class="sxs-lookup"><span data-stu-id="9633b-116">Its constructor includes a `name` parameter, which allows the `LocationReporter` instance to identify itself in its string output.</span></span> <span data-ttu-id="9633b-117">また、プロバイダーの <xref:System.IObservable%601.Subscribe%2A> メソッドの呼び出しをラップする `Subscribe` メソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="9633b-117">It also includes a `Subscribe` method, which wraps a call to the provider's <xref:System.IObservable%601.Subscribe%2A> method.</span></span> <span data-ttu-id="9633b-118">これにより、メソッドは、返された <xref:System.IDisposable> 参照をプライベート変数に割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="9633b-118">This enables the method to assign the returned <xref:System.IDisposable> reference to a private variable.</span></span> <span data-ttu-id="9633b-119">`LocationReporter` クラスには、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドによって返されるオブジェクトの <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> メソッドを呼び出す `Unsubscribe` メソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="9633b-119">The `LocationReporter` class also includes an `Unsubscribe` method, which calls the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method of the object returned by the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9633b-120">次のコードでは、`LocationReporter` クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="9633b-120">The following code defines the `LocationReporter` class.</span></span>  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 <span data-ttu-id="9633b-121">`LocationTracker` クラスは、<xref:System.IObservable%601> の実装を提供します。</span><span class="sxs-lookup"><span data-stu-id="9633b-121">The `LocationTracker` class provides the <xref:System.IObservable%601> implementation.</span></span> <span data-ttu-id="9633b-122">`TrackLocation` メソッドには、緯度と経度のデータを格納する null 許容の `Location` オブジェクトが渡されます。</span><span class="sxs-lookup"><span data-stu-id="9633b-122">Its `TrackLocation` method is passed a nullable `Location` object that contains the latitude and longitude data.</span></span> <span data-ttu-id="9633b-123">`Location` 値が `null`でない場合、`TrackLocation` メソッドは各オブザーバーの <xref:System.IObserver%601.OnNext%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="9633b-123">If the `Location` value is not `null`, the `TrackLocation` method calls the <xref:System.IObserver%601.OnNext%2A> method of each observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 <span data-ttu-id="9633b-124">`Location` 値が `null`の場合、`TrackLocation` メソッドによって `LocationNotFoundException` オブジェクトがインスタンス化されます。これを次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="9633b-124">If the `Location` value is `null`, the `TrackLocation` method instantiates a `LocationNotFoundException` object, which is shown in the following example.</span></span> <span data-ttu-id="9633b-125">次に、各オブザーバーの <xref:System.IObserver%601.OnError%2A> メソッドを呼び出し、`LocationNotFoundException` オブジェクトに渡します。</span><span class="sxs-lookup"><span data-stu-id="9633b-125">It then calls each observer's <xref:System.IObserver%601.OnError%2A> method and passes it the `LocationNotFoundException` object.</span></span> <span data-ttu-id="9633b-126">`LocationNotFoundException` は <xref:System.Exception> から派生しますが、新しいメンバーは追加されません。</span><span class="sxs-lookup"><span data-stu-id="9633b-126">Note that `LocationNotFoundException` derives from <xref:System.Exception> but does not add any new members.</span></span>  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 <span data-ttu-id="9633b-127">オブザーバーは、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドを呼び出すことによって `TrackLocation` オブジェクトから通知を受信するように登録します。これにより、オブザーバーオブジェクトへの参照がプライベートの汎用 <xref:System.Collections.Generic.List%601> オブジェクトに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="9633b-127">Observers register to receive notifications from a `TrackLocation` object by calling its <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, which assigns a reference to the observer object to a private generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="9633b-128">メソッドは `Unsubscriber` オブジェクトを返します。これは、オブザーバーが通知の受信を停止できるようにする <xref:System.IDisposable> の実装です。</span><span class="sxs-lookup"><span data-stu-id="9633b-128">The method returns an `Unsubscriber` object, which is an <xref:System.IDisposable> implementation that enables observers to stop receiving notifications.</span></span> <span data-ttu-id="9633b-129">`LocationTracker` クラスには、`EndTransmission` メソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="9633b-129">The `LocationTracker` class also includes an `EndTransmission` method.</span></span> <span data-ttu-id="9633b-130">これ以上の場所データが使用できない場合、メソッドは各オブザーバーの <xref:System.IObserver%601.OnCompleted%2A> メソッドを呼び出し、オブザーバーの内部リストをクリアします。</span><span class="sxs-lookup"><span data-stu-id="9633b-130">When no further location data is available, the method calls each observer's <xref:System.IObserver%601.OnCompleted%2A> method and then clears the internal list of observers.</span></span>  
  
 <span data-ttu-id="9633b-131">次のコードでは、プロバイダーとオブザーバーをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="9633b-131">The following code then instantiates the provider and the observer.</span></span>  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObservable`1" />
  </Docs>
  <Members>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : unit -&gt; unit" Usage="iObserver.OnCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9633b-132">プロバイダーでプッシュ ベースの通知の送信が完了したことをオブザーバーに通知します。</span><span class="sxs-lookup"><span data-stu-id="9633b-132">Notifies the observer that the provider has finished sending push-based notifications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9633b-133">オブザーバーの <xref:System.IObserver%601.OnCompleted%2A> 実装が呼び出されると、<xref:System.IObserver%601.OnCompleted%2A> メソッドは、必要に応じて、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドを呼び出したときにオブザーバーに返された <xref:System.IDisposable> オブジェクトの <xref:System.IDisposable.Dispose%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="9633b-133">When the observer's <xref:System.IObserver%601.OnCompleted%2A> implementation is called, the <xref:System.IObserver%601.OnCompleted%2A> method can optionally call the <xref:System.IDisposable.Dispose%2A> method of the <xref:System.IDisposable> object that was returned to the observer when it called the <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9633b-134">次の例は、緯度/経度追跡アプリケーションでの <xref:System.IObserver%601.OnCompleted%2A> メソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="9633b-134">The following example provides an implementation of the <xref:System.IObserver%601.OnCompleted%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="9633b-135">メソッドは、これ以上データが使用できないことを報告するだけで、プロバイダーの <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> の実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="9633b-135">The method simply reports that no further data is available and calls the provider's <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="9633b-136">完全な例については、<xref:System.IObserver%601> のトピックの「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9633b-136">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]
 [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnError (error As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnError(Exception ^ error);" />
      <MemberSignature Language="F#" Value="abstract member OnError : Exception -&gt; unit" Usage="iObserver.OnError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="9633b-137">エラーに関する追加情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9633b-137">An object that provides additional information about the error.</span></span></param>
        <summary><span data-ttu-id="9633b-138">プロバイダーでエラー状態が発生したことをオブザーバーに通知します。</span><span class="sxs-lookup"><span data-stu-id="9633b-138">Notifies the observer that the provider has experienced an error condition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9633b-139">`error` は <xref:System.Exception?displayProperty=nameWithType>から派生したオブジェクトですが、必ずしもプロバイダーによってスローされる例外を表すとは限りません。</span><span class="sxs-lookup"><span data-stu-id="9633b-139">Although `error` is an object that is derived from <xref:System.Exception?displayProperty=nameWithType>, it does not necessarily represent an exception that is thrown by the provider.</span></span> <span data-ttu-id="9633b-140">また、必要なデータや使用できないデータなど、ルーチンや予期されるエラー状態を表すこともできます。</span><span class="sxs-lookup"><span data-stu-id="9633b-140">It can also represent a routine or expected error condition, such as data that is missing or unavailable.</span></span> <span data-ttu-id="9633b-141"><xref:System.IObserver%601.OnError%2A> メソッドは情報として表示される必要があります。また、プロバイダーはオブザーバーにエラー処理を提供しないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="9633b-141">The <xref:System.IObserver%601.OnError%2A> method should be seen as informational, and the provider should not expect the observer to provide error handling.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9633b-142">次の例は、緯度/経度追跡アプリケーションでの <xref:System.IObserver%601.OnError%2A> メソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="9633b-142">The following example provides an implementation of the <xref:System.IObserver%601.OnError%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="9633b-143">このメソッドは、データが現在使用できないことを報告するだけです。パラメーターとして渡された <xref:System.Exception> オブジェクトを使用することはありません。</span><span class="sxs-lookup"><span data-stu-id="9633b-143">The method simply reports that data is currently unavailable; it does not make use of the <xref:System.Exception> object passed to it as a parameter.</span></span> <span data-ttu-id="9633b-144">完全な例については、<xref:System.IObserver%601> のトピックの「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9633b-144">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]
 [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c834760f-ddd4-417f-abb7-a059679d5b8c"><span data-ttu-id="9633b-145">オブサーバー デザイン パターンのベスト プラクティス</span><span class="sxs-lookup"><span data-stu-id="9633b-145">Observer Design Pattern Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnNext(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnNext (value As T)" />
      <MemberSignature Language="F#" Value="abstract member OnNext : 'T -&gt; unit" Usage="iObserver.OnNext value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9633b-146">現在の通知情報。</span><span class="sxs-lookup"><span data-stu-id="9633b-146">The current notification information.</span></span></param>
        <summary><span data-ttu-id="9633b-147">新しいデータをオブザーバーに提供します。</span><span class="sxs-lookup"><span data-stu-id="9633b-147">Provides the observer with new data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9633b-148">オブザーバーがプロバイダーの <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドを呼び出した後、プロバイダーはオブザーバーの <xref:System.IObserver%601.OnNext%2A> メソッドを呼び出して通知を提供します。</span><span class="sxs-lookup"><span data-stu-id="9633b-148">After an observer has called a provider's <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> method, the provider calls the observer's <xref:System.IObserver%601.OnNext%2A> method to provide notifications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9633b-149">次の例は、緯度/経度追跡アプリケーションでの <xref:System.IObserver%601.OnNext%2A> メソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="9633b-149">The following example provides an implementation of the <xref:System.IObserver%601.OnNext%2A> method in a latitude/longitude tracking application.</span></span> <span data-ttu-id="9633b-150">完全な例については、<xref:System.IObserver%601> のトピックの「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="9633b-150">See the Example section of the <xref:System.IObserver%601> topic for the complete example.</span></span>  
  
 [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]
 [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
