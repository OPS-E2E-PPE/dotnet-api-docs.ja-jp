<Type Name="IObserver&lt;T&gt;" FullName="System.IObserver&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ca9b792aac63db0a6049b5c039f3559c547183d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172792" /></Metadata><TypeSignature Language="C#" Value="public interface IObserver&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObserver`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObserver`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IObserver(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IObserver" />
  <TypeSignature Language="F#" Value="type IObserver&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">通知情報を提供するオブジェクト。</typeparam>
    <summary>プッシュ ベースの通知を受信するメカニズムを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IObserver%601> インターフェイスと <xref:System.IObservable%601> インターフェイスは、オブザーバーデザインパターンとも呼ばれる、プッシュベースの通知の一般化されたメカニズムを提供します。 <xref:System.IObservable%601> インターフェイスは、通知を送信するクラス (プロバイダー) を表します。<xref:System.IObserver%601> インターフェイスは、それを受け取るクラス (オブザーバー) を表します。 `T` は、通知情報を提供するクラスを表します。  
  
 <xref:System.IObserver%601> 実装は、プロバイダーのインスタンスをプロバイダーの <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドに渡すことによって、プロバイダー (<xref:System.IObservable%601> の実装) からの通知を受け取るように配置されます。 このメソッドは、プロバイダーが通知の送信を終了する前にオブザーバーの登録を解除するために使用できる <xref:System.IDisposable> オブジェクトを返します。  
  
 <xref:System.IObserver%601> インターフェイスは、オブザーバーが実装する必要がある次の3つのメソッドを定義します。  
  
-   <xref:System.IObserver%601.OnNext%2A> メソッド。このメソッドは通常、オブザーバーに新しいデータまたは状態情報を提供するためにプロバイダーによって呼び出されます。  
  
-   <xref:System.IObserver%601.OnError%2A> メソッド。通常、データが使用できない、アクセスできない、または破損していることを示すためにプロバイダーによって呼び出されます。または、プロバイダーによって他のエラー状態が発生したことを示します。  
  
-   <xref:System.IObserver%601.OnCompleted%2A> メソッド。これは通常、オブザーバーへの通知の送信が完了したことを示すためにプロバイダーによって呼び出されます。  
  
   
  
## Examples  
 次の例は、オブザーバーデザインパターンを示しています。 緯度と経度の情報を含む `Location` クラスを定義します。  
  
 [!code-csharp[System.IObserver.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 `LocationReporter` クラスは、<xref:System.IObserver%601> の実装を提供します。 現在の場所に関する情報がコンソールに表示されます。 コンストラクターには `name` パラメーターが含まれています。これにより、`LocationReporter` インスタンスはその文字列の出力で自身を識別できます。 また、プロバイダーの <xref:System.IObservable%601.Subscribe%2A> メソッドの呼び出しをラップする `Subscribe` メソッドも含まれています。 これにより、メソッドは、返された <xref:System.IDisposable> 参照をプライベート変数に割り当てることができます。 `LocationReporter` クラスには、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドによって返されるオブジェクトの <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> メソッドを呼び出す `Unsubscribe` メソッドも含まれています。 次のコードでは、`LocationReporter` クラスを定義しています。  
  
 [!code-csharp[System.IObserver.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 `LocationTracker` クラスは、<xref:System.IObservable%601> の実装を提供します。 `TrackLocation` メソッドには、緯度と経度のデータを格納する null 許容の `Location` オブジェクトが渡されます。 `Location` 値が `null`でない場合、`TrackLocation` メソッドは各オブザーバーの <xref:System.IObserver%601.OnNext%2A> メソッドを呼び出します。  
  
 [!code-csharp[System.IObserver.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 `Location` 値が `null`の場合、`TrackLocation` メソッドによって `LocationNotFoundException` オブジェクトがインスタンス化されます。これを次の例に示します。 次に、各オブザーバーの <xref:System.IObserver%601.OnError%2A> メソッドを呼び出し、`LocationNotFoundException` オブジェクトに渡します。 `LocationNotFoundException` は <xref:System.Exception> から派生しますが、新しいメンバーは追加されません。  
  
 [!code-csharp[System.IObserver.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 オブザーバーは、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドを呼び出すことによって `TrackLocation` オブジェクトから通知を受信するように登録します。これにより、オブザーバーオブジェクトへの参照がプライベートの汎用 <xref:System.Collections.Generic.List%601> オブジェクトに割り当てられます。 メソッドは `Unsubscriber` オブジェクトを返します。これは、オブザーバーが通知の受信を停止できるようにする <xref:System.IDisposable> の実装です。 `LocationTracker` クラスには、`EndTransmission` メソッドも含まれています。 これ以上の場所データが使用できない場合、メソッドは各オブザーバーの <xref:System.IObserver%601.OnCompleted%2A> メソッドを呼び出し、オブザーバーの内部リストをクリアします。  
  
 次のコードでは、プロバイダーとオブザーバーをインスタンス化します。  
  
 [!code-csharp[System.IObserver.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObservable`1" />
  </Docs>
  <Members>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="public void OnCompleted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCompleted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCompleted ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCompleted();" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : unit -&gt; unit" Usage="iObserver.OnCompleted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>プロバイダーでプッシュ ベースの通知の送信が完了したことをオブザーバーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブザーバーの <xref:System.IObserver%601.OnCompleted%2A> 実装が呼び出されると、<xref:System.IObserver%601.OnCompleted%2A> メソッドは、必要に応じて、<xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドを呼び出したときにオブザーバーに返された <xref:System.IDisposable> オブジェクトの <xref:System.IDisposable.Dispose%2A> メソッドを呼び出すことができます。  
  
   
  
## Examples  
 次の例は、緯度/経度追跡アプリケーションでの <xref:System.IObserver%601.OnCompleted%2A> メソッドの実装を示しています。 メソッドは、これ以上データが使用できないことを報告するだけで、プロバイダーの <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> の実装を呼び出します。 完全な例については、<xref:System.IObserver%601> のトピックの「例」を参照してください。  
  
 [!code-csharp[System.IObserver.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#11)]
 [!code-vb[System.IObserver.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public void OnError (Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(class System.Exception error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnError (error As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnError(Exception ^ error);" />
      <MemberSignature Language="F#" Value="abstract member OnError : Exception -&gt; unit" Usage="iObserver.OnError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="error">エラーに関する追加情報を提供するオブジェクト。</param>
        <summary>プロバイダーでエラー状態が発生したことをオブザーバーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `error` は <xref:System.Exception?displayProperty=nameWithType>から派生したオブジェクトですが、必ずしもプロバイダーによってスローされる例外を表すとは限りません。 また、必要なデータや使用できないデータなど、ルーチンや予期されるエラー状態を表すこともできます。 <xref:System.IObserver%601.OnError%2A> メソッドは情報として表示される必要があります。また、プロバイダーはオブザーバーにエラー処理を提供しないようにする必要があります。  
  
   
  
## Examples  
 次の例は、緯度/経度追跡アプリケーションでの <xref:System.IObserver%601.OnError%2A> メソッドの実装を示しています。 このメソッドは、データが現在使用できないことを報告するだけです。パラメーターとして渡された <xref:System.Exception> オブジェクトを使用することはありません。 完全な例については、<xref:System.IObserver%601> のトピックの「例」を参照してください。  
  
 [!code-csharp[System.IObserver.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#10)]
 [!code-vb[System.IObserver.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c834760f-ddd4-417f-abb7-a059679d5b8c">オブサーバー デザイン パターンのベスト プラクティス</related>
      </Docs>
    </Member>
    <Member MemberName="OnNext">
      <MemberSignature Language="C#" Value="public void OnNext (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNext(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObserver`1.OnNext(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnNext (value As T)" />
      <MemberSignature Language="F#" Value="abstract member OnNext : 'T -&gt; unit" Usage="iObserver.OnNext value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">現在の通知情報。</param>
        <summary>新しいデータをオブザーバーに提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブザーバーがプロバイダーの <xref:System.IObservable%601.Subscribe%2A?displayProperty=nameWithType> メソッドを呼び出した後、プロバイダーはオブザーバーの <xref:System.IObserver%601.OnNext%2A> メソッドを呼び出して通知を提供します。  
  
   
  
## Examples  
 次の例は、緯度/経度追跡アプリケーションでの <xref:System.IObserver%601.OnNext%2A> メソッドの実装を示しています。 完全な例については、<xref:System.IObserver%601> のトピックの「例」を参照してください。  
  
 [!code-csharp[System.IObserver.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#12)]
 [!code-vb[System.IObserver.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
