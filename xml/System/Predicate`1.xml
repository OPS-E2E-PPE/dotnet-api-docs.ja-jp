<Type Name="Predicate&lt;T&gt;" FullName="System.Predicate&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc9ee84a8661bf965f42b91aeded26c27ac0ccbe" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82285395" /></Metadata><TypeSignature Language="C#" Value="public delegate bool Predicate&lt;in T&gt;(T obj);" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Predicate`1&lt;- T&gt; extends System.MulticastDelegate" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Predicate`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Predicate(Of In T)(obj As T) As Boolean " FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate bool Predicate(T obj);" />
  <TypeSignature Language="F#" Value="type Predicate&lt;'T&gt; = delegate of 'T -&gt; bool" />
  <TypeSignature Language="C#" Value="public delegate bool Predicate&lt;T&gt;(T obj);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Predicate`1&lt;T&gt; extends System.MulticastDelegate" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Predicate(Of T)(obj As T) As Boolean " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="obj" Type="T" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T"><span data-ttu-id="85ed6-101">比較するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="85ed6-101">The type of the object to compare.</span></span></typeparam>
    <param name="obj"><span data-ttu-id="85ed6-102">このデリゲートで表されるメソッド内で定義された基準と照らし合わせて比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="85ed6-102">The object to compare against the criteria defined within the method represented by this delegate.</span></span></param>
    <summary><span data-ttu-id="85ed6-103">条件のセットを定義し、指定されたオブジェクトがその条件を満たしているかどうかを判断するメソッドを表わします。</span><span class="sxs-lookup"><span data-stu-id="85ed6-103">Represents the method that defines a set of criteria and determines whether the specified object meets those criteria.</span></span></summary>
    <returns><span data-ttu-id="85ed6-104">このデリゲートで表されるメソッド内で定義された基準を <see langword="true" /> が満たしている場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85ed6-104"><see langword="true" /> if <paramref name="obj" /> meets the criteria defined within the method represented by this delegate; otherwise, <see langword="false" />.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85ed6-105">このデリゲートは、<xref:System.Array> クラスと <xref:System.Collections.Generic.List%601> クラスのいくつかのメソッドによって、コレクション内の要素を検索するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="85ed6-105">This delegate is used by several methods of the <xref:System.Array> and <xref:System.Collections.Generic.List%601> classes to search for elements in the collection.</span></span>  
  
 <span data-ttu-id="85ed6-106">通常、<xref:System.Predicate%601> デリゲートはラムダ式で表されます。</span><span class="sxs-lookup"><span data-stu-id="85ed6-106">Typically, the <xref:System.Predicate%601> delegate is represented by a lambda expression.</span></span> <span data-ttu-id="85ed6-107">ラムダ式ではローカルにスコープが設定された変数を使用できるため、コンパイル時に正確にわからない条件をテストするのは簡単です。</span><span class="sxs-lookup"><span data-stu-id="85ed6-107">Because locally scoped variables are available to the lambda expression, it is easy to test for a condition that is not precisely known at compile time.</span></span> <span data-ttu-id="85ed6-108">これは、次の例でシミュレートされています。この例では、National ホッケーリーグチームとそのチームが設立された年に関する情報を含む `HockeyTeam` クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="85ed6-108">This is simulated in the following example, which defines a `HockeyTeam` class that contains information about a National Hockey League team and the year in which it was founded.</span></span> <span data-ttu-id="85ed6-109">この例では、年を表す整数値の配列を定義し、配列の1つの要素をランダムに `foundedBeforeYear`に割り当てます。この変数は、この例の `Main` メソッドにローカルにスコープが設定されています。</span><span class="sxs-lookup"><span data-stu-id="85ed6-109">The example defines an array of integer values that represent years, and randomly assigns one element of the array to `foundedBeforeYear`, which is a variable that is locally scoped to the example's `Main` method.</span></span> <span data-ttu-id="85ed6-110">ローカルスコープの変数はラムダ式で使用できるため、<xref:System.Collections.Generic.List%601.FindAll%2A?displayProperty=nameWithType> メソッドに渡されるラムダ式は、その年の前または前に設立された各チームの `HockeyTeam` オブジェクトを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="85ed6-110">Because locally scoped variables are available to a lambda expression, the lambda expression passed to the <xref:System.Collections.Generic.List%601.FindAll%2A?displayProperty=nameWithType> method is able to return a `HockeyTeam` object for each team founded on or before that year.</span></span>  
  
 [!code-csharp[System.Predicate\`1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Predicate`1/cs/predicate1.cs#3)]
 [!code-vb[System.Predicate\`1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Predicate`1/vb/predicate1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="85ed6-111">次のコード例では、<xref:System.Array.Find%2A?displayProperty=nameWithType> メソッドを使用して <xref:System.Predicate%601> デリゲートを使用して、<xref:System.Drawing.Point> 構造体の配列を検索します。</span><span class="sxs-lookup"><span data-stu-id="85ed6-111">The following code example uses a <xref:System.Predicate%601> delegate with the <xref:System.Array.Find%2A?displayProperty=nameWithType> method to search an array of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="85ed6-112">この例では、`predicate` という名前の <xref:System.Predicate%601> デリゲートを明示的に定義し、<xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> フィールドと <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> フィールドの積が10万より大きい場合に `true` を返す `FindPoints` という名前のメソッドを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="85ed6-112">The example explicitly defines a <xref:System.Predicate%601> delegate named `predicate` and assigns it a method named `FindPoints` that returns `true` if the product of the <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> and <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> fields is greater than 100,000.</span></span> <span data-ttu-id="85ed6-113">2番目の例に示すように、<xref:System.Predicate%601>型のデリゲートを明示的に定義するのではなく、ラムダ式を使用するのが一般的であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="85ed6-113">Note that it is customary to use a lambda expression rather than to explicitly define a delegate of type <xref:System.Predicate%601>, as the second example illustrates.</span></span>  
  
 [!code-csharp[System.Predicate\`1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Predicate`1/cs/predicateex2.cs#4)]
 [!code-vb[System.Predicate\`1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Predicate`1/vb/predicateex2.vb#4)]  
  
 <span data-ttu-id="85ed6-114">次の例は、前の例と同じですが、ラムダ式を使用して <xref:System.Predicate%601> デリゲートを表している点が異なります。</span><span class="sxs-lookup"><span data-stu-id="85ed6-114">The following example is identical to the previous example, except that it uses a lambda expression to represent the <xref:System.Predicate%601> delegate.</span></span>  <span data-ttu-id="85ed6-115">`points` 配列の各要素は、検索条件を満たす要素が見つかるまでラムダ式に渡されます。</span><span class="sxs-lookup"><span data-stu-id="85ed6-115">Each element of the `points` array is passed to the lambda expression until the expression finds an element that meets the search criteria.</span></span> <span data-ttu-id="85ed6-116">この場合、ラムダ式は、X フィールドと Y フィールドの積が10万より大きい場合に `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="85ed6-116">In this case, the lambda expression returns `true` if the product of the X and Y fields is greater than 100,000.</span></span>  
  
 [!code-csharp[System.Predicate\`1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Predicate`1/cs/predicateex1.cs#2)]
 [!code-vb[System.Predicate\`1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Predicate`1/vb/predicateex1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
  </Docs>
</Type>
