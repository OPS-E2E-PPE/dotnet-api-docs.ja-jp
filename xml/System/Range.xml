<Type Name="Range" FullName="System.Range">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a075952985f1c5308eddf03135d2d720c12b62d" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73384031" /></Metadata><TypeSignature Language="C#" Value="public struct Range : IEquatable&lt;Range&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Range extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Range&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Range" />
  <TypeSignature Language="VB.NET" Value="Public Structure Range&#xA;Implements IEquatable(Of Range)" />
  <TypeSignature Language="C++ CLI" Value="public value class Range : IEquatable&lt;Range&gt;" />
  <TypeSignature Language="F#" Value="type Range = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Range&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c074c-101">開始と終了のインデックスを持つ範囲を表します。</span><span class="sxs-lookup"><span data-stu-id="c074c-101">Represents a range that has start and end indexes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c074c-102">`Range` は、範囲のC#構文をサポートするためにコンパイラによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="c074c-102">`Range` is used by the C# compiler to support the range syntax:</span></span>

```csharp
int[] someArray = new int[5] { 1, 2, 3, 4, 5 };
int[] subArray1 = someArray[0..2];               // { 1, 2 }
int[] subArray2 = someArray[1..^0];              // { 2, 3, 4, 5 }
```

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Range (Index start, Index end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Index start, valuetype System.Index end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.#ctor(System.Index,System.Index)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Index, end As Index)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Range(Index start, Index end);" />
      <MemberSignature Language="F#" Value="new Range : Index * Index -&gt; Range" Usage="new System.Range (start, end)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Index" />
        <Parameter Name="end" Type="System.Index" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="c074c-103">範囲の包括的な開始インデックス。</span><span class="sxs-lookup"><span data-stu-id="c074c-103">The inclusive start index of the range.</span></span></param>
        <param name="end"><span data-ttu-id="c074c-104">範囲の排他的な終了インデックス。</span><span class="sxs-lookup"><span data-stu-id="c074c-104">The exclusive end index of the range.</span></span></param>
        <summary><span data-ttu-id="c074c-105">指定された開始と終了のインデックスを使用して、新しい <see cref="T:System.Range" /> インスタンスをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="c074c-105">Instantiates a new <see cref="T:System.Range" /> instance with the specified starting and ending indexes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static Range All { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Range All" />
      <MemberSignature Language="DocId" Value="P:System.Range.All" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property All As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Range All { Range get(); };" />
      <MemberSignature Language="F#" Value="member this.All : Range" Usage="System.Range.All" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c074c-106">最初の要素から最後までの <see cref="T:System.Range" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c074c-106">Gets a <see cref="T:System.Range" /> object that starts from the first element to the end.</span></span></summary>
        <value><span data-ttu-id="c074c-107">先頭から末尾までの範囲。</span><span class="sxs-lookup"><span data-stu-id="c074c-107">A range from the start to the end.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Index End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Index End" />
      <MemberSignature Language="DocId" Value="P:System.Range.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As Index" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Index End { Index get(); };" />
      <MemberSignature Language="F#" Value="member this.End : Index" Usage="System.Range.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Index</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c074c-108">範囲の排他的な終了インデックスを表す <see cref="T:System.Index" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="c074c-108">Gets an <see cref="T:System.Index" /> that represents the exclusive end index of the range.</span></span></summary>
        <value><span data-ttu-id="c074c-109">範囲の終了インデックス。</span><span class="sxs-lookup"><span data-stu-id="c074c-109">The end index of the range.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAt">
      <MemberSignature Language="C#" Value="public static Range EndAt (Index end);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Range EndAt(valuetype System.Index end) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.EndAt(System.Index)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndAt (end As Index) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Range EndAt(Index end);" />
      <MemberSignature Language="F#" Value="static member EndAt : Index -&gt; Range" Usage="System.Range.EndAt end" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="end" Type="System.Index" />
      </Parameters>
      <Docs>
        <param name="end"><span data-ttu-id="c074c-110"><see cref="T:System.Range" /> オブジェクトが作成される最後の要素の位置。</span><span class="sxs-lookup"><span data-stu-id="c074c-110">The position of the last element up to which the <see cref="T:System.Range" /> object will be created.</span></span></param>
        <summary><span data-ttu-id="c074c-111">コレクション内の最初の要素から指定された終了インデックスまでの <see cref="T:System.Range" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="c074c-111">Creates a <see cref="T:System.Range" /> object starting from the first element in the collection to a specified end index.</span></span></summary>
        <returns><span data-ttu-id="c074c-112">最初の要素から <paramref name="end" /> までの範囲。</span><span class="sxs-lookup"><span data-stu-id="c074c-112">A range that starts from the first element to <paramref name="end" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="range.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c074c-113">この Range オブジェクトと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c074c-113">An object to compare with this Range object.</span></span></param>
        <summary><span data-ttu-id="c074c-114">現在のインスタンスが、指定されたオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c074c-114">Returns a value that indicates whether the current instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="c074c-115"><see langword="true" /> の型が <paramref name="value" /> で、現在のインスタンスに等しければ <see cref="T:System.Range" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c074c-115"><see langword="true" /> if <paramref name="value" /> is of type <see cref="T:System.Range" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Range other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Range other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.Equals(System.Range)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Range) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Range other);" />
      <MemberSignature Language="F#" Value="override this.Equals : Range -&gt; bool" Usage="range.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Range" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c074c-116">この Range オブジェクトと比較する Range オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c074c-116">A Range object to compare with this Range object.</span></span></param>
        <summary><span data-ttu-id="c074c-117">現在のインスタンスが別の <see cref="T:System.Range" /> オブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c074c-117">Returns a value that indicates whether the current instance is equal to another <see cref="T:System.Range" /> object.</span></span></summary>
        <returns><span data-ttu-id="c074c-118">現在のインスタンスが <see langword="true" /> に等しい場合は <paramref name="other" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c074c-118"><see langword="true" /> if the current instance is equal to <paramref name="other" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="range.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c074c-119">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="c074c-119">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c074c-120">ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="c074c-120">The hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOffsetAndLength">
      <MemberSignature Language="C#" Value="public ValueTuple&lt;int,int&gt; GetOffsetAndLength (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ValueTuple`2&lt;int32, int32&gt; GetOffsetAndLength(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.GetOffsetAndLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetAndLength (length As Integer) As ValueTuple(Of Integer, Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValueTuple&lt;int, int&gt; GetOffsetAndLength(int length);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetAndLength : int -&gt; ValueTuple&lt;int, int&gt;" Usage="range.GetOffsetAndLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ValueTuple&lt;System.Int32,System.Int32&gt;</ReturnType>
        <Attributes>
          <Attribute FrameworkAlternate="netcore-3.0">
            <AttributeName>System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "Offset", "Length" })</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="c074c-121">範囲が使用されるコレクションの長さを表す正の整数。</span><span class="sxs-lookup"><span data-stu-id="c074c-121">A positive integer that represents the length of the collection that the range will be used with.</span></span></param>
        <summary><span data-ttu-id="c074c-122">コレクションの長さを使用して、範囲オブジェクトの開始オフセットと長さを計算します。</span><span class="sxs-lookup"><span data-stu-id="c074c-122">Calculates the start offset and length of the range object using a collection length.</span></span></summary>
        <returns><span data-ttu-id="c074c-123">範囲の開始オフセットと長さ。</span><span class="sxs-lookup"><span data-stu-id="c074c-123">The start offset and length of the range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c074c-124">パフォーマンス上の理由から、このメソッドは `length` が負でないことを確認するために検証を行いません。</span><span class="sxs-lookup"><span data-stu-id="c074c-124">For performance reasons, this method does't validate `length` to ensure that it is not negative.</span></span> <span data-ttu-id="c074c-125">`length` が現在の `Range` インスタンス内にあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c074c-125">It does ensure that `length` is within the current `Range` instance.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c074c-126"><paramref name="length" /> が現在の範囲の境界の外側にあります。</span><span class="sxs-lookup"><span data-stu-id="c074c-126"><paramref name="length" /> is outside the bounds of the current range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public Index Start { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Index Start" />
      <MemberSignature Language="DocId" Value="P:System.Range.Start" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Start As Index" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Index Start { Index get(); };" />
      <MemberSignature Language="F#" Value="member this.Start : Index" Usage="System.Range.Start" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Index</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c074c-127"><see cref="T:System.Range" /> の包括的な開始インデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="c074c-127">Gets the inclusive start index of the <see cref="T:System.Range" />.</span></span></summary>
        <value><span data-ttu-id="c074c-128">範囲の包括的な開始インデックス。</span><span class="sxs-lookup"><span data-stu-id="c074c-128">The inclusive start index of the range.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAt">
      <MemberSignature Language="C#" Value="public static Range StartAt (Index start);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Range StartAt(valuetype System.Index start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.StartAt(System.Index)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StartAt (start As Index) As Range" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Range StartAt(Index start);" />
      <MemberSignature Language="F#" Value="static member StartAt : Index -&gt; Range" Usage="System.Range.StartAt start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Range</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Index" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="c074c-129">範囲が作成される最初の要素の位置。</span><span class="sxs-lookup"><span data-stu-id="c074c-129">The position of the first element from which the Range will be created.</span></span></param>
        <summary><span data-ttu-id="c074c-130">指定された開始インデックスからコレクションの末尾までの新しい <see cref="T:System.Range" /> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="c074c-130">Returns a new <see cref="T:System.Range" /> instance starting from a specified start index to the end of the collection.</span></span></summary>
        <returns><span data-ttu-id="c074c-131"><paramref name="start" /> からコレクションの末尾までの範囲。</span><span class="sxs-lookup"><span data-stu-id="c074c-131">A range from <paramref name="start" /> to the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Range.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="range.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c074c-132">現在の <see cref="T:System.Range" /> オブジェクトの文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="c074c-132">Returns the string representation of the current <see cref="T:System.Range" /> object.</span></span></summary>
        <returns><span data-ttu-id="c074c-133">範囲の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="c074c-133">The string representation of the range.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
