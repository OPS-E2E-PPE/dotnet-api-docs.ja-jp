<Type Name="Buffer" FullName="System.Buffer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ff8bd903ab8fcfb9ec4f590c562e73b363a2ab6" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83525030" /></Metadata><TypeSignature Language="C#" Value="public static class Buffer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Buffer extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Buffer" />
  <TypeSignature Language="VB.NET" Value="Public Class Buffer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Buffer abstract sealed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Buffer = class" />
  <TypeSignature Language="C#" Value="public sealed class Buffer" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Buffer extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Buffer" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Buffer sealed" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="54eee-101">プリミティブ型の配列を操作します。</span><span class="sxs-lookup"><span data-stu-id="54eee-101">Manipulates arrays of primitive types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eee-102"><xref:System.Buffer> はプリミティブ型の配列にのみ影響します。このクラスは、オブジェクトには適用されません。</span><span class="sxs-lookup"><span data-stu-id="54eee-102"><xref:System.Buffer> only affects arrays of primitive types; this class does not apply to objects.</span></span> <span data-ttu-id="54eee-103">各プリミティブ型は、プリミティブ型に関連付けられた動作や制限に関係なく、一連のバイトとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="54eee-103">Each primitive type is treated as a series of bytes without regard to any behavior or limitation associated with the primitive type.</span></span>  
  
 <span data-ttu-id="54eee-104"><xref:System.Buffer> には、プリミティブ型の配列からプリミティブ型の別の配列にバイトをコピーしたり、配列からバイトを取得したり、配列にバイトを設定したり、配列の長さを取得したりするためのメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="54eee-104"><xref:System.Buffer> provides methods to copy bytes from one array of primitive types to another array of primitive types, get a byte from an array, set a byte in an array, and obtain the length of an array.</span></span> <span data-ttu-id="54eee-105">このクラスを使用すると、<xref:System.Array?displayProperty=nameWithType> クラスの同様のメソッドよりもプリミティブ型を操作する場合のパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="54eee-105">This class provides better performance for manipulating primitive types than similar methods in the <xref:System.Array?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="54eee-106"><xref:System.Buffer> は、<xref:System.Boolean>、<xref:System.Char>、<xref:System.SByte>、<xref:System.Byte>、<xref:System.Int16>、<xref:System.UInt16>、<xref:System.Int32>、<xref:System.UInt32>、<xref:System.Int64>、<xref:System.UInt64>、<xref:System.IntPtr>、<xref:System.UIntPtr>、<xref:System.Single>、<xref:System.Double>の各プリミティブ型に適用されます。</span><span class="sxs-lookup"><span data-stu-id="54eee-106"><xref:System.Buffer> is applicable to the following primitive types: <xref:System.Boolean>, <xref:System.Char>, <xref:System.SByte>, <xref:System.Byte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.IntPtr>, <xref:System.UIntPtr>, <xref:System.Single>, and <xref:System.Double>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54eee-107">次のコード例は、いくつかの `Buffer` クラスのメソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="54eee-107">The following code example illustrates the use of several `Buffer` class methods.</span></span>  
  
 [!code-cpp[System.Buffer.BlockCopy#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CPP/buffer.cpp#1)]
 [!code-csharp[System.Buffer.BlockCopy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CS/buffer.cs#1)]
 [!code-vb[System.Buffer.BlockCopy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.BlockCopy/VB/buffer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BlockCopy">
      <MemberSignature Language="C#" Value="public static void BlockCopy (Array src, int srcOffset, Array dst, int dstOffset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BlockCopy(class System.Array src, int32 srcOffset, class System.Array dst, int32 dstOffset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BlockCopy (src As Array, srcOffset As Integer, dst As Array, dstOffset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BlockCopy(Array ^ src, int srcOffset, Array ^ dst, int dstOffset, int count);" />
      <MemberSignature Language="F#" Value="static member BlockCopy : Array * int * Array * int * int -&gt; unit" Usage="System.Buffer.BlockCopy (src, srcOffset, dst, dstOffset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Array" />
        <Parameter Name="srcOffset" Type="System.Int32" />
        <Parameter Name="dst" Type="System.Array" />
        <Parameter Name="dstOffset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="src"><span data-ttu-id="54eee-108">ソース バッファー。</span><span class="sxs-lookup"><span data-stu-id="54eee-108">The source buffer.</span></span></param>
        <param name="srcOffset"><span data-ttu-id="54eee-109">0 から始まる <paramref name="src" /> のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="54eee-109">The zero-based byte offset into <paramref name="src" />.</span></span></param>
        <param name="dst"><span data-ttu-id="54eee-110">コピー先のバッファー。</span><span class="sxs-lookup"><span data-stu-id="54eee-110">The destination buffer.</span></span></param>
        <param name="dstOffset"><span data-ttu-id="54eee-111">0 から始まる <paramref name="dst" /> のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="54eee-111">The zero-based byte offset into <paramref name="dst" />.</span></span></param>
        <param name="count"><span data-ttu-id="54eee-112">コピーするバイト数。</span><span class="sxs-lookup"><span data-stu-id="54eee-112">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="54eee-113">コピー先の配列の指定したオフセット位置を先頭として、コピー元の配列の指定したオフセットから指定数のバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-113">Copies a specified number of bytes from a source array starting at a particular offset to a destination array starting at a particular offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eee-114">このメソッドは、`srcOffset`から始まる `src`の `count` バイトを `dstOffset`から `dst`にコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-114">This method copies `count` bytes from `src`, beginning at `srcOffset`, to `dst`, beginning at `dstOffset`.</span></span> <span data-ttu-id="54eee-115">`srcOffset` と `dstOffset` はどちらも0から始まります。つまり、各バッファーの最初のバイトは、位置1ではなく0の位置にあります。</span><span class="sxs-lookup"><span data-stu-id="54eee-115">Both `srcOffset` and `dstOffset` are zero-based; that is, the first byte in each buffer is at position 0, not position 1.</span></span>  
  
 <span data-ttu-id="54eee-116"><xref:System.Buffer.BlockCopy%2A> メソッドは、メモリへのオフセットを使用して `src` パラメーター配列内のバイトにアクセスします。これは、インデックスや上限と下限の配列の範囲などのプログラミング構成要素ではありません。</span><span class="sxs-lookup"><span data-stu-id="54eee-116">The <xref:System.Buffer.BlockCopy%2A> method accesses the bytes in the `src` parameter array using offsets into memory, not programming constructs such as indexes or upper and lower array bounds.</span></span> <span data-ttu-id="54eee-117">たとえば、アプリケーションのプログラミング言語で、0から始まる下限が-50 の <xref:System.Int32> 配列を宣言し、その配列とオフセット5を <xref:System.Buffer.BlockCopy%2A> メソッドに渡す場合、メソッドがアクセスする最初の配列要素は配列の2番目の要素であり、インデックスは49にあります。</span><span class="sxs-lookup"><span data-stu-id="54eee-117">For example, if in the programming language of your application you declare an <xref:System.Int32> array with a zero-based lower bound of -50, and then pass the array and an offset of 5 to the <xref:System.Buffer.BlockCopy%2A> method, the first array element the method will access is the second element of the array, which is at index -49.</span></span> <span data-ttu-id="54eee-118">さらに、最初にアクセスされる配列要素-49 のバイトは、アプリケーションを実行しているコンピューターのエンディアンに依存します。</span><span class="sxs-lookup"><span data-stu-id="54eee-118">Furthermore, which byte of array element -49 is accessed first depends on the endianness of the computer that is executing your application.</span></span>  
  
 <span data-ttu-id="54eee-119">名前が示すように、<xref:System.Buffer.BlockCopy%2A> メソッドは、一度に1バイトずつコピーするのではなく、バイトのブロックを全体としてコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-119">As its name suggests, the <xref:System.Buffer.BlockCopy%2A> method copies a block of bytes as a whole, rather than copying one byte at a time.</span></span> <span data-ttu-id="54eee-120">したがって、`src` と `dst` が同じ配列を参照し、`srcOffset` + の範囲が `count` `dstOffset`-1 の範囲と重複する場合、重複するバイトの値は、変換先にコピーされる前に上書きされません。 + `count`</span><span class="sxs-lookup"><span data-stu-id="54eee-120">Therefore, if `src` and `dst` reference the same array, and the range from `srcOffset` + `count` -1 overlaps the range from `dstOffset` + `count` - 1, the values of the overlapping bytes are not overwritten before they are copied to the destination.</span></span> <span data-ttu-id="54eee-121">次の例では、`arr` という名前の配列のバイト0-16 の値がバイト12-28 にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="54eee-121">In the following example, the values of bytes 0-16 in an array named `arr` are copied to bytes 12-28.</span></span> <span data-ttu-id="54eee-122">重複している範囲にかかわらず、ソースバイトの値が正常にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="54eee-122">Despite the overlapping range, the values of the source bytes are successfully copied.</span></span>  
  
 [!code-cpp[System.Buffer.BlockCopy#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CPP/overlap1.cpp#3)]
 [!code-csharp[System.Buffer.BlockCopy#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CS/overlap1.cs#3)]
 [!code-vb[System.Buffer.BlockCopy#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.BlockCopy/VB/overlap1.vb#3)]  
  
 <span data-ttu-id="54eee-123">次の例では、`arr` という名前の配列のバイト12-28 の値がバイト0-16 にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="54eee-123">In the following example, the values of bytes 12-28 in an array named `arr` are copied to bytes 0-16.</span></span> <span data-ttu-id="54eee-124">この場合も、重複する範囲にかかわらず、ソースバイトの値が正常にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="54eee-124">Again, despite the overlapping range, the values of the source bytes are successfully copied.</span></span>  
  
 [!code-cpp[System.Buffer.BlockCopy#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CPP/overlap1.cpp#4)]
 [!code-csharp[System.Buffer.BlockCopy#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CS/overlap1.cs#4)]
 [!code-vb[System.Buffer.BlockCopy#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.BlockCopy/VB/overlap1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="54eee-125">次の例では、<xref:System.Buffer.BlockCopy%2A> メソッドを使用して、配列の領域をコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-125">The following example copies regions of arrays by using the <xref:System.Buffer.BlockCopy%2A> method.</span></span> <span data-ttu-id="54eee-126">各 <xref:System.Buffer.BlockCopy%2A> 操作について、コピー元とコピー先の配列が値の配列として、およびバイトシーケンスとして一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="54eee-126">For each <xref:System.Buffer.BlockCopy%2A> operation, it lists the source and destination arrays as both an array of values and as a sequence of bytes.</span></span> <span data-ttu-id="54eee-127">この例は、<xref:System.Buffer.BlockCopy%2A> メソッドを操作するときにシステムのエンディアンを考慮することの重要性を示しています。 Windows システムはリトルエンディアンであるため、プリミティブデータ型の値の下位バイトが上位バイトよりも前にあるためです。</span><span class="sxs-lookup"><span data-stu-id="54eee-127">The example illustrates the importance of considering a system's endianness when working with the <xref:System.Buffer.BlockCopy%2A> method: Because Windows systems are little-endian, the lower-order bytes of a primitive data type's value precede the higher-order bytes.</span></span>  
  
 [!code-cpp[System.Buffer.BlockCopy#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CPP/bcopy.cpp#2)]
 [!code-csharp[System.Buffer.BlockCopy#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.BlockCopy/CS/bcopy.cs#2)]
 [!code-vb[System.Buffer.BlockCopy#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.BlockCopy/VB/bcopy.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54eee-128"><paramref name="src" /> または <paramref name="dst" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="54eee-128"><paramref name="src" /> or <paramref name="dst" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="54eee-129"><paramref name="src" /> または <paramref name="dst" /> は primitive な配列ではありません。</span><span class="sxs-lookup"><span data-stu-id="54eee-129"><paramref name="src" /> or <paramref name="dst" /> is not an array of primitives.</span></span>  
  
<span data-ttu-id="54eee-130">または</span><span class="sxs-lookup"><span data-stu-id="54eee-130">-or-</span></span> 
<span data-ttu-id="54eee-131"><paramref name="src" /> のバイト数が <paramref name="srcOffset" /> と <paramref name="count" /> の合計よりも小さい。</span><span class="sxs-lookup"><span data-stu-id="54eee-131">The number of bytes in <paramref name="src" /> is less than <paramref name="srcOffset" /> plus <paramref name="count" />.</span></span>  
  
<span data-ttu-id="54eee-132">または</span><span class="sxs-lookup"><span data-stu-id="54eee-132">-or-</span></span> 
<span data-ttu-id="54eee-133"><paramref name="dst" /> のバイト数が <paramref name="dstOffset" /> と <paramref name="count" /> の合計よりも小さい。</span><span class="sxs-lookup"><span data-stu-id="54eee-133">The number of bytes in <paramref name="dst" /> is less than <paramref name="dstOffset" /> plus <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="54eee-134"><paramref name="srcOffset" />、<paramref name="dstOffset" /> または <paramref name="count" /> は 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="54eee-134"><paramref name="srcOffset" />, <paramref name="dstOffset" />, or <paramref name="count" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ByteLength">
      <MemberSignature Language="C#" Value="public static int ByteLength (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ByteLength(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.ByteLength(System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ByteLength (array As Array) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ByteLength(Array ^ array);" />
      <MemberSignature Language="F#" Value="static member ByteLength : Array -&gt; int" Usage="System.Buffer.ByteLength array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="54eee-135">配列。</span><span class="sxs-lookup"><span data-stu-id="54eee-135">An array.</span></span></param>
        <summary><span data-ttu-id="54eee-136">指定した配列のバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="54eee-136">Returns the number of bytes in the specified array.</span></span></summary>
        <returns><span data-ttu-id="54eee-137">配列のバイト数。</span><span class="sxs-lookup"><span data-stu-id="54eee-137">The number of bytes in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="54eee-138">次のコード例は、`ByteLength` メソッドを使用して、配列内のバイト数を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="54eee-138">The following code example illustrates the use of the `ByteLength` method to return the number of bytes in an array.</span></span>  
  
 [!code-cpp[System.Buffer.Bytes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.Bytes/CPP/bytelength.cpp#1)]
 [!code-csharp[System.Buffer.Bytes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.Bytes/CS/bytelength.cs#1)]
 [!code-vb[System.Buffer.Bytes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.Bytes/VB/bytelength.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54eee-139"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="54eee-139"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="54eee-140"><paramref name="array" /> がプリミティブではありません。</span><span class="sxs-lookup"><span data-stu-id="54eee-140"><paramref name="array" /> is not a primitive.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="54eee-141"><paramref name="array" /> は 2 GB を超えています。</span><span class="sxs-lookup"><span data-stu-id="54eee-141"><paramref name="array" /> is larger than 2 gigabytes (GB).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public static byte GetByte (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 GetByte(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.GetByte(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetByte (array As Array, index As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte GetByte(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="static member GetByte : Array * int -&gt; byte" Usage="System.Buffer.GetByte (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="54eee-142">配列。</span><span class="sxs-lookup"><span data-stu-id="54eee-142">An array.</span></span></param>
        <param name="index"><span data-ttu-id="54eee-143">配列内の位置。</span><span class="sxs-lookup"><span data-stu-id="54eee-143">A location in the array.</span></span></param>
        <summary><span data-ttu-id="54eee-144">指定した配列の指定した位置にあるバイトを取得します。</span><span class="sxs-lookup"><span data-stu-id="54eee-144">Retrieves the byte at the specified location in the specified array.</span></span></summary>
        <returns><span data-ttu-id="54eee-145">配列の指定した位置にあるバイト。</span><span class="sxs-lookup"><span data-stu-id="54eee-145">The byte at the specified location in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eee-146">`GetByte` メソッドは、配列から特定のバイトを取得します。</span><span class="sxs-lookup"><span data-stu-id="54eee-146">The `GetByte` method gets a particular byte out of the array.</span></span> <span data-ttu-id="54eee-147">配列は、プリミティブの配列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="54eee-147">The array must be an array of primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54eee-148">次のコード例では、`GetByte` メソッドを使用して、配列内の指定した位置にあるバイト値を表示します。</span><span class="sxs-lookup"><span data-stu-id="54eee-148">The following code example displays the byte values at specified locations within arrays using the `GetByte` method.</span></span>  
  
 [!code-cpp[System.Buffer.Bytes#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.Bytes/CPP/getbyte.cpp#3)]
 [!code-csharp[System.Buffer.Bytes#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.Bytes/CS/getbyte.cs#3)]
 [!code-vb[System.Buffer.Bytes#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.Bytes/VB/getbyte.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="54eee-149"><paramref name="array" /> がプリミティブではありません。</span><span class="sxs-lookup"><span data-stu-id="54eee-149"><paramref name="array" /> is not a primitive.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54eee-150"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="54eee-150"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="54eee-151"><paramref name="index" /> が負か、または <paramref name="array" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="54eee-151"><paramref name="index" /> is negative or greater than the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="54eee-152"><paramref name="array" /> は 2 GB を超えています。</span><span class="sxs-lookup"><span data-stu-id="54eee-152"><paramref name="array" /> is larger than 2 gigabytes (GB).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MemoryCopy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="54eee-153">メモリのブロックをコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-153">Copies a block of memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MemoryCopy">
      <MemberSignature Language="C#" Value="public static void MemoryCopy (void* source, void* destination, long destinationSizeInBytes, long sourceBytesToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryCopy(void* source, void* destination, int64 destinationSizeInBytes, int64 sourceBytesToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.Int64,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryCopy(void* source, void* destination, long destinationSizeInBytes, long sourceBytesToCopy);" />
      <MemberSignature Language="F#" Value="static member MemoryCopy : nativeptr&lt;unit&gt; * nativeptr&lt;unit&gt; * int64 * int64 -&gt; unit" Usage="System.Buffer.MemoryCopy (source, destination, destinationSizeInBytes, sourceBytesToCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destination" Type="System.Void*" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationSizeInBytes" Type="System.Int64" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceBytesToCopy" Type="System.Int64" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="54eee-154">コピーするバイトのアドレス。</span><span class="sxs-lookup"><span data-stu-id="54eee-154">The address of the bytes to copy.</span></span></param>
        <param name="destination"><span data-ttu-id="54eee-155">対象のアドレス。</span><span class="sxs-lookup"><span data-stu-id="54eee-155">The target address.</span></span></param>
        <param name="destinationSizeInBytes"><span data-ttu-id="54eee-156">コピー先のメモリ ブロックで利用可能なバイト数。</span><span class="sxs-lookup"><span data-stu-id="54eee-156">The number of bytes available in the destination memory block.</span></span></param>
        <param name="sourceBytesToCopy"><span data-ttu-id="54eee-157">コピーするバイト数。</span><span class="sxs-lookup"><span data-stu-id="54eee-157">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="54eee-158">長整数値として指定されたバイト数を、メモリ内のアドレス間でコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-158">Copies a number of bytes specified as a long integer value from one address in memory to another.</span></span>  
  
 <span data-ttu-id="54eee-159">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="54eee-159">This API is not CLS-compliant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eee-160">このメソッドは、`source` によって指定されたアドレスから、`destination`によって指定されたアドレスに `sourceBytesToCopy` バイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-160">This method copies `sourceBytesToCopy` bytes from the address specified by `source` to the address specified by `destination`.</span></span> <span data-ttu-id="54eee-161">バッファーが重複し、`destination` からマイナス `source` の差が `sourceBytesToCopy`未満の場合、コピー元のブロックは逆の順序でコピー先のブロックにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="54eee-161">If the buffers overlap and the difference between `destination` minus `source` is less than `sourceBytesToCopy`, the source block is copied to the destination block in reverse order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="54eee-162"><paramref name="sourceBytesToCopy" /> が <paramref name="destinationSizeInBytes" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="54eee-162"><paramref name="sourceBytesToCopy" /> is greater than <paramref name="destinationSizeInBytes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MemoryCopy">
      <MemberSignature Language="C#" Value="public static void MemoryCopy (void* source, void* destination, ulong destinationSizeInBytes, ulong sourceBytesToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryCopy(void* source, void* destination, unsigned int64 destinationSizeInBytes, unsigned int64 sourceBytesToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.MemoryCopy(System.Void*,System.Void*,System.UInt64,System.UInt64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryCopy(void* source, void* destination, System::UInt64 destinationSizeInBytes, System::UInt64 sourceBytesToCopy);" />
      <MemberSignature Language="F#" Value="static member MemoryCopy : nativeptr&lt;unit&gt; * nativeptr&lt;unit&gt; * uint64 * uint64 -&gt; unit" Usage="System.Buffer.MemoryCopy (source, destination, destinationSizeInBytes, sourceBytesToCopy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Void*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destination" Type="System.Void*" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationSizeInBytes" Type="System.UInt64" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceBytesToCopy" Type="System.UInt64" Index="3" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="54eee-163">コピーするバイトのアドレス。</span><span class="sxs-lookup"><span data-stu-id="54eee-163">The address of the bytes to copy.</span></span></param>
        <param name="destination"><span data-ttu-id="54eee-164">対象のアドレス。</span><span class="sxs-lookup"><span data-stu-id="54eee-164">The target address.</span></span></param>
        <param name="destinationSizeInBytes"><span data-ttu-id="54eee-165">コピー先のメモリ ブロックで利用可能なバイト数。</span><span class="sxs-lookup"><span data-stu-id="54eee-165">The number of bytes available in the destination memory block.</span></span></param>
        <param name="sourceBytesToCopy"><span data-ttu-id="54eee-166">コピーするバイト数。</span><span class="sxs-lookup"><span data-stu-id="54eee-166">The number of bytes to copy.</span></span></param>
        <summary><span data-ttu-id="54eee-167">符号なし長整数値として指定されたバイト数を、メモリ内のアドレス間でコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-167">Copies a number of bytes specified as an unsigned long integer value from one address in memory to another.</span></span>  
  
 <span data-ttu-id="54eee-168">この API は、CLS に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="54eee-168">This API is not CLS-compliant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eee-169">このメソッドは、`source` によって指定されたアドレスから、`destination`によって指定されたアドレスに `sourceBytesToCopy` バイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="54eee-169">This method copies `sourceBytesToCopy` bytes from the address specified by `source` to the address specified by `destination`.</span></span> <span data-ttu-id="54eee-170">バッファーが重複し、`destination` からマイナス `source` の差が `sourceBytesToCopy`未満の場合、コピー元のブロックは逆の順序でコピー先のブロックにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="54eee-170">If the buffers overlap and the difference between `destination` minus `source` is less than `sourceBytesToCopy`, the source block is copied to the destination block in reverse order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="54eee-171"><paramref name="sourceBytesToCopy" /> が <paramref name="destinationSizeInBytes" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="54eee-171"><paramref name="sourceBytesToCopy" /> is greater than <paramref name="destinationSizeInBytes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetByte">
      <MemberSignature Language="C#" Value="public static void SetByte (Array array, int index, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetByte(class System.Array array, int32 index, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetByte (array As Array, index As Integer, value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetByte(Array ^ array, int index, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member SetByte : Array * int * byte -&gt; unit" Usage="System.Buffer.SetByte (array, index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="54eee-172">配列。</span><span class="sxs-lookup"><span data-stu-id="54eee-172">An array.</span></span></param>
        <param name="index"><span data-ttu-id="54eee-173">配列内の位置。</span><span class="sxs-lookup"><span data-stu-id="54eee-173">A location in the array.</span></span></param>
        <param name="value"><span data-ttu-id="54eee-174">代入する値。</span><span class="sxs-lookup"><span data-stu-id="54eee-174">A value to assign.</span></span></param>
        <summary><span data-ttu-id="54eee-175">指定した配列の指定した位置にあるバイトに、指定した値を代入します。</span><span class="sxs-lookup"><span data-stu-id="54eee-175">Assigns a specified value to a byte at a particular location in a specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54eee-176">`array` は、プリミティブの配列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="54eee-176">`array` must be an array of primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="54eee-177">次のコード例では、`SetByte` メソッドを使用して、配列内の特定の場所のバイトに値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="54eee-177">The following code example assigns values to bytes at particular locations within arrays using the `SetByte` method.</span></span>  
  
 [!code-cpp[System.Buffer.Bytes#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Buffer.Bytes/CPP/setbyte.cpp#2)]
 [!code-csharp[System.Buffer.Bytes#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Buffer.Bytes/CS/setbyte.cs#2)]
 [!code-vb[System.Buffer.Bytes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Buffer.Bytes/VB/setbyte.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="54eee-178"><paramref name="array" /> がプリミティブではありません。</span><span class="sxs-lookup"><span data-stu-id="54eee-178"><paramref name="array" /> is not a primitive.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="54eee-179"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="54eee-179"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="54eee-180"><paramref name="index" /> が負か、または <paramref name="array" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="54eee-180"><paramref name="index" /> is negative or greater than the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="54eee-181"><paramref name="array" /> は 2 GB を超えています。</span><span class="sxs-lookup"><span data-stu-id="54eee-181"><paramref name="array" /> is larger than 2 gigabytes (GB).</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
