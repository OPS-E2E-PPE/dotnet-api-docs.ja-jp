<Type Name="UriTemplate" FullName="System.UriTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e25e98635ab9d354ef0b29a09375feaea41dc46" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78680024" /></Metadata><TypeSignature Language="C#" Value="public class UriTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriTemplate extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.UriTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class UriTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class UriTemplate" />
  <TypeSignature Language="F#" Value="type UriTemplate = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel.Web" FromVersion="4.0.0.0" To="System.ServiceModel" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fc44b-101">URI (Uniform Resource Identifier) テンプレートを表すクラス。</span><span class="sxs-lookup"><span data-stu-id="fc44b-101">A class that represents a Uniform Resource Identifier (URI) template.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-102">URI テンプレートでは、構造が似ている URI のセットを定義できます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-102">A URI template allows you to define a set of structurally similar URIs.</span></span> <span data-ttu-id="fc44b-103">テンプレートは、パスとクエリの 2 つの部分から構成されています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-103">Templates are composed of two parts, a path and a query.</span></span> <span data-ttu-id="fc44b-104">パスは、スラッシュ (/) で区切られた一連のセグメントから構成されています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-104">A path consists of a series of segments delimited by a slash (/).</span></span> <span data-ttu-id="fc44b-105">各セグメントには、リテラル値、変数値 (中かっこ [{ }] 内に記述。必ず 1 つのセグメントと一致するよう制約)、またはワイルドカード (アスタリスク [\*] で記述。"残りのパス" に一致する) を指定することができます。ワイルドカードは、パスの最後に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc44b-105">Each segment can have a literal value, a variable value (written within curly braces [{ }], constrained to match the contents of exactly one segment), or a wildcard (written as an asterisk [\*], which matches "the rest of the path"), which must appear at the end of the path.</span></span> <span data-ttu-id="fc44b-106">クエリ式は、すべて省略することができます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-106">The query expression can be omitted entirely.</span></span> <span data-ttu-id="fc44b-107">存在する場合、クエリ式は順序なしの一連の名前/値ペアを指定します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-107">If present, it specifies an unordered series of name/value pairs.</span></span> <span data-ttu-id="fc44b-108">クエリ式の要素には、リテラル ペア (?x=2) または変数ペア (?x={val}) を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-108">Elements of the query expression can be either literal pairs (?x=2) or variable pairs (?x={val}).</span></span> <span data-ttu-id="fc44b-109">対になっていない値は使用できません。</span><span class="sxs-lookup"><span data-stu-id="fc44b-109">Unpaired values are not permitted.</span></span> <span data-ttu-id="fc44b-110">次の例は、有効なテンプレート文字列を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-110">The following examples show valid template strings:</span></span>  
  
-   <span data-ttu-id="fc44b-111">"weather/WA/Seattle"</span><span class="sxs-lookup"><span data-stu-id="fc44b-111">"weather/WA/Seattle"</span></span>  
  
-   <span data-ttu-id="fc44b-112">"weather/{state}/{city}"</span><span class="sxs-lookup"><span data-stu-id="fc44b-112">"weather/{state}/{city}"</span></span>  
  
-   <span data-ttu-id="fc44b-113">"weather/\*"</span><span class="sxs-lookup"><span data-stu-id="fc44b-113">"weather/\*"</span></span>  
  
-   <span data-ttu-id="fc44b-114">"weather/{state}/{city}?forecast=today</span><span class="sxs-lookup"><span data-stu-id="fc44b-114">"weather/{state}/{city}?forecast=today</span></span>  
  
-   <span data-ttu-id="fc44b-115">"weather/{state}/{city}?forecast={day}</span><span class="sxs-lookup"><span data-stu-id="fc44b-115">"weather/{state}/{city}?forecast={day}</span></span>  
  
 <span data-ttu-id="fc44b-116">上の URI テンプレートは天気予報を編成するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-116">The preceding URI templates might be used for organizing weather reports.</span></span> <span data-ttu-id="fc44b-117">中かっこで囲まれたセグメントは変数で、それ以外はすべてリテラルです。</span><span class="sxs-lookup"><span data-stu-id="fc44b-117">Segments enclosed in curly braces are variables, everything else is a literal.</span></span> <span data-ttu-id="fc44b-118">変数を実際の値に置換することで、<xref:System.UriTemplate> インスタンスを <xref:System.Uri> に変換できます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-118">You can convert a <xref:System.UriTemplate> instance into a <xref:System.Uri> by replacing variables with actual values.</span></span> <span data-ttu-id="fc44b-119">たとえば、"weather/{state}/{city}" テンプレートで変数 "{state}" と "{city}" に値を代入すると、"weather/WA/Seattle" のようになります。</span><span class="sxs-lookup"><span data-stu-id="fc44b-119">For example, taking the template "weather/{state}/{city}" and putting in values for the variables "{state}" and "{city}" gives you "weather/WA/Seattle".</span></span> <span data-ttu-id="fc44b-120">候補 URI を指定すると、<xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> を呼び出すことで、それが指定された URI テンプレートに一致するかどうかをテストできます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-120">Given a candidate URI, you can test whether it matches a given URI template by calling <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29>.</span></span> <span data-ttu-id="fc44b-121"><xref:System.UriTemplate> インスタンスを使用し、<xref:System.Uri> または <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> を呼び出すことで、一連の変数値から <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29> を作成できます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-121">You can also use <xref:System.UriTemplate> instances to create a <xref:System.Uri> from a set of variable values by calling <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> or <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc44b-122">次のコードは、<xref:System.UriTemplate> インスタンスを作成し、それを候補 URI にバインドおよび照合する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-122">The following code demonstrates how to create a <xref:System.UriTemplate> instance, and bind and match it to a candidate URI.</span></span>  
  
 [!code-csharp[UriTemplate#0](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#0)]
 [!code-vb[UriTemplate#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc44b-123"><see cref="T:System.UriTemplate" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-123">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string -&gt; UriTemplate" Usage="new System.UriTemplate template" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="fc44b-124">テンプレート。</span><span class="sxs-lookup"><span data-stu-id="fc44b-124">The template.</span></span></param>
        <summary><span data-ttu-id="fc44b-125">指定したテンプレート文字列を使用して、<see cref="T:System.UriTemplate" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-125">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc44b-126">次の例は、コンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-126">The following example shows how to call the constructor.</span></span>  
  
 [!code-csharp[UriTemplate#1](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#1)]
 [!code-vb[UriTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="fc44b-127">テンプレート文字列。</span><span class="sxs-lookup"><span data-stu-id="fc44b-127">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="fc44b-128">末尾のスラッシュ記号 "/" を無視するかどうかを指定する値。</span><span class="sxs-lookup"><span data-stu-id="fc44b-128">A value that specifies whether trailing slash "/" characters should be ignored.</span></span></param>
        <summary><span data-ttu-id="fc44b-129"><see cref="T:System.UriTemplate" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-129">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-130">`ignoreTrailingSlash` が `true` に設定されている場合、候補 URI と照合する際にテンプレートの末尾のスラッシュは無視されます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-130">When the `ignoreTrailingSlash` is set to `true`, trailing slashes on the end of template are ignored when matching a candidate URI.</span></span> <span data-ttu-id="fc44b-131">たとえば、`http://www.microsoft.com/customer/` などのテンプレートは、次の候補 Uri と一致します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-131">For example, a template such as `http://www.microsoft.com/customer/` would match the following candidate URIs:</span></span>  
  
- `http://www.microsoft.com/customer/`  
- `http://www.microsoft.com/customer`  
- `http://www.microsoft.com/customer/?wsdl`  
- `http://www.microsoft.com/customer?wsdl`
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="fc44b-132">テンプレート文字列。</span><span class="sxs-lookup"><span data-stu-id="fc44b-132">The template string.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="fc44b-133">テンプレート パラメーターの既定値のリストを含むディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="fc44b-133">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="fc44b-134"><see cref="T:System.UriTemplate" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-134">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriTemplate (string template, bool ignoreTrailingSlash, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string template, bool ignoreTrailingSlash, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (template As String, ignoreTrailingSlash As Boolean, additionalDefaults As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplate(System::String ^ template, bool ignoreTrailingSlash, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ additionalDefaults);" />
      <MemberSignature Language="F#" Value="new UriTemplate : string * bool * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; UriTemplate" Usage="new System.UriTemplate (template, ignoreTrailingSlash, additionalDefaults)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="template" Type="System.String" />
        <Parameter Name="ignoreTrailingSlash" Type="System.Boolean" />
        <Parameter Name="additionalDefaults" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="template"><span data-ttu-id="fc44b-135">テンプレート文字列。</span><span class="sxs-lookup"><span data-stu-id="fc44b-135">The template string.</span></span></param>
        <param name="ignoreTrailingSlash"><span data-ttu-id="fc44b-136">末尾のスラッシュ記号 "/" を無視する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc44b-136"><see langword="true" /> if the trailing slash "/" characters are ignored; otherwise <see langword="false" />.</span></span></param>
        <param name="additionalDefaults"><span data-ttu-id="fc44b-137">テンプレート パラメーターの既定値のリストを含むディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="fc44b-137">A dictionary that contains a list of default values for the template parameters.</span></span></param>
        <summary><span data-ttu-id="fc44b-138"><see cref="T:System.UriTemplate" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-138">Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BindByName">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fc44b-139">テンプレートおよびパラメーターのコレクションから新しい URI を作成します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-139">Creates a new URI from the template and the collection of parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String)) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="fc44b-140">ベース アドレス。</span><span class="sxs-lookup"><span data-stu-id="fc44b-140">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="fc44b-141">パラメーター名と値のペアのコレクションを含むディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="fc44b-141">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <summary><span data-ttu-id="fc44b-142">テンプレートおよびパラメーターのコレクションから新しい URI を作成します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-142">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="fc44b-143">URI。</span><span class="sxs-lookup"><span data-stu-id="fc44b-143">A URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-144">[IDictionary\<string、string >](xref:System.Collections.Generic.IDictionary%602)パラメーターには、パラメーターの名前と値のペアのコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-144">The [IDictionary\<string,string>](xref:System.Collections.Generic.IDictionary%602) parameter contains a collection of parameter name and value pairs.</span></span> <span data-ttu-id="fc44b-145">パラメーターは、大文字と小文字を区別する比較でテンプレート内の変数を比較します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-145">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc44b-146">このメソッドに渡された名前と値のコレクションには、すべてのテンプレート変数のキーを含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc44b-146">The name/value collection passed to this method must contain a key for every template variable.</span></span> <span data-ttu-id="fc44b-147">テンプレート変数に一致しない追加の名前と値のペアは、最終的な URI のクエリ文字列に付加されます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-147">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fc44b-148">生成された URI が、それを生成するために使用されたテンプレートと照合されないようにする追加の名前と値のペアに、テキストで渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-148">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="fc44b-149">そのようなテキストの例には、'/'、'..'、'\*'、'{'、および '}' が含まれます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-149">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="fc44b-150">ベース アドレス。</span><span class="sxs-lookup"><span data-stu-id="fc44b-150">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="fc44b-151">パラメーター値。</span><span class="sxs-lookup"><span data-stu-id="fc44b-151">The parameter values.</span></span></param>
        <summary><span data-ttu-id="fc44b-152">テンプレートおよびパラメーターのコレクションから新しい URI を作成します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-152">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="fc44b-153">新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="fc44b-153">A new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-154">パラメーター名と値のペアのコレクションを格納する <xref:System.Collections.Specialized.NameValueCollection> パラメーター。</span><span class="sxs-lookup"><span data-stu-id="fc44b-154">The <xref:System.Collections.Specialized.NameValueCollection> parameter contains a collection of parameter name/value pairs.</span></span> <span data-ttu-id="fc44b-155">パラメーターは、大文字と小文字を区別する比較でテンプレート内の変数を比較します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-155">The parameters are matched up against the variables within the template by a case-insensitive comparison.</span></span> <span data-ttu-id="fc44b-156">このコレクションに渡された値はエスケープされます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-156">Values passed in this collection are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc44b-157"><xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> に渡された名前と値のコレクションは、すべてのテンプレート変数のキーを格納する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc44b-157">The name/value collection passed to <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> must contain a key for every template variable.</span></span> <span data-ttu-id="fc44b-158">テンプレート変数に一致しない追加の名前と値のペアは、最終的な URI のクエリ文字列に付加されます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-158">Extra name/value pairs that do not match template variables are appended to the query string of the final URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc44b-159">生成された URI が、それを生成するために使用されたテンプレートと照合されないようにする追加の名前と値のペアに、テキストで渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-159">It is possible to pass in text within the name/value pairs that prevent the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="fc44b-160">そのようなテキストの例には、'/'、'..'、'\*'、'{'、および '}' が含まれます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-160">Examples of such text includes: '/', '..', '\*', '{', and '}'.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc44b-161">次の例では、<xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-161">The following example shows how to call the <xref:System.UriTemplate.BindByName%28System.Uri%2CSystem.Collections.Specialized.NameValueCollection%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#4](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#4)]
 [!code-vb[UriTemplate#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As IDictionary(Of String, String), omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="fc44b-162">ベース アドレスを含んでいる URI。</span><span class="sxs-lookup"><span data-stu-id="fc44b-162">A URI that contains the base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="fc44b-163">パラメーター名と値のペアのコレクションを含むディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="fc44b-163">A dictionary that contains a collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="fc44b-164">既定値を無視する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc44b-164"><see langword="true" /> is the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fc44b-165">テンプレートおよびパラメーターのコレクションから新しい URI を作成します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-165">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="fc44b-166">URI。</span><span class="sxs-lookup"><span data-stu-id="fc44b-166">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByName">
      <MemberSignature Language="C#" Value="public Uri BindByName (Uri baseAddress, System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByName(class System.Uri baseAddress, class System.Collections.Specialized.NameValueCollection parameters, bool omitDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByName (baseAddress As Uri, parameters As NameValueCollection, omitDefaults As Boolean) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByName(Uri ^ baseAddress, System::Collections::Specialized::NameValueCollection ^ parameters, bool omitDefaults);" />
      <MemberSignature Language="F#" Value="member this.BindByName : Uri * System.Collections.Specialized.NameValueCollection * bool -&gt; Uri" Usage="uriTemplate.BindByName (baseAddress, parameters, omitDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="omitDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="fc44b-167">ベース アドレス。</span><span class="sxs-lookup"><span data-stu-id="fc44b-167">The base address.</span></span></param>
        <param name="parameters"><span data-ttu-id="fc44b-168">パラメーター名と値のペアのコレクション。</span><span class="sxs-lookup"><span data-stu-id="fc44b-168">A collection of parameter name/value pairs.</span></span></param>
        <param name="omitDefaults"><span data-ttu-id="fc44b-169">既定値を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc44b-169"><see langword="true" /> if the default values are ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fc44b-170">テンプレートおよびパラメーターのコレクションから新しい URI を作成します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-170">Creates a new URI from the template and the collection of parameters.</span></span></summary>
        <returns><span data-ttu-id="fc44b-171">URI。</span><span class="sxs-lookup"><span data-stu-id="fc44b-171">A URI.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindByPosition">
      <MemberSignature Language="C#" Value="public Uri BindByPosition (Uri baseAddress, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri BindByPosition(class System.Uri baseAddress, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BindByPosition (baseAddress As Uri, ParamArray values As String()) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ BindByPosition(Uri ^ baseAddress, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.BindByPosition : Uri * string[] -&gt; Uri" Usage="uriTemplate.BindByPosition (baseAddress, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="fc44b-172">ベース アドレスを格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="fc44b-172">A <see cref="T:System.Uri" /> that contains the base address.</span></span></param>
        <param name="values"><span data-ttu-id="fc44b-173">パラメーター値。</span><span class="sxs-lookup"><span data-stu-id="fc44b-173">The parameter values.</span></span></param>
        <summary><span data-ttu-id="fc44b-174">テンプレートおよびパラメーター値の配列から新しい URI を作成します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-174">Creates a new URI from the template and an array of parameter values.</span></span></summary>
        <returns><span data-ttu-id="fc44b-175">新しい <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="fc44b-175">A new <see cref="T:System.Uri" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-176">パラメーター値は、左から右の位置でバインドされます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-176">The parameter values are bound by position left to right.</span></span> <span data-ttu-id="fc44b-177">最初のパラメーター値はテンプレートで見つかった最初の変数を置換し、2 番目のパラメーター値は 2 番目の値を置換し、以降も同様にします。</span><span class="sxs-lookup"><span data-stu-id="fc44b-177">The first parameter value replaces the first variable found in the template, the second parameter value replaces the second variable, and so on.</span></span> <span data-ttu-id="fc44b-178">このメソッドに渡された変数はエスケープされます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-178">Variables passed to this method are escaped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc44b-179">値パラメーターに渡されるパラメーターの数は、テンプレート内の変数の数と一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fc44b-179">The number of parameters passed in the values parameter must match the number of variables in the template.</span></span> <span data-ttu-id="fc44b-180">一致しない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-180">If not, a <xref:System.FormatException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fc44b-181">生成された URI が、それを生成するために使用されたテンプレートと照合されないようにするパラメーター値配列に、テキストで渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-181">It is possible to pass in text within the parameter values array that prevents the generated URI from matching the template that is used to generate it.</span></span> <span data-ttu-id="fc44b-182">そのようなテキストの例には、'/'、'.'、'..'、'\*'、'{'、および '}' が含まれます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-182">Examples of such text includes: '/', '.','..', '\*', '{', and '}'.</span></span> <span data-ttu-id="fc44b-183">次のコードでこれを示します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-183">The following code demonstrates this.</span></span>  
  
 `UriTemplate template = new UriTemplate("far/{bat}/baz");`  
  
 `Uri uri = new Uri("http://localhost/Base");`  
  
 `Uri result = template.BindByPosition(uri, ".");   // returns Base/form/baz`  
  
 `Uri result = template.BindByPosition(uri, "..");  // returns Base/baz`  
  
 `Uri result = template.BindByPosition(uri, "x/y");  // returns Base/form/x/y/baz`  
  
 `Uri result = template.BindByPosition(uri, "{x}");  // returns Base/form/{x}/baz`  
  
 `Uri result = template.BindByPosition(uri, "*");  // returns Base/form/*/baz`  
  
   
  
## Examples  
 <span data-ttu-id="fc44b-184">次の例は、<xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29> を呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-184">The following example shows how to call the <xref:System.UriTemplate.BindByPosition%28System.Uri%2CSystem.String%5B%5D%29>.</span></span>  
  
 [!code-csharp[UriTemplate#5](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#5)]
 [!code-vb[UriTemplate#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Defaults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Defaults" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Defaults As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Defaults { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.UriTemplate.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc44b-185">既定のパラメーター値に対する名前と値のペアのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-185">Gets a collection of name/value pairs for any default parameter values.</span></span></summary>
        <value><span data-ttu-id="fc44b-186">ジェネリック型のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="fc44b-186">A generic dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTrailingSlash">
      <MemberSignature Language="C#" Value="public bool IgnoreTrailingSlash { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.IgnoreTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoreTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTrailingSlash { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreTrailingSlash : bool" Usage="System.UriTemplate.IgnoreTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc44b-187">候補 URI と照合する際にテンプレートの末尾のスラッシュ記号 "/" を無視するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-187">Specifies whether trailing slashes "/" in the template should be ignored when matching candidate URIs.</span></span></summary>
        <value><span data-ttu-id="fc44b-188">末尾のスラッシュ記号 "/" を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc44b-188"><see langword="true" /> if trailing slashes "/" should be ignored, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentTo">
      <MemberSignature Language="C#" Value="public bool IsEquivalentTo (UriTemplate other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEquivalentTo(class System.UriTemplate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEquivalentTo (other As UriTemplate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEquivalentTo(UriTemplate ^ other);" />
      <MemberSignature Language="F#" Value="member this.IsEquivalentTo : UriTemplate -&gt; bool" Usage="uriTemplate.IsEquivalentTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UriTemplate" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fc44b-189">比較対象の <see cref="T:System.UriTemplate" />。</span><span class="sxs-lookup"><span data-stu-id="fc44b-189">The <see cref="T:System.UriTemplate" /> to compare.</span></span></param>
        <summary><span data-ttu-id="fc44b-190"><see cref="T:System.UriTemplate" /> が構造的に他のものと等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-190">Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</span></span></summary>
        <returns><span data-ttu-id="fc44b-191"><see cref="T:System.UriTemplate" /> が構造的に他と等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fc44b-191"><see langword="true" /> if the <see cref="T:System.UriTemplate" /> is structurally equivalent to another; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-192">2 つの <xref:System.UriTemplate> インスタンスは、リテラル文字列が同一で、変数が同じセグメントに登場する場合は同等です。</span><span class="sxs-lookup"><span data-stu-id="fc44b-192">Two <xref:System.UriTemplate> instances are equivalent if their literal strings are identical and the variables appear in the same segments.</span></span> <span data-ttu-id="fc44b-193">たとえば、"weather/{state}/{city}" は "weather/{country}/{village}" と同等です。</span><span class="sxs-lookup"><span data-stu-id="fc44b-193">For example "weather/{state}/{city}" is equivalent to "weather/{country}/{village}".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc44b-194">次の例は、<xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29> を呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-194">The following example shows how to call the <xref:System.UriTemplate.IsEquivalentTo%28System.UriTemplate%29>.</span></span>  
  
 [!code-csharp[UriTemplate#6](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#6)]
 [!code-vb[UriTemplate#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public UriTemplateMatch Match (Uri baseAddress, Uri candidate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.UriTemplateMatch Match(class System.Uri baseAddress, class System.Uri candidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.Match(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Match (baseAddress As Uri, candidate As Uri) As UriTemplateMatch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UriTemplateMatch ^ Match(Uri ^ baseAddress, Uri ^ candidate);" />
      <MemberSignature Language="F#" Value="member this.Match : Uri * Uri -&gt; UriTemplateMatch" Usage="uriTemplate.Match (baseAddress, candidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriTemplateMatch</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseAddress" Type="System.Uri" />
        <Parameter Name="candidate" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="baseAddress"><span data-ttu-id="fc44b-195">ベース アドレス。</span><span class="sxs-lookup"><span data-stu-id="fc44b-195">The base address.</span></span></param>
        <param name="candidate"><span data-ttu-id="fc44b-196">テンプレートと照合する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="fc44b-196">The <see cref="T:System.Uri" /> to match against the template.</span></span></param>
        <summary><span data-ttu-id="fc44b-197"><see cref="T:System.Uri" /> と <see cref="T:System.UriTemplate" /> との照合を試みます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-197">Attempts to match a <see cref="T:System.Uri" /> to a <see cref="T:System.UriTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="fc44b-198">インスタンス。</span><span class="sxs-lookup"><span data-stu-id="fc44b-198">An instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-199">照合が正常に終了した場合、<xref:System.UriTemplateMatch> には候補 URI の URI セグメント、変数値、クエリ文字列、およびワールドカード セグメントが設定されます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-199">If the match is successful the <xref:System.UriTemplateMatch> is populated with the URI segments, variable values, query string values, and wildcard segments from the candidate URI.</span></span> <span data-ttu-id="fc44b-200">照合が正常に終了しない場合、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="fc44b-200">If the match is unsuccessful, `null` is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc44b-201">次の例では、<xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-201">The following example shows how to call the <xref:System.UriTemplate.Match%28System.Uri%2CSystem.Uri%29> method.</span></span>  
  
 [!code-csharp[UriTemplate#7](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#7)]
 [!code-vb[UriTemplate#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathSegmentVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; PathSegmentVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; PathSegmentVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.PathSegmentVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathSegmentVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ PathSegmentVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathSegmentVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.PathSegmentVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc44b-202">テンプレートのパス セグメント内で使用される変数名のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-202">Gets a collection of variable names used within path segments in the template.</span></span></summary>
        <value><span data-ttu-id="fc44b-203">テンプレートのパス セグメント内に表示される変数名のコレクション。</span><span class="sxs-lookup"><span data-stu-id="fc44b-203">A collection of variable names that appear within the template's path segment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-204">このコレクションは、テンプレートのクエリ部分に表示される変数名を除外します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-204">The collection excludes the names of variables that appear in the query portion of the template.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc44b-205">次の例は、<xref:System.UriTemplate.PathSegmentVariableNames%2A> プロパティにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-205">The following example shows how to access the <xref:System.UriTemplate.PathSegmentVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#2](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#2)]
 [!code-vb[UriTemplate#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryValueVariableNames">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; QueryValueVariableNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; QueryValueVariableNames" />
      <MemberSignature Language="DocId" Value="P:System.UriTemplate.QueryValueVariableNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryValueVariableNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ QueryValueVariableNames { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryValueVariableNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.UriTemplate.QueryValueVariableNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fc44b-206">テンプレートのクエリ文字列内で使用される変数名のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-206">Gets a collection of variable names used within the query string in the template.</span></span></summary>
        <value><span data-ttu-id="fc44b-207">テンプレート文字列のクエリ部分に表示されるテンプレート変数名のコレクション。</span><span class="sxs-lookup"><span data-stu-id="fc44b-207">A collection of template variable names that appear in the query portion of the template string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc44b-208">このコレクションは、テンプレート文字列のパス セクションに表示される変数名を除外します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-208">This collection excludes variable names that appear in the path section of the template string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc44b-209">次の例は、<xref:System.UriTemplate.QueryValueVariableNames%2A> プロパティにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-209">The following example shows how to access the <xref:System.UriTemplate.QueryValueVariableNames%2A> property.</span></span>  
  
 [!code-csharp[UriTemplate#3](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#3)]
 [!code-vb[UriTemplate#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UriTemplate.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="uriTemplate.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fc44b-210"><see cref="T:System.UriTemplate" /> インスタンスの文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="fc44b-210">Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></summary>
        <returns><span data-ttu-id="fc44b-211"><see cref="T:System.UriTemplate" /> インスタンスの表現。</span><span class="sxs-lookup"><span data-stu-id="fc44b-211">The representation of the <see cref="T:System.UriTemplate" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fc44b-212">次の例では、<xref:System.UriTemplate.ToString> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="fc44b-212">The following example shows how to call the <xref:System.UriTemplate.ToString> method.</span></span>  
  
 [!code-csharp[UriTemplate#8](~/samples/snippets/csharp/VS_Snippets_CFX/uritemplate/cs/snippets.cs#8)]
 [!code-vb[UriTemplate#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/uritemplate/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
