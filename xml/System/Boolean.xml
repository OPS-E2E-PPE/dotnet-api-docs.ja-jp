<Type Name="Boolean" FullName="System.Boolean">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2f2c2b7a0622afc47d3a0936911416b79c9708e" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78828605" /></Metadata><TypeSignature Language="C#" Value="public struct Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IConvertible, class System.IEquatable`1&lt;bool&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Boolean" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IComparable(Of Boolean), IConvertible, IEquatable(Of Boolean)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IComparable&lt;bool&gt;, IConvertible, IEquatable&lt;bool&gt;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type bool = struct&#xA;    interface IConvertible" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct Boolean : IComparable, IConvertible" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IConvertible" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IConvertible" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IConvertible" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IConvertible, class System.IEquatable`1&lt;bool&gt;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public struct Boolean : IComparable, IComparable&lt;bool&gt;, IEquatable&lt;bool&gt;" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit bool extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;bool&gt;, class System.IEquatable`1&lt;bool&gt;" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public Structure Boolean&#xA;Implements IComparable, IComparable(Of Boolean), IEquatable(Of Boolean)" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="public value class Boolean : IComparable, IComparable&lt;bool&gt;, IEquatable&lt;bool&gt;" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type bool = struct" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Boolean&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8423a-101">ブール値 (<see langword="true" /> または <see langword="false" />) を表します。</span><span class="sxs-lookup"><span data-stu-id="8423a-101">Represents a Boolean (<see langword="true" /> or <see langword="false" />) value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-102"><xref:System.Boolean> インスタンスは、`true`または `false`の2つの値のいずれかを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="8423a-102">A <xref:System.Boolean> instance can have either of two values: `true`, or `false`.</span></span>

 <span data-ttu-id="8423a-103"><xref:System.Boolean> 構造体には、次のタスクをサポートするメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="8423a-103">The <xref:System.Boolean> structure provides methods that support the following tasks:</span></span>

-   <span data-ttu-id="8423a-104">ブール値から文字列への変換: <xref:System.Boolean.ToString%2A></span><span class="sxs-lookup"><span data-stu-id="8423a-104">Converting Boolean values to strings: <xref:System.Boolean.ToString%2A></span></span>

-   <span data-ttu-id="8423a-105">文字列を解析してブール値に変換する方法: <xref:System.Boolean.Parse%2A> および <xref:System.Boolean.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="8423a-105">Parsing strings to convert them to Boolean values: <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A></span></span>

-   <span data-ttu-id="8423a-106">値の比較: <xref:System.Boolean.CompareTo%2A> と <xref:System.Boolean.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="8423a-106">Comparing values: <xref:System.Boolean.CompareTo%2A> and <xref:System.Boolean.Equals%2A></span></span>

 <span data-ttu-id="8423a-107">以下のセクションでは、これらのタスクとその他の使用方法の詳細について説明します。</span><span class="sxs-lookup"><span data-stu-id="8423a-107">The following sections explain these tasks and other usage details:</span></span>

- [<span data-ttu-id="8423a-108">ブール値の書式設定</span><span class="sxs-lookup"><span data-stu-id="8423a-108">Formatting Boolean values</span></span>](#Formatting)
- [<span data-ttu-id="8423a-109">ブール値との間の変換</span><span class="sxs-lookup"><span data-stu-id="8423a-109">Converting to and from Boolean values</span></span>](#Converting)
- [<span data-ttu-id="8423a-110">ブール値の解析</span><span class="sxs-lookup"><span data-stu-id="8423a-110">Parsing Boolean values</span></span>](#Parsing)
- [<span data-ttu-id="8423a-111">ブール値の比較</span><span class="sxs-lookup"><span data-stu-id="8423a-111">Comparing Boolean values</span></span>](#Comparing)
- [<span data-ttu-id="8423a-112">ブール値をバイナリ値として使用する</span><span class="sxs-lookup"><span data-stu-id="8423a-112">Working with Booleans as binary values</span></span>](#Binary)
- [<span data-ttu-id="8423a-113">ブール値を使用した操作の実行</span><span class="sxs-lookup"><span data-stu-id="8423a-113">Performing operations with Boolean values</span></span>](#Operations)
- [<span data-ttu-id="8423a-114">ブール値と相互運用</span><span class="sxs-lookup"><span data-stu-id="8423a-114">Booleans and Interop</span></span>](#Interop)

<a name="Formatting"></a>
## <a name="formatting-boolean-values"></a><span data-ttu-id="8423a-115">ブール値の書式設定</span><span class="sxs-lookup"><span data-stu-id="8423a-115">Formatting Boolean values</span></span>
 <span data-ttu-id="8423a-116"><xref:System.Boolean> の文字列形式は、`true` 値の場合は "True"、`false` 値の場合は "False" です。</span><span class="sxs-lookup"><span data-stu-id="8423a-116">The string representation of a <xref:System.Boolean> is either "True" for a `true` value or "False" for a `false` value.</span></span> <span data-ttu-id="8423a-117"><xref:System.Boolean> 値の文字列形式は、読み取り専用の <xref:System.Boolean.TrueString> および <xref:System.Boolean.FalseString> フィールドによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-117">The string representation of a <xref:System.Boolean> value is defined by the read-only <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields.</span></span>

 <span data-ttu-id="8423a-118"><xref:System.Boolean.ToString%2A> メソッドを使用して、ブール値を文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="8423a-118">You use the <xref:System.Boolean.ToString%2A> method to convert Boolean values to strings.</span></span> <span data-ttu-id="8423a-119">ブール構造体には、パラメーターなしの <xref:System.Boolean.ToString> メソッドと <xref:System.Boolean.ToString%28System.IFormatProvider%29> メソッドの2つの <xref:System.Boolean.ToString%2A> オーバーロードが含まれます。これには、書式設定を制御するパラメーターが含まれます。</span><span class="sxs-lookup"><span data-stu-id="8423a-119">The Boolean structure includes two <xref:System.Boolean.ToString%2A> overloads: the parameterless <xref:System.Boolean.ToString> method and the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method, which includes a parameter that controls formatting.</span></span> <span data-ttu-id="8423a-120">ただし、このパラメーターは無視されるため、2つのオーバーロードは同じ文字列を生成します。</span><span class="sxs-lookup"><span data-stu-id="8423a-120">However, because this parameter is ignored, the two overloads produce identical strings.</span></span> <span data-ttu-id="8423a-121"><xref:System.Boolean.ToString%28System.IFormatProvider%29> メソッドは、カルチャに依存した書式設定をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="8423a-121">The <xref:System.Boolean.ToString%28System.IFormatProvider%29> method does not support culture-sensitive formatting.</span></span>

 <span data-ttu-id="8423a-122">次の例は、<xref:System.Boolean.ToString%2A> メソッドを使用した書式設定を示しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-122">The following example illustrates formatting with the <xref:System.Boolean.ToString%2A> method.</span></span> <span data-ttu-id="8423a-123">この例では[複合書式指定](~/docs/standard/base-types/composite-formatting.md)機能を使用しているため、<xref:System.Boolean.ToString%2A> メソッドが暗黙的に呼び出されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-123">Note that the example uses the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature, so the <xref:System.Boolean.ToString%2A> method is called implicitly.</span></span>

 [!code-csharp[System.Boolean.Structure#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring1.cs#3)]
 [!code-vb[System.Boolean.Structure#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring1.vb#3)]

 <span data-ttu-id="8423a-124"><xref:System.Boolean> 構造体は2つの値しか持つことができないため、カスタム書式設定を簡単に追加できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-124">Because the <xref:System.Boolean> structure can have only two values, it is easy to add custom formatting.</span></span> <span data-ttu-id="8423a-125">他の文字列リテラルが "True" と "False" に置き換えられる単純なカスタム書式設定の場合C#は、の[条件演算子](~/docs/csharp/language-reference/operators/conditional-operator.md)や Visual Basic の[If 演算子](~/docs/visual-basic/language-reference/operators/if-operator.md)など、使用している言語でサポートされている任意の条件付き評価機能を使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-125">For simple custom formatting in which other string literals are substituted for "True" and "False", you can use any conditional evaluation feature supported by your language, such as the [conditional operator](~/docs/csharp/language-reference/operators/conditional-operator.md) in C# or the [If operator](~/docs/visual-basic/language-reference/operators/if-operator.md) in Visual Basic.</span></span> <span data-ttu-id="8423a-126">次の例では、この方法を使用して、<xref:System.Boolean> 値を "True" または "False" ではなく "No" として書式設定します。</span><span class="sxs-lookup"><span data-stu-id="8423a-126">The following example uses this technique to format <xref:System.Boolean> values as "Yes" and "No" rather than "True" and "False".</span></span>

 [!code-csharp[System.Boolean.Structure#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/tostring2.cs#4)]
 [!code-vb[System.Boolean.Structure#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/tostring2.vb#4)]

 <span data-ttu-id="8423a-127">カルチャに依存した書式設定など、より複雑なカスタム書式設定操作の場合は、<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> メソッドを呼び出し、<xref:System.ICustomFormatter> の実装を提供できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-127">For more complex custom formatting operations, including culture-sensitive formatting, you can call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method and provide an <xref:System.ICustomFormatter> implementation.</span></span> <span data-ttu-id="8423a-128">次の例では、<xref:System.ICustomFormatter> および <xref:System.IFormatProvider> インターフェイスを実装して、英語 (米国)、フランス語 (フランス)、およびロシア語 (ロシア) のカルチャに対してカルチャに依存するブール型文字列を提供しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-128">The following example implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to provide culture-sensitive Boolean strings for the English (United States), French (France), and Russian (Russia) cultures.</span></span>

 [!code-csharp[System.Boolean.Structure#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/format3.cs#5)]
 [!code-vb[System.Boolean.Structure#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/format3.vb#5)]

 <span data-ttu-id="8423a-129">必要に応じて、[リソースファイル](~/docs/framework/resources/index.md)を使用して、カルチャ固有のブール型文字列を定義できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-129">Optionally, you can use [resource files](~/docs/framework/resources/index.md) to define culture-specific Boolean strings.</span></span>

<a name="Converting"></a>
## <a name="converting-to-and-from-boolean-values"></a><span data-ttu-id="8423a-130">ブール値との間の変換</span><span class="sxs-lookup"><span data-stu-id="8423a-130">Converting to and from Boolean values</span></span>
 <span data-ttu-id="8423a-131"><xref:System.Boolean> 構造体は、<xref:System.IConvertible> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="8423a-131">The <xref:System.Boolean> structure implements the <xref:System.IConvertible> interface.</span></span>  <span data-ttu-id="8423a-132">その結果、<xref:System.Convert> クラスを使用して、.NET で <xref:System.Boolean> 値とその他のプリミティブ型の間の変換を実行したり、<xref:System.Boolean> 構造体の明示的な実装を呼び出したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="8423a-132">As a result, you can use the <xref:System.Convert> class to perform conversions between a <xref:System.Boolean> value and any other primitive type in .NET, or you can call the <xref:System.Boolean> structure's explicit implementations.</span></span> <span data-ttu-id="8423a-133">ただし、<xref:System.Boolean> と次の型の間の変換はサポートされていないため、対応する変換メソッドは <xref:System.InvalidCastException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="8423a-133">However, conversions between a <xref:System.Boolean> and the following types are not supported, so the corresponding conversion methods throw an <xref:System.InvalidCastException> exception:</span></span>

-   <span data-ttu-id="8423a-134"><xref:System.Boolean> と <xref:System.Char> 間の変換 (<xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> および <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> メソッド)</span><span class="sxs-lookup"><span data-stu-id="8423a-134">Conversion between <xref:System.Boolean> and <xref:System.Char> (the <xref:System.Convert.ToBoolean%28System.Char%29?displayProperty=nameWithType> and <xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>

-   <span data-ttu-id="8423a-135"><xref:System.Boolean> と <xref:System.DateTime> 間の変換 (<xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> および <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> メソッド)</span><span class="sxs-lookup"><span data-stu-id="8423a-135">Conversion between <xref:System.Boolean> and <xref:System.DateTime> (the <xref:System.Convert.ToBoolean%28System.DateTime%29?displayProperty=nameWithType> and <xref:System.Convert.ToDateTime%28System.Boolean%29?displayProperty=nameWithType> methods)</span></span>

 <span data-ttu-id="8423a-136">整数または浮動小数点数からブール値への変換はすべて、0以外の値を `true` に、0は `false`に変換します。</span><span class="sxs-lookup"><span data-stu-id="8423a-136">All conversions from integral or floating-point numbers to Boolean values convert non-zero values to `true` and zero values to `false`.</span></span>  <span data-ttu-id="8423a-137">次の例は、<xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> クラスの選択されたオーバーロードを呼び出すことによってこれを示しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-137">The following example illustrates this by calling selected overloads of the <xref:System.Convert.ToBoolean%2A?displayProperty=nameWithType> class.</span></span>

 [!code-csharp[System.Boolean.Structure#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion1.cs#6)]
 [!code-vb[System.Boolean.Structure#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion1.vb#6)]

 <span data-ttu-id="8423a-138">浮動小数点値からブール値に変換する場合、変換メソッドはゼロと正確な比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="8423a-138">When converting from floating-point values to Boolean values, the conversion methods perform an exact comparison with zero.</span></span> <span data-ttu-id="8423a-139">浮動小数点値の精度が失われた場合、予期しない結果になることがあります。</span><span class="sxs-lookup"><span data-stu-id="8423a-139">If the floating-point value has lost precision, the result can be unexpected.</span></span> <span data-ttu-id="8423a-140">これを次の例に示します。この例では、値を0に設定する <xref:System.Double> 変数は、ブール値に変換されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-140">This is illustrated in the following example, in which a <xref:System.Double> variable whose value should be zero is converted to a Boolean value.</span></span> <span data-ttu-id="8423a-141">この例に示すように、0.2 が繰り返し追加されると有効桁数が失われるため、結果は `true` になります。</span><span class="sxs-lookup"><span data-stu-id="8423a-141">As the example shows, the result is `true` because repeated additions of 0.2 have resulted in a loss of precision.</span></span>

 <span data-ttu-id="8423a-142">ブール値から数値に変換する場合、<xref:System.Convert> クラスの変換メソッドは、`true` を1に変換し `false` 0 に変換します。</span><span class="sxs-lookup"><span data-stu-id="8423a-142">When converting from Boolean to numeric values, the conversion methods of the <xref:System.Convert> class convert `true` to 1 and `false` to 0.</span></span> <span data-ttu-id="8423a-143">ただし、Visual Basic 変換関数は、`true` を 255 (<xref:System.Byte> 値への変換の場合) または-1 (その他すべての数値変換の場合) に変換します。</span><span class="sxs-lookup"><span data-stu-id="8423a-143">However, Visual Basic conversion functions convert `true` to either 255 (for conversions to <xref:System.Byte> values) or -1 (for all other numeric conversions).</span></span> <span data-ttu-id="8423a-144">次の例では、<xref:System.Convert> メソッドを使用して `true` を数値に変換します。 Visual Basic 例の場合は、Visual Basic 言語の独自の変換演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="8423a-144">The following example converts `true` to numeric values by using a <xref:System.Convert> method, and, in the case of the Visual Basic example, by using the Visual Basic language's own conversion operator.</span></span>

 [!code-csharp[System.Boolean.Structure#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/conversion3.cs#8)]
 [!code-vb[System.Boolean.Structure#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/conversion3.vb#8)]

 <span data-ttu-id="8423a-145"><xref:System.Boolean> から文字列値への変換については、「[ブール値の書式設定](#Formatting)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-145">For conversions from <xref:System.Boolean> to string values, see the [Formatting Boolean Values](#Formatting) section.</span></span> <span data-ttu-id="8423a-146">文字列から <xref:System.Boolean> 値への変換については、「[ブール値の解析](#Parsing)」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-146">For conversions from strings to <xref:System.Boolean> values, see the [Parsing Boolean Values](#Parsing) section.</span></span>

<a name="Parsing"></a>
## <a name="parsing-boolean-values"></a><span data-ttu-id="8423a-147">ブール値の解析</span><span class="sxs-lookup"><span data-stu-id="8423a-147">Parsing Boolean values</span></span>
 <span data-ttu-id="8423a-148"><xref:System.Boolean> 構造体には、文字列をブール値に変換する2つの静的解析メソッド <xref:System.Boolean.Parse%2A> と <xref:System.Boolean.TryParse%2A>が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8423a-148">The <xref:System.Boolean> structure includes two static parsing methods, <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A>, that convert a string to a Boolean value.</span></span> <span data-ttu-id="8423a-149">ブール値の文字列形式は、<xref:System.Boolean.TrueString> と <xref:System.Boolean.FalseString> のフィールドの値 (それぞれ "True" と "False") の値の大文字と小文字を区別しないで定義されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-149">The string representation of a Boolean value is defined by the case-insensitive equivalents of the values of the <xref:System.Boolean.TrueString> and <xref:System.Boolean.FalseString> fields, which are "True" and "False", respectively.</span></span> <span data-ttu-id="8423a-150">つまり、正常に解析される文字列は、"True"、"False"、"True"、"False"、または大文字と小文字が混在する文字列のみです。</span><span class="sxs-lookup"><span data-stu-id="8423a-150">In other words, the only strings that parse successfully are "True", "False", "true", "false", or some mixed-case equivalent.</span></span> <span data-ttu-id="8423a-151">"0" や "1" などの数値文字列を正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="8423a-151">You cannot successfully parse numeric strings such as "0" or "1".</span></span> <span data-ttu-id="8423a-152">文字列比較の実行時に、先頭または末尾の空白文字は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="8423a-152">Leading or trailing white-space characters are not considered when performing the string comparison.</span></span>

 <span data-ttu-id="8423a-153">次の例では、<xref:System.Boolean.Parse%2A> メソッドと <xref:System.Boolean.TryParse%2A> メソッドを使用して、いくつかの文字列を解析します。</span><span class="sxs-lookup"><span data-stu-id="8423a-153">The following example uses the <xref:System.Boolean.Parse%2A> and <xref:System.Boolean.TryParse%2A> methods to parse a number of strings.</span></span> <span data-ttu-id="8423a-154">"True" と "False" に相当する、大文字と小文字を区別しないものだけを正常に解析できることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-154">Note that only the case-insensitive equivalents of "True" and "False" can be successfully parsed.</span></span>

 [!code-csharp[System.Boolean.Structure#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse2.cs#2)]
 [!code-vb[System.Boolean.Structure#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse2.vb#2)]

 <span data-ttu-id="8423a-155">Visual Basic でプログラミングしている場合は、`CBool` 関数を使用して、数値の文字列形式をブール値に変換できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-155">If you are programming in Visual Basic, you can use the `CBool` function to convert the string representation of a number to a Boolean value.</span></span> <span data-ttu-id="8423a-156">"0" は `false`に変換され、0以外の値の文字列形式は `true`に変換されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-156">"0" is converted to `false`, and the string representation of any non-zero value is converted to `true`.</span></span> <span data-ttu-id="8423a-157">Visual Basic でプログラミングしていない場合は、数値文字列を数値に変換してから、ブール値に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8423a-157">If you are not programming in Visual Basic, you must convert your numeric string to a number before converting it to a Boolean.</span></span> <span data-ttu-id="8423a-158">次の例は、整数の配列をブール値に変換することによってこれを示しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-158">The following example illustrates this by converting an array of integers to Boolean values.</span></span>

 [!code-csharp[System.Boolean.Structure#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/parse3.cs#9)]
 [!code-vb[System.Boolean.Structure#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/parse3.vb#9)]

<a name="Comparing"></a>
## <a name="comparing-boolean-values"></a><span data-ttu-id="8423a-159">ブール値の比較</span><span class="sxs-lookup"><span data-stu-id="8423a-159">Comparing Boolean values</span></span>
 <span data-ttu-id="8423a-160">ブール値は `true` または `false`のいずれかであるため、<xref:System.Boolean.CompareTo%2A> メソッドを明示的に呼び出す理由はほとんどありません。これは、インスタンスが指定した値より大きいか、小さいか、または等しいかを示します。</span><span class="sxs-lookup"><span data-stu-id="8423a-160">Because Boolean values are either `true` or `false`, there is little reason to explicitly call the <xref:System.Boolean.CompareTo%2A> method, which indicates whether an instance is greater than, less than, or equal to a specified value.</span></span> <span data-ttu-id="8423a-161">通常、2つのブール変数を比較するには、<xref:System.Boolean.Equals%2A> メソッドを呼び出すか、または言語の等値演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="8423a-161">Typically, to compare two Boolean variables, you call the <xref:System.Boolean.Equals%2A> method or use your language's equality operator.</span></span>

 <span data-ttu-id="8423a-162">ただし、ブール値変数とリテラルブール値 `true` または `false`を比較する場合は、ブール値を評価した結果がそのブール値であるため、明示的な比較を行う必要はありません。</span><span class="sxs-lookup"><span data-stu-id="8423a-162">However, when you want to compare a Boolean variable with the literal Boolean value `true` or `false`, it is not necessary to do an explicit comparison, because the result of evaluating a Boolean value is that Boolean value.</span></span> <span data-ttu-id="8423a-163">式の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="8423a-163">For example, the expressions</span></span>

 [!code-csharp[System.Boolean.Structure#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#12)]
 [!code-vb[System.Boolean.Structure#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#12)]

 <span data-ttu-id="8423a-164">and</span><span class="sxs-lookup"><span data-stu-id="8423a-164">and</span></span>

 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]

 <span data-ttu-id="8423a-165">は同等ですが、2番目のはよりコンパクトです。</span><span class="sxs-lookup"><span data-stu-id="8423a-165">are equivalent, but the second is more compact.</span></span> <span data-ttu-id="8423a-166">ただし、どちらの方法でも、同等のパフォーマンスを実現できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-166">However, both techniques offer comparable performance.</span></span>

<a name="Binary"></a>
## <a name="working-with-booleans-as-binary-values"></a><span data-ttu-id="8423a-167">ブール値をバイナリ値として使用する</span><span class="sxs-lookup"><span data-stu-id="8423a-167">Working with Booleans as binary values</span></span>
 <span data-ttu-id="8423a-168">ブール値として次の C# の例は 1 バイトのメモリを占有します。</span><span class="sxs-lookup"><span data-stu-id="8423a-168">A Boolean value occupies one byte of memory, as the following C# example shows.</span></span> <span data-ttu-id="8423a-169">例をコンパイルする必要があります、`/unsafe`スイッチします。</span><span class="sxs-lookup"><span data-stu-id="8423a-169">The example must be compiled with the `/unsafe` switch.</span></span>

 [!code-csharp[System.Boolean.Structure#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/size1.cs#14)]

 <span data-ttu-id="8423a-170">バイトの下位ビットは、その値を表すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-170">The byte's low-order bit is used to represent its value.</span></span> <span data-ttu-id="8423a-171">値1は `true`を表します。値0は `false`を表します。</span><span class="sxs-lookup"><span data-stu-id="8423a-171">A value of 1 represents `true`; a value of 0 represents `false`.</span></span>

> [!WARNING]
>  <span data-ttu-id="8423a-172"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> 構造体を使用して、ブール値のセットを操作できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-172">You can use the <xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> structure to work with sets of Boolean values.</span></span>

 <span data-ttu-id="8423a-173"><xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出すことにより、ブール値をバイナリ表現に変換できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-173">You can convert a Boolean value to its binary representation by calling the <xref:System.BitConverter.GetBytes%28System.Boolean%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8423a-174">メソッドは、1つの要素を含むバイト配列を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-174">The method returns a byte array with a single element.</span></span> <span data-ttu-id="8423a-175">バイナリ表現からブール値を復元するには、<xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="8423a-175">To restore a Boolean value from its binary representation, you can call the <xref:System.BitConverter.ToBoolean%28System.Byte%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="8423a-176">次の例では、<xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> メソッドを呼び出して、ブール値をバイナリ表現に変換し、値の個々のビットを表示した後、<xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> メソッドを呼び出して、そのバイナリ表現から値を復元しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-176">The following example calls the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method to convert a Boolean value to its binary representation and displays the individual bits of the value, and then calls the <xref:System.BitConverter.ToBoolean%2A?displayProperty=nameWithType> method to restore the value from its binary representation.</span></span>

 [!code-csharp[System.Boolean.Structure#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/binary1.cs#1)]
 [!code-vb[System.Boolean.Structure#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/binary1.vb#1)]

<a name="Operations"></a>
## <a name="performing-operations-with-boolean-values"></a><span data-ttu-id="8423a-177">ブール値を使用した操作の実行</span><span class="sxs-lookup"><span data-stu-id="8423a-177">Performing operations with Boolean values</span></span>
 <span data-ttu-id="8423a-178">ここでは、アプリでブール値を使用する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="8423a-178">This section illustrates how Boolean values are used in apps.</span></span> <span data-ttu-id="8423a-179">最初のセクションでは、フラグとしての使用方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="8423a-179">The first section discusses its use as a flag.</span></span> <span data-ttu-id="8423a-180">2番目の例では、算術演算の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-180">The second illustrates its use for arithmetic operations.</span></span>

### <a name="boolean-values-as-flags"></a><span data-ttu-id="8423a-181">フラグとしてのブール値</span><span class="sxs-lookup"><span data-stu-id="8423a-181">Boolean values as flags</span></span>
 <span data-ttu-id="8423a-182">ブール変数は、何らかの条件が存在するかどうかを通知するフラグとして最もよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-182">Boolean variables are most commonly used as flags, to signal the presence or absence of some condition.</span></span> <span data-ttu-id="8423a-183">たとえば、<xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> メソッドでは、最後のパラメーター `ignoreCase`は、2つの文字列の比較で大文字と小文字を区別しないか (`ignoreCase` は `true`)、大文字と小文字を区別するか (`ignoreCase` は `false`) を示すフラグです。</span><span class="sxs-lookup"><span data-stu-id="8423a-183">For example, in the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> method, the final parameter, `ignoreCase`, is a flag that indicates whether the comparison of two strings is case-insensitive (`ignoreCase` is `true`) or case-sensitive (`ignoreCase` is `false`).</span></span> <span data-ttu-id="8423a-184">フラグの値は、条件付きステートメントで評価できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-184">The value of the flag can then be evaluated in a conditional statement.</span></span>

 <span data-ttu-id="8423a-185">次の例では、単純なコンソールアプリを使用して、ブール型変数をフラグとして使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-185">The following example uses a simple console app to illustrate the use of Boolean variables as flags.</span></span> <span data-ttu-id="8423a-186">このアプリは、指定されたファイル (`/f` スイッチ) への出力のリダイレクトを有効にするコマンドラインパラメーターを受け取り、指定されたファイルとコンソール (`/b` スイッチ) の両方に出力を送信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="8423a-186">The app accepts command-line parameters that enable output to be redirected to a specified file (the `/f` switch), and that enable output to be sent both to a specified file and to the console (the `/b` switch).</span></span> <span data-ttu-id="8423a-187">このアプリでは、出力をファイルに送信するかどうかを示す `isRedirected` という名前のフラグと、出力をコンソールに送信することを示す `isBoth` という名前のフラグを定義します。</span><span class="sxs-lookup"><span data-stu-id="8423a-187">The app defines a flag named `isRedirected` to indicate whether output is to be sent to a file, and a flag named `isBoth` to indicate that output should be sent to the console.</span></span>

 [!code-csharp[System.Boolean.Structure#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations1.cs#10)]
 [!code-vb[System.Boolean.Structure#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations1.vb#10)]

### <a name="booleans-and-arithmetic-operations"></a><span data-ttu-id="8423a-188">ブール値と算術演算</span><span class="sxs-lookup"><span data-stu-id="8423a-188">Booleans and arithmetic operations</span></span>
 <span data-ttu-id="8423a-189">ブール値は、数値計算をトリガーする条件の存在を示すために使用されることがあります。</span><span class="sxs-lookup"><span data-stu-id="8423a-189">A Boolean value is sometimes used to indicate the presence of a condition that triggers a mathematical calculation.</span></span> <span data-ttu-id="8423a-190">たとえば、`hasShippingCharge` 変数は、請求金額に発送料金を追加するかどうかを示すフラグとして機能します。</span><span class="sxs-lookup"><span data-stu-id="8423a-190">For example, a `hasShippingCharge` variable might serve as a flag to indicate whether to add shipping charges to an invoice amount.</span></span>

 <span data-ttu-id="8423a-191">`false` 値を持つ操作は演算の結果に影響を与えないため、このブール値を算術演算で使用する整数値に変換する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="8423a-191">Because an operation with a `false` value has no effect on the result of an operation, it is not necessary to convert the Boolean to an integral value to use in the mathematical operation.</span></span> <span data-ttu-id="8423a-192">代わりに、条件付きロジックを使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-192">Instead, you can use conditional logic.</span></span>

 <span data-ttu-id="8423a-193">次の例では、小計、出荷料金、およびオプションのサービス料金で構成される金額を計算します。</span><span class="sxs-lookup"><span data-stu-id="8423a-193">The following example computes an amount that consists of a subtotal, a shipping charge, and an optional service charge.</span></span> <span data-ttu-id="8423a-194">`hasServiceCharge` 変数は、サービスの料金が適用されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="8423a-194">The `hasServiceCharge` variable determines whether the service charge is applied.</span></span> <span data-ttu-id="8423a-195">この例では、`hasServiceCharge` を数値に変換してサービス料金の量で乗算する代わりに、条件付きロジックを使用して、該当する場合にサービスの料金を追加します。</span><span class="sxs-lookup"><span data-stu-id="8423a-195">Instead of converting `hasServiceCharge` to a numeric value and multiplying it by the amount of the service charge, the example uses conditional logic to add the service charge amount if it is applicable.</span></span>

 [!code-csharp[System.Boolean.Structure#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.structure/cs/operations2.cs#13)]
 [!code-vb[System.Boolean.Structure#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.structure/vb/operations2.vb#13)]

<a name="Interop"></a>
### <a name="booleans-and-interop"></a><span data-ttu-id="8423a-196">ブール値と相互運用</span><span class="sxs-lookup"><span data-stu-id="8423a-196">Booleans and interop</span></span>
 <span data-ttu-id="8423a-197">基本的なデータ型を COM にマーシャリングするのは一般に単純ですが、<xref:System.Boolean> のデータ型は例外です。</span><span class="sxs-lookup"><span data-stu-id="8423a-197">While marshaling base data types to COM is generally straightforward, the <xref:System.Boolean> data type is an exception.</span></span> <span data-ttu-id="8423a-198"><xref:System.Runtime.InteropServices.MarshalAsAttribute> 属性を適用して、<xref:System.Boolean> 型を次のいずれかの表現にマーシャリングできます。</span><span class="sxs-lookup"><span data-stu-id="8423a-198">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to marshal the <xref:System.Boolean> type to any of the following representations:</span></span>

|<span data-ttu-id="8423a-199">列挙型</span><span class="sxs-lookup"><span data-stu-id="8423a-199">Enumeration type</span></span>|<span data-ttu-id="8423a-200">アンマネージ形式</span><span class="sxs-lookup"><span data-stu-id="8423a-200">Unmanaged format</span></span>|
|----------------------|----------------------|
|<xref:System.Runtime.InteropServices.UnmanagedType.Bool?displayProperty=nameWithType>|<span data-ttu-id="8423a-201">4バイトの整数値。0以外の値は `true` を表し、0は `false`を表します。</span><span class="sxs-lookup"><span data-stu-id="8423a-201">A 4-byte integer value, where any nonzero value represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="8423a-202">これは、構造体の <xref:System.Boolean> フィールドの既定の形式であり、プラットフォーム呼び出しの <xref:System.Boolean> パラメーターの既定の形式です。</span><span class="sxs-lookup"><span data-stu-id="8423a-202">This is the default format of a <xref:System.Boolean> field in a structure and of a <xref:System.Boolean> parameter in platform invoke calls.</span></span>|
|<xref:System.Runtime.InteropServices.UnmanagedType.U1?displayProperty=nameWithType>|<span data-ttu-id="8423a-203">1バイトの整数値。1は `true` を表し、0は `false`を表します。</span><span class="sxs-lookup"><span data-stu-id="8423a-203">A 1-byte integer value, where the 1 represents `true` and 0 represents `false`.</span></span>|
|<xref:System.Runtime.InteropServices.UnmanagedType.VariantBool?displayProperty=nameWithType>|<span data-ttu-id="8423a-204">2バイトの整数値。-1 は `true` を表し、0は `false`を表します。</span><span class="sxs-lookup"><span data-stu-id="8423a-204">A 2-byte integer value, where -1 represents `true` and 0 represents `false`.</span></span> <span data-ttu-id="8423a-205">これは、COM 相互運用呼び出しの <xref:System.Boolean> パラメーターの既定の形式です。</span><span class="sxs-lookup"><span data-stu-id="8423a-205">This is the default format of a <xref:System.Boolean> parameter in COM interop calls.</span></span>|

 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8423a-206">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="8423a-206">All members of this type are thread safe.</span></span> <span data-ttu-id="8423a-207">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-207">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="8423a-208">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="8423a-208">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8423a-209">このインスタンスを指定されたオブジェクトまたは <see cref="T:System.Boolean" /> オブジェクトと比較し、それらの互いのリレーションシップを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-209">Compares this instance to a specified object or <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(bool value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : bool -&gt; int&#xA;override this.CompareTo : bool -&gt; int" Usage="bool.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8423a-210">このインスタンスと比較する <see cref="T:System.Boolean" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8423a-210">A <see cref="T:System.Boolean" /> object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8423a-211">このインスタンスと指定した <see cref="T:System.Boolean" /> オブジェクトを比較し、互いの関係を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-211">Compares this instance to a specified <see cref="T:System.Boolean" /> object and returns an integer that indicates their relationship to one another.</span></span></summary>
        <returns><span data-ttu-id="8423a-212">このインスタンスと <paramref name="value" /> との相対値を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="8423a-212">A signed integer that indicates the relative values of this instance and <paramref name="value" />.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="8423a-213">戻り値</span><span class="sxs-lookup"><span data-stu-id="8423a-213">Return Value</span></span>

 </term><description> <span data-ttu-id="8423a-214">条件</span><span class="sxs-lookup"><span data-stu-id="8423a-214">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="8423a-215">ゼロより小さい</span><span class="sxs-lookup"><span data-stu-id="8423a-215">Less than zero</span></span>

 </term><description> <span data-ttu-id="8423a-216">このインスタンスは <see langword="false" /> であり <paramref name="value" /> は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="8423a-216">This instance is <see langword="false" /> and <paramref name="value" /> is <see langword="true" />.</span></span>

 </description></item><item><term> <span data-ttu-id="8423a-217">ゼロ</span><span class="sxs-lookup"><span data-stu-id="8423a-217">Zero</span></span>

 </term><description> <span data-ttu-id="8423a-218">このインスタンスと <paramref name="value" /> が等価 (両方とも <see langword="true" /> か、両方とも <see langword="false" />)。</span><span class="sxs-lookup"><span data-stu-id="8423a-218">This instance and <paramref name="value" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span></span>

 </description></item><item><term> <span data-ttu-id="8423a-219">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="8423a-219">Greater than zero</span></span>

 </term><description> <span data-ttu-id="8423a-220">このインスタンスは <see langword="true" /> であり <paramref name="value" /> は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="8423a-220">This instance is <see langword="true" /> and <paramref name="value" /> is <see langword="false" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-221">このメソッドは、<xref:System.IComparable%601?displayProperty=nameWithType> インターフェイスを実装し、`value` パラメーターをオブジェクトに変換する必要がないため、<xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="8423a-221">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Boolean.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>

 <span data-ttu-id="8423a-222">`value` がインスタンスの型よりも少ないビット (幅が狭い) の場合、一部のプログラミング言語では、パラメーターの値をより多くのビットを持つ値に変換する暗黙的な拡大変換が実行されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-222">If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>

 <span data-ttu-id="8423a-223">たとえば、インスタンスの型が <xref:System.Int32> で、パラメーターの型が <xref:System.Byte>であるとします。</span><span class="sxs-lookup"><span data-stu-id="8423a-223">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="8423a-224">Microsoft C#コンパイラは、パラメーターの値を <xref:System.Int32> オブジェクトとして表す命令を生成し、<xref:System.Int32> インスタンスとパラメーター表現を比較するための <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> メソッドを生成します。</span><span class="sxs-lookup"><span data-stu-id="8423a-224">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method to compare the <xref:System.Int32> instance and parameter representation.</span></span>

 <span data-ttu-id="8423a-225">プログラミング言語のドキュメントを参照して、コンパイラが数値型の暗黙的な拡大変換を実行するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8423a-225">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>



## Examples
 <span data-ttu-id="8423a-226">次のコード例は、いくつかの値および参照型について、<xref:System.Boolean.CompareTo%2A> メソッドのジェネリックおよび非ジェネリックバージョンを示しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-226">The following code example demonstrates generic and nongeneric versions of the <xref:System.Boolean.CompareTo%2A> method for several value and reference types.</span></span>

 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.CompareTo(System.Object)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bool.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8423a-227">このインスタンスと比較するオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-227">An object to compare to this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8423a-228">指定したオブジェクトとこのインスタンスを比較し、互いの関係を示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-228">Compares this instance to a specified object and returns an integer that indicates their relationship to one another.</span></span></summary>
        <returns><span data-ttu-id="8423a-229">このインスタンスと <paramref name="obj" /> の相対順序を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="8423a-229">A signed integer that indicates the relative order of this instance and <paramref name="obj" />.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="8423a-230">戻り値</span><span class="sxs-lookup"><span data-stu-id="8423a-230">Return Value</span></span>

 </term><description> <span data-ttu-id="8423a-231">条件</span><span class="sxs-lookup"><span data-stu-id="8423a-231">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="8423a-232">ゼロより小さい</span><span class="sxs-lookup"><span data-stu-id="8423a-232">Less than zero</span></span>

 </term><description> <span data-ttu-id="8423a-233">このインスタンスは <see langword="false" /> であり <paramref name="obj" /> は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="8423a-233">This instance is <see langword="false" /> and <paramref name="obj" /> is <see langword="true" />.</span></span>

 </description></item><item><term> <span data-ttu-id="8423a-234">ゼロ</span><span class="sxs-lookup"><span data-stu-id="8423a-234">Zero</span></span>

 </term><description> <span data-ttu-id="8423a-235">このインスタンスと <paramref name="obj" /> が等価 (両方とも <see langword="true" /> か、両方とも <see langword="false" />)。</span><span class="sxs-lookup"><span data-stu-id="8423a-235">This instance and <paramref name="obj" /> are equal (either both are <see langword="true" /> or both are <see langword="false" />).</span></span>

 </description></item><item><term> <span data-ttu-id="8423a-236">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="8423a-236">Greater than zero</span></span>

 </term><description> <span data-ttu-id="8423a-237">このインスタンスは <see langword="true" /> であり <paramref name="obj" /> は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="8423a-237">This instance is <see langword="true" /> and <paramref name="obj" /> is <see langword="false" />.</span></span>

<span data-ttu-id="8423a-238">または</span><span class="sxs-lookup"><span data-stu-id="8423a-238">-or-</span></span>

 <span data-ttu-id="8423a-239"><paramref name="obj" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8423a-239"><paramref name="obj" /> is <see langword="null" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-240">`obj` は `null` または `Boolean`のインスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8423a-240">`obj` must be `null` or an instance of `Boolean`; otherwise, an exception is thrown.</span></span>

 <span data-ttu-id="8423a-241">このメソッドは、<xref:System.IComparable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="8423a-241">This method implements the <xref:System.IComparable> interface.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8423a-242"><paramref name="obj" /> が <see cref="T:System.Boolean" />ではありません。</span><span class="sxs-lookup"><span data-stu-id="8423a-242"><paramref name="obj" /> is not a <see cref="T:System.Boolean" />.</span></span></exception>
        <altmember cref="M:System.Boolean.CompareTo(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8423a-243">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Boolean" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-243">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Boolean" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (bool obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(bool obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(bool obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : bool -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8423a-244">このインスタンスと比較する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="8423a-244">A <see cref="T:System.Boolean" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8423a-245">対象のインスタンスが、指定した <see cref="T:System.Boolean" /> オブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-245">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Boolean" /> object.</span></span></summary>
        <returns><span data-ttu-id="8423a-246"><see langword="true" /> の値がこのインスタンスと同じ場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-246"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-247">このメソッドは <xref:System.IEquatable%601?displayProperty=nameWithType> インターフェイスを実装し、`obj` パラメーターをオブジェクトに変換する必要がないため、<xref:System.Boolean.Equals%2A> よりもわずかにパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="8423a-247">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Boolean.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Object)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bool.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8423a-248">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8423a-248">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8423a-249">このインスタンスが指定したオブジェクトと同一であるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-249">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8423a-250"><see langword="true" /> が <paramref name="obj" /> でこのインスタンスと同じ値を保持している場合は <see cref="T:System.Boolean" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-250"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Boolean" /> and has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-251">このメソッドは、<xref:System.Object.Equals%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8423a-251">This method overrides <xref:System.Object.Equals%2A>.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Equals(System.Boolean)" />
        <altmember cref="Overload:System.Boolean.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="FalseString">
      <MemberSignature Language="C#" Value="public static readonly string FalseString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string FalseString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.FalseString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FalseString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ FalseString;" />
      <MemberSignature Language="F#" Value=" staticval mutable FalseString : string" Usage="System.bool.FalseString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8423a-252">ブール値の <see langword="false" /> を文字列として表します。</span><span class="sxs-lookup"><span data-stu-id="8423a-252">Represents the Boolean value <see langword="false" /> as a string.</span></span> <span data-ttu-id="8423a-253">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8423a-253">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-254">このフィールドは、文字列 "False" に相当します。</span><span class="sxs-lookup"><span data-stu-id="8423a-254">This field is equal to the string "False".</span></span>

 <span data-ttu-id="8423a-255"><xref:System.Boolean.FalseString> プロパティは、書式設定および解析操作の `False` <xref:System.Boolean> 値の文字列形式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8423a-255">The <xref:System.Boolean.FalseString> property defines the string representation of a `False` <xref:System.Boolean> value in formatting and parsing operations.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.TrueString" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bool.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8423a-256">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-256">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8423a-257">現在の <see cref="T:System.Boolean" /> のハッシュ コードです。</span><span class="sxs-lookup"><span data-stu-id="8423a-257">A hash code for the current <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-258"><xref:System.Boolean> クラスは、整数、1、および `false` として `true` を整数値0として実装します。</span><span class="sxs-lookup"><span data-stu-id="8423a-258">The <xref:System.Boolean> class implements `true` as the integer, one, and `false` as the integer, zero.</span></span> <span data-ttu-id="8423a-259">ただし、特定のプログラミング言語は、`true` を表し、他の値と `false` ことがあります。</span><span class="sxs-lookup"><span data-stu-id="8423a-259">However, a particular programming language might represent `true` and `false` with other values.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="bool.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8423a-260"><see cref="T:System.Boolean" /> 値の型の型コードを返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-260">Returns the type code for the <see cref="T:System.Boolean" /> value type.</span></span></summary>
        <returns><span data-ttu-id="8423a-261">列挙型定数 <see cref="F:System.TypeCode.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-261">The enumerated constant <see cref="F:System.TypeCode.Boolean" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8423a-262">変換する値を表す文字を含むスパン。</span><span class="sxs-lookup"><span data-stu-id="8423a-262">A span containing the characters representing the value to convert.</span></span></param>
        <summary><span data-ttu-id="8423a-263">論理値の指定したスパン表現を、等価の <see cref="T:System.Boolean" /> 表現に変換します。</span><span class="sxs-lookup"><span data-stu-id="8423a-263">Converts the specified span representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8423a-264"><see langword="true" /> が <paramref name="value" /> と等価な場合、<see cref="F:System.Boolean.TrueString" />。<see langword="false" /> が <paramref name="value" /> と等価な場合、<see cref="F:System.Boolean.FalseString" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-264"><see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static bool Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; bool" Usage="System.bool.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8423a-265">変換する値が含まれている文字列。</span><span class="sxs-lookup"><span data-stu-id="8423a-265">A string containing the value to convert.</span></span></param>
        <summary><span data-ttu-id="8423a-266">論理値の指定した文字列形式を、それと等価な <see cref="T:System.Boolean" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8423a-266">Converts the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8423a-267"><see langword="true" /> が <paramref name="value" /> と等価な場合、<see cref="F:System.Boolean.TrueString" />。<see langword="false" /> が <paramref name="value" /> と等価な場合、<see cref="F:System.Boolean.FalseString" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-267"><see langword="true" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if <paramref name="value" /> is equivalent to <see cref="F:System.Boolean.FalseString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-268">`value` パラメーター (オプションで、空白による前または trailed) には、<xref:System.Boolean.TrueString> または <xref:System.Boolean.FalseString>のいずれかを含める必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8423a-268">The `value` parameter, optionally preceded or trailed by white space, must contain either <xref:System.Boolean.TrueString> or <xref:System.Boolean.FalseString>; otherwise, an exception is thrown.</span></span> <span data-ttu-id="8423a-269">比較では大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="8423a-269">The comparison is case-insensitive.</span></span>



## Examples
 <span data-ttu-id="8423a-270">次のコード例は、<xref:System.Boolean.Parse%2A> メソッドの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-270">The following code example illustrates the use of <xref:System.Boolean.Parse%2A> method.</span></span>

 [!code-cpp[System.Boolean#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#2)]
 [!code-csharp[System.Boolean#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#2)]
 [!code-vb[System.Boolean#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8423a-271"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8423a-271"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8423a-272"><paramref name="value" /> は <see cref="F:System.Boolean.TrueString" /> または <see cref="F:System.Boolean.FalseString" />と等価ではありません。</span><span class="sxs-lookup"><span data-stu-id="8423a-272"><paramref name="value" /> is not equivalent to <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span></span></exception>
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-other.md"><span data-ttu-id="8423a-273">その他の文字列の解析</span><span class="sxs-lookup"><span data-stu-id="8423a-273">Parsing Other Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="bool.System.IComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="bool.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="bool.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-274">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-274">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-275">このメンバーの説明については、<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-275">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-276"><see langword="true" /> または <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-276"><see langword="true" /> or <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-277">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-278">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-278">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="bool.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-279">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-279">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-280">このメンバーの説明については、<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-280">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-281">このインスタンスの値が <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-281">1 if the value of this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-282">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-283">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-283">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-284">別の方法として、<xref:System.Convert.ToByte%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-284">The recommended alternative is to call the <xref:System.Convert.ToByte%2A?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Convert.ToByte(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="bool.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-285">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-285">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-286">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8423a-286">This conversion is not supported.</span></span> <span data-ttu-id="8423a-287">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8423a-287">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-288">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8423a-288">This conversion is not supported.</span></span> <span data-ttu-id="8423a-289">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="8423a-289">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8423a-290"><see cref="T:System.Boolean" /> 値を <see cref="T:System.Char" /> 値に変換しようとしています。</span><span class="sxs-lookup"><span data-stu-id="8423a-290">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.Char" /> value.</span></span> <span data-ttu-id="8423a-291">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8423a-291">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="bool.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-292">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-292">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-293">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8423a-293">This conversion is not supported.</span></span> <span data-ttu-id="8423a-294">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8423a-294">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-295">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8423a-295">This conversion is not supported.</span></span> <span data-ttu-id="8423a-296">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="8423a-296">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8423a-297"><see cref="T:System.Boolean" /> 値を <see cref="T:System.DateTime" /> 値に変換しようとしています。</span><span class="sxs-lookup"><span data-stu-id="8423a-297">You attempt to convert a <see cref="T:System.Boolean" /> value to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="8423a-298">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8423a-298">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="bool.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-299">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-299">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-300">このメンバーの説明については、<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-300">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-301">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-301">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-302">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-302">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-303">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-303">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-304">別の方法として、<xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-304">The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="bool.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-305">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-305">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-306">このメンバーの説明については、<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-306">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-307">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-307">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-308">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-308">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-309">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-309">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-310">別の方法として、<xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-310">The recommended alternative is to call the <xref:System.Convert.ToDouble%2A?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="bool.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-311">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-311">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-312">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-312">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-313">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-313">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-314">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-314">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-315">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-315">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-316">別の方法として、<xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-316">The recommended alternative is to call the <xref:System.Convert.ToInt16%2A?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="bool.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-317">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-317">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-318">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-318">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-319">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-319">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-320">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-320">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-321">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-321">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-322">別の方法として、<xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-322">The recommended alternative is to call the <xref:System.Convert.ToInt32%2A?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="bool.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-323">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-323">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-324">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-324">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-325">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-325">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-326">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-327">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-327">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-328">別の方法として、<xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-328">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="bool.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-329">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-329">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-330">このメンバーの説明については、<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-330">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-331">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-331">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-332">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-332">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-333">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-333">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-334">別の方法として、<xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-334">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="bool.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-335">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-335">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-336">このメンバーの説明については、<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-336">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-337">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-337">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-338">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-338">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-339">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-339">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-340">別の方法として、<xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-340">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToString : IFormatProvider -&gt; string&#xA;override this.System.IConvertible.ToString : IFormatProvider -&gt; string" Usage="bool.System.IConvertible.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="bool.System.IConvertible.ToType (type, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="8423a-341">必要な型。</span><span class="sxs-lookup"><span data-stu-id="8423a-341">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="8423a-342">戻り値の書式に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="8423a-342">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="8423a-343">このメンバーの説明については、<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-343">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-344">この <see langword="Boolean" /> オブジェクトの値に相当する値を持つ、指定された型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8423a-344">An object of the specified type, with a value that is equivalent to the value of this <see langword="Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-345">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-345">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-346">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-346">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-347">別の方法として、<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-347">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8423a-348"><paramref name="type" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8423a-348"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="8423a-349">要求された型変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8423a-349">The requested type conversion is not supported.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="bool.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-350">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-350">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-351">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-351">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-352">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-352">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-353">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-353">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-354">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-354">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-355">別の方法として、<xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-355">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt16" />
        <altmember cref="M:System.Convert.ToUInt16(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="bool.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-356">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-356">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-357">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-357">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-358">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-358">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-359">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-359">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-360">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-360">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-361">別の方法として、<xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-361">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt32" />
        <altmember cref="M:System.Convert.ToUInt32(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="bool.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-362">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-362">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="8423a-363">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-363">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="8423a-364">このインスタンスが <see langword="true" />の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="8423a-364">1 if this instance is <see langword="true" />; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-365">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8423a-365">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8423a-366">これは、<xref:System.Boolean> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-366">It can be used only when the <xref:System.Boolean> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="8423a-367">別の方法として、<xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="8423a-367">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Boolean%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Convert.ToUInt64(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8423a-368">このインスタンスの値をそれと等価な文字列形式に変換します ("True" または "False")。</span><span class="sxs-lookup"><span data-stu-id="8423a-368">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bool.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8423a-369">このインスタンスの値をそれと等価な文字列形式に変換します ("True" または "False")。</span><span class="sxs-lookup"><span data-stu-id="8423a-369">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
        <returns><span data-ttu-id="8423a-370">このインスタンスの値が <see cref="F:System.Boolean.TrueString" /> の場合は "True" (<see langword="true" /> プロパティの値)。このインスタンスの値が <see cref="F:System.Boolean.FalseString" /> の場合は "False" (<see langword="false" /> プロパティの値)。</span><span class="sxs-lookup"><span data-stu-id="8423a-370">"True" (the value of the <see cref="F:System.Boolean.TrueString" /> property) if the value of this instance is <see langword="true" />, or "False" (the value of the <see cref="F:System.Boolean.FalseString" /> property) if the value of this instance is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-371">このメソッドは、定数 "True" または "False" を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-371">This method returns the constants "True" or "False".</span></span>

 <span data-ttu-id="8423a-372">XML では大文字と小文字が区別され、XML 仕様では、有効なブール値のセットとして "true" と "false" が認識されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-372">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="8423a-373"><xref:System.Boolean.ToString> メソッドによって返される文字列を XML ファイルに書き込む場合は、その <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> メソッドを最初に呼び出して、小文字に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8423a-373">If the string returned by the <xref:System.Boolean.ToString> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>



## Examples
 <span data-ttu-id="8423a-374">次の例は、<xref:System.Boolean.ToString%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="8423a-374">The following example illustrates the <xref:System.Boolean.ToString%2A> method.</span></span>

 [!code-cpp[System.Boolean#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Boolean/CPP/booleanmembers.cpp#1)]
 [!code-csharp[System.Boolean#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Boolean/CS/booleanmembers.cs#1)]
 [!code-vb[System.Boolean#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Boolean/VB/booleanmembers.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bool.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="8423a-375">(予約済み) <see cref="T:System.IFormatProvider" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8423a-375">(Reserved) An <see cref="T:System.IFormatProvider" /> object.</span></span></param>
        <summary><span data-ttu-id="8423a-376">このインスタンスの値をそれと等価な文字列形式に変換します ("True" または "False")。</span><span class="sxs-lookup"><span data-stu-id="8423a-376">Converts the value of this instance to its equivalent string representation (either "True" or "False").</span></span></summary>
        <returns><span data-ttu-id="8423a-377">このインスタンスの値が<see cref="F:System.Boolean.TrueString" /> の場合は <see langword="true" />。または、このインスタンスの値が <see cref="F:System.Boolean.FalseString" /> の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-377"><see cref="F:System.Boolean.TrueString" /> if the value of this instance is <see langword="true" />, or <see cref="F:System.Boolean.FalseString" /> if the value of this instance is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-378">`provider` パラメーターは予約されています。</span><span class="sxs-lookup"><span data-stu-id="8423a-378">The `provider` parameter is reserved.</span></span> <span data-ttu-id="8423a-379">このメソッドの実行には関与しません。</span><span class="sxs-lookup"><span data-stu-id="8423a-379">It does not participate in the execution of this method.</span></span> <span data-ttu-id="8423a-380">これは、`provider` パラメーターを持つほとんどのメソッドとは異なり、<xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドがカルチャ固有の設定を反映しないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="8423a-380">This means that the <xref:System.Boolean.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method, unlike most methods with a `provider` parameter, does not reflect culture-specific settings.</span></span>

 <span data-ttu-id="8423a-381">このメソッドは、定数 "True" または "False" を返します。</span><span class="sxs-lookup"><span data-stu-id="8423a-381">This method returns the constants "True" or "False".</span></span> <span data-ttu-id="8423a-382">XML では大文字と小文字が区別され、XML 仕様では、有効なブール値のセットとして "true" と "false" が認識されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8423a-382">Note that XML is case-sensitive, and that the XML specification recognizes "true" and "false" as the valid set of Boolean values.</span></span> <span data-ttu-id="8423a-383"><xref:System.Boolean.ToString%28System.IFormatProvider%29> メソッドによって返される <xref:System.String> オブジェクトを XML ファイルに書き込む場合は、その <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> メソッドを最初に呼び出して、小文字に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8423a-383">If the <xref:System.String> object returned by the <xref:System.Boolean.ToString%28System.IFormatProvider%29> method is to be written to an XML file, its <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> method should be called first to convert it to lowercase.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueString">
      <MemberSignature Language="C#" Value="public static readonly string TrueString;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string TrueString" />
      <MemberSignature Language="DocId" Value="F:System.Boolean.TrueString" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TrueString As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ TrueString;" />
      <MemberSignature Language="F#" Value=" staticval mutable TrueString : string" Usage="System.bool.TrueString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8423a-384">ブール値の <see langword="true" /> を文字列として表します。</span><span class="sxs-lookup"><span data-stu-id="8423a-384">Represents the Boolean value <see langword="true" /> as a string.</span></span> <span data-ttu-id="8423a-385">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8423a-385">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-386">このフィールドは、文字列 "True" に相当します。</span><span class="sxs-lookup"><span data-stu-id="8423a-386">This field is equal to the string "True".</span></span>

 <span data-ttu-id="8423a-387"><xref:System.Boolean.TrueString> プロパティは、書式設定および解析操作の `True` <xref:System.Boolean> 値の文字列形式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8423a-387">The <xref:System.Boolean.TrueString> property defines the string representation of a `True` <xref:System.Boolean> value in formatting and parsing operations.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
        <altmember cref="F:System.Boolean.FalseString" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryFormat(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryFormat(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int -&gt; bool" Usage="bool.TryFormat (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="8423a-388">このメソッドから制御が戻るときは、文字のスパンとして書式設定されているこのインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="8423a-388">When this method returns, this instance's value formatted as a span of characters.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="8423a-389">このメソッドが返すときに、<paramref name="destination" /> に書き込まれる文字数。</span><span class="sxs-lookup"><span data-stu-id="8423a-389">When this method returns, the number of characters that were written in <paramref name="destination" />.</span></span></param>
        <summary><span data-ttu-id="8423a-390">現在のブール型インスタンスの値を、指定した文字スパンに書式設定しようとします。</span><span class="sxs-lookup"><span data-stu-id="8423a-390">Tries to format the value of the current boolean instance into the provided span of characters.</span></span></summary>
        <returns><span data-ttu-id="8423a-391">書式設定が正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-391"><see langword="true" /> if the formatting was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.ReadOnlySpan{System.Char},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * bool -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8423a-392">変換する値を表す文字を含むスパン。</span><span class="sxs-lookup"><span data-stu-id="8423a-392">A span containing the characters representing the value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8423a-393">変換が成功した場合は、このメソッドから戻るときに、<see langword="true" /> が <paramref name="value" /> と等しければ <see cref="F:System.Boolean.TrueString" />、<see langword="false" /> が <paramref name="value" /> と等しければ <see cref="F:System.Boolean.FalseString" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-393">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <paramref name="value" /> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <paramref name="value" /> is equal to <see cref="F:System.Boolean.FalseString" />.</span></span> <span data-ttu-id="8423a-394">変換に失敗した場合は、 <see langword="false" />を格納します。</span><span class="sxs-lookup"><span data-stu-id="8423a-394">If the conversion failed, contains <see langword="false" />.</span></span> <span data-ttu-id="8423a-395"><paramref name="value" /> が <see langword="null" /> であるか、<see cref="F:System.Boolean.TrueString" /> または <see cref="F:System.Boolean.FalseString" /> のいずれかのフィールドの値と等しくない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8423a-395">The conversion fails if <paramref name="value" /> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span></span></param>
        <summary><span data-ttu-id="8423a-396">論理値の指定したスパン表現を、等価の <see cref="T:System.Boolean" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8423a-396">Tries to convert the specified span representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8423a-397"><see langword="true" /> が正常に変換された場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-397"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out bool result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] bool&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Boolean.TryParse(System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] bool % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * bool -&gt; bool" Usage="System.bool.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Boolean" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8423a-398">変換する値が含まれている文字列。</span><span class="sxs-lookup"><span data-stu-id="8423a-398">A string containing the value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8423a-399">変換が成功した場合は、このメソッドから戻るときに、<see langword="true" /> が <paramref name="value" /> と等しければ <see cref="F:System.Boolean.TrueString" />、<see langword="false" /> が <paramref name="value" /> と等しければ <see cref="F:System.Boolean.FalseString" /> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="8423a-399">When this method returns, if the conversion succeeded, contains <see langword="true" /> if <paramref name="value" /> is equal to <see cref="F:System.Boolean.TrueString" /> or <see langword="false" /> if <paramref name="value" /> is equal to <see cref="F:System.Boolean.FalseString" />.</span></span> <span data-ttu-id="8423a-400">変換に失敗した場合は、 <see langword="false" />を格納します。</span><span class="sxs-lookup"><span data-stu-id="8423a-400">If the conversion failed, contains <see langword="false" />.</span></span> <span data-ttu-id="8423a-401"><paramref name="value" /> が <see langword="null" /> であるか、<see cref="F:System.Boolean.TrueString" /> または <see cref="F:System.Boolean.FalseString" /> のいずれかのフィールドの値と等しくない場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="8423a-401">The conversion fails if <paramref name="value" /> is <see langword="null" /> or is not equal to the value of either the <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" /> field.</span></span></param>
        <summary><span data-ttu-id="8423a-402">論理値の指定した文字列形式を等価の <see cref="T:System.Boolean" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8423a-402">Tries to convert the specified string representation of a logical value to its <see cref="T:System.Boolean" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8423a-403"><see langword="true" /> が正常に変換された場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8423a-403"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="8423a-404"><xref:System.Boolean.TryParse%2A> メソッドは、<xref:System.Boolean.Parse%2A> メソッドに似ていますが、変換に失敗した場合に <xref:System.Boolean.TryParse%2A> メソッドが例外をスローしない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="8423a-404">The <xref:System.Boolean.TryParse%2A> method is like the <xref:System.Boolean.Parse%2A> method, except the <xref:System.Boolean.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>

 <span data-ttu-id="8423a-405">`value` パラメーターの先頭または末尾に空白文字を使用できます。</span><span class="sxs-lookup"><span data-stu-id="8423a-405">The `value` parameter can be preceded or followed by white space.</span></span> <span data-ttu-id="8423a-406">この比較では、序数と大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="8423a-406">The comparison is ordinal and case-insensitive.</span></span>



## Examples
 <span data-ttu-id="8423a-407">次の例では、<xref:System.Boolean.TryParse%2A> メソッドを呼び出して、文字列の配列を解析します。</span><span class="sxs-lookup"><span data-stu-id="8423a-407">The following example calls the <xref:System.Boolean.TryParse%2A> method to parse an array of strings.</span></span> <span data-ttu-id="8423a-408">解析操作が成功するのは、解析対象の文字列が "True" (<xref:System.Boolean.TrueString> フィールドの値) または "False" (<xref:System.Boolean.FalseString> フィールドの値) で、大文字と小文字を区別しない比較の場合だけです。</span><span class="sxs-lookup"><span data-stu-id="8423a-408">Note that the parse operation succeeds only if the string to be parsed is "True" (the value of the <xref:System.Boolean.TrueString> field) or "False" (the value of the <xref:System.Boolean.FalseString> field) in a case-insensitive comparison.</span></span>

 [!code-csharp[System.Boolean.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.boolean.tryparse/cs/tryparseex.cs#1)]
 [!code-vb[System.Boolean.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.boolean.tryparse/vb/tryparseex.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Boolean.Parse(System.String)" />
        <altmember cref="F:System.Boolean.TrueString" />
        <altmember cref="F:System.Boolean.FalseString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-other.md"><span data-ttu-id="8423a-409">.NET Framework におけるその他の文字列の解析</span><span class="sxs-lookup"><span data-stu-id="8423a-409">Parsing Other Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
