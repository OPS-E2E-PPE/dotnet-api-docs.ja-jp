<Type Name="ArgumentOutOfRangeException" FullName="System.ArgumentOutOfRangeException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91780250edf28d4efe95c8edcbe5c2a7b92532d6" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75043859" /></Metadata><TypeSignature Language="C#" Value="public class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArgumentOutOfRangeException extends System.ArgumentException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ArgumentOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentOutOfRangeException&#xA;Inherits ArgumentException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="F#" Value="type ArgumentOutOfRangeException = class&#xA;    inherit ArgumentException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArgumentException</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ee564-101">引数の値が、呼び出されたメソッドで定義されている許容範囲外である場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="ee564-101">The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="ee564-102"><xref:System.ArgumentOutOfRangeException> 例外がスローされるのは、メソッドが呼び出され、メソッドに渡された引数の少なくとも1つが `null` ではなく、引数に必要な値のセットのメンバーではない無効な値が含まれている場合です。</span><span class="sxs-lookup"><span data-stu-id="ee564-102">An <xref:System.ArgumentOutOfRangeException> exception is thrown when a method is invoked and at least one of the arguments passed to the method is not `null` and contains an invalid value that is not a member of the set of values expected for the argument.</span></span> <span data-ttu-id="ee564-103"><xref:System.ArgumentException.ParamName%2A> プロパティは無効な引数を識別し、値が存在する場合は <xref:System.ArgumentOutOfRangeException.ActualValue%2A> プロパティが無効な値を識別します。</span><span class="sxs-lookup"><span data-stu-id="ee564-103">The <xref:System.ArgumentException.ParamName%2A> property identifies the invalid argument, and the <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property, if a value is present, identifies the invalid value.</span></span>  
  
<span data-ttu-id="ee564-104">通常、<xref:System.ArgumentOutOfRangeException> は開発者エラーの結果となります。</span><span class="sxs-lookup"><span data-stu-id="ee564-104">Typically, an <xref:System.ArgumentOutOfRangeException> results from developer error.</span></span> <span data-ttu-id="ee564-105">`try`/`catch` ブロックで例外を処理するのではなく、例外の原因を排除する必要があります。または、例外をスローするメソッドに渡される前に、ユーザーがメソッド呼び出しまたは入力によって引数が返された場合は、メソッドに渡す前に引数を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee564-105">Instead of handling the exception in a `try`/`catch` block, you should eliminate the cause of the exception or, if the argument is returned by a method call or input by the user before being passed to the method that throws the exception, you should validate arguments before passing them to the method.</span></span>  
  
<span data-ttu-id="ee564-106"><xref:System.ArgumentOutOfRangeException> は次のように広く使用されています。</span><span class="sxs-lookup"><span data-stu-id="ee564-106"><xref:System.ArgumentOutOfRangeException> is used extensively by:</span></span>  
  
- <span data-ttu-id="ee564-107"><xref:System.Collections> 名前空間と <xref:System.IO> 名前空間のクラス。</span><span class="sxs-lookup"><span data-stu-id="ee564-107">Classes in the <xref:System.Collections> and <xref:System.IO> namespaces.</span></span>  
  
- <span data-ttu-id="ee564-108"><xref:System.Array> クラス</span><span class="sxs-lookup"><span data-stu-id="ee564-108">The <xref:System.Array> class.</span></span>  
  
- <span data-ttu-id="ee564-109"><xref:System.String> クラスの文字列操作メソッド。</span><span class="sxs-lookup"><span data-stu-id="ee564-109">String manipulation methods in the <xref:System.String> class.</span></span>  
  
<span data-ttu-id="ee564-110"><xref:System.ArgumentOutOfRangeException> 例外がスローされる条件には、次のようなものがあります。</span><span class="sxs-lookup"><span data-stu-id="ee564-110">The conditions in which an <xref:System.ArgumentOutOfRangeException> exception is thrown include the following:</span></span>  
  
- <span data-ttu-id="ee564-111">インデックス番号によってコレクションのメンバーを取得しようとしていますが、インデックス番号が無効です。</span><span class="sxs-lookup"><span data-stu-id="ee564-111">You are retrieving the member of a collection by its index number, and the index number is invalid.</span></span>  

   <span data-ttu-id="ee564-112">これは、<xref:System.ArgumentOutOfRangeException> 例外の最も一般的な原因です。</span><span class="sxs-lookup"><span data-stu-id="ee564-112">This is the most common cause of an <xref:System.ArgumentOutOfRangeException> exception.</span></span> <span data-ttu-id="ee564-113">通常、インデックス番号は次の4つのいずれかの理由で無効です。</span><span class="sxs-lookup"><span data-stu-id="ee564-113">Typically, the index number is invalid for one of four reasons:</span></span>  
  
   1. <span data-ttu-id="ee564-114">コレクションにはメンバーがないため、コードはそれを想定しています。</span><span class="sxs-lookup"><span data-stu-id="ee564-114">The collection has no members, and your code assumes that it does.</span></span> <span data-ttu-id="ee564-115">次の例では、要素を持たないコレクションの最初の要素を取得しようとしています。</span><span class="sxs-lookup"><span data-stu-id="ee564-115">The following example attempts to retrieve the first element of a collection that has no elements:</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#4)]
      [!code-vb[System.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#4)]  
  
      <span data-ttu-id="ee564-116">この例外を回避するには、次のコードフラグメントに示すように、コレクションの `Count` プロパティが0より大きいかどうかを確認してから、メンバーを取得します。</span><span class="sxs-lookup"><span data-stu-id="ee564-116">To prevent the exception, check whether the collection's `Count` property is greater than zero before attempting to retrieve any members, as the following code fragment does.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#5)]
      [!code-vb[System.ArgumentOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#5)]  
  
   2. <span data-ttu-id="ee564-117">場合によっては、存在しないインデックスを使用してコレクションにメンバーを追加しようとしたときに、この目的のために存在する `Add`などのメソッドを呼び出さないと、例外が発生することがあります。</span><span class="sxs-lookup"><span data-stu-id="ee564-117">In some cases, the exception may occur because you are attempting to add a member to a collection by using an index that does not exist, rather than by calling the method, such as `Add`, that exists for this purpose.</span></span>  <span data-ttu-id="ee564-118">次の例では、<xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> メソッドを呼び出すのではなく、存在しないインデックスを使用して、コレクションに要素を追加しようとしています。</span><span class="sxs-lookup"><span data-stu-id="ee564-118">The following example attempts to add an element to a collection by using a non-existent index rather than calling the <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> method.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#13)]
      [!code-vb[System.ArgumentOutOfRangeException#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#13)]  
  
      <span data-ttu-id="ee564-119">次のコードは、このエラーを修正します。</span><span class="sxs-lookup"><span data-stu-id="ee564-119">The following code fragment corrects this error:</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#14)]
      [!code-vb[System.ArgumentOutOfRangeException#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#14)]  
  
   3. <span data-ttu-id="ee564-120">インデックスが負の項目を取得しようとしています。</span><span class="sxs-lookup"><span data-stu-id="ee564-120">You're attempting to retrieve an item whose index is negative.</span></span> <span data-ttu-id="ee564-121">これは通常、特定の要素のインデックスのコレクションを検索し、検索が成功したと誤って想定しているために発生します。</span><span class="sxs-lookup"><span data-stu-id="ee564-121">This usually occurs because you've searched a collection for the index of a particular element and have erroneously assumed that the search is successful.</span></span> <span data-ttu-id="ee564-122">次の例では、<xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType> メソッドの呼び出しが "Z" に等しい文字列を見つけることができず、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-122">In the following example, the call to the <xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType> method fails  to find a string equal to "Z" and so returns -1.</span></span> <span data-ttu-id="ee564-123">ただし、これは無効なインデックス値です。</span><span class="sxs-lookup"><span data-stu-id="ee564-123">However, this is an invalid index value.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#6)]
      [!code-vb[System.ArgumentOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#6)]  
  
      <span data-ttu-id="ee564-124">この例外を回避するには、次のコードフラグメントに示すように、返されたインデックスが0以上であることを確認して、コレクションから項目を取得しようとする前に、検索が成功したことを確認します。</span><span class="sxs-lookup"><span data-stu-id="ee564-124">To prevent the exception, check that the search is successful by making sure that the returned index is greater than or equal to zero before attempting to retrieve the item from the collection, as the following code fragment does.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#7)]
      [!code-vb[System.ArgumentOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#7)]  
  
   4. <span data-ttu-id="ee564-125">次の例に示すように、インデックスがコレクションの `Count` プロパティの値と等しい要素を取得しようとしています。</span><span class="sxs-lookup"><span data-stu-id="ee564-125">You're attempting to retrieve an element whose index is equal to the value of the collection's `Count` property, as the following example illustrates.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#8)]
      [!code-vb[System.ArgumentOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#8)]  
  
      <span data-ttu-id="ee564-126">.NET のコレクションでは0から始まるインデックスが使用されるため、コレクションの最初の要素はインデックス0になり、最後の要素はインデックス `Count`-1 になります。</span><span class="sxs-lookup"><span data-stu-id="ee564-126">Because collections in .NET use zero-based indexing, the first element of the collection is at index 0, and the last element is at index `Count` - 1.</span></span> <span data-ttu-id="ee564-127">次のコードに示すように、インデックス `Count`-1 の最後の要素にアクセスすることで、エラーを回避できます。</span><span class="sxs-lookup"><span data-stu-id="ee564-127">You can eliminate the error by ensuring that you access the last element at index  `Count` - 1, as the following code does.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#9)]
      [!code-vb[System.ArgumentOutOfRangeException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#9)]  
  
- <span data-ttu-id="ee564-128">文字列操作メソッドを呼び出して文字列操作を実行しようとしたときに、開始インデックスが文字列に存在しません。</span><span class="sxs-lookup"><span data-stu-id="ee564-128">You are attempting to perform a string operation by calling a string manipulation method, and the starting index does not exist in the string.</span></span>

   <span data-ttu-id="ee564-129"><xref:System.String.Compare%2A?displayProperty=nameWithType>、<xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType>、<xref:System.String.IndexOf%2A?displayProperty=nameWithType>、<xref:System.String.IndexOfAny%2A>、<xref:System.String.Insert%2A?displayProperty=nameWithType>、<xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>、<xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>、<xref:System.String.Remove%2A>、<xref:System.String.Substring%2A?displayProperty=nameWithType> などのメソッドのオーバーロードでは、操作の開始インデックスを指定できるようにするには、インデックスが文字列内の有効な位置である必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee564-129">Overloads of methods such as such as <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.Insert%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.Remove%2A>,  or <xref:System.String.Substring%2A?displayProperty=nameWithType> that allow you to specify the starting index of the operation require that the index be a valid position within the string.</span></span> <span data-ttu-id="ee564-130">有効なインデックスの範囲は 0 ~ <xref:System.String.Length%2A?displayProperty=nameWithType>-1 です。</span><span class="sxs-lookup"><span data-stu-id="ee564-130">Valid indexes range from 0 to <xref:System.String.Length%2A?displayProperty=nameWithType> - 1.</span></span>  
  
   <span data-ttu-id="ee564-131">この <xref:System.ArgumentOutOfRangeException> 例外には、次の4つの一般的な原因があります。</span><span class="sxs-lookup"><span data-stu-id="ee564-131">There are four common causes of this <xref:System.ArgumentOutOfRangeException> exception:</span></span>

   1. <span data-ttu-id="ee564-132">空の文字列を使用しているか、<xref:System.String.Empty?displayProperty=nameWithType>しています。</span><span class="sxs-lookup"><span data-stu-id="ee564-132">You are working with an empty string, or <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ee564-133"><xref:System.String.Length%2A?displayProperty=nameWithType> プロパティは0を返します。そのため、インデックスを操作しようとすると、<xref:System.ArgumentOutOfRangeException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ee564-133">Because its <xref:System.String.Length%2A?displayProperty=nameWithType> property returns 0, any attempt to manipulate it by index throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span> <span data-ttu-id="ee564-134">次の例では、文字列の最初の文字を返す `GetFirstCharacter` メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="ee564-134">The following example, defines a `GetFirstCharacter` method that returns the first character of a string.</span></span> <span data-ttu-id="ee564-135">文字列が空の場合、メソッドに渡された最後の文字列がの場合、メソッドは <xref:System.ArgumentOutOfRangeException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ee564-135">If the string is empty, as the final string passed to the method is, the method throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#15)]
      [!code-vb[System.ArgumentOutOfRangeException#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#15)]  
  
      <span data-ttu-id="ee564-136">この例外を回避するには、文字列の <xref:System.String.Length%2A?displayProperty=nameWithType> がゼロより大きいかどうかをテストするか、<xref:System.String.IsNullOrEmpty%2A> メソッドを呼び出して、文字列が `null` または空でないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="ee564-136">You can eliminate the exception by testing whether the string's <xref:System.String.Length%2A?displayProperty=nameWithType> is greater than zero or by calling the <xref:System.String.IsNullOrEmpty%2A> method to ensure that the string is not `null` or empty.</span></span> <span data-ttu-id="ee564-137">次のコードフラグメントは、後者を行います。</span><span class="sxs-lookup"><span data-stu-id="ee564-137">The following code fragment does the latter.</span></span> <span data-ttu-id="ee564-138">この場合、文字列が `null` または空の場合、`GetFirstCharacter` メソッドは U + 0000 を返します。</span><span class="sxs-lookup"><span data-stu-id="ee564-138">In this case, if the string is `null` or empty, the `GetFirstCharacter` method returns U+0000.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#16)]
      [!code-vb[System.ArgumentOutOfRangeException#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#16)]  
  
   2. <span data-ttu-id="ee564-139">その文字列内の部分文字列の位置に基づいて文字列を操作していますが、その部分文字列が実際に見つかったかどうかを判断できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ee564-139">You're manipulating a string based on the position of a substring within that string, and you've failed to determine whether the substring was actually found.</span></span>  
  
      <span data-ttu-id="ee564-140">次の例では、2つの単語の語句の2番目の単語を抽出します。</span><span class="sxs-lookup"><span data-stu-id="ee564-140">The following example extracts the second word of a two-word phrase.</span></span> <span data-ttu-id="ee564-141">語句が1つの単語で構成されていて、空白文字が埋め込まれていない場合、<xref:System.ArgumentOutOfRangeException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ee564-141">It throws an <xref:System.ArgumentOutOfRangeException> exception if the phrase consists of only one word, and therefore does not contain an embedded space character.</span></span>  <span data-ttu-id="ee564-142">これは、<xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType> メソッドを呼び出すと、検索が失敗したことを示す-1 が返され、この無効な値が <xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType> メソッドに渡されるためです。</span><span class="sxs-lookup"><span data-stu-id="ee564-142">This occurs because the call to the <xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType> method returns -1 to indicate that the search failed, and this invalid value is then passed to the  <xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind1.cs#17)]
      [!code-vb[System.ArgumentOutOfRangeException#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind1.vb#17)]  
  
      <span data-ttu-id="ee564-143">例外を除去するには、文字列操作メソッドを呼び出す前に、文字列検索メソッドによって返された値を検証します。</span><span class="sxs-lookup"><span data-stu-id="ee564-143">To eliminate the exception, validate the value returned by the string search method before calling the string manipulation method.</span></span>  
  
      [!code-csharp[System.ArgumentOutOfRangeException#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind2.cs#18)]
      [!code-vb[System.ArgumentOutOfRangeException#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind2.vb#18)]  
  
   3. <span data-ttu-id="ee564-144">現在の文字列の範囲外にある部分文字列を抽出しようとしました。</span><span class="sxs-lookup"><span data-stu-id="ee564-144">You've attempted to extract a substring that is outside the range of the current string.</span></span>  
 
      <span data-ttu-id="ee564-145">部分文字列を抽出するメソッドでは、部分文字列の開始位置を指定する必要があります。文字列の末尾まで継続しない部分文字列の場合は、部分文字列の文字数を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee564-145">The methods that extract substrings all require that you specify the starting position of the substring and, for substrings that do not continue to the end of the string, the number of characters in the substring.</span></span> <span data-ttu-id="ee564-146">これは、部分文字列の最後の文字の*インデックス*ではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ee564-146">Note that this is not the *index* of the last character in the substring.</span></span>  
  
      <span data-ttu-id="ee564-147">通常、この場合、<xref:System.ArgumentOutOfRangeException> 例外がスローされます。これは、部分文字列の文字数を誤って計算したためです。</span><span class="sxs-lookup"><span data-stu-id="ee564-147">An <xref:System.ArgumentOutOfRangeException> exception is typically thrown in this case because you've incorrectly calculated the number of characters in the substring.</span></span>  <span data-ttu-id="ee564-148"><xref:System.String.IndexOf%2A?displayProperty=nameWithType> のような検索メソッドを使用して、部分文字列の開始位置と終了位置を識別する場合は、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="ee564-148">If you are using a search method like <xref:System.String.IndexOf%2A?displayProperty=nameWithType> to identify the starting and ending positions of a substring:</span></span>  
  
      - <span data-ttu-id="ee564-149"><xref:System.String.IndexOf%2A?displayProperty=nameWithType> によって返される終了位置の文字が部分文字列に含まれる場合、その部分文字列の終了位置が数式によって指定されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-149">If the character in the ending position returned by <xref:System.String.IndexOf%2A?displayProperty=nameWithType> is to be included in the substring, the ending position of the substring is given by the formula</span></span>  
  
         ```  
         endIndex - startIndex + 1  
         ```  
  
      - <span data-ttu-id="ee564-150"><xref:System.String.IndexOf%2A?displayProperty=nameWithType> によって返される終了位置の文字が部分文字列から除外される場合、その部分文字列の終了位置が数式によって指定されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-150">If the character in the ending position returned by <xref:System.String.IndexOf%2A?displayProperty=nameWithType> is to be excluded from the substring, the ending position of the substring is given by the formula</span></span>  
  
         ```
         endIndex - startIndex   
         ```  

         <span data-ttu-id="ee564-151">次の例では、<xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> メソッドを使用して文字列内の空白文字と句読点を識別し、文字列で見つかった単語を含む配列を返す `FindWords` メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="ee564-151">The following example defines a `FindWords` method that uses the <xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType> method to identify space characters and punctuation marks in a string and returns an array that contains the words found in the string.</span></span>  
  
         [!code-csharp[System.ArgumentOutOfRangeException#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/FindWords1.cs#19)]
         [!code-vb[System.ArgumentOutOfRangeException#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/FindWords1.vb#19)]  
  
- <span data-ttu-id="ee564-152">正の数値と0のみを必要とする引数を持つメソッドに負の数を渡しました。または、正の数値のみを必要とする引数を使用して、負の数または0をメソッドに渡しました。</span><span class="sxs-lookup"><span data-stu-id="ee564-152">You have passed a negative number to a method with an argument that requires only positive numbers and zero, or you have passed either a negative number or zero to a method with an argument that requires only positive numbers.</span></span>  
 
   <span data-ttu-id="ee564-153">たとえば、<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> メソッドでは、2次元配列の各次元の要素数を指定する必要があります。各次元の有効な値の範囲は 0 ~ <xref:System.Int32.MaxValue?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ee564-153">For example, the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method requires that you specify the number of elements in each dimension of a two-dimensional array; valid values for each dimension can range from 0 to <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ee564-154">ただし、次の例の dimension 引数には負の値があるため、メソッドは <xref:System.ArgumentOutOfRangeException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ee564-154">But because the dimension argument in the following example has a negative value, the method throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
   [!code-csharp[System.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#1)]
   [!code-vb[System.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#1)]  
  
   <span data-ttu-id="ee564-155">エラーを修正するには、無効な引数の値が負でないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="ee564-155">To correct the error, ensure that the value of the invalid argument is non-negative.</span></span> <span data-ttu-id="ee564-156">これを行うには、次のコードフラグメントに示すように、有効な値を指定します。</span><span class="sxs-lookup"><span data-stu-id="ee564-156">You can do this by providing a valid value, as the following code fragment does.</span></span>  
  
   [!code-csharp[System.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#2)]
   [!code-vb[System.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#2)]  
  
   <span data-ttu-id="ee564-157">入力を検証することもできます。無効な場合は、何らかの操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="ee564-157">You can also validate the input and, if it is invalid, take some action.</span></span> <span data-ttu-id="ee564-158">次のコードフラグメントは、メソッドを呼び出す代わりに、エラーメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="ee564-158">The following code fragment displays an error message instead of calling the method.</span></span>  
  
   [!code-csharp[System.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#3)] 
   [!code-vb[System.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#3)]  
  
- <span data-ttu-id="ee564-159">マルチスレッドであるか、または非同期的に実行され、配列またはコレクションを更新するタスクを含むアプリに競合状態が存在します。</span><span class="sxs-lookup"><span data-stu-id="ee564-159">A race condition exists in an app that is multithreaded or has tasks that  execute asynchronously and that updates an array or collection.</span></span>  

  <span data-ttu-id="ee564-160">次の例では、<xref:System.Collections.Generic.List%601> オブジェクトを使用して、`Continent` オブジェクトのコレクションを設定します。</span><span class="sxs-lookup"><span data-stu-id="ee564-160">The following example uses a <xref:System.Collections.Generic.List%601> object to populate a collection of `Continent` objects.</span></span> <span data-ttu-id="ee564-161">コレクションが完全に設定される前に、この例でコレクション内の7つの項目を表示しようとすると、<xref:System.ArgumentOutOfRangeException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ee564-161">It throws an <xref:System.ArgumentOutOfRangeException> if the example attempts to display the seven items in the collection before the collection is fully populated.</span></span>  
  
  [!code-csharp[System.ArgumentOutOfRangeException#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race1.cs#11)]
  [!code-vb[System.ArgumentOutOfRangeException#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race1.vb#11)]  
  
  <span data-ttu-id="ee564-162">この場合、次の2つのリソースに複数のスレッドからアクセスします。</span><span class="sxs-lookup"><span data-stu-id="ee564-162">In this case, two resources are accessed from multiple threads:</span></span>  
  
  - <span data-ttu-id="ee564-163">`continents` のコレクション。</span><span class="sxs-lookup"><span data-stu-id="ee564-163">The `continents` collection.</span></span> <span data-ttu-id="ee564-164"><xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> メソッドは、複数のスレッドから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-164">Its <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> method is called from multiple threads.</span></span> <span data-ttu-id="ee564-165">また、メインスレッドまたはプライマリスレッドは、メンバーを反復処理するときに、7つの要素がコレクションに完全に設定されることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="ee564-165">In addition, the main or primary thread assumes the collection is fully populated with seven elements when it iterates its members.</span></span>  
  
  - <span data-ttu-id="ee564-166">複数のスレッドから連結された `msg` 文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-166">The `msg` string, which is concatenated from multiple threads.</span></span>  
  
  <span data-ttu-id="ee564-167">エラーを修正するには、次のように、共有状態がスレッドセーフな方法でアクセスされていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="ee564-167">To correct the error, ensure that shared state is accessed in a thread-safe way, as follows.</span></span>  

  - <span data-ttu-id="ee564-168">アプリで配列またはコレクションオブジェクトを使用する場合は、<xref:System.Collections.Concurrent> 名前空間の型や <xref:System.Collections.Immutable> アウトオブバンドリリースなど、スレッドセーフなコレクションクラスを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="ee564-168">if your app uses an array or collection object, consider using a thread-safe collection class, such as the types in the <xref:System.Collections.Concurrent> namespace or the <xref:System.Collections.Immutable> out-of-band release.</span></span>  
  
  - <span data-ttu-id="ee564-169">共有状態 (つまり、複数のスレッドからアクセスできるリソース) にスレッドセーフな方法でアクセスし、一度に1つのスレッドだけがリソースに排他的にアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="ee564-169">Ensure that shared state (that is, resources that can be accessed by multiple threads) is accessed in a thread-safe way, so that only one thread at a time has exclusive access to the resources.</span></span> <span data-ttu-id="ee564-170">リソースへのアクセスを同期するために、<xref:System.Threading.CountdownEvent>、<xref:System.Threading.Interlocked>、<xref:System.Threading.Monitor>、<xref:System.Threading.Mutex>などの多数のクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ee564-170">A large number of classes, such as <xref:System.Threading.CountdownEvent>, <xref:System.Threading.Interlocked>, <xref:System.Threading.Monitor>, and <xref:System.Threading.Mutex>, are available to synchronize access to resources.</span></span> <span data-ttu-id="ee564-171">詳細については、「[スレッド処理](~/docs/standard/threading/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ee564-171">For more information, see [Threading](~/docs/standard/threading/index.md).</span></span> <span data-ttu-id="ee564-172">また、のC# [lock](~/docs/csharp/language-reference/keywords/lock-statement.md)ステートメントと Visual Basic の[SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md)コンストラクトを使用して言語サポートを利用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ee564-172">In addition, language support is available through the [lock](~/docs/csharp/language-reference/keywords/lock-statement.md) statement in C# and the [SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) construct in Visual Basic.</span></span>  
  
  <span data-ttu-id="ee564-173">次の例では、<xref:System.ArgumentOutOfRangeException> と、前の例の他の問題に対処します。</span><span class="sxs-lookup"><span data-stu-id="ee564-173">The following example addresses the <xref:System.ArgumentOutOfRangeException> and the other issues from the previous example.</span></span> <span data-ttu-id="ee564-174"><xref:System.Collections.Generic.List%601> オブジェクトを <xref:System.Collections.Concurrent.ConcurrentBag%601> オブジェクトに置き換えて、コレクションへのアクセスがスレッドセーフであることを確認し、<xref:System.Threading.CountdownEvent> オブジェクトを使用して、他のスレッドが実行された後にのみアプリケーションスレッドが続行されるようにします。また、ロックを使用して、一度に1つのスレッドだけが `msg` 変数にアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="ee564-174">It replaces the <xref:System.Collections.Generic.List%601> object with a   <xref:System.Collections.Concurrent.ConcurrentBag%601> object to ensure that access to the collection is thread-safe, uses a <xref:System.Threading.CountdownEvent> object to ensure that the application thread continues only after other threads have executed, and uses a lock to ensure that only one thread can  access the `msg` variable at a time.</span></span>  
  
  [!code-csharp[System.ArgumentOutOfRangeException#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race2.cs#12)]
  [!code-vb[System.ArgumentOutOfRangeException#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race2.vb#12)]  
  
<span data-ttu-id="ee564-175"><xref:System.ArgumentOutOfRangeException> では、値 0x8013150 2 の HRESULT COR_E_ARGUMENTOUTOFRANGE を使用します。</span><span class="sxs-lookup"><span data-stu-id="ee564-175"><xref:System.ArgumentOutOfRangeException> uses the HRESULT COR_E_ARGUMENTOUTOFRANGE, which has the value 0x80131502.</span></span>  
  
<span data-ttu-id="ee564-176"><xref:System.ArgumentOutOfRangeException>インスタンスの初期プロパティ値の一覧については、<xref:System.ArgumentOutOfRangeException>コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ee564-176">For a list of initial property values for an instance of <xref:System.ArgumentOutOfRangeException>, see the <xref:System.ArgumentOutOfRangeException> constructors.</span></span>  
  
## Examples

<span data-ttu-id="ee564-177">次の例では、招待されたゲストに関する情報を格納するクラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="ee564-177">The following example defines a class to contain information about an invited guest.</span></span> <span data-ttu-id="ee564-178">ゲストが21よりも前の場合は、<xref:System.ArgumentOutOfRangeException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ee564-178">If the guest is younger than 21, an <xref:System.ArgumentOutOfRangeException> exception is thrown.</span></span>  
  
 [!code-csharp[ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR/ArgumentOutOfRangeException/CS/program.cs#1)]
 [!code-vb[ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArgumentOutOfRangeException/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ee564-179"><see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-179">Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee564-180"><see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-180">Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee564-181">このコンストラクターは、新しいインスタンスの <xref:System.ArgumentException.Message%2A> プロパティを初期化して、"負の数値が必要です" などのエラーを説明するシステム提供のメッセージを指定します。</span><span class="sxs-lookup"><span data-stu-id="ee564-181">This constructor initializes the <xref:System.ArgumentException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Nonnegative number required."</span></span> <span data-ttu-id="ee564-182">このメッセージには、現在のシステムのカルチャが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-182">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="ee564-183"><xref:System.ArgumentOutOfRangeException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="ee564-183">The following table shows the initial property values for an instance of <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="ee564-184">property</span><span class="sxs-lookup"><span data-stu-id="ee564-184">Property</span></span>|<span data-ttu-id="ee564-185">[値]</span><span class="sxs-lookup"><span data-stu-id="ee564-185">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ee564-186">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="ee564-186">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|<span data-ttu-id="ee564-187">ローカライズされたエラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-187">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException paramName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName"><span data-ttu-id="ee564-188">この例外の原因となったパラメーターの名前。</span><span class="sxs-lookup"><span data-stu-id="ee564-188">The name of the parameter that causes this exception.</span></span></param>
        <summary><span data-ttu-id="ee564-189">この例外の原因である引数の名前を指定して、<see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-189">Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with the name of the parameter that causes this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee564-190">このコンストラクターは、新しいインスタンスの <xref:System.ArgumentException.Message%2A> プロパティを初期化して、"負の数値が必要です" などのエラーを説明するシステム提供のメッセージを指定します。</span><span class="sxs-lookup"><span data-stu-id="ee564-190">This constructor initializes the <xref:System.ArgumentException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "Nonnegative number required."</span></span> <span data-ttu-id="ee564-191">このメッセージには、現在のシステムのカルチャが考慮されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-191">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="ee564-192">このコンストラクターは、新しいインスタンスの <xref:System.ArgumentException.ParamName%2A> プロパティを `paramName` パラメーターを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-192">This constructor initializes the <xref:System.ArgumentException.ParamName%2A> property of the new instance using the `paramName` parameter.</span></span> <span data-ttu-id="ee564-193">`paramName` の内容は、ユーザーが理解できる内容にします。</span><span class="sxs-lookup"><span data-stu-id="ee564-193">The content of `paramName` is intended to be understood by humans.</span></span>  
  
 <span data-ttu-id="ee564-194"><xref:System.ArgumentOutOfRangeException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="ee564-194">The following table shows the initial property values for an instance of <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="ee564-195">property</span><span class="sxs-lookup"><span data-stu-id="ee564-195">Property</span></span>|<span data-ttu-id="ee564-196">[値]</span><span class="sxs-lookup"><span data-stu-id="ee564-196">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ee564-197">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="ee564-197">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|<span data-ttu-id="ee564-198">空の文字列 ("")。</span><span class="sxs-lookup"><span data-stu-id="ee564-198">The empty string ("").</span></span>|  
|<xref:System.ArgumentException.ParamName%2A>|<span data-ttu-id="ee564-199">パラメーター名の文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-199">The parameter name string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentOutOfRangeException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArgumentOutOfRangeException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ee564-200">シリアル化されたオブジェクト データを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee564-200">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="ee564-201">シリアル化されたデータの転送元または転送先を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee564-201">An object that describes the source or destination of the serialized data.</span></span></param>
        <summary><span data-ttu-id="ee564-202">シリアル化したデータを使用して、<see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-202">Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee564-203">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-203">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="ee564-204">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="ee564-204">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="ee564-205">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="ee564-205">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * Exception -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="innerException" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ee564-206">この例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="ee564-206">The error message that explains the reason for this exception.</span></span></param>
        <param name="innerException"><span data-ttu-id="ee564-207">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 (Visual Basic では、<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="ee564-207">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</span></span></param>
        <summary><span data-ttu-id="ee564-208">エラー メッセージ、およびこの例外の原因である例外を指定して、<see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-208">Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with a specified error message and the exception that is the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName"><span data-ttu-id="ee564-209">例外の原因となったパラメーターの名前。</span><span class="sxs-lookup"><span data-stu-id="ee564-209">The name of the parameter that caused the exception.</span></span></param>
        <param name="message"><span data-ttu-id="ee564-210">エラーを説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ee564-210">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="ee564-211">この例外の原因となるパラメーターの名前と、指定したエラー メッセージを使用して、<see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-211">Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with the name of the parameter that causes this exception and a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee564-212">このコンストラクターは、`message` パラメーターの値を使用して、新しいインスタンスの <xref:System.ArgumentOutOfRangeException.Message%2A> プロパティを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-212">This constructor initializes the <xref:System.ArgumentOutOfRangeException.Message%2A> property of the new instance using the value of the `message` parameter.</span></span> <span data-ttu-id="ee564-213">`message` パラメーターの内容は、ユーザーが理解できる内容にします。</span><span class="sxs-lookup"><span data-stu-id="ee564-213">The content of the `message` parameter is intended to be understood by humans.</span></span> <span data-ttu-id="ee564-214">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee564-214">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="ee564-215">このコンストラクターは、新しいインスタンスの <xref:System.ArgumentException.ParamName%2A> プロパティを `paramName` パラメーターを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-215">This constructor initializes the <xref:System.ArgumentException.ParamName%2A> property of the new instance using the `paramName` parameter.</span></span> <span data-ttu-id="ee564-216">`paramName` の内容は、ユーザーが理解できる内容にします。</span><span class="sxs-lookup"><span data-stu-id="ee564-216">The content of `paramName` is intended to be understood by humans.</span></span>  
  
 <span data-ttu-id="ee564-217"><xref:System.ArgumentOutOfRangeException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="ee564-217">The following table shows the initial property values for an instance of <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="ee564-218">property</span><span class="sxs-lookup"><span data-stu-id="ee564-218">Property</span></span>|<span data-ttu-id="ee564-219">[値]</span><span class="sxs-lookup"><span data-stu-id="ee564-219">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ee564-220">`null` で初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-220">`null`.</span></span>|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|<span data-ttu-id="ee564-221">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-221">The error message string.</span></span>|  
|<xref:System.ArgumentException.ParamName%2A>|<span data-ttu-id="ee564-222">パラメーター名の文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-222">The parameter name string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, object actualValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, object actualValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, actualValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::Object ^ actualValue, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * obj * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, actualValue, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="actualValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName"><span data-ttu-id="ee564-223">例外の原因となったパラメーターの名前。</span><span class="sxs-lookup"><span data-stu-id="ee564-223">The name of the parameter that caused the exception.</span></span></param>
        <param name="actualValue"><span data-ttu-id="ee564-224">この例外の原因である引数の値。</span><span class="sxs-lookup"><span data-stu-id="ee564-224">The value of the argument that causes this exception.</span></span></param>
        <param name="message"><span data-ttu-id="ee564-225">エラーを説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="ee564-225">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="ee564-226">パラメーター名、引数の値、および指定されたエラー メッセージを使用して、<see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-226">Initializes a new instance of the <see cref="T:System.ArgumentOutOfRangeException" /> class with the parameter name, the value of the argument, and a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee564-227">このコンストラクターは、`paramName` パラメーター、`actualValue` パラメーターを使用した <xref:System.ArgumentOutOfRangeException.ActualValue%2A> プロパティ、および <xref:System.ArgumentException.Message%2A> パラメーターを使用して、`message` プロパティを使用して、新しいインスタンスの <xref:System.ArgumentException.ParamName%2A> プロパティを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee564-227">This constructor initializes the <xref:System.ArgumentException.ParamName%2A> property of the new instance using the `paramName` parameter, the <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property using the `actualValue` parameter, and the <xref:System.ArgumentException.Message%2A> property using the `message` parameter.</span></span> <span data-ttu-id="ee564-228">`paramName` パラメーターと `message` パラメーターの内容は、人間が理解できるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="ee564-228">The content of the `paramName` and `message` parameters is intended to be understood by humans.</span></span> <span data-ttu-id="ee564-229">このコンストラクターの呼び出し元は、これらの文字列が現在のシステムカルチャにローカライズされていることを確認するために必要です。</span><span class="sxs-lookup"><span data-stu-id="ee564-229">The caller of this constructor is required to ensure that these strings have been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="ee564-230">`actualValue` パラメーターは、.NET Framework クラスライブラリ内では使用されません。</span><span class="sxs-lookup"><span data-stu-id="ee564-230">The `actualValue` parameter is not used within the .NET Framework class library.</span></span> <span data-ttu-id="ee564-231">ただし、<xref:System.ArgumentOutOfRangeException.ActualValue%2A> プロパティは、アプリケーションが使用可能な引数値を使用できるようにするために用意されています。</span><span class="sxs-lookup"><span data-stu-id="ee564-231">However, the <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property is provided so that applications can use the available argument value.</span></span>  
  
 <span data-ttu-id="ee564-232">`actualValue` パラメーターに、メソッドに渡された無効な値が含まれているため、この例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ee564-232">The `actualValue` parameter contains an invalid value that is passed to the method and causes this exception to be thrown.</span></span> <span data-ttu-id="ee564-233">この値は <xref:System.ArgumentOutOfRangeException.ActualValue%2A> プロパティに格納され、その文字列表現は、<xref:System.ArgumentOutOfRangeException.Message%2A> プロパティに保持されているメッセージ文字列に追加されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-233">This value is stored in the <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property and its string representation is appended to the message string held in the <xref:System.ArgumentOutOfRangeException.Message%2A> property.</span></span>  
  
 <span data-ttu-id="ee564-234"><xref:System.ArgumentOutOfRangeException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="ee564-234">The following table shows the initial property values for an instance of <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
|<span data-ttu-id="ee564-235">property</span><span class="sxs-lookup"><span data-stu-id="ee564-235">Property</span></span>|<span data-ttu-id="ee564-236">[値]</span><span class="sxs-lookup"><span data-stu-id="ee564-236">Value</span></span>|  
|--------------|-----------|  
|<xref:System.ArgumentOutOfRangeException.ActualValue%2A>|<span data-ttu-id="ee564-237">引数値。</span><span class="sxs-lookup"><span data-stu-id="ee564-237">The argument value.</span></span>|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ee564-238">Null 参照 (Visual Basic では`Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="ee564-238">The null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|<span data-ttu-id="ee564-239">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-239">The error message string.</span></span>|  
|<xref:System.ArgumentException.ParamName%2A>|<span data-ttu-id="ee564-240">パラメーター名の文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-240">The parameter name string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualValue">
      <MemberSignature Language="C#" Value="public virtual object ActualValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActualValue" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.ActualValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActualValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ ActualValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualValue : obj" Usage="System.ArgumentOutOfRangeException.ActualValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee564-241">この例外の原因である引数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ee564-241">Gets the argument value that causes this exception.</span></span></summary>
        <value><span data-ttu-id="ee564-242">現在の <see langword="Object" /> の原因となったパラメーターの値が含まれた <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="ee564-242">An <see langword="Object" /> that contains the value of the parameter that caused the current <see cref="T:System.Exception" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee564-243">このプロパティを使用して、無効な引数を取得します。</span><span class="sxs-lookup"><span data-stu-id="ee564-243">Use this property to retrieve the invalid argument.</span></span>  
  
 <span data-ttu-id="ee564-244">`ActualValue` プロパティは、コンストラクターに渡されたものと同じ値を返します。値が指定されていない場合は `null` します。</span><span class="sxs-lookup"><span data-stu-id="ee564-244">The `ActualValue` property returns the same value that was passed to the constructor, or `null` if no value was supplied.</span></span>  
  
 <span data-ttu-id="ee564-245"><xref:System.ArgumentOutOfRangeException.ActualValue%2A> プロパティには、オブジェクトの構築時に値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="ee564-245">The <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property is assigned a value at the time of object construction.</span></span> <span data-ttu-id="ee564-246"><xref:System.ArgumentOutOfRangeException.ActualValue%2A> プロパティの値が `null`でない場合は、<xref:System.ArgumentOutOfRangeException.Message%2A> プロパティによって保持されているメッセージ文字列に値の文字列形式が付加されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-246">If the <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property value is not `null`, a string representation of the value is appended to the message string held by the <xref:System.ArgumentOutOfRangeException.Message%2A> property.</span></span>  
  
 <span data-ttu-id="ee564-247"><xref:System.ArgumentOutOfRangeException.ActualValue%2A> プロパティは、.NET Framework クラスライブラリ内では使用されません。</span><span class="sxs-lookup"><span data-stu-id="ee564-247">The <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property is not used within the .NET Framework class library.</span></span> <span data-ttu-id="ee564-248">このメソッドは、.NET Framework クラスライブラリによってスローされたすべての <xref:System.ArgumentOutOfRangeException> オブジェクトに null 値を格納します。</span><span class="sxs-lookup"><span data-stu-id="ee564-248">It carries a null value in all the <xref:System.ArgumentOutOfRangeException> objects thrown by the .NET Framework class library.</span></span> <span data-ttu-id="ee564-249"><xref:System.ArgumentOutOfRangeException.ActualValue%2A> プロパティは、アプリケーションが使用可能な引数値を使用できるようにするために用意されています。</span><span class="sxs-lookup"><span data-stu-id="ee564-249">The <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property is provided so that applications can use the available argument value.</span></span>  
  
 <span data-ttu-id="ee564-250">このプロパティは読み取り専用であり、値のコンテンツまたは形式をカスタマイズするためにのみオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee564-250">This property is read-only and should be overridden only to customize the content or format of the value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="argumentOutOfRangeException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ee564-251">シリアル化されたオブジェクト データを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee564-251">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="ee564-252">シリアル化されたデータの転送元または転送先を記述するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee564-252">An object that describes the source or destination of the serialized data.</span></span></param>
        <summary><span data-ttu-id="ee564-253">無効な引数値と追加の例外情報を使用して <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="ee564-253">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the invalid argument value and additional exception information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee564-254">シリアル化の対象となるすべての例外オブジェクトデータを含む <xref:System.Runtime.Serialization.SerializationInfo> オブジェクトを <xref:System.ArgumentOutOfRangeException.GetObjectData%2A> 設定します。</span><span class="sxs-lookup"><span data-stu-id="ee564-254"><xref:System.ArgumentOutOfRangeException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="ee564-255">逆シリアル化中に、例外オブジェクトはストリームを介して送信された <xref:System.Runtime.Serialization.SerializationInfo> から再構成されます。</span><span class="sxs-lookup"><span data-stu-id="ee564-255">During deserialization, the exception object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="ee564-256">詳細については、「 <xref:System.Runtime.Serialization.SerializationInfo>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ee564-256">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ee564-257"><paramref name="info" /> オブジェクトが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ee564-257">The <paramref name="info" /> object is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ee564-258">シリアル化サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ee564-258">for providing serialization services.</span></span> <span data-ttu-id="ee564-259">関連付けられた列挙: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span><span class="sxs-lookup"><span data-stu-id="ee564-259">Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="ee564-260">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="ee564-260">requires full trust for the immediate caller.</span></span> <span data-ttu-id="ee564-261">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="ee564-261">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.ArgumentOutOfRangeException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee564-262">エラー メッセージおよび無効な引数値の文字列形式を取得します。引数値が null の場合は、エラー メッセージだけを取得します。</span><span class="sxs-lookup"><span data-stu-id="ee564-262">Gets the error message and the string representation of the invalid argument value, or only the error message if the argument value is null.</span></span></summary>
        <value><span data-ttu-id="ee564-263">この例外のエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="ee564-263">The text message for this exception.</span></span> <span data-ttu-id="ee564-264">このプロパティの値は、次の 2 つの値のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="ee564-264">The value of this property takes one of two forms, as follows.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ee564-265">条件</span><span class="sxs-lookup"><span data-stu-id="ee564-265">Condition</span></span> 
 </term><description> <span data-ttu-id="ee564-266">[値]</span><span class="sxs-lookup"><span data-stu-id="ee564-266">Value</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ee564-267"><paramref name="actualValue" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ee564-267">The <paramref name="actualValue" /> is <see langword="null" />.</span></span>  
  
 </term><description> <span data-ttu-id="ee564-268">コンストラクターに渡された <paramref name="message" /> 文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-268">The <paramref name="message" /> string passed to the constructor.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ee564-269"><paramref name="actualValue" /> が <see langword="null" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ee564-269">The <paramref name="actualValue" /> is not <see langword="null" />.</span></span>  
  
 </term><description> <span data-ttu-id="ee564-270">無効な引数値の文字列形式が末尾に追加された <paramref name="message" /> 文字列。</span><span class="sxs-lookup"><span data-stu-id="ee564-270">The <paramref name="message" /> string appended with the string representation of the invalid argument value.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee564-271">このプロパティは <xref:System.ArgumentException.Message%2A>をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="ee564-271">This property overrides <xref:System.ArgumentException.Message%2A>.</span></span>  
  
 <span data-ttu-id="ee564-272">エラーメッセージには、この例外の原因となったパラメーターの予期される値が記述されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee564-272">The error message should describe the expected values of the parameter that causes this exception.</span></span> <span data-ttu-id="ee564-273">エラーメッセージはローカライズされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee564-273">The error message should be localized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
