<Type Name="UnhandledExceptionEventHandler" FullName="System.UnhandledExceptionEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6a9708e2ba97af4fd1e97cdcd6cf882330a0fcd" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83976115" /></Metadata><TypeSignature Language="C#" Value="public delegate void UnhandledExceptionEventHandler(object sender, UnhandledExceptionEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionEventHandler extends System.MulticastDelegate" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.UnhandledExceptionEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub UnhandledExceptionEventHandler(sender As Object, e As UnhandledExceptionEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void UnhandledExceptionEventHandler(System::Object ^ sender, UnhandledExceptionEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionEventHandler = delegate of obj * UnhandledExceptionEventArgs -&gt; unit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed UnhandledExceptionEventHandler extends System.MulticastDelegate" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.UnhandledExceptionEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="1a7d5-101">未処理の例外イベントのソース。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-101">The source of the unhandled exception event.</span></span></param>
    <param name="e"><span data-ttu-id="1a7d5-102">イベント データを格納している <c>UnhandledExceptionEventArgs</c>。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-102">An <c>UnhandledExceptionEventArgs</c> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="1a7d5-103">アプリケーション ドメインで処理されない例外によって発生したイベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-103">Represents the method that will handle the event raised by an exception that is not handled by the application domain.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a7d5-104"><xref:System.UnhandledExceptionEventHandler> は、アプリケーションを実行するためにシステムによって作成される既定のアプリケーションドメインに対してのみ指定できます。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-104">An <xref:System.UnhandledExceptionEventHandler> can only be specified for the default application domain that is created by the system to execute an application.</span></span> <span data-ttu-id="1a7d5-105">アプリケーションによって作成された <xref:System.AppDomain> の <xref:System.UnhandledExceptionEventHandler> を指定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-105">Specifying an <xref:System.UnhandledExceptionEventHandler> for an <xref:System.AppDomain> created by an application has no effect.</span></span>  
  
 <span data-ttu-id="1a7d5-106"><xref:System.UnhandledExceptionEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-106">When you create an <xref:System.UnhandledExceptionEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="1a7d5-107">イベントハンドラーをイベントに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-107">To associate the event handler with your event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="1a7d5-108">イベント ハンドラーは、デリゲートを削除しない限り、イベントが発生するたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-108">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="1a7d5-109">イベントハンドラーデリゲートの詳細については、「[イベントの処理と発生](/dotnet/standard/events/)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1a7d5-109">For more information about event handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.UnhandledExceptionEventArgs" />
    <altmember cref="T:System.EventHandler" />
  </Docs>
</Type>
