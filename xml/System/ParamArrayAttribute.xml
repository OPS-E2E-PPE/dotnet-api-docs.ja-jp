<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d208a93cef04d561c86eb4383c57d313f6db28f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172428" /></Metadata><TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParamArrayAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParamArrayAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ParamArrayAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b9765-101">可変個数の引数を指定して呼び出せるメソッドであることを示します。</span><span class="sxs-lookup"><span data-stu-id="b9765-101">Indicates that a method will allow a variable number of arguments in its invocation.</span></span> <span data-ttu-id="b9765-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b9765-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9765-103"><xref:System.ParamArrayAttribute> は、メソッドパラメーターがパラメーター配列であることを示します。</span><span class="sxs-lookup"><span data-stu-id="b9765-103">The <xref:System.ParamArrayAttribute> indicates that a method parameter is a parameter array.</span></span> <span data-ttu-id="b9765-104">パラメーター配列では、不明な数の引数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9765-104">A parameter array allows the specification of an unknown number of arguments.</span></span> <span data-ttu-id="b9765-105">パラメーター配列は、仮パラメーターリストの最後のパラメーターである必要があり、1次元配列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9765-105">A parameter array must be the last parameter in a formal parameter list, and it must be a single-dimension array.</span></span> <span data-ttu-id="b9765-106">メソッドが呼び出されると、パラメーター配列は、次の2つの方法のいずれかで、メソッドへの引数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b9765-106">When the method is called, a parameter array permits arguments to a method to be specified in either of two ways:</span></span>  
  
-   <span data-ttu-id="b9765-107">パラメーター配列型に暗黙的に変換できる型の単一の式として。</span><span class="sxs-lookup"><span data-stu-id="b9765-107">As a single expression of a type that is implicitly convertible to the parameter array type.</span></span> <span data-ttu-id="b9765-108">パラメーター配列は、値パラメーターとして機能します。</span><span class="sxs-lookup"><span data-stu-id="b9765-108">The parameter array functions as a value parameter.</span></span>  
  
-   <span data-ttu-id="b9765-109">0個以上の引数として。各引数は、パラメーター配列要素の型に暗黙的に変換できる型の式です。</span><span class="sxs-lookup"><span data-stu-id="b9765-109">As zero or more arguments, where each argument is an expression of a type that is implicitly convertible to the type of the parameter array element.</span></span>  
  
 <span data-ttu-id="b9765-110">次のセクションの例では、両方の呼び出し規約について説明します。</span><span class="sxs-lookup"><span data-stu-id="b9765-110">The example in the next section illustrates both calling conventions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b9765-111">通常、<xref:System.ParamArrayAttribute> はコード内で直接使用されません。</span><span class="sxs-lookup"><span data-stu-id="b9765-111">Typically, the <xref:System.ParamArrayAttribute> is not used directly in code.</span></span> <span data-ttu-id="b9765-112">代わりに、Visual Basic 内の `ParamArray` やのC#`params` など、個々の言語キーワードが <xref:System.ParamArrayAttribute> クラスのラッパーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="b9765-112">Instead, individual language keywords, such as `ParamArray` in Visual Basic and `params` in C#, are used as wrappers for the <xref:System.ParamArrayAttribute> class.</span></span> <span data-ttu-id="b9765-113">などの一部の言語C#では、言語キーワードを使用する必要があり、<xref:System.ParamArrayAttribute>の使用が禁止されている場合もあります。</span><span class="sxs-lookup"><span data-stu-id="b9765-113">Some languages, such as C#, may even require the use of the language keyword and prohibit the use of <xref:System.ParamArrayAttribute>.</span></span>  
  
 <span data-ttu-id="b9765-114">オーバーロードの解決中に、パラメーター配列をサポートするコンパイラが、存在しないが、パラメーター配列を含むオーバーロードよりも1つ小さいパラメーターを持つメソッドオーバーロードを検出すると、メソッドは、を含むオーバーロードに置き換えられます。パラメーター配列。</span><span class="sxs-lookup"><span data-stu-id="b9765-114">During overload resolution, when compilers that support parameter arrays encounter a method overload that does not exist but has one fewer parameter than an overload that includes a parameter array, they will replace the method with the overload that includes the parameter array.</span></span> <span data-ttu-id="b9765-115">たとえば、`String.Split()` インスタンスメソッド (<xref:System.String> クラスには存在しません) への呼び出しは、<xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> メソッドの呼び出しとして解決されます。</span><span class="sxs-lookup"><span data-stu-id="b9765-115">For example, a call to the `String.Split()` instance method (which does not exist in the <xref:System.String> class) is resolved as a call to the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b9765-116">また、コンパイラは、必要な型の空の配列をメソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="b9765-116">The compiler will also pass an empty array of the required type to the method.</span></span> <span data-ttu-id="b9765-117">これは、パラメーター配列内の要素を処理するときに、長さが0の配列を処理するために、メソッドを常に準備する必要があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="b9765-117">This means that the method must always be prepared to handle an array whose length is zero when it processes the elements in the parameter array.</span></span> <span data-ttu-id="b9765-118">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="b9765-118">The example provides an illustration.</span></span>  
  
 <span data-ttu-id="b9765-119">属性の使用方法の詳細については、「[属性](~/docs/standard/attributes/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b9765-119">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9765-120">次の例では、1つまたは複数の書式設定された気温値を表示するための `Display` メソッドを含む `Temperature` クラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b9765-120">The following example defines a `Temperature` class that includes a `Display` method, which is intended to display one or more formatted temperature values.</span></span> <span data-ttu-id="b9765-121">メソッドには、パラメーター配列として定義されている、`formats`1 つのパラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="b9765-121">The method has a single parameter, `formats`, which is defined as a parameter array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 <span data-ttu-id="b9765-122">次の例は、`Temperature.Display` メソッドの3つの異なる呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="b9765-122">The following example illustrates three different calls to the `Temperature.Display` method.</span></span> <span data-ttu-id="b9765-123">最初の方法では、書式指定文字列の配列がメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b9765-123">In the first, the method is passed an array of format strings.</span></span> <span data-ttu-id="b9765-124">2番目のメソッドでは、4つの個別の書式指定文字列が引数として渡されます。</span><span class="sxs-lookup"><span data-stu-id="b9765-124">In the second, the method is passed four individual format strings as arguments.</span></span> <span data-ttu-id="b9765-125">3番目の方法では、引数を指定せずにメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b9765-125">In the third, the method is called with no arguments.</span></span> <span data-ttu-id="b9765-126">例の出力が示すように、Visual Basic とC#コンパイラはこれを、空の文字列配列を使用して、`Display` メソッドへの呼び出しに変換します。</span><span class="sxs-lookup"><span data-stu-id="b9765-126">As the output from the example illustrates, the Visual Basic and C# compilers translate this into a call to the `Display` method with an empty string array.</span></span>  
  
 [!code-csharp[System.ParamArrayAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <related type="Article" href="~/docs/standard/attributes/index.md"><span data-ttu-id="b9765-127">属性を使用したメタデータの拡張</span><span class="sxs-lookup"><span data-stu-id="b9765-127">Extending Metadata Using Attributes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParamArrayAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9765-128"><see cref="T:System.ParamArrayAttribute" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</span><span class="sxs-lookup"><span data-stu-id="b9765-128">Initializes a new instance of the <see cref="T:System.ParamArrayAttribute" /> class with default properties.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
