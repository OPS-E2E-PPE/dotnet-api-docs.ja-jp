<Type Name="TimeSpan" FullName="System.TimeSpan">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2ae4cd08bed60872153d8ad9e4002e801223839" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73383848" /></Metadata><TypeSignature Language="C#" Value="public struct TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit TimeSpan extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.TimeSpan&gt;, class System.IEquatable`1&lt;valuetype System.TimeSpan&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.TimeSpan" />
  <TypeSignature Language="VB.NET" Value="Public Structure TimeSpan&#xA;Implements IComparable, IComparable(Of TimeSpan), IEquatable(Of TimeSpan), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type TimeSpan = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8daef-101">時間間隔を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-101">Represents a time interval.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-102"><xref:System.TimeSpan> オブジェクトは、日数、時間、分、秒、および秒の小数部の正または負の数として計測される時間間隔 (時間または経過時間) を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-102">A <xref:System.TimeSpan> object represents a time interval (duration of time or elapsed time) that is measured as a positive or negative number of days, hours, minutes, seconds, and fractions of a second.</span></span> <span data-ttu-id="8daef-103"><xref:System.TimeSpan> 構造を使用して時刻を表すこともできますが、時刻が特定の日付と関連付けられていない場合に限られます。</span><span class="sxs-lookup"><span data-stu-id="8daef-103">The <xref:System.TimeSpan> structure can also be used to represent the time of day, but only if the time is unrelated to a particular date.</span></span> <span data-ttu-id="8daef-104">それ以外の場合は、代わりに <xref:System.DateTime> または <xref:System.DateTimeOffset> 構造体を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-104">Otherwise, the <xref:System.DateTime> or <xref:System.DateTimeOffset> structure should be used instead.</span></span> <span data-ttu-id="8daef-105">(<xref:System.TimeSpan> 構造を使用して時刻を反映する方法の詳細については、「 [DateTime、DateTimeOffset、TimeSpan、および TimeZoneInfo の使い分け](~/docs/standard/datetime/choosing-between-datetime.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="8daef-105">(For more information about using the <xref:System.TimeSpan> structure to reflect the time of day, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8daef-106"><xref:System.TimeSpan> 値は、時間間隔を表し、特定の日数、時間、分、秒、およびミリ秒数で表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-106">A <xref:System.TimeSpan> value represents a time interval and can be expressed as a particular number of days, hours, minutes, seconds, and milliseconds.</span></span> <span data-ttu-id="8daef-107">この値は、特定の開始または終了ポイントを参照せずに、一般的な間隔を表すので、年数と月では表現できません。どちらも、日数が変動します。</span><span class="sxs-lookup"><span data-stu-id="8daef-107">Because it represents a general interval without reference to a particular start or end point, it cannot be expressed in terms of years and months, both of which have a variable number of days.</span></span> <span data-ttu-id="8daef-108">これは、特定のタイムゾーンを参照せずに日付と時刻を表す <xref:System.DateTime> 値と、特定の時間を表す <xref:System.DateTimeOffset> 値とは異なります。</span><span class="sxs-lookup"><span data-stu-id="8daef-108">It differs from a <xref:System.DateTime> value, which represents a date and time without reference to a particular time zone, or a <xref:System.DateTimeOffset> value, which represents a specific moment of time.</span></span>  
  
 <span data-ttu-id="8daef-109"><xref:System.TimeSpan> 構造体が期間を測定するために使用する最大時間単位は1日です。</span><span class="sxs-lookup"><span data-stu-id="8daef-109">The largest unit of time that the <xref:System.TimeSpan> structure uses to measure duration is a day.</span></span> <span data-ttu-id="8daef-110">時間間隔は日単位で測定されます。これは、月や年などの長い時間単位の日数が異なるためです。</span><span class="sxs-lookup"><span data-stu-id="8daef-110">Time intervals are measured in days for consistency, because the number of days in larger units of time, such as months and years, varies.</span></span>  
  
 <span data-ttu-id="8daef-111"><xref:System.TimeSpan> オブジェクトの値は、示された時間間隔と等しいタイマー刻みの数です。</span><span class="sxs-lookup"><span data-stu-id="8daef-111">The value of a <xref:System.TimeSpan> object is the number of ticks that equal the represented time interval.</span></span> <span data-ttu-id="8daef-112">ティックは100ナノ秒、つまり万の 1 10-秒に等しくなります。</span><span class="sxs-lookup"><span data-stu-id="8daef-112">A tick is equal to 100 nanoseconds, or one ten-millionth of a second.</span></span> <span data-ttu-id="8daef-113"><xref:System.TimeSpan> オブジェクトの値は、<xref:System.TimeSpan.MinValue?displayProperty=nameWithType> から <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>までの範囲で指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-113">The value of a <xref:System.TimeSpan> object can range from <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
## <a name="instantiating-a-timespan-value"></a><span data-ttu-id="8daef-114">TimeSpan 値のインスタンス化</span><span class="sxs-lookup"><span data-stu-id="8daef-114">Instantiating a TimeSpan Value</span></span>  
 <span data-ttu-id="8daef-115"><xref:System.TimeSpan> 値は、いくつかの方法でインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-115">You can instantiate a <xref:System.TimeSpan> value in a number of ways:</span></span>  
  
-   <span data-ttu-id="8daef-116">暗黙のパラメーターなしのコンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8daef-116">By calling its implicit parameterless constructor.</span></span> <span data-ttu-id="8daef-117">これにより、次の例に示すように、値が <xref:System.TimeSpan.Zero?displayProperty=nameWithType>であるオブジェクトが作成されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-117">This creates an object whose value is <xref:System.TimeSpan.Zero?displayProperty=nameWithType>, as the following example shows.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#2)]
     [!code-vb[System.TimeSpan.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#2)]  
  
-   <span data-ttu-id="8daef-118">明示的なコンストラクターのいずれかを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8daef-118">By calling one of its explicit constructors.</span></span> <span data-ttu-id="8daef-119">次の例では、<xref:System.TimeSpan> 値を、指定した時間数、分数、秒数に初期化します。</span><span class="sxs-lookup"><span data-stu-id="8daef-119">The following example initializes a <xref:System.TimeSpan> value to a specified number of hours, minutes, and seconds.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#3)]
     [!code-vb[System.TimeSpan.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#3)]  
  
-   <span data-ttu-id="8daef-120">メソッドを呼び出すか、<xref:System.TimeSpan> 値を返す操作を実行する。</span><span class="sxs-lookup"><span data-stu-id="8daef-120">By calling a method or performing an operation that returns a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="8daef-121">たとえば、次の例に示すように、2つの日付と時刻の値の間の間隔を表す <xref:System.TimeSpan> 値をインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-121">For example, you can instantiate a <xref:System.TimeSpan> value that represents the interval between two date and time values, as the following example shows.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#4)]
     [!code-vb[System.TimeSpan.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#4)]  
  
     <span data-ttu-id="8daef-122">次の例に示すように、このようにして <xref:System.TimeSpan> オブジェクトをゼロ時刻値に初期化することもできます。</span><span class="sxs-lookup"><span data-stu-id="8daef-122">You can also initialize a <xref:System.TimeSpan> object to a zero time value in this way, as the following example shows.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/zero1.cs#6)]
     [!code-vb[System.TimeSpan.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/zero1.vb#6)]  
  
     <span data-ttu-id="8daef-123"><xref:System.TimeSpan> 値は、<xref:System.DateTime>、<xref:System.DateTimeOffset>、および <xref:System.TimeSpan> 構造体の算術演算子およびメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-123"><xref:System.TimeSpan> values are returned by arithmetic operators and methods of the <xref:System.DateTime>, <xref:System.DateTimeOffset>, and <xref:System.TimeSpan> structures.</span></span>  
  
-   <span data-ttu-id="8daef-124"><xref:System.TimeSpan> 値の文字列形式を解析する。</span><span class="sxs-lookup"><span data-stu-id="8daef-124">By parsing the string representation of a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="8daef-125"><xref:System.TimeSpan.Parse%2A> および <xref:System.TimeSpan.TryParse%2A> メソッドを使用して、時間間隔を含む文字列を <xref:System.TimeSpan> 値に変換できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-125">You can use the <xref:System.TimeSpan.Parse%2A> and <xref:System.TimeSpan.TryParse%2A> methods to convert strings that contain time intervals to <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="8daef-126">次の例では、<xref:System.TimeSpan.Parse%2A> メソッドを使用して、文字列の配列を <xref:System.TimeSpan> の値に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-126">The following example uses the <xref:System.TimeSpan.Parse%2A> method to convert an array of strings to <xref:System.TimeSpan> values.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/instantiate1.cs#5)]
     [!code-vb[System.TimeSpan.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/instantiate1.vb#5)]  
  
     <span data-ttu-id="8daef-127">さらに、<xref:System.TimeSpan.ParseExact%2A> または <xref:System.TimeSpan.TryParseExact%2A> メソッドを呼び出すことによって、解析して <xref:System.TimeSpan> 値に変換する入力文字列の正確な形式を定義できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-127">In addition, you can define the precise format of the input string to be parsed and converted to a <xref:System.TimeSpan> value by calling the <xref:System.TimeSpan.ParseExact%2A> or <xref:System.TimeSpan.TryParseExact%2A> method.</span></span>  
  
## <a name="performing-operations-on-timespan-values"></a><span data-ttu-id="8daef-128">TimeSpan 値に対する操作の実行</span><span class="sxs-lookup"><span data-stu-id="8daef-128">Performing Operations on TimeSpan Values</span></span>  
 <span data-ttu-id="8daef-129"><xref:System.TimeSpan.op_Addition%2A> と <xref:System.TimeSpan.op_Subtraction%2A> の演算子を使用するか、<xref:System.TimeSpan.Add%2A> および <xref:System.TimeSpan.Subtract%2A> メソッドを呼び出すことによって、時間間隔を加算および減算できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-129">You can add and subtract time durations either by using the <xref:System.TimeSpan.op_Addition%2A> and <xref:System.TimeSpan.op_Subtraction%2A> operators, or by calling the <xref:System.TimeSpan.Add%2A> and <xref:System.TimeSpan.Subtract%2A> methods.</span></span> <span data-ttu-id="8daef-130"><xref:System.TimeSpan.Compare%2A>、<xref:System.TimeSpan.CompareTo%2A>、および <xref:System.TimeSpan.Equals%2A> メソッドを呼び出すことによって、2つの期間を比較することもできます。</span><span class="sxs-lookup"><span data-stu-id="8daef-130">You can also compare two time durations by calling the <xref:System.TimeSpan.Compare%2A>, <xref:System.TimeSpan.CompareTo%2A>, and <xref:System.TimeSpan.Equals%2A> methods.</span></span> <span data-ttu-id="8daef-131"><xref:System.TimeSpan> 構造体には、時間間隔を正および負の値に変換する <xref:System.TimeSpan.Duration%2A> メソッドと <xref:System.TimeSpan.Negate%2A> メソッドも含まれています。</span><span class="sxs-lookup"><span data-stu-id="8daef-131">The <xref:System.TimeSpan> structure also includes the <xref:System.TimeSpan.Duration%2A> and <xref:System.TimeSpan.Negate%2A> methods, which convert time intervals to positive and negative values,</span></span>  
  
 <span data-ttu-id="8daef-132"><xref:System.TimeSpan> 値の範囲は <xref:System.TimeSpan.MaxValue>に <xref:System.TimeSpan.MinValue> ます。</span><span class="sxs-lookup"><span data-stu-id="8daef-132">The range of <xref:System.TimeSpan> values is <xref:System.TimeSpan.MinValue> to <xref:System.TimeSpan.MaxValue>.</span></span>  
  
## <a name="formatting-a-timespan-value"></a><span data-ttu-id="8daef-133">TimeSpan 値の書式設定</span><span class="sxs-lookup"><span data-stu-id="8daef-133">Formatting a TimeSpan Value</span></span>  
 <span data-ttu-id="8daef-134"><xref:System.TimeSpan> 値は、[*-*]*d*として表すことができます。*hh*:*mm*:*ss*。*ff*。省略可能なマイナス記号は負の時間間隔を示し、 *d*コンポーネントは日、24時間制の場合は*hh* 、 *mm*は分、 *ss*は秒、 *ff*は秒の小数部を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-134">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="8daef-135">つまり、時間間隔は、時刻を含まない正または負の日数、または時刻が1日の日数で構成されます。または、時刻のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="8daef-135">That is, a time interval consists of a positive or negative number of days without a time of day, or a number of days with a time of day, or only a time of day.</span></span>  
  
 <span data-ttu-id="8daef-136">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降、<xref:System.TimeSpan> 構造は、<xref:System.TimeSpan.ToString%2A> メソッドのオーバーロードによってカルチャに依存した書式設定をサポートします。これにより、<xref:System.TimeSpan> 値が文字列形式に変換されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-136">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.TimeSpan> structure supports culture-sensitive formatting through the overloads of its <xref:System.TimeSpan.ToString%2A> method, which converts a <xref:System.TimeSpan> value to its string representation.</span></span> <span data-ttu-id="8daef-137">既定の <xref:System.TimeSpan.ToString?displayProperty=nameWithType> メソッドは、以前のバージョンの .NET Framework の戻り値と同じ不変形式を使用して、時間間隔を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-137">The default <xref:System.TimeSpan.ToString?displayProperty=nameWithType> method returns a time interval by using an invariant format that is identical to its return value in previous versions of the .NET Framework.</span></span> <span data-ttu-id="8daef-138"><xref:System.TimeSpan.ToString%28System.String%29?displayProperty=nameWithType> のオーバーロードでは、時間間隔の文字列形式を定義する書式設定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-138">The <xref:System.TimeSpan.ToString%28System.String%29?displayProperty=nameWithType> overload lets you specify a format string that defines the string representation of the time interval.</span></span> <span data-ttu-id="8daef-139"><xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> のオーバーロードでは、書式指定文字列と、時間間隔の文字列形式を作成するために使用される書式指定規則を持つカルチャを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-139">The <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload lets you specify a format string and the culture whose formatting conventions are used to create the string representation of the time interval.</span></span> <span data-ttu-id="8daef-140"><xref:System.TimeSpan> では、標準とカスタムの両方の書式指定文字列がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="8daef-140"><xref:System.TimeSpan> supports both standard and custom format strings.</span></span> <span data-ttu-id="8daef-141">(詳細については、「[標準の Timespan 書式指定文字列](~/docs/standard/base-types/standard-timespan-format-strings.md)」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください)。ただし、カルチャに依存するのは、標準書式指定文字列のみです。</span><span class="sxs-lookup"><span data-stu-id="8daef-141">(For more information, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).) However, only standard format strings are culture-sensitive.</span></span>  
  
## <a name="restoring-legacy-timespan-formatting"></a><span data-ttu-id="8daef-142">レガシ TimeSpan 書式設定を復元しています</span><span class="sxs-lookup"><span data-stu-id="8daef-142">Restoring Legacy TimeSpan Formatting</span></span>  
 <span data-ttu-id="8daef-143">場合によっては、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 以前のバージョンで <xref:System.TimeSpan> 値が正しく書式設定されたコードが [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]で失敗します。</span><span class="sxs-lookup"><span data-stu-id="8daef-143">In some cases, code that successfully formats <xref:System.TimeSpan> values in [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions fails in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)].</span></span> <span data-ttu-id="8daef-144">これは、書式指定文字列を使用して <xref:System.TimeSpan> 値の書式を設定するために[< TimeSpan_LegacyFormatMode > element](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)メソッドを呼び出すコードで最も一般的です。</span><span class="sxs-lookup"><span data-stu-id="8daef-144">This is most common in code that calls a [<TimeSpan_LegacyFormatMode> element](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md) method to format a <xref:System.TimeSpan> value with a format string.</span></span> <span data-ttu-id="8daef-145">次の例では、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 以前のバージョンで <xref:System.TimeSpan> 値の書式を正常に設定していますが、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 以降のバージョンでは例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-145">The following example successfully formats a <xref:System.TimeSpan> value in [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, but throws an exception in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later versions.</span></span> <span data-ttu-id="8daef-146">サポートされていない書式指定子を使用して <xref:System.TimeSpan> 値の書式を設定しようとすることに注意してください。これは、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 以前のバージョンでは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-146">Note that it attempts to format a <xref:System.TimeSpan> value by using an unsupported format specifier, which is ignored in [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions.</span></span>  
  
 [!code-csharp[System.TimeSpan.Class.Legacy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.legacy/cs/legacycode1.cs#1)]
 [!code-vb[System.TimeSpan.Class.Legacy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.legacy/vb/legacycode1.vb#1)]  
  
 <span data-ttu-id="8daef-147">コードを変更できない場合は、次のいずれかの方法で <xref:System.TimeSpan> 値の従来の書式設定を復元できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-147">If you cannot modify the code, you can restore the legacy formatting of <xref:System.TimeSpan> values in one of the following ways:</span></span>  
  
-   <span data-ttu-id="8daef-148">[< TimeSpan_LegacyFormatMode > 要素](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)を含む構成ファイルを作成する。</span><span class="sxs-lookup"><span data-stu-id="8daef-148">By creating a configuration file that contains the [<TimeSpan_LegacyFormatMode> element](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md).</span></span> <span data-ttu-id="8daef-149">この要素の `enabled` 属性を `true` に設定すると、アプリケーションごとに従来の <xref:System.TimeSpan> 書式設定が復元されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-149">Setting this element's `enabled` attribute to `true` restores legacy <xref:System.TimeSpan> formatting on a per-application basis.</span></span>  
  
-   <span data-ttu-id="8daef-150">アプリケーションドメインを作成するときに、"NetFx40_TimeSpanLegacyFormatMode" 互換性スイッチを設定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-150">By setting the "NetFx40_TimeSpanLegacyFormatMode" compatibility switch when you create an application domain.</span></span> <span data-ttu-id="8daef-151">これにより、レガシ <xref:System.TimeSpan> の書式設定がアプリケーションドメインごとに有効になります。</span><span class="sxs-lookup"><span data-stu-id="8daef-151">This enables legacy <xref:System.TimeSpan> formatting on a per-application-domain basis.</span></span> <span data-ttu-id="8daef-152">次の例では、従来の <xref:System.TimeSpan> の書式設定を使用するアプリケーションドメインを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-152">The following example creates an application domain that uses legacy <xref:System.TimeSpan> formatting.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.appdomain/cs/perappdomain1.cs#1)]
     [!code-vb[System.TimeSpan.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.appdomain/vb/perappdomain1.vb#1)]  
  
     <span data-ttu-id="8daef-153">新しいアプリケーションドメインで次のコードが実行されると、従来の <xref:System.TimeSpan> の書式設定動作に戻ります。</span><span class="sxs-lookup"><span data-stu-id="8daef-153">When the following code executes in the new application domain, it reverts to legacy <xref:System.TimeSpan> formatting behavior.</span></span>  
  
     [!code-csharp[System.TimeSpan.Class.AppDomain#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class.appdomain/cs/showtimespan.cs#2)]
     [!code-vb[System.TimeSpan.Class.AppDomain#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class.appdomain/vb/showtimespan.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="8daef-154">次の例では、2つの日付の差を表す <xref:System.TimeSpan> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="8daef-154">The following example instantiates a <xref:System.TimeSpan> object that represents the difference between two dates.</span></span> <span data-ttu-id="8daef-155">次に、<xref:System.TimeSpan> オブジェクトのプロパティが表示されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-155">It then displays the <xref:System.TimeSpan> object's properties.</span></span>  
  
 [!code-csharp[System.TimeSpan.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.class/cs/structure1.cs#1)]
 [!code-vb[System.TimeSpan.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.class/vb/structure1.vb#1)]  
 [!code-powershell[System.TimeSpan.Class#1](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.timespan.class/ps/structure1.ps1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.Globalization.Calendar" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8daef-156"><see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8daef-156">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(long ticks);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int64 -&gt; TimeSpan" Usage="new System.TimeSpan ticks" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="8daef-157">100 ナノ秒単位で表される期間。</span><span class="sxs-lookup"><span data-stu-id="8daef-157">A time period expressed in 100-nanosecond units.</span></span></param>
        <summary><span data-ttu-id="8daef-158"><see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを、指定したタイマー刻み数に初期化します。</span><span class="sxs-lookup"><span data-stu-id="8daef-158">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to the specified number of ticks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-159">1ティックは、100ナノ秒または 1 10-万の秒を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-159">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="8daef-160">ミリ秒単位で1万タイマー刻みがあります。</span><span class="sxs-lookup"><span data-stu-id="8daef-160">There are 10,000 ticks in a millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-161">次の例では、指定されたタイマー刻み数に <xref:System.TimeSpan> を初期化するコンストラクターのオーバーロードを使用して、複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-161">The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of ticks.</span></span>  
  
 [!code-cpp[System.TimeSpan.Ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctorl.cpp#1)]
 [!code-csharp[System.TimeSpan.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctorl.cs#1)]
 [!code-vb[System.TimeSpan.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctorl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Ticks" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hours As Integer, minutes As Integer, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int hours, int minutes, int seconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (hours, minutes, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hours"><span data-ttu-id="8daef-162">時間数。</span><span class="sxs-lookup"><span data-stu-id="8daef-162">Number of hours.</span></span></param>
        <param name="minutes"><span data-ttu-id="8daef-163">分数。</span><span class="sxs-lookup"><span data-stu-id="8daef-163">Number of minutes.</span></span></param>
        <param name="seconds"><span data-ttu-id="8daef-164">秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-164">Number of seconds.</span></span></param>
        <summary><span data-ttu-id="8daef-165"><see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを、指定した時間数、分数、秒数に初期化します。</span><span class="sxs-lookup"><span data-stu-id="8daef-165">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of hours, minutes, and seconds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-166">指定された `hours`、`minutes`、および `seconds` はティックに変換され、その値によってこのインスタンスが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-166">The specified `hours`, `minutes`, and `seconds` are converted to ticks, and that value initializes this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-167">次の例では、<xref:System.TimeSpan> を初期化するコンストラクターのオーバーロードを使用して、指定された時間、分、秒数に対して、複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-167">The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of hours, minutes, and seconds.</span></span>  
  
 [!code-cpp[System.TimeSpan.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriii.cpp#2)]
 [!code-csharp[System.TimeSpan.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriii.cs#2)]
 [!code-vb[System.TimeSpan.Ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriii.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8daef-168">パラメーターに指定された <see cref="T:System.TimeSpan" /> 値が、<see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-168">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (days As Integer, hours As Integer, minutes As Integer, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int days, int hours, int minutes, int seconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (days, hours, minutes, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="days"><span data-ttu-id="8daef-169">日数。</span><span class="sxs-lookup"><span data-stu-id="8daef-169">Number of days.</span></span></param>
        <param name="hours"><span data-ttu-id="8daef-170">時間数。</span><span class="sxs-lookup"><span data-stu-id="8daef-170">Number of hours.</span></span></param>
        <param name="minutes"><span data-ttu-id="8daef-171">分数。</span><span class="sxs-lookup"><span data-stu-id="8daef-171">Number of minutes.</span></span></param>
        <param name="seconds"><span data-ttu-id="8daef-172">秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-172">Number of seconds.</span></span></param>
        <summary><span data-ttu-id="8daef-173"><see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを指定された日数、時間数、分数、秒数に初期化します。</span><span class="sxs-lookup"><span data-stu-id="8daef-173">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of days, hours, minutes, and seconds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-174">指定された `days`、`hours`、`minutes`、および `seconds` がティックに変換され、その値によってこのインスタンスが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-174">The specified `days`, `hours`, `minutes`, and `seconds` are converted to ticks, and that value initializes this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-175">次の例では、<xref:System.TimeSpan> を初期化するコンストラクターのオーバーロードを使用して、指定された日数、時間、分、および秒数に対して、複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-175">The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of days, hours, minutes, and seconds.</span></span>  
  
 [!code-cpp[System.TimeSpan.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriiii.cpp#3)]
 [!code-csharp[System.TimeSpan.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriiii.cs#3)]
 [!code-vb[System.TimeSpan.Ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriiii.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8daef-176">パラメーターに指定された <see cref="T:System.TimeSpan" /> 値が、<see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-176">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds, int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (days As Integer, hours As Integer, minutes As Integer, seconds As Integer, milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan(int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberSignature Language="F#" Value="new TimeSpan : int * int * int * int * int -&gt; TimeSpan" Usage="new System.TimeSpan (days, hours, minutes, seconds, milliseconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="days"><span data-ttu-id="8daef-177">日数。</span><span class="sxs-lookup"><span data-stu-id="8daef-177">Number of days.</span></span></param>
        <param name="hours"><span data-ttu-id="8daef-178">時間数。</span><span class="sxs-lookup"><span data-stu-id="8daef-178">Number of hours.</span></span></param>
        <param name="minutes"><span data-ttu-id="8daef-179">分数。</span><span class="sxs-lookup"><span data-stu-id="8daef-179">Number of minutes.</span></span></param>
        <param name="seconds"><span data-ttu-id="8daef-180">秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-180">Number of seconds.</span></span></param>
        <param name="milliseconds"><span data-ttu-id="8daef-181">ミリ秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-181">Number of milliseconds.</span></span></param>
        <summary><span data-ttu-id="8daef-182"><see cref="T:System.TimeSpan" /> 構造体の新しいインスタンスを、指定した日数、時間数、分数、秒数、ミリ秒数に初期化します。</span><span class="sxs-lookup"><span data-stu-id="8daef-182">Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of days, hours, minutes, seconds, and milliseconds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-183">指定された `days`、`hours`、`minutes`、`seconds`、および `milliseconds` がティックに変換され、その値によってこのインスタンスが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-183">The specified `days`, `hours`, `minutes`, `seconds`, and `milliseconds` are converted to ticks, and that value initializes this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-184">次の例では、<xref:System.TimeSpan> を初期化するコンストラクターのオーバーロードを使用して、指定された日数、時間、分、秒、およびミリ秒数に <xref:System.TimeSpan> 複数のオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-184">The following example creates several <xref:System.TimeSpan> objects using the constructor overload that initializes a <xref:System.TimeSpan> to a specified number of days, hours, minutes, seconds, and milliseconds.</span></span>  
  
 [!code-cpp[System.TimeSpan.Ctor#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CPP/ctoriiiii.cpp#4)]
 [!code-csharp[System.TimeSpan.Ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Ctor/CS/ctoriiiii.cs#4)]
 [!code-vb[System.TimeSpan.Ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Ctor/VB/ctoriiiii.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8daef-185">パラメーターに指定された <see cref="T:System.TimeSpan" /> 値が、<see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-185">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public TimeSpan Add (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Add(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ts As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Add(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; TimeSpan" Usage="timeSpan.Add ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts"><span data-ttu-id="8daef-186">加算する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-186">The time interval to add.</span></span></param>
        <summary><span data-ttu-id="8daef-187">指定した <see cref="T:System.TimeSpan" /> オブジェクトとこのインスタンスを合計した値を持つ新しい <see cref="T:System.TimeSpan" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-187">Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of the specified <see cref="T:System.TimeSpan" /> object and this instance.</span></span></summary>
        <returns><span data-ttu-id="8daef-188">このインスタンスの値と <paramref name="ts" /> の値の合計を表す新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-188">A new object that represents the value of this instance plus the value of <paramref name="ts" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-189">戻り値は、<xref:System.TimeSpan.MinValue?displayProperty=nameWithType> と <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>の間である必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-189">The return value must be between <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="8daef-190">戻り値は新しい <xref:System.TimeSpan>です。元の <xref:System.TimeSpan> は変更されません。</span><span class="sxs-lookup"><span data-stu-id="8daef-190">The return value is a new <xref:System.TimeSpan>; the original <xref:System.TimeSpan> is not modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-191">次の例では、<xref:System.TimeSpan.Add%2A> メソッドを呼び出して、時間間隔の配列内の各要素を基本 <xref:System.TimeSpan> 値に追加します。</span><span class="sxs-lookup"><span data-stu-id="8daef-191">The following example calls the <xref:System.TimeSpan.Add%2A> method to add each element in an array of time intervals to a base <xref:System.TimeSpan> value.</span></span>  
  
 [!code-csharp[System.TimeSpan.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.add/cs/add1.cs#1)]
 [!code-vb[System.TimeSpan.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.add/vb/add1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-192">結果として返された <see cref="T:System.TimeSpan" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか、<see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-192">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As TimeSpan, t2 As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member Compare : TimeSpan * TimeSpan -&gt; int" Usage="System.TimeSpan.Compare (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-193">比較する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-193">The first time interval to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-194">比較する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-194">The second time interval to compare.</span></span></param>
        <summary><span data-ttu-id="8daef-195">2 つの <see cref="T:System.TimeSpan" /> 値を比較し、第 1 の値が第 2 の値よりも短いか、同じか、または長いかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-195">Compares two <see cref="T:System.TimeSpan" /> values and returns an integer that indicates whether the first value is shorter than, equal to, or longer than the second value.</span></span></summary>
        <returns><span data-ttu-id="8daef-196">次のいずれかの値です。</span><span class="sxs-lookup"><span data-stu-id="8daef-196">One of the following values.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8daef-197">[値]</span><span class="sxs-lookup"><span data-stu-id="8daef-197">Value</span></span> 
 </term><description> <span data-ttu-id="8daef-198">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-198">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8daef-199">-1</span><span class="sxs-lookup"><span data-stu-id="8daef-199">-1</span></span> 
 </term><description><span data-ttu-id="8daef-200"><paramref name="t1" /> は <paramref name="t2" /> よりも短いです。</span><span class="sxs-lookup"><span data-stu-id="8daef-200"><paramref name="t1" /> is shorter than <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8daef-201">0</span><span class="sxs-lookup"><span data-stu-id="8daef-201">0</span></span> 
 </term><description><span data-ttu-id="8daef-202"><paramref name="t1" /> と <paramref name="t2" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="8daef-202"><paramref name="t1" /> is equal to <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8daef-203">1</span><span class="sxs-lookup"><span data-stu-id="8daef-203">1</span></span> 
 </term><description><span data-ttu-id="8daef-204"><paramref name="t1" /> は <paramref name="t2" /> よりも長いです。</span><span class="sxs-lookup"><span data-stu-id="8daef-204"><paramref name="t1" /> is longer than <paramref name="t2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8daef-205">次の例では、<xref:System.TimeSpan.Compare%2A> メソッドを使用して、複数の <xref:System.TimeSpan> オブジェクトを、値が2時間の時間間隔である <xref:System.TimeSpan> オブジェクトと比較します。</span><span class="sxs-lookup"><span data-stu-id="8daef-205">The following example uses the <xref:System.TimeSpan.Compare%2A> method to compare several <xref:System.TimeSpan> objects with a <xref:System.TimeSpan> object whose value is a 2-hour time interval.</span></span>  
  
 [!code-csharp[System.TimeSpan.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.compare/cs/compare1.cs#1)]
 [!code-vb[System.TimeSpan.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8daef-206">このインスタンスと指定したオブジェクトまたは <see cref="T:System.TimeSpan" /> オブジェクトを比較し、このインスタンスが指定したオブジェクトまたは <see cref="T:System.TimeSpan" /> オブジェクトよりも短いか、同じか、または長いかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-206">Compares this instance to a specified object or <see cref="T:System.TimeSpan" /> object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the specified object or <see cref="T:System.TimeSpan" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-207"><xref:System.TimeSpan.CompareTo%2A> メソッドの2つのオーバーロードは、次の表に示すように、このインスタンスと `value` 引数の相対値を示す符号付き数値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-207">The two overloads of the <xref:System.TimeSpan.CompareTo%2A> method return a signed number that indicates the relative value of this instance and the `value` argument, as shown in the following table.</span></span>  
  
|<span data-ttu-id="8daef-208">[値]</span><span class="sxs-lookup"><span data-stu-id="8daef-208">Value</span></span>|<span data-ttu-id="8daef-209">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-209">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="8daef-210">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="8daef-210">Less than zero</span></span>|<span data-ttu-id="8daef-211">このインスタンスは `value` より短いです。</span><span class="sxs-lookup"><span data-stu-id="8daef-211">This instance is shorter than `value`.</span></span>|  
|<span data-ttu-id="8daef-212">0</span><span class="sxs-lookup"><span data-stu-id="8daef-212">Zero</span></span>|<span data-ttu-id="8daef-213">このインスタンスは `value` と同じです。</span><span class="sxs-lookup"><span data-stu-id="8daef-213">This instance is the same as `value`.</span></span>|  
|<span data-ttu-id="8daef-214">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="8daef-214">Greater than zero</span></span>|<span data-ttu-id="8daef-215">このインスタンスは `value` より長いです。</span><span class="sxs-lookup"><span data-stu-id="8daef-215">This instance is longer than `value`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="timeSpan.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-216">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-216">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8daef-217">このインスタンスと指定したオブジェクトを比較し、このインスタンスが指定したオブジェクトよりも短いか、同じか、または長いかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-217">Compares this instance to a specified object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the specified object.</span></span></summary>
        <returns><span data-ttu-id="8daef-218">次のいずれかの値です。</span><span class="sxs-lookup"><span data-stu-id="8daef-218">One of the following values.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8daef-219">[値]</span><span class="sxs-lookup"><span data-stu-id="8daef-219">Value</span></span> 
 </term><description> <span data-ttu-id="8daef-220">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-220">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8daef-221">-1</span><span class="sxs-lookup"><span data-stu-id="8daef-221">-1</span></span> 
 </term><description> <span data-ttu-id="8daef-222">このインスタンスは <paramref name="value" /> より短いです。</span><span class="sxs-lookup"><span data-stu-id="8daef-222">This instance is shorter than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8daef-223">0</span><span class="sxs-lookup"><span data-stu-id="8daef-223">0</span></span> 
 </term><description> <span data-ttu-id="8daef-224">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="8daef-224">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8daef-225">1</span><span class="sxs-lookup"><span data-stu-id="8daef-225">1</span></span> 
 </term><description> <span data-ttu-id="8daef-226">このインスタンスは <paramref name="value" /> より長いです。</span><span class="sxs-lookup"><span data-stu-id="8daef-226">This instance is longer than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="8daef-227">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-227">-or-</span></span> 
 <span data-ttu-id="8daef-228"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-228"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-229"><xref:System.TimeSpan>のインスタンスは、その値に関係なく、`null`よりも大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-229">Any instance of <xref:System.TimeSpan>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="8daef-230">`value` パラメーターは <xref:System.TimeSpan> または `null`のインスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-230">The `value` parameter must be an instance of <xref:System.TimeSpan> or `null`; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-231">次の例では、<xref:System.TimeSpan.CompareTo%2A> メソッドを使用して、いくつかの <xref:System.TimeSpan> 構造体とその他のオブジェクトを参照 <xref:System.TimeSpan> 構造体と比較します。</span><span class="sxs-lookup"><span data-stu-id="8daef-231">The following example compares several <xref:System.TimeSpan> structures and other objects to a reference <xref:System.TimeSpan> structure using the <xref:System.TimeSpan.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.TimeSpan.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8daef-232"><paramref name="value" /> が <see cref="T:System.TimeSpan" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="8daef-232"><paramref name="value" /> is not a <see cref="T:System.TimeSpan" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.CompareTo(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As TimeSpan) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(TimeSpan value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : TimeSpan -&gt; int&#xA;override this.CompareTo : TimeSpan -&gt; int" Usage="timeSpan.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-233">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-233">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="8daef-234">このインスタンスと指定した <see cref="T:System.TimeSpan" /> オブジェクトを比較し、このインスタンスが指定した <see cref="T:System.TimeSpan" /> オブジェクトよりも短いか、同じか、または長いかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-234">Compares this instance to a specified <see cref="T:System.TimeSpan" /> object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the <see cref="T:System.TimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="8daef-235">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="8daef-235">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8daef-236">[値]</span><span class="sxs-lookup"><span data-stu-id="8daef-236">Value</span></span> 
 </term><description> <span data-ttu-id="8daef-237">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-237">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8daef-238">負の整数</span><span class="sxs-lookup"><span data-stu-id="8daef-238">A negative integer</span></span> 
 </term><description> <span data-ttu-id="8daef-239">このインスタンスは <paramref name="value" /> より短いです。</span><span class="sxs-lookup"><span data-stu-id="8daef-239">This instance is shorter than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8daef-240">0</span><span class="sxs-lookup"><span data-stu-id="8daef-240">Zero</span></span> 
 </term><description> <span data-ttu-id="8daef-241">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="8daef-241">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="8daef-242">正の整数</span><span class="sxs-lookup"><span data-stu-id="8daef-242">A positive integer</span></span> 
 </term><description> <span data-ttu-id="8daef-243">このインスタンスは <paramref name="value" /> より長いです。</span><span class="sxs-lookup"><span data-stu-id="8daef-243">This instance is longer than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-244">このメソッドは、<xref:System.IComparable%601?displayProperty=nameWithType> インターフェイスを実装し、`value` パラメーターをオブジェクトに変換する必要がないため、<xref:System.TimeSpan.CompareTo%2A?displayProperty=nameWithType> メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="8daef-244">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.TimeSpan.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-245">次の例では、いくつかの値および参照型について、<xref:System.TimeSpan.CompareTo%2A> メソッドのジェネリックおよび非ジェネリックバージョンを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-245">The following example demonstrates generic and nongeneric versions of the <xref:System.TimeSpan.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="C#" Value="public int Days { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Days" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Days" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Days As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Days { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Days : int" Usage="System.TimeSpan.Days" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-246">現在の <see cref="T:System.TimeSpan" /> 構造体によって表される時間間隔の日要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-246">Gets the days component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span></span></summary>
        <value><span data-ttu-id="8daef-247">このインスタンスの日の部分。</span><span class="sxs-lookup"><span data-stu-id="8daef-247">The day component of this instance.</span></span> <span data-ttu-id="8daef-248">戻り値は、正の場合もあれば負の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="8daef-248">The return value can be positive or negative.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-249"><xref:System.TimeSpan> 値は、[*-*]*d*として表すことができます。*hh*:*mm*:*ss*。*ff*。省略可能なマイナス記号は負の時間間隔を示し、 *d*コンポーネントは日、24時間制の場合は*hh* 、 *mm*は分、 *ss*は秒、 *ff*は秒の小数部を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-249">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="8daef-250"><xref:System.TimeSpan.Days%2A> プロパティの値は、day コンポーネント*d*です。</span><span class="sxs-lookup"><span data-stu-id="8daef-250">The value of the <xref:System.TimeSpan.Days%2A> property is the day component, *d*.</span></span>  
  
 <span data-ttu-id="8daef-251"><xref:System.TimeSpan.Days%2A> プロパティは、全体の日数を表します。一方、<xref:System.TimeSpan.TotalDays%2A> プロパティは、整数部と小数部から成る日数を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-251">The <xref:System.TimeSpan.Days%2A> property represents whole days, whereas the <xref:System.TimeSpan.TotalDays%2A> property represents whole and fractional days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-252">次の例では、複数の <xref:System.TimeSpan> オブジェクトを作成し、それぞれの <xref:System.TimeSpan.Days%2A> プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-252">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Days%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalDays" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public TimeSpan Divide (double divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Divide(float64 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Divide(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide (divisor As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Divide(double divisor);" />
      <MemberSignature Language="F#" Value="member this.Divide : double -&gt; TimeSpan" Usage="timeSpan.Divide divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="divisor" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="divisor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public double Divide (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Divide(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Divide(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Divide (ts As TimeSpan) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Divide(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Divide : TimeSpan -&gt; double" Usage="timeSpan.Divide ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="ts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public TimeSpan Duration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Duration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Function Duration () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Duration();" />
      <MemberSignature Language="F#" Value="member this.Duration : unit -&gt; TimeSpan" Usage="timeSpan.Duration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8daef-253">値が現在の <see cref="T:System.TimeSpan" /> オブジェクトの絶対値である、新しい <see cref="T:System.TimeSpan" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-253">Returns a new <see cref="T:System.TimeSpan" /> object whose value is the absolute value of the current <see cref="T:System.TimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="8daef-254">値が現在の <see cref="T:System.TimeSpan" /> オブジェクトの絶対値である新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-254">A new object whose value is the absolute value of the current <see cref="T:System.TimeSpan" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8daef-255">次の例では、<xref:System.TimeSpan.Duration%2A> メソッドをいくつかの <xref:System.TimeSpan> オブジェクトに適用します。</span><span class="sxs-lookup"><span data-stu-id="8daef-255">The following example applies the <xref:System.TimeSpan.Duration%2A> method to several <xref:System.TimeSpan> objects.</span></span>  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-256">このインスタンスの値は <see cref="F:System.TimeSpan.MinValue" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-256">The value of this instance is <see cref="F:System.TimeSpan.MinValue" />.</span></span></exception>
        <altmember cref="P:System.TimeSpan.Ticks" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8daef-257"><see cref="T:System.TimeSpan" /> の 2 つのインスタンスが等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-257">Returns a value indicating whether two instances of <see cref="T:System.TimeSpan" /> are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="timeSpan.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-258">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-258">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="8daef-259">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-259">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8daef-260"><paramref name="value" /> が現在の <see cref="T:System.TimeSpan" /> 構造体と同じ時間間隔を表す <see cref="T:System.TimeSpan" /> オブジェクトの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-260"><see langword="true" /> if <paramref name="value" /> is a <see cref="T:System.TimeSpan" /> object that represents the same time interval as the current <see cref="T:System.TimeSpan" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8daef-261">次の例では、<xref:System.TimeSpan.Equals%2A> メソッドを使用して、いくつかの <xref:System.TimeSpan> とその他のオブジェクトを参照 <xref:System.TimeSpan> と比較しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-261">The following example compares several <xref:System.TimeSpan> and other objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.Equals%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/cto_eq_obj.cpp#1)]
 [!code-csharp[System.TimeSpan.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/cto_eq_obj.cs#1)]
 [!code-vb[System.TimeSpan.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/cto_eq_obj.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeSpan obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.TimeSpan obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeSpan obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeSpan -&gt; bool" Usage="timeSpan.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TimeSpan" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8daef-262">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-262">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="8daef-263">対象のインスタンスが、指定した <see cref="T:System.TimeSpan" /> オブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-263">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.TimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="8daef-264"><paramref name="obj" /> がこのインスタンスと同じ時間間隔を表している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-264"><see langword="true" /> if <paramref name="obj" /> represents the same time interval as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-265">このメソッドは <xref:System.IEquatable%601?displayProperty=nameWithType> インターフェイスを実装し、`obj` パラメーターをオブジェクトに変換する必要がないため、<xref:System.TimeSpan.Equals%2A> よりもわずかにパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="8daef-265">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.TimeSpan.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-266">次の例では、いくつかの値および参照型について、<xref:System.TimeSpan.CompareTo%2A> メソッドのジェネリックおよび非ジェネリックバージョンを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-266">The following example demonstrates generic and nongeneric versions of the <xref:System.TimeSpan.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
        <altmember cref="Overload:System.TimeSpan.CompareTo" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member Equals : TimeSpan * TimeSpan -&gt; bool" Usage="System.TimeSpan.Equals (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-267">比較する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-267">The first time interval to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-268">比較する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-268">The second time interval to compare.</span></span></param>
        <summary><span data-ttu-id="8daef-269"><see cref="T:System.TimeSpan" /> の指定した 2 つのインスタンスが等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-269">Returns a value that indicates whether two specified instances of <see cref="T:System.TimeSpan" /> are equal.</span></span></summary>
        <returns><span data-ttu-id="8daef-270"><paramref name="t1" /> の値と <paramref name="t2" /> の値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-270"><see langword="true" /> if the values of <paramref name="t1" /> and <paramref name="t2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8daef-271">次の例では、静的な <xref:System.TimeSpan.Equals%2A> メソッドを使用して、複数の <xref:System.TimeSpan> オブジェクトを参照 <xref:System.TimeSpan> オブジェクトと比較します。</span><span class="sxs-lookup"><span data-stu-id="8daef-271">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> object using the static <xref:System.TimeSpan.Equals%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CPP/comp_equal.cpp#2)]
 [!code-csharp[System.TimeSpan.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/CS/comp_equal.cs#2)]
 [!code-vb[System.TimeSpan.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Compare_Equals/VB/comp_equal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromDays">
      <MemberSignature Language="C#" Value="public static TimeSpan FromDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDays (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromDays(double value);" />
      <MemberSignature Language="F#" Value="static member FromDays : double -&gt; TimeSpan" Usage="System.TimeSpan.FromDays value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-272">ミリ秒単位の精度による日数。</span><span class="sxs-lookup"><span data-stu-id="8daef-272">A number of days, accurate to the nearest millisecond.</span></span></param>
        <summary><span data-ttu-id="8daef-273">指定した日数を表す <see cref="T:System.TimeSpan" /> を返します。日数は、ミリ秒単位の精度で指定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-273">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of days, where the specification is accurate to the nearest millisecond.</span></span></summary>
        <returns><span data-ttu-id="8daef-274"><paramref name="value" /> を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-274">An object that represents <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-275">`value` パラメーターは、タイマー刻みに変換されるミリ秒に変換され、このタイマー刻みの数を使用して新しい <xref:System.TimeSpan>が初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-275">The `value` parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="8daef-276">したがって、`value` は、ミリ秒単位で正確に見なされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-276">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="8daef-277"><xref:System.Double> データ型の精度が失われているため、この変換では、の近くにあるが、<xref:System.TimeSpan.MinValue> または <xref:System.TimeSpan.MaxValue>の範囲内にある値に対して <xref:System.OverflowException> が発生する可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-277">Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can cause an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="8daef-278">たとえば、次のような場合に、<xref:System.TimeSpan> オブジェクトをインスタンス化しようとすると <xref:System.OverflowException> が発生します。</span><span class="sxs-lookup"><span data-stu-id="8daef-278">For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#2)]
 [!code-vb[System.TimeSpan.FromMinutes#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="8daef-279">次の例では、<xref:System.TimeSpan.FromDays%2A> メソッドを使用して複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-279">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromDays%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromdays.cpp#6)]
 [!code-csharp[System.TimeSpan.From#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromdays.cs#6)]
 [!code-vb[System.TimeSpan.From#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromdays.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-280"><paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-280"><paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-281">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-281">-or-</span></span> 
 <span data-ttu-id="8daef-282"><paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-282"><paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span>  
  
<span data-ttu-id="8daef-283">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-283">-or-</span></span> 
 <span data-ttu-id="8daef-284"><paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-284"><paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8daef-285"><paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="8daef-285"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromHours">
      <MemberSignature Language="C#" Value="public static TimeSpan FromHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHours (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromHours(double value);" />
      <MemberSignature Language="F#" Value="static member FromHours : double -&gt; TimeSpan" Usage="System.TimeSpan.FromHours value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-286">ミリ秒単位の精度による時間数。</span><span class="sxs-lookup"><span data-stu-id="8daef-286">A number of hours accurate to the nearest millisecond.</span></span></param>
        <summary><span data-ttu-id="8daef-287">指定した時間数を表す <see cref="T:System.TimeSpan" /> を返します。時間数は、ミリ秒単位の精度で指定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-287">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of hours, where the specification is accurate to the nearest millisecond.</span></span></summary>
        <returns><span data-ttu-id="8daef-288"><paramref name="value" /> を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-288">An object that represents <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-289">`value` パラメーターは、タイマー刻みに変換されるミリ秒に変換され、このタイマー刻みの数を使用して新しい <xref:System.TimeSpan>が初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-289">The `value` parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="8daef-290">したがって、`value` は、ミリ秒単位で正確に見なされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-290">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="8daef-291"><xref:System.Double> データ型の精度が失われているため、この変換では、の近くにあり、<xref:System.TimeSpan.MinValue> または <xref:System.TimeSpan.MaxValue>の範囲内にある値に対して <xref:System.OverflowException> が生成される可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-291">Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="8daef-292">たとえば、次のような場合に、<xref:System.TimeSpan> オブジェクトをインスタンス化しようとすると <xref:System.OverflowException> が発生します。</span><span class="sxs-lookup"><span data-stu-id="8daef-292">For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#3)]
 [!code-vb[System.TimeSpan.FromMinutes#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="8daef-293">次の例では、<xref:System.TimeSpan.FromHours%2A> メソッドを使用して複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-293">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromHours%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromhours.cpp#5)]
 [!code-csharp[System.TimeSpan.From#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromhours.cs#5)]
 [!code-vb[System.TimeSpan.From#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromhours.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-294"><paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-294"><paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-295">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-295">-or-</span></span> 
 <span data-ttu-id="8daef-296"><paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-296"><paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span>  
  
<span data-ttu-id="8daef-297">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-297">-or-</span></span> 
 <span data-ttu-id="8daef-298"><paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-298"><paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8daef-299"><paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="8daef-299"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromMilliseconds">
      <MemberSignature Language="C#" Value="public static TimeSpan FromMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMilliseconds (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromMilliseconds(double value);" />
      <MemberSignature Language="F#" Value="static member FromMilliseconds : double -&gt; TimeSpan" Usage="System.TimeSpan.FromMilliseconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-300">ミリ秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-300">A number of milliseconds.</span></span></param>
        <summary><span data-ttu-id="8daef-301">指定されたミリ秒数を表す <see cref="T:System.TimeSpan" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-301">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of milliseconds.</span></span></summary>
        <returns><span data-ttu-id="8daef-302"><paramref name="value" /> を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-302">An object that represents <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-303">`value` パラメーターはティックに変換され、このタイマー刻みの数を使用して新しい <xref:System.TimeSpan>が初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-303">The `value` parameter is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="8daef-304">したがって、`value` は、ミリ秒単位で正確に見なされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-304">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="8daef-305"><xref:System.Double> データ型の精度が失われているため、この変換では、の近くにあり、<xref:System.TimeSpan.MinValue> または <xref:System.TimeSpan.MaxValue>の範囲内にある値に対して <xref:System.OverflowException> が生成される可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-305">Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="8daef-306">たとえば、次のような場合に、<xref:System.TimeSpan> オブジェクトをインスタンス化しようとすると <xref:System.OverflowException> が発生します。</span><span class="sxs-lookup"><span data-stu-id="8daef-306">For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#4)]
 [!code-vb[System.TimeSpan.FromMinutes#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="8daef-307">次の例では、<xref:System.TimeSpan.FromMilliseconds%2A> メソッドを使用して、複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-307">The following example creates several <xref:System.TimeSpan> objects by using the <xref:System.TimeSpan.FromMilliseconds%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/frommillisec.cpp#2)]
 [!code-csharp[System.TimeSpan.From#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/frommillisec.cs#2)]
 [!code-vb[System.TimeSpan.From#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/frommillisec.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-308"><paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-308"><paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-309">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-309">-or-</span></span> 
 <span data-ttu-id="8daef-310"><paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-310"><paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span>  
  
<span data-ttu-id="8daef-311">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-311">-or-</span></span> 
 <span data-ttu-id="8daef-312"><paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-312"><paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8daef-313"><paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="8daef-313"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromMinutes">
      <MemberSignature Language="C#" Value="public static TimeSpan FromMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMinutes (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromMinutes(double value);" />
      <MemberSignature Language="F#" Value="static member FromMinutes : double -&gt; TimeSpan" Usage="System.TimeSpan.FromMinutes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-314">ミリ秒単位の精度による分数。</span><span class="sxs-lookup"><span data-stu-id="8daef-314">A number of minutes, accurate to the nearest millisecond.</span></span></param>
        <summary><span data-ttu-id="8daef-315">指定した分数を表す <see cref="T:System.TimeSpan" /> を返します。分数は、ミリ秒単位の精度で指定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-315">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of minutes, where the specification is accurate to the nearest millisecond.</span></span></summary>
        <returns><span data-ttu-id="8daef-316"><paramref name="value" /> を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-316">An object that represents <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-317">`value` パラメーターは、タイマー刻みに変換されるミリ秒に変換され、このタイマー刻みの数を使用して新しい <xref:System.TimeSpan>が初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-317">The `value` parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="8daef-318">したがって、`value` は、ミリ秒単位で正確に見なされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-318">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="8daef-319"><xref:System.Double> データ型の精度が失われているため、この変換では、の近くにあり、<xref:System.TimeSpan.MinValue> または <xref:System.TimeSpan.MaxValue>の範囲内にある値に対して <xref:System.OverflowException> が生成される可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-319">Note that, because of the loss of precision of the <xref:System.Double> data type, this conversion can generate an <xref:System.OverflowException> for values that are near to but still in the range of either <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>.</span></span> <span data-ttu-id="8daef-320">たとえば、次のような場合に、<xref:System.TimeSpan> オブジェクトをインスタンス化しようとすると <xref:System.OverflowException> が発生します。</span><span class="sxs-lookup"><span data-stu-id="8daef-320">For example, this causes an <xref:System.OverflowException> in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#1)]
 [!code-vb[System.TimeSpan.FromMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="8daef-321">次の例では、<xref:System.TimeSpan.FromMinutes%2A> メソッドを使用して複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-321">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromMinutes%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromminutes.cpp#4)]
 [!code-csharp[System.TimeSpan.From#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromminutes.cs#4)]
 [!code-vb[System.TimeSpan.From#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromminutes.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-322"><paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-322"><paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-323">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-323">-or-</span></span> 
 <span data-ttu-id="8daef-324"><paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-324"><paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span>  
  
<span data-ttu-id="8daef-325">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-325">-or-</span></span> 
 <span data-ttu-id="8daef-326"><paramref name="value" /> が <see cref="F:System.Double.NegativeInfinity" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-326"><paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8daef-327"><paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="8daef-327"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromSeconds">
      <MemberSignature Language="C#" Value="public static TimeSpan FromSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSeconds (value As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromSeconds(double value);" />
      <MemberSignature Language="F#" Value="static member FromSeconds : double -&gt; TimeSpan" Usage="System.TimeSpan.FromSeconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-328">ミリ秒単位の精度による秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-328">A number of seconds, accurate to the nearest millisecond.</span></span></param>
        <summary><span data-ttu-id="8daef-329">指定した秒数を表す <see cref="T:System.TimeSpan" /> を返します。秒数は、ミリ秒単位の精度で指定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-329">Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of seconds, where the specification is accurate to the nearest millisecond.</span></span></summary>
        <returns><span data-ttu-id="8daef-330"><paramref name="value" /> を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-330">An object that represents <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-331">`value` パラメーターは、タイマー刻みに変換されるミリ秒に変換され、このタイマー刻みの数を使用して新しい <xref:System.TimeSpan>が初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-331">The `value` parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <xref:System.TimeSpan>.</span></span> <span data-ttu-id="8daef-332">したがって、`value` は、ミリ秒単位で正確に見なされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-332">Therefore, `value` will only be considered accurate to the nearest millisecond.</span></span> <span data-ttu-id="8daef-333"><xref:System.Double> データ型の有効桁数が失われているため、これによって、<xref:System.TimeSpan.MinValue> または <xref:System.TimeSpan.MaxValue>のいずれかの値に近いが <xref:System.OverflowException> が生成される可能性があることに注意してください <xref:System.OverflowException>たとえば、次の例では、<xref:System.TimeSpan> オブジェクトをインスタンス化しようとしています。</span><span class="sxs-lookup"><span data-stu-id="8daef-333">Note that, because of the loss of precision of the <xref:System.Double> data type, this can generate an <xref:System.OverflowException> for values that are near but still in the range of either  <xref:System.TimeSpan.MinValue> or <xref:System.TimeSpan.MaxValue>, This is the cause of an <xref:System.OverflowException>, for example, in the following attempt to instantiate a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[System.TimeSpan.FromMinutes#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/cs/System.TimeSpan.FromMinutes.cs#5)]
 [!code-vb[System.TimeSpan.FromMinutes#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.FromMinutes/vb/System.TimeSpan.FromMinutes.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="8daef-334">次の例では、<xref:System.TimeSpan.FromSeconds%2A> メソッドを使用して複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-334">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromSeconds%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromseconds.cpp#3)]
 [!code-csharp[System.TimeSpan.From#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromseconds.cs#3)]
 [!code-vb[System.TimeSpan.From#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromseconds.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-335"><paramref name="value" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか <see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-335"><paramref name="value" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-336">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-336">-or-</span></span> 
 <span data-ttu-id="8daef-337"><paramref name="value" /> は <see cref="F:System.Double.PositiveInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-337"><paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span></span>  
  
<span data-ttu-id="8daef-338">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-338">-or-</span></span> 
 <span data-ttu-id="8daef-339"><paramref name="value" /> は <see cref="F:System.Double.NegativeInfinity" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-339"><paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8daef-340"><paramref name="value" /> と <see cref="F:System.Double.NaN" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="8daef-340"><paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.TimeSpan.FromTicks(System.Int64)" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="FromTicks">
      <MemberSignature Language="C#" Value="public static TimeSpan FromTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.FromTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromTicks (value As Long) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan FromTicks(long value);" />
      <MemberSignature Language="F#" Value="static member FromTicks : int64 -&gt; TimeSpan" Usage="System.TimeSpan.FromTicks value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8daef-341">時間を表すタイマー刻み数。</span><span class="sxs-lookup"><span data-stu-id="8daef-341">A number of ticks that represent a time.</span></span></param>
        <summary><span data-ttu-id="8daef-342">指定した時間を表す <see cref="T:System.TimeSpan" /> を返します。時間は、タイマー刻み単位で指定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-342">Returns a <see cref="T:System.TimeSpan" /> that represents a specified time, where the specification is in units of ticks.</span></span></summary>
        <returns><span data-ttu-id="8daef-343"><paramref name="value" /> を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-343">An object that represents <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-344">これは、<xref:System.TimeSpan.%23ctor%28System.Int64%29?displayProperty=nameWithType> コンストラクターと同じ動作を持つ便利なメソッドです。</span><span class="sxs-lookup"><span data-stu-id="8daef-344">This is a convenience method with the same behavior as the <xref:System.TimeSpan.%23ctor%28System.Int64%29?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="8daef-345">1ティックは、100ナノ秒または 1 10-万の秒を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-345">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="8daef-346">ミリ秒単位で1万タイマー刻みがあります。</span><span class="sxs-lookup"><span data-stu-id="8daef-346">There are 10,000 ticks in a millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-347">次の例では、<xref:System.TimeSpan.FromTicks%2A> メソッドを使用して複数の <xref:System.TimeSpan> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-347">The following example creates several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.FromTicks%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.From#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.From/CPP/fromticks.cpp#1)]
 [!code-csharp[System.TimeSpan.From#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.From/CS/fromticks.cs#1)]
 [!code-vb[System.TimeSpan.From#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.From/VB/fromticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.TimeSpan.FromMilliseconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromSeconds(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromMinutes(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromHours(System.Double)" />
        <altmember cref="M:System.TimeSpan.FromDays(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="timeSpan.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8daef-348">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-348">Returns a hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8daef-349">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="8daef-349">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-350">2つの <xref:System.TimeSpan> オブジェクトは、異なる時刻値を表している場合でも、同じハッシュコードを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-350">Two <xref:System.TimeSpan> objects might have the same hash code even though they represent different time values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-351">次の例では、<xref:System.TimeSpan.GetHashCode%2A> メソッドを使用して、複数の <xref:System.TimeSpan> オブジェクトのハッシュコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-351">The following example generates the hash codes of several <xref:System.TimeSpan> objects using the <xref:System.TimeSpan.GetHashCode%2A> method.</span></span>  
  
 [!code-cpp[System.TimeSpan.GetHashCode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/CPP/hashcode.cpp#1)]
 [!code-csharp[System.TimeSpan.GetHashCode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[System.TimeSpan.GetHashCode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hours">
      <MemberSignature Language="C#" Value="public int Hours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hours" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Hours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hours As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hours { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hours : int" Usage="System.TimeSpan.Hours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-352">現在の <see cref="T:System.TimeSpan" /> 構造体が表す時間間隔の時間の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-352">Gets the hours component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span></span></summary>
        <value><span data-ttu-id="8daef-353">現在の <see cref="T:System.TimeSpan" /> 構造体の時間の部分。</span><span class="sxs-lookup"><span data-stu-id="8daef-353">The hour component of the current <see cref="T:System.TimeSpan" /> structure.</span></span> <span data-ttu-id="8daef-354">戻り値の範囲は、-23 ～ 23 です。</span><span class="sxs-lookup"><span data-stu-id="8daef-354">The return value ranges from -23 through 23.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-355"><xref:System.TimeSpan> 値は、[*-*]*d*として表すことができます。*hh*:*mm*:*ss*。*ff*。省略可能なマイナス記号は負の時間間隔を示し、 *d*コンポーネントは日、24時間制の場合は*hh* 、 *mm*は分、 *ss*は秒、 *ff*は秒の小数部を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-355">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="8daef-356"><xref:System.TimeSpan.Hours%2A> プロパティの値は、時間部分である*hh*です。</span><span class="sxs-lookup"><span data-stu-id="8daef-356">The value of the <xref:System.TimeSpan.Hours%2A> property is the hours component, *hh*.</span></span>  
  
 <span data-ttu-id="8daef-357"><xref:System.TimeSpan.Hours%2A> プロパティは、全体の時間を表します。一方、<xref:System.TimeSpan.TotalHours%2A> プロパティは、整数部と小数部から成る時間を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-357">The <xref:System.TimeSpan.Hours%2A> property represents whole hours, whereas the <xref:System.TimeSpan.TotalHours%2A> property represents whole and fractional hours.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-358">次の例では、複数の <xref:System.TimeSpan> オブジェクトを作成し、それぞれの <xref:System.TimeSpan.Hours%2A> プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-358">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Hours%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : TimeSpan" Usage="System.TimeSpan.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-359"><see cref="T:System.TimeSpan" /> の最大値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-359">Represents the maximum <see cref="T:System.TimeSpan" /> value.</span></span> <span data-ttu-id="8daef-360">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8daef-360">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-361">このフィールドの値は <xref:System.Int64.MaxValue?displayProperty=nameWithType> ティックと同じです。</span><span class="sxs-lookup"><span data-stu-id="8daef-361">The value of this field is equivalent to <xref:System.Int64.MaxValue?displayProperty=nameWithType> ticks.</span></span> <span data-ttu-id="8daef-362">この値の文字列形式は、正の 10675199.02:48: 05.4775807、または10675199日を少し超えています。</span><span class="sxs-lookup"><span data-stu-id="8daef-362">The string representation of this value is positive 10675199.02:48:05.4775807, or slightly more than 10,675,199 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-363">次の例では、<xref:System.TimeSpan.MaxValue> フィールドの値を参照して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-363">The following example references and displays the value of the <xref:System.TimeSpan.MaxValue> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Milliseconds">
      <MemberSignature Language="C#" Value="public int Milliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Milliseconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Milliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Milliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Milliseconds { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Milliseconds : int" Usage="System.TimeSpan.Milliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-364">現在の <see cref="T:System.TimeSpan" /> 構造体が表す時間間隔のミリ秒の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-364">Gets the milliseconds component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span></span></summary>
        <value><span data-ttu-id="8daef-365">現在の <see cref="T:System.TimeSpan" /> 構造体のミリ秒の部分。</span><span class="sxs-lookup"><span data-stu-id="8daef-365">The millisecond component of the current <see cref="T:System.TimeSpan" /> structure.</span></span> <span data-ttu-id="8daef-366">戻り値の範囲は、-999 ～ 999 です。</span><span class="sxs-lookup"><span data-stu-id="8daef-366">The return value ranges from -999 through 999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-367"><xref:System.TimeSpan> 値は、[*-*]*d*として表すことができます。*hh*:*mm*:*ss*。*ff*。省略可能なマイナス記号は負の時間間隔を示し、 *d*コンポーネントは日、24時間制の場合は*hh* 、 *mm*は分、 *ss*は秒、 *ff*は秒の小数部を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-367">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="8daef-368"><xref:System.TimeSpan.Milliseconds%2A> プロパティの値は、秒の小数部の*ff*です。</span><span class="sxs-lookup"><span data-stu-id="8daef-368">The value of the <xref:System.TimeSpan.Milliseconds%2A> property is the fractional second component, *ff*.</span></span>  
  
 <span data-ttu-id="8daef-369"><xref:System.TimeSpan.Milliseconds%2A> プロパティは、全体のミリ秒を表します。一方、<xref:System.TimeSpan.TotalMilliseconds%2A> プロパティは、整数部と小数部から成るミリ秒数を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-369">The <xref:System.TimeSpan.Milliseconds%2A> property represents whole milliseconds, whereas the <xref:System.TimeSpan.TotalMilliseconds%2A> property represents whole and fractional milliseconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-370">次の例では、複数の <xref:System.TimeSpan> オブジェクトを作成し、それぞれの <xref:System.TimeSpan.Milliseconds%2A> プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-370">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Milliseconds%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="Minutes">
      <MemberSignature Language="C#" Value="public int Minutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minutes" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Minutes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minutes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minutes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minutes : int" Usage="System.TimeSpan.Minutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-371">現在の <see cref="T:System.TimeSpan" /> 構造体が表す時間間隔の分の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-371">Gets the minutes component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span></span></summary>
        <value><span data-ttu-id="8daef-372">現在の <see cref="T:System.TimeSpan" /> 構造体の分の部分。</span><span class="sxs-lookup"><span data-stu-id="8daef-372">The minute component of the current <see cref="T:System.TimeSpan" /> structure.</span></span> <span data-ttu-id="8daef-373">戻り値の範囲は、-59 ～ 59 です。</span><span class="sxs-lookup"><span data-stu-id="8daef-373">The return value ranges from -59 through 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-374"><xref:System.TimeSpan> 値は、[*-*]*d*として表すことができます。*hh*:*mm*:*ss*。*ff*。省略可能なマイナス記号は負の時間間隔を示し、 *d*コンポーネントは日、24時間制の場合は*hh* 、 *mm*は分、 *ss*は秒、 *ff*は秒の小数部を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-374">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="8daef-375"><xref:System.TimeSpan.Minutes%2A> プロパティの値は、分の部分 ( *mm*) です。</span><span class="sxs-lookup"><span data-stu-id="8daef-375">The value of the <xref:System.TimeSpan.Minutes%2A> property is the minute component, *mm*.</span></span>  
  
 <span data-ttu-id="8daef-376"><xref:System.TimeSpan.Minutes%2A> プロパティは、全体の分数を表します。一方、<xref:System.TimeSpan.TotalMinutes%2A> プロパティは整数部と小数部から成る分数を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-376">The <xref:System.TimeSpan.Minutes%2A> property represents whole minutes, whereas the <xref:System.TimeSpan.TotalMinutes%2A> property represents whole and fractional minutes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-377">次の例では、複数の <xref:System.TimeSpan> オブジェクトを作成し、それぞれの <xref:System.TimeSpan.Minutes%2A> プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-377">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Minutes%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MinValue" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : TimeSpan" Usage="System.TimeSpan.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-378"><see cref="T:System.TimeSpan" /> の最小値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-378">Represents the minimum <see cref="T:System.TimeSpan" /> value.</span></span> <span data-ttu-id="8daef-379">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8daef-379">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-380">このフィールドの値は <xref:System.Int64.MinValue?displayProperty=nameWithType> ティックと同じです。</span><span class="sxs-lookup"><span data-stu-id="8daef-380">The value of this field is equivalent to <xref:System.Int64.MinValue?displayProperty=nameWithType> ticks.</span></span> <span data-ttu-id="8daef-381">この値の文字列形式は、負の 10675199.02:48: 05.4775808、または負の10675199日よりもわずかに増加します。</span><span class="sxs-lookup"><span data-stu-id="8daef-381">The string representation of this value is negative 10675199.02:48:05.4775808, or slightly more than negative 10,675,199 days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-382">次の例では、<xref:System.TimeSpan.MinValue> フィールドの値を参照して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-382">The following example references and displays the value of the <xref:System.TimeSpan.MinValue> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public TimeSpan Multiply (double factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Multiply(float64 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Multiply(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Multiply (factor As Double) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Multiply(double factor);" />
      <MemberSignature Language="F#" Value="member this.Multiply : double -&gt; TimeSpan" Usage="timeSpan.Multiply factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public TimeSpan Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Negate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Negate" />
      <MemberSignature Language="VB.NET" Value="Public Function Negate () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Negate();" />
      <MemberSignature Language="F#" Value="member this.Negate : unit -&gt; TimeSpan" Usage="timeSpan.Negate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8daef-383">このインスタンスの値とは符号が逆の値を持つ新しい <see cref="T:System.TimeSpan" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-383">Returns a new <see cref="T:System.TimeSpan" /> object whose value is the negated value of this instance.</span></span></summary>
        <returns><span data-ttu-id="8daef-384">このインスタンスの値と絶対値が同じで、逆の符号を持つ新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-384">A new object with the same numeric value as this instance, but with the opposite sign.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8daef-385">次の例では、<xref:System.TimeSpan.Negate%2A> メソッドをいくつかの <xref:System.TimeSpan> オブジェクトに適用します。</span><span class="sxs-lookup"><span data-stu-id="8daef-385">The following example applies the <xref:System.TimeSpan.Negate%2A> method to several <xref:System.TimeSpan> objects.</span></span>  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-386"><see cref="T:System.TimeSpan" /> ではこのインスタンスの負数化された値を表すことはできません。つまり、このインスタンスの値が <see cref="F:System.TimeSpan.MinValue" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-386">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static TimeSpan operator + (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Addition(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (t1 As TimeSpan, t2 As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator +(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : TimeSpan * TimeSpan -&gt; TimeSpan" Usage="t1 + t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-387">加算する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-387">The first time interval to add.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-388">加算する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-388">The second time interval to add.</span></span></param>
        <summary><span data-ttu-id="8daef-389">指定した 2 つの <see cref="T:System.TimeSpan" /> インスタンスを加算します。</span><span class="sxs-lookup"><span data-stu-id="8daef-389">Adds two specified <see cref="T:System.TimeSpan" /> instances.</span></span></summary>
        <returns><span data-ttu-id="8daef-390"><paramref name="t1" /> と <paramref name="t2" /> の値の合計を値とするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-390">An object whose value is the sum of the values of <paramref name="t1" /> and <paramref name="t2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-391"><xref:System.TimeSpan.op_Addition%2A> メソッドは、<xref:System.TimeSpan> 値の加算演算子を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-391">The <xref:System.TimeSpan.op_Addition%2A> method defines the addition operator for <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="8daef-392">次のようなコードが有効になります。</span><span class="sxs-lookup"><span data-stu-id="8daef-392">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.TimeSpan.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.operators/cs/operators1.cs#1)]
 [!code-vb[System.TimeSpan.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.operators/vb/operators1.vb#1)]  
  
 <span data-ttu-id="8daef-393">カスタム演算子をサポートしない言語では、代わりに <xref:System.TimeSpan.Add%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-393">Languages that do not support custom operators can call the <xref:System.TimeSpan.Add%2A> method instead.</span></span>  
  
 <span data-ttu-id="8daef-394">この演算子の同等の方法は <xref:System.TimeSpan.Add%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-394">The equivalent method for this operator is <xref:System.TimeSpan.Add%28System.TimeSpan%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-395">結果として返された <see cref="T:System.TimeSpan" /> が <see cref="F:System.TimeSpan.MinValue" /> より小さいか、<see cref="F:System.TimeSpan.MaxValue" /> より大きいです。</span><span class="sxs-lookup"><span data-stu-id="8daef-395">The resulting <see cref="T:System.TimeSpan" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static TimeSpan operator / (TimeSpan timeSpan, double divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Division(valuetype System.TimeSpan timeSpan, float64 divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Division(System.TimeSpan,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator /(TimeSpan timeSpan, double divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : TimeSpan * double -&gt; TimeSpan" Usage="timeSpan / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="divisor" Type="System.Double" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="timeSpan">To be added.</param>
        <param name="divisor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static double operator / (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Division(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Division(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (t1 As TimeSpan, t2 As TimeSpan) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double operator /(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( / ) : TimeSpan * TimeSpan -&gt; double" Usage="t1 / t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="t2" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="t1">To be added.</param>
        <param name="t2">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Equality(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 = t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-396">比較する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-396">The first time interval to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-397">比較する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-397">The second time interval to compare.</span></span></param>
        <summary><span data-ttu-id="8daef-398">2 つの <see cref="T:System.TimeSpan" /> インスタンスが等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-398">Indicates whether two <see cref="T:System.TimeSpan" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="8daef-399"><paramref name="t1" /> の値と <paramref name="t2" /> の値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-399"><see langword="true" /> if the values of <paramref name="t1" /> and <paramref name="t2" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8daef-400">この演算子の同等の方法は <xref:System.TimeSpan.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-400">The equivalent method for this operator is <xref:System.TimeSpan.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8daef-401">次の例では、<xref:System.TimeSpan.op_Equality%2A> 演算子を使用して、複数の <xref:System.TimeSpan> オブジェクトを参照 <xref:System.TimeSpan> と比較しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-401">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_Equality%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Equals(System.Object)" />
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_GreaterThan(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &gt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-402">比較する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-402">The first time interval to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-403">比較する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-403">The second time interval to compare.</span></span></param>
        <summary><span data-ttu-id="8daef-404">指定した <see cref="T:System.TimeSpan" /> が、指定したもう 1 つの <see cref="T:System.TimeSpan" /> より大きいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-404">Indicates whether a specified <see cref="T:System.TimeSpan" /> is greater than another specified <see cref="T:System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="8daef-405"><paramref name="t1" /> の値が <paramref name="t2" /> の値より大きい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-405"><see langword="true" /> if the value of <paramref name="t1" /> is greater than the value of <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8daef-406">この演算子の同等の方法は <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-406">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8daef-407">次の例では、<xref:System.TimeSpan.op_GreaterThan%2A> 演算子を使用して、複数の <xref:System.TimeSpan> オブジェクトを参照 <xref:System.TimeSpan> と比較しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-407">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_GreaterThan%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_GreaterThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &gt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-408">比較する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-408">The first time interval to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-409">比較する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-409">The second time interval to compare.</span></span></param>
        <summary><span data-ttu-id="8daef-410">指定した <see cref="T:System.TimeSpan" /> が、指定したもう 1 つの <see cref="T:System.TimeSpan" /> 以上かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-410">Indicates whether a specified <see cref="T:System.TimeSpan" /> is greater than or equal to another specified <see cref="T:System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="8daef-411"><see langword="true" /> の値が <paramref name="t1" /> の値以上の場合は <paramref name="t2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-411"><see langword="true" /> if the value of <paramref name="t1" /> is greater than or equal to the value of <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8daef-412">この演算子の同等の方法は <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-412">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8daef-413">次の例では、<xref:System.TimeSpan.op_GreaterThanOrEqual%2A> 演算子を使用して、複数の <xref:System.TimeSpan> オブジェクトを参照 <xref:System.TimeSpan> と比較しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-413">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_GreaterThanOrEqual%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Inequality(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : TimeSpan * TimeSpan -&gt; bool" Usage="System.TimeSpan.op_Inequality (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-414">比較する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-414">The first time interval to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-415">比較する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-415">The second time interval to compare.</span></span></param>
        <summary><span data-ttu-id="8daef-416"><see cref="T:System.TimeSpan" /> の 2 つのインスタンスが等しくないかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-416">Indicates whether two <see cref="T:System.TimeSpan" /> instances are not equal.</span></span></summary>
        <returns><span data-ttu-id="8daef-417"><paramref name="t1" /> の値と <paramref name="t2" /> の値が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-417"><see langword="true" /> if the values of <paramref name="t1" /> and <paramref name="t2" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8daef-418">この演算子の同等の方法は <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-418">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8daef-419">次の例では、<xref:System.TimeSpan.op_Inequality%2A> 演算子を使用して、複数の <xref:System.TimeSpan> オブジェクトを参照 <xref:System.TimeSpan> と比較しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-419">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_Inequality%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_LessThan(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &lt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-420">比較する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-420">The first time interval to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-421">比較する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-421">The second time interval to compare.</span></span></param>
        <summary><span data-ttu-id="8daef-422">指定した <see cref="T:System.TimeSpan" /> が、指定したもう 1 つの <see cref="T:System.TimeSpan" /> 未満かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-422">Indicates whether a specified <see cref="T:System.TimeSpan" /> is less than another specified <see cref="T:System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="8daef-423"><see langword="true" /> の値が <paramref name="t1" /> の値より小さい場合は <paramref name="t2" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-423"><see langword="true" /> if the value of <paramref name="t1" /> is less than the value of <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8daef-424">この演算子の同等の方法は <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-424">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8daef-425">次の例では、<xref:System.TimeSpan.op_LessThan%2A> 演算子を使用して、複数の <xref:System.TimeSpan> オブジェクトを参照 <xref:System.TimeSpan> と比較しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-425">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_LessThan%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_LessThanOrEqual(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As TimeSpan, t2 As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : TimeSpan * TimeSpan -&gt; bool" Usage="t1 &lt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-426">比較する最初の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-426">The first time interval to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-427">比較する 2 番目の時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-427">The second time interval to compare.</span></span></param>
        <summary><span data-ttu-id="8daef-428">指定した <see cref="T:System.TimeSpan" /> が、指定したもう 1 つの <see cref="T:System.TimeSpan" /> 以下かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-428">Indicates whether a specified <see cref="T:System.TimeSpan" /> is less than or equal to another specified <see cref="T:System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="8daef-429"><paramref name="t1" /> の値が <paramref name="t2" /> の値以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-429"><see langword="true" /> if the value of <paramref name="t1" /> is less than or equal to the value of <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8daef-430">この演算子の同等の方法は <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-430">The equivalent method for this operator is <xref:System.TimeSpan.Compare%28System.TimeSpan%2CSystem.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8daef-431">次の例では、<xref:System.TimeSpan.op_LessThanOrEqual%2A> 演算子を使用して、複数の <xref:System.TimeSpan> オブジェクトを参照 <xref:System.TimeSpan> と比較しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-431">The following example compares several <xref:System.TimeSpan> objects to a reference <xref:System.TimeSpan> using the <xref:System.TimeSpan.op_LessThanOrEqual%2A> operator.</span></span>  
  
 [!code-cpp[System.TimeSpan.RelationalOps#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CPP/relationalops.cpp#1)]
 [!code-csharp[System.TimeSpan.RelationalOps#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/CS/relationalops.cs#1)]
 [!code-vb[System.TimeSpan.RelationalOps#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.RelationalOps/VB/relationalops.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />
        <altmember cref="M:System.TimeSpan.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static TimeSpan operator * (double factor, TimeSpan timeSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Multiply(float64 factor, valuetype System.TimeSpan timeSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Multiply(System.Double,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator *(double factor, TimeSpan timeSpan);" />
      <MemberSignature Language="F#" Value="static member ( * ) : double * TimeSpan -&gt; TimeSpan" Usage="factor * timeSpan" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="factor">To be added.</param>
        <param name="timeSpan">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static TimeSpan operator * (TimeSpan timeSpan, double factor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Multiply(valuetype System.TimeSpan timeSpan, float64 factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Multiply(System.TimeSpan,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator *(TimeSpan timeSpan, double factor);" />
      <MemberSignature Language="F#" Value="static member ( * ) : TimeSpan * double -&gt; TimeSpan" Usage="timeSpan * factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeSpan" Type="System.TimeSpan" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="factor" Type="System.Double" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="timeSpan">To be added.</param>
        <param name="factor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (t1 As TimeSpan, t2 As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : TimeSpan * TimeSpan -&gt; TimeSpan" Usage="t1 - t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="8daef-432">被減数。</span><span class="sxs-lookup"><span data-stu-id="8daef-432">The minuend.</span></span></param>
        <param name="t2"><span data-ttu-id="8daef-433">減数。</span><span class="sxs-lookup"><span data-stu-id="8daef-433">The subtrahend.</span></span></param>
        <summary><span data-ttu-id="8daef-434">指定したもう 1 つの <see cref="T:System.TimeSpan" /> から、指定した <see cref="T:System.TimeSpan" /> を減算します。</span><span class="sxs-lookup"><span data-stu-id="8daef-434">Subtracts a specified <see cref="T:System.TimeSpan" /> from another specified <see cref="T:System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="8daef-435"><paramref name="t2" /> の値から <paramref name="t1" /> の値を減算した結果を値とするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-435">An object whose value is the result of the value of <paramref name="t1" /> minus the value of <paramref name="t2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8daef-436">この演算子の同等の方法は <xref:System.TimeSpan.Subtract%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-436">The equivalent method for this operator is <xref:System.TimeSpan.Subtract%28System.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8daef-437">次の例では、<xref:System.TimeSpan> 減算演算子を使用して、毎週の作業日の合計の長さを計算します。</span><span class="sxs-lookup"><span data-stu-id="8daef-437">The following example uses the <xref:System.TimeSpan> subtraction operator to calculate the total length of the weekly work day.</span></span> <span data-ttu-id="8daef-438">また、<xref:System.TimeSpan> 加算演算子を使用して、1日の中断の合計時間を計算してから、減算演算で使用して、実際の毎日の実際の作業時間の合計を計算します。</span><span class="sxs-lookup"><span data-stu-id="8daef-438">It also uses the <xref:System.TimeSpan> addition operator to compute the total time of the daily breaks before using it in a subtraction operation to compute the total actual daily working time.</span></span>  
  
 [!code-csharp[System.TimeSpan.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.operators/cs/Subtraction1.cs#2)]
 [!code-vb[System.TimeSpan.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.operators/vb/Subtraction1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-439">戻り値が <see cref="F:System.TimeSpan.MinValue" /> 未満であるか、<see cref="F:System.TimeSpan.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="8daef-439">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryNegation(valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_UnaryNegation(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (t As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : TimeSpan -&gt; TimeSpan" Usage="- t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="8daef-440">符号が反転される時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-440">The time interval to be negated.</span></span></param>
        <summary><span data-ttu-id="8daef-441">指定したインスタンスの値とは符号が逆の値を持つ <see cref="T:System.TimeSpan" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-441">Returns a <see cref="T:System.TimeSpan" /> whose value is the negated value of the specified instance.</span></span></summary>
        <returns><span data-ttu-id="8daef-442">このインスタンスの値と絶対値が同じで、逆の符号を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-442">An object that has the same numeric value as this instance, but the opposite sign.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="8daef-443">この演算子の同等の方法は <xref:System.TimeSpan.Negate?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8daef-443">The equivalent method for this operator is <xref:System.TimeSpan.Negate?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="8daef-444">次の例では、<xref:System.TimeSpan.op_UnaryNegation%2A> 演算子をいくつかの <xref:System.TimeSpan> オブジェクトに適用します。</span><span class="sxs-lookup"><span data-stu-id="8daef-444">The following example applies the <xref:System.TimeSpan.op_UnaryNegation%2A> operator to several <xref:System.TimeSpan> objects.</span></span>  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-445"><see cref="T:System.TimeSpan" /> ではこのインスタンスの負数化された値を表すことはできません。つまり、このインスタンスの値が <see cref="F:System.TimeSpan.MinValue" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-445">The negated value of this instance cannot be represented by a <see cref="T:System.TimeSpan" />; that is, the value of this instance is <see cref="F:System.TimeSpan.MinValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static TimeSpan operator + (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryPlus(valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.op_UnaryPlus(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (t As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator +(TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : TimeSpan -&gt; TimeSpan" Usage="+ t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="t"><span data-ttu-id="8daef-446">返される時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-446">The time interval to return.</span></span></param>
        <summary><span data-ttu-id="8daef-447"><see cref="T:System.TimeSpan" /> の指定したインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-447">Returns the specified instance of <see cref="T:System.TimeSpan" />.</span></span></summary>
        <returns><span data-ttu-id="8daef-448"><paramref name="t" /> で指定された時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-448">The time interval specified by <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8daef-449">次の例では、<xref:System.TimeSpan.op_UnaryPlus%2A> 演算子をいくつかの <xref:System.TimeSpan> オブジェクトに適用します。</span><span class="sxs-lookup"><span data-stu-id="8daef-449">The following example applies the <xref:System.TimeSpan.op_UnaryPlus%2A> operator to several <xref:System.TimeSpan> objects.</span></span>  
  
 [!code-cpp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CPP/dura_nega_una.cpp#1)]
 [!code-csharp[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/CS/dura_nega_una.cs#1)]
 [!code-vb[System.TimeSpan.Dura_Nega_Unary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Dura_Nega_Unary/VB/dura_nega_una.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8daef-450">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-450">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.TimeSpan.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; TimeSpan" Usage="System.TimeSpan.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8daef-451">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-451">A string that specifies the time interval to convert.</span></span></param>
        <summary><span data-ttu-id="8daef-452">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-452">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="8daef-453"><paramref name="s" /> に対応する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-453">A time interval that corresponds to <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-454">`s` パラメーターには、次の形式で時間間隔の指定が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8daef-454">The `s` parameter contains a time interval specification in the form:</span></span>  
  
 <span data-ttu-id="8daef-455">[*ws*][-]{ *d* &#124; [*d.*]*hh*:*mm*[:*ss*[.*ff*]]} [*ws*]</span><span class="sxs-lookup"><span data-stu-id="8daef-455">[*ws*][-]{ *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]] }[*ws*]</span></span>  
  
 <span data-ttu-id="8daef-456">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8daef-456">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8daef-457">中かっこ ({と}) で囲まれ、縦棒 (&#124;) で区切られた代替の一覧から1つの選択が必要です。</span><span class="sxs-lookup"><span data-stu-id="8daef-457">One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required.</span></span> <span data-ttu-id="8daef-458">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8daef-458">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8daef-459">要素</span><span class="sxs-lookup"><span data-stu-id="8daef-459">Element</span></span>|<span data-ttu-id="8daef-460">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-460">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8daef-461">*ws*</span><span class="sxs-lookup"><span data-stu-id="8daef-461">*ws*</span></span>|<span data-ttu-id="8daef-462">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8daef-462">Optional white space.</span></span>|  
|-|<span data-ttu-id="8daef-463">負の <xref:System.TimeSpan>を示す省略可能なマイナス記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-463">An optional minus sign, which indicates a negative <xref:System.TimeSpan>.</span></span>|  
|<span data-ttu-id="8daef-464">*d*</span><span class="sxs-lookup"><span data-stu-id="8daef-464">*d*</span></span>|<span data-ttu-id="8daef-465">0から10675199までの日数。</span><span class="sxs-lookup"><span data-stu-id="8daef-465">Days, ranging from 0 to 10675199.</span></span>|  
|<span data-ttu-id="8daef-466">.</span><span class="sxs-lookup"><span data-stu-id="8daef-466">.</span></span>|<span data-ttu-id="8daef-467">日を時間から分離する、カルチャに依存するシンボル。</span><span class="sxs-lookup"><span data-stu-id="8daef-467">A culture-sensitive symbol that separates days from hours.</span></span> <span data-ttu-id="8daef-468">インバリアント形式では、ピリオド (".") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-468">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="8daef-469">*hh*</span><span class="sxs-lookup"><span data-stu-id="8daef-469">*hh*</span></span>|<span data-ttu-id="8daef-470">0から23までの時間。</span><span class="sxs-lookup"><span data-stu-id="8daef-470">Hours, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="8daef-471">:</span><span class="sxs-lookup"><span data-stu-id="8daef-471">:</span></span>|<span data-ttu-id="8daef-472">カルチャに依存する時間区切り記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-472">The culture-sensitive time separator symbol.</span></span> <span data-ttu-id="8daef-473">インバリアント形式では、コロン (":") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-473">The invariant format uses a colon (":") character.</span></span>|  
|<span data-ttu-id="8daef-474">*mm*</span><span class="sxs-lookup"><span data-stu-id="8daef-474">*mm*</span></span>|<span data-ttu-id="8daef-475">0から59までの分数。</span><span class="sxs-lookup"><span data-stu-id="8daef-475">Minutes, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-476">*ss*</span><span class="sxs-lookup"><span data-stu-id="8daef-476">*ss*</span></span>|<span data-ttu-id="8daef-477">0から59までの任意の秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-477">Optional seconds, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-478">*.*</span><span class="sxs-lookup"><span data-stu-id="8daef-478">*.*</span></span>|<span data-ttu-id="8daef-479">秒の小数部から秒を区切る、カルチャに依存するシンボル。</span><span class="sxs-lookup"><span data-stu-id="8daef-479">A culture-sensitive symbol that separates seconds from fractions of a second.</span></span> <span data-ttu-id="8daef-480">インバリアント形式では、ピリオド (".") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-480">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="8daef-481">*ff*</span><span class="sxs-lookup"><span data-stu-id="8daef-481">*ff*</span></span>|<span data-ttu-id="8daef-482">省略可能な秒の小数部で構成される10進数字です。</span><span class="sxs-lookup"><span data-stu-id="8daef-482">Optional fractional seconds, consisting of one to seven decimal digits.</span></span>|  

<span data-ttu-id="8daef-483">`s` 引数が日の値のみでない場合は、時間と分の部分を含める必要があります。その他のコンポーネントは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8daef-483">If the `s` argument is not a day value only, it must include an hours and a minutes component; other components are optional.</span></span> <span data-ttu-id="8daef-484">これらが存在する場合は、各時間コンポーネントの値が指定された範囲内に収まる必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-484">If they are present, the values of each time component must fall within a specified range.</span></span> <span data-ttu-id="8daef-485">たとえば、 *hh*, hours 要素の値は 0 ~ 23 の範囲で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-485">For example, the value of *hh*, the hours component, must be between 0 and 23.</span></span> <span data-ttu-id="8daef-486">このため、"23:00:00" を <xref:System.TimeSpan.Parse%2A> メソッドに渡すと、23時間の時間間隔が返されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-486">Because of this, passing "23:00:00" to the <xref:System.TimeSpan.Parse%2A> method returns a time interval of 23 hours.</span></span> <span data-ttu-id="8daef-487">一方、"24:00:00" を渡すと、24日の時間間隔が返されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-487">On the other hand, passing "24:00:00" returns a time interval of 24 days.</span></span> <span data-ttu-id="8daef-488">"24" は hours コンポーネントの範囲外であるため、days コンポーネントとして解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-488">Because "24" is outside the range of the hours component, it is interpreted as the days component.</span></span>

 <span data-ttu-id="8daef-489">`s` のコンポーネントは、<xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 以上かつ <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>以下の時間間隔を総称して指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-489">The components of `s` must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8daef-490"><xref:System.TimeSpan.Parse%28System.String%29> メソッドは、現在のカルチャに対してカルチャ固有の各書式を使用して、`s` を解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="8daef-490">The <xref:System.TimeSpan.Parse%28System.String%29> method tries to parse `s` by using each of the culture-specific formats for the current culture.</span></span>  

## <a name="notes-to-callers"></a><span data-ttu-id="8daef-491">呼び出し元へのメモ</span><span class="sxs-lookup"><span data-stu-id="8daef-491">Notes to callers</span></span>  
   
<span data-ttu-id="8daef-492">解析される文字列内の時間間隔コンポーネントに7桁以上の数字が含まれている場合、.NET Framework 3.5 以前のバージョンでの解析操作は、.NET Framework 4 以降のバージョンでの解析操作とは動作が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-492">When a time interval component in the string to be parsed contains more than seven digits, parsing operations in the .NET Framework 3.5 and earlier versions may behave differently from parsing operations in the .NET Framework 4 and later versions.</span></span> <span data-ttu-id="8daef-493">場合によっては、.NET Framework 3.5 以前のバージョンで成功する解析操作が失敗し、.NET Framework 4 以降で <xref:System.OverflowException> がスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="8daef-493">In some cases, parsing operations that succeed in the .NET Framework 3.5 and earlier versions may fail and throw an <xref:System.OverflowException> in the .NET Framework 4 and later.</span></span> <span data-ttu-id="8daef-494">それ以外の場合は、.NET Framework 3.5 以前のバージョンで <xref:System.FormatException> をスローする解析操作が失敗し、.NET Framework 4 以降で <xref:System.OverflowException> がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-494">In other cases, parsing operations that throw a <xref:System.FormatException> in the .NET Framework 3.5 and earlier versions may fail and throw an <xref:System.OverflowException> in the .NET Framework 4 and later.</span></span> <span data-ttu-id="8daef-495">次の例は、両方のシナリオを示しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-495">The following example illustrates both scenarios.</span></span>  
  
[!code-csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)]
[!code-vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]
 
## Examples  
 <span data-ttu-id="8daef-496">次の例では、<xref:System.TimeSpan.Parse%2A> メソッドを使用して、文字列配列内の各要素を <xref:System.TimeSpan> 値に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-496">The following example uses the <xref:System.TimeSpan.Parse%2A> method to convert each element in a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="8daef-497">現在のシステムカルチャが、現在のシステムカルチャが解析操作に与える影響を示すために、現在のシステムカルチャをクロアチア語-クロアチア ("hr-HR") と英語米国 ("en-us") に変更します。</span><span class="sxs-lookup"><span data-stu-id="8daef-497">It changes the current system culture to Croatian - Croatia ("hr-HR") and English - United States ("en-US") to illustrate how the current system culture affects the parsing operation.</span></span>  
  
 [!code-csharp[System.TimeSpan.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parse1.cs#1)]
 [!code-vb[System.TimeSpan.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8daef-498"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-498"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8daef-499"><paramref name="s" /> の形式は無効です。</span><span class="sxs-lookup"><span data-stu-id="8daef-499"><paramref name="s" /> has an invalid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-500"><paramref name="s" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-500"><paramref name="s" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-501">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-501">-or-</span></span> 
<span data-ttu-id="8daef-502">日、時間、分、または秒のコンポーネントのうち少なくとも 1 つが、その有効範囲外です。</span><span class="sxs-lookup"><span data-stu-id="8daef-502">At least one of the days, hours, minutes, or seconds components is outside its valid range.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As ReadOnlySpan(Of Char), Optional formatProvider As IFormatProvider = null) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (input As String, formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan Parse(System::String ^ input, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.Parse (input, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-503">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-503">A string that specifies the time interval to convert.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-504">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-504">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8daef-505">指定したカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-505">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="8daef-506"><paramref name="formatProvider" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-506">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-507">`input` パラメーターには、次の形式で時間間隔の指定が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8daef-507">The `input` parameter contains a time interval specification in the form:</span></span>  
  
 <span data-ttu-id="8daef-508">[*ws*][-]{ *d* &#124; [*d.*]*hh*:*mm*[:*ss*[.*ff*]]} [*ws*]</span><span class="sxs-lookup"><span data-stu-id="8daef-508">[*ws*][-]{ *d* &#124; [*d*.]*hh*:*mm*[:*ss*[.*ff*]] }[*ws*]</span></span>  
  
 <span data-ttu-id="8daef-509">角かっこ ([および]) の要素は省略可能です。中かっこ ({と}) で囲まれ、縦棒 (&#124;) で区切られた代替の一覧から1つの選択が必要です。</span><span class="sxs-lookup"><span data-stu-id="8daef-509">Elements in square brackets ([ and ]) are optional; one selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required.</span></span> <span data-ttu-id="8daef-510">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8daef-510">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8daef-511">要素</span><span class="sxs-lookup"><span data-stu-id="8daef-511">Element</span></span>|<span data-ttu-id="8daef-512">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-512">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8daef-513">*ws*</span><span class="sxs-lookup"><span data-stu-id="8daef-513">*ws*</span></span>|<span data-ttu-id="8daef-514">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8daef-514">Optional white space.</span></span>|  
|-|<span data-ttu-id="8daef-515">負の <xref:System.TimeSpan>を示す省略可能なマイナス記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-515">An optional minus sign, which indicates a negative <xref:System.TimeSpan>.</span></span>|  
|<span data-ttu-id="8daef-516">*d*</span><span class="sxs-lookup"><span data-stu-id="8daef-516">*d*</span></span>|<span data-ttu-id="8daef-517">0から10675199までの日数。</span><span class="sxs-lookup"><span data-stu-id="8daef-517">Days, ranging from 0 to 10675199.</span></span>|  
|<span data-ttu-id="8daef-518">.</span><span class="sxs-lookup"><span data-stu-id="8daef-518">.</span></span>|<span data-ttu-id="8daef-519">日を時間から分離する、カルチャに依存するシンボル。</span><span class="sxs-lookup"><span data-stu-id="8daef-519">A culture-sensitive symbol that separates days from hours.</span></span> <span data-ttu-id="8daef-520">既定値はピリオド (".") 文字です。</span><span class="sxs-lookup"><span data-stu-id="8daef-520">The default value is a period (".") character.</span></span>|  
|<span data-ttu-id="8daef-521">*hh*</span><span class="sxs-lookup"><span data-stu-id="8daef-521">*hh*</span></span>|<span data-ttu-id="8daef-522">0から23までの時間。</span><span class="sxs-lookup"><span data-stu-id="8daef-522">Hours, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="8daef-523">:</span><span class="sxs-lookup"><span data-stu-id="8daef-523">:</span></span>|<span data-ttu-id="8daef-524">カルチャに依存する時間区切り記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-524">The culture-sensitive time separator symbol.</span></span>|  
|<span data-ttu-id="8daef-525">*mm*</span><span class="sxs-lookup"><span data-stu-id="8daef-525">*mm*</span></span>|<span data-ttu-id="8daef-526">0から59までの分数。</span><span class="sxs-lookup"><span data-stu-id="8daef-526">Minutes, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-527">*ss*</span><span class="sxs-lookup"><span data-stu-id="8daef-527">*ss*</span></span>|<span data-ttu-id="8daef-528">0から59までの任意の秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-528">Optional seconds, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-529">.</span><span class="sxs-lookup"><span data-stu-id="8daef-529">.</span></span>|<span data-ttu-id="8daef-530">秒の小数部から秒を区切る、カルチャに依存するシンボル。</span><span class="sxs-lookup"><span data-stu-id="8daef-530">A culture-sensitive symbol that separates seconds from fractions of a second.</span></span> <span data-ttu-id="8daef-531">既定値はピリオド (".") 文字です。</span><span class="sxs-lookup"><span data-stu-id="8daef-531">The default value is a period (".") character.</span></span>|  
|<span data-ttu-id="8daef-532">*ff*</span><span class="sxs-lookup"><span data-stu-id="8daef-532">*ff*</span></span>|<span data-ttu-id="8daef-533">省略可能な秒の小数部で構成される10進数字です。</span><span class="sxs-lookup"><span data-stu-id="8daef-533">Optional fractional seconds, consisting of one to seven decimal digits.</span></span>|  

<span data-ttu-id="8daef-534">`input` 引数が日の値のみでない場合は、時間と分の部分を含める必要があります。その他のコンポーネントは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8daef-534">If the `input` argument is not a day value only, it must include an hours and a minutes component; other components are optional.</span></span> <span data-ttu-id="8daef-535">これらが存在する場合は、各時間コンポーネントの値が指定された範囲内に収まる必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-535">If they are present, the values of each time component must fall within a specified range.</span></span> <span data-ttu-id="8daef-536">たとえば、 *hh*, hours 要素の値は 0 ~ 23 の範囲で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-536">For example, the value of *hh*, the hours component, must be between 0 and 23.</span></span> <span data-ttu-id="8daef-537">このため、"23:00:00" を <xref:System.TimeSpan.Parse%2A> メソッドに渡すと、23時間の時間間隔が返されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-537">Because of this, passing "23:00:00" to the <xref:System.TimeSpan.Parse%2A> method returns a time interval of 23 hours.</span></span> <span data-ttu-id="8daef-538">一方、"24:00:00" を渡すと、24日の時間間隔が返されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-538">On the other hand, passing "24:00:00" returns a time interval of 24 days.</span></span> <span data-ttu-id="8daef-539">"24" は hours コンポーネントの範囲外であるため、days コンポーネントとして解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-539">Because "24" is outside the range of the hours component, it is interpreted as the days component.</span></span>

 <span data-ttu-id="8daef-540">`input` のコンポーネントは、<xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 以上かつ <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>以下の時間間隔を総称して指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-540">The components of `input` must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8daef-541"><xref:System.TimeSpan.Parse%28System.String%29> メソッドは、`formatProvider`で指定されたカルチャに対してカルチャ固有の各書式を使用して、`input` を解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="8daef-541">The <xref:System.TimeSpan.Parse%28System.String%29> method tries to parse `input` by using each of the culture-specific formats for the culture specified by `formatProvider`.</span></span>  
  
 <span data-ttu-id="8daef-542">`formatProvider` パラメーターは、返される文字列の書式に関するカルチャ固有の情報を提供する <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-542">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string.</span></span> <span data-ttu-id="8daef-543">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-543">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-544">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-544">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-545"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-545">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-546">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-546">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-547"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-547">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-548"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-548">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-549">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-549">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
## <a name="notes-to-callers"></a><span data-ttu-id="8daef-550">呼び出し元へのメモ</span><span class="sxs-lookup"><span data-stu-id="8daef-550">Notes to callers</span></span>  
   
<span data-ttu-id="8daef-551">解析される文字列内の時間間隔コンポーネントに7桁以上の数字が含まれている場合、.NET Framework 3.5 以前のバージョンでの解析操作は、.NET Framework 4 以降のバージョンでの解析操作とは動作が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-551">When a time interval component in the string to be parsed contains more than seven digits, parsing operations in the .NET Framework 3.5 and earlier versions may behave differently from parsing operations in the .NET Framework 4 and later versions.</span></span> <span data-ttu-id="8daef-552">場合によっては、.NET Framework 3.5 以前のバージョンで成功する解析操作が失敗し、.NET Framework 4 以降で <xref:System.OverflowException> がスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="8daef-552">In some cases, parsing operations that succeed in the .NET Framework 3.5 and earlier versions may fail and throw an <xref:System.OverflowException> in the .NET Framework 4 and later.</span></span> <span data-ttu-id="8daef-553">それ以外の場合は、.NET Framework 3.5 以前のバージョンで <xref:System.FormatException> をスローする解析操作が失敗し、.NET Framework 4 以降で <xref:System.OverflowException> がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-553">In other cases, parsing operations that throw a <xref:System.FormatException> in the .NET Framework 3.5 and earlier versions may fail and throw an <xref:System.OverflowException> in the .NET Framework 4 and later.</span></span> <span data-ttu-id="8daef-554">次の例は、両方のシナリオを示しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-554">The following example illustrates both scenarios.</span></span>  
   
[!code-csharp[System.TimeSpan.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parsefailure1.cs#3)]
[!code-vb[System.TimeSpan.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parsefailure1.vb#3)]

## Examples  
 <span data-ttu-id="8daef-555">次の例では <xref:System.Globalization.CultureInfo> オブジェクトの配列を定義し、<xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> メソッドの呼び出しで各オブジェクトを使用して、文字列配列内の要素を解析します。</span><span class="sxs-lookup"><span data-stu-id="8daef-555">The following example defines an array of <xref:System.Globalization.CultureInfo> objects, and uses each object in calls to the <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> method to parse the elements in a string array.</span></span> <span data-ttu-id="8daef-556">この例は、特定のカルチャの規則が書式設定操作にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-556">The example illustrates how the conventions of a specific culture influence the formatting operation.</span></span>  
  
 [!code-csharp[System.TimeSpan.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parse/cs/parse2.cs#2)]
 [!code-vb[System.TimeSpan.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parse/vb/parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8daef-557"><paramref name="input" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-557"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8daef-558"><paramref name="input" /> の形式は無効です。</span><span class="sxs-lookup"><span data-stu-id="8daef-558"><paramref name="input" /> has an invalid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-559"><paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-559"><paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-560">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-560">-or-</span></span> 
<span data-ttu-id="8daef-561"><paramref name="input" /> の日、時間、分、または秒のコンポーネントのうち少なくとも 1 つが、その有効範囲外です。</span><span class="sxs-lookup"><span data-stu-id="8daef-561">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8daef-562">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-562">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent.</span></span> <span data-ttu-id="8daef-563">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-563">The format of the string representation must match a specified format exactly.</span></span></summary>
        <altmember cref="Overload:System.TimeSpan.TryParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-564">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-564">A string that specifies the time interval to convert.</span></span></param>
        <param name="format"><span data-ttu-id="8daef-565"><paramref name="input" /> で必要とされる書式を定義する標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-565">A standard or custom format string that defines the required format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-566">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-566">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8daef-567">指定した書式とカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-567">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format and culture-specific format information.</span></span> <span data-ttu-id="8daef-568">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-568">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="8daef-569"><paramref name="format" /> および <paramref name="formatProvider" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-569">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-570"><xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> メソッドは、時間間隔の文字列形式を解析します。これは、先頭と末尾の空白文字が無視される点を除いて、`format` パラメーターで定義された形式で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-570">The <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a time interval, which must be in the format defined by the `format` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="8daef-571">`input` は `format` の形式に厳密に準拠している必要があるため、ユーザーが入力した文字列を時間間隔に変換する場合は、常に例外処理を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-571">Because `input` must conform to the format of `format` exactly, you should always use exception handling when converting a string input by the user to a time interval.</span></span> <span data-ttu-id="8daef-572">例外処理を使用しない場合は、代わりに <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-572">If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method instead.</span></span>  
  
 <span data-ttu-id="8daef-573">`format` パラメーターは、1つの標準書式指定子を含む文字列か、または `input`の必要な書式を定義する1つ以上のカスタム書式指定子で構成されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-573">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="8daef-574">有効な書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-574">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-575"><xref:System.TimeSpan.ParseExact%2A> メソッドは、`formatProvider` パラメーターで指定されたカルチャの規則を使用します。これは `format` が、値が "g" または "G" の標準 <xref:System.TimeSpan> 書式指定文字列の場合のみです。</span><span class="sxs-lookup"><span data-stu-id="8daef-575">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if `format` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="8daef-576">"C"、"t"、"T" の標準書式指定文字列では、インバリアントカルチャの書式指定規則が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-576">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="8daef-577">カスタム書式指定文字列では、入力文字列の正確な形式が定義され、リテラル文字を使用して時間間隔のコンポーネントが分離されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-577">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="8daef-578">`formatProvider` パラメーターは、`format` が標準書式指定文字列の場合に、返される文字列の書式に関するカルチャ固有の情報を提供する、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-578">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if `format` is a standard format string.</span></span> <span data-ttu-id="8daef-579">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-579">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-580">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-580">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-581"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-581">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-582">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-582">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-583"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-583">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-584"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-584">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-585">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-585">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-586">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> メソッドを使用して、さまざまな書式指定文字列とカルチャを使用して、時間間隔の文字列形式をいくつか解析します。</span><span class="sxs-lookup"><span data-stu-id="8daef-586">The following example uses the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method to parse several string representations of time intervals using various format strings and cultures.</span></span>  
  
 [!code-csharp[System.TimeSpan.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample1.cs#1)]
 [!code-vb[System.TimeSpan.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8daef-587"><paramref name="input" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-587"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8daef-588"><paramref name="input" /> の形式は無効です。</span><span class="sxs-lookup"><span data-stu-id="8daef-588"><paramref name="input" /> has an invalid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-589"><paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-589"><paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-590">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-590">-or-</span></span> 
<span data-ttu-id="8daef-591"><paramref name="input" /> の日、時間、分、または秒のコンポーネントのうち少なくとも 1 つが、その有効範囲外です。</span><span class="sxs-lookup"><span data-stu-id="8daef-591">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-592">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-592">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-593">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-593">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-594">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-594">A string that specifies the time interval to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="8daef-595"><paramref name="input" /> で必要とされる書式を定義する標準またはカスタムの書式指定文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="8daef-595">A array of standard or custom format strings that defines the required format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-596">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-596">An object that provides culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8daef-597">指定した書式指定文字列の配列とカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-597">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified array of format strings and culture-specific format information.</span></span> <span data-ttu-id="8daef-598">文字列形式の書式は、指定されたいずれかの書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-598">The format of the string representation must match one of the specified formats exactly.</span></span></summary>
        <returns><span data-ttu-id="8daef-599"><paramref name="formats" /> および <paramref name="formatProvider" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-599">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formats" /> and <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-600"><xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> メソッドは、時間間隔の文字列形式を解析します。これは、先頭と末尾の空白文字が無視される点を除いて、`formats` パラメーターで定義されたいずれかの形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-600">The <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method parses the string representation of a time interval, which must be in one of the formats defined by the `formats` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="8daef-601">`input` は `formats`で指定された形式のいずれかに正確に準拠している必要があるため、ユーザーが入力した文字列を時間間隔に変換する場合は、常に例外処理を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-601">Because `input` must exactly conform to one of the formats specified in `formats`, you should always use exception handling when converting a string input by the user to a time interval.</span></span> <span data-ttu-id="8daef-602">例外処理を使用しない場合は、代わりに <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-602">If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method instead.</span></span>  
  
 <span data-ttu-id="8daef-603">`formats` パラメーターは、1つの標準書式指定子、または必要な形式の `input`を定義する1つ以上のカスタム書式指定子で構成される要素を持つ文字列配列です。</span><span class="sxs-lookup"><span data-stu-id="8daef-603">The `formats` parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="8daef-604">有効な書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-604">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span> <span data-ttu-id="8daef-605">解析操作を成功させるには、`input` が `formats` のメンバーと正確に対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-605">`input` must correspond exactly to a member of `formats` for the parse operation to succeed.</span></span> <span data-ttu-id="8daef-606">解析操作は、配列内の最初の要素で始まる `formats` 内の各要素に対して、`input` の照合を試みます。</span><span class="sxs-lookup"><span data-stu-id="8daef-606">The parse operation attempts to match `input` to each element in `formats` starting with the first element in the array.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-607"><xref:System.TimeSpan.ParseExact%2A> メソッドは、`formatProvider` パラメーターで指定されたカルチャの規則を使用します。これは `input` の解析に使用される書式指定文字列が、"g" または "G" の値を持つ標準 <xref:System.TimeSpan> 書式指定文字列である場合のみです。</span><span class="sxs-lookup"><span data-stu-id="8daef-607">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if the format string used to parse `input` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="8daef-608">"C"、"t"、"T" の標準書式指定文字列では、インバリアントカルチャの書式指定規則が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-608">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="8daef-609">カスタム書式指定文字列では、入力文字列の正確な形式が定義され、リテラル文字を使用して時間間隔のコンポーネントが分離されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-609">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="8daef-610">`formatProvider` パラメーターは、`input` の解析に使用される書式指定文字列が標準書式指定文字列の場合に、返される文字列の書式に関するカルチャ固有の情報を提供する、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-610">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse `input` is a standard format string.</span></span> <span data-ttu-id="8daef-611">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-611">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-612">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-612">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-613"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-613">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-614">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-614">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-615"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-615">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-616"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-616">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-617">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-617">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-618">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> メソッドを呼び出して、文字列配列の各要素を <xref:System.TimeSpan> 値に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-618">The following example calls the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> method to convert each element of a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="8daef-619">この例では、フランス語-フランス語 ("fr-fr") カルチャの書式指定規則を使用して、文字列を解釈します。</span><span class="sxs-lookup"><span data-stu-id="8daef-619">The example interprets the strings using the formatting conventions of the French - France ("fr-FR") culture.</span></span> <span data-ttu-id="8daef-620">文字列は、一般的な短い形式または一般の長い形式の時間間隔を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-620">The strings can represent a time interval in either the general short format or the general long format.</span></span>  
  
 <span data-ttu-id="8daef-621">さらに、この例では、時間間隔の解析メソッドが1つの数字を解釈する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="8daef-621">In addition, the example changes the way in which the time interval parsing methods interpret a single digit.</span></span> <span data-ttu-id="8daef-622">通常、1桁の数字は、時間間隔の日数として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-622">Ordinarily, a single digit is interpreted as the number of days in a time interval.</span></span> <span data-ttu-id="8daef-623">代わりに、`%h` カスタム書式指定文字列を使用して、1つの数字を時間数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="8daef-623">Instead, the `%h` custom format string is used to interpret a single digit as the number of hours.</span></span> <span data-ttu-id="8daef-624">この変更を有効にするには、`%h` カスタム書式指定文字列が、`formats` 配列内の他の書式指定文字列の前に配置されている必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-624">For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.</span></span>  
  
 [!code-csharp[System.TimeSpan.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample3.cs#3)]
 [!code-vb[System.TimeSpan.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8daef-625"><paramref name="input" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-625"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8daef-626"><paramref name="input" /> の形式は無効です。</span><span class="sxs-lookup"><span data-stu-id="8daef-626"><paramref name="input" /> has an invalid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-627"><paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-627"><paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-628">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-628">-or-</span></span> 
<span data-ttu-id="8daef-629"><paramref name="input" /> の日、時間、分、または秒のコンポーネントのうち少なくとも 1 つが、その有効範囲外です。</span><span class="sxs-lookup"><span data-stu-id="8daef-629">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span></span></exception>
        <altmember cref="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-630">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-630">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-631">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-631">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles = System.Globalization.TimeSpanStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, Optional styles As TimeSpanStyles = System.Globalization.TimeSpanStyles.None) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles = System.Globalization.TimeSpanStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, Optional styles As TimeSpanStyles = System.Globalization.TimeSpanStyles.None) As TimeSpan" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, format, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-632">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-632">A string that specifies the time interval to convert.</span></span></param>
        <param name="format"><span data-ttu-id="8daef-633"><paramref name="input" /> で必要とされる書式を定義する標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-633">A standard or custom format string that defines the required format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-634">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-634">An object that provides culture-specific formatting information.</span></span></param>
        <param name="styles"><span data-ttu-id="8daef-635"><paramref name="input" /> で使用できるスタイル要素を定義する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="8daef-635">A bitwise combination of enumeration values that defines the style elements that may be present in <paramref name="input" />.</span></span></param>
        <summary><span data-ttu-id="8daef-636">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-636">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format, culture-specific format information, and styles.</span></span> <span data-ttu-id="8daef-637">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-637">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="8daef-638"><paramref name="format" />、<paramref name="formatProvider" />、および <paramref name="styles" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-638">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="format" />, <paramref name="formatProvider" />, and <paramref name="styles" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-639"><xref:System.TimeSpan.ParseExact%2A> メソッドは、時間間隔の文字列形式を解析します。これは、先頭と末尾の空白文字が無視される点を除いて、`format` パラメーターで定義された形式で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-639">The <xref:System.TimeSpan.ParseExact%2A> method parses the string representation of a time interval, which must be in the format defined by the `format` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="8daef-640">`input` は `format` の形式に厳密に準拠している必要があるため、ユーザーが入力した文字列を時間間隔に変換する場合は、常に例外処理を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-640">Because `input` must conform to the format of `format` exactly, you should always use exception handling when converting a string input by the user to a time interval.</span></span> <span data-ttu-id="8daef-641">例外処理を使用しない場合は、代わりに <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-641">If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method instead.</span></span>  
  
 <span data-ttu-id="8daef-642">`format` パラメーターは、1つの標準書式指定子を含む文字列か、または `input`の必要な書式を定義する1つ以上のカスタム書式指定子で構成されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-642">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="8daef-643">有効な書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-643">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-644"><xref:System.TimeSpan.ParseExact%2A> メソッドは、`formatProvider` パラメーターで指定されたカルチャの規則を使用します。これは `format` が、値が "g" または "G" の標準 <xref:System.TimeSpan> 書式指定文字列の場合のみです。</span><span class="sxs-lookup"><span data-stu-id="8daef-644">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if `format` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="8daef-645">"C"、"t"、"T" の標準書式指定文字列では、インバリアントカルチャの書式指定規則が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-645">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="8daef-646">カスタム書式指定文字列では、入力文字列の正確な形式が定義され、リテラル文字を使用して時間間隔のコンポーネントが分離されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-646">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="8daef-647">`formatProvider` パラメーターは、`format` が標準書式指定文字列の場合に、返される文字列の書式に関するカルチャ固有の情報を提供する、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-647">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if `format` is a standard format string.</span></span> <span data-ttu-id="8daef-648">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-648">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-649">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-649">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-650"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-650">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-651">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-651">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-652"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-652">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-653"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-653">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-654">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-654">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
 <span data-ttu-id="8daef-655">`styles` パラメーターは、カスタム書式指定文字列を使用して解析される文字列の解釈に影響します。</span><span class="sxs-lookup"><span data-stu-id="8daef-655">The `styles` parameter affects the interpretation of strings that are parsed using custom format strings.</span></span> <span data-ttu-id="8daef-656">負の符号が存在する場合 (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>)、または常に負の時間間隔として解釈されるか (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>)、`input` が負の時間間隔として解釈されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-656">It determines whether `input` is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>).</span></span> <span data-ttu-id="8daef-657"><xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> が使用されていない場合、負の時間間隔を正常に解析するには、`format` にリテラルの負の記号 ("\\-" など) を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-657">If <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> is not used, `format` must include a literal negative sign symbol (such as "\\-") to successfully parse a negative time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-658">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> メソッドを使用して、さまざまな書式指定文字列とカルチャを使用して、時間間隔の文字列形式をいくつか解析します。</span><span class="sxs-lookup"><span data-stu-id="8daef-658">The following example uses the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method to parse several string representations of time intervals using various format strings and cultures.</span></span> <span data-ttu-id="8daef-659">また、<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 値を使用して、各文字列を負の時間間隔として解釈します。</span><span class="sxs-lookup"><span data-stu-id="8daef-659">It also uses the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> value to interpret each string as a negative time interval.</span></span> <span data-ttu-id="8daef-660">この例の出力は、カスタム書式指定文字列で使用されている場合にのみ、<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> スタイルが戻り値に影響を与えることを示しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-660">The output from the example illustrates that the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> style affects the return value only when it is used with custom format strings.</span></span>  
  
 [!code-csharp[System.TimeSpan.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample2.cs#2)]
 [!code-vb[System.TimeSpan.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8daef-661"><paramref name="styles" /> は無効な <see cref="T:System.Globalization.TimeSpanStyles" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="8daef-661"><paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8daef-662"><paramref name="input" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8daef-662"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8daef-663"><paramref name="input" /> の形式は無効です。</span><span class="sxs-lookup"><span data-stu-id="8daef-663"><paramref name="input" /> has an invalid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-664"><paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-664"><paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-665">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-665">-or-</span></span> 
<span data-ttu-id="8daef-666"><paramref name="input" /> の日、時間、分、または秒のコンポーネントのうち少なくとも 1 つが、その有効範囲外です。</span><span class="sxs-lookup"><span data-stu-id="8daef-666">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-667">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-667">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-668">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-668">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.TimeSpanStyles -&gt; TimeSpan" Usage="System.TimeSpan.ParseExact (input, formats, formatProvider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-669">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-669">A string that specifies the time interval to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="8daef-670"><paramref name="input" /> で必要とされる書式を定義する標準またはカスタムの書式指定文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="8daef-670">A array of standard or custom format strings that define the required format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-671">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-671">An object that provides culture-specific formatting information.</span></span></param>
        <param name="styles"><span data-ttu-id="8daef-672">input で使用できるスタイル要素を定義する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="8daef-672">A bitwise combination of enumeration values that defines the style elements that may be present in input.</span></span></param>
        <summary><span data-ttu-id="8daef-673">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-673">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified formats, culture-specific format information, and styles.</span></span> <span data-ttu-id="8daef-674">文字列形式の書式は、指定されたいずれかの書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-674">The format of the string representation must match one of the specified formats exactly.</span></span></summary>
        <returns><span data-ttu-id="8daef-675"><paramref name="formats" />、<paramref name="formatProvider" />、および <paramref name="styles" /> の指定に従って変換された、<paramref name="input" /> に対応する時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-675">A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formats" />, <paramref name="formatProvider" />, and <paramref name="styles" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-676"><xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> メソッドは、時間間隔の文字列形式を解析します。これは、先頭と末尾の空白文字が無視される点を除いて、`formats` パラメーターで定義されたいずれかの形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-676">The <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method parses the string representation of a time interval, which must be in one of the formats defined by the `formats` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="8daef-677">`input` は `formats`で指定された形式のいずれかに正確に準拠している必要があるため、ユーザーが入力した文字列を時間間隔に変換する場合は、常に例外処理を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-677">Because `input` must exactly conform to one of the formats specified in `formats`, you should always use exception handling when converting a string input by the user to a time interval.</span></span> <span data-ttu-id="8daef-678">例外処理を使用しない場合は、代わりに <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-678">If you prefer not to use exception handling, you can call the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method instead.</span></span>  
  
 <span data-ttu-id="8daef-679">`formats` パラメーターは、1つの標準書式指定子、または必要な形式の `input`を定義する1つ以上のカスタム書式指定子で構成される要素を持つ文字列配列です。</span><span class="sxs-lookup"><span data-stu-id="8daef-679">The `formats` parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="8daef-680">有効な書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-680">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span> <span data-ttu-id="8daef-681">解析操作を成功させるには、`input` が `formats` のメンバーと正確に対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-681">`input` must correspond exactly to a member of `formats` for the parse operation to succeed.</span></span> <span data-ttu-id="8daef-682">解析操作は、配列内の最初の要素で始まる `formats` 内の各要素に対して、`input` の照合を試みます。</span><span class="sxs-lookup"><span data-stu-id="8daef-682">The parse operation attempts to match `input` to each element in `formats` starting with the first element in the array.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-683"><xref:System.TimeSpan.ParseExact%2A> メソッドは、`formatProvider` パラメーターで指定されたカルチャの規則を使用します。これは `input` の解析に使用される書式指定文字列が、"g" または "G" の値を持つ標準 <xref:System.TimeSpan> 書式指定文字列である場合のみです。</span><span class="sxs-lookup"><span data-stu-id="8daef-683">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if the format string used to parse `input` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="8daef-684">"C"、"t"、"T" の標準書式指定文字列では、インバリアントカルチャの書式指定規則が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-684">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="8daef-685">カスタム書式指定文字列では、入力文字列の正確な形式が定義され、リテラル文字を使用して時間間隔のコンポーネントが分離されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-685">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="8daef-686">`formatProvider` パラメーターは、`input` の解析に使用される書式指定文字列が標準書式指定文字列の場合に、返される文字列の書式に関するカルチャ固有の情報を提供する、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-686">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse `input` is a standard format string.</span></span> <span data-ttu-id="8daef-687">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-687">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-688">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-688">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-689"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-689">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-690">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-690">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-691"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-691">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-692"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-692">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-693">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-693">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
 <span data-ttu-id="8daef-694">`styles` パラメーターは、カスタム書式指定文字列を使用して解析される文字列の解釈に影響します。</span><span class="sxs-lookup"><span data-stu-id="8daef-694">The `styles` parameter affects the interpretation of strings that are parsed using custom format strings.</span></span> <span data-ttu-id="8daef-695">負の符号が存在する場合 (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>)、または常に負の時間間隔として解釈されるか (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>)、`input` が負の時間間隔として解釈されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-695">It determines whether `input` is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>).</span></span> <span data-ttu-id="8daef-696"><xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> が使用されていない場合、負の時間間隔を正常に解析するには、`format` にリテラルの負の記号 ("\\-" など) を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-696">If <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> is not used, `format` must include a literal negative sign symbol (such as "\\-") to successfully parse a negative time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-697">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> メソッドを呼び出して、文字列配列の各要素を <xref:System.TimeSpan> 値に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-697">The following example calls the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method to convert each element of a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="8daef-698">文字列は、一般的な短い形式または一般の長い形式の時間間隔を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-698">The strings can represent a time interval in either the general short format or the general long format.</span></span>  
  
 <span data-ttu-id="8daef-699">さらに、この例では、時間間隔の解析メソッドが1つの数字を解釈する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="8daef-699">In addition, the example changes the way in which the time interval parsing methods interpret a single digit.</span></span> <span data-ttu-id="8daef-700">通常、1桁の数字は、時間間隔の日数として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-700">Ordinarily, a single digit is interpreted as the number of days in a time interval.</span></span> <span data-ttu-id="8daef-701">代わりに、`%h` カスタム書式指定文字列を使用して、1つの数字を時間数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="8daef-701">Instead, the `%h` custom format string is used to interpret a single digit as the number of hours.</span></span> <span data-ttu-id="8daef-702">この変更を有効にするには、`%h` カスタム書式指定文字列が、`formats` 配列内の他の書式指定文字列の前に配置されている必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-702">For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.</span></span> <span data-ttu-id="8daef-703">また、出力から、メソッドの呼び出しで指定された <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> フラグが、この書式指定子を使用して文字列を解析する場合にのみ使用されていることにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-703">Also note from the output that the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> flag specified in the method call is used only when parsing a string with this format specifier.</span></span>  
  
 [!code-csharp[System.TimeSpan.ParseExact#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.parseexact/cs/parseexactexample4.cs#4)]
 [!code-vb[System.TimeSpan.ParseExact#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.parseexact/vb/parseexactexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8daef-704"><paramref name="styles" /> は無効な <see cref="T:System.Globalization.TimeSpanStyles" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="8daef-704"><paramref name="styles" /> is an invalid <see cref="T:System.Globalization.TimeSpanStyles" /> value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8daef-705"><paramref name="input" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8daef-705"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8daef-706"><paramref name="input" /> の形式は無効です。</span><span class="sxs-lookup"><span data-stu-id="8daef-706"><paramref name="input" /> has an invalid format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-707"><paramref name="input" /> は <see cref="F:System.TimeSpan.MinValue" /> 未満の数値か、<see cref="F:System.TimeSpan.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-707"><paramref name="input" /> represents a number that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span>  
  
<span data-ttu-id="8daef-708">- または -</span><span class="sxs-lookup"><span data-stu-id="8daef-708">-or-</span></span> 
<span data-ttu-id="8daef-709"><paramref name="input" /> の日、時間、分、または秒のコンポーネントのうち少なくとも 1 つが、その有効範囲外です。</span><span class="sxs-lookup"><span data-stu-id="8daef-709">At least one of the days, hours, minutes, or seconds components in <paramref name="input" /> is outside its valid range.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-710">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-710">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-711">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-711">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Seconds">
      <MemberSignature Language="C#" Value="public int Seconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Seconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Seconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Seconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Seconds { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Seconds : int" Usage="System.TimeSpan.Seconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-712">現在の <see cref="T:System.TimeSpan" /> 構造体が表す時間間隔の秒の部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-712">Gets the seconds component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</span></span></summary>
        <value><span data-ttu-id="8daef-713">現在の <see cref="T:System.TimeSpan" /> 構造体の秒の部分。</span><span class="sxs-lookup"><span data-stu-id="8daef-713">The second component of the current <see cref="T:System.TimeSpan" /> structure.</span></span> <span data-ttu-id="8daef-714">戻り値の範囲は、-59 ～ 59 です。</span><span class="sxs-lookup"><span data-stu-id="8daef-714">The return value ranges from -59 through 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-715"><xref:System.TimeSpan> 値は、[*-*]*d*として表すことができます。*hh*:*mm*:*ss*。*ff*。省略可能なマイナス記号は負の時間間隔を示し、 *d*コンポーネントは日、24時間制の場合は*hh* 、 *mm*は分、 *ss*は秒、 *ff*は秒の小数部を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-715">A <xref:System.TimeSpan> value can be represented as [*-*]*d*.*hh*:*mm*:*ss*.*ff*, where the optional minus sign indicates a negative time interval, the *d* component is days, *hh* is hours as measured on a 24-hour clock, *mm* is minutes, *ss* is seconds, and *ff* is fractions of a second.</span></span> <span data-ttu-id="8daef-716"><xref:System.TimeSpan.Seconds%2A> プロパティの値は、秒の部分 ( *ss*) です。</span><span class="sxs-lookup"><span data-stu-id="8daef-716">The value of the <xref:System.TimeSpan.Seconds%2A> property is the seconds component, *ss*.</span></span>  
  
 <span data-ttu-id="8daef-717"><xref:System.TimeSpan.Seconds%2A> プロパティは秒を表しますが、<xref:System.TimeSpan.TotalSeconds%2A> プロパティは整数部と小数部から成る秒数を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-717">The <xref:System.TimeSpan.Seconds%2A> property represents whole seconds, whereas the <xref:System.TimeSpan.TotalSeconds%2A> property represents whole and fractional seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-718">次の例では、複数の <xref:System.TimeSpan> オブジェクトを作成し、それぞれの <xref:System.TimeSpan.Seconds%2A> プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-718">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Seconds%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.Ticks" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.TimeSpan ts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (ts As TimeSpan) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(TimeSpan ts);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; TimeSpan" Usage="timeSpan.Subtract ts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="ts"><span data-ttu-id="8daef-719">減算される時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-719">The time interval to be subtracted.</span></span></param>
        <summary><span data-ttu-id="8daef-720">指定した <see cref="T:System.TimeSpan" /> オブジェクトとこのインスタンスとの差を示す値を持つ、新しい <see cref="T:System.TimeSpan" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-720">Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference between the specified <see cref="T:System.TimeSpan" /> object and this instance.</span></span></summary>
        <returns><span data-ttu-id="8daef-721">このインスタンスの値から <paramref name="ts" /> の値を減算した結果を値とする新しい時間間隔。</span><span class="sxs-lookup"><span data-stu-id="8daef-721">A new time interval whose value is the result of the value of this instance minus the value of <paramref name="ts" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-722">戻り値は、<xref:System.TimeSpan.MinValue?displayProperty=nameWithType> と <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>の間である必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8daef-722">The return value must be between <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="8daef-723">戻り値は新しい <xref:System.TimeSpan>です。元の <xref:System.TimeSpan> は変更されません。</span><span class="sxs-lookup"><span data-stu-id="8daef-723">The return value is a new <xref:System.TimeSpan>; the original <xref:System.TimeSpan> is not modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-724">次の例では、<xref:System.TimeSpan.Subtract%2A> メソッドを使用して、1つの <xref:System.TimeSpan> 値と、配列内の各時間間隔の差を計算します。</span><span class="sxs-lookup"><span data-stu-id="8daef-724">The following example uses the <xref:System.TimeSpan.Subtract%2A> method to calculate the difference between a single <xref:System.TimeSpan> value and each of the time intervals in an array.</span></span> <span data-ttu-id="8daef-725"><xref:System.TimeSpan> 書式指定文字列には結果の文字列に負の符号が含まれないため、この例では、条件ロジックを使用して負の時間間隔で負の符号を含めています。</span><span class="sxs-lookup"><span data-stu-id="8daef-725">Note that, because <xref:System.TimeSpan> format strings do not include negative signs in the result string, the example uses conditional logic to include a negative sign with negative time intervals.</span></span>  
  
 [!code-csharp[System.TimeSpan.Subtract#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.subtract/cs/subtract1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="8daef-726">戻り値が <see cref="F:System.TimeSpan.MinValue" /> 未満であるか、<see cref="F:System.TimeSpan.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="8daef-726">The return value is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.TimeSpan.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-727">現在の <see cref="T:System.TimeSpan" /> 構造体の値を表すタイマー刻みの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-727">Gets the number of ticks that represent the value of the current <see cref="T:System.TimeSpan" /> structure.</span></span></summary>
        <value><span data-ttu-id="8daef-728">このインスタンス内のタイマー刻みの数。</span><span class="sxs-lookup"><span data-stu-id="8daef-728">The number of ticks contained in this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-729">最小の時間単位は、ティックです。これは、1秒の100ナノ秒または 1 10-万に相当します。</span><span class="sxs-lookup"><span data-stu-id="8daef-729">The smallest unit of time is the tick, which is equal to 100 nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="8daef-730">ミリ秒単位で1万タイマー刻みがあります。</span><span class="sxs-lookup"><span data-stu-id="8daef-730">There are 10,000 ticks in a millisecond.</span></span> <span data-ttu-id="8daef-731"><xref:System.TimeSpan.Ticks%2A> プロパティの値には、負または正の時間間隔を表す負または正の値を指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-731">The value of the <xref:System.TimeSpan.Ticks%2A> property can be negative or positive to represent a negative or positive time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-732">次の例では、複数の <xref:System.TimeSpan> オブジェクトを作成し、それぞれの <xref:System.TimeSpan.Ticks%2A> プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-732">The following example creates several <xref:System.TimeSpan> objects and displays the <xref:System.TimeSpan.Ticks%2A> property of each.</span></span>  
  
 [!code-cpp[System.TimeSpan.Properties#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CPP/properties.cpp#1)]
 [!code-csharp[System.TimeSpan.Properties#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Properties/CS/properties.cs#1)]
 [!code-vb[System.TimeSpan.Properties#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Properties/VB/properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.Days" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerDay">
      <MemberSignature Language="C#" Value="public const long TicksPerDay = 864000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerDay = (864000000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerDay" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerDay As Long  = 864000000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerDay = 864000000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerDay : int64" Usage="System.TimeSpan.TicksPerDay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>864000000000</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8daef-733">タイマー刻みの数を 1 日で表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-733">Represents the number of ticks in 1 day.</span></span> <span data-ttu-id="8daef-734">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="8daef-734">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-735">この定数の値は8640億です。つまり、8640億です。</span><span class="sxs-lookup"><span data-stu-id="8daef-735">The value of this constant is 864 billion; that is, 864,000,000,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-736">次の例では、<xref:System.TimeSpan.TicksPerDay> フィールドの値を参照して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-736">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerDay> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerHour">
      <MemberSignature Language="C#" Value="public const long TicksPerHour = 36000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerHour = (36000000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerHour" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerHour As Long  = 36000000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerHour = 36000000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerHour : int64" Usage="System.TimeSpan.TicksPerHour" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>36000000000</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8daef-737">タイマー刻みの数を 1 時間で表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-737">Represents the number of ticks in 1 hour.</span></span> <span data-ttu-id="8daef-738">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="8daef-738">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-739">この定数の値は360億です。つまり、360億です。</span><span class="sxs-lookup"><span data-stu-id="8daef-739">The value of this constant is 36 billion; that is, 36,000,000,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-740">次の例では、<xref:System.TimeSpan.TicksPerHour> フィールドの値を参照して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-740">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerHour> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerMillisecond">
      <MemberSignature Language="C#" Value="public const long TicksPerMillisecond = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMillisecond = (10000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerMillisecond" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerMillisecond As Long  = 10000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerMillisecond = 10000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerMillisecond : int64" Usage="System.TimeSpan.TicksPerMillisecond" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8daef-741">タイマー刻みの数を 1 ミリ秒で表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-741">Represents the number of ticks in 1 millisecond.</span></span> <span data-ttu-id="8daef-742">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="8daef-742">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-743">この定数の値は1万です。つまり、1万です。</span><span class="sxs-lookup"><span data-stu-id="8daef-743">The value of this constant is 10 thousand; that is, 10,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-744">次の例では、<xref:System.TimeSpan.TicksPerMillisecond> フィールドの値を参照して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-744">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerMillisecond> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerMinute">
      <MemberSignature Language="C#" Value="public const long TicksPerMinute = 600000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMinute = (600000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerMinute" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerMinute As Long  = 600000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerMinute = 600000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerMinute : int64" Usage="System.TimeSpan.TicksPerMinute" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>600000000</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8daef-745">タイマー刻みの数を 1 分で表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-745">Represents the number of ticks in 1 minute.</span></span> <span data-ttu-id="8daef-746">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="8daef-746">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-747">この定数の値は6億です。つまり、6億です。</span><span class="sxs-lookup"><span data-stu-id="8daef-747">The value of this constant is 600 million; that is, 600,000,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-748">次の例では、<xref:System.TimeSpan.TicksPerMinute> フィールドの値を参照して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-748">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerMinute> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerSecond" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <Member MemberName="TicksPerSecond">
      <MemberSignature Language="C#" Value="public const long TicksPerSecond = 10000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerSecond = (10000000)" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.TicksPerSecond" />
      <MemberSignature Language="VB.NET" Value="Public Const TicksPerSecond As Long  = 10000000" />
      <MemberSignature Language="C++ CLI" Value="public: long TicksPerSecond = 10000000;" />
      <MemberSignature Language="F#" Value="val mutable TicksPerSecond : int64" Usage="System.TimeSpan.TicksPerSecond" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>10000000</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8daef-749">タイマー刻みの数を 1 秒で表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-749">Represents the number of ticks in 1 second.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-750">この定数の値は1000万です。つまり、1000万です。</span><span class="sxs-lookup"><span data-stu-id="8daef-750">The value of this constant is 10 million; that is, 10,000,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-751">次の例では、<xref:System.TimeSpan.TicksPerSecond> フィールドの値を参照して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-751">The following example references and displays the value of the <xref:System.TimeSpan.TicksPerSecond> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int64" />
        <altmember cref="F:System.TimeSpan.TicksPerMillisecond" />
        <altmember cref="F:System.TimeSpan.TicksPerMinute" />
        <altmember cref="F:System.TimeSpan.TicksPerHour" />
        <altmember cref="F:System.TimeSpan.TicksPerDay" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8daef-752">現在の <see cref="T:System.TimeSpan" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-752">Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timeSpan.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8daef-753">現在の <see cref="T:System.TimeSpan" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-753">Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="8daef-754">現在の <see cref="T:System.TimeSpan" /> 値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8daef-754">The string representation of the current <see cref="T:System.TimeSpan" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-755">返される文字列は、"c" 書式指定子を使用して書式設定され、次の形式になります。</span><span class="sxs-lookup"><span data-stu-id="8daef-755">The returned string is formatted with the "c" format specifier and has the following format:</span></span>  
  
 <span data-ttu-id="8daef-756">[-][*d*.]*hh*:*mm*:*ss*[.*fffffff*]</span><span class="sxs-lookup"><span data-stu-id="8daef-756">[-][*d*.]*hh*:*mm*:*ss*[.*fffffff*]</span></span>  
  
 <span data-ttu-id="8daef-757">角かっこ ([および]) 内の要素は、返される文字列に含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="8daef-757">Elements in square brackets ([ and ]) may not be included in the returned string.</span></span> <span data-ttu-id="8daef-758">コロンとピリオド (: および.) は、リテラル文字です。</span><span class="sxs-lookup"><span data-stu-id="8daef-758">Colons and periods (: and.) are literal characters.</span></span> <span data-ttu-id="8daef-759">次の表に、リテラル以外の要素を示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-759">The non-literal elements are listed in the following table.</span></span> <span data-ttu-id="8daef-760"><xref:System.TimeSpan.ToString> メソッドによって返される文字列は、カルチャに依存しないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-760">Note that the string returned by the <xref:System.TimeSpan.ToString> method is not culture-sensitive.</span></span>  
  
|<span data-ttu-id="8daef-761">アイテム</span><span class="sxs-lookup"><span data-stu-id="8daef-761">Item</span></span>|<span data-ttu-id="8daef-762">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-762">Description</span></span>|  
|----------|-----------------|  
|<span data-ttu-id="8daef-763">"-"</span><span class="sxs-lookup"><span data-stu-id="8daef-763">"-"</span></span>|<span data-ttu-id="8daef-764">負の時間間隔を示すマイナス記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-764">A minus sign, which indicates a negative time interval.</span></span> <span data-ttu-id="8daef-765">正の期間には符号が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="8daef-765">No sign is included for a positive time span.</span></span>|  
|<span data-ttu-id="8daef-766">"*d*"</span><span class="sxs-lookup"><span data-stu-id="8daef-766">"*d*"</span></span>|<span data-ttu-id="8daef-767">時間間隔の日数。</span><span class="sxs-lookup"><span data-stu-id="8daef-767">The number of days in the time interval.</span></span> <span data-ttu-id="8daef-768">時間間隔が1日未満の場合、この要素は省略されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-768">This element is omitted if the time interval is less than one day.</span></span>|  
|<span data-ttu-id="8daef-769">"*hh*"</span><span class="sxs-lookup"><span data-stu-id="8daef-769">"*hh*"</span></span>|<span data-ttu-id="8daef-770">時間間隔の時間数を0から23までの範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-770">The number of hours in the time interval, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="8daef-771">"*mm*"</span><span class="sxs-lookup"><span data-stu-id="8daef-771">"*mm*"</span></span>|<span data-ttu-id="8daef-772">時間間隔の分数を 0 ~ 59 の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-772">The number of minutes in the time interval, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-773">"*ss*"</span><span class="sxs-lookup"><span data-stu-id="8daef-773">"*ss*"</span></span>|<span data-ttu-id="8daef-774">時間間隔の秒数。 0 ~ 59 の範囲で指定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-774">The number of seconds in the time interval, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-775">"*fffffff*"</span><span class="sxs-lookup"><span data-stu-id="8daef-775">"*fffffff*"</span></span>|<span data-ttu-id="8daef-776">時間間隔の秒の小数部。</span><span class="sxs-lookup"><span data-stu-id="8daef-776">Fractional seconds in the time interval.</span></span> <span data-ttu-id="8daef-777">時間間隔に秒の小数部が含まれていない場合、この要素は省略されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-777">This element is omitted if the time interval does not include fractional seconds.</span></span> <span data-ttu-id="8daef-778">秒の小数部がある場合は、常に7桁の10進数を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-778">If present, fractional seconds are always expressed using seven decimal digits.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="8daef-779"><xref:System.TimeSpan> と Oracle のデータ型の文字列形式の比較の詳細については、サポート技術情報の記事[324577: 「System.string が oracle 9I INTERVAL DAY を SECOND データ型に一致させない](https://go.microsoft.com/fwlink/?LinkId=161146)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-779">For more information about comparing the string representation of <xref:System.TimeSpan> and Oracle data types, see Knowledge Base article [324577: System.TimeSpan Does Not Match Oracle 9i INTERVAL DAY TO SECOND Data Type](https://go.microsoft.com/fwlink/?LinkId=161146).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-780">次の例では、複数の <xref:System.TimeSpan> 値を指定して <xref:System.TimeSpan.ToString%2A> メソッドを呼び出すことによって返される文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-780">The following example displays the strings returned by calling the <xref:System.TimeSpan.ToString%2A> method with a number of <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="8daef-781">この例では <xref:System.TimeSpan.ToString%2A> メソッドを直接呼び出すことはできませんが、<xref:System.TimeSpan> 値から文字列形式への変換を試みると、<xref:System.Console.WriteLine%2A?displayProperty=nameWithType> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-781">Note that although the example does not call the <xref:System.TimeSpan.ToString%2A> method directly, it is called by the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method when it attempts to convert a <xref:System.TimeSpan> value to its string representation.</span></span>  
  
 [!code-csharp[System.TimeSpan.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.TimeSpan.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8daef-782">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]に <see cref="T:System.TimeSpan" /> 値の書式設定のサポートが追加されました。</span><span class="sxs-lookup"><span data-stu-id="8daef-782">Support for formatting <see cref="T:System.TimeSpan" /> values was added in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)].</span></span> <span data-ttu-id="8daef-783">ただし、<see cref="M:System.TimeSpan.ToString" /> メソッドのオーバーロードは、カルチャに依存しません。</span><span class="sxs-lookup"><span data-stu-id="8daef-783">However, the <see cref="M:System.TimeSpan.ToString" /> method overload remains culture-insensitive.</span></span> <span data-ttu-id="8daef-784">その動作は、以前のバージョンの .NET Framework から変更されていません。</span><span class="sxs-lookup"><span data-stu-id="8daef-784">Its behavior remains unchanged from previous versions of the .NET Framework.</span></span> <span data-ttu-id="8daef-785"><see cref="T:System.TimeSpan" /> 値の書式を制御するには、<see cref="M:System.TimeSpan.ToString(System.String)" /> または <see cref="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" /> オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8daef-785">To control the formatting of a <see cref="T:System.TimeSpan" /> value, call the <see cref="M:System.TimeSpan.ToString(System.String)" /> or <see cref="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" /> overload.</span></span></para></block>
        <altmember cref="T:System.String" />
        <altmember cref="M:System.TimeSpan.Parse(System.String)" />
        <altmember cref="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="timeSpan.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8daef-786">標準またはカスタムの <see cref="T:System.TimeSpan" /> 書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-786">A standard or custom <see cref="T:System.TimeSpan" /> format string.</span></span></param>
        <summary><span data-ttu-id="8daef-787">指定した書式を使用して、現在の <see cref="T:System.TimeSpan" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-787">Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="8daef-788">現在の <see cref="T:System.TimeSpan" /> 値の文字列形式を、<paramref name="format" /> パラメーターで指定されている形式で表現した値。</span><span class="sxs-lookup"><span data-stu-id="8daef-788">The string representation of the current <see cref="T:System.TimeSpan" /> value in the format specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-789">`format` パラメーターには、<xref:System.TimeSpan> 値の有効な標準またはカスタムの書式指定子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-789">The `format` parameter can be any valid standard or custom format specifier for <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="8daef-790">`format` が <xref:System.String.Empty?displayProperty=nameWithType> に等しい場合、またはが `null`場合、現在の <xref:System.TimeSpan> オブジェクトの戻り値は、共通書式指定子 ("c") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-790">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.TimeSpan> object is formatted with the common format specifier ("c").</span></span> <span data-ttu-id="8daef-791">`format` がその他の値の場合、メソッドは <xref:System.FormatException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="8daef-791">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="8daef-792">`format` が標準書式指定文字列の場合、返される文字列の形式は、現在のカルチャの書式指定規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-792">If `format` is a standard format string, the format of the returned string is defined by the formatting conventions of the current culture.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-793"><xref:System.TimeSpan> 値のカスタム書式指定文字列には、日付または時刻の区切り記号は含まれません。</span><span class="sxs-lookup"><span data-stu-id="8daef-793">The custom format strings for <xref:System.TimeSpan> values do not include a date or time separator.</span></span> <span data-ttu-id="8daef-794">これらの要素を書式指定文字列に含める場合は、それらを文字リテラルとして扱う必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-794">If you want to include these elements in your format string, you must treat them as character literals.</span></span> <span data-ttu-id="8daef-795">図の例を参照してください。詳細については、「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-795">See the example for an illustration, and see the [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md) topic for more information.</span></span>  
  
 <span data-ttu-id="8daef-796">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-796">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8daef-797"><xref:System.TimeSpan> 値の書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-797">For more information about format strings for <xref:System.TimeSpan> values, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
-   <span data-ttu-id="8daef-798">.NET Framework での書式設定のサポートの詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-798">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-799">次の例では、標準およびカスタムの <xref:System.TimeSpan> 書式指定文字列を使用して、<xref:System.TimeSpan> 値の配列内の各要素の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-799">The following example uses standard and custom <xref:System.TimeSpan> format strings to display the string representation of each element in an array of <xref:System.TimeSpan> values</span></span>  
  
 [!code-csharp[System.TimeSpan.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/tostring3.cs#3)]
 [!code-vb[System.TimeSpan.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8daef-800"><paramref name="format" /> パラメーターは、認識できないか、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8daef-800">The <paramref name="format" /> parameter is not recognized or is not supported.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-801">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-801">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-802">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-802">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, formatProvider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="timeSpan.ToString (format, formatProvider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="8daef-803">標準またはカスタムの <see cref="T:System.TimeSpan" /> 書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-803">A standard or custom <see cref="T:System.TimeSpan" /> format string.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-804">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-804">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="8daef-805">指定した書式とカルチャ固有の書式情報を使用して、現在の <see cref="T:System.TimeSpan" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-805">Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation by using the specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="8daef-806"><paramref name="format" /> および <paramref name="formatProvider" /> の指定に従って表現された、現在の <see cref="T:System.TimeSpan" /> 値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="8daef-806">The string representation of the current <see cref="T:System.TimeSpan" /> value, as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-807">`format` パラメーターには、<xref:System.TimeSpan> 値の有効な標準またはカスタムの書式指定子を指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-807">The `format` parameter can be any valid standard or custom format specifier for <xref:System.TimeSpan> values.</span></span> <span data-ttu-id="8daef-808">`format` が <xref:System.String.Empty?displayProperty=nameWithType> に等しい場合、またはが `null`場合、現在の <xref:System.TimeSpan> オブジェクトの戻り値は、共通書式指定子 ("c") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-808">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.TimeSpan> object is formatted with the common format specifier ("c").</span></span> <span data-ttu-id="8daef-809">Format が他の値の場合、メソッドは <xref:System.FormatException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="8daef-809">If format is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-810"><xref:System.TimeSpan> 値のカスタム書式指定文字列には、日付または時刻の区切り記号は含まれません。</span><span class="sxs-lookup"><span data-stu-id="8daef-810">The custom format strings for <xref:System.TimeSpan> values do not include a date or time separator.</span></span> <span data-ttu-id="8daef-811">これらの要素を書式指定文字列に含める場合は、それらを文字リテラルとして扱う必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-811">If you want to include these elements in your format string, you must treat them as character literals.</span></span> <span data-ttu-id="8daef-812">図の例を参照してください。詳細については、「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-812">See the example for an illustration, and see the [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md) topic for more information.</span></span>  
  
 <span data-ttu-id="8daef-813">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-813">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="8daef-814"><xref:System.TimeSpan> 値の書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-814">For more information about format strings for <xref:System.TimeSpan> values, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
-   <span data-ttu-id="8daef-815">.NET Framework での書式設定のサポートの詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-815">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="8daef-816">`formatProvider` パラメーターは、返される文字列の書式に関するカルチャ固有の情報を提供する <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-816">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string.</span></span> <span data-ttu-id="8daef-817">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-817">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-818">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-818">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-819"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-819">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-820">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-820">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-821"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-821">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-822"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-822">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-823">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-823">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span> <span data-ttu-id="8daef-824">`format` がカスタム書式指定文字列の場合、`formatProvider` パラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-824">If `format` is a custom format string, the `formatProvider` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-825">次の例では、<xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29> メソッドを呼び出して、2つの時間間隔を書式設定しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-825">The following example calls the <xref:System.TimeSpan.ToString%28System.String%2CSystem.IFormatProvider%29> method to format two time intervals.</span></span> <span data-ttu-id="8daef-826">この例では、書式指定文字列ごとにメソッドを2回呼び出します。最初に、en-us カルチャの規則を使用してそれを表示し、次に fr-fr カルチャの規則を使用して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-826">The example calls the method twice for each format string, first to display it using the conventions of the en-US culture and then to display it using the conventions of the fr-FR culture.</span></span>  
  
 [!code-csharp[System.TimeSpan.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.ToString/cs/tostring4.cs#4)]
 [!code-vb[System.TimeSpan.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.ToString/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="8daef-827"><paramref name="format" /> パラメーターは、認識できないか、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="8daef-827">The <paramref name="format" /> parameter is not recognized or is not supported.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-828">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-828">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-829">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-829">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TotalDays">
      <MemberSignature Language="C#" Value="public double TotalDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalDays" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalDays" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalDays As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalDays { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalDays : double" Usage="System.TimeSpan.TotalDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-830">整数部と小数部から成る日数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-830">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional days.</span></span></summary>
        <value><span data-ttu-id="8daef-831">このインスタンスで表される日数の合計。</span><span class="sxs-lookup"><span data-stu-id="8daef-831">The total number of days represented by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-832">このプロパティは、このインスタンスの値をティックから日に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-832">This property converts the value of this instance from ticks to days.</span></span> <span data-ttu-id="8daef-833">この数値には、整数部と小数部から成る日数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="8daef-833">This number might include whole and fractional days.</span></span>  
  
 <span data-ttu-id="8daef-834"><xref:System.TimeSpan.TotalDays%2A> プロパティは、整数部と小数部から成る日数を表します。一方、<xref:System.TimeSpan.Days%2A> プロパティは、全体の日数を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-834">The <xref:System.TimeSpan.TotalDays%2A> property represents whole and fractional days, whereas the <xref:System.TimeSpan.Days%2A> property represents whole days.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-835">次の例では、<xref:System.TimeSpan> オブジェクトをインスタンス化し、その <xref:System.TimeSpan.TotalDays%2A> プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-835">The following example instantiates a <xref:System.TimeSpan> object and displays the value of its <xref:System.TimeSpan.TotalDays%2A> property.</span></span> <span data-ttu-id="8daef-836">また、各コンポーネントの値 (時間、分、秒、ミリ秒) が表示されます。この値は、<xref:System.TimeSpan.TotalDays%2A> プロパティの値の小数部分を形成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-836">It also displays the value of each component (hours, minutes, seconds, milliseconds) that forms the fractional part of the value of its <xref:System.TimeSpan.TotalDays%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalDays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totaldays/cs/totaldays.cs#1)]
 [!code-vb[System.TimeSpan.TotalDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totaldays/vb/totaldays.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Days" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
      </Docs>
    </Member>
    <Member MemberName="TotalHours">
      <MemberSignature Language="C#" Value="public double TotalHours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalHours" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalHours" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalHours As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalHours { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalHours : double" Usage="System.TimeSpan.TotalHours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-837">整数部と小数部から成る時間数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-837">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional hours.</span></span></summary>
        <value><span data-ttu-id="8daef-838">このインスタンスで表される時間数の合計。</span><span class="sxs-lookup"><span data-stu-id="8daef-838">The total number of hours represented by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-839">このプロパティは、このインスタンスの値をティックから時間に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-839">This property converts the value of this instance from ticks to hours.</span></span> <span data-ttu-id="8daef-840">この数値には、整数部と小数部から成る時間が含まれます。</span><span class="sxs-lookup"><span data-stu-id="8daef-840">This number might include whole and fractional hours.</span></span>  
  
 <span data-ttu-id="8daef-841"><xref:System.TimeSpan.TotalHours%2A> プロパティは、整数部と小数部から成る時間を表します。一方、<xref:System.TimeSpan.Hours%2A> プロパティは時間全体を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-841">The <xref:System.TimeSpan.TotalHours%2A> property represents whole and fractional hours, whereas the <xref:System.TimeSpan.Hours%2A> property represents whole hours.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-842">次の例では、<xref:System.TimeSpan> オブジェクトをインスタンス化し、その <xref:System.TimeSpan.TotalHours%2A> プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-842">The following example instantiates a <xref:System.TimeSpan> object and displays the value its <xref:System.TimeSpan.TotalHours%2A> property.</span></span> <span data-ttu-id="8daef-843">また、各コンポーネントの値 (時間、分、秒、ミリ秒) が表示されます。この値は、<xref:System.TimeSpan.TotalHours%2A> プロパティの値の小数部分を形成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-843">It also displays the value of each component (hours, minutes, seconds, and milliseconds) that forms the fractional part of the value of its <xref:System.TimeSpan.TotalHours%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalhours/cs/totalhours.cs#1)]
 [!code-vb[System.TimeSpan.TotalHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalhours/vb/totalhours.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Hours" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalMilliseconds">
      <MemberSignature Language="C#" Value="public double TotalMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalMilliseconds As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalMilliseconds { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalMilliseconds : double" Usage="System.TimeSpan.TotalMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-844">整数部と小数部から成るミリ秒数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-844">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional milliseconds.</span></span></summary>
        <value><span data-ttu-id="8daef-845">このインスタンスで表されるミリ秒数の合計。</span><span class="sxs-lookup"><span data-stu-id="8daef-845">The total number of milliseconds represented by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-846">このプロパティは、このインスタンスの値をタイマー刻みからミリ秒に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-846">This property converts the value of this instance from ticks to milliseconds.</span></span> <span data-ttu-id="8daef-847">この数値には、整数部と小数部から成るミリ秒が含まれます。</span><span class="sxs-lookup"><span data-stu-id="8daef-847">This number might include whole and fractional milliseconds.</span></span>  
  
 <span data-ttu-id="8daef-848"><xref:System.TimeSpan.TotalMilliseconds%2A> プロパティは、整数部と小数部から成るミリ秒を表します。一方、<xref:System.TimeSpan.Milliseconds%2A> プロパティは、ミリ秒単位で表されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-848">The <xref:System.TimeSpan.TotalMilliseconds%2A> property represents whole and fractional milliseconds, whereas the <xref:System.TimeSpan.Milliseconds%2A> property represents whole milliseconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-849">次の例では、<xref:System.TimeSpan> オブジェクトをインスタンス化し、その <xref:System.TimeSpan.TotalMilliseconds%2A> プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-849">The following example instantiates a <xref:System.TimeSpan> object and displays the value of its <xref:System.TimeSpan.TotalMilliseconds%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalmilliseconds/cs/totalmilliseconds.cs#1)]
 [!code-vb[System.TimeSpan.TotalMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalmilliseconds/vb/totalmilliseconds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Milliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalMinutes">
      <MemberSignature Language="C#" Value="public double TotalMinutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMinutes" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalMinutes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalMinutes As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalMinutes { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalMinutes : double" Usage="System.TimeSpan.TotalMinutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-850">整数部と小数部から成る分数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-850">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional minutes.</span></span></summary>
        <value><span data-ttu-id="8daef-851">このインスタンスで表される分数の合計。</span><span class="sxs-lookup"><span data-stu-id="8daef-851">The total number of minutes represented by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-852">このプロパティは、このインスタンスの値をタイマー刻みから分に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-852">This property converts the value of this instance from ticks to minutes.</span></span> <span data-ttu-id="8daef-853">この数値には、分数と小数部を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-853">This number might include whole and fractional minutes.</span></span>  
  
 <span data-ttu-id="8daef-854"><xref:System.TimeSpan.TotalMinutes%2A> プロパティは、整数部と小数部から成る分数を表します。一方、<xref:System.TimeSpan.Minutes%2A> プロパティは、全体の分数を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-854">The <xref:System.TimeSpan.TotalMinutes%2A> property represents whole and fractional minutes, whereas the <xref:System.TimeSpan.Minutes%2A> property represents whole minutes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-855">次の例では、<xref:System.TimeSpan> オブジェクトをインスタンス化し、その <xref:System.TimeSpan.TotalMinutes%2A> プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-855">The following example instantiates a <xref:System.TimeSpan> object and displays the value of its <xref:System.TimeSpan.TotalMinutes%2A> property.</span></span> <span data-ttu-id="8daef-856">また、<xref:System.TimeSpan.TotalMinutes%2A> プロパティの値の小数部分を形成する各コンポーネント (秒、ミリ秒) の値も表示されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-856">It also displays the value of each component (seconds, milliseconds) that forms the fractional part of the value of its <xref:System.TimeSpan.TotalMinutes%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalminutes/cs/totalminutes.cs#1)]
 [!code-vb[System.TimeSpan.TotalMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalminutes/vb/totalminutes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Minutes" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalSeconds" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TotalSeconds">
      <MemberSignature Language="C#" Value="public double TotalSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalSeconds" />
      <MemberSignature Language="DocId" Value="P:System.TimeSpan.TotalSeconds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalSeconds As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double TotalSeconds { double get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalSeconds : double" Usage="System.TimeSpan.TotalSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-857">整数部と小数部から成る秒数で表される、現在の <see cref="T:System.TimeSpan" /> 構造体の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8daef-857">Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional seconds.</span></span></summary>
        <value><span data-ttu-id="8daef-858">このインスタンスで表される秒数の合計。</span><span class="sxs-lookup"><span data-stu-id="8daef-858">The total number of seconds represented by this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-859">このプロパティは、このインスタンスの値をティックから秒に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-859">This property converts the value of this instance from ticks to seconds.</span></span> <span data-ttu-id="8daef-860">この数値には、整数部と小数部から成る秒が含まれます。</span><span class="sxs-lookup"><span data-stu-id="8daef-860">This number might include whole and fractional seconds.</span></span>  
  
 <span data-ttu-id="8daef-861"><xref:System.TimeSpan.TotalSeconds%2A> プロパティは、整数部と小数部から成る秒数を表します。一方、<xref:System.TimeSpan.Seconds%2A> プロパティは秒を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-861">The <xref:System.TimeSpan.TotalSeconds%2A> property represents whole and fractional seconds, whereas the <xref:System.TimeSpan.Seconds%2A> property represents whole seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-862">次の例では、<xref:System.TimeSpan> オブジェクトをインスタンス化し、その <xref:System.TimeSpan.TotalSeconds%2A> プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-862">The following example instantiates a <xref:System.TimeSpan> object and displays the value of its <xref:System.TimeSpan.TotalSeconds%2A> property.</span></span> <span data-ttu-id="8daef-863">また、ミリ秒部分の値も表示されます。これは、<xref:System.TimeSpan.TotalSeconds%2A> プロパティの値の小数部を形成します。</span><span class="sxs-lookup"><span data-stu-id="8daef-863">It also displays the value of its milliseconds component, which forms the fractional part of the value of its <xref:System.TimeSpan.TotalSeconds%2A> property.</span></span>  
  
 [!code-csharp[System.TimeSpan.TotalSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.totalseconds/cs/totalseconds.cs#1)]
 [!code-vb[System.TimeSpan.TotalSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.totalseconds/vb/totalseconds.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeSpan.Seconds" />
        <altmember cref="P:System.TimeSpan.TotalMilliseconds" />
        <altmember cref="P:System.TimeSpan.TotalMinutes" />
        <altmember cref="P:System.TimeSpan.TotalHours" />
        <altmember cref="P:System.TimeSpan.TotalDays" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider formatProvider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional formatProvider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="timeSpan.TryFormat (destination, charsWritten, format, formatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8daef-864">指定した文字列形式の時間間隔を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-864">Converts the specified string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.TimeSpan.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="8daef-865">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-865">A string that specifies the time interval to convert.</span></span></param>
        <param name="result"><span data-ttu-id="8daef-866">このメソッドが返されるときに、<paramref name="s" /> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="8daef-866">When this method returns, contains an object that represents the time interval specified by <paramref name="s" />, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="8daef-867">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-867">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8daef-868">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-868">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="8daef-869"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-869"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8daef-870"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> である場合、書式が無効な場合、表される時間間隔が <see cref="F:System.TimeSpan.MinValue" /> より短いか <see cref="F:System.TimeSpan.MaxValue" /> より長い場合、または日、時間、分、秒の各構成要素の少なくとも 1 つが有効な範囲にない場合、この操作は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-870">This operation returns <see langword="false" /> if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, has an invalid format, represents a time interval that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />, or has at least one days, hours, minutes, or seconds component outside its valid range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-871"><xref:System.TimeSpan.TryParse%2A> メソッドは、変換に失敗した場合に例外をスローしない点を除いて、<xref:System.TimeSpan.Parse%28System.String%29?displayProperty=nameWithType> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="8daef-871">The <xref:System.TimeSpan.TryParse%2A> method is like the <xref:System.TimeSpan.Parse%28System.String%29?displayProperty=nameWithType> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="8daef-872">`s` パラメーターには、次の形式で時間間隔の指定が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8daef-872">The `s` parameter contains a time interval specification in the form:</span></span>  
  
 <span data-ttu-id="8daef-873">[*ws*][-]{ *d* &#124; *d*。*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]]} [*ws*]</span><span class="sxs-lookup"><span data-stu-id="8daef-873">[*ws*][-]{ *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]] }[*ws*]</span></span>  
  
 <span data-ttu-id="8daef-874">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8daef-874">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8daef-875">中かっこ ({と}) で囲まれ、縦棒 (&#124;) で区切られた代替の一覧から1つの選択が必要です。</span><span class="sxs-lookup"><span data-stu-id="8daef-875">One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required.</span></span> <span data-ttu-id="8daef-876">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8daef-876">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8daef-877">要素</span><span class="sxs-lookup"><span data-stu-id="8daef-877">Element</span></span>|<span data-ttu-id="8daef-878">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-878">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8daef-879">*ws*</span><span class="sxs-lookup"><span data-stu-id="8daef-879">*ws*</span></span>|<span data-ttu-id="8daef-880">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8daef-880">Optional white space.</span></span>|  
|-|<span data-ttu-id="8daef-881">負の <xref:System.TimeSpan>を示す省略可能なマイナス記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-881">An optional minus sign, which indicates a negative <xref:System.TimeSpan>.</span></span>|  
|<span data-ttu-id="8daef-882">*d*</span><span class="sxs-lookup"><span data-stu-id="8daef-882">*d*</span></span>|<span data-ttu-id="8daef-883">0から10675199までの日数。</span><span class="sxs-lookup"><span data-stu-id="8daef-883">Days, ranging from 0 to 10675199.</span></span>|  
|<span data-ttu-id="8daef-884">.</span><span class="sxs-lookup"><span data-stu-id="8daef-884">.</span></span>|<span data-ttu-id="8daef-885">日を時間から分離する、カルチャに依存するシンボル。</span><span class="sxs-lookup"><span data-stu-id="8daef-885">A culture-sensitive symbol that separates days from hours.</span></span> <span data-ttu-id="8daef-886">インバリアント形式では、ピリオド (".") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-886">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="8daef-887">*hh*</span><span class="sxs-lookup"><span data-stu-id="8daef-887">*hh*</span></span>|<span data-ttu-id="8daef-888">0から23までの時間。</span><span class="sxs-lookup"><span data-stu-id="8daef-888">Hours, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="8daef-889">:</span><span class="sxs-lookup"><span data-stu-id="8daef-889">:</span></span>|<span data-ttu-id="8daef-890">カルチャに依存する時間区切り記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-890">The culture-sensitive time separator symbol.</span></span> <span data-ttu-id="8daef-891">インバリアント形式では、コロン (":") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-891">The invariant format uses a colon (":") character.</span></span>|  
|<span data-ttu-id="8daef-892">*mm*</span><span class="sxs-lookup"><span data-stu-id="8daef-892">*mm*</span></span>|<span data-ttu-id="8daef-893">0から59までの分数。</span><span class="sxs-lookup"><span data-stu-id="8daef-893">Minutes, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-894">*ss*</span><span class="sxs-lookup"><span data-stu-id="8daef-894">*ss*</span></span>|<span data-ttu-id="8daef-895">0から59までの任意の秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-895">Optional seconds, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-896">.</span><span class="sxs-lookup"><span data-stu-id="8daef-896">.</span></span>|<span data-ttu-id="8daef-897">秒の小数部から秒を区切る、カルチャに依存するシンボル。</span><span class="sxs-lookup"><span data-stu-id="8daef-897">A culture-sensitive symbol that separates seconds from fractions of a second.</span></span> <span data-ttu-id="8daef-898">インバリアント形式では、ピリオド (".") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-898">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="8daef-899">*ff*</span><span class="sxs-lookup"><span data-stu-id="8daef-899">*ff*</span></span>|<span data-ttu-id="8daef-900">省略可能な秒の小数部で構成される10進数字です。</span><span class="sxs-lookup"><span data-stu-id="8daef-900">Optional fractional seconds, consisting of one to seven decimal digits.</span></span>|  
  
 <span data-ttu-id="8daef-901">`s` のコンポーネントは、<xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 以上かつ <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>以下の時間間隔を総称して指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-901">The components of `s` must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8daef-902"><xref:System.TimeSpan.Parse%28System.String%29> メソッドは、現在のカルチャに対してカルチャ固有の各書式を使用して、`s` を解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="8daef-902">The <xref:System.TimeSpan.Parse%28System.String%29> method tries to parse `s` by using each of the culture-specific formats for the current culture.</span></span>  

## <a name="notes-to-callers"></a><span data-ttu-id="8daef-903">呼び出し元へのメモ</span><span class="sxs-lookup"><span data-stu-id="8daef-903">Notes to callers</span></span>

<span data-ttu-id="8daef-904">場合によっては、解析する文字列の時間間隔コンポーネントに7桁以上の数字が含まれていると、.NET Framework 3.5 以前のバージョンで成功した解析操作が失敗し、.NET Framework 4 以降のバージョンで <xref:System.OverflowException> がスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="8daef-904">In some cases, when a time interval component in the string to be parsed contains more than seven digits, parsing operations that succeed in the .NET Framework 3.5 and earlier versions may fail and throw an <xref:System.OverflowException> in the .NET Framework 4 and later versions.</span></span> <span data-ttu-id="8daef-905">次の例は、このシナリオを示しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-905">The following example illustrates this scenario.</span></span>  
[!code-csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)]
[!code-vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]
  
## Examples  
 <span data-ttu-id="8daef-906">次の例では、<xref:System.TimeSpan.TryParse%2A> メソッドを使用して、有効な <xref:System.TimeSpan> 文字列から <xref:System.TimeSpan> オブジェクトを作成し、タイムスパン文字列が無効であるために解析操作がいつ失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-906">The following example uses the <xref:System.TimeSpan.TryParse%2A> method to create <xref:System.TimeSpan> objects from valid <xref:System.TimeSpan> strings and to indicate when the parse operation has failed because the time span string is invalid.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.TimeSpan.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; input, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; input, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParse (input, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParse(System.String,System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParse (input, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-907">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-907">A string that specifies the time interval to convert.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-908">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-908">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="result"><span data-ttu-id="8daef-909">このメソッドが返されるときに、<paramref name="input" /> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="8daef-909">When this method returns, contains an object that represents the time interval specified by <paramref name="input" />, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="8daef-910">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-910">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8daef-911">指定したカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-911">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified culture-specific formatting information, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="8daef-912"><see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-912"><see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8daef-913"><paramref name="input" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> である場合、書式が無効な場合、表される時間間隔が <see cref="F:System.TimeSpan.MinValue" /> より短いか <see cref="F:System.TimeSpan.MaxValue" /> より長い場合、または日、時間、分、秒の各構成要素の少なくとも 1 つが有効な範囲にない場合、この操作は <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-913">This operation returns <see langword="false" /> if the <paramref name="input" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, has an invalid format, represents a time interval that is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />, or has at least one days, hours, minutes, or seconds component outside its valid range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-914"><xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドは、変換に失敗した場合に例外をスローしない点を除いて、<xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="8daef-914">The <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method is like the <xref:System.TimeSpan.Parse%28System.String%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="8daef-915">`input` パラメーターには、次の形式で時間間隔の指定が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8daef-915">The `input` parameter contains a time interval specification in the form:</span></span>  
  
 <span data-ttu-id="8daef-916">[*ws*][-]{ *d* &#124; *d*。*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]]} [*ws*]</span><span class="sxs-lookup"><span data-stu-id="8daef-916">[*ws*][-]{ *d* &#124; *d*.*hh*:*mm*[:*ss*[.*ff*]] &#124; *hh*:*mm*[:*ss*[.*ff*]] }[*ws*]</span></span>  
  
 <span data-ttu-id="8daef-917">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="8daef-917">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="8daef-918">中かっこ ({と}) で囲まれ、縦棒 (&#124;) で区切られた代替の一覧から1つの選択が必要です。</span><span class="sxs-lookup"><span data-stu-id="8daef-918">One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (&#124;) is required.</span></span> <span data-ttu-id="8daef-919">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="8daef-919">The following table describes each element.</span></span>  
  
|<span data-ttu-id="8daef-920">要素</span><span class="sxs-lookup"><span data-stu-id="8daef-920">Element</span></span>|<span data-ttu-id="8daef-921">説明</span><span class="sxs-lookup"><span data-stu-id="8daef-921">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="8daef-922">*ws*</span><span class="sxs-lookup"><span data-stu-id="8daef-922">*ws*</span></span>|<span data-ttu-id="8daef-923">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="8daef-923">Optional white space.</span></span>|  
|-|<span data-ttu-id="8daef-924">負の <xref:System.TimeSpan>を示す省略可能なマイナス記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-924">An optional minus sign, which indicates a negative <xref:System.TimeSpan>.</span></span>|  
|<span data-ttu-id="8daef-925">*d*</span><span class="sxs-lookup"><span data-stu-id="8daef-925">*d*</span></span>|<span data-ttu-id="8daef-926">0から10675199までの日数。</span><span class="sxs-lookup"><span data-stu-id="8daef-926">Days, ranging from 0 to 10675199.</span></span>|  
|<span data-ttu-id="8daef-927">.</span><span class="sxs-lookup"><span data-stu-id="8daef-927">.</span></span>|<span data-ttu-id="8daef-928">日を時間から分離する、カルチャに依存するシンボル。</span><span class="sxs-lookup"><span data-stu-id="8daef-928">A culture-sensitive symbol that separates days from hours.</span></span> <span data-ttu-id="8daef-929">インバリアント形式では、ピリオド (".") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-929">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="8daef-930">*hh*</span><span class="sxs-lookup"><span data-stu-id="8daef-930">*hh*</span></span>|<span data-ttu-id="8daef-931">0から23までの時間。</span><span class="sxs-lookup"><span data-stu-id="8daef-931">Hours, ranging from 0 to 23.</span></span>|  
|<span data-ttu-id="8daef-932">:</span><span class="sxs-lookup"><span data-stu-id="8daef-932">:</span></span>|<span data-ttu-id="8daef-933">カルチャに依存する時間区切り記号。</span><span class="sxs-lookup"><span data-stu-id="8daef-933">The culture-sensitive time separator symbol.</span></span> <span data-ttu-id="8daef-934">インバリアント形式では、コロン (":") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-934">The invariant format uses a colon (":") character.</span></span>|  
|<span data-ttu-id="8daef-935">*mm*</span><span class="sxs-lookup"><span data-stu-id="8daef-935">*mm*</span></span>|<span data-ttu-id="8daef-936">0から59までの分数。</span><span class="sxs-lookup"><span data-stu-id="8daef-936">Minutes, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-937">*ss*</span><span class="sxs-lookup"><span data-stu-id="8daef-937">*ss*</span></span>|<span data-ttu-id="8daef-938">0から59までの任意の秒数。</span><span class="sxs-lookup"><span data-stu-id="8daef-938">Optional seconds, ranging from 0 to 59.</span></span>|  
|<span data-ttu-id="8daef-939">.</span><span class="sxs-lookup"><span data-stu-id="8daef-939">.</span></span>|<span data-ttu-id="8daef-940">秒の小数部から秒を区切る、カルチャに依存するシンボル。</span><span class="sxs-lookup"><span data-stu-id="8daef-940">A culture-sensitive symbol that separates seconds from fractions of a second.</span></span> <span data-ttu-id="8daef-941">インバリアント形式では、ピリオド (".") 文字が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-941">The invariant format uses a period (".") character.</span></span>|  
|<span data-ttu-id="8daef-942">*ff*</span><span class="sxs-lookup"><span data-stu-id="8daef-942">*ff*</span></span>|<span data-ttu-id="8daef-943">省略可能な秒の小数部で構成される10進数字です。</span><span class="sxs-lookup"><span data-stu-id="8daef-943">Optional fractional seconds, consisting of one to seven decimal digits.</span></span>|  
  
 <span data-ttu-id="8daef-944">`input` のコンポーネントは、<xref:System.TimeSpan.MinValue?displayProperty=nameWithType> 以上かつ <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>以下の時間間隔を総称して指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-944">The components of `input` must collectively specify a time interval that is greater than or equal to <xref:System.TimeSpan.MinValue?displayProperty=nameWithType> and less than or equal to <xref:System.TimeSpan.MaxValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="8daef-945"><xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドは、`formatProvider`で指定されたカルチャに対してカルチャ固有の各書式を使用して、`input` を解析しようとします。</span><span class="sxs-lookup"><span data-stu-id="8daef-945">The <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method tries to parse `input` by using each of the culture-specific formats for the culture specified by `formatProvider`.</span></span>  
  
 <span data-ttu-id="8daef-946">`formatProvider` パラメーターは、返される文字列の書式に関するカルチャ固有の情報を提供する <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-946">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string.</span></span> <span data-ttu-id="8daef-947">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-947">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-948">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-948">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-949"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-949">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-950">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-950">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-951"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-951">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-952"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-952">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-953">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-953">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
## <a name="notes-to-callers"></a><span data-ttu-id="8daef-954">呼び出し元へのメモ</span><span class="sxs-lookup"><span data-stu-id="8daef-954">Notes to callers</span></span>
 
<span data-ttu-id="8daef-955">場合によっては、解析する文字列の時間間隔コンポーネントに7桁以上の数字が含まれていると、.NET Framework 3.5 以前のバージョンで成功して <see langword="true" /> を返す解析操作は失敗し、the.NET Framework 4 以降では <see langword="false" /> が返されることがあります。次の例は、このシナリオを示しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-955">In some cases, when a time interval component in the string to be parsed contains more than seven digits, parsing operations that succeed and return <see langword="true" /> in the .NET Framework 3.5 and earlier versions may fail and return <see langword="false" /> in the.NET Framework 4 and later versions, The following example illustrates this scenario.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparsefailure1.cs#3)]
 [!code-vb[System.TimeSpan.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparsefailure1.vb#3)]
  
## Examples  
 <span data-ttu-id="8daef-956">次の例では <xref:System.Globalization.CultureInfo> オブジェクトの配列を定義し、<xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドの呼び出しで各オブジェクトを使用して、文字列配列内の要素を解析します。</span><span class="sxs-lookup"><span data-stu-id="8daef-956">The following example defines an array of <xref:System.Globalization.CultureInfo> objects, and uses each object in calls to the <xref:System.TimeSpan.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method to parse the elements in a string array.</span></span> <span data-ttu-id="8daef-957">この例は、特定のカルチャの規則が書式設定操作にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-957">The example illustrates how the conventions of a specific culture influence the formatting operation.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.TimeSpan.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8daef-958">時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-958">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span> <span data-ttu-id="8daef-959">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-959">The format of the string representation must match a specified format exactly.</span></span></summary>
        <altmember cref="Overload:System.TimeSpan.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-960">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-960">A string that specifies the time interval to convert.</span></span></param>
        <param name="format"><span data-ttu-id="8daef-961"><paramref name="input" /> で必要とされる書式を定義する標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-961">A standard or custom format string that defines the required format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-962">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-962">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="result"><span data-ttu-id="8daef-963">このメソッドが返されるときに、<paramref name="input" /> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="8daef-963">When this method returns, contains an object that represents the time interval specified by <paramref name="input" />, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="8daef-964">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-964">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8daef-965">指定した書式とカルチャ固有の書式情報を使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-965">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format and culture-specific format information, and returns a value that indicates whether the conversion succeeded.</span></span> <span data-ttu-id="8daef-966">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-966">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="8daef-967"><see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-967"><see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-968"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドは、時間間隔の文字列形式を解析します。これは、先頭と末尾の空白文字が無視される点を除いて、`format` パラメーターで定義された形式で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-968">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method parses the string representation of a time interval, which must be in the format defined by the `format` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="8daef-969">このメソッドは、変換に失敗した場合に例外をスローしない点を除いて、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="8daef-969">This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="8daef-970">`format` パラメーターは、1つの標準書式指定子を含む文字列か、または `input`の必要な書式を定義する1つ以上のカスタム書式指定子で構成されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-970">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="8daef-971">有効な書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-971">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-972"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドは、`formatProvider` パラメーターで指定されたカルチャの規則を使用します。これは `format` が、値が "g" または "G" の標準 <xref:System.TimeSpan> 書式指定文字列の場合のみです。</span><span class="sxs-lookup"><span data-stu-id="8daef-972">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method uses the conventions of the culture specified by the `formatProvider` parameter only if `format` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="8daef-973">"C"、"t"、"T" の標準書式指定文字列では、インバリアントカルチャの書式指定規則が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-973">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="8daef-974">カスタム書式指定文字列では、入力文字列の正確な形式が定義され、リテラル文字を使用して時間間隔のコンポーネントが分離されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-974">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="8daef-975">`formatProvider` パラメーターは、`format` が標準書式指定文字列の場合に、返される文字列の書式に関するカルチャ固有の情報を提供する、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-975">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if `format` is a standard format string.</span></span> <span data-ttu-id="8daef-976">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-976">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-977">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-977">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-978"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-978">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-979">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-979">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-980"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-980">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-981"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-981">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-982">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-982">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-983">次の例では、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> メソッドを使用して、さまざまな書式指定文字列とカルチャを使用して、時間間隔の文字列形式をいくつか解析します。</span><span class="sxs-lookup"><span data-stu-id="8daef-983">The following example uses the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method to parse several string representations of time intervals using various format strings and cultures.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample1.cs#1)]
 [!code-vb[System.TimeSpan.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-984">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-984">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-985">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-985">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-986">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-986">A string that specifies the time interval to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="8daef-987"><paramref name="input" /> に許容される書式を定義する標準またはカスタムの書式指定文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="8daef-987">A array of standard or custom format strings that define the acceptable formats of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-988">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-988">An object that provides culture-specific formatting information.</span></span></param>
        <param name="result"><span data-ttu-id="8daef-989">このメソッドが返されるときに、<paramref name="input" /> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="8daef-989">When this method returns, contains an object that represents the time interval specified by <paramref name="input" />, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="8daef-990">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-990">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8daef-991">指定した書式とカルチャ固有の書式情報を使用して、指定した文字列形式の時間間隔を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-991">Converts the specified string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified formats and culture-specific format information, and returns a value that indicates whether the conversion succeeded.</span></span> <span data-ttu-id="8daef-992">文字列形式の書式は、指定されたいずれかの書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-992">The format of the string representation must match one of the specified formats exactly.</span></span></summary>
        <returns><span data-ttu-id="8daef-993"><see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-993"><see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-994"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドは、時間間隔の文字列形式を解析します。これは、先頭と末尾の空白文字が無視される点を除いて、`formats` パラメーターで指定された書式指定文字列の1つで定義される形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-994">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method parses the string representation of a time interval, which must be in the format defined by one of the format strings specified by the `formats` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="8daef-995">このメソッドは、変換に失敗した場合に例外をスローしない点を除いて、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="8daef-995">This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="8daef-996">`formats` パラメーターは、1つの標準書式指定子、または必要な形式の `input`を定義する1つ以上のカスタム書式指定子で構成される要素を持つ文字列配列です。</span><span class="sxs-lookup"><span data-stu-id="8daef-996">The `formats` parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="8daef-997">有効な書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-997">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span> <span data-ttu-id="8daef-998">解析操作を成功させるには、`input` が `formats` のメンバーと正確に対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-998">`input` must correspond exactly to a member of `formats` for the parse operation to succeed.</span></span> <span data-ttu-id="8daef-999">解析操作は、配列内の最初の要素で始まる `formats` 内の各要素に対して、`input` の照合を試みます。</span><span class="sxs-lookup"><span data-stu-id="8daef-999">The parse operation attempts to match `input` to each element in `formats` starting with the first element in the array.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-1000"><xref:System.TimeSpan.TryParseExact%2A> メソッドは、`formatProvider` パラメーターで指定されたカルチャの規則を使用します。これは `input` の解析に使用される書式指定文字列が、"g" または "G" の値を持つ標準 <xref:System.TimeSpan> 書式指定文字列である場合のみです。</span><span class="sxs-lookup"><span data-stu-id="8daef-1000">The <xref:System.TimeSpan.TryParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if the format string used to parse `input` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="8daef-1001">"C"、"t"、"T" の標準書式指定文字列では、インバリアントカルチャの書式指定規則が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1001">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="8daef-1002">カスタム書式指定文字列では、入力文字列の正確な形式が定義され、リテラル文字を使用して時間間隔のコンポーネントが分離されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1002">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="8daef-1003">`formatProvider` パラメーターは、`input` の解析に使用される書式指定文字列が標準書式指定文字列の場合に、返される文字列の書式に関するカルチャ固有の情報を提供する、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-1003">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse `input` is a standard format string.</span></span> <span data-ttu-id="8daef-1004">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1004">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-1005">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1005">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-1006"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1006">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-1007">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1007">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-1008"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1008">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-1009"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1009">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-1010">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1010">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-1011">次の例では、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> メソッドを呼び出して、文字列配列の各要素を <xref:System.TimeSpan> 値に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1011">The following example calls the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.TimeSpan%40%29> method to convert each element of a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="8daef-1012">この例では、フランス語-フランス語 ("fr-fr") カルチャの書式指定規則を使用して、文字列を解釈します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1012">The example interprets the strings by using the formatting conventions of the French - France ("fr-FR") culture.</span></span> <span data-ttu-id="8daef-1013">文字列は、一般的な短い形式または一般の長い形式の時間間隔を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1013">The strings can represent a time interval in either the general short format or the general long format.</span></span>  
  
 <span data-ttu-id="8daef-1014">さらに、この例では、時間間隔の解析メソッドが1つの数字を解釈する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1014">In addition, the example changes the way in which the time interval parsing methods interpret a single digit.</span></span> <span data-ttu-id="8daef-1015">通常、1桁の数字は、時間間隔の日数として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1015">Ordinarily, a single digit is interpreted as the number of days in a time interval.</span></span> <span data-ttu-id="8daef-1016">代わりに、`%h` カスタム書式指定文字列を使用して、1つの数字を時間数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1016">Instead, the `%h` custom format string is used to interpret a single digit as the number of hours.</span></span> <span data-ttu-id="8daef-1017">この変更を有効にするには、`%h` カスタム書式指定文字列が、`formats` 配列内の他の書式指定文字列の前に配置されている必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-1017">For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample3.cs#3)]
 [!code-vb[System.TimeSpan.TryParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample3.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-1018">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-1018">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-1019">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-1019">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.TimeSpanStyles * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As ReadOnlySpan(Of Char), formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.TimeSpanStyles * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, format As String, formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, System::String ^ format, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.TimeSpanStyles * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, format, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-1020">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-1020">A string that specifies the time interval to convert.</span></span></param>
        <param name="format"><span data-ttu-id="8daef-1021"><paramref name="input" /> で必要とされる書式を定義する標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-1021">A standard or custom format string that defines the required format of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-1022">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1022">An object that provides culture-specific formatting information.</span></span></param>
        <param name="styles"><span data-ttu-id="8daef-1023"><paramref name="input" /> のスタイルを示す 1 つ以上の列挙値。</span><span class="sxs-lookup"><span data-stu-id="8daef-1023">One or more enumeration values that indicate the style of <paramref name="input" />.</span></span></param>
        <param name="result"><span data-ttu-id="8daef-1024">このメソッドが返されるときに、<paramref name="input" /> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1024">When this method returns, contains an object that represents the time interval specified by <paramref name="input" />, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="8daef-1025">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1025">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8daef-1026">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、時間間隔の文字列形式を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1026">Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded.</span></span> <span data-ttu-id="8daef-1027">文字列形式の書式は、指定した書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-1027">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="8daef-1028"><see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-1028"><see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-1029"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> メソッドは、時間間隔の文字列形式を解析します。これは、先頭と末尾の空白文字が無視される点を除いて、`format` パラメーターで定義された形式で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-1029">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method parses the string representation of a time interval, which must be in the format defined by the `format` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="8daef-1030">このメソッドは、変換に失敗した場合に例外をスローしない点を除いて、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="8daef-1030">This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="8daef-1031">`format` パラメーターは、1つの標準書式指定子を含む文字列か、または `input`の必要な書式を定義する1つ以上のカスタム書式指定子で構成されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1031">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="8daef-1032">有効な書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-1032">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
 <span data-ttu-id="8daef-1033">`formatProvider` パラメーターは、`format` が標準書式指定文字列の場合に、返される文字列の書式に関するカルチャ固有の情報を提供する、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-1033">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if `format` is a standard format string.</span></span> <span data-ttu-id="8daef-1034">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1034">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-1035">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1035">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-1036"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1036">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-1037">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1037">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-1038"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1038">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-1039"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1039">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-1040">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1040">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
 <span data-ttu-id="8daef-1041">`styles` パラメーターは、カスタム書式指定文字列を使用して解析される文字列の解釈に影響します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1041">The `styles` parameter affects the interpretation of strings parsed using custom format strings.</span></span> <span data-ttu-id="8daef-1042">負の符号が存在する場合 (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>)、または常に負の時間間隔として解釈されるか (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>)、`input` が負の時間間隔として解釈されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1042">It determines whether `input` is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>).</span></span> <span data-ttu-id="8daef-1043"><xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> が使用されていない場合、負の時間間隔を正常に解析するには、`format` にリテラルの負の記号 ("\\-" など) を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-1043">If <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> is not used, `format` must include a literal negative sign symbol (such as "\\-") to successfully parse a negative time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-1044">次の例では、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> メソッドを使用して、さまざまな書式指定文字列とカルチャを使用して、時間間隔の文字列形式をいくつか解析します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1044">The following example uses the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method to parse several string representations of time intervals using various format strings and cultures.</span></span> <span data-ttu-id="8daef-1045">また、<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> 値を使用して、各文字列を負の時間間隔として解釈します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1045">It also uses the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> value to interpret each string as a negative time interval.</span></span> <span data-ttu-id="8daef-1046">この例の出力は、カスタム書式指定文字列で使用されている場合にのみ、<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> スタイルが戻り値に影響を与えることを示しています。</span><span class="sxs-lookup"><span data-stu-id="8daef-1046">The output from the example illustrates that the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> style affects the return value only when it is used with custom format strings.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample2.cs#2)]
 [!code-vb[System.TimeSpan.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-1047">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-1047">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-1048">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-1048">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, [out] valuetype System.TimeSpan&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (input As String, formats As String(), formatProvider As IFormatProvider, styles As TimeSpanStyles, ByRef result As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ input, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ formatProvider, System::Globalization::TimeSpanStyles styles, [Runtime::InteropServices::Out] TimeSpan % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.TimeSpanStyles * TimeSpan -&gt; bool" Usage="System.TimeSpan.TryParseExact (input, formats, formatProvider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.TimeSpan" RefType="out" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="8daef-1049">変換する時間間隔を指定する文字列。</span><span class="sxs-lookup"><span data-stu-id="8daef-1049">A string that specifies the time interval to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="8daef-1050"><paramref name="input" /> に許容される書式を定義する標準またはカスタムの書式指定文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="8daef-1050">A array of standard or custom format strings that define the acceptable formats of <paramref name="input" />.</span></span></param>
        <param name="formatProvider"><span data-ttu-id="8daef-1051">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1051">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="styles"><span data-ttu-id="8daef-1052"><paramref name="input" /> のスタイルを示す 1 つ以上の列挙値。</span><span class="sxs-lookup"><span data-stu-id="8daef-1052">One or more enumeration values that indicate the style of <paramref name="input" />.</span></span></param>
        <param name="result"><span data-ttu-id="8daef-1053">このメソッドが返されるときに、<paramref name="input" /> で指定した時間間隔を表すオブジェクトを格納します。変換に失敗した場合は、<see cref="F:System.TimeSpan.Zero" /> を格納します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1053">When this method returns, contains an object that represents the time interval specified by <paramref name="input" />, or <see cref="F:System.TimeSpan.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="8daef-1054">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1054">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8daef-1055">指定した書式、カルチャ固有の書式情報、およびスタイルを使用して、指定した文字列形式の時間間隔を等価の <see cref="T:System.TimeSpan" /> に変換し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1055">Converts the specified string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified formats, culture-specific format information, and styles, and returns a value that indicates whether the conversion succeeded.</span></span> <span data-ttu-id="8daef-1056">文字列形式の書式は、指定されたいずれかの書式と完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-1056">The format of the string representation must match one of the specified formats exactly.</span></span></summary>
        <returns><span data-ttu-id="8daef-1057"><see langword="true" /> が正常に変換された場合は <paramref name="input" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8daef-1057"><see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-1058"><xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> メソッドは、時間間隔の文字列形式を解析します。これは、先頭と末尾の空白文字が無視される点を除いて、`formats` パラメーターで指定された書式指定文字列の1つで定義される形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-1058">The <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method parses the string representation of a time interval, which must be in the format defined by one of the format strings specified by the `formats` parameter, except that leading and trailing white-space characters are ignored.</span></span> <span data-ttu-id="8daef-1059">このメソッドは、変換に失敗した場合に例外をスローしない点を除いて、<xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="8daef-1059">This method is similar to the <xref:System.TimeSpan.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%29> method, except that it does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="8daef-1060">`formats` パラメーターは、1つの標準書式指定子、または必要な形式の `input`を定義する1つ以上のカスタム書式指定子で構成される要素を持つ文字列配列です。</span><span class="sxs-lookup"><span data-stu-id="8daef-1060">The `formats` parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of `input`.</span></span> <span data-ttu-id="8daef-1061">有効な書式指定文字列の詳細については、「[標準の Timespan 書式](~/docs/standard/base-types/standard-timespan-format-strings.md)指定文字列」および「[カスタム TimeSpan 書式指定文字列](~/docs/standard/base-types/custom-timespan-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-1061">For more information about valid format strings, see [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span> <span data-ttu-id="8daef-1062">解析操作を成功させるには、`input` が `formats` のメンバーと正確に対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-1062">`input` must correspond exactly to a member of `formats` for the parse operation to succeed.</span></span> <span data-ttu-id="8daef-1063">解析操作は、配列内の最初の要素で始まる `formats` 内の各要素に対して、`input` の照合を試みます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1063">The parse operation attempts to match `input` to each element in `formats` starting with the first element in the array.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8daef-1064"><xref:System.TimeSpan.ParseExact%2A> メソッドは、`formatProvider` パラメーターで指定されたカルチャの規則を使用します。これは `input` の解析に使用される書式指定文字列が、"g" または "G" の値を持つ標準 <xref:System.TimeSpan> 書式指定文字列である場合のみです。</span><span class="sxs-lookup"><span data-stu-id="8daef-1064">The <xref:System.TimeSpan.ParseExact%2A> method uses the conventions of the culture specified by the `formatProvider` parameter only if the format string used to parse `input` is a standard <xref:System.TimeSpan> format string whose value is either "g" or "G".</span></span> <span data-ttu-id="8daef-1065">"C"、"t"、"T" の標準書式指定文字列では、インバリアントカルチャの書式指定規則が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1065">The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture.</span></span> <span data-ttu-id="8daef-1066">カスタム書式指定文字列では、入力文字列の正確な形式が定義され、リテラル文字を使用して時間間隔のコンポーネントが分離されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1066">Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</span></span>  
  
 <span data-ttu-id="8daef-1067">`formatProvider` パラメーターは、`input` の解析に使用される書式指定文字列が標準書式指定文字列の場合に、返される文字列の書式に関するカルチャ固有の情報を提供する、<xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="8daef-1067">The `formatProvider` parameter is an <xref:System.IFormatProvider> implementation that provides culture-specific information about the format of the returned string if the format string used to parse `input` is a standard format string.</span></span> <span data-ttu-id="8daef-1068">`formatProvider`パラメーターには、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1068">The `formatProvider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="8daef-1069">返される文字列に書式指定規則が反映されるカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1069">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="8daef-1070"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトは、返される文字列の書式を定義します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1070">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-1071">返される文字列の書式を定義する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1071">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="8daef-1072"><xref:System.IFormatProvider> インターフェイスを実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8daef-1072">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="8daef-1073"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1073">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="8daef-1074">`formatProvider` が `null`場合は、現在のカルチャに関連付けられている <xref:System.Globalization.DateTimeFormatInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1074">If `formatProvider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object that is associated with the current culture is used.</span></span>  
  
 <span data-ttu-id="8daef-1075">`styles` パラメーターは、カスタム書式指定文字列を使用して解析される文字列の解釈に影響します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1075">The `styles` parameter affects the interpretation of strings that are parsed using custom format strings.</span></span> <span data-ttu-id="8daef-1076">負の符号が存在する場合 (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>)、または常に負の時間間隔として解釈されるか (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>)、`input` が負の時間間隔として解釈されるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1076">It determines whether `input` is interpreted as a negative time interval only if a negative sign is present (<xref:System.Globalization.TimeSpanStyles.None?displayProperty=nameWithType>), or whether it is always interpreted as a negative time interval (<xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType>).</span></span> <span data-ttu-id="8daef-1077"><xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> が使用されていない場合、負の時間間隔を正常に解析するには、`format` にリテラルの負の記号 ("\\-" など) を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="8daef-1077">If <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> is not used, `format` must include a literal negative sign symbol (such as "\\-") to successfully parse a negative time interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-1078">次の例では、<xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> メソッドを呼び出して、文字列配列の各要素を <xref:System.TimeSpan> 値に変換します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1078">The following example calls the <xref:System.TimeSpan.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.TimeSpanStyles%2CSystem.TimeSpan%40%29> method to convert each element of a string array to a <xref:System.TimeSpan> value.</span></span> <span data-ttu-id="8daef-1079">文字列は、一般的な短い形式または一般の長い形式の時間間隔を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1079">The strings can represent a time interval in either the general short format or the general long format.</span></span>  
  
 <span data-ttu-id="8daef-1080">さらに、この例では、時間間隔の解析メソッドが1つの数字を解釈する方法を変更します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1080">In addition, the example changes the way in which the time interval parsing methods interpret a single digit.</span></span> <span data-ttu-id="8daef-1081">通常、1桁の数字は、時間間隔の日数として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1081">Ordinarily, a single digit is interpreted as the number of days in a time interval.</span></span> <span data-ttu-id="8daef-1082">代わりに、`%h` カスタム書式指定文字列を使用して、1つの数字を時間数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1082">Instead, the `%h` custom format string is used to interpret a single digit as the number of hours.</span></span> <span data-ttu-id="8daef-1083">この変更を有効にするには、`%h` カスタム書式指定文字列が、`formats` 配列内の他の書式指定文字列の前に配置されている必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-1083">For this change to be effective, note that the `%h` custom format string must precede the other format strings in the `formats` array.</span></span> <span data-ttu-id="8daef-1084">また、出力から、メソッドの呼び出しで指定された <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> フラグが、この書式指定子を使用して文字列を解析する場合にのみ使用されていることにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="8daef-1084">Also note from the output that the <xref:System.Globalization.TimeSpanStyles.AssumeNegative?displayProperty=nameWithType> flag specified in the method call is used only when parsing a string with this format specifier.</span></span>  
  
 [!code-csharp[System.TimeSpan.TryParseExact#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timespan.tryparseexact/cs/tryparseexactexample4.cs#4)]
 [!code-vb[System.TimeSpan.TryParseExact#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timespan.tryparseexact/vb/tryparseexactexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="8daef-1085">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-1085">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="8daef-1086">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="8daef-1086">Custom TimeSpan Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan Zero" />
      <MemberSignature Language="DocId" Value="F:System.TimeSpan.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Zero As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan Zero;" />
      <MemberSignature Language="F#" Value=" staticval mutable Zero : TimeSpan" Usage="System.TimeSpan.Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8daef-1087">0 の <see cref="T:System.TimeSpan" /> 値を表します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1087">Represents the zero <see cref="T:System.TimeSpan" /> value.</span></span> <span data-ttu-id="8daef-1088">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8daef-1088">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daef-1089"><xref:System.TimeSpan.Zero> フィールドの値はゼロ時刻値を表す <xref:System.TimeSpan> オブジェクトであるため、他の <xref:System.TimeSpan> オブジェクトと比較して、後者が正、0以外、または負の時間間隔を表しているかどうかを判断することができます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1089">Because the value of the <xref:System.TimeSpan.Zero> field is a <xref:System.TimeSpan> object that represents a zero time value, you can compare it with other <xref:System.TimeSpan> objects to determine whether the latter represent positive, non-zero, or negative time intervals.</span></span> <span data-ttu-id="8daef-1090">このフィールドを使用すると、<xref:System.TimeSpan> オブジェクトをゼロ時刻値に初期化することもできます。</span><span class="sxs-lookup"><span data-stu-id="8daef-1090">You can also use this field to initialize a <xref:System.TimeSpan> object to a zero time value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8daef-1091">次の例では、<xref:System.TimeSpan.Zero> フィールドの値を参照して表示します。</span><span class="sxs-lookup"><span data-stu-id="8daef-1091">The following example references and displays the value of the <xref:System.TimeSpan.Zero> field.</span></span>  
  
 [!code-cpp[System.TimeSpan.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CPP/fields.cpp#1)]
 [!code-csharp[System.TimeSpan.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeSpan.Fields/CS/fields.cs#1)]
 [!code-vb[System.TimeSpan.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeSpan.Fields/VB/fields.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
