<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e017df2c7aa38fb463cb675a70e3181f5284f6ac" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83929729" /></Metadata><TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ee6ce-101">アンマネージド ホストに対応するマネージド ホストを提供します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-101">Provides a managed equivalent of an unmanaged host.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee6ce-102">ASP.NET でアプリケーションドメインを構成するために <xref:System.AppDomainManager> を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-102">Do not use <xref:System.AppDomainManager> to configure an application domain in ASP.NET.</span></span> <span data-ttu-id="ee6ce-103">ASP.NET では、構成はホストによって処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-103">In ASP.NET, configuration must be handled by the host.</span></span>  
  
 <span data-ttu-id="ee6ce-104"><xref:System.AppDomainManager> クラスを実装すると、新しいアプリケーションドメインの作成にホストアプリケーションを参加させることができます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-104">Implementing the <xref:System.AppDomainManager> class enables a hosting application to participate in the creation of new application domains.</span></span> <span data-ttu-id="ee6ce-105">既定の <xref:System.AppDomainManager>を置き換えるには、APPDOMAIN_MANAGER_ASM 環境変数と APPDOMAIN_MANAGER_TYPE 環境変数で置換 <xref:System.AppDomainManager> のアセンブリと型を特定するか、構成ファイルで[\<appDomainManagerAssembly >](/dotnet/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element)および[\<appDomainManagerType >](/dotnet/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element)要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-105">To replace the default <xref:System.AppDomainManager>, identify the assembly and type of the replacement <xref:System.AppDomainManager> in the APPDOMAIN_MANAGER_ASM and APPDOMAIN_MANAGER_TYPE environment variables, or use the [\<appDomainManagerAssembly>](/dotnet/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element) and [\<appDomainManagerType>](/dotnet/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element) elements in your configuration file.</span></span> <span data-ttu-id="ee6ce-106">アセンブリは完全に信頼されている必要があり、グローバルアセンブリキャッシュまたは開始アプリケーションのディレクトリに格納されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-106">The assembly must be fully trusted and be contained in the global assembly cache or the directory of the starting application.</span></span> <span data-ttu-id="ee6ce-107">型とアセンブリの名前は、環境変数で完全修飾されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-107">The type and assembly names must be fully qualified in the environment variables.</span></span> <span data-ttu-id="ee6ce-108">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-108">For example:</span></span>  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee6ce-109"><xref:System.AppDomainManager> のサブクラスを含むアセンブリが条件付き <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) 属性でマークされているアセンブリに依存している場合は、アプリケーションドメインの作成に使用する <xref:System.AppDomainSetup> の <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> プロパティに渡すアセンブリを一覧に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-109">If the assembly that contains your subclass of <xref:System.AppDomainManager> depends on assemblies that are marked with the conditional <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) attribute, you must include those assemblies in the list that you pass to the <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> property of the <xref:System.AppDomainSetup> you use to create application domains.</span></span> <span data-ttu-id="ee6ce-110">それ以外の場合、条件付き APTCA 属性でマークされているアセンブリは無効になります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-110">Otherwise, the assemblies that are marked with the conditional APTCA attribute will be disabled.</span></span>  
  
 <span data-ttu-id="ee6ce-111"><xref:System.AppDomainManager> は、アンマネージホストに相当するマネージドです。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-111">The <xref:System.AppDomainManager> is the managed equivalent of the unmanaged host.</span></span> <span data-ttu-id="ee6ce-112"><xref:System.AppDomainManager> オブジェクトは、プロセス内の新しいアプリケーションドメインの作成に参加し、他のマネージコードを実行する前に新しい <xref:System.AppDomain> をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-112">An <xref:System.AppDomainManager> object participates in the creation of new application domains in a process and can customize the new <xref:System.AppDomain> before other managed code runs.</span></span> <span data-ttu-id="ee6ce-113"><xref:System.AppDomainManager> では、共通言語ランタイムの実行の他の側面に参加するホストマネージャーを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-113">The <xref:System.AppDomainManager> can also supply host managers that participate in other aspects of common language runtime execution.</span></span> <span data-ttu-id="ee6ce-114">たとえば、<xref:System.AppDomainManager> は、アプリケーションドメインのセキュリティの決定に関与する <xref:System.Security.HostSecurityManager> オブジェクトを識別できます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-114">For example, an <xref:System.AppDomainManager> can identify a <xref:System.Security.HostSecurityManager> object that participates in the security decisions of the application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ee6ce-115">`FullTrust`付与されたアセンブリ (グローバルアセンブリキャッシュ内のアセンブリ、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> メソッドで `fullTrustAssemblies` として指定されたアセンブリなど) だけが <xref:System.AppDomainManager.%23ctor%2A> コンストラクターと <xref:System.AppDomainManager.InitializeNewDomain%2A> メソッドに読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-115">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ee6ce-116">このクラスには、リンク確認要求とクラスレベルでの継承要求が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-116">This class contains a link demand and an inheritance demand at the class level.</span></span> <span data-ttu-id="ee6ce-117"><xref:System.Security.SecurityException> は、直前の呼び出し元または派生クラスにインフラストラクチャアクセス許可がない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-117">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have infrastructure permission.</span></span> <span data-ttu-id="ee6ce-118">セキュリティ要求の詳細については、「[リンク](/dotnet/framework/misc/link-demands)確認要求と[継承の要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-118">For details about security demands, see [Link Demands](/dotnet/framework/misc/link-demands) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee6ce-119">次の例は、<xref:System.AppDomainManager>の非常に単純な実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-119">The following example shows a very simple implementation of <xref:System.AppDomainManager>.</span></span>  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ee6ce-120">呼び出し元に、正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-120">The caller does not have the correct permissions.</span></span> <span data-ttu-id="ee6ce-121">「必要条件」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-121">See the Requirements section.</span></span></exception>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ee6ce-122"><see cref="T:System.AppDomainManager" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-122">Initializes a new instance of the <see cref="T:System.AppDomainManager" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ee6ce-123">`FullTrust`付与されたアセンブリ (グローバルアセンブリキャッシュ内のアセンブリ、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> メソッドで `fullTrustAssemblies` として指定されたアセンブリなど) だけが <xref:System.AppDomainManager.%23ctor%2A> コンストラクターと <xref:System.AppDomainManager.InitializeNewDomain%2A> メソッドに読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-123">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee6ce-124">ドメインのアドインおよびマニフェストに基づくアプリケーションのアクティベーションを処理するアプリケーション アクティベーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-124">Gets the application activator that handles the activation of add-ins and manifest-based applications for the domain.</span></span></summary>
        <value><span data-ttu-id="ee6ce-125">アプリケーション アクティベーター。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-125">The application activator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee6ce-126">すべてのアドインとマニフェストベースのアプリケーションアクティベーション呼び出しがルーティングされる各 <xref:System.AppDomain> には、<xref:System.Runtime.Hosting.ApplicationActivator> クラスの1つの指定されたインスタンスがあります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-126">There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all add-in and manifest-based application activation calls are routed.</span></span> <span data-ttu-id="ee6ce-127">現在の <xref:System.AppDomain> の <xref:System.AppDomainManager> には、独自のカスタム <xref:System.Runtime.Hosting.ApplicationActivator>を指定することも、既定の <xref:System.Runtime.Hosting.ApplicationActivator> のインスタンスを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-127">The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator>, or an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="ee6ce-128">セキュリティ ステータスが要求されている操作を示す <see cref="T:System.Security.SecurityState" /> のサブクラス。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-128">A subclass of <see cref="T:System.Security.SecurityState" /> that identifies the operation whose security status is requested.</span></span></param>
        <summary><span data-ttu-id="ee6ce-129">指定した操作がアプリケーション ドメイン内で許可されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-129">Indicates whether the specified operation is allowed in the application domain.</span></span></summary>
        <returns><span data-ttu-id="ee6ce-130"><paramref name="state" /> によって指定された操作をアプリケーション ドメイン内で実行することがホストで許可されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-130"><see langword="true" /> if the host allows the operation specified by <paramref name="state" /> to be performed in the application domain; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee6ce-131">このメソッドの既定の実装では `false`が返されます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-131">The default implementation of this method returns `false`.</span></span>  
  
 <span data-ttu-id="ee6ce-132">このメソッドは、分離ストレージクォータを増やすために <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> メソッドが呼び出されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-132">This method is called when the <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> method has been called to increase the isolated storage quota.</span></span> <span data-ttu-id="ee6ce-133">共通言語ランタイム (CLR) をホストするアプリケーションは、<xref:System.AppDomainManager.CheckSecuritySettings%2A> メソッドをオーバーライドして、(<xref:System.Security.SecurityState>を継承する) <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> オブジェクトに基づいてポリシーの決定を行うことができ、増加を許可または禁止できます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-133">An application that hosts the common language runtime (CLR) can override the <xref:System.AppDomainManager.CheckSecuritySettings%2A> method to perform policy decisions based on an <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> object (which inherits <xref:System.Security.SecurityState>), and can then allow or prevent the increase.</span></span> <span data-ttu-id="ee6ce-134">たとえば、ホストはエンドユーザーに対して、クォータを増やす要求を承認または拒否するように求めることができます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-134">For example, a host could prompt the end user to approve or deny the request to increase the quota.</span></span> <span data-ttu-id="ee6ce-135">ホストの <xref:System.AppDomainManager.CheckSecuritySettings%2A> の実装では、サービス拒否攻撃の可能性を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-135">The host's implementation of <xref:System.AppDomainManager.CheckSecuritySettings%2A> should take into account the possibility of denial-of-service attacks.</span></span> <span data-ttu-id="ee6ce-136">たとえば、ボタンのクリックなどのユーザーが開始したイベントからメソッドが呼び出された場合にのみ、ユーザーにプロンプトを表示する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-136">For example, it should prompt the user only if the method is called from a user-initiated event such as a button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName"><span data-ttu-id="ee6ce-137">ドメインの表示名。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-137">The friendly name of the domain.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="ee6ce-138">スタックの最上位のアクセス許可セットを設定するために、セキュリティ ポリシーを通じて割り当てられる証拠を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-138">An object that contains evidence mapped through the security policy to establish a top-of-stack permission set.</span></span></param>
        <param name="appDomainInfo"><span data-ttu-id="ee6ce-139">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-139">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="ee6ce-140">新規または既存のアプリケーション ドメインを返します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-140">Returns a new or existing application domain.</span></span></summary>
        <returns><span data-ttu-id="ee6ce-141">新規または既存のアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-141">A new or existing application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee6ce-142">`friendlyName` パラメーターによって指定された表示名は、ドメインを識別するためにユーザーインターフェイスに表示できます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-142">The friendly name, specified by the `friendlyName` parameter, can be displayed in user interfaces to identify the domain.</span></span> <span data-ttu-id="ee6ce-143">詳細については、<xref:System.AppDomain.FriendlyName%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-143">For more information, see the <xref:System.AppDomain.FriendlyName%2A> property.</span></span>  
  
 <span data-ttu-id="ee6ce-144">既定の <xref:System.AppDomainManager.CreateDomain%2A> メソッドは、protected <xref:System.AppDomainManager.CreateDomainHelper%2A> メソッドを呼び出して <xref:System.AppDomain>を作成します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-144">The default <xref:System.AppDomainManager.CreateDomain%2A> method calls the protected <xref:System.AppDomainManager.CreateDomainHelper%2A> method to create the <xref:System.AppDomain>.</span></span> <span data-ttu-id="ee6ce-145">このメソッドのオーバーライドでは、<xref:System.AppDomainManager.CreateDomainHelper%2A> メソッドを呼び出す必要はありませんが、既存のドメインを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-145">Overrides of this method do not need to call the <xref:System.AppDomainManager.CreateDomainHelper%2A> method but can return an existing domain.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ee6ce-146"><see cref="T:System.AppDomainManager" /> クラスから継承し、<see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> メソッドをオーバーライドする場合、<see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> メソッドを呼び出す前にカスタムアプリケーションドメイン初期化アクティビティを実行したり、ヘルパーメソッドをまったく呼び出したりすることはできません。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-146">When you inherit from the <see cref="T:System.AppDomainManager" /> class and override the <see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> method, you can perform custom application domain initialization activities before calling the <see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> method, or not call the helper method at all.</span></span>  <span data-ttu-id="ee6ce-147">たとえば、<paramref name="securityInfo" />として渡された証拠を変更したり、関連付けられている <see cref="T:System.AppDomainSetup" />のフィールドを更新したり、既存のドメインを再利用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-147">For example, you could modify the evidence passed in as <paramref name="securityInfo" />, update the fields of the associated <see cref="T:System.AppDomainSetup" />, or reuse an exiting domain.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName"><span data-ttu-id="ee6ce-148">ドメインの表示名。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-148">The friendly name of the domain.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="ee6ce-149">スタックの最上位のアクセス許可セットを設定するために、セキュリティ ポリシーを通じて割り当てられる証拠を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-149">An object that contains evidence mapped through the security policy to establish a top-of-stack permission set.</span></span></param>
        <param name="appDomainInfo"><span data-ttu-id="ee6ce-150">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-150">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="ee6ce-151">アプリケーション ドメインを作成するためのヘルパー メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-151">Provides a helper method to create an application domain.</span></span></summary>
        <returns><span data-ttu-id="ee6ce-152">新しく作成されたアプリケーション ドメイン。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-152">A newly created application domain.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee6ce-153">この保護されたヘルパーメソッドは、新しいアプリケーションドメインの作成を処理します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-153">This protected helper method handles the creation of a new application domain.</span></span>  
  
 <span data-ttu-id="ee6ce-154">`friendlyName` パラメーターによって指定されたこのフレンドリ名は、ドメインを識別するためにユーザーインターフェイスに表示できます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-154">This friendly name, specified by the `friendlyName` parameter, can be displayed in user interfaces to identify the domain.</span></span> <span data-ttu-id="ee6ce-155">詳細については、<xref:System.AppDomain.FriendlyName%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-155">For more information, see the <xref:System.AppDomain.FriendlyName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ee6ce-156"><paramref name="friendlyName" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-156"><paramref name="friendlyName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee6ce-157">アプリケーションの入力アセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-157">Gets the entry assembly for an application.</span></span></summary>
        <value><span data-ttu-id="ee6ce-158">アプリケーションの入力アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-158">The entry assembly for the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee6ce-159">アプリケーションがマニフェストによってアクティブ化されるアプリケーションである場合、エントリアセンブリはアプリケーションマニフェストから決定されます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-159">If the application is a manifest-activated application, the entry assembly is determined from the application manifest.</span></span> <span data-ttu-id="ee6ce-160">アプリケーションがアクティブ化されていない場合、エントリアセンブリは既定のアプリケーションドメインのプロセス実行可能ファイルになります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-160">If the application is not manifest activated, the entry assembly is the process executable in the default application domain.</span></span> <span data-ttu-id="ee6ce-161">他のアプリケーションドメインでは、entry アセンブリは、<xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> メソッドによって実行された最初の実行可能ファイルです。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-161">In other application domains, the entry assembly is the first executable that was executed by the <xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee6ce-162">実行コンテキストのフローを管理する、ホスト実行コンテキスト マネージャーを取得します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-162">Gets the host execution context manager that manages the flow of the execution context.</span></span></summary>
        <value><span data-ttu-id="ee6ce-163">ホスト実行コンテキスト マネージャー。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-163">The host execution context manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee6ce-164">このプロパティを使用すると、ホストは、非同期呼び出しの間に実行コンテキストのフローに参加できる <xref:System.Threading.HostExecutionContextManager> を提供できます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-164">This property allows a host to provide a <xref:System.Threading.HostExecutionContextManager> that can participate in the flow of the execution context across asynchronous calls.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee6ce-165">アプリケーション ドメインのセキュリティの決定に関与するホスト セキュリティ マネージャーを取得します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-165">Gets the host security manager that participates in security decisions for the application domain.</span></span></summary>
        <value><span data-ttu-id="ee6ce-166">ホスト セキュリティ マネージャー。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-166">The host security manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee6ce-167">このプロパティを使用すると、ホストは、アプリケーションドメインのセキュリティの決定に参加するための <xref:System.Security.HostSecurityManager> を提供できます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-167">This property allows a host to provide a <xref:System.Security.HostSecurityManager> to participate in the security decisions for the application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee6ce-168">次の例は、カスタムアプリケーションドメインマネージャーの <xref:System.AppDomainManager.HostSecurityManager%2A> プロパティのオーバーライドを示しています。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-168">The following example shows an override of the <xref:System.AppDomainManager.HostSecurityManager%2A> property for a custom application domain manager.</span></span> <span data-ttu-id="ee6ce-169">このコード例は、<xref:System.AppDomainManager> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-169">This code example is part of a larger example provided for the <xref:System.AppDomainManager> class.</span></span>  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ee6ce-170">カスタム アプリケーション ドメイン マネージャーの初期化フラグを取得します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-170">Gets the initialization flags for custom application domain managers.</span></span></summary>
        <value><span data-ttu-id="ee6ce-171">実行する初期化操作を表す列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-171">A bitwise combination of the enumeration values that describe the initialization action to perform.</span></span> <span data-ttu-id="ee6ce-172">既定では、 <see cref="F:System.AppDomainManagerInitializationOptions.None" />です。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-172">The default is <see cref="F:System.AppDomainManagerInitializationOptions.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo"><span data-ttu-id="ee6ce-173">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-173">An object that contains application domain initialization information.</span></span></param>
        <summary><span data-ttu-id="ee6ce-174">新しいアプリケーション ドメインを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-174">Initializes the new application domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee6ce-175">ASP.NET でアプリケーションドメインを初期化する場合は、このメソッドを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-175">Do not use this method to initialize an application domain in ASP.NET.</span></span> <span data-ttu-id="ee6ce-176">ASP.NET では、構成はホストによって処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-176">In ASP.NET, configuration must be handled by the host.</span></span> <span data-ttu-id="ee6ce-177">このメソッドを使用してアプリケーションドメインを初期化すると、ホストはアプリケーションドメインを初期化しようとしたときに <xref:System.InvalidOperationException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-177">If you use this method to initialize the application domain, the host throws <xref:System.InvalidOperationException> when it attempts to initialize the application domain.</span></span> <span data-ttu-id="ee6ce-178">例外メッセージは、初期化が既に行われていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-178">The exception message indicates that initialization has already occurred.</span></span>  
  
 <span data-ttu-id="ee6ce-179">このメソッドは、コンストラクターの直後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-179">This method is called immediately after the constructor.</span></span> <span data-ttu-id="ee6ce-180">既定の <xref:System.AppDomainManager.InitializeNewDomain%2A> 実装では、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-180">The default <xref:System.AppDomainManager.InitializeNewDomain%2A> implementation does nothing.</span></span>  <span data-ttu-id="ee6ce-181">カスタム実装では、内部クラスとデリゲートを設定したり、アンマネージホストインターフェイスを使用してインターフェイスを設定したり、新しい <xref:System.AppDomain>のイベントハンドラーを設定したりできます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-181">A custom implementation can set up internal classes and delegates, set up an interface with the unmanaged host interface, or set up event handlers for the new <xref:System.AppDomain>.</span></span>  
  
 <span data-ttu-id="ee6ce-182">また、アドインのアクティブ化の場合、カスタム実装では、現在の <xref:System.AppDomain> をターゲットアプリケーションドメインとして識別できます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-182">Also, for add-in activations, a custom implementation could identify the current <xref:System.AppDomain> as the target application domain.</span></span>  
  
 <span data-ttu-id="ee6ce-183">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このメソッドを使用して、アプリケーションの起動時に既定のアプリケーションドメインのサンドボックスを作成したり、新しいアプリケーションドメインのサンドボックスを変更したりできます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-183">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you can use this method to sandbox the default application domain at application startup, or to modify the sandbox of a new application domain.</span></span> <span data-ttu-id="ee6ce-184">これを行うには、アプリケーションドメインを初期化する前に、`appDomainInfo`の <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> プロパティに割り当てられている <xref:System.Security.Policy.ApplicationTrust> オブジェクトの <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> と <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> のプロパティを調整します。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-184">To do this, adjust the <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> and <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> properties on the <xref:System.Security.Policy.ApplicationTrust> object that is assigned to the <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> property of `appDomainInfo`, before you initialize the application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ee6ce-185">`FullTrust`付与されたアセンブリ (グローバルアセンブリキャッシュ内のアセンブリ、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> メソッドで `fullTrustAssemblies` として指定されたアセンブリなど) だけが <xref:System.AppDomainManager.%23ctor%2A> コンストラクターと <xref:System.AppDomainManager.InitializeNewDomain%2A> メソッドに読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-185">Only assemblies granted `FullTrust`, such as assemblies in the global assembly cache or identified as `fullTrustAssemblies` in the <xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> method can be loaded in the  <xref:System.AppDomainManager.%23ctor%2A> constructor and the <xref:System.AppDomainManager.InitializeNewDomain%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee6ce-186">次の例は、カスタムアプリケーションドメインマネージャーの <xref:System.AppDomainManager.InitializeNewDomain%2A> メソッドをオーバーライドする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-186">The following example shows an override of the <xref:System.AppDomainManager.InitializeNewDomain%2A> method for a custom application domain manager.</span></span> <span data-ttu-id="ee6ce-187">このコード例は、<xref:System.AppDomainManager> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="ee6ce-187">This code example is part of a larger example provided for the <xref:System.AppDomainManager> class.</span></span>  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
