<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e017df2c7aa38fb463cb675a70e3181f5284f6ac" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83929729" /></Metadata><TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>アンマネージド ホストに対応するマネージド ホストを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  ASP.NET でアプリケーションドメインを構成するために <xref:System.AppDomainManager> を使用しないでください。 ASP.NET では、構成はホストによって処理される必要があります。  
  
 <xref:System.AppDomainManager> クラスを実装すると、新しいアプリケーションドメインの作成にホストアプリケーションを参加させることができます。 既定の <xref:System.AppDomainManager>を置き換えるには、APPDOMAIN_MANAGER_ASM 環境変数と APPDOMAIN_MANAGER_TYPE 環境変数で置換 <xref:System.AppDomainManager> のアセンブリと型を特定するか、構成ファイルで[\<appDomainManagerAssembly >](/dotnet/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element)および[\<appDomainManagerType >](/dotnet/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element)要素を使用します。 アセンブリは完全に信頼されている必要があり、グローバルアセンブリキャッシュまたは開始アプリケーションのディレクトリに格納されている必要があります。 型とアセンブリの名前は、環境変数で完全修飾されている必要があります。 次に例を示します。  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  <xref:System.AppDomainManager> のサブクラスを含むアセンブリが条件付き <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) 属性でマークされているアセンブリに依存している場合は、アプリケーションドメインの作成に使用する <xref:System.AppDomainSetup> の <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> プロパティに渡すアセンブリを一覧に含める必要があります。 それ以外の場合、条件付き APTCA 属性でマークされているアセンブリは無効になります。  
  
 <xref:System.AppDomainManager> は、アンマネージホストに相当するマネージドです。 <xref:System.AppDomainManager> オブジェクトは、プロセス内の新しいアプリケーションドメインの作成に参加し、他のマネージコードを実行する前に新しい <xref:System.AppDomain> をカスタマイズできます。 <xref:System.AppDomainManager> では、共通言語ランタイムの実行の他の側面に参加するホストマネージャーを指定することもできます。 たとえば、<xref:System.AppDomainManager> は、アプリケーションドメインのセキュリティの決定に関与する <xref:System.Security.HostSecurityManager> オブジェクトを識別できます。  
  
> [!NOTE]
>  `FullTrust`付与されたアセンブリ (グローバルアセンブリキャッシュ内のアセンブリ、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> メソッドで `fullTrustAssemblies` として指定されたアセンブリなど) だけが <xref:System.AppDomainManager.%23ctor%2A> コンストラクターと <xref:System.AppDomainManager.InitializeNewDomain%2A> メソッドに読み込むことができます。  
  
> [!NOTE]
>  このクラスには、リンク確認要求とクラスレベルでの継承要求が含まれています。 <xref:System.Security.SecurityException> は、直前の呼び出し元または派生クラスにインフラストラクチャアクセス許可がない場合にスローされます。 セキュリティ要求の詳細については、「[リンク](/dotnet/framework/misc/link-demands)確認要求と[継承の要求](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次の例は、<xref:System.AppDomainManager>の非常に単純な実装を示しています。  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException">呼び出し元に、正しいアクセス許可がありません。 「必要条件」のセクションを参照してください。</exception>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.AppDomainManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  `FullTrust`付与されたアセンブリ (グローバルアセンブリキャッシュ内のアセンブリ、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> メソッドで `fullTrustAssemblies` として指定されたアセンブリなど) だけが <xref:System.AppDomainManager.%23ctor%2A> コンストラクターと <xref:System.AppDomainManager.InitializeNewDomain%2A> メソッドに読み込むことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドメインのアドインおよびマニフェストに基づくアプリケーションのアクティベーションを処理するアプリケーション アクティベーターを取得します。</summary>
        <value>アプリケーション アクティベーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべてのアドインとマニフェストベースのアプリケーションアクティベーション呼び出しがルーティングされる各 <xref:System.AppDomain> には、<xref:System.Runtime.Hosting.ApplicationActivator> クラスの1つの指定されたインスタンスがあります。 現在の <xref:System.AppDomain> の <xref:System.AppDomainManager> には、独自のカスタム <xref:System.Runtime.Hosting.ApplicationActivator>を指定することも、既定の <xref:System.Runtime.Hosting.ApplicationActivator> のインスタンスを作成することもできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state">セキュリティ ステータスが要求されている操作を示す <see cref="T:System.Security.SecurityState" /> のサブクラス。</param>
        <summary>指定した操作がアプリケーション ドメイン内で許可されているかどうかを示します。</summary>
        <returns><paramref name="state" /> によって指定された操作をアプリケーション ドメイン内で実行することがホストで許可されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの既定の実装では `false`が返されます。  
  
 このメソッドは、分離ストレージクォータを増やすために <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType> メソッドが呼び出されたときに呼び出されます。 共通言語ランタイム (CLR) をホストするアプリケーションは、<xref:System.AppDomainManager.CheckSecuritySettings%2A> メソッドをオーバーライドして、(<xref:System.Security.SecurityState>を継承する) <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> オブジェクトに基づいてポリシーの決定を行うことができ、増加を許可または禁止できます。 たとえば、ホストはエンドユーザーに対して、クォータを増やす要求を承認または拒否するように求めることができます。 ホストの <xref:System.AppDomainManager.CheckSecuritySettings%2A> の実装では、サービス拒否攻撃の可能性を考慮する必要があります。 たとえば、ボタンのクリックなどのユーザーが開始したイベントからメソッドが呼び出された場合にのみ、ユーザーにプロンプトを表示する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">ドメインの表示名。</param>
        <param name="securityInfo">スタックの最上位のアクセス許可セットを設定するために、セキュリティ ポリシーを通じて割り当てられる証拠を格納するオブジェクト。</param>
        <param name="appDomainInfo">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</param>
        <summary>新規または既存のアプリケーション ドメインを返します。</summary>
        <returns>新規または既存のアプリケーション ドメイン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `friendlyName` パラメーターによって指定された表示名は、ドメインを識別するためにユーザーインターフェイスに表示できます。 詳細については、<xref:System.AppDomain.FriendlyName%2A> プロパティを参照してください。  
  
 既定の <xref:System.AppDomainManager.CreateDomain%2A> メソッドは、protected <xref:System.AppDomainManager.CreateDomainHelper%2A> メソッドを呼び出して <xref:System.AppDomain>を作成します。 このメソッドのオーバーライドでは、<xref:System.AppDomainManager.CreateDomainHelper%2A> メソッドを呼び出す必要はありませんが、既存のドメインを返すことができます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.AppDomainManager" /> クラスから継承し、<see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> メソッドをオーバーライドする場合、<see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" /> メソッドを呼び出す前にカスタムアプリケーションドメイン初期化アクティビティを実行したり、ヘルパーメソッドをまったく呼び出したりすることはできません。  たとえば、<paramref name="securityInfo" />として渡された証拠を変更したり、関連付けられている <see cref="T:System.AppDomainSetup" />のフィールドを更新したり、既存のドメインを再利用したりすることができます。</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">ドメインの表示名。</param>
        <param name="securityInfo">スタックの最上位のアクセス許可セットを設定するために、セキュリティ ポリシーを通じて割り当てられる証拠を格納するオブジェクト。</param>
        <param name="appDomainInfo">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</param>
        <summary>アプリケーション ドメインを作成するためのヘルパー メソッドを提供します。</summary>
        <returns>新しく作成されたアプリケーション ドメイン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この保護されたヘルパーメソッドは、新しいアプリケーションドメインの作成を処理します。  
  
 `friendlyName` パラメーターによって指定されたこのフレンドリ名は、ドメインを識別するためにユーザーインターフェイスに表示できます。 詳細については、<xref:System.AppDomain.FriendlyName%2A> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="friendlyName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの入力アセンブリを取得します。</summary>
        <value>アプリケーションの入力アセンブリ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションがマニフェストによってアクティブ化されるアプリケーションである場合、エントリアセンブリはアプリケーションマニフェストから決定されます。 アプリケーションがアクティブ化されていない場合、エントリアセンブリは既定のアプリケーションドメインのプロセス実行可能ファイルになります。 他のアプリケーションドメインでは、entry アセンブリは、<xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType> メソッドによって実行された最初の実行可能ファイルです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行コンテキストのフローを管理する、ホスト実行コンテキスト マネージャーを取得します。</summary>
        <value>ホスト実行コンテキスト マネージャー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、ホストは、非同期呼び出しの間に実行コンテキストのフローに参加できる <xref:System.Threading.HostExecutionContextManager> を提供できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインのセキュリティの決定に関与するホスト セキュリティ マネージャーを取得します。</summary>
        <value>ホスト セキュリティ マネージャー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用すると、ホストは、アプリケーションドメインのセキュリティの決定に参加するための <xref:System.Security.HostSecurityManager> を提供できます。  
  
   
  
## Examples  
 次の例は、カスタムアプリケーションドメインマネージャーの <xref:System.AppDomainManager.HostSecurityManager%2A> プロパティのオーバーライドを示しています。 このコード例は、<xref:System.AppDomainManager> クラス用に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム アプリケーション ドメイン マネージャーの初期化フラグを取得します。</summary>
        <value>実行する初期化操作を表す列挙値のビットごとの組み合わせ。 既定では、 <see cref="F:System.AppDomainManagerInitializationOptions.None" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</param>
        <summary>新しいアプリケーション ドメインを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  ASP.NET でアプリケーションドメインを初期化する場合は、このメソッドを使用しないでください。 ASP.NET では、構成はホストによって処理される必要があります。 このメソッドを使用してアプリケーションドメインを初期化すると、ホストはアプリケーションドメインを初期化しようとしたときに <xref:System.InvalidOperationException> をスローします。 例外メッセージは、初期化が既に行われていることを示します。  
  
 このメソッドは、コンストラクターの直後に呼び出されます。 既定の <xref:System.AppDomainManager.InitializeNewDomain%2A> 実装では、何も行われません。  カスタム実装では、内部クラスとデリゲートを設定したり、アンマネージホストインターフェイスを使用してインターフェイスを設定したり、新しい <xref:System.AppDomain>のイベントハンドラーを設定したりできます。  
  
 また、アドインのアクティブ化の場合、カスタム実装では、現在の <xref:System.AppDomain> をターゲットアプリケーションドメインとして識別できます。  
  
 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このメソッドを使用して、アプリケーションの起動時に既定のアプリケーションドメインのサンドボックスを作成したり、新しいアプリケーションドメインのサンドボックスを変更したりできます。 これを行うには、アプリケーションドメインを初期化する前に、`appDomainInfo`の <xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType> プロパティに割り当てられている <xref:System.Security.Policy.ApplicationTrust> オブジェクトの <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> と <xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A> のプロパティを調整します。  
  
> [!NOTE]
>  `FullTrust`付与されたアセンブリ (グローバルアセンブリキャッシュ内のアセンブリ、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType> メソッドで `fullTrustAssemblies` として指定されたアセンブリなど) だけが <xref:System.AppDomainManager.%23ctor%2A> コンストラクターと <xref:System.AppDomainManager.InitializeNewDomain%2A> メソッドに読み込むことができます。  
  
   
  
## Examples  
 次の例は、カスタムアプリケーションドメインマネージャーの <xref:System.AppDomainManager.InitializeNewDomain%2A> メソッドをオーバーライドする方法を示しています。 このコード例は、<xref:System.AppDomainManager> クラス用に用意されている大規模な例の一部です。  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
