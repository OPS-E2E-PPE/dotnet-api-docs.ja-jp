<Type Name="TimeZone" FullName="System.TimeZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e7d83250113d36e7c718789e9d32d8b6d8b4fd8" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82285070" /></Metadata><TypeSignature Language="C#" Value="public abstract class TimeZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TimeZone extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.TimeZone" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TimeZone" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZone abstract" />
  <TypeSignature Language="F#" Value="type TimeZone = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TimeZone extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.Obsolete("System.TimeZone has been deprecated.  Please investigate the use of System.TimeZoneInfo instead.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>タイム ゾーンを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 タイムゾーンは、同じ標準時間が使用される地理的領域です。  
  
> [!IMPORTANT]
>  可能な限り、<xref:System.TimeZone> クラスではなく、<xref:System.TimeZoneInfo> クラスを使用してください。  
  
 <xref:System.TimeZone> クラスを使用して、現在のタイムゾーンに関する情報を取得し、時刻を現地時刻から世界協定時刻 (UTC) に、またはその逆に変換することができます。 ただし、<xref:System.TimeZone> クラスを使用してローカルゾーン以外のタイムゾーンを表したり、あるタイムゾーンから別のタイムゾーンへの日付と時刻の変換を処理したりすることはできません。 このためには、<xref:System.TimeZoneInfo> クラスを使用します。 このクラスを使用して、ローカルシステムで定義されているタイムゾーンの情報を取得したり、カスタムタイムゾーンを作成したり、タイムゾーン間で時刻を変換したりできます。  
  
 <xref:System.TimeZone> クラスは、ローカルタイムゾーンの夏時間調整規則を1つだけサポートします。 その結果、<xref:System.TimeZone> クラスは、最新の調整規則が有効になっている期間に限り、夏時間情報を正確に報告したり、UTC と現地時刻の間で変換したりできます。 これに対し、<xref:System.TimeZoneInfo> クラスは複数の調整規則をサポートしています。これにより、履歴のタイムゾーンデータを操作できるようになります。  
  
   
  
## Examples  
 次の例では、選択した `TimeZone` クラスの要素を参照して表示します。  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see langword="abstract" /> メンバー (Visual Basic で <see langword="MustOverride" /> マークされたメンバー) の実装に加えて、<see cref="T:System.TimeZone" /> から派生したクラスが <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> メソッドの既定の動作をオーバーライドすることが重要です。 これは、.NET Framework バージョン2.0 での <see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> の既定の動作が <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />の呼び出しに依存していないためです (.NET Framework バージョン1.0 と 1.1)。  詳細については、<see cref="M:System.TimeZone.ToLocalTime(System.DateTime)" /> メソッドを参照してください。</para></block>
    <altmember cref="T:System.DateTime" />
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TimeZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.TimeZone" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZone CurrentTimeZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZone CurrentTimeZone" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.CurrentTimeZone" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentTimeZone As TimeZone" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZone ^ CurrentTimeZone { TimeZone ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeZone : TimeZone" Usage="System.TimeZone.CurrentTimeZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZone</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のコンピューターのタイム ゾーンを取得します。</summary>
        <value>現在のローカル タイム ゾーンを表す <see cref="T:System.TimeZone" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZone.CurrentTimeZone%2A> プロパティは、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> プロパティに対応します。 可能な限り、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> プロパティを使用してください。  
  
   
  
## Examples  
 次の例では、`CurrentTimeZone` プロパティを参照し、ローカルタイムゾーンの標準時間と夏時間の名前を表示します。  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>ローカルタイムゾーンのデータは、タイムゾーン情報を取得するために <see cref="P:System.TimeZone.CurrentTimeZone" /> を最初に使用した後にキャッシュされます。 その後、システムのローカルタイムゾーンが変更された場合、<see cref="P:System.TimeZone.CurrentTimeZone" /> プロパティにはこの変更は反映されません。 アプリケーションの実行中にタイムゾーンの変更を処理する必要がある場合は、<see cref="T:System.TimeZoneInfo" /> クラスを使用して、その <see cref="M:System.TimeZoneInfo.ClearCachedData" /> メソッドを呼び出します。</para></block>
        <altmember cref="P:System.TimeZoneInfo.Local" />
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public abstract string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZone.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>夏時間のタイム ゾーン名を取得します。</summary>
        <value>夏時間のタイム ゾーン名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 夏時間がタイムゾーンで使用されていない場合は、空の文字列 ("") が返されます。  
  
 <xref:System.TimeZone.DaylightName%2A> プロパティは、<xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> プロパティに対応します。 可能な限り、<xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=nameWithType> プロパティを使用してください。  
  
   
  
## Examples  
 次の例では、現在のタイムゾーンの `DaylightName` プロパティを参照して表示します。  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.DaylightName" />
      </Docs>
    </Member>
    <Member MemberName="GetDaylightChanges">
      <MemberSignature Language="C#" Value="public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.DaylightTime GetDaylightChanges(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDaylightChanges (year As Integer) As DaylightTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Globalization::DaylightTime ^ GetDaylightChanges(int year);" />
      <MemberSignature Language="F#" Value="abstract member GetDaylightChanges : int -&gt; System.Globalization.DaylightTime" Usage="timeZone.GetDaylightChanges year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.DaylightTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">夏時間の期間が適用される年。</param>
        <summary>特定年度の夏時間の期間を返します。</summary>
        <returns><see cref="T:System.Globalization.DaylightTime" /> の夏時間の開始日と終了日を格納している <paramref name="year" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1年あたり1つの夏時間期間のみがサポートされています。  
  
 夏時間が現在のタイムゾーンで使用されていない場合、戻り値は <xref:System.Globalization.DaylightTime> オブジェクトで、<xref:System.Globalization.DaylightTime.Start%2A> と <xref:System.Globalization.DaylightTime.End%2A> の値は <xref:System.DateTime.MinValue?displayProperty=nameWithType>、<xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=nameWithType> の値は0タイマー刻みに初期化された <xref:System.TimeSpan> になります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="year" /> が 1 未満であるか、または 9999 を超えています。</exception>
        <block subset="none" type="usage"><para><see cref="T:System.TimeZone" /> クラスでサポートされる夏時間調整規則は1つだけなので、調整規則が実際にその年に適用されるかどうかに関係なく、<see cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" /> メソッドは現在の調整規則を任意の年に適用します。 オペレーティングシステム自体に特定の年の正確なデータがあると仮定すると、<see cref="M:System.TimeZoneInfo.GetAdjustmentRules" /> メソッドによって返される <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> オブジェクトの配列を操作することにより、より正確な結果を得ることができます。 <see cref="P:System.Globalization.DaylightTime.Start" />、<see cref="P:System.Globalization.DaylightTime.End" />、および <see cref="P:System.Globalization.DaylightTime.Delta" /> の各プロパティは、<see cref="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />、<see cref="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />、および <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> の各プロパティに対応しています。</para></block>
        <altmember cref="M:System.TimeZoneInfo.GetAdjustmentRules" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public abstract TimeSpan GetUtcOffset (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUtcOffset (time As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract TimeSpan GetUtcOffset(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZone.GetUtcOffset time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">日時の値。</param>
        <summary>指定した現地時間の世界協定時刻 (UTC : Coordinated Universal Time) オフセットを返します。</summary>
        <returns><paramref name="time" /> からの世界協定時刻 (UTC) オフセット。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、`time` パラメーターと世界協定時刻 (UTC) との間のオフセット (差) を返します。 つまり、  
  
 `time` = UTC + オフセット  
  
 メソッドは、<xref:System.DateTime.Kind%2A> プロパティに基づいて、`time` のタイムゾーンを解釈します。 <xref:System.DateTime.Kind%2A> プロパティの値が <xref:System.DateTimeKind.Local?displayProperty=nameWithType> または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>の場合、メソッドはローカルタイムゾーンのオフセットを返します。 <xref:System.DateTime.Kind%2A> プロパティの値が <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>の場合、メソッドは <xref:System.TimeSpan.Zero?displayProperty=nameWithType>と等しいオフセットを返します。  
  
 ローカルタイムゾーンが夏時間を監視している場合、<xref:System.TimeZone.GetUtcOffset%2A> は、ローカルタイムゾーンのオフセットを決定するときに、現在の調整規則を `time` に適用します。 つまり、<xref:System.TimeZone.GetUtcOffset%2A> によって返されるオフセットは、`time` がタイムゾーンの標準時間と夏時間のどちらに該当するかを表します。  
  
> [!NOTE]
>  <xref:System.TimeZone.GetUtcOffset%2A> メソッドは、ローカルタイムゾーンの現在の夏時間調整規則のみを認識します。 その結果、最新の調整規則が有効になっている期間中のみ、現地時刻の UTC オフセットが正確に返されることが保証されます。 `time` が前の調整規則の対象となる過去の日付と時刻の値の場合、不正確な結果が返される可能性があります。  
  
 <xref:System.TimeZone.GetUtcOffset%2A> メソッドは、<xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> メソッドに対応しています。 可能な限り、<xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=nameWithType> メソッドを使用してください。  
  
 `time` によって表される日付と時刻の値と、この値の UTC からのオフセットは密結合されていないため、ローカルまたは未指定の日付と時刻の値は、異なるコンピューターで実行される場合や、異なるタイムゾーンで同じコンピューター上で実行される場合に、異なるオフセット値を返すことがあります。 この動作が望ましくない場合は、代わりに <xref:System.DateTimeOffset> 値を使用します。 <xref:System.DateTimeOffset> データ型は、日付と時刻の値を UTC からのオフセットと密に結合します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した日付と時刻が、夏時間の期間内かどうかを示す値を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public virtual bool IsDaylightSavingTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDaylightSavingTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDaylightSavingTime (time As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDaylightSavingTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member IsDaylightSavingTime : DateTime -&gt; bool&#xA;override this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZone.IsDaylightSavingTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">日付と時刻。</param>
        <summary>指定した日付と時刻が、夏時間の期間内かどうかを示す値を返します。</summary>
        <returns><see langword="true" /> が夏時間の期間内である場合は <paramref name="time" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 夏時間期間が適用される年は、`time` パラメーターから派生します。  
  
 <xref:System.TimeZone> クラスは1つの夏時間調整規則をサポートしているため、<xref:System.TimeZone.IsDaylightSavingTime%28System.DateTime%29> メソッドは、調整規則がその日付に対して有効であったかどうかに関係なく、現在の調整規則を任意の日付に適用します。 オペレーティングシステム自体に正確な歴史的な夏時間データがあると仮定すると、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> 方法を使用してより正確な結果を得ることができます。 可能な限り、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> メソッドを使用してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDaylightSavingTime(valuetype System.DateTime time, class System.Globalization.DaylightTime daylightTimes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDaylightSavingTime (time As DateTime, daylightTimes As DaylightTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDaylightSavingTime(DateTime time, System::Globalization::DaylightTime ^ daylightTimes);" />
      <MemberSignature Language="F#" Value="static member IsDaylightSavingTime : DateTime * System.Globalization.DaylightTime -&gt; bool" Usage="System.TimeZone.IsDaylightSavingTime (time, daylightTimes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="daylightTimes" Type="System.Globalization.DaylightTime" />
      </Parameters>
      <Docs>
        <param name="time">日付と時刻。</param>
        <param name="daylightTimes">夏時間の期間。</param>
        <summary>指定した日付と時刻が、指定した夏時間の期間内かどうかを示す値を返します。</summary>
        <returns><see langword="true" /> が <paramref name="time" /> 内の場合は <paramref name="daylightTimes" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> メソッドは、<xref:System.TimeZone.IsDaylightSavingTime%2A> メソッドのこのオーバーロードと同じ機能を提供します。 可能な限り、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> メソッドを使用してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="daylightTimes" /> が <see langword="null" /> です。</exception>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public abstract string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZone.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZone.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>標準タイム ゾーン名を取得します。</summary>
        <value>標準タイム ゾーン名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.TimeZone.StandardName%2A> プロパティは、<xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> プロパティに対応します。 可能な限り、<xref:System.TimeZoneInfo.StandardName%2A?displayProperty=nameWithType> プロパティを使用してください。  
  
   
  
## Examples  
 次の例では、現在のタイムゾーンの `StandardName` プロパティを参照して表示します。  
  
 [!code-cpp[System.TimeZone.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.TimeZone.Class/CPP/tzclass.cpp#1)]
 [!code-csharp[System.TimeZone.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.Class/CS/tzclass.cs#1)]
 [!code-vb[System.TimeZone.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.Class/VB/tzclass.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">このプロパティを <see langword="null" /> に設定しようとしました。</exception>
        <altmember cref="P:System.TimeZoneInfo.StandardName" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToLocalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToLocalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToLocalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToLocalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToLocalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToLocalTime : DateTime -&gt; DateTime&#xA;override this.ToLocalTime : DateTime -&gt; DateTime" Usage="timeZone.ToLocalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">世界協定時刻 (UTC: Coordinated Universal Time)。</param>
        <summary>指定した日付と時刻の値に対応する現地時間を返します。</summary>
        <returns><see cref="T:System.DateTime" /> に対応する現地時間の値を持つ <paramref name="time" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表は、`time` パラメーターと、このメソッドによって返される <xref:System.DateTime> 値の関係を示しています。  
  
|`time` パラメーター|動作|戻り値|  
|----------------------|--------------|------------------|  
|世界協定時刻 (UTC) の時刻 (<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>)。|時刻を UTC から現地時刻に変換します。|<xref:System.DateTime> に対応する現地時間の値を持つ `time` オブジェクト。|  
|現地時刻 (<xref:System.DateTimeKind.Local?displayProperty=nameWithType>)。|変換は必要ありません。|`time` パラメーターによって表される同じ <xref:System.DateTime> 値。|  
|指定されていない時刻 (<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>)。|時刻が UTC であると想定し、UTC から現地時刻に変換します。|<xref:System.DateTime> に対応する現地時間の値を持つ `time` オブジェクト。|  
  
 ローカルタイムゾーンが夏時間を監視している場合、<xref:System.TimeZone.ToLocalTime%2A> は変換の実行時に現在の調整規則を `time` に適用します。  
  
> [!NOTE]
>  <xref:System.TimeZone.ToLocalTime%2A> メソッドは、ローカルタイムゾーンの現在の夏時間調整規則のみを認識します。 その結果、最新の調整規則が有効になっている期間中のみ、特定の UTC 時刻に対応する現地時刻が正確に返されることが保証されます。 `time` が前の調整規則の対象となる過去の日付と時刻の値の場合、不正確な結果が返される可能性があります。  
  
 <xref:System.TimeZone.ToLocalTime%2A> メソッドは、`destinationTimeZone` パラメーターを <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>に設定した <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> メソッドに対応しています。 可能な限り、<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=nameWithType> メソッドを使用してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>必須ではありませんが、ほとんどの場合、.NET Framework バージョン2.0 で実行されている派生クラスは、このメソッドの既定の実装をオーバーライドする必要があります。 .NET Framework バージョン1.0 および1.1 では、<see langword="ToLocalTime" /> メソッドは <see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> メソッドを呼び出し、現地時刻を返すときに夏時間に合わせて調整されています。 ただし、.NET Framework 2.0 以降では、既定の実装の動作は <paramref name="time" /> パラメーターの <see cref="P:System.DateTime.Kind" /> プロパティによって異なります。 値が <see cref="F:System.DateTimeKind.Local" />場合、このメソッドは <paramref name="time" /> を変更せずに返します。 この値が <see cref="F:System.DateTimeKind.Utc" /> または <see cref="F:System.DateTimeKind.Unspecified" />のいずれかである場合、このメソッドは <paramref name="time" /> が UTC であると想定し、<see cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" /> メソッドを呼び出さずにローカルシステム時刻に変換します。  
  
次のコードでは、<see langword="ToLocalTime" /> メソッドの既定の実装を単純にオーバーライドしています。 このコードでは、<see langword="internalTimeZone" /> 変数は、<see langword="TimeZone" /> クラスのプライベートインスタンスを表します。 
[! code-csharp[datetime.tolocaltime # 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/CS/TimeZone_ToLocalTime.cs#1)][! code-vb[datetime.tolocaltime # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone.ToLocalTime/VB/TimeZone_ToLocalTime.vb#1)]</para></block>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ToUniversalTime (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ToUniversalTime(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZone.ToUniversalTime(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToUniversalTime (time As DateTime) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ToUniversalTime(DateTime time);" />
      <MemberSignature Language="F#" Value="abstract member ToUniversalTime : DateTime -&gt; DateTime&#xA;override this.ToUniversalTime : DateTime -&gt; DateTime" Usage="timeZone.ToUniversalTime time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">日付と時刻。</param>
        <summary>指定した時刻に対応する世界協定時刻 (UTC : Coordinated Universal Time) を返します。</summary>
        <returns><see cref="T:System.DateTime" /> に対応する世界協定時刻 (UTC) の値を持つ <paramref name="time" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ローカルタイムゾーンが夏時間を監視している場合、<xref:System.TimeZone.ToUniversalTime%2A> は変換の実行時に現在の調整規則を `time` パラメーターに適用します。  
  
> [!NOTE]
>  <xref:System.TimeZone.ToUniversalTime%2A> メソッドは、ローカルタイムゾーンの現在の夏時間調整規則のみを認識します。 その結果、最新の調整規則が有効になっている期間中のみ、特定の現地時刻に対応する世界協定時刻 (UTC) が正確に返されることが保証されます。 `time` が前の調整規則の対象となる過去の日付と時刻の値の場合、不正確な結果が返される可能性があります。  
  
 `time` パラメーターがあいまいな時刻の場合、メソッドは標準時であると想定します。 (あいまいな時刻とは、標準時またはローカルタイムゾーンの夏時間にマップできる時刻です)。`time` が無効な時刻の場合は、ローカルタイムゾーンの UTC オフセットからローカル時刻を減算するだけで、UTC が返されます。 (無効な時刻とは、夏時間調整規則の適用によって存在しない時刻です)。  
  
 `time` は現在のシステムの現在のタイムゾーンに関連して解釈されるため、アプリケーションが別のコンピューターで実行されている場合や、タイムゾーンが異なる同じコンピューター上で実行されている場合は、このメソッドによって返される日付と時刻が異なる場合があります。 日付と時刻の値が単一の明確な時点を表す必要がある場合は、<xref:System.DateTimeOffset> 値を使用して現地時刻を表します。  
  
 <xref:System.TimeZone.ToUniversalTime%2A> メソッドは、<xref:System.DateTime.Kind%2A> プロパティが <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>と等しくない <xref:System.DateTime> パラメーターを持つ <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> メソッドオーバーロードに対応します。 可能な限り、<xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=nameWithType> メソッドのオーバーロードを使用してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      </Docs>
    </Member>
  </Members>
</Type>
