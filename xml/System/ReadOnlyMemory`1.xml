<Type Name="ReadOnlyMemory&lt;T&gt;" FullName="System.ReadOnlyMemory&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e3908d910c6430315057275162b4f7321aa00d9" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73384021" /></Metadata><TypeSignature Language="C#" Value="public struct ReadOnlyMemory&lt;T&gt; : IEquatable&lt;ReadOnlyMemory&lt;T&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ReadOnlyMemory`1&lt;T&gt; extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.ReadOnlyMemory`1&lt;!T&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ReadOnlyMemory`1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ReadOnlyMemory(Of T)&#xA;Implements IEquatable(Of ReadOnlyMemory(Of T))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public value class ReadOnlyMemory : IEquatable&lt;ReadOnlyMemory&lt;T&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ReadOnlyMemory&lt;'T&gt; = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.ReadOnlyMemory&lt;T&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="c0306-101">メモリの連続する領域の読み取り元となるオブジェクトの種類。</span><span class="sxs-lookup"><span data-stu-id="c0306-101">The object type from which the contiguous region of memory will be read.</span></span></typeparam>
    <summary><span data-ttu-id="c0306-102"><see cref="T:System.ReadOnlySpan`1" /> と似ていますが、メモリの隣接した領域を表します。</span><span class="sxs-lookup"><span data-stu-id="c0306-102">Represents a contiguous region of memory, similar to <see cref="T:System.ReadOnlySpan`1" />.</span></span> <span data-ttu-id="c0306-103"><see cref="T:System.ReadOnlySpan`1" /> とは異なり、これは ByRef に似た型ではありません。</span><span class="sxs-lookup"><span data-stu-id="c0306-103">Unlike <see cref="T:System.ReadOnlySpan`1" />, it is not a byref-like type.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.#ctor(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="new ReadOnlyMemory&lt;'T&gt; : 'T[] -&gt; ReadOnlyMemory&lt;'T&gt;" Usage="new System.ReadOnlyMemory&lt;'T&gt; array" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c0306-104">対象となる配列。</span><span class="sxs-lookup"><span data-stu-id="c0306-104">The target array.</span></span></param>
        <summary><span data-ttu-id="c0306-105">対象となる配列全体に新しいメモリ領域を作成します。</span><span class="sxs-lookup"><span data-stu-id="c0306-105">Creates a new memory region over the entirety of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c0306-106">`array` が `null`場合に `default` を返します。</span><span class="sxs-lookup"><span data-stu-id="c0306-106">Returns `default` when `array` is `null`.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="c0306-107"><paramref name="array" /> は共変であり、配列の型は <see langword="T[]" /> とまったく同じではありません。</span><span class="sxs-lookup"><span data-stu-id="c0306-107"><paramref name="array" /> is covariant, and the type of array is not exactly <see langword="T[]" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory (T[] array, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T[] array, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.#ctor(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (array As T(), start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory(cli::array &lt;T&gt; ^ array, int start, int length);" />
      <MemberSignature Language="F#" Value="new ReadOnlyMemory&lt;'T&gt; : 'T[] * int * int -&gt; ReadOnlyMemory&lt;'T&gt;" Usage="new System.ReadOnlyMemory&lt;'T&gt; (array, start, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c0306-108">対象となる配列。</span><span class="sxs-lookup"><span data-stu-id="c0306-108">The target array.</span></span></param>
        <param name="start"><span data-ttu-id="c0306-109">メモリ領域の開始位置を示すインデックス。</span><span class="sxs-lookup"><span data-stu-id="c0306-109">The index at which to begin the memory region.</span></span></param>
        <param name="length"><span data-ttu-id="c0306-110">メモリ領域の項目数。</span><span class="sxs-lookup"><span data-stu-id="c0306-110">The number of items in the memory region.</span></span></param>
        <summary><span data-ttu-id="c0306-111">指定された位置を開始位置とし、指定された要素数を含む、対象となる配列の一部に新しいメモリ領域を作成します。</span><span class="sxs-lookup"><span data-stu-id="c0306-111">Creates a new memory region over the portion of the target array beginning at a specified position and including a specified number of elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c0306-112">`array` が `null`場合に `default` を返します。</span><span class="sxs-lookup"><span data-stu-id="c0306-112">Returns `default` when `array` is `null`.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArrayTypeMismatchException"><span data-ttu-id="c0306-113"><paramref name="array" /> は共変であり、配列の型は <see langword="T[]" /> とまったく同じではありません。</span><span class="sxs-lookup"><span data-stu-id="c0306-113"><paramref name="array" /> is covariant, and the type of array is not exactly <see langword="T[]" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0306-114"><paramref name="start" />、<paramref name="length" />、または <paramref name="start" /> + <paramref name="length" /> では、配列の範囲外の位置を識別します。</span><span class="sxs-lookup"><span data-stu-id="c0306-114"><paramref name="start" />, <paramref name="length" />, or <paramref name="start" /> + <paramref name="length" /> identify a position outside the range of the array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Memory&lt;T&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Memory`1&lt;!T&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.CopyTo(System.Memory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Memory(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Memory&lt;T&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Memory&lt;'T&gt; -&gt; unit" Usage="readOnlyMemory.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Memory&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="c0306-115">項目のコピー先のメモリ領域。</span><span class="sxs-lookup"><span data-stu-id="c0306-115">The memory region to copy items into.</span></span></param>
        <summary><span data-ttu-id="c0306-116">読み取り専用メモリ領域の内容をコピー先のメモリ領域にコピーします。</span><span class="sxs-lookup"><span data-stu-id="c0306-116">Copies the contents of the read-only memory region into a destination memory region.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

 
 ## Remarks
 
 <span data-ttu-id="c0306-117">`source` と `destination`の場合、このメソッドは、変換先が上書きされる前に、元の値が一時的な場所にあるかのように動作します。</span><span class="sxs-lookup"><span data-stu-id="c0306-117">If `source` and `destination`, this method behaves as if the original values are in a temporary location before the destination is overwritten.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0306-118"><paramref name="destination" /> は、ソース メモリ領域よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="c0306-118"><paramref name="destination" /> is smaller than the source memory region.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static ReadOnlyMemory&lt;T&gt; Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ReadOnlyMemory`1&lt;!T&gt; Empty" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlyMemory`1.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property ReadOnlyMemory&lt;T&gt; Empty { ReadOnlyMemory&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : ReadOnlyMemory&lt;'T&gt;" Usage="System.ReadOnlyMemory&lt;'T&gt;.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0306-119">空の <see cref="T:System.ReadOnlyMemory`1" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="c0306-119">Gets an empty <see cref="T:System.ReadOnlyMemory`1" />.</span></span></summary>
        <value><span data-ttu-id="c0306-120">空の読み取り専用メモリ領域。</span><span class="sxs-lookup"><span data-stu-id="c0306-120">An empty read-only memory region.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="readOnlyMemory.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c0306-121">比較対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c0306-121">The object to compare.</span></span></param>
        <summary><span data-ttu-id="c0306-122">指定したオブジェクトが現在の読み取り専用メモリ領域と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c0306-122">Determines whether the specified object is equal to the current read-only memory region.</span></span></summary>
        <returns><span data-ttu-id="c0306-123">現在のインスタンスと <paramref name="obj" /> が等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c0306-123"><see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ReadOnlyMemory&lt;T&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ReadOnlyMemory`1&lt;!T&gt; other) cil managed" FrameworkAlternate="netcore-2.1;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.Equals(System.ReadOnlyMemory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ReadOnlyMemory(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ReadOnlyMemory&lt;T&gt; other);" FrameworkAlternate="netcore-2.1;netcore-2.2" />
      <MemberSignature Language="F#" Value="override this.Equals : ReadOnlyMemory&lt;'T&gt; -&gt; bool" Usage="readOnlyMemory.Equals other" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.ReadOnlyMemory`1&lt;!T&gt; other) cil managed" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(ReadOnlyMemory&lt;T&gt; other);" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.ReadOnlyMemory&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c0306-124">比較する読み取り専用メモリ。</span><span class="sxs-lookup"><span data-stu-id="c0306-124">The read-only memory to compare.</span></span></param>
        <summary><span data-ttu-id="c0306-125">現在のインスタンスと指定した <see cref="T:System.ReadOnlyMemory`1" /> オブジェクトが、等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c0306-125">Determines whether the current instance and a specified <see cref="T:System.ReadOnlyMemory`1" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="c0306-126">現在のインスタンスと <paramref name="other" /> が等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c0306-126"><see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

[!IMPORTANT]

<span data-ttu-id="c0306-127">メモリ領域が同じ配列を指し、長さが同じである場合、2つの <xref:System.ReadOnlyMemory%601> オブジェクトは等しいことになります。</span><span class="sxs-lookup"><span data-stu-id="c0306-127">Two <xref:System.ReadOnlyMemory%601> objects are equal if the memory regions point to the same array and have the same length.</span></span> <span data-ttu-id="c0306-128">メソッドは、内容が等しいかどうかを確認しません。</span><span class="sxs-lookup"><span data-stu-id="c0306-128">The method does not check to see if the contents are equal.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="readOnlyMemory.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.2;netcore-2.1;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0306-129">この <see cref="T:System.ReadOnlyMemory`1" /> のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="c0306-129">Returns the hash code for this <see cref="T:System.ReadOnlyMemory`1" />.</span></span></summary>
        <returns><span data-ttu-id="c0306-130">ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="c0306-130">The hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlyMemory`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.ReadOnlyMemory&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0306-131">この読み取り専用メモリ領域が空かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c0306-131">Gets a value that indicates whether this read-only memory region is empty.</span></span></summary>
        <value><span data-ttu-id="c0306-132">読み取り専用のメモリ領域が空の場合 (つまり、その <see cref="P:System.ReadOnlyMemory`1.Length" /> が0の場合) は、<see langword="true" /> ます。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="c0306-132"><see langword="true" /> if the read-only memory region is empty (that is, its <see cref="P:System.ReadOnlyMemory`1.Length" /> is 0); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlyMemory`1.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.ReadOnlyMemory&lt;'T&gt;.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0306-133">メモリ領域の項目数を取得します。</span><span class="sxs-lookup"><span data-stu-id="c0306-133">Gets the number of items in the memory region.</span></span></summary>
        <value><span data-ttu-id="c0306-134">メモリ領域の項目数。</span><span class="sxs-lookup"><span data-stu-id="c0306-134">The number of items in the memory region.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlyMemory&lt;T&gt; (ArraySegment&lt;T&gt; segment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlyMemory`1&lt;!T&gt; op_Implicit(valuetype System.ArraySegment`1&lt;!T&gt; segment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.op_Implicit(System.ArraySegment{`0})~System.ReadOnlyMemory{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (segment As ArraySegment(Of T)) As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlyMemory&lt;T&gt;(ArraySegment&lt;T&gt; segment);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : ArraySegment&lt;'T&gt; -&gt; ReadOnlyMemory&lt;'T&gt;" Usage="System.ReadOnlyMemory&lt;'T&gt;.op_Implicit segment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segment" Type="System.ArraySegment&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="segment"><span data-ttu-id="c0306-135">変換する配列セグメント。</span><span class="sxs-lookup"><span data-stu-id="c0306-135">The array segment to convert.</span></span></param>
        <summary><span data-ttu-id="c0306-136"><see cref="T:System.ArraySegment`1" /> から <see cref="T:System.ReadOnlyMemory`1" /> への暗黙の型変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="c0306-136">Defines an implicit conversion of a <see cref="T:System.ArraySegment`1" /> to a <see cref="T:System.ReadOnlyMemory`1" />.</span></span></summary>
        <returns><span data-ttu-id="c0306-137">配列セグメントの読み取り専用メモリ表示。</span><span class="sxs-lookup"><span data-stu-id="c0306-137">A read-only memory representation of the array segment.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlyMemory&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlyMemory`1&lt;!T&gt; op_Implicit(!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.op_Implicit(`0[])~System.ReadOnlyMemory{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (array As T()) As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlyMemory&lt;T&gt;(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : 'T[] -&gt; ReadOnlyMemory&lt;'T&gt;" Usage="System.ReadOnlyMemory&lt;'T&gt;.op_Implicit array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c0306-138">変換する型 T の配列。</span><span class="sxs-lookup"><span data-stu-id="c0306-138">An array of type T to convert.</span></span></param>
        <summary><span data-ttu-id="c0306-139">配列から <see cref="T:System.ReadOnlyMemory`1" /> への暗黙の型変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="c0306-139">Defines an implicit conversion of an array to a <see cref="T:System.ReadOnlyMemory`1" />.</span></span></summary>
        <returns><span data-ttu-id="c0306-140">型 T の配列の読み取り専用メモリ表示。</span><span class="sxs-lookup"><span data-stu-id="c0306-140">The read-only memory representation of the array of type T.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pin">
      <MemberSignature Language="C#" Value="public System.Buffers.MemoryHandle Pin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.MemoryHandle Pin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.Pin" />
      <MemberSignature Language="VB.NET" Value="Public Function Pin () As MemoryHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::MemoryHandle Pin();" />
      <MemberSignature Language="F#" Value="member this.Pin : unit -&gt; System.Buffers.MemoryHandle" Usage="readOnlyMemory.Pin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.MemoryHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0306-141">メモリに対してハンドルを作成します。</span><span class="sxs-lookup"><span data-stu-id="c0306-141">Creates a handle for the memory.</span></span></summary>
        <returns><span data-ttu-id="c0306-142">メモリ用のハンドル。</span><span class="sxs-lookup"><span data-stu-id="c0306-142">A handle for the memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <span data-ttu-id="c0306-143">ガベージコレクターは、返された <see cref="T:System.Buffers.MemoryHandle" /> が破棄されるまでメモリを移動せず、メモリのアドレスを取得して使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c0306-143">The garbage collector will not move the memory until the returned <see cref="T:System.Buffers.MemoryHandle" /> is disposed, enabling taking and using the memory's address.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0306-144">非プリミティブ (blittable でない) メンバーを持つインスタンスは固定できません。</span><span class="sxs-lookup"><span data-stu-id="c0306-144">An instance with nonprimitive (non-blittable) members cannot be pinned.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;T&gt; Slice (int start);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;!T&gt; Slice(int32 start) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.Slice(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Integer) As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;T&gt; Slice(int start);" />
      <MemberSignature Language="F#" Value="member this.Slice : int -&gt; ReadOnlyMemory&lt;'T&gt;" Usage="readOnlyMemory.Slice start" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="c0306-145">このスライスの開始位置を示すインデックス。</span><span class="sxs-lookup"><span data-stu-id="c0306-145">The index at which to begin this slice.</span></span></param>
        <summary><span data-ttu-id="c0306-146">指定した位置を開始位置とし、その最後まで続く、指定したメモリ領域からスライスを形成します。</span><span class="sxs-lookup"><span data-stu-id="c0306-146">Forms a slice out of the given memory region, beginning at a specified poisition and continuing to its end.</span></span></summary>
        <returns><span data-ttu-id="c0306-147">目的のスライスを表している読み取り専用メモリ領域。</span><span class="sxs-lookup"><span data-stu-id="c0306-147">A read-only memory region representing the desired slice.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0306-148"><paramref name="start" /> が 0 未満であるか、または <see cref="P:System.ReadOnlyMemory`1.Length" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="c0306-148"><paramref name="start" /> is less than 0 or greater than <see cref="P:System.ReadOnlyMemory`1.Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Slice">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;T&gt; Slice (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ReadOnlyMemory`1&lt;!T&gt; Slice(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.Slice(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Slice (start As Integer, length As Integer) As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyMemory&lt;T&gt; Slice(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Slice : int * int -&gt; ReadOnlyMemory&lt;'T&gt;" Usage="readOnlyMemory.Slice (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="c0306-149">このスライスの開始位置を示すインデックス。</span><span class="sxs-lookup"><span data-stu-id="c0306-149">The index at which to begin this slice.</span></span></param>
        <param name="length"><span data-ttu-id="c0306-150">スライスに求められる長さ。</span><span class="sxs-lookup"><span data-stu-id="c0306-150">The desired length for the slice.</span></span></param>
        <summary><span data-ttu-id="c0306-151"><paramref name="length" /> 要素の <paramref name="start" /> 位置から開始して、指定されたメモリ領域からスライスを形成します。</span><span class="sxs-lookup"><span data-stu-id="c0306-151">Forms a slice out of the given memory region starting at <paramref name="start" /> position for <paramref name="length" /> elements.</span></span></summary>
        <returns><span data-ttu-id="c0306-152">目的のスライスを表している読み取り専用メモリ領域。</span><span class="sxs-lookup"><span data-stu-id="c0306-152">A read-only memory region representing the desired slice.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0306-153"><paramref name="start" />、<paramref name="length" />、または <paramref name="start" /> + <paramref name="length" /> が現在のインスタンスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="c0306-153"><paramref name="start" />, <paramref name="length" />, or <paramref name="start" /> + <paramref name="length" /> are outside the range of the current instance.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Span">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; Span { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;!T&gt; Span" />
      <MemberSignature Language="DocId" Value="P:System.ReadOnlyMemory`1.Span" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Span As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;T&gt; Span { ReadOnlySpan&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.Span : ReadOnlySpan&lt;'T&gt;" Usage="System.ReadOnlyMemory&lt;'T&gt;.Span" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0306-154">メモリ領域から範囲を取得します。</span><span class="sxs-lookup"><span data-stu-id="c0306-154">Gets a span from the memory region.</span></span></summary>
        <value><span data-ttu-id="c0306-155">メモリスパン。</span><span class="sxs-lookup"><span data-stu-id="c0306-155">A memory span.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="member this.ToArray : unit -&gt; 'T[]" Usage="readOnlyMemory.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0306-156">メモリ範囲の内容を新しい配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="c0306-156">Copies the contents from the memory region into a new array.</span></span></summary>
        <returns><span data-ttu-id="c0306-157">配列。</span><span class="sxs-lookup"><span data-stu-id="c0306-157">An array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c0306-158">`ToArray` ヒープに割り当てられるので、通常は避けてください。</span><span class="sxs-lookup"><span data-stu-id="c0306-158">`ToArray` allocates on the heap and so should generally be avoided.</span></span> <span data-ttu-id="c0306-159">ただし、場合によっては、配列として記述された Api を使用してギャップを埋める必要があります。</span><span class="sxs-lookup"><span data-stu-id="c0306-159">However, it is sometimes necessary to bridge the gap with APIs written in terms of arrays.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="readOnlyMemory.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0306-160">この読み取り専用メモリ インスタンスの文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="c0306-160">Returns the string representation of this read-only memory instance.</span></span></summary>
        <returns><span data-ttu-id="c0306-161"><see cref="T:System.ReadOnlyMemory`1" /> の場合、メモリで指定されている文字を表す文字列の新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="c0306-161">For <see cref="T:System.ReadOnlyMemory`1" />, returns a new instance of string that represents the characters pointed to by the memory.</span></span> <span data-ttu-id="c0306-162">それ以外の場合は、型の名前と要素の数を含む <see cref="T:System.String" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="c0306-162">Otherwise, returns a <see cref="T:System.String" /> with the name of the type and the number of elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCopyTo">
      <MemberSignature Language="C#" Value="public bool TryCopyTo (Memory&lt;T&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCopyTo(valuetype System.Memory`1&lt;!T&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ReadOnlyMemory`1.TryCopyTo(System.Memory{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCopyTo (destination As Memory(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCopyTo(Memory&lt;T&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.TryCopyTo : Memory&lt;'T&gt; -&gt; bool" Usage="readOnlyMemory.TryCopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Memory&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="c0306-163">項目のコピー先のメモリ領域。</span><span class="sxs-lookup"><span data-stu-id="c0306-163">The memory region to copy items into.</span></span></param>
        <summary><span data-ttu-id="c0306-164">コピー先に読み取り専用メモリの内容のコピーを試行し、コピー操作が成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="c0306-164">Tries to copy the contents of the readonly-only memory into the destination and returns a value that indicates whether the copy operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="c0306-165">コピー操作が成功した場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="c0306-165"><see langword="true" /> if the copy operation succeeded.</span></span> <span data-ttu-id="c0306-166"><paramref name="destination" /> が現在のインスタンスより小さく、データが <paramref name="destination" /> に書き込まれない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c0306-166"><see langword="false" /> if <paramref name="destination" /> is smaller than the current instance, and no data is written to <paramref name="destination" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  


## Remarks

<span data-ttu-id="c0306-167">コピー元とコピー先が重複している場合、このメソッドは、変換先が上書きされる前に、元の値が一時的な場所にあるかのように動作します。</span><span class="sxs-lookup"><span data-stu-id="c0306-167">If the source and destination overlap, this method behaves as if the original values are in a temporary location before the destination is overwritten.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
