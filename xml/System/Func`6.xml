<Type Name="Func&lt;T1,T2,T3,T4,T5,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,T5,TResult&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55ded131b87371db9f0c0ff2a44a0f873b8e91e2" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82441499" /></Metadata><TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,in T5,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`6&lt;- T1, - T2, - T3, - T4, - T5, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`6" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, In T5, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="f565b-101">このデリゲートによってカプセル化されるメソッドの最初のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="f565b-101">The type of the first parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="f565b-102">このデリゲートによってカプセル化されるメソッドの 2 番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="f565b-102">The type of the second parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="f565b-103">このデリゲートによってカプセル化されるメソッドの 3 番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="f565b-103">The type of the third parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="f565b-104">このデリゲートによってカプセル化されるメソッドの 4 番目のパラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="f565b-104">The type of the fourth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="f565b-105">このデリゲートによってカプセル化されるメソッドの第 5 パラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="f565b-105">The type of the fifth parameter of the method that this delegate encapsulates.</span></span></typeparam>
    <typeparam name="TResult"><span data-ttu-id="f565b-106">このデリゲートによってカプセル化されるメソッドの戻り値の型。</span><span class="sxs-lookup"><span data-stu-id="f565b-106">The type of the return value of the method that this delegate encapsulates.</span></span></typeparam>
    <param name="arg1"><span data-ttu-id="f565b-107">このデリゲートによってカプセル化されるメソッドの最初のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="f565b-107">The first parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg2"><span data-ttu-id="f565b-108">このデリゲートによってカプセル化されるメソッドの 2 番目のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="f565b-108">The second parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg3"><span data-ttu-id="f565b-109">このデリゲートによってカプセル化されるメソッドの 3 番目のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="f565b-109">The third parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg4"><span data-ttu-id="f565b-110">このデリゲートによってカプセル化されるメソッドの 4 番目のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="f565b-110">The fourth parameter of the method that this delegate encapsulates.</span></span></param>
    <param name="arg5"><span data-ttu-id="f565b-111">このデリゲートによってカプセル化されるメソッドの第 5 パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f565b-111">The fifth parameter of the method that this delegate encapsulates.</span></span></param>
    <summary><span data-ttu-id="f565b-112">5 個のパラメーターを受け取って <typeparamref name="TResult" /> パラメーターに指定された型の値を返すメソッドをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="f565b-112">Encapsulates a method that has five parameters and returns a value of the type specified by the <typeparamref name="TResult" /> parameter.</span></span></summary>
    <returns><span data-ttu-id="f565b-113">このデリゲートによってカプセル化されるメソッドの戻り値。</span><span class="sxs-lookup"><span data-stu-id="f565b-113">The return value of the method that this delegate encapsulates.</span></span></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f565b-114">このデリゲートを使用すると、カスタムデリゲートを明示的に宣言しなくてもパラメーターとして渡すことができるメソッドを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="f565b-114">You can use this delegate to represent a method that can be passed as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="f565b-115">カプセル化されたメソッドは、このデリゲートで定義されているメソッドシグネチャに対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="f565b-115">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="f565b-116">つまり、カプセル化されたメソッドには5つのパラメーターが必要であり、それぞれが値によって渡され、値を返す必要があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="f565b-116">This means that the encapsulated method must have five parameters, each of which is passed to it by value, and that it must return a value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f565b-117">5個のパラメーターを持ち、`void` (または `Function`ではなく `Sub` として宣言されている Visual Basic) を返すメソッドを参照するには、代わりに汎用 <xref:System.Action%605> デリゲートを使用します。</span><span class="sxs-lookup"><span data-stu-id="f565b-117">To reference a method that has five parameters and returns `void` (or in Visual Basic, that is declared as a `Sub` rather than as a `Function`), use the generic <xref:System.Action%605> delegate instead.</span></span>  
  
 <span data-ttu-id="f565b-118"><xref:System.Func%606> デリゲートを匿名メソッドおよびラムダ式と共に使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="f565b-118">You can also use the <xref:System.Func%606> delegate with anonymous methods and lambda expressions.</span></span>  
  
 <span data-ttu-id="f565b-119">ラムダ式の基になる型は、ジェネリック `Func` デリゲートの1つです。</span><span class="sxs-lookup"><span data-stu-id="f565b-119">The underlying type of a lambda expression is one of the generic `Func` delegates.</span></span> <span data-ttu-id="f565b-120">これにより、ラムダ式をデリゲートに明示的に代入せずに、パラメーターとして渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="f565b-120">This makes it possible to pass a lambda expression as a parameter without explicitly assigning it to a delegate.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Action`5" />
  </Docs>
</Type>
