<Type Name="ActivationContext" FullName="System.ActivationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9b8539f136fe938b8277d2120f83a9ffc9bf1a6" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83968115" /></Metadata><TypeSignature Language="C#" Value="public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ActivationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActivationContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActivationContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type ActivationContext = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="801d8-101">現在のアプリケーションのアクティベーション コンテキストを識別します。</span><span class="sxs-lookup"><span data-stu-id="801d8-101">Identifies the activation context for the current application.</span></span> <span data-ttu-id="801d8-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="801d8-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="801d8-103"><xref:System.ActivationContext> クラスには、<xref:System.ApplicationIdentity> が含まれており、アプリケーションマニフェストへの内部専用アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="801d8-103">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> and provides internal-only access to the application manifest.</span></span> <span data-ttu-id="801d8-104">アクティベーションコンテキストは、マニフェストに基づくアクティベーション中に、ドメインポリシーを設定し、アプリケーションベースのセキュリティモデルを提供するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="801d8-104">The activation context is used during manifest-based activation to set up the domain policy and provide an application-based security model.</span></span> <span data-ttu-id="801d8-105">詳細については、<xref:System.Security.Policy.ApplicationSecurityManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="801d8-105">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="801d8-106">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="801d8-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="801d8-107">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="801d8-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="801d8-108">直接的に型を破棄するには、`try` / `catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="801d8-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="801d8-109">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="801d8-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="801d8-110">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="801d8-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>



## Examples
 <span data-ttu-id="801d8-111">次のコード例は、<xref:System.ActivationContext> オブジェクトを使用して、マニフェストベースのアプリケーションの <xref:System.ApplicationIdentity> を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="801d8-111">The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application.</span></span> <span data-ttu-id="801d8-112">正しい結果を得るには、マニフェストベースのアプリケーションとして次のコード例を実行します。</span><span class="sxs-lookup"><span data-stu-id="801d8-112">For correct results, execute this code example as a manifest-based application.</span></span>

 [!code-csharp[System.ActivationContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#1)]
 [!code-vb[System.ActivationContext#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="/visualstudio/deployment/publishing-clickonce-applications"><span data-ttu-id="801d8-113">ClickOnce アプリケーションの発行</span><span class="sxs-lookup"><span data-stu-id="801d8-113">Publishing ClickOnce Applications</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ApplicationManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] ApplicationManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] ApplicationManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.ApplicationManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ ApplicationManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationManifestBytes : byte[]" Usage="System.ActivationContext.ApplicationManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="801d8-114">現在のアプリケーションの ClickOnce アプリケーション マニフェストを取得します。</span><span class="sxs-lookup"><span data-stu-id="801d8-114">Gets the ClickOnce application manifest for the current application.</span></span></summary>
        <value><span data-ttu-id="801d8-115">この <see cref="T:System.ActivationContext" /> に関連付けられているアプリケーションの ClickOnce アプリケーション マニフェストを含むバイト配列。</span><span class="sxs-lookup"><span data-stu-id="801d8-115">A byte array that contains the ClickOnce application manifest for the application that is associated with this <see cref="T:System.ActivationContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="801d8-116">アクティベーションコンテキストが <xref:System.ActivationContext.ContextForm.Loose>(アプリケーションが ClickOnce ストアにインストールされていないことを意味します) の場合、配置マニフェストは、一時ダウンロードフォルダーから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="801d8-116">If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</span></span> <span data-ttu-id="801d8-117">アクティベーションコンテキストが <xref:System.ActivationContext.ContextForm.StoreBounded>場合 (アプリケーションが ClickOnce ストアにインストールされていることを意味します)、配置マニフェストは ClickOnce ストアから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="801d8-117">If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</span></span> <span data-ttu-id="801d8-118">配置マニフェストの詳細については、「 [ClickOnce 配置マニフェスト](/visualstudio/deployment/clickonce-deployment-manifest)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="801d8-118">For more information about deployment manifests, see [ClickOnce Deployment Manifest](/visualstudio/deployment/clickonce-deployment-manifest).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartialActivationContext">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="801d8-119"><see cref="T:System.ActivationContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="801d8-119">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="801d8-120">アプリケーションを識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="801d8-120">An object that identifies an application.</span></span></param>
        <summary><span data-ttu-id="801d8-121">指定されたアプリケーション ID を使用して、<see cref="T:System.ActivationContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="801d8-121">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity.</span></span></summary>
        <returns><span data-ttu-id="801d8-122">指定されたアプリケーション ID を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="801d8-122">An object with the specified application identity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="801d8-123"><xref:System.ActivationContext.CreatePartialActivationContext%2A> メソッドは、内部コンストラクターを呼び出して、新しいアクティベーションコンテキストを作成します。</span><span class="sxs-lookup"><span data-stu-id="801d8-123">The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context.</span></span> <span data-ttu-id="801d8-124">.NET Framework バージョン2.0 での <xref:System.ActivationContext> クラスの実装は、ストアに完全にインストールされていないか、フォルダーに完全に含まれていないアプリケーション向けに設計されています。</span><span class="sxs-lookup"><span data-stu-id="801d8-124">The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</span></span> <span data-ttu-id="801d8-125">このメソッドは、パブリックコンストラクターが完全なアクティベーションコンテキストを提供する、今後のリリースの下位互換性を提供します。</span><span class="sxs-lookup"><span data-stu-id="801d8-125">This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="801d8-126"><paramref name="identity" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="801d8-126"><paramref name="identity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="801d8-127"><paramref name="identity" /> で、配置またはアプリケーション ID が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="801d8-127">No deployment or application identity is specified in <paramref name="identity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePartialActivationContext">
      <MemberSignature Language="C#" Value="public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ActivationContext CreatePartialActivationContext(class System.ApplicationIdentity identity, string[] manifestPaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartialActivationContext (identity As ApplicationIdentity, manifestPaths As String()) As ActivationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static ActivationContext ^ CreatePartialActivationContext(ApplicationIdentity ^ identity, cli::array &lt;System::String ^&gt; ^ manifestPaths);" />
      <MemberSignature Language="F#" Value="static member CreatePartialActivationContext : ApplicationIdentity * string[] -&gt; ActivationContext" Usage="System.ActivationContext.CreatePartialActivationContext (identity, manifestPaths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.ApplicationIdentity" />
        <Parameter Name="manifestPaths" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="801d8-128">アプリケーションを識別するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="801d8-128">An object that identifies an application.</span></span></param>
        <param name="manifestPaths"><span data-ttu-id="801d8-129">アプリケーションのマニフェスト パスの文字列配列。</span><span class="sxs-lookup"><span data-stu-id="801d8-129">A string array of manifest paths for the application.</span></span></param>
        <summary><span data-ttu-id="801d8-130">指定されたアプリケーション ID とマニフェスト パスの配列を使用して、<see cref="T:System.ActivationContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="801d8-130">Initializes a new instance of the <see cref="T:System.ActivationContext" /> class using the specified application identity and array of manifest paths.</span></span></summary>
        <returns><span data-ttu-id="801d8-131">指定されたアプリケーション ID とマニフェスト パスの配列を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="801d8-131">An object with the specified application identity and array of manifest paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="801d8-132"><xref:System.ActivationContext.CreatePartialActivationContext%2A> メソッドは、内部コンストラクターを呼び出して、新しいアクティベーションコンテキストを作成します。</span><span class="sxs-lookup"><span data-stu-id="801d8-132">The <xref:System.ActivationContext.CreatePartialActivationContext%2A> method calls an internal constructor to create a new activation context.</span></span> <span data-ttu-id="801d8-133">.NET Framework バージョン2.0 での <xref:System.ActivationContext> クラスの実装は、ストアに完全にインストールされていないか、フォルダーに完全に含まれていないアプリケーション向けに設計されています。</span><span class="sxs-lookup"><span data-stu-id="801d8-133">The implementation of the <xref:System.ActivationContext> class in the .NET Framework version 2.0 is designed for applications that are neither fully installed in a store nor fully contained in a folder.</span></span> <span data-ttu-id="801d8-134">このメソッドは、パブリックコンストラクターが完全なアクティベーションコンテキストを提供する、今後のリリースの下位互換性を提供します。</span><span class="sxs-lookup"><span data-stu-id="801d8-134">This method provides backward compatibility for later releases in which public constructors provide full activation contexts.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="801d8-135"><paramref name="identity" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="801d8-135"><paramref name="identity" /> is <see langword="null" />.</span></span>

<span data-ttu-id="801d8-136">または</span><span class="sxs-lookup"><span data-stu-id="801d8-136">-or-</span></span>

 <span data-ttu-id="801d8-137"><paramref name="manifestPaths" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="801d8-137"><paramref name="manifestPaths" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="801d8-138"><paramref name="identity" /> で、配置またはアプリケーション ID が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="801d8-138">No deployment or application identity is specified in <paramref name="identity" />.</span></span>

<span data-ttu-id="801d8-139">または</span><span class="sxs-lookup"><span data-stu-id="801d8-139">-or-</span></span>

 <span data-ttu-id="801d8-140"><paramref name="identity" /> がマニフェストの ID と一致しません。</span><span class="sxs-lookup"><span data-stu-id="801d8-140"><paramref name="identity" /> does not match the identity in the manifests.</span></span>

<span data-ttu-id="801d8-141">または</span><span class="sxs-lookup"><span data-stu-id="801d8-141">-or-</span></span>

 <span data-ttu-id="801d8-142"><paramref name="identity" /> のコンポーネント数が、マニフェスト パスの数と一致しません。</span><span class="sxs-lookup"><span data-stu-id="801d8-142"><paramref name="identity" /> does not have the same number of components as the manifest paths.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeploymentManifestBytes">
      <MemberSignature Language="C#" Value="public byte[] DeploymentManifestBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DeploymentManifestBytes" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.DeploymentManifestBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeploymentManifestBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DeploymentManifestBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeploymentManifestBytes : byte[]" Usage="System.ActivationContext.DeploymentManifestBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="801d8-143">現在のアプリケーションの ClickOnce 配置マニフェストを取得します。</span><span class="sxs-lookup"><span data-stu-id="801d8-143">Gets the ClickOnce deployment manifest for the current application.</span></span></summary>
        <value><span data-ttu-id="801d8-144">この <see cref="T:System.ActivationContext" /> に関連付けられたアプリケーションの ClickOnce 配置マニフェストを含むバイト配列。</span><span class="sxs-lookup"><span data-stu-id="801d8-144">A byte array that contains the ClickOnce deployment manifest for the application that is associated with this <see cref="T:System.ActivationContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="801d8-145">アクティベーションコンテキストが <xref:System.ActivationContext.ContextForm.Loose>(アプリケーションが ClickOnce ストアにインストールされていないことを意味します) の場合、配置マニフェストは、一時ダウンロードフォルダーから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="801d8-145">If the activation context is <xref:System.ActivationContext.ContextForm.Loose>, meaning that the application is not installed in the ClickOnce store, the deployment manifest is read from the temporary download folder.</span></span> <span data-ttu-id="801d8-146">アクティベーションコンテキストが <xref:System.ActivationContext.ContextForm.StoreBounded>場合 (アプリケーションが ClickOnce ストアにインストールされていることを意味します)、配置マニフェストは ClickOnce ストアから読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="801d8-146">If the activation context is <xref:System.ActivationContext.ContextForm.StoreBounded>, meaning that the application is installed in the ClickOnce store, the deployment manifest is read from the ClickOnce store.</span></span> <span data-ttu-id="801d8-147">配置マニフェストの詳細については、「 [ClickOnce 配置マニフェスト](/visualstudio/deployment/clickonce-deployment-manifest)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="801d8-147">For more information about deployment manifests, see [ClickOnce Deployment Manifest](/visualstudio/deployment/clickonce-deployment-manifest).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="activationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="801d8-148"><see cref="T:System.ActivationContext" /> で使用されるすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="801d8-148">Releases all resources used by the <see cref="T:System.ActivationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="801d8-149"><xref:System.ActivationContext> を使い終わったら、<xref:System.ActivationContext.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="801d8-149">Call <xref:System.ActivationContext.Dispose%2A> when you are finished using the <xref:System.ActivationContext>.</span></span> <span data-ttu-id="801d8-150"><xref:System.ActivationContext.Dispose%2A>メソッドによって、<xref:System.ActivationContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="801d8-150">The <xref:System.ActivationContext.Dispose%2A> method leaves the <xref:System.ActivationContext> in an unusable state.</span></span> <span data-ttu-id="801d8-151"><xref:System.ActivationContext.Dispose%2A>呼び出し後は、<xref:System.ActivationContext>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.ActivationContext> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="801d8-151">After calling <xref:System.ActivationContext.Dispose%2A>, you must release all references to the <xref:System.ActivationContext> so the garbage collector can reclaim the memory that the <xref:System.ActivationContext> was occupying.</span></span> <span data-ttu-id="801d8-152">詳細については、[アンマネージ リソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)および[Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="801d8-152">For more information, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span>

> [!NOTE]
>  <span data-ttu-id="801d8-153"><xref:System.ActivationContext.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.ActivationContext> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="801d8-153">Always call <xref:System.ActivationContext.Dispose%2A> before you release your last reference to the <xref:System.ActivationContext>.</span></span> <span data-ttu-id="801d8-154">そうしないと、ガベージ コレクターが <xref:System.ActivationContext> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="801d8-154">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ActivationContext> object's `Finalize` method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ActivationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ActivationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="activationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="801d8-155"><see cref="T:System.ActivationContext" /> がガベージ コレクションによって収集される前に、その <see cref="T:System.ActivationContext" /> オブジェクトがリソースを解放し、その他のクリーンアップ操作を実行できるようにします。</span><span class="sxs-lookup"><span data-stu-id="801d8-155">Enables an <see cref="T:System.ActivationContext" /> object to attempt to free resources and perform other cleanup operations before the <see cref="T:System.ActivationContext" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public ActivationContext.ContextForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ActivationContext/ContextForm Form" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As ActivationContext.ContextForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ActivationContext::ContextForm Form { ActivationContext::ContextForm get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : ActivationContext.ContextForm" Usage="System.ActivationContext.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext+ContextForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="801d8-156">現在のアプリケーションに対するフォームまたはストア コンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="801d8-156">Gets the form, or store context, for the current application.</span></span></summary>
        <value><span data-ttu-id="801d8-157">列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="801d8-157">One of the enumeration values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="801d8-158">マニフェストベースのアプリケーションが ClickOnce ストアにインストールされていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="801d8-158">A manifest-based application might not be installed in the ClickOnce store.</span></span> <span data-ttu-id="801d8-159">Visual Studio で実行されるマニフェストでアクティブ化されたアプリケーションなど、ストアにないアプリケーションは <xref:System.ActivationContext.ContextForm.Loose>として分類されます。</span><span class="sxs-lookup"><span data-stu-id="801d8-159">An application that is not in the store, such as a manifest-activated application executing in Visual Studio, is classified as <xref:System.ActivationContext.ContextForm.Loose>.</span></span> <span data-ttu-id="801d8-160">ストアに格納されているアプリケーションは <xref:System.ActivationContext.ContextForm.StoreBounded>として分類されます。</span><span class="sxs-lookup"><span data-stu-id="801d8-160">An application that is contained in the store is classified as <xref:System.ActivationContext.ContextForm.StoreBounded>.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.ActivationContext.Identity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identity As ApplicationIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ApplicationIdentity ^ Identity { ApplicationIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : ApplicationIdentity" Usage="System.ActivationContext.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="801d8-161">現在のアプリケーションのアプリケーション ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="801d8-161">Gets the application identity for the current application.</span></span></summary>
        <value><span data-ttu-id="801d8-162">現在のアプリケーションを識別する <see cref="T:System.ApplicationIdentity" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="801d8-162">An <see cref="T:System.ApplicationIdentity" /> object that identifies the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="801d8-163"><xref:System.ApplicationIdentity> は、完全な名前と場所でアプリケーションを一意に識別します。</span><span class="sxs-lookup"><span data-stu-id="801d8-163">An <xref:System.ApplicationIdentity> uniquely identifies an application by its full name and location.</span></span>



## Examples
 <span data-ttu-id="801d8-164">次のコード例は、<xref:System.ActivationContext> オブジェクトを使用して、マニフェストベースのアプリケーションの <xref:System.ApplicationIdentity> を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="801d8-164">The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application.</span></span> <span data-ttu-id="801d8-165">このコード例は、<xref:System.ActivationContext> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="801d8-165">This code example is part of a larger example provided for the <xref:System.ActivationContext> class.</span></span>

 [!code-csharp[System.ActivationContext#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#2)]
 [!code-vb[System.ActivationContext#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="activationContext.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="801d8-166">データを読み込む先の オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="801d8-166">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="801d8-167">このシリアル化対象の構造体。</span><span class="sxs-lookup"><span data-stu-id="801d8-167">The structure for this serialization.</span></span></param>
        <summary><span data-ttu-id="801d8-168"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、対象オブジェクトをシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="801d8-168">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
