<Type Name="ArraySegment&lt;T&gt;+Enumerator" FullName="System.ArraySegment&lt;T&gt;+Enumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="43dd69497ac401d999e4013925dae4eccc300419" /><Meta Name="ms.sourcegitcommit" Value="6c0b6310824199ff476e4a9eec6e9ed0bd1a51c9" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/06/2019" /><Meta Name="ms.locfileid" Value="74388875" /></Metadata><TypeSignature Language="C#" Value="public struct ArraySegment&lt;T&gt;.Enumerator : System.Collections.Generic.IEnumerator&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ArraySegment`1/Enumerator&lt;T&gt; extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;!T&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ArraySegment`1.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ArraySegment(Of T).Enumerator&#xA;Implements IEnumerator(Of T)" />
  <TypeSignature Language="C++ CLI" Value="public: value class ArraySegment&lt;T&gt;::Enumerator : System::Collections::Generic::IEnumerator&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ArraySegment&lt;'T&gt;.Enumerator = struct&#xA;    interface IEnumerator&lt;'T&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b9c63-101"><see cref="T:System.ArraySegment`1" /> の要素の列挙子を提供します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-101">Provides an enumerator for the elements of an <see cref="T:System.ArraySegment`1" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="b9c63-102">C# の[foreach](~/docs/csharp/language-reference/keywords/foreach-in.md)とVisual Basicの[For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md)構造は、列挙子の複雑さを隠します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-102">The C# [foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) of the C# language and the [For Each...Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) construct in Visual Basic hides the complexity of enumerators.</span></span> <span data-ttu-id="b9c63-103">列挙子を直接操作するのではなく、`foreach`または`For Each...Next`を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b9c63-103">Instead of directly manipulating the enumerator, using `foreach` or `For Each...Next` is recommended.</span></span> 

<span data-ttu-id="b9c63-104">初期状態で、列挙子は<xref:System.ArraySegment%601>内の最初の要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="b9c63-104">Initially, the enumerator is positioned before the first element in the <xref:System.ArraySegment%601>.</span></span> <span data-ttu-id="b9c63-105">この位置では、<xref:System.ArraySegment%601.Enumerator.Current> は未定義です。</span><span class="sxs-lookup"><span data-stu-id="b9c63-105">At this position, <xref:System.ArraySegment%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="b9c63-106"><xref:System.ArraySegment%601.Enumerator.Current>の値を読み取る前に、<xref:System.ArraySegment%601.Enumerator.MoveNext%2A>を呼び出し、列挙子を<xref:System.ArraySegment%601>の最初の項目に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9c63-106">You must call <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> to advance the enumerator to the first item in the <xref:System.ArraySegment%601> before reading the value of <xref:System.ArraySegment%601.Enumerator.Current>.</span></span>

<span data-ttu-id="b9c63-107"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A>が呼び出されるまで、<xref:System.ArraySegment%601.Enumerator.Current> は同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-107"><xref:System.ArraySegment%601.Enumerator.Current> returns the same value until <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b9c63-108"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A>は、<xref:System.ArraySegment%601.Enumerator.Current>を<xref:System.ArraySegment%601>の次の項目に設定します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-108"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A> sets <xref:System.ArraySegment%601.Enumerator.Current> to the next item in the <xref:System.ArraySegment%601>.</span></span>

<span data-ttu-id="b9c63-109"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A>が<xref:System.ArraySegment%601>の末尾を超えた場合、<xref:System.ArraySegment%601.Enumerator.MoveNext%2A>は`false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-109">If <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> passes the end of the <xref:System.ArraySegment%601>, <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b9c63-110">列挙子がこの状態にある場合、<xref:System.ArraySegment%601.Enumerator.MoveNext%2A>の後続の呼び出しも`false`を返し、<xref:System.ArraySegment%601.Enumerator.Current>は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="b9c63-110">When the enumerator is at this state, subsequent calls to <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> also return `false` and <xref:System.ArraySegment%601.Enumerator.Current> is undefined.</span></span> <span data-ttu-id="b9c63-111"><xref:System.ArraySegment%601.Enumerator.Current>に再度<xref:System.ArraySegment%601>の最初の項目を設定することはできません。列挙子の新しいインスタンスを代わりに作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9c63-111">You cannot set <xref:System.ArraySegment%601.Enumerator.Current> to the first item in the <xref:System.ArraySegment%601> again; you must create a new enumerator instance instead.</span></span> 
 
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public T Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Current" />
      <MemberSignature Language="DocId" Value="P:System.ArraySegment`1.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T Current { T get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : 'T" Usage="System.ArraySegment&lt;'T&gt;.Enumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9c63-112">列挙子の現在位置にある項目への参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-112">Gets a reference to the item at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="b9c63-113">列挙子の現在位置にある <see cref="T:System.ArraySegment`1" /> の要素。</span><span class="sxs-lookup"><span data-stu-id="b9c63-113">The element of the <see cref="T:System.ArraySegment`1" /> at the current position of the enumerator.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="b9c63-114">`Current`は、次の条件のいずれかの場合に未定義です</span><span class="sxs-lookup"><span data-stu-id="b9c63-114">`Current` is undefined under either of the following conditions:</span></span> 

- <span data-ttu-id="b9c63-115">列挙子が作成されるとすぐに、列挙子は配列セグメント内の最初の要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="b9c63-115">Immediately after the enumerator is created, the enumerator is positioned before the first element in the array segment.</span></span> <span data-ttu-id="b9c63-116">`Current`の値を読み取る前に、<xref:System.ArraySegment%601.Enumerator.MoveNext%2A> を呼び出して、列挙子を配列セグメントの最初の要素に進めておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="b9c63-116"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the array segment before reading the value of `Current`.</span></span>

- <span data-ttu-id="b9c63-117"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A> の最後の呼び出しで `false`が返されました。これは、配列セグメントの末尾を示します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-117">The last call to <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> returned `false`, which indicates the end of the array segment.</span></span> 

<span data-ttu-id="b9c63-118"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A>が呼び出されるまで、`Current` は同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-118">`Current` returns the same value until <xref:System.ArraySegment%601.Enumerator.MoveNext%2A> is called.</span></span> <span data-ttu-id="b9c63-119"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A> は、配列セグメントの次の項目に `Current` を設定します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-119"><xref:System.ArraySegment%601.Enumerator.MoveNext%2A> sets `Current` to the next item in the array segment.</span></span> 

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArraySegment`1.Enumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="enumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9c63-120">この列挙子インスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-120">Releases all resources used by this enumerator instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArraySegment`1.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9c63-121">列挙子を <see cref="T:System.ArraySegment`1" /> の次の要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="b9c63-121">Advances the enumerator to the next element of the <see cref="T:System.ArraySegment`1" />.</span></span></summary>
        <returns><span data-ttu-id="b9c63-122">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子が配列セグメントの末尾を越えた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b9c63-122"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the array segment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="b9c63-123">列挙子が作成された後は、配列セグメント内の最初の要素の前に配置され、`MoveNext` の最初の呼び出しで列挙子が配列セグメント内の最初の項目に進められます。</span><span class="sxs-lookup"><span data-stu-id="b9c63-123">After an enumerator is created, it is positioned before the first element in the array segment, and the first call to `MoveNext` advances the enumerator to the first item in the array segment.</span></span> 

<span data-ttu-id="b9c63-124">`MoveNext` が配列セグメントの末尾を渡す場合、`MoveNext` は `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-124">If `MoveNext` passes the end of the array segment, `MoveNext` returns `false`.</span></span> <span data-ttu-id="b9c63-125">列挙子がこの状態にある場合、`MoveNext`の後続の呼び出しも`false`を返します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-125">When the enumerator is at this state, subsequent calls to `MoveNext` also return `false`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.ArraySegment`1.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9c63-126">列挙子の現在位置の要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-126">Gets the element at the current position of the enumerator.</span></span></summary>
        <value><span data-ttu-id="b9c63-127">列挙子の現在位置にある配列セグメントの要素。</span><span class="sxs-lookup"><span data-stu-id="b9c63-127">The element in the array segment at the current position of the enumerator.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b9c63-128">列挙子は、配列セグメントの最初の要素の前または最後の要素の後に配置されています。</span><span class="sxs-lookup"><span data-stu-id="b9c63-128">The enumerator is positioned before the first element of the array segment or after the last element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Reset">
      <MemberSignature Language="C#" Value="void IEnumerator.Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IEnumerator.Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArraySegment`1.Enumerator.System#Collections#IEnumerator#Reset" />
      <MemberSignature Language="VB.NET" Value="Sub Reset () Implements IEnumerator.Reset" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IEnumerator.Reset() = System::Collections::IEnumerator::Reset;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9c63-129">列挙子を初期位置、つまり配列セグメントの最初の要素の前に設定します。</span><span class="sxs-lookup"><span data-stu-id="b9c63-129">Sets the enumerator to its initial position, which is before the first element in the array segment.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
