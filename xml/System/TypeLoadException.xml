<Type Name="TypeLoadException" FullName="System.TypeLoadException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e3c739db90ef644e2762097554cd9d38efc69284" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172051" /></Metadata><TypeSignature Language="C#" Value="public class TypeLoadException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TypeLoadException extends System.SystemException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TypeLoadException" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeLoadException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeLoadException : SystemException" />
  <TypeSignature Language="F#" Value="type TypeLoadException = class&#xA;    inherit SystemException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8acde-101">型の読み込みエラーが発生した場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="8acde-101">The exception that is thrown when type-loading failures occur.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8acde-102"><xref:System.TypeLoadException> は、共通言語ランタイムがアセンブリ、アセンブリ内の型、または型を読み込むことができない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="8acde-102"><xref:System.TypeLoadException> is thrown when the common language runtime cannot find the assembly, the type within the assembly, or cannot load the type.</span></span> <span data-ttu-id="8acde-103"><xref:System.TypeLoadException.Message%2A> プロパティには、例外の原因を特定するのに役立つ詳細情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="8acde-103">The <xref:System.TypeLoadException.Message%2A> property contains more detailed information that can help you identify the cause of the exception.</span></span>  
  
 <span data-ttu-id="8acde-104"><xref:System.TypeLoadException> では、値0x80131522 を持つ HRESULT COR_E_TYPELOAD を使用します。</span><span class="sxs-lookup"><span data-stu-id="8acde-104"><xref:System.TypeLoadException> uses the HRESULT COR_E_TYPELOAD, that has the value 0x80131522.</span></span>  
  
 <span data-ttu-id="8acde-105"><xref:System.TypeLoadException>インスタンスの初期プロパティ値の一覧については、<xref:System.TypeLoadException.%23ctor%2A>コンストラクターを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8acde-105">For a list of initial property values for an instance of <xref:System.TypeLoadException>, see the <xref:System.TypeLoadException.%23ctor%2A> constructors.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="8acde-106">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="8acde-106">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8acde-107">
          <see cref="T:System.TypeLoadException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8acde-107">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8acde-108">
          <see cref="T:System.TypeLoadException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8acde-108">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8acde-109">このコンストラクターは、新しいインスタンスの <xref:System.TypeLoadException.Message%2A> プロパティを初期化し、エラーを説明するシステム提供のメッセージ ("型の読み込み中にエラーが発生しました。" など) を指定します。</span><span class="sxs-lookup"><span data-stu-id="8acde-109">This constructor initializes the <xref:System.TypeLoadException.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "A failure has occurred while loading a type."</span></span> <span data-ttu-id="8acde-110">このメッセージは、システムの現在のカルチャを考慮して指定します。</span><span class="sxs-lookup"><span data-stu-id="8acde-110">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="8acde-111"><xref:System.TypeLoadException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="8acde-111">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="8acde-112">プロパティ</span><span class="sxs-lookup"><span data-stu-id="8acde-112">Property</span></span>|<span data-ttu-id="8acde-113">値</span><span class="sxs-lookup"><span data-stu-id="8acde-113">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8acde-114">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="8acde-114">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="8acde-115">ローカライズされたエラー メッセージの文字列です。</span><span class="sxs-lookup"><span data-stu-id="8acde-115">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new TypeLoadException : string -&gt; TypeLoadException" Usage="new System.TypeLoadException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8acde-116">エラーについて説明するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="8acde-116">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="8acde-117">指定したエラー メッセージを使用して、<see cref="T:System.TypeLoadException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8acde-117">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8acde-118">`message` パラメーターの内容は、ユーザーが理解できるものである必要があります。</span><span class="sxs-lookup"><span data-stu-id="8acde-118">The content of the `message` parameter should be understandable to the user.</span></span> <span data-ttu-id="8acde-119">このコンストラクターの呼び出し元は、この文字列が現在のシステム環境向けにローカライズされていることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8acde-119">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="8acde-120"><xref:System.TypeLoadException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="8acde-120">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="8acde-121">プロパティ</span><span class="sxs-lookup"><span data-stu-id="8acde-121">Property</span></span>|<span data-ttu-id="8acde-122">値</span><span class="sxs-lookup"><span data-stu-id="8acde-122">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8acde-123">null 参照 (Visual Basic の場合は `Nothing`)。</span><span class="sxs-lookup"><span data-stu-id="8acde-123">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="8acde-124">エラー メッセージ文字列です。</span><span class="sxs-lookup"><span data-stu-id="8acde-124">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8acde-125">次のコード例は、<xref:System.TypeLoadException.%23ctor%28System.String%29> コンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="8acde-125">The following code example demonstrates the <xref:System.TypeLoadException.%23ctor%28System.String%29> constructor.</span></span> <span data-ttu-id="8acde-126">これには、カスタムメッセージを含む <xref:System.TypeLoadException> を生成し、そのエラーメッセージをコンソールに表示するメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="8acde-126">It contains a method that generates a <xref:System.TypeLoadException> with a custom message, and displays the error message to the console.</span></span>  
  
 [!code-cpp[TypeLoadException_Constructor2#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_Constructor2/CPP/typeloadexception_constructor2.cpp#1)]
 [!code-csharp[TypeLoadException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_Constructor2/CS/typeloadexception_constructor2.cs#1)]
 [!code-vb[TypeLoadException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_Constructor2/VB/typeloadexception_constructor2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeLoadException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeLoadException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new TypeLoadException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; TypeLoadException" Usage="new System.TypeLoadException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8acde-127">シリアル化されたオブジェクトのデータを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8acde-127">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="8acde-128">転送元または転送先に関するコンテキスト情報です。</span><span class="sxs-lookup"><span data-stu-id="8acde-128">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="8acde-129">シリアル化されたデータを使用して <see cref="T:System.TypeLoadException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8acde-129">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8acde-130">このコンストラクターは、シリアル化解除の際に呼び出されて、ストリームで送信された例外オブジェクトを再構成します。</span><span class="sxs-lookup"><span data-stu-id="8acde-130">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="8acde-131">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="8acde-131">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8acde-132">次の例では、例外を生成し、例外データをファイルにシリアル化して、例外を再構成します。</span><span class="sxs-lookup"><span data-stu-id="8acde-132">The following example generates an exception, and serializes the exception data to a file, and then reconstitutes the exception.</span></span> <span data-ttu-id="8acde-133">このコード例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8acde-133">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8acde-134">完全修飾アセンブリ名を取得する方法については、「[アセンブリ名](~/docs/standard/assembly/names.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8acde-134">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/standard/assembly/names.md).</span></span>  
  
 [!code-cpp[TypeLoadException_GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CPP/typeloadexception_getobjectdata.cpp#1)]
 [!code-csharp[TypeLoadException_GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CS/typeloadexception_getobjectdata.cs#1)]
 [!code-vb[TypeLoadException_GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_GetObjectData/VB/typeloadexception_getobjectdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8acde-135"><paramref name="info" /> オブジェクトが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8acde-135">The <paramref name="info" /> object is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="8acde-136">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="8acde-136">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeLoadException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeLoadException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new TypeLoadException : string * Exception -&gt; TypeLoadException" Usage="new System.TypeLoadException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8acde-137">例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="8acde-137">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="8acde-138">現在の例外の原因になった例外。</span><span class="sxs-lookup"><span data-stu-id="8acde-138">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="8acde-139"><paramref name="inner" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="8acde-139">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="8acde-140">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.TypeLoadException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8acde-140">Initializes a new instance of the <see cref="T:System.TypeLoadException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8acde-141">前の例外の直接の結果としてスローされる例外は、<xref:System.Exception.InnerException%2A> プロパティに前の例外への参照を含んでいる場合があります。</span><span class="sxs-lookup"><span data-stu-id="8acde-141">An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="8acde-142"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="8acde-142">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="8acde-143"><xref:System.TypeLoadException> インスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="8acde-143">The following table shows the initial property values for an instance of <xref:System.TypeLoadException>.</span></span>  
  
|<span data-ttu-id="8acde-144">プロパティ</span><span class="sxs-lookup"><span data-stu-id="8acde-144">Property</span></span>|<span data-ttu-id="8acde-145">値</span><span class="sxs-lookup"><span data-stu-id="8acde-145">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="8acde-146">内部例外の参照です。</span><span class="sxs-lookup"><span data-stu-id="8acde-146">The inner exception reference.</span></span>|  
|<xref:System.TypeLoadException.Message%2A>|<span data-ttu-id="8acde-147">エラー メッセージ文字列です。</span><span class="sxs-lookup"><span data-stu-id="8acde-147">The error message string.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8acde-148">次のコード例は、<xref:System.TypeLoadException.%23ctor%28System.String%2CSystem.Exception%29> コンストラクターを示しています。</span><span class="sxs-lookup"><span data-stu-id="8acde-148">The following code example demonstrates the <xref:System.TypeLoadException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span> <span data-ttu-id="8acde-149">これには、<xref:System.TypeLoadException>を生成し、その例外をキャッチし、内部例外として元の <xref:System.TypeLoadException> を含むカスタムメッセージを使用して新しい <xref:System.TypeLoadException> をスローするメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="8acde-149">It contains a method that generates a <xref:System.TypeLoadException>, catches that exception, and throws a new <xref:System.TypeLoadException> with a custom message, including the original <xref:System.TypeLoadException> as the inner exception.</span></span>  
  
 [!code-cpp[TypeLoadException_Constructor3#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_Constructor3/CPP/typeloadexception_constructor3.cpp#1)]
 [!code-csharp[TypeLoadException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_Constructor3/CS/typeloadexception_constructor3.cs#1)]
 [!code-vb[TypeLoadException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_Constructor3/VB/typeloadexception_constructor3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="8acde-150">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="8acde-150">Handling and Throwing Exceptions</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="typeLoadException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8acde-151">シリアル化されたオブジェクトのデータを保持するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8acde-151">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="8acde-152">転送元または転送先に関するコンテキスト情報です。</span><span class="sxs-lookup"><span data-stu-id="8acde-152">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="8acde-153">クラス名、メソッド名、リソース ID、追加の例外情報を使用して <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="8acde-153">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the class name, method name, resource ID, and additional exception information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8acde-154"><xref:System.TypeLoadException.GetObjectData%2A> は、シリアル化する対象のすべての例外オブジェクト データを使用して、<xref:System.Runtime.Serialization.SerializationInfo> を設定します。</span><span class="sxs-lookup"><span data-stu-id="8acde-154"><xref:System.TypeLoadException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="8acde-155">逆シリアル化中に、例外オブジェクトはストリームを介して送信された <xref:System.Runtime.Serialization.SerializationInfo> から再構成されます。</span><span class="sxs-lookup"><span data-stu-id="8acde-155">During deserialization, the exception object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="8acde-156">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="8acde-156">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8acde-157">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="8acde-157">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8acde-158">次の例では、例外を生成し、例外データをファイルにシリアル化して、例外を再構成します。</span><span class="sxs-lookup"><span data-stu-id="8acde-158">The following example generates an exception, and serializes the exception data to a file, and then reconstitutes the exception.</span></span> <span data-ttu-id="8acde-159">このコード例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8acde-159">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8acde-160">完全修飾アセンブリ名を取得する方法については、「[アセンブリ名](~/docs/standard/assembly/names.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8acde-160">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/standard/assembly/names.md).</span></span>  
  
 [!code-cpp[TypeLoadException_GetObjectData#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CPP/typeloadexception_getobjectdata.cpp#1)]
 [!code-csharp[TypeLoadException_GetObjectData#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_GetObjectData/CS/typeloadexception_getobjectdata.cs#1)]
 [!code-vb[TypeLoadException_GetObjectData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_GetObjectData/VB/typeloadexception_getobjectdata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8acde-161"><paramref name="info" /> オブジェクトが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8acde-161">The <paramref name="info" /> object is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8acde-162">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="8acde-162">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="8acde-163">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8acde-163">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md"><span data-ttu-id="8acde-164">XML シリアル化および SOAP シリアル化</span><span class="sxs-lookup"><span data-stu-id="8acde-164">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.TypeLoadException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.TypeLoadException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8acde-165">この例外のエラー メッセージを取得します。</span><span class="sxs-lookup"><span data-stu-id="8acde-165">Gets the error message for this exception.</span></span></summary>
        <value><span data-ttu-id="8acde-166">エラー メッセージ文字列です。</span><span class="sxs-lookup"><span data-stu-id="8acde-166">The error message string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8acde-167">このプロパティは <xref:System.Exception.Message%2A>をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8acde-167">This property overrides <xref:System.Exception.Message%2A>.</span></span> <span data-ttu-id="8acde-168">エラーメッセージはローカライズされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="8acde-168">The error message should be localized.</span></span>  
  
 <span data-ttu-id="8acde-169">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8acde-169">This property is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8acde-170">次の例では、mscorlib アセンブリから存在しない型を読み込もうとします。</span><span class="sxs-lookup"><span data-stu-id="8acde-170">The following example attempts to load a non-existent type from the mscorlib assembly.</span></span> <span data-ttu-id="8acde-171">結果の例外がキャッチされ、<xref:System.TypeLoadException.TypeName%2A> と <xref:System.TypeLoadException.Message%2A> の値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="8acde-171">The resulting exception is caught, and the <xref:System.TypeLoadException.TypeName%2A> and <xref:System.TypeLoadException.Message%2A> values are displayed.</span></span> <span data-ttu-id="8acde-172">このコード例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8acde-172">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8acde-173">完全修飾アセンブリ名を取得する方法については、「[アセンブリ名](~/docs/standard/assembly/names.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8acde-173">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/standard/assembly/names.md).</span></span>  
  
 [!code-cpp[TypeLoadException_TypeName#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_TypeName/CPP/typeloadexception_typename.cpp#1)]
 [!code-csharp[TypeLoadException_TypeName#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_TypeName/CS/typeloadexception_typename.cs#1)]
 [!code-vb[TypeLoadException_TypeName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_TypeName/VB/typeloadexception_typename.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.TypeLoadException.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="System.TypeLoadException.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8acde-174">例外を引き起こす型の完全修飾名を取得します。</span><span class="sxs-lookup"><span data-stu-id="8acde-174">Gets the fully qualified name of the type that causes the exception.</span></span></summary>
        <value><span data-ttu-id="8acde-175">完全修飾型名。</span><span class="sxs-lookup"><span data-stu-id="8acde-175">The fully qualified type name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8acde-176">次の例では、mscorlib アセンブリから存在しない型を読み込もうとします。</span><span class="sxs-lookup"><span data-stu-id="8acde-176">The following example attempts to load a non-existent type from the mscorlib assembly.</span></span> <span data-ttu-id="8acde-177">結果の例外がキャッチされ、<xref:System.TypeLoadException.TypeName%2A> と <xref:System.TypeLoadException.Message%2A> の値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="8acde-177">The resulting exception is caught, and the <xref:System.TypeLoadException.TypeName%2A> and <xref:System.TypeLoadException.Message%2A> values are displayed.</span></span> <span data-ttu-id="8acde-178">このコード例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8acde-178">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8acde-179">完全修飾アセンブリ名を取得する方法については、「[アセンブリ名](~/docs/standard/assembly/names.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8acde-179">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/standard/assembly/names.md).</span></span>  
  
 [!code-cpp[TypeLoadException_TypeName#1](~/samples/snippets/cpp/VS_Snippets_CLR/TypeLoadException_TypeName/CPP/typeloadexception_typename.cpp#1)]
 [!code-csharp[TypeLoadException_TypeName#1](~/samples/snippets/csharp/VS_Snippets_CLR/TypeLoadException_TypeName/CS/typeloadexception_typename.cs#1)]
 [!code-vb[TypeLoadException_TypeName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeLoadException_TypeName/VB/typeloadexception_typename.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8acde-180">派生クラスで <see cref="P:System.TypeLoadException.TypeName" /> をオーバーライドする場合は、基本クラスの <see cref="P:System.TypeLoadException.TypeName" /> プロパティを必ず呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="8acde-180">When overriding <see cref="P:System.TypeLoadException.TypeName" /> in a derived class, be sure to call the base class's <see cref="P:System.TypeLoadException.TypeName" /> property.</span></span>  
  
<span data-ttu-id="8acde-181">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8acde-181">This property is read-only.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
