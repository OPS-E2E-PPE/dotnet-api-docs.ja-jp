<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a47a0d7bfd72c8a3bba3ffc664a616b630a536ae" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83513220" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <TypeSignature Language="C#" Value="public interface IComparable&lt;T&gt;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;T&gt;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of T)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">比較するオブジェクトの型。</typeparam>
    <summary>インスタンスの並べ替えなどを目的とし、型固有の比較メソッドを作成するために値型またはクラスで実装する、汎用の比較メソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスは、値を順序付けまたは並べ替えできる型によって実装され、ジェネリックコレクションオブジェクトのメンバーを順序付けるための厳密に型指定された比較メソッドを提供します。 たとえば、1つの数値は2番目の数値よりも大きくすることができ、1つの文字列はアルファベット順に表示されます。 これを行うには、実装する型が、並べ替え順序における現在のインスタンスの位置が、同じ型の2番目のオブジェクトの前、後、または同じであるかどうかを示す1つのメソッド <xref:System.IComparable%601.CompareTo%28%600%29>を定義する必要があります。 通常、メソッドは開発者コードから直接呼び出されません。 代わりに、<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> や <xref:System.Collections.Generic.SortedList%602.Add%2A>などのメソッドによって自動的に呼び出されます。  
  
 通常、<xref:System.IComparable%601> の実装を提供する型は、<xref:System.IEquatable%601> インターフェイスも実装します。 <xref:System.IEquatable%601> インターフェイスは、実装する型のインスタンスが等しいかどうかを判断する <xref:System.IEquatable%601.Equals%2A> メソッドを定義します。  
  
 次の表に示すように、<xref:System.IComparable%601.CompareTo%28%600%29> メソッドの実装では、3つの値のいずれかを持つ <xref:System.Int32> を返す必要があります。  
  
|値|意味|  
|-----------|-------------|  
|ゼロより小さい|このオブジェクトは、並べ替え順序で <xref:System.IComparable%601.CompareTo%2A> メソッドによって指定されたオブジェクトの前にあります。|  
|ゼロ|この現在のインスタンスは、並べ替え順序において、<xref:System.IComparable%601.CompareTo%2A> メソッド引数で指定されたオブジェクトと同じ位置に出現します。|  
|ゼロより大きい|この現在のインスタンスは、並べ替え順序において、<xref:System.IComparable%601.CompareTo%2A> メソッド引数で指定されたオブジェクトに従います。|  
  
 すべての数値型 (<xref:System.Int32> や <xref:System.Double>など) は、<xref:System.String>、<xref:System.Char>、<xref:System.DateTime>と同様に <xref:System.IComparable%601>を実装します。 また、カスタム型には、オブジェクトインスタンスの順序付けまたは並べ替えを可能にするための <xref:System.IComparable%601> の独自の実装が用意されている必要があります。  
  
   
  
## Examples  
 次の例は、単純な `Temperature` オブジェクトの <xref:System.IComparable%601> を実装する方法を示しています。 この例では、`Temperature` オブジェクトキーを使用して文字列の <xref:System.Collections.Generic.SortedList%602> コレクションを作成し、一連の温度と文字列を順番にリストに追加します。 <xref:System.Collections.Generic.SortedList%602.Add%2A> メソッドの呼び出しでは、<xref:System.Collections.Generic.SortedList%602> コレクションは <xref:System.IComparable%601> の実装を使用してリストエントリを並べ替えます。このエントリは、気温の増加順に表示されます。  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.IComparable`1" /> インターフェイスの型パラメーターを、このインターフェイスを実装している型に置き換えます。  
  
<see cref="T:System.IComparable`1" />を実装する場合は、<see langword="op_GreaterThan" />、<see langword="op_GreaterThanOrEqual" />、<see langword="op_LessThan" />、および <see langword="op_LessThanOrEqual" /> の各演算子をオーバーロードして、<see cref="M:System.IComparable`1.CompareTo(`0)" />と一致する値を返す必要があります。 さらに、<see cref="T:System.IEquatable`1" />も実装する必要があります。 詳細については、<see cref="T:System.IEquatable`1" /> に関する記事を参照してください。</para></block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(T other);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">このインスタンスと比較するオブジェクトです。</param>
        <summary>現在のインスタンスを同じ型の別のオブジェクトと比較し、現在のインスタンスの並べ替え順序での位置が、比較対象のオブジェクトと比べて前か、後か、または同じかを示す整数を返します。</summary>
        <returns>比較対象オブジェクトの相対順序を示す値。 戻り値の意味は次のとおりです。 
 <list type="table"><listheader><term> 値 
 </term><description> 意味 
 </description></listheader><item><term> ゼロより小さい 
 </term><description> このインスタンスの位置が、並べ替え順序において <paramref name="other" /> よりも前です。  
  
 </description></item><item><term> ゼロ 
 </term><description> 並べ替え順序における、このインスタンスと <paramref name="other" /> の位置が同じです。  
  
 </description></item><item><term> ゼロより大きい 
 </term><description> このインスタンスの位置が、並べ替え順序において <paramref name="other" /> よりも後ろです。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IComparable%601.CompareTo%2A> には、ジェネリックコレクションオブジェクトのメンバーを順序付けるための厳密に型指定された比較メソッドが用意されています。 このため、通常、開発者コードから直接呼び出されることはありません。 代わりに、<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> や <xref:System.Collections.Generic.SortedList%602.Add%2A>などのメソッドによって自動的に呼び出されます。  
  
 このメソッドは単なる定義であり、有効にするために特定のクラスまたは値型によって実装される必要があります。 [戻り値] セクションで指定された比較の意味 ("前"、"前"、"の位置は"、および "は" になります) は、特定の実装によって異なります。  
  
 定義上、すべてのオブジェクトが `null`より大きいかどうかを比較し、2つの null 参照が互いに等しいかどうかを比較します。  
  
   
  
## Examples  
 次のコード例は、単純な `Temperature` オブジェクトの <xref:System.IComparable%601> を実装する方法を示しています。 この例では、`Temperature` オブジェクトキーを使用して文字列の <xref:System.Collections.Generic.SortedList%602> コレクションを作成し、一連の温度と文字列を順番にリストに追加します。 <xref:System.Collections.Generic.SortedList%602.Add%2A> メソッドの呼び出しでは、<xref:System.Collections.Generic.SortedList%602> コレクションは <xref:System.IComparable%601> の実装を使用してリストエントリを並べ替えます。このエントリは、気温の増加順に表示されます。  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オブジェクト A、B、および C の場合、次の条件を満たす必要があります。 
 0を返すには<c>、CompareTo (a)</c>が必要です。  
  
<c>Compareto (B)</c>が0を返した場合は、0を返すためには<c>、b. compareto (A)</c>が必要です。  
  
<c>Compareto (B)</c>が0と b を返した場合、 <c>compareto (c)</c>は0を返し、0を返すには<c>compareto (c)</c>が必要です。  
  
<c>Compareto (B)</c>が0以外の値を返す場合、逆の符号の値を返すには<c>、b. compareto (A)</c>が必要です。  
  
<c>Compareto (b)</c>が0以外の値 <paramref name="x" /> を返し、 <c>b-tree (c)</c>が <paramref name="x" />と同じ符号の値 <paramref name="y" /> を返した場合は、<paramref name="x" /> および <paramref name="y" />と同じ符号の値を返すために<c>、compareto (c)</c>が必要になります。</para></block>
        <block subset="none" type="usage"><para><see cref="M:System.IComparable`1.CompareTo(`0)" /> メソッドを使用して、クラスのインスタンスの順序を決定します。</para></block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>
