<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fbc3d67beaaf60e0ce49989f76b382162948582" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172844" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="c4db8-101">比較するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="c4db8-101">The type of object to compare.</span></span></typeparam>
    <summary><span data-ttu-id="c4db8-102">インスタンスの並べ替えなどを目的とし、型固有の比較メソッドを作成するために値型またはクラスで実装する、汎用の比較メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4db8-103">このインターフェイスは、値を順序付けまたは並べ替えできる型によって実装され、ジェネリックコレクションオブジェクトのメンバーを順序付けるための厳密に型指定された比較メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="c4db8-104">たとえば、1つの数値は2番目の数値よりも大きくすることができ、1つの文字列はアルファベット順に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c4db8-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="c4db8-105">これを行うには、実装する型が、並べ替え順序における現在のインスタンスの位置が、同じ型の2番目のオブジェクトの前、後、または同じであるかどうかを示す1つのメソッド <xref:System.IComparable%601.CompareTo%28%600%29>を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="c4db8-106">通常、メソッドは開発者コードから直接呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="c4db8-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="c4db8-107">代わりに、<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> や <xref:System.Collections.Generic.SortedList%602.Add%2A>などのメソッドによって自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c4db8-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="c4db8-108">通常、<xref:System.IComparable%601> の実装を提供する型は、<xref:System.IEquatable%601> インターフェイスも実装します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="c4db8-109"><xref:System.IEquatable%601> インターフェイスは、実装する型のインスタンスが等しいかどうかを判断する <xref:System.IEquatable%601.Equals%2A> メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="c4db8-110">次の表に示すように、<xref:System.IComparable%601.CompareTo%28%600%29> メソッドの実装では、3つの値のいずれかを持つ <xref:System.Int32> を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="c4db8-111">値</span><span class="sxs-lookup"><span data-stu-id="c4db8-111">Value</span></span>|<span data-ttu-id="c4db8-112">意味</span><span class="sxs-lookup"><span data-stu-id="c4db8-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="c4db8-113">ゼロより小さい</span><span class="sxs-lookup"><span data-stu-id="c4db8-113">Less than zero</span></span>|<span data-ttu-id="c4db8-114">このオブジェクトは、並べ替え順序で <xref:System.IComparable%601.CompareTo%2A> メソッドによって指定されたオブジェクトの前にあります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="c4db8-115">0</span><span class="sxs-lookup"><span data-stu-id="c4db8-115">Zero</span></span>|<span data-ttu-id="c4db8-116">この現在のインスタンスは、並べ替え順序において、<xref:System.IComparable%601.CompareTo%2A> メソッド引数で指定されたオブジェクトと同じ位置に出現します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="c4db8-117">ゼロより大きい</span><span class="sxs-lookup"><span data-stu-id="c4db8-117">Greater than zero</span></span>|<span data-ttu-id="c4db8-118">この現在のインスタンスは、並べ替え順序において、<xref:System.IComparable%601.CompareTo%2A> メソッド引数で指定されたオブジェクトに従います。</span><span class="sxs-lookup"><span data-stu-id="c4db8-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="c4db8-119">すべての数値型 (<xref:System.Int32> や <xref:System.Double>など) は、<xref:System.String>、<xref:System.Char>、<xref:System.DateTime>と同様に <xref:System.IComparable%601>を実装します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="c4db8-120">また、カスタム型には、オブジェクトインスタンスの順序付けまたは並べ替えを可能にするための <xref:System.IComparable%601> の独自の実装が用意されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4db8-121">次の例は、単純な `Temperature` オブジェクトの <xref:System.IComparable%601> を実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4db8-121">The following example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="c4db8-122">この例では、`Temperature` オブジェクトキーを使用して文字列の <xref:System.Collections.Generic.SortedList%602> コレクションを作成し、一連の温度と文字列を順番にリストに追加します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="c4db8-123"><xref:System.Collections.Generic.SortedList%602.Add%2A> メソッドの呼び出しでは、<xref:System.Collections.Generic.SortedList%602> コレクションは <xref:System.IComparable%601> の実装を使用してリストエントリを並べ替えます。このエントリは、気温の増加順に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c4db8-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="c4db8-124"><see cref="T:System.IComparable`1" /> インターフェイスの型パラメーターを、このインターフェイスを実装している型に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="c4db8-124">Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.</span></span>  
  
<span data-ttu-id="c4db8-125"><see cref="T:System.IComparable`1" />を実装する場合は、<see langword="op_GreaterThan" />、<see langword="op_GreaterThanOrEqual" />、<see langword="op_LessThan" />、および <see langword="op_LessThanOrEqual" /> の各演算子をオーバーロードして、<see cref="M:System.IComparable`1.CompareTo(`0)" />と一致する値を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-125">If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span></span> <span data-ttu-id="c4db8-126">さらに、<see cref="T:System.IEquatable`1" />も実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-126">In addition, you should also implement <see cref="T:System.IEquatable`1" />.</span></span> <span data-ttu-id="c4db8-127">詳細については、<see cref="T:System.IEquatable`1" /> に関する記事を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c4db8-127">See the <see cref="T:System.IEquatable`1" /> article for complete information.</span></span></para></block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(T other);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c4db8-128">このインスタンスと比較するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c4db8-128">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="c4db8-129">現在のインスタンスを同じ型の別のオブジェクトと比較し、現在のインスタンスの並べ替え順序での位置が、比較対象のオブジェクトと比べて前か、後か、または同じかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-129">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="c4db8-130">比較対象オブジェクトの相対順序を示す値。</span><span class="sxs-lookup"><span data-stu-id="c4db8-130">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="c4db8-131">戻り値の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="c4db8-131">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="c4db8-132">値</span><span class="sxs-lookup"><span data-stu-id="c4db8-132">Value</span></span> 
 </term><description> <span data-ttu-id="c4db8-133">意味</span><span class="sxs-lookup"><span data-stu-id="c4db8-133">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="c4db8-134">ゼロより小さい</span><span class="sxs-lookup"><span data-stu-id="c4db8-134">Less than zero</span></span> 
 </term><description> <span data-ttu-id="c4db8-135">このインスタンスの位置が、並べ替え順序において <paramref name="other" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="c4db8-135">This instance precedes <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c4db8-136">0</span><span class="sxs-lookup"><span data-stu-id="c4db8-136">Zero</span></span> 
 </term><description> <span data-ttu-id="c4db8-137">並べ替え順序における、このインスタンスと <paramref name="other" /> の位置が同じです。</span><span class="sxs-lookup"><span data-stu-id="c4db8-137">This instance occurs in the same position in the sort order as <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="c4db8-138">ゼロより大きい</span><span class="sxs-lookup"><span data-stu-id="c4db8-138">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="c4db8-139">このインスタンスの位置が、並べ替え順序において <paramref name="other" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="c4db8-139">This instance follows <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4db8-140"><xref:System.IComparable%601.CompareTo%2A> には、ジェネリックコレクションオブジェクトのメンバーを順序付けるための厳密に型指定された比較メソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="c4db8-140"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="c4db8-141">このため、通常、開発者コードから直接呼び出されることはありません。</span><span class="sxs-lookup"><span data-stu-id="c4db8-141">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="c4db8-142">代わりに、<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> や <xref:System.Collections.Generic.SortedList%602.Add%2A>などのメソッドによって自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c4db8-142">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="c4db8-143">このメソッドは単なる定義であり、有効にするために特定のクラスまたは値型によって実装される必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-143">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="c4db8-144">[戻り値] セクションで指定された比較の意味 ("前"、"前"、"の位置は"、および "は" になります) は、特定の実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-144">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="c4db8-145">定義上、すべてのオブジェクトが `null`より大きいかどうかを比較し、2つの null 参照が互いに等しいかどうかを比較します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-145">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4db8-146">次のコード例は、単純な `Temperature` オブジェクトの <xref:System.IComparable%601> を実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4db8-146">The following code example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="c4db8-147">この例では、`Temperature` オブジェクトキーを使用して文字列の <xref:System.Collections.Generic.SortedList%602> コレクションを作成し、一連の温度と文字列を順番にリストに追加します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-147">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="c4db8-148"><xref:System.Collections.Generic.SortedList%602.Add%2A> メソッドの呼び出しでは、<xref:System.Collections.Generic.SortedList%602> コレクションは <xref:System.IComparable%601> の実装を使用してリストエントリを並べ替えます。このエントリは、気温の増加順に表示されます。</span><span class="sxs-lookup"><span data-stu-id="c4db8-148">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c4db8-149">オブジェクト A、B、および C の場合、次の条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-149">For objects A, B, and C, the following must be true:</span></span> 
 <span data-ttu-id="c4db8-150">0を返すには<c>、CompareTo (a)</c>が必要です。</span><span class="sxs-lookup"><span data-stu-id="c4db8-150"><c>A.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="c4db8-151"><c>Compareto (B)</c>が0を返した場合は、0を返すためには<c>、b. compareto (A)</c>が必要です。</span><span class="sxs-lookup"><span data-stu-id="c4db8-151">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="c4db8-152"><c>Compareto (B)</c>が0と b を返した場合、 <c>compareto (c)</c>は0を返し、0を返すには<c>compareto (c)</c>が必要です。</span><span class="sxs-lookup"><span data-stu-id="c4db8-152">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="c4db8-153"><c>Compareto (B)</c>が0以外の値を返す場合、逆の符号の値を返すには<c>、b. compareto (A)</c>が必要です。</span><span class="sxs-lookup"><span data-stu-id="c4db8-153">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="c4db8-154"><c>Compareto (b)</c>が0以外の値 <paramref name="x" /> を返し、 <c>b-tree (c)</c>が <paramref name="x" />と同じ符号の値 <paramref name="y" /> を返した場合は、<paramref name="x" /> および <paramref name="y" />と同じ符号の値を返すために<c>、compareto (c)</c>が必要になります。</span><span class="sxs-lookup"><span data-stu-id="c4db8-154">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="c4db8-155"><see cref="M:System.IComparable`1.CompareTo(`0)" /> メソッドを使用して、クラスのインスタンスの順序を決定します。</span><span class="sxs-lookup"><span data-stu-id="c4db8-155">Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>
