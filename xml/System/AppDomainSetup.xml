<Type Name="AppDomainSetup" FullName="System.AppDomainSetup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d135b4c4168f9d4cb794f0cacf59cf4ed643bdf" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78828878" /></Metadata><TypeSignature Language="C#" Value="public sealed class AppDomainSetup" FrameworkAlternate="netcore-3.0;netcore-3.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AppDomainSetup extends System.Object" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainSetup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AppDomainSetup" FrameworkAlternate="netcore-3.0;netcore-3.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainSetup sealed" FrameworkAlternate="netcore-3.0;netcore-3.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="F#" Value="type AppDomainSetup = class" FrameworkAlternate="netcore-3.0;netcore-3.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="C#" Value="public sealed class AppDomainSetup : IAppDomainSetup" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AppDomainSetup extends System.Object implements class System.IAppDomainSetup" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AppDomainSetup&#xA;Implements IAppDomainSetup" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainSetup sealed : IAppDomainSetup" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type AppDomainSetup = class&#xA;    interface IAppDomainSetup" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AppDomainSetup extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AppDomainSetup extends System.Object implements class System.IAppDomainSetup" FrameworkAlternate="xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAppDomainSetup</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cbaff-101"><see cref="T:System.AppDomain" /> のインスタンスに追加できるアセンブリ バインディング情報を表します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-101">Represents assembly binding information that can be added to an instance of <see cref="T:System.AppDomain" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-102"><xref:System.AppDomainSetup> インスタンスのプロパティを変更しても、既存の <xref:System.AppDomain>には影響しません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-102">Changing the properties of an <xref:System.AppDomainSetup> instance does not affect any existing <xref:System.AppDomain>.</span></span> <span data-ttu-id="cbaff-103"><xref:System.AppDomainSetup> インスタンスをパラメーターとして使用して <xref:System.AppDomain.CreateDomain%2A> メソッドを呼び出すと、新しい <xref:System.AppDomain>の作成にのみ影響することがあります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-103">It can affect only the creation of a new <xref:System.AppDomain>, when the <xref:System.AppDomain.CreateDomain%2A> method is called with the <xref:System.AppDomainSetup> instance as a parameter.</span></span>  
  
 <span data-ttu-id="cbaff-104">このクラスによって、<xref:System.IAppDomainSetup> インターフェイスが実装されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-104">This class implements the <xref:System.IAppDomainSetup> interface.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cbaff-105"><xref:System.AppDomainSetup.DisallowCodeDownload%2A> プロパティの既定値は false です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-105">The default value for the <xref:System.AppDomainSetup.DisallowCodeDownload%2A> property is false.</span></span> <span data-ttu-id="cbaff-106">この設定は、サービスでは安全ではありません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-106">This setting is unsafe for services.</span></span> <span data-ttu-id="cbaff-107">部分的に信頼されているコードをサービスがダウンロードできないようにするには、このプロパティを true に設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-107">To help prevent services from downloading partially trusted code, set this property to true</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/07ea8438-7a34-49f0-a7e8-3d6ff7e4a482"><span data-ttu-id="cbaff-108">方法: アプリケーションドメインを構成する</span><span class="sxs-lookup"><span data-stu-id="cbaff-108">How To: Configure an Application Domain</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cbaff-109"><see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-109">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup ();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cbaff-110"><see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-110">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor(System.ActivationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (activationContext As ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="new AppDomainSetup : ActivationContext -&gt; AppDomainSetup" Usage="new System.AppDomainSetup activationContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="cbaff-111">アプリケーション ドメインに使用されるアクティベーション コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="cbaff-111">The activation context to be used for an application domain.</span></span></param>
        <summary><span data-ttu-id="cbaff-112">アプリケーション ドメイン用に指定されたアクティベーション コンテキスト (マニフェストに基づくアクティベーションに使用される) で、<see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-112">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class with the specified activation context to use for manifest-based activation of an application domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-113">`activationContext` に対して指定された <xref:System.ActivationContext> オブジェクトは、新しいアプリケーションドメインをアクティブ化するために必要な情報を含む <xref:System.Runtime.Hosting.ActivationArguments> オブジェクトを生成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-113">The <xref:System.ActivationContext> object specified for `activationContext` is used to generate an <xref:System.Runtime.Hosting.ActivationArguments> object containing information required to activate a new application domain.</span></span> <span data-ttu-id="cbaff-114">この <xref:System.Runtime.Hosting.ActivationArguments> オブジェクトには、<xref:System.AppDomainSetup.ActivationArguments%2A> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-114">This <xref:System.Runtime.Hosting.ActivationArguments> object can be accessed by using the <xref:System.AppDomainSetup.ActivationArguments%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cbaff-115"><paramref name="activationContext" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-115"><paramref name="activationContext" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.AppDomainSetup.ActivationArguments" />
        <altmember cref="T:System.Runtime.Hosting.ActivationArguments" />
        <altmember cref="T:System.ActivationContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup (System.Runtime.Hosting.ActivationArguments activationArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Hosting.ActivationArguments activationArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (activationArguments As ActivationArguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup(System::Runtime::Hosting::ActivationArguments ^ activationArguments);" />
      <MemberSignature Language="F#" Value="new AppDomainSetup : System.Runtime.Hosting.ActivationArguments -&gt; AppDomainSetup" Usage="new System.AppDomainSetup activationArguments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="activationArguments" Type="System.Runtime.Hosting.ActivationArguments" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="activationArguments"><span data-ttu-id="cbaff-116">新しいアプリケーション ドメインの、マニフェストに基づくアクティベーションに必要な情報を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbaff-116">An object that specifies information required for the manifest-based activation of a new application domain.</span></span></param>
        <summary><span data-ttu-id="cbaff-117">アプリケーション ドメインのマニフェストに基づくアクティベーション用に必要な、指定されたアクティベーション引数で、<see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-117">Initializes a new instance of the <see cref="T:System.AppDomainSetup" /> class with the specified activation arguments required for manifest-based activation of an application domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-118">`activationArguments` に指定されたオブジェクトには、<xref:System.AppDomainSetup.ActivationArguments%2A> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-118">The object specified for `activationArguments` can be accessed by using the <xref:System.AppDomainSetup.ActivationArguments%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cbaff-119"><paramref name="activationArguments" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-119"><paramref name="activationArguments" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ActivationArguments">
      <MemberSignature Language="C#" Value="public System.Runtime.Hosting.ActivationArguments ActivationArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ActivationArguments ActivationArguments" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ActivationArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivationArguments As ActivationArguments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Hosting::ActivationArguments ^ ActivationArguments { System::Runtime::Hosting::ActivationArguments ^ get(); void set(System::Runtime::Hosting::ActivationArguments ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActivationArguments : System.Runtime.Hosting.ActivationArguments with get, set" Usage="System.AppDomainSetup.ActivationArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ActivationArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-120">アプリケーション ドメインのアクティベーションに関するデータを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-120">Gets or sets data about the activation of an application domain.</span></span></summary>
        <value><span data-ttu-id="cbaff-121">アプリケーション ドメインのアクティベーションに関するデータを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbaff-121">An object that contains data about the activation of an application domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-122">このプロパティが `null`に設定されている場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-122">No exception is thrown if this property is set to `null`.</span></span>  
  
 <span data-ttu-id="cbaff-123"><xref:System.Runtime.Hosting.ActivationArguments> オブジェクトによって提供される情報は、マニフェストに基づくアクティベーションをサポートします。</span><span class="sxs-lookup"><span data-stu-id="cbaff-123">The information provided by the <xref:System.Runtime.Hosting.ActivationArguments> object supports manifest-based activation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cbaff-124">プロパティは、<see cref="T:System.Runtime.Hosting.ActivationArguments" /> プロパティから返される <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトのアプリケーション ID とは一致しないアプリケーション ID の <see cref="P:System.AppDomainSetup.ApplicationTrust" /> オブジェクトに設定されています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-124">The property is set to an <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object whose application identity does not match the application identity of the <see cref="T:System.Security.Policy.ApplicationTrust" /> object returned by the <see cref="P:System.AppDomainSetup.ApplicationTrust" /> property.</span></span> <span data-ttu-id="cbaff-125"><see cref="P:System.AppDomainSetup.ApplicationTrust" /> プロパティが <see langword="null" /> の場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-125">No exception is thrown if the <see cref="P:System.AppDomainSetup.ApplicationTrust" /> property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainInitializer">
      <MemberSignature Language="C#" Value="public AppDomainInitializer AppDomainInitializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomainInitializer AppDomainInitializer" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainInitializer" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainInitializer As AppDomainInitializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainInitializer ^ AppDomainInitializer { AppDomainInitializer ^ get(); void set(AppDomainInitializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainInitializer : AppDomainInitializer with get, set" Usage="System.AppDomainSetup.AppDomainInitializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainInitializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-126">アプリケーション ドメインの初期化時に呼び出されるコールバック メソッドを表す <see cref="T:System.AppDomainInitializer" /> デリゲートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-126">Gets or sets the <see cref="T:System.AppDomainInitializer" /> delegate, which represents a callback method that is invoked when the application domain is initialized.</span></span></summary>
        <value><span data-ttu-id="cbaff-127">アプリケーション ドメインの初期化時に呼び出されるコールバック メソッドを表すデリゲート。</span><span class="sxs-lookup"><span data-stu-id="cbaff-127">A delegate that represents a callback method that is invoked when the application domain is initialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-128">コールバックメソッドに情報を渡すには、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> プロパティに文字列の配列を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-128">To pass information to the callback method, assign an array of strings to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property.</span></span> <span data-ttu-id="cbaff-129">配列は、<xref:System.AppDomain> が初期化されるたびに、コールバックメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-129">The array is passed to the callback method each time an <xref:System.AppDomain> is initialized.</span></span>  
  
 <span data-ttu-id="cbaff-130">コールバックメソッドは、新しく作成されたアプリケーションドメインのコンテキストで実行されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-130">The callback method is executed in the context of the newly created application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbaff-131">次の例では、<xref:System.AppDomainSetup> オブジェクトと既定のアプリケーションドメインの証拠を使用して、`ChildDomain`という名前の子アプリケーションドメインを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-131">The following example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain.</span></span> <span data-ttu-id="cbaff-132"><xref:System.AppDomainSetup.AppDomainInitializer%2A> プロパティは、子ドメインの初期化時に呼び出されるコールバックメソッド `AppDomainInit`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-132">The <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized.</span></span> <span data-ttu-id="cbaff-133">コールバックメソッドの引数は、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> プロパティに割り当てられている文字列の配列に配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-133">The arguments for the callback method are placed in an array of strings, which is assigned to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property.</span></span> <span data-ttu-id="cbaff-134">子ドメインが作成されると、コールバックメソッドは単に文字列を出力します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-134">When the child domain is created, the callback method simply prints the strings.</span></span>  
  
 [!code-cpp[AppDomainInitializer#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainInitializer/cpp/source.cpp#1)]
 [!code-csharp[AppDomainInitializer#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainInitializer/CS/source.cs#1)]
 [!code-vb[AppDomainInitializer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainInitializer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomainInitializer" />
        <altmember cref="P:System.AppDomainSetup.AppDomainInitializerArguments" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainInitializerArguments">
      <MemberSignature Language="C#" Value="public string[] AppDomainInitializerArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AppDomainInitializerArguments" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainInitializerArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainInitializerArguments As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AppDomainInitializerArguments { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainInitializerArguments : string[] with get, set" Usage="System.AppDomainSetup.AppDomainInitializerArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-135"><see cref="T:System.AppDomainInitializer" /> デリゲートが表すコールバック メソッドへの引数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-135">Gets or sets the arguments passed to the callback method represented by the <see cref="T:System.AppDomainInitializer" /> delegate.</span></span> <span data-ttu-id="cbaff-136">コールバック メソッドは、アプリケーション ドメインの初期化時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-136">The callback method is invoked when the application domain is initialized.</span></span></summary>
        <value><span data-ttu-id="cbaff-137"><see cref="T:System.AppDomainInitializer" /> の初期化中、<see cref="T:System.AppDomain" /> デリゲートが表すコールバック メソッドが呼び出されたとき、このコールバック メソッドに渡される文字列の配列。</span><span class="sxs-lookup"><span data-stu-id="cbaff-137">An array of strings that is passed to the callback method represented by the <see cref="T:System.AppDomainInitializer" /> delegate, when the callback method is invoked during <see cref="T:System.AppDomain" /> initialization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-138"><xref:System.AppDomainSetup.AppDomainInitializer%2A> プロパティを使用して、<xref:System.AppDomain> の初期化中に呼び出されるコールバックメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-138">Use the <xref:System.AppDomainSetup.AppDomainInitializer%2A> property to specify a callback method that is invoked during <xref:System.AppDomain> initialization.</span></span> <span data-ttu-id="cbaff-139"><xref:System.AppDomainSetup.AppDomainInitializer%2A> プロパティが設定されていない場合、このプロパティに割り当てられた配列は使用されません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-139">If the <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is not set, the array assigned to this property is not used.</span></span>  
  
 <span data-ttu-id="cbaff-140">コールバックメソッドは、新しく作成されたアプリケーションドメインのコンテキストで実行されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-140">The callback method is executed in the context of the newly created application domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbaff-141">次のコード例では、<xref:System.AppDomainSetup> オブジェクトと既定のアプリケーションドメインの証拠を使用して、`ChildDomain`という名前の子アプリケーションドメインを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-141">The following code example creates a child application domain named `ChildDomain`, using an <xref:System.AppDomainSetup> object and evidence from the default application domain.</span></span> <span data-ttu-id="cbaff-142"><xref:System.AppDomainSetup.AppDomainInitializer%2A> プロパティは、子ドメインの初期化時に呼び出されるコールバックメソッド `AppDomainInit`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-142">The <xref:System.AppDomainSetup.AppDomainInitializer%2A> property is set to the callback method `AppDomainInit`, which is invoked when the child domain is initialized.</span></span> <span data-ttu-id="cbaff-143">コールバックメソッドの引数は、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> プロパティに割り当てられている文字列の配列に配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-143">The arguments for the callback method are placed in an array of strings, which is assigned to the <xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> property.</span></span> <span data-ttu-id="cbaff-144">子ドメインが作成されると、コールバックメソッドは単に文字列を出力します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-144">When the child domain is created, the callback method simply prints the strings.</span></span>  
  
 [!code-cpp[AppDomainInitializer#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainInitializer/cpp/source.cpp#1)]
 [!code-csharp[AppDomainInitializer#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainInitializer/CS/source.cs#1)]
 [!code-vb[AppDomainInitializer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainInitializer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomainInitializer" />
        <altmember cref="P:System.AppDomainSetup.AppDomainInitializer" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainManagerAssembly">
      <MemberSignature Language="C#" Value="public string AppDomainManagerAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppDomainManagerAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainManagerAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainManagerAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppDomainManagerAssembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainManagerAssembly : string with get, set" Usage="System.AppDomainSetup.AppDomainManagerAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-145">この <see cref="T:System.AppDomainSetup" /> オブジェクトを使用して作成されたアプリケーション ドメインのアプリケーション ドメイン マネージャーの型を提供するアセンブリの表示名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-145">Gets or sets the display name of the assembly that provides the type of the application domain manager for application domains created using this <see cref="T:System.AppDomainSetup" /> object.</span></span></summary>
        <value><span data-ttu-id="cbaff-146">アプリケーション ドメイン マネージャーの <see cref="T:System.Type" /> を提供するアセンブリの表示名。</span><span class="sxs-lookup"><span data-stu-id="cbaff-146">The display name of the assembly that provides the <see cref="T:System.Type" /> of the application domain manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-147">アプリケーションドメインマネージャーの種類を指定するには、このプロパティと <xref:System.AppDomainSetup.AppDomainManagerType%2A> プロパティの両方を設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-147">To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property.</span></span> <span data-ttu-id="cbaff-148">これらのプロパティのいずれかが設定されていない場合、もう一方は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-148">If either of these properties is not set, the other is ignored.</span></span>  
  
 <span data-ttu-id="cbaff-149">型が指定されていない場合、アプリケーションドメインマネージャーは、親アプリケーションドメイン (<xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType> メソッドの呼び出し元のアプリケーションドメイン) と同じ型から作成されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-149">If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType> method is called).</span></span>  
  
 <span data-ttu-id="cbaff-150">アプリケーションドメインが読み込まれると、アセンブリが存在しない場合、またはアセンブリに <xref:System.AppDomainSetup.AppDomainManagerType%2A> プロパティによって指定された型が含まれていない場合、<xref:System.TypeLoadException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-150">When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly does not exist, or if the assembly does not contain the type specified by the <xref:System.AppDomainSetup.AppDomainManagerType%2A> property.</span></span> <span data-ttu-id="cbaff-151">アセンブリが見つかってもバージョン情報が一致しない場合、<xref:System.IO.FileLoadException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-151"><xref:System.IO.FileLoadException> is thrown if the assembly is found but the version information does not match.</span></span>  
  
 <span data-ttu-id="cbaff-152">既定のアプリケーションドメインのアプリケーションドメインマネージャーを設定するには、アプリケーション構成ファイルの[\<ランタイム >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)セクションで[\<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)と[\<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)要素を使用するか、<xref:System.AppDomainManager>で説明されている環境変数を使用します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-152">To set the application domain manager for the default application domain, use the [\<appDomainManagerAssembly>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) and [\<appDomainManagerType>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) elements in the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.</span></span>  
  
 <span data-ttu-id="cbaff-153">この機能を適用するには、アプリケーションが完全に信頼されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-153">This feature requires the application to have full trust.</span></span> <span data-ttu-id="cbaff-154">(たとえば、デスクトップで実行されているアプリケーションには完全な信頼があります)。アプリケーションが完全に信頼されていない場合は、<xref:System.TypeLoadException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-154">(For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="cbaff-155">アセンブリ表示名の形式は、<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-155">The format of the assembly display name is given by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainManagerType">
      <MemberSignature Language="C#" Value="public string AppDomainManagerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppDomainManagerType" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainManagerType" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainManagerType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppDomainManagerType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainManagerType : string with get, set" Usage="System.AppDomainSetup.AppDomainManagerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-156">この <see cref="T:System.AppDomainSetup" /> オブジェクトを使用して作成されたアプリケーション ドメインのアプリケーション ドメイン マネージャーを提供する型の完全名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-156">Gets or sets the full name of the type that provides the application domain manager for application domains created using this <see cref="T:System.AppDomainSetup" /> object.</span></span></summary>
        <value><span data-ttu-id="cbaff-157">名前空間を含む、型の完全名。</span><span class="sxs-lookup"><span data-stu-id="cbaff-157">The full name of the type, including the namespace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-158">アプリケーションドメインマネージャーの種類を指定するには、このプロパティと <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> プロパティの両方を設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-158">To specify the type of the application domain manager, set both this property and the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property.</span></span> <span data-ttu-id="cbaff-159">これらのプロパティのいずれかが設定されていない場合、もう一方は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-159">If either of these properties is not set, the other is ignored.</span></span>  
  
 <span data-ttu-id="cbaff-160">型が指定されていない場合、アプリケーションドメインマネージャーは、親アプリケーションドメイン (<xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType> メソッドの呼び出し元のアプリケーションドメイン) と同じ型から作成されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-160">If no type is provided, the application domain manager is created from the same type as the parent application domain (that is, the application domain from which the <xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType> method is called).</span></span>  
  
 <span data-ttu-id="cbaff-161">アプリケーションドメインが読み込まれると、<xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> プロパティによって指定されたアセンブリにこのプロパティで指定された型が含まれていない場合、<xref:System.TypeLoadException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-161">When the application domain is loaded, <xref:System.TypeLoadException> is thrown if the assembly specified by the <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> property does not contain the type specified by this property.</span></span>  
  
 <span data-ttu-id="cbaff-162">既定のアプリケーションドメインのアプリケーションドメインマネージャーを設定するには、アプリケーション構成ファイルの[\<ランタイム >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)セクションで[\<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)と[\<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)要素を使用するか、<xref:System.AppDomainManager>で説明されている環境変数を使用します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-162">To set the application domain manager for the default application domain, use the [\<appDomainManagerAssembly>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md) and [\<appDomainManagerType>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md) elements in the [\<runtime>](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md) section of the application configuration file, or use the environment variables described in <xref:System.AppDomainManager>.</span></span>  
  
 <span data-ttu-id="cbaff-163">この機能を適用するには、アプリケーションが完全に信頼されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-163">This feature requires the application to have full trust.</span></span> <span data-ttu-id="cbaff-164">(たとえば、デスクトップで実行されているアプリケーションには完全な信頼があります)。アプリケーションが完全に信頼されていない場合は、<xref:System.TypeLoadException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-164">(For example, an application running on the desktop has full trust.) If the application does not have full trust, a <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="cbaff-165">型の完全名の形式は、<xref:System.Type.FullName%2A?displayProperty=nameWithType> プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-165">The format of the full name of a type is given by the <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationBase">
      <MemberSignature Language="C#" Value="public string ApplicationBase { get; }" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationBase" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationBase As String" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationBase { System::String ^ get(); };" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.ApplicationBase : string" Usage="System.AppDomainSetup.ApplicationBase" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public string ApplicationBase { get; set; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationBase As String" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationBase { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ApplicationBase : string with get, set" Usage="System.AppDomainSetup.ApplicationBase" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ApplicationBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-166">アプリケーションが格納されているディレクトリの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-166">Gets or sets the name of the directory containing the application.</span></span></summary>
        <value><span data-ttu-id="cbaff-167">アプリケーションのベース ディレクトリの名前。</span><span class="sxs-lookup"><span data-stu-id="cbaff-167">The name of the application base directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-168">アプリケーションのベースディレクトリは、アセンブリマネージャーがアセンブリのプローブを開始する場所です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-168">The application base directory is where the assembly manager begins probing for assemblies.</span></span>  
  
 <span data-ttu-id="cbaff-169"><xref:System.AppDomainSetup.ApplicationBase%2A> プロパティは、アプリケーションドメインに付与されるアクセス許可に影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-169">The <xref:System.AppDomainSetup.ApplicationBase%2A> property can influence which permissions are granted to an application domain.</span></span> <span data-ttu-id="cbaff-170">たとえば、ローカルコンピューターから送信されるアプリケーションドメインは、通常、元の場所に基づいて完全信頼を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-170">For example, an application domain originating from the local computer normally receives full trust based on its location of origin.</span></span> <span data-ttu-id="cbaff-171">ただし、その <xref:System.AppDomain> の [<xref:System.AppDomainSetup.ApplicationBase%2A>] プロパティがイントラネットディレクトリの完全名に設定されている場合、アプリケーションドメインが実際にローカルコンピューターから送信されていても、<xref:System.AppDomainSetup.ApplicationBase%2A> 設定によって、アプリケーションドメインに付与されたアクセス許可が LocalIntranet 付与に限定されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-171">However, if the <xref:System.AppDomainSetup.ApplicationBase%2A> property of that <xref:System.AppDomain> is set to the full name of an intranet directory, the <xref:System.AppDomainSetup.ApplicationBase%2A> setting restricts the permissions granted to the application domain to a LocalIntranet grant even though the application domain actually originates from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbaff-172">次の例では、<xref:System.AppDomainSetup.ApplicationBase%2A> プロパティを使用して、アセンブリローダーが新しいアプリケーションドメインに読み込むアセンブリのプローブを開始する場所を設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-172">The following example demonstrates how to use the <xref:System.AppDomainSetup.ApplicationBase%2A> property to set the location where the assembly loader begins probing for assemblies to load into a new application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbaff-173">指定したフォルダーが存在することを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-173">You must ensure that the folder you specify exists.</span></span>  
  
 [!code-cpp[ADApplicationBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADApplicationBase/CPP/adapplicationbase.cpp#1)]
 [!code-csharp[ADApplicationBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADApplicationBase/CS/adapplicationbase.cs#1)]
 [!code-vb[ADApplicationBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADApplicationBase/VB/adapplicationbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.AppDomainSetup.ApplicationName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ApplicationName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-174">アプリケーションの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-174">Gets or sets the name of the application.</span></span></summary>
        <value><span data-ttu-id="cbaff-175">アプリケーションの名前です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-175">The name of the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cbaff-176">次の例は、新しいアプリケーションドメインを作成するときに <xref:System.AppDomainSetup.ApplicationName%2A> プロパティを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-176">The following example shows how to set the <xref:System.AppDomainSetup.ApplicationName%2A> property when you create a new application domain.</span></span>  
  
 <span data-ttu-id="cbaff-177">この例では、新しいアプリケーションドメインを作成し、<xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType> メソッドを呼び出して、例のアセンブリを新しいアプリケーションドメインに読み込み、`Worker` クラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-177">The example creates a new application domain, and then calls the <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType> method to load the example assembly into the new application domain and create an instance of the `Worker` class.</span></span> <span data-ttu-id="cbaff-178">`Worker` クラスは <xref:System.MarshalByRefObject>を継承するため、この例では <xref:System.AppDomain.CreateInstanceAndUnwrap%2A> によって返されたプロキシを使用して、`TestLoad` メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-178">The `Worker` class inherits <xref:System.MarshalByRefObject>, so the example can use the proxy returned by <xref:System.AppDomain.CreateInstanceAndUnwrap%2A> to call the `TestLoad` method.</span></span>  
  
 <span data-ttu-id="cbaff-179">`TestLoad` メソッドは、指定したアセンブリを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-179">The `TestLoad` method loads an assembly that you specify.</span></span> <span data-ttu-id="cbaff-180">有効な完全修飾アセンブリ名を指定するか、<xref:System.Reflection.Assembly.Load%28System.String%29> メソッドをコメントアウトする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-180">You must either specify a valid, fully qualified assembly name, or comment out the <xref:System.Reflection.Assembly.Load%28System.String%29> method.</span></span> <span data-ttu-id="cbaff-181">`TestLoad` メソッドは、新しいアプリケーションドメインに読み込まれるアセンブリの一覧を表示し、指定したアセンブリとサンプルアセンブリが読み込まれることを示します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-181">The `TestLoad` method lists the assemblies that are loaded into the new application domain, showing that your specified assembly and the example assembly are loaded.</span></span>  
  
 <span data-ttu-id="cbaff-182">この例では、<xref:System.LoaderOptimizationAttribute> 属性を使用して、アプリケーションドメイン間でコードを共有する方法をアセンブリローダーに指示します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-182">The example uses the <xref:System.LoaderOptimizationAttribute> attribute to tell the assembly loader how the application will share code across application domains.</span></span>  
  
 [!code-cpp[ADMultiDomain#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADMultiDomain/CPP/admultidomain.cpp#1)]
 [!code-csharp[ADMultiDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADMultiDomain/CS/admultidomain.cs#1)]
 [!code-vb[ADMultiDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADMultiDomain/VB/admultidomain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationTrust">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust ApplicationTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.ApplicationTrust ApplicationTrust" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationTrust As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::ApplicationTrust ^ ApplicationTrust { System::Security::Policy::ApplicationTrust ^ get(); void set(System::Security::Policy::ApplicationTrust ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationTrust : System.Security.Policy.ApplicationTrust with get, set" Usage="System.AppDomainSetup.ApplicationTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-183">セキュリティ情報や信頼情報を格納するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-183">Gets or sets an object containing security and trust information.</span></span></summary>
        <value><span data-ttu-id="cbaff-184">セキュリティ情報や信頼情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbaff-184">An object that contains security and trust information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-185">このプロパティは、<xref:System.AppDomainSetup> が作成されるときに `null` ます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-185">This property is `null` when the <xref:System.AppDomainSetup> is created.</span></span> <span data-ttu-id="cbaff-186">変更後、null 参照にリセットすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-186">Once changed, it cannot be reset to a null reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cbaff-187">プロパティは、<see cref="T:System.Security.Policy.ApplicationTrust" /> プロパティから返される <see cref="T:System.Runtime.Hosting.ActivationArguments" /> オブジェクトのアプリケーション ID とは一致しないアプリケーション ID の <see cref="P:System.AppDomainSetup.ActivationArguments" /> オブジェクトに設定されています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-187">The property is set to an <see cref="T:System.Security.Policy.ApplicationTrust" /> object whose application identity does not match the application identity of the <see cref="T:System.Runtime.Hosting.ActivationArguments" /> object returned by the <see cref="P:System.AppDomainSetup.ActivationArguments" /> property.</span></span> <span data-ttu-id="cbaff-188"><see cref="P:System.AppDomainSetup.ActivationArguments" /> プロパティが <see langword="null" /> の場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-188">No exception is thrown if the <see cref="P:System.AppDomainSetup.ActivationArguments" /> property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cbaff-189">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-189">The property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CachePath">
      <MemberSignature Language="C#" Value="public string CachePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CachePath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.CachePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CachePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePath : string with get, set" Usage="System.AppDomainSetup.CachePath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.CachePath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-190">ファイルがシャドウ コピーされる、そのアプリケーションに固有の領域の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-190">Gets or sets the name of an area specific to the application where files are shadow copied.</span></span></summary>
        <value><span data-ttu-id="cbaff-191">ファイルのシャドウ コピー先のディレクトリ パスとファイル名から成る完全修飾名。</span><span class="sxs-lookup"><span data-stu-id="cbaff-191">The fully qualified name of the directory path and file name where files are shadow copied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-192">このプロパティが効果を持つようにするには、<xref:System.AppDomainSetup.ApplicationName%2A> プロパティも設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-192">In order for this property to have an effect, the <xref:System.AppDomainSetup.ApplicationName%2A> property must also be set.</span></span> <span data-ttu-id="cbaff-193"><xref:System.AppDomainSetup.ApplicationName%2A> プロパティが設定されていない場合、<xref:System.AppDomainSetup.CachePath%2A> プロパティは無視され、シャドウコピーキャッシュの場所は既定でダウンロードキャッシュに設定されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-193">If the <xref:System.AppDomainSetup.ApplicationName%2A> property is not set, the <xref:System.AppDomainSetup.CachePath%2A> property is ignored and the shadow copy cache location defaults to the download cache.</span></span>  
  
 <span data-ttu-id="cbaff-194">シャドウコピーの詳細については、「[アセンブリのシャドウコピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-194">For more information on shadow copying, see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyDirectories" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md"><span data-ttu-id="cbaff-195">アセンブリのシャドウ コピー</span><span class="sxs-lookup"><span data-stu-id="cbaff-195">Shadow Copying Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationFile">
      <MemberSignature Language="C#" Value="public string ConfigurationFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationFile" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ConfigurationFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationFile : string with get, set" Usage="System.AppDomainSetup.ConfigurationFile" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ConfigurationFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-196">アプリケーション ドメインの構成ファイルの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-196">Gets or sets the name of the configuration file for an application domain.</span></span></summary>
        <value><span data-ttu-id="cbaff-197">構成ファイルの名前です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-197">The name of the configuration file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-198">構成ファイルでは、アプリケーションドメインの検索規則と構成データについて説明します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-198">The configuration file describes the search rules and configuration data for the application domain.</span></span> <span data-ttu-id="cbaff-199">意味のある値は状況によって異なるため、アプリケーションドメインを作成するホストは、このデータを提供する役割を担います。</span><span class="sxs-lookup"><span data-stu-id="cbaff-199">The host that creates the application domain is responsible for supplying this data because the meaningful values vary from situation to situation.</span></span>  
  
 <span data-ttu-id="cbaff-200">たとえば、ASP.NET アプリケーションの構成データはアプリケーション、サイト、およびコンピューターごとに保存され、実行可能ファイルの構成データはアプリケーション、ユーザー、およびコンピューターごとに格納されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-200">For example, the configuration data for ASP.NET applications is stored for each application, site, and computer, while the configuration data for an executable is stored for each application, user, and computer.</span></span> <span data-ttu-id="cbaff-201">特定の状況の構成データの詳細を認識しているのはホストだけです。</span><span class="sxs-lookup"><span data-stu-id="cbaff-201">Only the host knows the specifics of the configuration data for a particular circumstance.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f04816ab-110d-4e28-9283-845d6d9a4a68"><span data-ttu-id="cbaff-202">ランタイム設定スキーマ</span><span class="sxs-lookup"><span data-stu-id="cbaff-202">Runtime Settings Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisallowApplicationBaseProbing">
      <MemberSignature Language="C#" Value="public bool DisallowApplicationBaseProbing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowApplicationBaseProbing" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowApplicationBaseProbing" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowApplicationBaseProbing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowApplicationBaseProbing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowApplicationBaseProbing : bool with get, set" Usage="System.AppDomainSetup.DisallowApplicationBaseProbing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-203">読み込むアセンブリを検索する際に、アプリケーションのベース パスおよびプライベート バイナリ パスを調査対象から除外するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-203">Specifies whether the application base path and private binary path are probed when searching for assemblies to load.</span></span></summary>
        <value><span data-ttu-id="cbaff-204">調査対象としない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cbaff-204"><see langword="true" /> if probing is not allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cbaff-205">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-205">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-206"><xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> プロパティが `true`の場合、<xref:System.AppDomainSetup.ApplicationBase%2A> プロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-206">If the <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> property is `true`, the value of the <xref:System.AppDomainSetup.ApplicationBase%2A> property is ignored.</span></span> <span data-ttu-id="cbaff-207">つまり、<xref:System.AppDomainSetup.ApplicationBase%2A> プロパティによって指定されたディレクトリには、どのアセンブリもプローブされません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-207">That is, no assemblies are probed for in the directories specified by the <xref:System.AppDomainSetup.ApplicationBase%2A> property.</span></span> <span data-ttu-id="cbaff-208">また、<xref:System.AppDomainSetup.PrivateBinPath%2A> プロパティと <xref:System.AppDomainSetup.PrivateBinPathProbe%2A> プロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-208">In addition, the values of the <xref:System.AppDomainSetup.PrivateBinPath%2A> property and the <xref:System.AppDomainSetup.PrivateBinPathProbe%2A> property are ignored.</span></span> <span data-ttu-id="cbaff-209"><xref:System.AppDomainSetup.PrivateBinPath%2A> プロパティによって指定されたディレクトリには、どのアセンブリもプローブされません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-209">No assemblies are probed for in the directories specified by the <xref:System.AppDomainSetup.PrivateBinPath%2A> property.</span></span>  
  
 <span data-ttu-id="cbaff-210"><xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> プロパティは、読み込みプロセスをさらに制御するレイヤーを提供します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-210">The <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> property provides an additional layer of control over the loading process.</span></span> <span data-ttu-id="cbaff-211">通常のアセンブリ読み込みシーケンスでは、アプリケーションベースは <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> イベントが発生する前にプローブされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-211">In the normal assembly loading sequence, the application base is probed before the <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> event is raised.</span></span> <span data-ttu-id="cbaff-212">ただし、アプリケーションによっては、ドキュメント内の OLE 複合ファイルから、またはグローバルアセンブリキャッシュにない一意の既知の場所や、<xref:System.AppDomainSetup.ApplicationBase%2A> および <xref:System.AppDomainSetup.PrivateBinPath%2A> のプロパティで指定されたディレクトリにアセンブリを読み込むことが必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-212">However, some applications might need to load assemblies from an OLE compound file within a document, or from a unique known location that is neither in the global assembly cache nor in the directories specified by the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> properties.</span></span> <span data-ttu-id="cbaff-213">このようなアプリケーションでは、<xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> プロパティを使用して、通常のプローブによる遅延を回避し、通常のプローブパスに配置されている可能性がある必要なアセンブリのコピーを読み込まないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-213">Such applications can use the <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> property to avoid the delay caused by normal probing, and to avoid loading copies of the necessary assembly that might be located in the normal probing paths.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowBindingRedirects">
      <MemberSignature Language="C#" Value="public bool DisallowBindingRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowBindingRedirects" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowBindingRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowBindingRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowBindingRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowBindingRedirects : bool with get, set" Usage="System.AppDomainSetup.DisallowBindingRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-214">アプリケーション ドメインでアセンブリ バインディング リダイレクトを使用できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-214">Gets or sets a value that indicates whether an application domain allows assembly binding redirection.</span></span></summary>
        <value><span data-ttu-id="cbaff-215">アセンブリのリダイレクトを使用できない場合は <see langword="true" />、使用できる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cbaff-215"><see langword="true" /> if redirection of assemblies is not allowed; <see langword="false" /> if it is allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-216"><xref:System.AppDomainSetup.DisallowBindingRedirects%2A> プロパティは、アセンブリバインドリダイレクトがアプリケーションシナリオに含まれないサービスおよびサーバーアプリケーションによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-216">The <xref:System.AppDomainSetup.DisallowBindingRedirects%2A> property is designed to be used by services and server applications where assembly binding redirection is not part of the application scenario.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowCodeDownload">
      <MemberSignature Language="C#" Value="public bool DisallowCodeDownload { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowCodeDownload" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowCodeDownload" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowCodeDownload As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowCodeDownload { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowCodeDownload : bool with get, set" Usage="System.AppDomainSetup.DisallowCodeDownload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-217">アプリケーション ドメインでアセンブリの HTTP ダウンロードを使用できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-217">Gets or sets a value that indicates whether HTTP download of assemblies is allowed for an application domain.</span></span></summary>
        <value><span data-ttu-id="cbaff-218">アセンブリの HTTP ダウンロードを使用できない場合は <see langword="true" />。使用できる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cbaff-218"><see langword="true" /> if HTTP download of assemblies is not allowed; <see langword="false" /> if it is allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-219"><xref:System.AppDomainSetup.DisallowCodeDownload%2A> プロパティは、イントラネットまたはインターネットからのコードのダウンロードがアプリケーションのシナリオに含まれないサービスおよびサーバーアプリケーションによって使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-219">The <xref:System.AppDomainSetup.DisallowCodeDownload%2A> property is designed to be used by services and server applications where downloading code from an intranet or the Internet is not part of the application scenario.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="cbaff-220"><xref:System.AppDomainSetup.DisallowCodeDownload%2A> プロパティの既定値は `false`です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-220">The default value for the <xref:System.AppDomainSetup.DisallowCodeDownload%2A> property is `false`.</span></span> <span data-ttu-id="cbaff-221">この設定は、サービスでは安全ではありません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-221">This setting is unsafe for services.</span></span> <span data-ttu-id="cbaff-222">部分的に信頼されているコードをサービスがダウンロードできないようにするには、このプロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-222">To help prevent services from downloading partially trusted code, set this property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowPublisherPolicy">
      <MemberSignature Language="C#" Value="public bool DisallowPublisherPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowPublisherPolicy" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowPublisherPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowPublisherPolicy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowPublisherPolicy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowPublisherPolicy : bool with get, set" Usage="System.AppDomainSetup.DisallowPublisherPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-223">構成ファイルの [&lt;publisherPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/publisherpolicy-element.md) セクションをアプリケーション ドメインに適用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-223">Gets or sets a value that indicates whether the [&lt;publisherPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/publisherpolicy-element.md) section of the configuration file is applied to an application domain.</span></span></summary>
        <value><span data-ttu-id="cbaff-224">アプリケーション ドメインの構成ファイルの <see langword="true" /> セクションを無視する場合は <see langword="&lt;publisherPolicy&gt;" />。宣言された発行元ポリシーを有効とする場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cbaff-224"><see langword="true" /> if the <see langword="&lt;publisherPolicy&gt;" /> section of the configuration file for an application domain is ignored; <see langword="false" /> if the declared publisher policy is honored.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-225"><xref:System.AppDomainSetup.DisallowPublisherPolicy%2A> プロパティは、ローカルに読み込まれる Web アプリケーションに特に適用されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-225">The <xref:System.AppDomainSetup.DisallowPublisherPolicy%2A> property specifically applies to a Web application that is loaded locally.</span></span> <span data-ttu-id="cbaff-226">このプロパティを使用すると、安全でない Web アプリケーションをセーフモードで実行しようとする悪意のある試みを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-226">Use this property to help prevent a malicious attempt to execute an unsafe Web application in safe mode.</span></span>  
  
 <span data-ttu-id="cbaff-227">発行者ポリシーをバイパスする方法の詳細については、「[アセンブリバージョンのリダイレクト](~/docs/framework/configure-apps/redirect-assembly-versions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-227">For more information about bypassing publisher policy, see the [Redirecting Assembly Versions](~/docs/framework/configure-apps/redirect-assembly-versions.md) topic.</span></span> <span data-ttu-id="cbaff-228">セーフモードの詳細については、「[ランタイムがアセンブリを検索する方法](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)」トピックの「構成ファイルを調べる」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-228">For more information about safe mode, see the "Examining the Configuration Files" section of the [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicBase">
      <MemberSignature Language="C#" Value="public string DynamicBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBase" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DynamicBase" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBase : string with get, set" Usage="System.AppDomainSetup.DynamicBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.DynamicBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-229">動的に生成されたファイルが格納されるディレクトリのベース ディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-229">Gets or sets the base directory where the directory for dynamically generated files is located.</span></span></summary>
        <value><span data-ttu-id="cbaff-230"><see cref="P:System.AppDomain.DynamicDirectory" /> が置かれているディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="cbaff-230">The directory where the <see cref="P:System.AppDomain.DynamicDirectory" /> is located.</span></span>  

 <block subset="none" type="note"><para>  
 <span data-ttu-id="cbaff-231">このプロパティの戻り値は、割り当てられた値とは異なります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-231">The return value of this property is different from the value assigned.</span></span>
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
 <span data-ttu-id="cbaff-232">このプロパティを使用して、新しいアプリケーションドメインの動的ディレクトリの配置先となるベースディレクトリを設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-232">Use this property to set the base directory where the dynamic directory for the new application domain will be located.</span></span> <span data-ttu-id="cbaff-233">新しいアプリケーションドメインのコードによってアセンブリが読み込まれると、アセンブリの解決は最初に通常のプローブパスで開始されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-233">When code in the new application domain loads an assembly, assembly resolution looks first in the normal probing paths.</span></span> <span data-ttu-id="cbaff-234">アセンブリが見つからない場合は、<xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> プロパティによって返される動的ディレクトリを検索します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-234">If it does not find the assembly, it looks in the dynamic directory, which is returned by the <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cbaff-235">新しいアプリケーションドメインによって読み込まれて実行される動的アセンブリは、そこに配置できます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-235">Dynamic assemblies that will be loaded and executed by the new application domain can be placed there.</span></span>  
  
 <span data-ttu-id="cbaff-236"><xref:System.AppDomainSetup.DynamicBase%2A> プロパティにパスを割り当てると、追加のサブディレクトリが追加されます。このサブディレクトリの名前は、<xref:System.AppDomainSetup.ApplicationName%2A> プロパティに割り当てられた値のハッシュコードです。</span><span class="sxs-lookup"><span data-stu-id="cbaff-236">When you assign a path to the <xref:System.AppDomainSetup.DynamicBase%2A> property, an additional subdirectory is added; the name of this subdirectory is the hash code of the value assigned to the <xref:System.AppDomainSetup.ApplicationName%2A> property.</span></span> <span data-ttu-id="cbaff-237">したがって、このプロパティによって後から返される基本ディレクトリは、割り当てられた値とは常に異なります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-237">Thus, the base directory subsequently returned by this property is always different from the value assigned.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cbaff-238">このプロパティに値を割り当てると、ディレクトリは作成されません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-238">Assigning a value to this property does not create any directories.</span></span> <span data-ttu-id="cbaff-239">ディレクトリは、それらを使用するコードによって作成または検証される必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-239">The directories must be created or verified by the code that uses them.</span></span>  
  
 <span data-ttu-id="cbaff-240">動的ディレクトリは <xref:System.AppDomainSetup.DynamicBase%2A>のサブディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="cbaff-240">The dynamic directory is a subdirectory of <xref:System.AppDomainSetup.DynamicBase%2A>.</span></span> <span data-ttu-id="cbaff-241">単純な名前は <xref:System.AppDomainSetup.ApplicationName%2A> プロパティによって返される値です。そのため、その形式は\\*ハッシュコード*\\*アプリケーション名*の*元のパス*になります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-241">Its simple name is the value returned by the <xref:System.AppDomainSetup.ApplicationName%2A> property, so its format is *original path*\\*hash code*\\*application name*.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbaff-242">次の例は、<xref:System.AppDomainSetup.DynamicBase%2A> プロパティを使用して、動的アセンブリの読み込み時にアプリケーションドメインがプローブするパスを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-242">The following example demonstrates how to use the <xref:System.AppDomainSetup.DynamicBase%2A> property to set the path an application domain probes when loading dynamic assemblies.</span></span>  
  
 <span data-ttu-id="cbaff-243">この例では、<xref:System.AppDomainSetup> オブジェクトを作成し、その <xref:System.AppDomainSetup.ApplicationName%2A> プロパティを "Example" に設定し、その <xref:System.AppDomainSetup.DynamicBase%2A> プロパティを "C:\ dynamicassemblydir" に設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-243">The example creates an <xref:System.AppDomainSetup> object and sets its <xref:System.AppDomainSetup.ApplicationName%2A> property to "Example" and its <xref:System.AppDomainSetup.DynamicBase%2A> property to "C:\DynamicAssemblyDir".</span></span> <span data-ttu-id="cbaff-244">この例では、<xref:System.AppDomainSetup.DynamicBase%2A> プロパティを表示し、アプリケーション名のハッシュコードが、最初に割り当てられたパスのサブディレクトリとして追加されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-244">The example then displays the <xref:System.AppDomainSetup.DynamicBase%2A> property, to show that the hash code of the application name has been appended as a subdirectory of the path that was originally assigned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbaff-245">この例の基本ディレクトリは、サンプルアプリケーションのプローブパスの外部にすることを目的としています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-245">The base directory in this example is intended to be outside the probing path for the example application.</span></span> <span data-ttu-id="cbaff-246">この例は、別の場所でコンパイルしてください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-246">Be sure to compile the example in a different location.</span></span> <span data-ttu-id="cbaff-247">この例を実行するたびに、ベースディレクトリとそのすべてのサブディレクトリが削除されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-247">Delete the base directory and all its subdirectories each time you run the example.</span></span>  
  
 <span data-ttu-id="cbaff-248">この例では、<xref:System.AppDomainSetup> オブジェクトを使用して新しいアプリケーションドメインを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-248">The example creates a new application domain using the <xref:System.AppDomainSetup> object.</span></span> <span data-ttu-id="cbaff-249">この例では、動的ディレクトリがまだ存在しない場合は作成します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-249">The example then creates the dynamic directory if it does not already exist.</span></span> <span data-ttu-id="cbaff-250">この例では、アプリケーションドメインの <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> プロパティを使用して動的ディレクトリの名前を取得していますが、元のパス、アプリケーション名のハッシュコード、アプリケーション名を連結して、ディレクトリを事前に簡単に作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-250">Although the example uses the application domain's <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> property to get the name of the dynamic directory, it could just as easily create the directory beforehand by concatenating the original path, the hash code of the application name, and the application name.</span></span>  
  
 <span data-ttu-id="cbaff-251">この例には、`DynamicHelloWorld.dll` という名前のアセンブリを出力し、新しいアプリケーションドメインの動的ディレクトリに格納する `GenerateDynamicAssembly` メソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-251">The example has a `GenerateDynamicAssembly` method that emits an assembly named `DynamicHelloWorld.dll` and stores it in the new application domain's dynamic directory.</span></span> <span data-ttu-id="cbaff-252">動的アセンブリには、`HelloWorld`という1つの型が含まれています。この型には `HelloFromAD`という名前の静的メソッド (Visual Basic で`Shared` メソッド) があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-252">The dynamic assembly contains one type, `HelloWorld`, that has a static method (`Shared` method in Visual Basic) named `HelloFromAD`.</span></span> <span data-ttu-id="cbaff-253">このメソッドを呼び出すと、アプリケーションドメインの名前が表示されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-253">Calling this method displays the name of the application domain.</span></span>  
  
 <span data-ttu-id="cbaff-254">`Example` クラスは <xref:System.MarshalByRefObject>から派生するため、この例では、新しいアプリケーションドメインにクラスのインスタンスを作成し、その `Test` メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-254">The `Example` class derives from <xref:System.MarshalByRefObject>, so the example can create an instance of the class in the new application domain and call its `Test` method.</span></span> <span data-ttu-id="cbaff-255">`Test` メソッドは、表示名で動的アセンブリを読み込み、静的な `HelloFromAD` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-255">The `Test` method loads the dynamic assembly by its display name and calls the static `HelloFromAD` method.</span></span>  
  
 <span data-ttu-id="cbaff-256">`DynamicHelloWorld.dll` という名前のアセンブリのコードを記述し、この例と同じディレクトリでコンパイルすることによって、通常のプローブパスの後に動的ディレクトリを検索することを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-256">You can show that the dynamic directory is searched after the normal probing paths by writing code for an assembly named `DynamicHelloWorld.dll` and compiling it in the same directory as this example.</span></span> <span data-ttu-id="cbaff-257">アセンブリには、`HelloFromAD`という名前の静的メソッドを持つ `HelloWorld` という名前のクラスが必要です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-257">The assembly must have a class named `HelloWorld` with a static method named `HelloFromAD`.</span></span> <span data-ttu-id="cbaff-258">このメソッドの機能は、例のものと同じである必要はありません。単にコンソールに文字列を表示できます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-258">This method does not have to have the same functionality as the one in the example; it can simply display a string to the console.</span></span> <span data-ttu-id="cbaff-259">アセンブリには、そのバージョンを1.0.0.0 に設定する <xref:System.Reflection.AssemblyVersionAttribute> 属性も必要です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-259">The assembly must also have an <xref:System.Reflection.AssemblyVersionAttribute> attribute that sets its version to 1.0.0.0.</span></span> <span data-ttu-id="cbaff-260">この例を実行すると、現在のディレクトリでコンパイルしたアセンブリが検索されてから、動的ディレクトリが検索されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-260">When you run the example, the assembly you compiled in the current directory is found before the dynamic directory is searched.</span></span>  
  
 [!code-cpp[ADDynamicBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDynamicBase/CPP/addynamicbase.cpp#1)]
 [!code-csharp[ADDynamicBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDynamicBase/CS/addynamicbase.cs#1)]
 [!code-vb[ADDynamicBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDynamicBase/VB/addynamicbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="cbaff-261">アプリケーション ドメインのアプリケーション名が <see langword="null" /> であるため、このプロパティを設定できません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-261">This property cannot be set because the application name on the application domain is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationBytes">
      <MemberSignature Language="C#" Value="public byte[] GetConfigurationBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetConfigurationBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.GetConfigurationBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfigurationBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetConfigurationBytes();" />
      <MemberSignature Language="F#" Value="member this.GetConfigurationBytes : unit -&gt; byte[]" Usage="appDomainSetup.GetConfigurationBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cbaff-262"><see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> メソッドによって設定されたXML 構成情報を返します。これにより、アプリケーションの XML 構成情報はオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-262">Returns the XML configuration information set by the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method, which overrides the application's XML configuration information.</span></span></summary>
        <returns><span data-ttu-id="cbaff-263"><see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> メソッドによって設定された XML 構成情報を格納する配列。<see langword="null" /> メソッドが呼び出されなかった場合は <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" />。</span><span class="sxs-lookup"><span data-stu-id="cbaff-263">An array that contains the XML configuration information that was set by the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method, or <see langword="null" /> if the <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> method has not been called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-264"><xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドは、新しいアプリケーションドメインを作成するアプリケーションの構成情報をオーバーライドする手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-264">The <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method provides a way to override the configuration information of an application that creates a new application domain.</span></span> <span data-ttu-id="cbaff-265">`value` の構成ファイル情報は、アプリケーションの構成ファイル情報を上書きします。</span><span class="sxs-lookup"><span data-stu-id="cbaff-265">The configuration file information in `value` overrides the configuration file information for the application.</span></span> <span data-ttu-id="cbaff-266">たとえば、サンプルの .exe アプリケーションによって新しいアプリケーションドメインが作成された場合、最初に例の .exe. .config ファイルから取得した構成情報を上書きできます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-266">For example, when the Example.exe application creates a new application domain, it can override the configuration information originally obtained from Example.exe.config file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cbaff-267">構成ファイル情報の一部のコンシューマーは、<xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドによって格納された情報を使用しません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-267">Some consumers of configuration file information do not use the information stored by the <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method.</span></span> <span data-ttu-id="cbaff-268">ランタイムはこれを強制しません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-268">The runtime does not enforce this.</span></span> <span data-ttu-id="cbaff-269">すべての構成ファイル情報が新しいアプリケーションドメインでオーバーライドされるようにするには、<xref:System.AppDomainSetup.ConfigurationFile%2A> プロパティを使用して構成ファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-269">To ensure that all configuration file information is overridden in a new application domain, use the <xref:System.AppDomainSetup.ConfigurationFile%2A> property to specify a configuration file.</span></span> <span data-ttu-id="cbaff-270"><xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドは、アセンブリのバインディングに影響します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-270">The <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method does affect assembly binding.</span></span>  
  
 <span data-ttu-id="cbaff-271">`value` の XML は、通常の構成ファイルの XML と同じですが、<xref:System.Byte> 配列として格納されている点が異なります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-271">The XML in `value` is the same as the XML in a normal configuration file, except that it is stored as a <xref:System.Byte> array.</span></span>  
  
 <span data-ttu-id="cbaff-272">アプリケーションドメインの構成バイトにアクセスするには、<xref:System.AppDomain.SetupInformation%2A?displayProperty=nameWithType> プロパティを使用して、アプリケーションドメインの <xref:System.AppDomainSetup> オブジェクトを取得し、<xref:System.AppDomainSetup.GetConfigurationBytes%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-272">To access the configuration bytes for an application domain, use the <xref:System.AppDomain.SetupInformation%2A?displayProperty=nameWithType> property to get the <xref:System.AppDomainSetup> object for the application domain, then use the <xref:System.AppDomainSetup.GetConfigurationBytes%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseFile">
      <MemberSignature Language="C#" Value="public string LicenseFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LicenseFile" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.LicenseFile" />
      <MemberSignature Language="VB.NET" Value="Public Property LicenseFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LicenseFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LicenseFile : string with get, set" Usage="System.AppDomainSetup.LicenseFile" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.LicenseFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-273">このドメインに関連付けられたライセンス ファイルの場所を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-273">Gets or sets the location of the license file associated with this domain.</span></span></summary>
        <value><span data-ttu-id="cbaff-274">ライセンス ファイルの場所と名前。</span><span class="sxs-lookup"><span data-stu-id="cbaff-274">The location and name of the license file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderOptimization">
      <MemberSignature Language="C#" Value="public LoaderOptimization LoaderOptimization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.LoaderOptimization LoaderOptimization" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.LoaderOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Property LoaderOptimization As LoaderOptimization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property LoaderOptimization LoaderOptimization { LoaderOptimization get(); void set(LoaderOptimization value); };" />
      <MemberSignature Language="F#" Value="member this.LoaderOptimization : LoaderOptimization with get, set" Usage="System.AppDomainSetup.LoaderOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LoaderOptimization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-275">実行可能ファイルを読み込むために使用する最適化ポリシーを指定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-275">Specifies the optimization policy used to load an executable.</span></span></summary>
        <value><span data-ttu-id="cbaff-276"><see cref="T:System.LoaderOptimizationAttribute" /> で使用される列挙型定数。</span><span class="sxs-lookup"><span data-stu-id="cbaff-276">An enumerated constant that is used with the <see cref="T:System.LoaderOptimizationAttribute" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cbaff-277">次の例では、動的アセンブリを作成してディスクに保存し、<xref:System.AppDomainSetup.LoaderOptimization%2A> プロパティを使用して、アセンブリをアプリケーションドメインに読み込むために使用する最適化ポリシーを設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-277">The following example creates a dynamic assembly and saves it to disk, and then uses the <xref:System.AppDomainSetup.LoaderOptimization%2A> property to set the optimization policy used to load the assembly into an application domain.</span></span>  
  
 [!code-cpp[ADDyno#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDyno/CPP/addyno.cpp#1)]
 [!code-csharp[ADDyno#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDyno/CS/addyno.cs#1)]
 [!code-vb[ADDyno#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDyno/VB/addyno.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialTrustVisibleAssemblies">
      <MemberSignature Language="C#" Value="public string[] PartialTrustVisibleAssemblies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PartialTrustVisibleAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PartialTrustVisibleAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialTrustVisibleAssemblies As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ PartialTrustVisibleAssemblies { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartialTrustVisibleAssemblies : string[] with get, set" Usage="System.AppDomainSetup.PartialTrustVisibleAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-278">サンドボックス化されたアプリケーション ドメインで実行されている部分信頼コードから参照できる、<see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /> フラグでマークされたアセンブリのリストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-278">Gets or sets a list of assemblies marked with the <see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /> flag that are made visible to partial-trust code running in a sandboxed application domain.</span></span></summary>
        <value><span data-ttu-id="cbaff-279">部分アセンブリ名の配列。各部分名は単純なアセンブリ名と公開キーで構成されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-279">An array of partial assembly names, where each partial name consists of the simple assembly name and the public key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-280">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、<xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A> プロパティを <xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault>に設定することにより、<xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) 属性を条件付きにすることができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-280">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) attribute can be made conditional by setting its <xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A> property to <xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault>.</span></span> <span data-ttu-id="cbaff-281"><xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault> でマークされた APTCA アセンブリは、ホストアプリケーションで許可されていない限り、部分的に信頼されているコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-281">An APTCA assembly that is marked with <xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault> cannot be used by partially trusted code unless the host application allows it.</span></span>  
  
 <span data-ttu-id="cbaff-282">サンドボックス化されたアプリケーションドメインのホストにより、アプリケーションドメイン内のコードは、各アセンブリの簡易名と公開キーを含む配列を作成し、このプロパティに配列を割り当てることによって、条件付き APTCA 属性を持つアセンブリを使用できます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-282">The host of a sandboxed application domain allows code in the application domain to use assemblies with conditional APTCA attributes by creating an array that contains the simple name and public key of each assembly, and assigning the array to this property.</span></span> <span data-ttu-id="cbaff-283">たとえば、配列の要素は次のようになります。 "MyAssembly, PublicKey =0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</span><span class="sxs-lookup"><span data-stu-id="cbaff-283">For example, an element of the array might look like the following: "MyAssembly, PublicKey=0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cbaff-284"><xref:System.AppDomainManager>のサブクラスを使用していて、それを定義するアセンブリが条件付き APTCA 属性でマークされているアセンブリに依存している場合は、アプリケーションドメインの作成に使用する <xref:System.AppDomainSetup> の <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> プロパティに渡すアセンブリを一覧に含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-284">If you are using a subclass of <xref:System.AppDomainManager>, and the assembly that defines it depends on assemblies that are marked with the conditional APTCA attribute, you must include those assemblies in the list that you pass to the <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> property of the <xref:System.AppDomainSetup> you use to create application domains.</span></span> <span data-ttu-id="cbaff-285">それ以外の場合、条件付き APTCA 属性でマークされているアセンブリは無効になります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-285">Otherwise the assemblies that are marked with the conditional APTCA attribute will be disabled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbaff-286">サンドボックス化されたアプリケーションドメインで実行されているアプリケーションをデバッグする場合、一部の <xref:System.Security.SecurityException> メッセージは誤解を招く可能性があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-286">When you are debugging an application that is running in a sandboxed application domain, some <xref:System.Security.SecurityException> messages can be misleading.</span></span> <span data-ttu-id="cbaff-287">たとえば、問題の実際の原因は、サンドボックス化されたアプリケーションドメインの許可セットを超えるセキュリティ要求が、次の境界に反映されているという点で、完全に信頼されたアセンブリの1つにはアクセス許可が制限されているというメッセージが表示される場合があります。サンドボックス化されたアプリケーションドメインと失敗しました。</span><span class="sxs-lookup"><span data-stu-id="cbaff-287">For example, a message might state that one of your fully trusted assemblies has only limited permissions, when the real cause of the problem is that a security demand that exceeds the grant set of the sandboxed application domain has propagated to the boundary of the sandboxed application domain and failed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />
        <altmember cref="P:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel" />
        <altmember cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" />
      </Docs>
    </Member>
    <Member MemberName="PrivateBinPath">
      <MemberSignature Language="C#" Value="public string PrivateBinPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBinPath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PrivateBinPath" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBinPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBinPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBinPath : string with get, set" Usage="System.AppDomainSetup.PrivateBinPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.PrivateBinPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-288">プライベート アセンブリが調査されるアプリケーション ベース ディレクトリ下に存在するディレクトリのリストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-288">Gets or sets the list of directories under the application base directory that are probed for private assemblies.</span></span></summary>
        <value><span data-ttu-id="cbaff-289">セミコロンで区切られたディレクトリ名のリスト。</span><span class="sxs-lookup"><span data-stu-id="cbaff-289">A list of directory names separated by semicolons.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-290">プライベートアセンブリは、アプリケーションと同じディレクトリ構造に配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-290">Private assemblies are deployed in the same directory structure as the application.</span></span> <span data-ttu-id="cbaff-291"><xref:System.AppDomainSetup.PrivateBinPath%2A> に指定されたディレクトリが <xref:System.AppDomainSetup.ApplicationBase%2A>下にない場合、それらは無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-291">If the directories specified for <xref:System.AppDomainSetup.PrivateBinPath%2A> are not under <xref:System.AppDomainSetup.ApplicationBase%2A>, they are ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBinPathProbe">
      <MemberSignature Language="C#" Value="public string PrivateBinPathProbe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBinPathProbe" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PrivateBinPathProbe" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBinPathProbe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBinPathProbe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBinPathProbe : string with get, set" Usage="System.AppDomainSetup.PrivateBinPathProbe" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.PrivateBinPathProbe</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-292"><see cref="P:System.AppDomainSetup.ApplicationBase" /> をアプリケーションの検索パスに含めたり、検索パスから除外して <see cref="P:System.AppDomainSetup.PrivateBinPath" /> だけを検索するようにしたりするための文字列値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-292">Gets or sets a string value that includes or excludes <see cref="P:System.AppDomainSetup.ApplicationBase" /> from the search path for the application, and searches only <see cref="P:System.AppDomainSetup.PrivateBinPath" />.</span></span></summary>
        <value><span data-ttu-id="cbaff-293">アセンブリを検索するときにアプリケーションのベース パスを含める場合は、null 参照 (Visual Basic では <see langword="Nothing" />)。パスを除外する場合は、null 以外の文字列値。</span><span class="sxs-lookup"><span data-stu-id="cbaff-293">A null reference (<see langword="Nothing" /> in Visual Basic) to include the application base path when searching for assemblies; any non-null string value to exclude the path.</span></span> <span data-ttu-id="cbaff-294">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-294">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-295">このプロパティには、<xref:System.String.Empty?displayProperty=nameWithType> ("") を含む null 以外の文字列値を設定して、アプリケーションディレクトリパス (つまり、アプリケーションの検索パスからの <xref:System.AppDomainSetup.ApplicationBase%2A>) を除外し、<xref:System.AppDomainSetup.PrivateBinPath%2A>でのみアセンブリを検索します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-295">Set this property to any non-null string value, including <xref:System.String.Empty?displayProperty=nameWithType> (""), to exclude the application directory path - that is, <xref:System.AppDomainSetup.ApplicationBase%2A> - from the search path for the application, and to search for assemblies only in <xref:System.AppDomainSetup.PrivateBinPath%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SandboxInterop">
      <MemberSignature Language="C#" Value="public bool SandboxInterop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SandboxInterop" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.SandboxInterop" />
      <MemberSignature Language="VB.NET" Value="Public Property SandboxInterop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SandboxInterop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SandboxInterop : bool with get, set" Usage="System.AppDomainSetup.SandboxInterop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-296">呼び出しのたびに <c>QueryInterface</c> が実行されるように、アプリケーション ドメインの相互運用呼び出しに対するインターフェイス キャッシュが無効かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-296">Gets or sets a value that indicates whether interface caching is disabled for interop calls in the application domain, so that a <c>QueryInterface</c> is performed on each call.</span></span></summary>
        <value><span data-ttu-id="cbaff-297">現在の <see langword="true" /> オブジェクトを使用して作成された、アプリケーション ドメインの相互運用呼び出しに対するインターフェイス キャッシュが無効の場合は <see cref="T:System.AppDomainSetup" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cbaff-297"><see langword="true" /> if interface caching is disabled for interop calls in application domains created with the current <see cref="T:System.AppDomainSetup" /> object; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-298">インターフェイスキャッシュを無効にすると、相互運用呼び出しのパフォーマンスに大きな影響があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-298">Disabling interface caching has a significant impact on the performance of interop calls.</span></span>  
  
 <span data-ttu-id="cbaff-299">このメンバーは [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。</span><span class="sxs-lookup"><span data-stu-id="cbaff-299">This member is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCompatibilitySwitches">
      <MemberSignature Language="C#" Value="public void SetCompatibilitySwitches (System.Collections.Generic.IEnumerable&lt;string&gt; switches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCompatibilitySwitches(class System.Collections.Generic.IEnumerable`1&lt;string&gt; switches) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCompatibilitySwitches (switches As IEnumerable(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCompatibilitySwitches(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ switches);" />
      <MemberSignature Language="F#" Value="member this.SetCompatibilitySwitches : seq&lt;string&gt; -&gt; unit" Usage="appDomainSetup.SetCompatibilitySwitches switches" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switches" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="switches"><span data-ttu-id="cbaff-300">互換性スイッチを指定する文字列値の列挙可能なセット。既存の互換性スイッチを消去する場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cbaff-300">An enumerable set of string values that specify compatibility switches, or <see langword="null" /> to erase the existing compatibility switches.</span></span></param>
        <summary><span data-ttu-id="cbaff-301">指定されたスイッチを設定し、指定された問題のためにアプリケーション ドメインと以前のバージョンの .NET Framework の互換性を確保します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-301">Sets the specified switches, making the application domain compatible with previous versions of the .NET Framework for the specified issues.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-302">.NET Framework のメジャーバージョンでは、以前のバージョンからの重大な変更が発生する場合があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-302">Major versions of the .NET Framework sometimes introduce breaking changes from the previous version.</span></span> <span data-ttu-id="cbaff-303">たとえば、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] では、[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]からの多くの重大な変更が導入されています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-303">For example, the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] introduces a small number of breaking changes from the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span> <span data-ttu-id="cbaff-304"><xref:System.AppDomainSetup.SetCompatibilitySwitches%2A> メソッドを使用して、以前のバージョンの .NET Framework との互換性を確保するために、これらの重大な変更の1つまたは複数をアプリケーションドメインに対してロールバックするように指定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-304">Use the <xref:System.AppDomainSetup.SetCompatibilitySwitches%2A> method to specify that one or more of these breaking changes should be rolled back for the application domain, to make the behavior compatible with the previous version of the .NET Framework.</span></span>  
  
 <span data-ttu-id="cbaff-305">このメソッドを呼び出すたびに、既存のスイッチ設定が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-305">Each time you call this method, it replaces the existing switch settings.</span></span> <span data-ttu-id="cbaff-306">設定を消去するには、`switches` パラメーターに `null` を指定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-306">To erase the settings, specify `null` for the `switches` parameter.</span></span>  
  
 <span data-ttu-id="cbaff-307">配列には <xref:System.Collections.IEnumerable> インターフェイスが実装されているため、`switches` に指定する文字列値のセットを単純な文字列配列にすることができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-307">The set of string values you provide for `switches` can be a simple string array, because arrays implement the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 <span data-ttu-id="cbaff-308">次の表に、以前のバージョンの .NET Framework の動作を復元するために設定できる互換性スイッチの例を示します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-308">The following table provides examples of compatibility switches that can be set to restore the behavior of earlier versions of the .NET Framework.</span></span>  
  
|<span data-ttu-id="cbaff-309">Switch</span><span class="sxs-lookup"><span data-stu-id="cbaff-309">Switch</span></span>|<span data-ttu-id="cbaff-310">意味</span><span class="sxs-lookup"><span data-stu-id="cbaff-310">Meaning</span></span>|  
|------------|-------------|  
|<span data-ttu-id="cbaff-311">"NetFx40_LegacySecurityPolicy"</span><span class="sxs-lookup"><span data-stu-id="cbaff-311">"NetFx40_LegacySecurityPolicy"</span></span>|<span data-ttu-id="cbaff-312">このアプリケーションドメインでは、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] のコードアクセスセキュリティ (CAS) が有効になっています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-312">Code access security (CAS) for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] is enabled in this application domain.</span></span> <span data-ttu-id="cbaff-313">「 [&lt;NetFx40_LegacySecurityPolicy&gt; 要素](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-313">See [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md).</span></span>|  
|<span data-ttu-id="cbaff-314">"NetFx40_Legacy20SortingBehavior"</span><span class="sxs-lookup"><span data-stu-id="cbaff-314">"NetFx40_Legacy20SortingBehavior"</span></span>|<span data-ttu-id="cbaff-315">このアプリケーションドメインで有効になっている [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] の文字列並べ替えの既定値。</span><span class="sxs-lookup"><span data-stu-id="cbaff-315">String sorting defaults for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] are enabled in this application domain.</span></span> <span data-ttu-id="cbaff-316">従来の並べ替え動作を正常に復元するには、ローカルシステムで sort00001000.dll ダイナミックリンクライブラリを使用できるようにする必要もあります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-316">Successfully restoring legacy sorting behavior also requires the sort00001000.dll dynamic link library to be available on the local system.</span></span> <span data-ttu-id="cbaff-317">「 [&lt;CompatSortNLSVersion&gt; 要素](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-317">See [&lt;CompatSortNLSVersion&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md).</span></span>|  
|<span data-ttu-id="cbaff-318">"NetFx40_Legacy40SortingBehavior"</span><span class="sxs-lookup"><span data-stu-id="cbaff-318">"NetFx40_Legacy40SortingBehavior"</span></span>|<span data-ttu-id="cbaff-319">このアプリケーションドメインでは、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] の文字列の並べ替えの既定値と Unicode 5.0 が有効になっています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-319">String sorting defaults for the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and Unicode 5.0 are enabled in this application domain.</span></span> <span data-ttu-id="cbaff-320">従来の並べ替え動作を正常に復元するには、ローカルシステムで sort00060101 ダイナミックリンクライブラリを使用できるようにする必要もあります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-320">Successfully restoring legacy sorting behavior also requires the sort00060101.dll dynamic link library to be available on the local system.</span></span>|  
|<span data-ttu-id="cbaff-321">"NetFx40_TimeSpanLegacyFormatMode"</span><span class="sxs-lookup"><span data-stu-id="cbaff-321">"NetFx40_TimeSpanLegacyFormatMode"</span></span>|<span data-ttu-id="cbaff-322">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] の <xref:System.TimeSpan> の書式設定動作は、このアプリケーションドメインで有効になっています。</span><span class="sxs-lookup"><span data-stu-id="cbaff-322"><xref:System.TimeSpan> formatting behavior for the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] is enabled in this application domain.</span></span> <span data-ttu-id="cbaff-323"><xref:System.TimeSpan> トピックの「 [&lt;TimeSpan_LegacyFormatMode&gt; 要素](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)」と「従来の TimeSpan 書式設定の復元」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-323">See [&lt;TimeSpan_LegacyFormatMode&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md) and the "Restoring Legacy TimeSpan Formatting" section of the <xref:System.TimeSpan> topic.</span></span>|  
|<span data-ttu-id="cbaff-324">"UseRandomizedStringHashAlgorithm"</span><span class="sxs-lookup"><span data-stu-id="cbaff-324">"UseRandomizedStringHashAlgorithm"</span></span>|<span data-ttu-id="cbaff-325">ランタイムは、アプリケーションドメイン間で一貫性のあるハッシュコードを生成する単一のハッシュアルゴリズムを使用するのではなく、アプリケーションドメインごとに文字列のハッシュコードを計算します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-325">The runtime calculates hash codes for strings on a per application domain basis instead of using a single hashing algorithm that produces a consistent hash code across application domains.</span></span> <span data-ttu-id="cbaff-326">「 [&lt;UseRandomizedStringHashAlgorithm&gt; 要素](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-326">See [&lt;UseRandomizedStringHashAlgorithm&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/07132b9c-4a72-4710-99d7-e702405e02d4"><span data-ttu-id="cbaff-327">&lt;NetFx40_LegacySecurityPolicy&gt; 要素</span><span class="sxs-lookup"><span data-stu-id="cbaff-327">&lt;NetFx40_LegacySecurityPolicy&gt; Element</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/782cc82e-83f7-404a-80b7-6d3061a8b6e3"><span data-ttu-id="cbaff-328">&lt;CompatSortNLSVersion&gt; 要素</span><span class="sxs-lookup"><span data-stu-id="cbaff-328">&lt;CompatSortNLSVersion&gt; Element</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/865e7207-d050-4442-b574-57ea29d5e2d6"><span data-ttu-id="cbaff-329">&lt;TimeSpan_LegacyFormatMode&gt; 要素</span><span class="sxs-lookup"><span data-stu-id="cbaff-329">&lt;TimeSpan_LegacyFormatMode&gt; Element</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/c08125d6-56cc-4b23-b482-813ff85dc630"><span data-ttu-id="cbaff-330">&lt;UseRandomizedStringHashAlgorithm&gt; 要素</span><span class="sxs-lookup"><span data-stu-id="cbaff-330">&lt;UseRandomizedStringHashAlgorithm&gt; Element</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationBytes">
      <MemberSignature Language="C#" Value="public void SetConfigurationBytes (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConfigurationBytes(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetConfigurationBytes (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetConfigurationBytes(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetConfigurationBytes : byte[] -&gt; unit" Usage="appDomainSetup.SetConfigurationBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cbaff-331">アプリケーション ドメイン用に使用される XML 構成情報が格納された配列。</span><span class="sxs-lookup"><span data-stu-id="cbaff-331">An array that contains the XML configuration information to be used for the application domain.</span></span></param>
        <summary><span data-ttu-id="cbaff-332">アプリケーションの XML 構成情報を置換し、アプリケーション ドメインの XML 構成情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-332">Provides XML configuration information for the application domain, replacing the application's XML configuration information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-333"><xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドを使用すると、新しいアプリケーションドメインを作成するアプリケーションの構成情報を置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-333">The <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method provides a way to replace the configuration information of an application that creates a new application domain.</span></span> <span data-ttu-id="cbaff-334">`value` の構成ファイル情報によって、アプリケーションの構成ファイル情報が置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-334">The configuration file information in `value` replaces the configuration file information for the application.</span></span> <span data-ttu-id="cbaff-335">たとえば、サンプルの .exe アプリケーションによって新しいアプリケーションドメインが作成されるときに、最初にサンプルの .config ファイルから取得した構成情報を置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-335">For example, when the Example.exe application creates a new application domain, it can replace the configuration information originally obtained from the Example.exe.config file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cbaff-336">構成ファイル情報の一部のコンシューマーは、<xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドによって格納された情報を使用しません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-336">Some consumers of configuration file information do not use the information stored by the <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method.</span></span> <span data-ttu-id="cbaff-337">ランタイムはこれを強制しません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-337">The runtime does not enforce this.</span></span> <span data-ttu-id="cbaff-338">すべての構成ファイル情報が新しいアプリケーションドメインで置き換えられるようにするには、<xref:System.AppDomainSetup.ConfigurationFile%2A> プロパティを使用して構成ファイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-338">To ensure that all configuration file information is replaced in a new application domain, use the <xref:System.AppDomainSetup.ConfigurationFile%2A> property to specify a configuration file.</span></span> <span data-ttu-id="cbaff-339"><xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドは、アセンブリのバインディングに影響します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-339">The <xref:System.AppDomainSetup.SetConfigurationBytes%2A> method does affect assembly binding.</span></span>  
  
 <span data-ttu-id="cbaff-340">`value` の XML は、通常の構成ファイルの XML と同じですが、<xref:System.Byte> 配列として格納されている点が異なります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-340">The XML in `value` is the same as the XML in a normal configuration file, except that it is stored as a <xref:System.Byte> array.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f04816ab-110d-4e28-9283-845d6d9a4a68"><span data-ttu-id="cbaff-341">ランタイム設定スキーマ</span><span class="sxs-lookup"><span data-stu-id="cbaff-341">Runtime Settings Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetNativeFunction">
      <MemberSignature Language="C#" Value="public void SetNativeFunction (string functionName, int functionVersion, IntPtr functionPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNativeFunction(string functionName, int32 functionVersion, native int functionPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNativeFunction (functionName As String, functionVersion As Integer, functionPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNativeFunction(System::String ^ functionName, int functionVersion, IntPtr functionPointer);" />
      <MemberSignature Language="F#" Value="member this.SetNativeFunction : string * int * nativeint -&gt; unit" Usage="appDomainSetup.SetNativeFunction (functionName, functionVersion, functionPointer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="functionVersion" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="functionPointer" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="functionName"><span data-ttu-id="cbaff-342">オーバーライドする文字列比較関数の名前。</span><span class="sxs-lookup"><span data-stu-id="cbaff-342">The name of the string comparison function to override.</span></span></param>
        <param name="functionVersion"><span data-ttu-id="cbaff-343">関数のバージョン。</span><span class="sxs-lookup"><span data-stu-id="cbaff-343">The function version.</span></span> <span data-ttu-id="cbaff-344">[!INCLUDE[net_v45](~/includes/net-v45-md.md)] では、その値は 1 以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-344">For [!INCLUDE[net_v45](~/includes/net-v45-md.md)], its value must be 1 or greater.</span></span></param>
        <param name="functionPointer"><span data-ttu-id="cbaff-345"><paramref name="functionName" /> をオーバーライドする関数へのポインター。</span><span class="sxs-lookup"><span data-stu-id="cbaff-345">A pointer to the function that overrides <paramref name="functionName" />.</span></span></param>
        <summary><span data-ttu-id="cbaff-346">文字列比較関数の代替実装を持つ共通言語ランタイムを提供します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-346">Provides the common language runtime with an alternate implementation of a string comparison function.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-347">次の文字列比較メソッドと並べ替えメソッドは、<xref:System.AppDomainSetup.SetNativeFunction%2A> メソッドによってオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-347">The following string comparison and sorting methods can be overridden by the <xref:System.AppDomainSetup.SetNativeFunction%2A> method:</span></span>  
  
-   `IsNLSDefinedString`  
  
-   `CompareStringEx`  
  
-   `LCMapStringEx`  
  
-   `FindNLSStringEx`  
  
-   `CompareStringOrdinal`  
  
-   `GetNLSVersion`  
  
 <span data-ttu-id="cbaff-348">これらの関数の詳細については、「[各国語サポート関数](https://go.microsoft.com/fwlink/?LinkId=228134)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-348">For information about these functions, see [National Language Support Functions](https://go.microsoft.com/fwlink/?LinkId=228134).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cbaff-349"><paramref name="functionName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-349"><paramref name="functionName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cbaff-350"><paramref name="functionVersion" /> は 1 以上ではありません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-350"><paramref name="functionVersion" /> is not 1 or greater.</span></span>  
  
<span data-ttu-id="cbaff-351">または</span><span class="sxs-lookup"><span data-stu-id="cbaff-351">-or-</span></span> 
 <span data-ttu-id="cbaff-352"><paramref name="functionPointer" /> が <see cref="F:System.IntPtr.Zero" /> です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-352"><paramref name="functionPointer" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyDirectories">
      <MemberSignature Language="C#" Value="public string ShadowCopyDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShadowCopyDirectories" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ShadowCopyDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowCopyDirectories As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShadowCopyDirectories { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyDirectories : string with get, set" Usage="System.AppDomainSetup.ShadowCopyDirectories" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ShadowCopyDirectories</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-353">シャドウ コピー対象のアセンブリが格納されているディレクトリの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-353">Gets or sets the names of the directories containing assemblies to be shadow copied.</span></span></summary>
        <value><span data-ttu-id="cbaff-354">セミコロンで区切られたディレクトリ名のリスト。</span><span class="sxs-lookup"><span data-stu-id="cbaff-354">A list of directory names separated by semicolons.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-355">シャドウコピーが有効になっている場合、既定では、プローブによって検出されたすべてのアセンブリがシャドウコピーされます。つまり、<xref:System.AppDomainSetup.PrivateBinPath%2A> と <xref:System.AppDomainSetup.ApplicationBase%2A> のプロパティで指定されたディレクトリにあります。</span><span class="sxs-lookup"><span data-stu-id="cbaff-355">When shadow copying is enabled, the default is to shadow copy all assemblies found through probing; that is, in the directories specified by the <xref:System.AppDomainSetup.PrivateBinPath%2A> and <xref:System.AppDomainSetup.ApplicationBase%2A> properties.</span></span> <span data-ttu-id="cbaff-356"><xref:System.AppDomainSetup.ShadowCopyDirectories%2A> プロパティは、<xref:System.AppDomainSetup.ShadowCopyDirectories%2A>によって指定されたディレクトリ内のアセンブリにシャドウコピーを制限します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-356">The <xref:System.AppDomainSetup.ShadowCopyDirectories%2A> property restricts the shadow copy to the assemblies in the directories specified by <xref:System.AppDomainSetup.ShadowCopyDirectories%2A>.</span></span>  
  
 <span data-ttu-id="cbaff-357"><xref:System.AppDomainSetup.ShadowCopyDirectories%2A> プロパティに文字列を割り当てない場合、またはこのプロパティを `null`に設定した場合は、<xref:System.AppDomainSetup.ApplicationBase%2A> プロパティと <xref:System.AppDomainSetup.PrivateBinPath%2A> プロパティで指定されたディレクトリ内のすべてのアセンブリがシャドウコピーされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-357">If you don't assign a string to the <xref:System.AppDomainSetup.ShadowCopyDirectories%2A> property, or if you set this property to `null`, all assemblies in the directories specified by the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> properties are shadow copied.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="cbaff-358">セミコロンは区切り文字なので、ディレクトリ パスにはセミコロンを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-358">Directory paths must not contain semicolons, because the semicolon is the delimiter character.</span></span> <span data-ttu-id="cbaff-359">セミコロンのためのエスケープ文字はありません。</span><span class="sxs-lookup"><span data-stu-id="cbaff-359">There is no escape character for semicolons.</span></span>  
  
 <span data-ttu-id="cbaff-360">シャドウコピーが有効な場合、アセンブリが読み込まれる前に、アセンブリファイルが別の場所にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-360">When shadow copying is in effect, assembly files are copied to another location before the assemblies are loaded.</span></span> <span data-ttu-id="cbaff-361">元のアセンブリファイルはロックされていないため、更新できます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-361">The original assembly file is not locked, so it can be updated.</span></span> <span data-ttu-id="cbaff-362">シャドウコピーの詳細については、「[アセンブリのシャドウコピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-362">For more information on shadow copying, see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md"><span data-ttu-id="cbaff-363">アセンブリのシャドウ コピー</span><span class="sxs-lookup"><span data-stu-id="cbaff-363">Shadow Copying Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyFiles">
      <MemberSignature Language="C#" Value="public string ShadowCopyFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShadowCopyFiles" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ShadowCopyFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowCopyFiles As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShadowCopyFiles { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyFiles : string with get, set" Usage="System.AppDomainSetup.ShadowCopyFiles" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ShadowCopyFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-364">シャドウ コピーが有効であるか無効であるかを示す文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-364">Gets or sets a string that indicates whether shadow copying is turned on or off.</span></span></summary>
        <value><span data-ttu-id="cbaff-365">シャドウ コピーが有効な場合は文字列値 "true"。シャドウ コピーが無効な場合は "false"。</span><span class="sxs-lookup"><span data-stu-id="cbaff-365">The string value "true" to indicate that shadow copying is turned on; or "false" to indicate that shadow copying is turned off.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-366">シャドウコピーの詳細については、「[アセンブリのシャドウコピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbaff-366">For more information on shadow copying, see [Shadow Copying Assemblies](~/docs/framework/app-domains/shadow-copy-assemblies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyDirectories" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md"><span data-ttu-id="cbaff-367">アセンブリのシャドウ コピー</span><span class="sxs-lookup"><span data-stu-id="cbaff-367">Shadow Copying Assemblies</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkName">
      <MemberSignature Language="C#" Value="public string TargetFrameworkName { get; }" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFrameworkName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.TargetFrameworkName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetFrameworkName As String" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFrameworkName { System::String ^ get(); };" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkName : string" Usage="System.AppDomainSetup.TargetFrameworkName" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public string TargetFrameworkName { get; set; }" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFrameworkName As String" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFrameworkName { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkName : string with get, set" Usage="System.AppDomainSetup.TargetFrameworkName" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cbaff-368"><see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /> コンストラクターによって解析できる形式で、アプリケーション ドメインの .NET Framework のターゲット バージョンおよびプロファイルを指定する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-368">Gets or sets a string that specifies the target version and profile of the .NET Framework for the application domain, in a format that can be parsed by the <see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /> constructor.</span></span></summary>
        <value><span data-ttu-id="cbaff-369">対象となる .NET Framework のバージョンとプロファイル。</span><span class="sxs-lookup"><span data-stu-id="cbaff-369">The target version and profile of the .NET Framework.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbaff-370">このプロパティを設定して、対象のバージョンとプロファイル用にコンパイルされたアセンブリを読み込んで実行するためにアプリケーションドメインが使用される .NET Framework の現在実行中のバージョンを指定します。</span><span class="sxs-lookup"><span data-stu-id="cbaff-370">Set this property to tell the currently running version of the .NET Framework that the application domain will be used to load and run assemblies that have been compiled for the target version and profile.</span></span> <span data-ttu-id="cbaff-371">現在実行中のバージョンの .NET Framework に、ターゲットバージョンでコンパイルされたコードの互換性に影響するオプションの動作がある場合は、互換性を向上させるために、必要に応じてこれらの動作を有効または無効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-371">If the currently running version of the .NET Framework has optional behaviors that affect the compatibility of code that was compiled with the target version, it can enable or disable those behaviors, as appropriate, to improve compatibility.</span></span> <span data-ttu-id="cbaff-372">これは、アプリケーションが複数のバージョンの .NET Framework でコンパイルされたアドインを個別のアプリケーションドメインで実行することによってサポートされる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="cbaff-372">This can be useful when an application supports add-ins compiled with multiple versions of the .NET Framework by running them in separate application domains.</span></span>  
  
 <span data-ttu-id="cbaff-373">クライアントアプリケーションの場合、<xref:System.AppDomainSetup.TargetFrameworkName%2A> プロパティの値は <xref:System.Runtime.Versioning.TargetFrameworkAttribute> 属性から推論されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-373">For client applications, the value of the <xref:System.AppDomainSetup.TargetFrameworkName%2A> property is inferred from the <xref:System.Runtime.Versioning.TargetFrameworkAttribute> attribute.</span></span> <span data-ttu-id="cbaff-374">以降 [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]、この属性は、プロジェクトの **[ターゲットフレームワーク]** プロパティの設定に基づいて、アセンブリに自動的に追加されます。</span><span class="sxs-lookup"><span data-stu-id="cbaff-374">In [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] and later, this attribute is added to the assembly automatically based on the setting of the project's **Target Framework** property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
