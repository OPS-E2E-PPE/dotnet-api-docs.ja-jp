<Type Name="AppDomainSetup" FullName="System.AppDomainSetup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7cd5bab6995d0842d0ef067ceea768cce83e8217" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77229381" /></Metadata><TypeSignature Language="C#" Value="public sealed class AppDomainSetup : IAppDomainSetup" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AppDomainSetup extends System.Object implements class System.IAppDomainSetup" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainSetup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AppDomainSetup&#xA;Implements IAppDomainSetup" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainSetup sealed : IAppDomainSetup" />
  <TypeSignature Language="F#" Value="type AppDomainSetup = class&#xA;    interface IAppDomainSetup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAppDomainSetup</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.AppDomain" /> のインスタンスに追加できるアセンブリ バインディング情報を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup> インスタンスのプロパティを変更しても、既存の <xref:System.AppDomain>には影響しません。 <xref:System.AppDomainSetup> インスタンスをパラメーターとして使用して <xref:System.AppDomain.CreateDomain%2A> メソッドを呼び出すと、新しい <xref:System.AppDomain>の作成にのみ影響することがあります。  
  
 このクラスによって、<xref:System.IAppDomainSetup> インターフェイスが実装されます。  
  
> [!CAUTION]
>  <xref:System.AppDomainSetup.DisallowCodeDownload%2A> プロパティの既定値は false です。 この設定は、サービスでは安全ではありません。 部分的に信頼されているコードをサービスがダウンロードできないようにするには、このプロパティを true に設定します。  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/07ea8438-7a34-49f0-a7e8-3d6ff7e4a482">方法: アプリケーションドメインを構成する</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup ();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="new AppDomainSetup : ActivationContext -&gt; AppDomainSetup" Usage="new System.AppDomainSetup activationContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="activationContext">アプリケーション ドメインに使用されるアクティベーション コンテキスト。</param>
        <summary>アプリケーション ドメイン用に指定されたアクティベーション コンテキスト (マニフェストに基づくアクティベーションに使用される) で、<see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `activationContext` に対して指定された <xref:System.ActivationContext> オブジェクトは、新しいアプリケーションドメインをアクティブ化するために必要な情報を含む <xref:System.Runtime.Hosting.ActivationArguments> オブジェクトを生成するために使用されます。 この <xref:System.Runtime.Hosting.ActivationArguments> オブジェクトには、<xref:System.AppDomainSetup.ActivationArguments%2A> プロパティを使用してアクセスできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="activationContext" /> が <see langword="null" /> です。</exception>
        <altmember cref="P:System.AppDomainSetup.ActivationArguments" />
        <altmember cref="T:System.Runtime.Hosting.ActivationArguments" />
        <altmember cref="T:System.ActivationContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainSetup (System.Runtime.Hosting.ActivationArguments activationArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Hosting.ActivationArguments activationArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainSetup(System::Runtime::Hosting::ActivationArguments ^ activationArguments);" />
      <MemberSignature Language="F#" Value="new AppDomainSetup : System.Runtime.Hosting.ActivationArguments -&gt; AppDomainSetup" Usage="new System.AppDomainSetup activationArguments" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="activationArguments" Type="System.Runtime.Hosting.ActivationArguments" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="activationArguments">新しいアプリケーション ドメインの、マニフェストに基づくアクティベーションに必要な情報を指定するオブジェクト。</param>
        <summary>アプリケーション ドメインのマニフェストに基づくアクティベーション用に必要な、指定されたアクティベーション引数で、<see cref="T:System.AppDomainSetup" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `activationArguments` に指定されたオブジェクトには、<xref:System.AppDomainSetup.ActivationArguments%2A> プロパティを使用してアクセスできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="activationArguments" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ActivationArguments">
      <MemberSignature Language="C#" Value="public System.Runtime.Hosting.ActivationArguments ActivationArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ActivationArguments ActivationArguments" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ActivationArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property ActivationArguments As ActivationArguments" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Hosting::ActivationArguments ^ ActivationArguments { System::Runtime::Hosting::ActivationArguments ^ get(); void set(System::Runtime::Hosting::ActivationArguments ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActivationArguments : System.Runtime.Hosting.ActivationArguments with get, set" Usage="System.AppDomainSetup.ActivationArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ActivationArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインのアクティベーションに関するデータを取得または設定します。</summary>
        <value>アプリケーション ドメインのアクティベーションに関するデータを格納するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが `null`に設定されている場合、例外はスローされません。  
  
 <xref:System.Runtime.Hosting.ActivationArguments> オブジェクトによって提供される情報は、マニフェストに基づくアクティベーションをサポートします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">プロパティは、<see cref="T:System.Runtime.Hosting.ActivationArguments" /> プロパティから返される <see cref="T:System.Security.Policy.ApplicationTrust" /> オブジェクトのアプリケーション ID とは一致しないアプリケーション ID の <see cref="P:System.AppDomainSetup.ApplicationTrust" /> オブジェクトに設定されています。 <see cref="P:System.AppDomainSetup.ApplicationTrust" /> プロパティが <see langword="null" /> の場合、例外はスローされません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AppDomainInitializer">
      <MemberSignature Language="C#" Value="public AppDomainInitializer AppDomainInitializer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.AppDomainInitializer AppDomainInitializer" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainInitializer" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainInitializer As AppDomainInitializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainInitializer ^ AppDomainInitializer { AppDomainInitializer ^ get(); void set(AppDomainInitializer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainInitializer : AppDomainInitializer with get, set" Usage="System.AppDomainSetup.AppDomainInitializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainInitializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインの初期化時に呼び出されるコールバック メソッドを表す <see cref="T:System.AppDomainInitializer" /> デリゲートを取得または設定します。</summary>
        <value>アプリケーション ドメインの初期化時に呼び出されるコールバック メソッドを表すデリゲート。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コールバックメソッドに情報を渡すには、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> プロパティに文字列の配列を割り当てます。 配列は、<xref:System.AppDomain> が初期化されるたびに、コールバックメソッドに渡されます。  
  
 コールバックメソッドは、新しく作成されたアプリケーションドメインのコンテキストで実行されます。  
  
   
  
## Examples  
 次の例では、<xref:System.AppDomainSetup> オブジェクトと既定のアプリケーションドメインの証拠を使用して、`ChildDomain`という名前の子アプリケーションドメインを作成します。 <xref:System.AppDomainSetup.AppDomainInitializer%2A> プロパティは、子ドメインの初期化時に呼び出されるコールバックメソッド `AppDomainInit`に設定されます。 コールバックメソッドの引数は、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> プロパティに割り当てられている文字列の配列に配置されます。 子ドメインが作成されると、コールバックメソッドは単に文字列を出力します。  
  
 [!code-cpp[AppDomainInitializer#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainInitializer/cpp/source.cpp#1)]
 [!code-csharp[AppDomainInitializer#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainInitializer/CS/source.cs#1)]
 [!code-vb[AppDomainInitializer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainInitializer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomainInitializer" />
        <altmember cref="P:System.AppDomainSetup.AppDomainInitializerArguments" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainInitializerArguments">
      <MemberSignature Language="C#" Value="public string[] AppDomainInitializerArguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AppDomainInitializerArguments" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainInitializerArguments" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainInitializerArguments As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AppDomainInitializerArguments { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainInitializerArguments : string[] with get, set" Usage="System.AppDomainSetup.AppDomainInitializerArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.AppDomainInitializer" /> デリゲートが表すコールバック メソッドへの引数を取得または設定します。 コールバック メソッドは、アプリケーション ドメインの初期化時に呼び出されます。</summary>
        <value><see cref="T:System.AppDomainInitializer" /> の初期化中、<see cref="T:System.AppDomain" /> デリゲートが表すコールバック メソッドが呼び出されたとき、このコールバック メソッドに渡される文字列の配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.AppDomainInitializer%2A> プロパティを使用して、<xref:System.AppDomain> の初期化中に呼び出されるコールバックメソッドを指定します。 <xref:System.AppDomainSetup.AppDomainInitializer%2A> プロパティが設定されていない場合、このプロパティに割り当てられた配列は使用されません。  
  
 コールバックメソッドは、新しく作成されたアプリケーションドメインのコンテキストで実行されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.AppDomainSetup> オブジェクトと既定のアプリケーションドメインの証拠を使用して、`ChildDomain`という名前の子アプリケーションドメインを作成します。 <xref:System.AppDomainSetup.AppDomainInitializer%2A> プロパティは、子ドメインの初期化時に呼び出されるコールバックメソッド `AppDomainInit`に設定されます。 コールバックメソッドの引数は、<xref:System.AppDomainSetup.AppDomainInitializerArguments%2A> プロパティに割り当てられている文字列の配列に配置されます。 子ドメインが作成されると、コールバックメソッドは単に文字列を出力します。  
  
 [!code-cpp[AppDomainInitializer#1](~/samples/snippets/cpp/VS_Snippets_CLR/AppDomainInitializer/cpp/source.cpp#1)]
 [!code-csharp[AppDomainInitializer#1](~/samples/snippets/csharp/VS_Snippets_CLR/AppDomainInitializer/CS/source.cs#1)]
 [!code-vb[AppDomainInitializer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AppDomainInitializer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AppDomainInitializer" />
        <altmember cref="P:System.AppDomainSetup.AppDomainInitializer" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainManagerAssembly">
      <MemberSignature Language="C#" Value="public string AppDomainManagerAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppDomainManagerAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainManagerAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainManagerAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppDomainManagerAssembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainManagerAssembly : string with get, set" Usage="System.AppDomainSetup.AppDomainManagerAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.AppDomainSetup" /> オブジェクトを使用して作成されたアプリケーション ドメインのアプリケーション ドメイン マネージャーの型を提供するアセンブリの表示名を取得または設定します。</summary>
        <value>アプリケーション ドメイン マネージャーの <see cref="T:System.Type" /> を提供するアセンブリの表示名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションドメインマネージャーの種類を指定するには、このプロパティと <xref:System.AppDomainSetup.AppDomainManagerType%2A> プロパティの両方を設定します。 これらのプロパティのいずれかが設定されていない場合、もう一方は無視されます。  
  
 型が指定されていない場合、アプリケーションドメインマネージャーは、親アプリケーションドメイン (<xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType> メソッドの呼び出し元のアプリケーションドメイン) と同じ型から作成されます。  
  
 アプリケーションドメインが読み込まれると、アセンブリが存在しない場合、またはアセンブリに <xref:System.AppDomainSetup.AppDomainManagerType%2A> プロパティによって指定された型が含まれていない場合、<xref:System.TypeLoadException> がスローされます。 アセンブリが見つかってもバージョン情報が一致しない場合、<xref:System.IO.FileLoadException> がスローされます。  
  
 既定のアプリケーションドメインのアプリケーションドメインマネージャーを設定するには、アプリケーション構成ファイルの[\<ランタイム >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)セクションで[\<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)と[\<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)要素を使用するか、<xref:System.AppDomainManager>で説明されている環境変数を使用します。  
  
 この機能を適用するには、アプリケーションが完全に信頼されている必要があります。 (たとえば、デスクトップで実行されているアプリケーションには完全な信頼があります)。アプリケーションが完全に信頼されていない場合は、<xref:System.TypeLoadException> がスローされます。  
  
 アセンブリ表示名の形式は、<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> プロパティによって指定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainManagerType">
      <MemberSignature Language="C#" Value="public string AppDomainManagerType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppDomainManagerType" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.AppDomainManagerType" />
      <MemberSignature Language="VB.NET" Value="Public Property AppDomainManagerType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppDomainManagerType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppDomainManagerType : string with get, set" Usage="System.AppDomainSetup.AppDomainManagerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.AppDomainSetup" /> オブジェクトを使用して作成されたアプリケーション ドメインのアプリケーション ドメイン マネージャーを提供する型の完全名を取得または設定します。</summary>
        <value>名前空間を含む、型の完全名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションドメインマネージャーの種類を指定するには、このプロパティと <xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> プロパティの両方を設定します。 これらのプロパティのいずれかが設定されていない場合、もう一方は無視されます。  
  
 型が指定されていない場合、アプリケーションドメインマネージャーは、親アプリケーションドメイン (<xref:System.AppDomain.CreateDomain%2A?displayProperty=nameWithType> メソッドの呼び出し元のアプリケーションドメイン) と同じ型から作成されます。  
  
 アプリケーションドメインが読み込まれると、<xref:System.AppDomainSetup.AppDomainManagerAssembly%2A> プロパティによって指定されたアセンブリにこのプロパティで指定された型が含まれていない場合、<xref:System.TypeLoadException> がスローされます。  
  
 既定のアプリケーションドメインのアプリケーションドメインマネージャーを設定するには、アプリケーション構成ファイルの[\<ランタイム >](~/docs/framework/configure-apps/file-schema/runtime/runtime-element.md)セクションで[\<appDomainManagerAssembly >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)と[\<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)要素を使用するか、<xref:System.AppDomainManager>で説明されている環境変数を使用します。  
  
 この機能を適用するには、アプリケーションが完全に信頼されている必要があります。 (たとえば、デスクトップで実行されているアプリケーションには完全な信頼があります)。アプリケーションが完全に信頼されていない場合は、<xref:System.TypeLoadException> がスローされます。  
  
 型の完全名の形式は、<xref:System.Type.FullName%2A?displayProperty=nameWithType> プロパティによって指定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationBase">
      <MemberSignature Language="C#" Value="public string ApplicationBase { get; }" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationBase" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationBase As String" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationBase { System::String ^ get(); };" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.ApplicationBase : string" Usage="System.AppDomainSetup.ApplicationBase" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public string ApplicationBase { get; set; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationBase As String" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationBase { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.ApplicationBase : string with get, set" Usage="System.AppDomainSetup.ApplicationBase" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ApplicationBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションが格納されているディレクトリの名前を取得または設定します。</summary>
        <value>アプリケーションのベース ディレクトリの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションのベースディレクトリは、アセンブリマネージャーがアセンブリのプローブを開始する場所です。  
  
 <xref:System.AppDomainSetup.ApplicationBase%2A> プロパティは、アプリケーションドメインに付与されるアクセス許可に影響を与える可能性があります。 たとえば、ローカルコンピューターから送信されるアプリケーションドメインは、通常、元の場所に基づいて完全信頼を受け取ります。 ただし、その <xref:System.AppDomain> の [<xref:System.AppDomainSetup.ApplicationBase%2A>] プロパティがイントラネットディレクトリの完全名に設定されている場合、アプリケーションドメインが実際にローカルコンピューターから送信されていても、<xref:System.AppDomainSetup.ApplicationBase%2A> 設定によって、アプリケーションドメインに付与されたアクセス許可が LocalIntranet 付与に限定されます。  
  
   
  
## Examples  
 次の例では、<xref:System.AppDomainSetup.ApplicationBase%2A> プロパティを使用して、アセンブリローダーが新しいアプリケーションドメインに読み込むアセンブリのプローブを開始する場所を設定する方法を示します。  
  
> [!NOTE]
>  指定したフォルダーが存在することを確認する必要があります。  
  
 [!code-cpp[ADApplicationBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADApplicationBase/CPP/adapplicationbase.cpp#1)]
 [!code-csharp[ADApplicationBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADApplicationBase/CS/adapplicationbase.cs#1)]
 [!code-vb[ADApplicationBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADApplicationBase/VB/adapplicationbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.AppDomainSetup.ApplicationName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ApplicationName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの名前を取得または設定します。</summary>
        <value>アプリケーションの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例は、新しいアプリケーションドメインを作成するときに <xref:System.AppDomainSetup.ApplicationName%2A> プロパティを設定する方法を示しています。  
  
 この例では、新しいアプリケーションドメインを作成し、<xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=nameWithType> メソッドを呼び出して、例のアセンブリを新しいアプリケーションドメインに読み込み、`Worker` クラスのインスタンスを作成します。 `Worker` クラスは <xref:System.MarshalByRefObject>を継承するため、この例では <xref:System.AppDomain.CreateInstanceAndUnwrap%2A> によって返されたプロキシを使用して、`TestLoad` メソッドを呼び出すことができます。  
  
 `TestLoad` メソッドは、指定したアセンブリを読み込みます。 有効な完全修飾アセンブリ名を指定するか、<xref:System.Reflection.Assembly.Load%28System.String%29> メソッドをコメントアウトする必要があります。 `TestLoad` メソッドは、新しいアプリケーションドメインに読み込まれるアセンブリの一覧を表示し、指定したアセンブリとサンプルアセンブリが読み込まれることを示します。  
  
 この例では、<xref:System.LoaderOptimizationAttribute> 属性を使用して、アプリケーションドメイン間でコードを共有する方法をアセンブリローダーに指示します。  
  
 [!code-cpp[ADMultiDomain#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADMultiDomain/CPP/admultidomain.cpp#1)]
 [!code-csharp[ADMultiDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADMultiDomain/CS/admultidomain.cs#1)]
 [!code-vb[ADMultiDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADMultiDomain/VB/admultidomain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationTrust">
      <MemberSignature Language="C#" Value="public System.Security.Policy.ApplicationTrust ApplicationTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.ApplicationTrust ApplicationTrust" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ApplicationTrust" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationTrust As ApplicationTrust" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::ApplicationTrust ^ ApplicationTrust { System::Security::Policy::ApplicationTrust ^ get(); void set(System::Security::Policy::ApplicationTrust ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationTrust : System.Security.Policy.ApplicationTrust with get, set" Usage="System.AppDomainSetup.ApplicationTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Policy.ApplicationTrust</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ情報や信頼情報を格納するオブジェクトを取得または設定します。</summary>
        <value>セキュリティ情報や信頼情報を格納するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:System.AppDomainSetup> が作成されるときに `null` ます。 変更後、null 参照にリセットすることはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">プロパティは、<see cref="T:System.Security.Policy.ApplicationTrust" /> プロパティから返される <see cref="T:System.Runtime.Hosting.ActivationArguments" /> オブジェクトのアプリケーション ID とは一致しないアプリケーション ID の <see cref="P:System.AppDomainSetup.ActivationArguments" /> オブジェクトに設定されています。 <see cref="P:System.AppDomainSetup.ActivationArguments" /> プロパティが <see langword="null" /> の場合、例外はスローされません。</exception>
        <exception cref="T:System.ArgumentNullException">プロパティが <see langword="null" /> に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="CachePath">
      <MemberSignature Language="C#" Value="public string CachePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CachePath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.CachePath" />
      <MemberSignature Language="VB.NET" Value="Public Property CachePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CachePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CachePath : string with get, set" Usage="System.AppDomainSetup.CachePath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.CachePath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイルがシャドウ コピーされる、そのアプリケーションに固有の領域の名前を取得または設定します。</summary>
        <value>ファイルのシャドウ コピー先のディレクトリ パスとファイル名から成る完全修飾名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが効果を持つようにするには、<xref:System.AppDomainSetup.ApplicationName%2A> プロパティも設定する必要があります。 <xref:System.AppDomainSetup.ApplicationName%2A> プロパティが設定されていない場合、<xref:System.AppDomainSetup.CachePath%2A> プロパティは無視され、シャドウコピーキャッシュの場所は既定でダウンロードキャッシュに設定されます。  
  
 シャドウコピーの詳細については、「[アセンブリのシャドウコピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyDirectories" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md">アセンブリのシャドウ コピー</related>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationFile">
      <MemberSignature Language="C#" Value="public string ConfigurationFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationFile" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ConfigurationFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationFile : string with get, set" Usage="System.AppDomainSetup.ConfigurationFile" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ConfigurationFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインの構成ファイルの名前を取得または設定します。</summary>
        <value>構成ファイルの名前です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構成ファイルでは、アプリケーションドメインの検索規則と構成データについて説明します。 意味のある値は状況によって異なるため、アプリケーションドメインを作成するホストは、このデータを提供する役割を担います。  
  
 たとえば、ASP.NET アプリケーションの構成データはアプリケーション、サイト、およびコンピューターごとに保存され、実行可能ファイルの構成データはアプリケーション、ユーザー、およびコンピューターごとに格納されます。 特定の状況の構成データの詳細を認識しているのはホストだけです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f04816ab-110d-4e28-9283-845d6d9a4a68">ランタイム設定スキーマ</related>
      </Docs>
    </Member>
    <Member MemberName="DisallowApplicationBaseProbing">
      <MemberSignature Language="C#" Value="public bool DisallowApplicationBaseProbing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowApplicationBaseProbing" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowApplicationBaseProbing" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowApplicationBaseProbing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowApplicationBaseProbing { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowApplicationBaseProbing : bool with get, set" Usage="System.AppDomainSetup.DisallowApplicationBaseProbing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>読み込むアセンブリを検索する際に、アプリケーションのベース パスおよびプライベート バイナリ パスを調査対象から除外するかどうかを指定します。</summary>
        <value>調査対象としない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> プロパティが `true`の場合、<xref:System.AppDomainSetup.ApplicationBase%2A> プロパティの値は無視されます。 つまり、<xref:System.AppDomainSetup.ApplicationBase%2A> プロパティによって指定されたディレクトリには、どのアセンブリもプローブされません。 また、<xref:System.AppDomainSetup.PrivateBinPath%2A> プロパティと <xref:System.AppDomainSetup.PrivateBinPathProbe%2A> プロパティの値は無視されます。 <xref:System.AppDomainSetup.PrivateBinPath%2A> プロパティによって指定されたディレクトリには、どのアセンブリもプローブされません。  
  
 <xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> プロパティは、読み込みプロセスをさらに制御するレイヤーを提供します。 通常のアセンブリ読み込みシーケンスでは、アプリケーションベースは <xref:System.AppDomain.AssemblyResolve?displayProperty=nameWithType> イベントが発生する前にプローブされます。 ただし、アプリケーションによっては、ドキュメント内の OLE 複合ファイルから、またはグローバルアセンブリキャッシュにない一意の既知の場所や、<xref:System.AppDomainSetup.ApplicationBase%2A> および <xref:System.AppDomainSetup.PrivateBinPath%2A> のプロパティで指定されたディレクトリにアセンブリを読み込むことが必要になる場合があります。 このようなアプリケーションでは、<xref:System.AppDomainSetup.DisallowApplicationBaseProbing%2A> プロパティを使用して、通常のプローブによる遅延を回避し、通常のプローブパスに配置されている可能性がある必要なアセンブリのコピーを読み込まないようにすることができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowBindingRedirects">
      <MemberSignature Language="C#" Value="public bool DisallowBindingRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowBindingRedirects" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowBindingRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowBindingRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowBindingRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowBindingRedirects : bool with get, set" Usage="System.AppDomainSetup.DisallowBindingRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインでアセンブリ バインディング リダイレクトを使用できるかどうかを示す値を取得または設定します。</summary>
        <value>アセンブリのリダイレクトを使用できない場合は <see langword="true" />、使用できる場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.DisallowBindingRedirects%2A> プロパティは、アセンブリバインドリダイレクトがアプリケーションシナリオに含まれないサービスおよびサーバーアプリケーションによって使用されるように設計されています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowCodeDownload">
      <MemberSignature Language="C#" Value="public bool DisallowCodeDownload { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowCodeDownload" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowCodeDownload" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowCodeDownload As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowCodeDownload { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowCodeDownload : bool with get, set" Usage="System.AppDomainSetup.DisallowCodeDownload" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインでアセンブリの HTTP ダウンロードを使用できるかどうかを示す値を取得または設定します。</summary>
        <value>アセンブリの HTTP ダウンロードを使用できない場合は <see langword="true" />。使用できる場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.DisallowCodeDownload%2A> プロパティは、イントラネットまたはインターネットからのコードのダウンロードがアプリケーションのシナリオに含まれないサービスおよびサーバーアプリケーションによって使用されるように設計されています。  
  
> [!CAUTION]
>  <xref:System.AppDomainSetup.DisallowCodeDownload%2A> プロパティの既定値は `false`です。 この設定は、サービスでは安全ではありません。 部分的に信頼されているコードをサービスがダウンロードできないようにするには、このプロパティを `true`に設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisallowPublisherPolicy">
      <MemberSignature Language="C#" Value="public bool DisallowPublisherPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisallowPublisherPolicy" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DisallowPublisherPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property DisallowPublisherPolicy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisallowPublisherPolicy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisallowPublisherPolicy : bool with get, set" Usage="System.AppDomainSetup.DisallowPublisherPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>構成ファイルの [&lt;publisherPolicy&gt;](~/docs/framework/configure-apps/file-schema/runtime/publisherpolicy-element.md) セクションをアプリケーション ドメインに適用するかどうかを示す値を取得または設定します。</summary>
        <value>アプリケーション ドメインの構成ファイルの <see langword="true" /> セクションを無視する場合は <see langword="&lt;publisherPolicy&gt;" />。宣言された発行元ポリシーを有効とする場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.DisallowPublisherPolicy%2A> プロパティは、ローカルに読み込まれる Web アプリケーションに特に適用されます。 このプロパティを使用すると、安全でない Web アプリケーションをセーフモードで実行しようとする悪意のある試みを防ぐことができます。  
  
 発行者ポリシーをバイパスする方法の詳細については、「[アセンブリバージョンのリダイレクト](~/docs/framework/configure-apps/redirect-assembly-versions.md)」を参照してください。 セーフモードの詳細については、「[ランタイムがアセンブリを検索する方法](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)」トピックの「構成ファイルを調べる」セクションを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicBase">
      <MemberSignature Language="C#" Value="public string DynamicBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBase" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.DynamicBase" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicBase : string with get, set" Usage="System.AppDomainSetup.DynamicBase" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.DynamicBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的に生成されたファイルが格納されるディレクトリのベース ディレクトリを取得または設定します。</summary>
        <value><see cref="P:System.AppDomain.DynamicDirectory" /> が置かれているディレクトリ。  

 <block subset="none" type="note"><para>  
 このプロパティの戻り値は、割り当てられた値とは異なります。
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
 このプロパティを使用して、新しいアプリケーションドメインの動的ディレクトリの配置先となるベースディレクトリを設定します。 新しいアプリケーションドメインのコードによってアセンブリが読み込まれると、アセンブリの解決は最初に通常のプローブパスで開始されます。 アセンブリが見つからない場合は、<xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> プロパティによって返される動的ディレクトリを検索します。 新しいアプリケーションドメインによって読み込まれて実行される動的アセンブリは、そこに配置できます。  
  
 <xref:System.AppDomainSetup.DynamicBase%2A> プロパティにパスを割り当てると、追加のサブディレクトリが追加されます。このサブディレクトリの名前は、<xref:System.AppDomainSetup.ApplicationName%2A> プロパティに割り当てられた値のハッシュコードです。 したがって、このプロパティによって後から返される基本ディレクトリは、割り当てられた値とは常に異なります。  
  
> [!IMPORTANT]
>  このプロパティに値を割り当てると、ディレクトリは作成されません。 ディレクトリは、それらを使用するコードによって作成または検証される必要があります。  
  
 動的ディレクトリは <xref:System.AppDomainSetup.DynamicBase%2A>のサブディレクトリです。 単純な名前は <xref:System.AppDomainSetup.ApplicationName%2A> プロパティによって返される値です。そのため、その形式は\\*ハッシュコード*\\*アプリケーション名*の*元のパス*になります。  
  
   
  
## Examples  
 次の例は、<xref:System.AppDomainSetup.DynamicBase%2A> プロパティを使用して、動的アセンブリの読み込み時にアプリケーションドメインがプローブするパスを設定する方法を示しています。  
  
 この例では、<xref:System.AppDomainSetup> オブジェクトを作成し、その <xref:System.AppDomainSetup.ApplicationName%2A> プロパティを "Example" に設定し、その <xref:System.AppDomainSetup.DynamicBase%2A> プロパティを "C:\ dynamicassemblydir" に設定します。 この例では、<xref:System.AppDomainSetup.DynamicBase%2A> プロパティを表示し、アプリケーション名のハッシュコードが、最初に割り当てられたパスのサブディレクトリとして追加されたことを示します。  
  
> [!NOTE]
>  この例の基本ディレクトリは、サンプルアプリケーションのプローブパスの外部にすることを目的としています。 この例は、別の場所でコンパイルしてください。 この例を実行するたびに、ベースディレクトリとそのすべてのサブディレクトリが削除されます。  
  
 この例では、<xref:System.AppDomainSetup> オブジェクトを使用して新しいアプリケーションドメインを作成します。 この例では、動的ディレクトリがまだ存在しない場合は作成します。 この例では、アプリケーションドメインの <xref:System.AppDomain.DynamicDirectory%2A?displayProperty=nameWithType> プロパティを使用して動的ディレクトリの名前を取得していますが、元のパス、アプリケーション名のハッシュコード、アプリケーション名を連結して、ディレクトリを事前に簡単に作成することもできます。  
  
 この例には、`DynamicHelloWorld.dll` という名前のアセンブリを出力し、新しいアプリケーションドメインの動的ディレクトリに格納する `GenerateDynamicAssembly` メソッドがあります。 動的アセンブリには、`HelloWorld`という1つの型が含まれています。この型には `HelloFromAD`という名前の静的メソッド (Visual Basic で`Shared` メソッド) があります。 このメソッドを呼び出すと、アプリケーションドメインの名前が表示されます。  
  
 `Example` クラスは <xref:System.MarshalByRefObject>から派生するため、この例では、新しいアプリケーションドメインにクラスのインスタンスを作成し、その `Test` メソッドを呼び出すことができます。 `Test` メソッドは、表示名で動的アセンブリを読み込み、静的な `HelloFromAD` メソッドを呼び出します。  
  
 `DynamicHelloWorld.dll` という名前のアセンブリのコードを記述し、この例と同じディレクトリでコンパイルすることによって、通常のプローブパスの後に動的ディレクトリを検索することを示すことができます。 アセンブリには、`HelloFromAD`という名前の静的メソッドを持つ `HelloWorld` という名前のクラスが必要です。 このメソッドの機能は、例のものと同じである必要はありません。単にコンソールに文字列を表示できます。 アセンブリには、そのバージョンを1.0.0.0 に設定する <xref:System.Reflection.AssemblyVersionAttribute> 属性も必要です。 この例を実行すると、現在のディレクトリでコンパイルしたアセンブリが検索されてから、動的ディレクトリが検索されます。  
  
 [!code-cpp[ADDynamicBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDynamicBase/CPP/addynamicbase.cpp#1)]
 [!code-csharp[ADDynamicBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDynamicBase/CS/addynamicbase.cs#1)]
 [!code-vb[ADDynamicBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDynamicBase/VB/addynamicbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException">アプリケーション ドメインのアプリケーション名が <see langword="null" /> であるため、このプロパティを設定できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationBytes">
      <MemberSignature Language="C#" Value="public byte[] GetConfigurationBytes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetConfigurationBytes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.GetConfigurationBytes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfigurationBytes () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetConfigurationBytes();" />
      <MemberSignature Language="F#" Value="member this.GetConfigurationBytes : unit -&gt; byte[]" Usage="appDomainSetup.GetConfigurationBytes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> メソッドによって設定されたXML 構成情報を返します。これにより、アプリケーションの XML 構成情報はオーバーライドされます。</summary>
        <returns><see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" /> メソッドによって設定された XML 構成情報を格納する配列。<see langword="null" /> メソッドが呼び出されなかった場合は <see cref="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドは、新しいアプリケーションドメインを作成するアプリケーションの構成情報をオーバーライドする手段を提供します。 `value` の構成ファイル情報は、アプリケーションの構成ファイル情報を上書きします。 たとえば、サンプルの .exe アプリケーションによって新しいアプリケーションドメインが作成された場合、最初に例の .exe. .config ファイルから取得した構成情報を上書きできます。  
  
> [!IMPORTANT]
>  構成ファイル情報の一部のコンシューマーは、<xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドによって格納された情報を使用しません。 ランタイムはこれを強制しません。 すべての構成ファイル情報が新しいアプリケーションドメインでオーバーライドされるようにするには、<xref:System.AppDomainSetup.ConfigurationFile%2A> プロパティを使用して構成ファイルを指定します。 <xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドは、アセンブリのバインディングに影響します。  
  
 `value` の XML は、通常の構成ファイルの XML と同じですが、<xref:System.Byte> 配列として格納されている点が異なります。  
  
 アプリケーションドメインの構成バイトにアクセスするには、<xref:System.AppDomain.SetupInformation%2A?displayProperty=nameWithType> プロパティを使用して、アプリケーションドメインの <xref:System.AppDomainSetup> オブジェクトを取得し、<xref:System.AppDomainSetup.GetConfigurationBytes%2A> メソッドを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LicenseFile">
      <MemberSignature Language="C#" Value="public string LicenseFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LicenseFile" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.LicenseFile" />
      <MemberSignature Language="VB.NET" Value="Public Property LicenseFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LicenseFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LicenseFile : string with get, set" Usage="System.AppDomainSetup.LicenseFile" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.LicenseFile</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このドメインに関連付けられたライセンス ファイルの場所を取得または設定します。</summary>
        <value>ライセンス ファイルの場所と名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderOptimization">
      <MemberSignature Language="C#" Value="public LoaderOptimization LoaderOptimization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.LoaderOptimization LoaderOptimization" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.LoaderOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Property LoaderOptimization As LoaderOptimization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property LoaderOptimization LoaderOptimization { LoaderOptimization get(); void set(LoaderOptimization value); };" />
      <MemberSignature Language="F#" Value="member this.LoaderOptimization : LoaderOptimization with get, set" Usage="System.AppDomainSetup.LoaderOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.LoaderOptimization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行可能ファイルを読み込むために使用する最適化ポリシーを指定します。</summary>
        <value><see cref="T:System.LoaderOptimizationAttribute" /> で使用される列挙型定数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、動的アセンブリを作成してディスクに保存し、<xref:System.AppDomainSetup.LoaderOptimization%2A> プロパティを使用して、アセンブリをアプリケーションドメインに読み込むために使用する最適化ポリシーを設定します。  
  
 [!code-cpp[ADDyno#1](~/samples/snippets/cpp/VS_Snippets_CLR/ADDyno/CPP/addyno.cpp#1)]
 [!code-csharp[ADDyno#1](~/samples/snippets/csharp/VS_Snippets_CLR/ADDyno/CS/addyno.cs#1)]
 [!code-vb[ADDyno#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ADDyno/VB/addyno.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialTrustVisibleAssemblies">
      <MemberSignature Language="C#" Value="public string[] PartialTrustVisibleAssemblies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PartialTrustVisibleAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PartialTrustVisibleAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Property PartialTrustVisibleAssemblies As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ PartialTrustVisibleAssemblies { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartialTrustVisibleAssemblies : string[] with get, set" Usage="System.AppDomainSetup.PartialTrustVisibleAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サンドボックス化されたアプリケーション ドメインで実行されている部分信頼コードから参照できる、<see cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" /> フラグでマークされたアセンブリのリストを取得または設定します。</summary>
        <value>部分アセンブリ名の配列。各部分名は単純なアセンブリ名と公開キーで構成されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、<xref:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel%2A> プロパティを <xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault>に設定することにより、<xref:System.Security.AllowPartiallyTrustedCallersAttribute> (APTCA) 属性を条件付きにすることができます。 <xref:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault> でマークされた APTCA アセンブリは、ホストアプリケーションで許可されていない限り、部分的に信頼されているコードでは使用できません。  
  
 サンドボックス化されたアプリケーションドメインのホストにより、アプリケーションドメイン内のコードは、各アセンブリの簡易名と公開キーを含む配列を作成し、このプロパティに配列を割り当てることによって、条件付き APTCA 属性を持つアセンブリを使用できます。 たとえば、配列の要素は次のようになります。 "MyAssembly, PublicKey =0024000004800000940000000602000000240000525341310004000001000100db2ad5e5fedc67ea526ff72ad426ef68e08e241d296c499eedfec6648dcc62b1a12f72be5833a45bbec481b68415b08a5fbc9f9ef247b523dd72bbea65bb532784ddc5c704544bd2f1c2d46fdbe41e4f949e76f9947357b2d5cf8ca9f970701bbd6e8ab64ad31b20ad0be9b56dae4f6b83332b92a2a3b8ea2804c40efbc0b6b9".  
  
> [!IMPORTANT]
>  <xref:System.AppDomainManager>のサブクラスを使用していて、それを定義するアセンブリが条件付き APTCA 属性でマークされているアセンブリに依存している場合は、アプリケーションドメインの作成に使用する <xref:System.AppDomainSetup> の <xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A> プロパティに渡すアセンブリを一覧に含める必要があります。 それ以外の場合、条件付き APTCA 属性でマークされているアセンブリは無効になります。  
  
> [!NOTE]
>  サンドボックス化されたアプリケーションドメインで実行されているアプリケーションをデバッグする場合、一部の <xref:System.Security.SecurityException> メッセージは誤解を招く可能性があります。 たとえば、問題の実際の原因は、サンドボックス化されたアプリケーションドメインの許可セットを超えるセキュリティ要求が、次の境界に反映されているという点で、完全に信頼されたアセンブリの1つにはアクセス許可が制限されているというメッセージが表示される場合があります。サンドボックス化されたアプリケーションドメインと失敗しました。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.AllowPartiallyTrustedCallersAttribute" />
        <altmember cref="P:System.Security.AllowPartiallyTrustedCallersAttribute.PartialTrustVisibilityLevel" />
        <altmember cref="F:System.Security.PartialTrustVisibilityLevel.NotVisibleByDefault" />
      </Docs>
    </Member>
    <Member MemberName="PrivateBinPath">
      <MemberSignature Language="C#" Value="public string PrivateBinPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBinPath" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PrivateBinPath" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBinPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBinPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBinPath : string with get, set" Usage="System.AppDomainSetup.PrivateBinPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.PrivateBinPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プライベート アセンブリが調査されるアプリケーション ベース ディレクトリ下に存在するディレクトリのリストを取得または設定します。</summary>
        <value>セミコロンで区切られたディレクトリ名のリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プライベートアセンブリは、アプリケーションと同じディレクトリ構造に配置されます。 <xref:System.AppDomainSetup.PrivateBinPath%2A> に指定されたディレクトリが <xref:System.AppDomainSetup.ApplicationBase%2A>下にない場合、それらは無視されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateBinPathProbe">
      <MemberSignature Language="C#" Value="public string PrivateBinPathProbe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrivateBinPathProbe" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.PrivateBinPathProbe" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateBinPathProbe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PrivateBinPathProbe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrivateBinPathProbe : string with get, set" Usage="System.AppDomainSetup.PrivateBinPathProbe" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.PrivateBinPathProbe</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.AppDomainSetup.ApplicationBase" /> をアプリケーションの検索パスに含めたり、検索パスから除外して <see cref="P:System.AppDomainSetup.PrivateBinPath" /> だけを検索するようにしたりするための文字列値を取得または設定します。</summary>
        <value>アセンブリを検索するときにアプリケーションのベース パスを含める場合は、null 参照 (Visual Basic では <see langword="Nothing" />)。パスを除外する場合は、null 以外の文字列値。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティには、<xref:System.String.Empty?displayProperty=nameWithType> ("") を含む null 以外の文字列値を設定して、アプリケーションディレクトリパス (つまり、アプリケーションの検索パスからの <xref:System.AppDomainSetup.ApplicationBase%2A>) を除外し、<xref:System.AppDomainSetup.PrivateBinPath%2A>でのみアセンブリを検索します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SandboxInterop">
      <MemberSignature Language="C#" Value="public bool SandboxInterop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SandboxInterop" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.SandboxInterop" />
      <MemberSignature Language="VB.NET" Value="Public Property SandboxInterop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SandboxInterop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SandboxInterop : bool with get, set" Usage="System.AppDomainSetup.SandboxInterop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呼び出しのたびに <c>QueryInterface</c> が実行されるように、アプリケーション ドメインの相互運用呼び出しに対するインターフェイス キャッシュが無効かどうかを示す値を取得または設定します。</summary>
        <value>現在の <see langword="true" /> オブジェクトを使用して作成された、アプリケーション ドメインの相互運用呼び出しに対するインターフェイス キャッシュが無効の場合は <see cref="T:System.AppDomainSetup" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インターフェイスキャッシュを無効にすると、相互運用呼び出しのパフォーマンスに大きな影響があります。  
  
 このメンバーは [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で導入されました。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCompatibilitySwitches">
      <MemberSignature Language="C#" Value="public void SetCompatibilitySwitches (System.Collections.Generic.IEnumerable&lt;string&gt; switches);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCompatibilitySwitches(class System.Collections.Generic.IEnumerable`1&lt;string&gt; switches) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetCompatibilitySwitches(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCompatibilitySwitches (switches As IEnumerable(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCompatibilitySwitches(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ switches);" />
      <MemberSignature Language="F#" Value="member this.SetCompatibilitySwitches : seq&lt;string&gt; -&gt; unit" Usage="appDomainSetup.SetCompatibilitySwitches switches" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switches" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="switches">互換性スイッチを指定する文字列値の列挙可能なセット。既存の互換性スイッチを消去する場合は <see langword="null" />。</param>
        <summary>指定されたスイッチを設定し、指定された問題のためにアプリケーション ドメインと以前のバージョンの .NET Framework の互換性を確保します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework のメジャーバージョンでは、以前のバージョンからの重大な変更が発生する場合があります。 たとえば、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] では、[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]からの多くの重大な変更が導入されています。 <xref:System.AppDomainSetup.SetCompatibilitySwitches%2A> メソッドを使用して、以前のバージョンの .NET Framework との互換性を確保するために、これらの重大な変更の1つまたは複数をアプリケーションドメインに対してロールバックするように指定します。  
  
 このメソッドを呼び出すたびに、既存のスイッチ設定が置き換えられます。 設定を消去するには、`switches` パラメーターに `null` を指定します。  
  
 配列には <xref:System.Collections.IEnumerable> インターフェイスが実装されているため、`switches` に指定する文字列値のセットを単純な文字列配列にすることができます。  
  
 次の表に、以前のバージョンの .NET Framework の動作を復元するために設定できる互換性スイッチの例を示します。  
  
|Switch|意味|  
|------------|-------------|  
|"NetFx40_LegacySecurityPolicy"|このアプリケーションドメインでは、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] のコードアクセスセキュリティ (CAS) が有効になっています。 「 [&lt;NetFx40_LegacySecurityPolicy&gt; 要素](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)」を参照してください。|  
|"NetFx40_Legacy20SortingBehavior"|このアプリケーションドメインで有効になっている [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] の文字列並べ替えの既定値。 従来の並べ替え動作を正常に復元するには、ローカルシステムで sort00001000.dll ダイナミックリンクライブラリを使用できるようにする必要もあります。 「 [&lt;CompatSortNLSVersion&gt; 要素](~/docs/framework/configure-apps/file-schema/runtime/compatsortnlsversion-element.md)」を参照してください。|  
|"NetFx40_Legacy40SortingBehavior"|このアプリケーションドメインでは、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] の文字列の並べ替えの既定値と Unicode 5.0 が有効になっています。 従来の並べ替え動作を正常に復元するには、ローカルシステムで sort00060101 ダイナミックリンクライブラリを使用できるようにする必要もあります。|  
|"NetFx40_TimeSpanLegacyFormatMode"|[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] の <xref:System.TimeSpan> の書式設定動作は、このアプリケーションドメインで有効になっています。 <xref:System.TimeSpan> トピックの「 [&lt;TimeSpan_LegacyFormatMode&gt; 要素](~/docs/framework/configure-apps/file-schema/runtime/timespan-legacyformatmode-element.md)」と「従来の TimeSpan 書式設定の復元」セクションを参照してください。|  
|"UseRandomizedStringHashAlgorithm"|ランタイムは、アプリケーションドメイン間で一貫性のあるハッシュコードを生成する単一のハッシュアルゴリズムを使用するのではなく、アプリケーションドメインごとに文字列のハッシュコードを計算します。 「 [&lt;UseRandomizedStringHashAlgorithm&gt; 要素](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md)」を参照してください。|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.AppDomain.IsCompatibilitySwitchSet(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/07132b9c-4a72-4710-99d7-e702405e02d4">&lt;NetFx40_LegacySecurityPolicy&gt; 要素</related>
        <related type="Article" href="https://msdn.microsoft.com/library/782cc82e-83f7-404a-80b7-6d3061a8b6e3">&lt;CompatSortNLSVersion&gt; 要素</related>
        <related type="Article" href="https://msdn.microsoft.com/library/865e7207-d050-4442-b574-57ea29d5e2d6">&lt;TimeSpan_LegacyFormatMode&gt; 要素</related>
        <related type="Article" href="https://msdn.microsoft.com/library/c08125d6-56cc-4b23-b482-813ff85dc630">&lt;UseRandomizedStringHashAlgorithm&gt; 要素</related>
      </Docs>
    </Member>
    <Member MemberName="SetConfigurationBytes">
      <MemberSignature Language="C#" Value="public void SetConfigurationBytes (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConfigurationBytes(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetConfigurationBytes(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetConfigurationBytes (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetConfigurationBytes(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetConfigurationBytes : byte[] -&gt; unit" Usage="appDomainSetup.SetConfigurationBytes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">アプリケーション ドメイン用に使用される XML 構成情報が格納された配列。</param>
        <summary>アプリケーションの XML 構成情報を置換し、アプリケーション ドメインの XML 構成情報を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドを使用すると、新しいアプリケーションドメインを作成するアプリケーションの構成情報を置き換えることができます。 `value` の構成ファイル情報によって、アプリケーションの構成ファイル情報が置き換えられます。 たとえば、サンプルの .exe アプリケーションによって新しいアプリケーションドメインが作成されるときに、最初にサンプルの .config ファイルから取得した構成情報を置き換えることができます。  
  
> [!IMPORTANT]
>  構成ファイル情報の一部のコンシューマーは、<xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドによって格納された情報を使用しません。 ランタイムはこれを強制しません。 すべての構成ファイル情報が新しいアプリケーションドメインで置き換えられるようにするには、<xref:System.AppDomainSetup.ConfigurationFile%2A> プロパティを使用して構成ファイルを指定します。 <xref:System.AppDomainSetup.SetConfigurationBytes%2A> メソッドは、アセンブリのバインディングに影響します。  
  
 `value` の XML は、通常の構成ファイルの XML と同じですが、<xref:System.Byte> 配列として格納されている点が異なります。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f04816ab-110d-4e28-9283-845d6d9a4a68">ランタイム設定スキーマ</related>
      </Docs>
    </Member>
    <Member MemberName="SetNativeFunction">
      <MemberSignature Language="C#" Value="public void SetNativeFunction (string functionName, int functionVersion, IntPtr functionPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNativeFunction(string functionName, int32 functionVersion, native int functionPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainSetup.SetNativeFunction(System.String,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNativeFunction (functionName As String, functionVersion As Integer, functionPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNativeFunction(System::String ^ functionName, int functionVersion, IntPtr functionPointer);" />
      <MemberSignature Language="F#" Value="member this.SetNativeFunction : string * int * nativeint -&gt; unit" Usage="appDomainSetup.SetNativeFunction (functionName, functionVersion, functionPointer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="functionVersion" Type="System.Int32" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="functionPointer" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="functionName">オーバーライドする文字列比較関数の名前。</param>
        <param name="functionVersion">関数のバージョン。 [!INCLUDE[net_v45](~/includes/net-v45-md.md)] では、その値は 1 以上である必要があります。</param>
        <param name="functionPointer"><paramref name="functionName" /> をオーバーライドする関数へのポインター。</param>
        <summary>文字列比較関数の代替実装を持つ共通言語ランタイムを提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の文字列比較メソッドと並べ替えメソッドは、<xref:System.AppDomainSetup.SetNativeFunction%2A> メソッドによってオーバーライドできます。  
  
-   `IsNLSDefinedString`  
  
-   `CompareStringEx`  
  
-   `LCMapStringEx`  
  
-   `FindNLSStringEx`  
  
-   `CompareStringOrdinal`  
  
-   `GetNLSVersion`  
  
 これらの関数の詳細については、「[各国語サポート関数](https://go.microsoft.com/fwlink/?LinkId=228134)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="functionName" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="functionVersion" /> は 1 以上ではありません。  
  
または 
 <paramref name="functionPointer" /> が <see cref="F:System.IntPtr.Zero" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyDirectories">
      <MemberSignature Language="C#" Value="public string ShadowCopyDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShadowCopyDirectories" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ShadowCopyDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowCopyDirectories As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShadowCopyDirectories { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyDirectories : string with get, set" Usage="System.AppDomainSetup.ShadowCopyDirectories" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ShadowCopyDirectories</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シャドウ コピー対象のアセンブリが格納されているディレクトリの名前を取得または設定します。</summary>
        <value>セミコロンで区切られたディレクトリ名のリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シャドウコピーが有効になっている場合、既定では、プローブによって検出されたすべてのアセンブリがシャドウコピーされます。つまり、<xref:System.AppDomainSetup.PrivateBinPath%2A> と <xref:System.AppDomainSetup.ApplicationBase%2A> のプロパティで指定されたディレクトリにあります。 <xref:System.AppDomainSetup.ShadowCopyDirectories%2A> プロパティは、<xref:System.AppDomainSetup.ShadowCopyDirectories%2A>によって指定されたディレクトリ内のアセンブリにシャドウコピーを制限します。  
  
 <xref:System.AppDomainSetup.ShadowCopyDirectories%2A> プロパティに文字列を割り当てない場合、またはこのプロパティを `null`に設定した場合は、<xref:System.AppDomainSetup.ApplicationBase%2A> プロパティと <xref:System.AppDomainSetup.PrivateBinPath%2A> プロパティで指定されたディレクトリ内のすべてのアセンブリがシャドウコピーされます。  
  
> [!IMPORTANT]
>  セミコロンは区切り文字なので、ディレクトリ パスにはセミコロンを含めないでください。 セミコロンのためのエスケープ文字はありません。  
  
 シャドウコピーが有効な場合、アセンブリが読み込まれる前に、アセンブリファイルが別の場所にコピーされます。 元のアセンブリファイルはロックされていないため、更新できます。 シャドウコピーの詳細については、「[アセンブリのシャドウコピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyFiles" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md">アセンブリのシャドウ コピー</related>
      </Docs>
    </Member>
    <Member MemberName="ShadowCopyFiles">
      <MemberSignature Language="C#" Value="public string ShadowCopyFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShadowCopyFiles" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.ShadowCopyFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowCopyFiles As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ShadowCopyFiles { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowCopyFiles : string with get, set" Usage="System.AppDomainSetup.ShadowCopyFiles" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAppDomainSetup.ShadowCopyFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シャドウ コピーが有効であるか無効であるかを示す文字列を取得または設定します。</summary>
        <value>シャドウ コピーが有効な場合は文字列値 "true"。シャドウ コピーが無効な場合は "false"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シャドウコピーの詳細については、「[アセンブリのシャドウコピー](~/docs/framework/app-domains/shadow-copy-assemblies.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.AppDomainSetup.CachePath" />
        <altmember cref="P:System.AppDomainSetup.ShadowCopyDirectories" />
        <related type="Article" href="~/docs/framework/app-domains/shadow-copy-assemblies.md">アセンブリのシャドウ コピー</related>
      </Docs>
    </Member>
    <Member MemberName="TargetFrameworkName">
      <MemberSignature Language="C#" Value="public string TargetFrameworkName { get; }" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetFrameworkName" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainSetup.TargetFrameworkName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetFrameworkName As String" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFrameworkName { System::String ^ get(); };" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkName : string" Usage="System.AppDomainSetup.TargetFrameworkName" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C#" Value="public string TargetFrameworkName { get; set; }" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetFrameworkName As String" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TargetFrameworkName { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.TargetFrameworkName : string with get, set" Usage="System.AppDomainSetup.TargetFrameworkName" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)" /> コンストラクターによって解析できる形式で、アプリケーション ドメインの .NET Framework のターゲット バージョンおよびプロファイルを指定する文字列を取得または設定します。</summary>
        <value>対象となる .NET Framework のバージョンとプロファイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定して、対象のバージョンとプロファイル用にコンパイルされたアセンブリを読み込んで実行するためにアプリケーションドメインが使用される .NET Framework の現在実行中のバージョンを指定します。 現在実行中のバージョンの .NET Framework に、ターゲットバージョンでコンパイルされたコードの互換性に影響するオプションの動作がある場合は、互換性を向上させるために、必要に応じてこれらの動作を有効または無効にすることができます。 これは、アプリケーションが複数のバージョンの .NET Framework でコンパイルされたアドインを個別のアプリケーションドメインで実行することによってサポートされる場合に便利です。  
  
 クライアントアプリケーションの場合、<xref:System.AppDomainSetup.TargetFrameworkName%2A> プロパティの値は <xref:System.Runtime.Versioning.TargetFrameworkAttribute> 属性から推論されます。 以降 [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)]、この属性は、プロジェクトの **[ターゲットフレームワーク]** プロパティの設定に基づいて、アセンブリに自動的に追加されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
