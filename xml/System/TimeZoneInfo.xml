<Type Name="TimeZoneInfo" FullName="System.TimeZoneInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b4c2b2ff4644657d360d5e38c46223a2e1a4e3aa" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75039152" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo : IEquatable&lt;TimeZoneInfo&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit TimeZoneInfo extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TimeZoneInfo sealed : IEquatable&lt;TimeZoneInfo ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo = class&#xA;    interface IEquatable&lt;TimeZoneInfo&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a8be6-101">世界中のいずれかのタイム ゾーンを表します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-101">Represents any time zone in the world.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-102">タイム ゾーンは、同じ時刻が使用されている地域です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-102">A time zone is a geographical region in which the same time is used.</span></span>  
  
 <span data-ttu-id="a8be6-103"><xref:System.TimeZoneInfo> クラスは、機能が制限されている <xref:System.TimeZone> クラスよりも大幅な機能強化を提供します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-103">The <xref:System.TimeZoneInfo> class offers significant enhancements over the <xref:System.TimeZone> class, which provides only limited functionality.</span></span>  
  
 <span data-ttu-id="a8be6-104"><xref:System.TimeZone> クラスは、ローカルタイムゾーンのみを認識し、世界協定時刻 (UTC) と現地時刻の間で時刻を変換できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-104">The <xref:System.TimeZone> class recognizes only the local time zone, and can convert times between Coordinated Universal Time (UTC) and local time.</span></span> <span data-ttu-id="a8be6-105"><xref:System.TimeZoneInfo> オブジェクトは任意のタイムゾーンを表すことができ、<xref:System.TimeZoneInfo> クラスのメソッドを使用して、あるタイムゾーンの時刻を他のタイムゾーンの対応する時刻に変換できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-105">A <xref:System.TimeZoneInfo> object can represent any time zone, and methods of the <xref:System.TimeZoneInfo> class can be used to convert the time in one time zone to the corresponding time in any other time zone.</span></span> <span data-ttu-id="a8be6-106"><xref:System.TimeZoneInfo> クラスのメンバーは、次の操作をサポートします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-106">The members of the <xref:System.TimeZoneInfo> class support the following operations:</span></span>  
  
-   <span data-ttu-id="a8be6-107">オペレーティングシステムによって既に定義されているタイムゾーンを取得しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-107">Retrieving a time zone that is already defined by the operating system.</span></span>  
  
-   <span data-ttu-id="a8be6-108">システムで使用できるタイムゾーンを列挙する。</span><span class="sxs-lookup"><span data-stu-id="a8be6-108">Enumerating the time zones that are available on a system.</span></span>  
  
-   <span data-ttu-id="a8be6-109">異なるタイムゾーン間での時刻の変換。</span><span class="sxs-lookup"><span data-stu-id="a8be6-109">Converting times between different time zones.</span></span>  
  
-   <span data-ttu-id="a8be6-110">オペレーティングシステムによって定義されていない新しいタイムゾーンを作成しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-110">Creating a new time zone that is not already defined by the operating system.</span></span>  
  
-   <span data-ttu-id="a8be6-111">後で取得するためにタイムゾーンをシリアル化する。</span><span class="sxs-lookup"><span data-stu-id="a8be6-111">Serializing a time zone for later retrieval.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8be6-112"><xref:System.TimeZoneInfo> クラスのインスタンスは変更できません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-112">An instance of the <xref:System.TimeZoneInfo> class is immutable.</span></span> <span data-ttu-id="a8be6-113">オブジェクトがインスタンス化されると、その値を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-113">Once an object has been instantiated, its values cannot be modified.</span></span>  
  
 <span data-ttu-id="a8be6-114">`new` キーワードを使用して <xref:System.TimeZoneInfo> オブジェクトをインスタンス化することはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-114">You cannot instantiate a <xref:System.TimeZoneInfo> object using the `new` keyword.</span></span> <span data-ttu-id="a8be6-115">代わりに、次の表に示す <xref:System.TimeZoneInfo> クラスの静的メンバーの1つを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-115">Instead, you must call one of the static members of the <xref:System.TimeZoneInfo> class shown in the following table.</span></span>  
  
|<span data-ttu-id="a8be6-116">静的メンバー名</span><span class="sxs-lookup"><span data-stu-id="a8be6-116">Static member name</span></span>|<span data-ttu-id="a8be6-117">説明</span><span class="sxs-lookup"><span data-stu-id="a8be6-117">Description</span></span>|  
|------------------------|-----------------|  
|<span data-ttu-id="a8be6-118"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="a8be6-118"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method</span></span>|<span data-ttu-id="a8be6-119">アプリケーションによって提供されるデータからカスタムタイムゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-119">Creates a custom time zone from application-supplied data.</span></span>|  
|<span data-ttu-id="a8be6-120"><xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="a8be6-120"><xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method</span></span>|<span data-ttu-id="a8be6-121">識別子に基づいてタイムゾーンをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-121">Instantiates a time zone based on its identifier.</span></span>|  
|<span data-ttu-id="a8be6-122"><xref:System.TimeZoneInfo.FromSerializedString%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="a8be6-122"><xref:System.TimeZoneInfo.FromSerializedString%2A> method</span></span>|<span data-ttu-id="a8be6-123">文字列値を逆シリアル化して、以前にシリアル化された <xref:System.TimeZoneInfo> オブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-123">Deserializes a string value to re-create a previously serialized <xref:System.TimeZoneInfo> object.</span></span>|  
|<span data-ttu-id="a8be6-124"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> メソッド</span><span class="sxs-lookup"><span data-stu-id="a8be6-124"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method</span></span>|<span data-ttu-id="a8be6-125">ローカルシステムで使用できるすべてのタイムゾーンを表す <xref:System.TimeZoneInfo> オブジェクトの列挙可能な <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-125">Returns an enumerable <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.TimeZoneInfo> objects that represents all time zones that are available on the local system.</span></span>|  
|<span data-ttu-id="a8be6-126"><xref:System.TimeZoneInfo.Local%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="a8be6-126"><xref:System.TimeZoneInfo.Local%2A> property</span></span>|<span data-ttu-id="a8be6-127">ローカルタイムゾーンを表す <xref:System.TimeZoneInfo> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-127">Instantiates a <xref:System.TimeZoneInfo> object that represents the local time zone.</span></span>|  
|<span data-ttu-id="a8be6-128"><xref:System.TimeZoneInfo.Utc%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="a8be6-128"><xref:System.TimeZoneInfo.Utc%2A> property</span></span>|<span data-ttu-id="a8be6-129">UTC ゾーンを表す <xref:System.TimeZoneInfo> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-129">Instantiates a <xref:System.TimeZoneInfo> object that represents the UTC zone.</span></span>|  
  
 <span data-ttu-id="a8be6-130"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドを使用して、Windows システムのローカルシステムレジストリで定義されていないタイムゾーンを作成したり、Linux または macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)のタイムゾーンクラスを使用してタイムゾーンを作成したりできます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-130">You can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to create a time zone that is not defined in the local system registry on Windows systems or by the time zone classes in the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux or macOS.</span></span> <span data-ttu-id="a8be6-131">次に、<xref:System.TimeZoneInfo.ToSerializedString%2A> プロパティを使用して、タイムゾーンオブジェクトの情報を文字列として保存できます。これは、アプリケーションからアクセスできる何らかの形式で格納できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-131">You can then use the <xref:System.TimeZoneInfo.ToSerializedString%2A> property to save the time zone object's information as a string, which can be stored in some form that is accessible to the application.</span></span> <span data-ttu-id="a8be6-132"><xref:System.TimeZoneInfo.FromSerializedString%2A> メソッドを使用して、シリアル化された文字列を <xref:System.TimeZoneInfo> オブジェクトに変換して戻すことができます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-132">You can use the <xref:System.TimeZoneInfo.FromSerializedString%2A> method to convert a serialized string back to a <xref:System.TimeZoneInfo> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan BaseUtcOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan BaseUtcOffset" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.BaseUtcOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUtcOffset As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan BaseUtcOffset { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUtcOffset : TimeSpan" Usage="System.TimeZoneInfo.BaseUtcOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8be6-133">現在のタイム ゾーンの標準時と世界協定時刻 (UTC) との差を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-133">Gets the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="a8be6-134">現在のタイム ゾーンの標準時と世界協定時刻 (UTC) との時差を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-134">An object that indicates the time difference between the current time zone's standard time and Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-135"><xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティによって返される時間間隔は、14時間 (世界協定時刻 (UTC) から14時間経過したタイムゾーンの場合) から-14 時間 (UTC の遅れが14時間のタイムゾーンの場合) までの範囲で指定できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-135">The time span returned by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property can range from 14 hours (for a time zone that is 14 hours ahead of Coordinated Universal Time (UTC)) to -14 hours (for a time zone that is 14 hours behind UTC).</span></span> <span data-ttu-id="a8be6-136">UTC より前のタイムゾーンには、正のオフセットがあります。UTC の後ろにあるタイムゾーンのオフセットは負になります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-136">Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.</span></span>  
  
 <span data-ttu-id="a8be6-137"><xref:System.TimeZoneInfo.BaseUtcOffset%2A> 値は、分の整数で表されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-137">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> value is represented as a whole number of minutes.</span></span> <span data-ttu-id="a8be6-138">分数を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-138">It cannot include a fractional number of minutes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8be6-139"><xref:System.TimeZoneInfo.BaseUtcOffset%2A> は <xref:System.TimeZoneInfo.AdjustmentRule> オブジェクトではなく <xref:System.TimeZoneInfo> オブジェクトのプロパティであるため、<xref:System.TimeZoneInfo> クラスは UTC からすべてのタイムゾーンの調整に対して1つのオフセットを適用します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-139">Because <xref:System.TimeZoneInfo.BaseUtcOffset%2A> is a property of the <xref:System.TimeZoneInfo> object rather than the <xref:System.TimeZoneInfo.AdjustmentRule> object, the <xref:System.TimeZoneInfo> class applies a single offset from UTC to all of a time zone's adjustments.</span></span> <span data-ttu-id="a8be6-140">UTC からのオフセットを変更したタイムゾーンを反映するには、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドを使用して新しいタイムゾーンを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-140">To reflect a time zone that has modified its offset from UTC, you must create a new time zone using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span>  
  
 <span data-ttu-id="a8be6-141"><xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティは、次の方法で <xref:System.TimeZoneInfo.GetUtcOffset%2A> メソッドとは異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-141">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property differs from the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method in the following ways:</span></span>  
  
-   <span data-ttu-id="a8be6-142"><xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティは、UTC とタイムゾーンの標準時刻の差を返します。<xref:System.TimeZoneInfo.GetUtcOffset%2A> メソッドは、特定の時点での UTC とタイムゾーンの時刻の差を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-142">The <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property returns the difference between UTC and the time zone's standard time; the <xref:System.TimeZoneInfo.GetUtcOffset%2A> method returns the difference between UTC and the time zone's time at a particular point in time.</span></span>  
  
-   <span data-ttu-id="a8be6-143"><xref:System.TimeZoneInfo.GetUtcOffset%2A> メソッドは、調整規則の適用をタイムゾーンに反映します。<xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティにはありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-143">The <xref:System.TimeZoneInfo.GetUtcOffset%2A> method reflects the application of any adjustment rules to the time zone; the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property does not.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-144">次の例では、<xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティを使用して、現地時刻と世界協定時刻 (UTC) の差を表示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-144">The following example uses the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property to display the difference between the local time and Coordinated Universal Time (UTC).</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#1)]
 [!code-vb[System.TimeZone2.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.TimeZoneInfo.GetUtcOffset" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public static void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCachedData();" />
      <MemberSignature Language="F#" Value="static member ClearCachedData : unit -&gt; unit" Usage="System.TimeZoneInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8be6-145">キャッシュされたタイム ゾーン データをクリアします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-145">Clears cached time zone data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-146">キャッシュされたタイムゾーンデータには、ローカルタイムゾーンおよび世界協定時刻 (UTC) ゾーンのデータが含まれます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-146">Cached time zone data includes data on the local time zone and the Coordinated Universal Time (UTC) zone.</span></span>  
  
 <span data-ttu-id="a8be6-147">`ClearCachedData` メソッドを呼び出して、アプリケーションのタイムゾーン情報のキャッシュに専念するメモリを減らすか、ローカルシステムのタイムゾーンが変更されたという事実を反映することができます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-147">You might call the `ClearCachedData` method to reduce the memory devoted to the application's cache of time zone information or to reflect the fact that the local system's time zone has changed.</span></span>  
  
 <span data-ttu-id="a8be6-148">ローカルタイムゾーンと UTC タイムゾーンへの参照を格納することはお勧めできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-148">Storing references to the local and UTC time zones is not recommended.</span></span> <span data-ttu-id="a8be6-149">`ClearCachedData` メソッドを呼び出した後、これらのオブジェクト変数は <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> または <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>への参照がなくなったオブジェクト <xref:System.TimeZoneInfo> 未定義になります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-149">After the call to the `ClearCachedData` method, these object variables will be undefined <xref:System.TimeZoneInfo> objects that are no longer references to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8be6-150">たとえば、次のコードでは、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> メソッドの2回目の呼び出しでは、`local` 変数が <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>とは見なされなくなったため、<xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-150">For example, in the following code, the second call to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method throws an <xref:System.ArgumentException> because the `local` variable is no longer considered equal to <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.TimeZone2.BestPractices#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/cs/System.TimeZone2.BestPractices.cs#1)]
 [!code-vb[System.TimeZone2.BestPractices#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.BestPractices/vb/System.TimeZone2.BestPractices.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-151">時刻を特定のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-151">Converts a time to the time in a particular time zone.</span></span></summary>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-152">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-152">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTime(DateTime dateTime, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTime (dateTime, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-153">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-153">The date and time to convert.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="a8be6-154"><paramref name="dateTime" /> の変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-154">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="a8be6-155">時刻を特定のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-155">Converts a time to the time in a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="a8be6-156">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-156">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-157">変換を実行すると、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> メソッドによって、`destinationTimeZone` タイムゾーンで有効になっている調整規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-157">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="a8be6-158">次の表に示すように、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> メソッドのこのオーバーロードは、`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの値からソースタイムゾーンを決定します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-158">This overload of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-159">Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="a8be6-159">Kind property value</span></span>|<span data-ttu-id="a8be6-160">ソースタイムゾーン</span><span class="sxs-lookup"><span data-stu-id="a8be6-160">Source time zone</span></span>|<span data-ttu-id="a8be6-161">メソッドの動作</span><span class="sxs-lookup"><span data-stu-id="a8be6-161">Method behavior</span></span>|  
|-------------------------|----------------------|---------------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A>|<span data-ttu-id="a8be6-162">ローカル時刻を `destinationTimeZone`の時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-162">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Utc%2A>|<span data-ttu-id="a8be6-163">世界協定時刻 (UTC) を `destinationTimeZone`の時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-163">Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a8be6-164"><xref:System.TimeZoneInfo.Local%2A>と想定されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-164">Assumed to be <xref:System.TimeZoneInfo.Local%2A>.</span></span>|<span data-ttu-id="a8be6-165">ローカル時刻を `destinationTimeZone`の時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-165">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
  
 <span data-ttu-id="a8be6-166">返された <xref:System.DateTime> 値の <xref:System.DateTime.Kind%2A> プロパティは、次の表に示すように設定されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-166">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="a8be6-167">条件</span><span class="sxs-lookup"><span data-stu-id="a8be6-167">Condition</span></span>|<span data-ttu-id="a8be6-168">返された Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="a8be6-168">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="a8be6-169">`destinationTimeZone` が <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-169">The `destinationTimeZone` is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="a8be6-170">`destinationTimeZone` が <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-170">The `destinationTimeZone` is <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="a8be6-171">その他のすべての日付と時刻の値と変換先のタイムゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-171">All other date and time values and destination time zones.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="a8be6-172">`dateTime` パラメーターの値があいまいな現地時刻の場合、標準時として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-172">If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time.</span></span> <span data-ttu-id="a8be6-173">`dateTime` パラメーターが無効な現地時刻の場合、このメソッドは <xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-173">If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a8be6-174">`dateTime` の変換によって <xref:System.DateTime.MaxValue?displayProperty=nameWithType>よりも <xref:System.DateTime.MinValue?displayProperty=nameWithType> 前の日付と時刻の値が返される場合、このメソッドは <xref:System.DateTime.MinValue?displayProperty=nameWithType> または <xref:System.DateTime.MaxValue?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-174">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="a8be6-175"><xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> および <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> メソッドを呼び出すことによって、UTC との間で変換を行うこともできます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-175">You can also convert to or from UTC by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-176">次の例では、日付と時刻の値の配列を米国およびカナダの東部標準時のタイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-176">The following example converts an array of date and time values to times in the Eastern Time zone of the U.S. and Canada.</span></span> <span data-ttu-id="a8be6-177">これは、ソースタイムゾーンがソース <xref:System.DateTime> 値の <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> プロパティに依存していることを示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-177">It shows that the source time zone depends on the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the source <xref:System.DateTime> value.</span></span> <span data-ttu-id="a8be6-178">また、タイムゾーンの調整は、ソースと宛先の両方のタイムゾーンで午前2:00 に行われるため、<xref:System.TimeZoneInfo.ConvertTime%2A> メソッドではタイムゾーンの調整が行われることも示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-178">It also illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M.</span></span> <span data-ttu-id="a8be6-179">2010年11月7日。</span><span class="sxs-lookup"><span data-stu-id="a8be6-179">on November 7, 2010.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime1.cs#1)]
 [!code-vb[System.TimeZoneInfo.ConvertTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-180"><paramref name="dateTime" /> パラメーターの値が無効な時刻を表しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-180">The value of the <paramref name="dateTime" /> parameter represents an invalid time.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-181"><paramref name="destinationTimeZone" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-181">The value of the <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-182">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-182">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ConvertTime (DateTimeOffset dateTimeOffset, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ConvertTime(valuetype System.DateTimeOffset dateTimeOffset, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ConvertTime(DateTimeOffset dateTimeOffset, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTimeOffset * TimeZoneInfo -&gt; DateTimeOffset" Usage="System.TimeZoneInfo.ConvertTime (dateTimeOffset, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a8be6-183">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-183">The date and time to convert.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="a8be6-184"><paramref name="dateTime" /> の変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-184">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="a8be6-185">時刻を特定のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-185">Converts a time to the time in a particular time zone.</span></span></summary>
        <returns><span data-ttu-id="a8be6-186">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-186">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-187">変換を実行すると、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> メソッドによって、`destinationTimeZone` タイムゾーンで有効になっている調整規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-187">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTimeOffset%2CSystem.TimeZoneInfo%29> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="a8be6-188">このオーバーロードは、最初のパラメーターとして <xref:System.DateTimeOffset> 値を受け取ることによって、<xref:System.TimeZoneInfo.ConvertTime%2A> メソッドの他のオーバーロードとは異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-188">This overload differs from the other overloads of the <xref:System.TimeZoneInfo.ConvertTime%2A> method by accepting a <xref:System.DateTimeOffset> value as its first parameter.</span></span> <span data-ttu-id="a8be6-189">これにより、特定のタイムゾーンの日付と時刻ではなく世界協定時刻 (UTC) からのオフセットとして日付と時刻が識別されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-189">This identifies the date and time as an offset from Coordinated Universal Time (UTC) rather than as the date and time in a particular time zone.</span></span> <span data-ttu-id="a8be6-190">その結果、`dateTimeOffset` パラメーターはあいまいな時刻または無効な時刻を表すことができません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-190">As a result, the `dateTimeOffset` parameter cannot represent either an ambiguous time or an invalid time.</span></span>  
  
 <span data-ttu-id="a8be6-191">`dateTimeOffset` 値を変換先タイムゾーンの時刻に変換する場合、この方法では、変換先タイムゾーンで有効になっている調整規則が考慮されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-191">In converting the `dateTimeOffset` value to the time in the destination time zone, this method takes into account any adjustment rules in effect in the destination time zone.</span></span>  
  
 <span data-ttu-id="a8be6-192">`dateTimeOffset` の変換によって <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>よりも <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> 前の日付と時刻の値が返される場合、このメソッドは <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> または <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-192">If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-193">次の例では、<xref:System.DateTimeOffset> 値の配列を米国およびカナダの東部標準時のタイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-193">The following example converts an array of <xref:System.DateTimeOffset> values to times in the Eastern Time zone of the U.S. and Canada.</span></span> <span data-ttu-id="a8be6-194">タイムゾーンの調整は、移行元と移行先の両方のタイムゾーンで午前2:00 に行われるため、<xref:System.TimeZoneInfo.ConvertTime%2A> メソッドではタイムゾーン調整が考慮されることを示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-194">It illustrates that the <xref:System.TimeZoneInfo.ConvertTime%2A> method takes time zone adjustments into account, because a time zone adjustment occurs in both the source and destination time zones at 2:00 A.M.</span></span> <span data-ttu-id="a8be6-195">2010年11月7日。</span><span class="sxs-lookup"><span data-stu-id="a8be6-195">on November 7, 2010.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.converttime/cs/converttime2.cs#2)]
 [!code-vb[System.TimeZoneInfo.ConvertTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.converttime/vb/converttime2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-196"><paramref name="destinationTimeZone" /> パラメーターの値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-196">The value of the <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-197">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-197">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTime">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTime (DateTime dateTime, TimeZoneInfo sourceTimeZone, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTime(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTime(DateTime dateTime, TimeZoneInfo ^ sourceTimeZone, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTime : DateTime * TimeZoneInfo * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTime (dateTime, sourceTimeZone, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-198">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-198">The date and time to convert.</span></span></param>
        <param name="sourceTimeZone"><span data-ttu-id="a8be6-199"><paramref name="dateTime" /> のタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-199">The time zone of <paramref name="dateTime" />.</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="a8be6-200"><paramref name="dateTime" /> の変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-200">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="a8be6-201">あるタイム ゾーンの時刻を別のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-201">Converts a time from one time zone to another.</span></span></summary>
        <returns><span data-ttu-id="a8be6-202">変換元タイム ゾーンでの <paramref name="dateTime" /> パラメーターに対応する、変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-202">The date and time in the destination time zone that corresponds to the <paramref name="dateTime" /> parameter in the source time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-203">変換を実行すると、<xref:System.TimeZoneInfo.ConvertTime%2A> メソッドによって、`destinationTimeZone` タイムゾーンで有効になっている調整規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-203">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTime%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="a8be6-204">次の表に示すように、`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの値は、`sourceTimeZone` パラメーターに対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-204">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZone` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-205">DateTime. Kind 値</span><span class="sxs-lookup"><span data-stu-id="a8be6-205">DateTime.Kind value</span></span>|<span data-ttu-id="a8be6-206">sourceTimeZone 値</span><span class="sxs-lookup"><span data-stu-id="a8be6-206">sourceTimeZone value</span></span>|<span data-ttu-id="a8be6-207">メソッドの動作</span><span class="sxs-lookup"><span data-stu-id="a8be6-207">Method behavior</span></span>|  
|-------------------------|--------------------------|---------------------|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a8be6-208">が <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>に等しい。</span><span class="sxs-lookup"><span data-stu-id="a8be6-208">Equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a8be6-209">`dateTime` を変換先タイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-209">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a8be6-210">Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-210">Does not equal <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a8be6-211"><xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-211">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a8be6-212">が <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>に等しい。</span><span class="sxs-lookup"><span data-stu-id="a8be6-212">Equals <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a8be6-213">`dateTime` を変換先タイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-213">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a8be6-214">Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-214">Does not equal <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="a8be6-215"><xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-215">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a8be6-216">いつ.</span><span class="sxs-lookup"><span data-stu-id="a8be6-216">Any.</span></span>|<span data-ttu-id="a8be6-217">`dateTime` を変換先タイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-217">Converts `dateTime` to the destination time zone's time.</span></span>|  
  
 <span data-ttu-id="a8be6-218"><xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> および <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> メソッドを呼び出すことによって、世界協定時刻 (UTC) との間で変換を行うこともできます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-218">You can also convert to or from Coordinated Universal Time (UTC) by calling the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> and <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> methods.</span></span>  
  
 <span data-ttu-id="a8be6-219">返された <xref:System.DateTime> 値の <xref:System.DateTime.Kind%2A> プロパティは、次の表に示すように設定されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-219">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="a8be6-220">条件</span><span class="sxs-lookup"><span data-stu-id="a8be6-220">Condition</span></span>|<span data-ttu-id="a8be6-221">返された Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="a8be6-221">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="a8be6-222">`destinationTimeZone` 引数が <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-222">The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="a8be6-223">`destinationTimeZone` 引数が <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-223">The `destinationTimeZone` argument is <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="a8be6-224">その他のすべての日付と時刻の値、変換元のタイムゾーン、および変換先のタイムゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-224">All other date and time values, source time zones, and destination time zones.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="a8be6-225">`dateTime` パラメーターの値がソースタイムゾーンのあいまいな時刻の場合、標準時として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-225">If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.</span></span> <span data-ttu-id="a8be6-226">`dateTime` パラメーターがソースタイムゾーンの無効な時刻の場合、このメソッドは <xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-226">If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a8be6-227">`dateTime` の変換によって <xref:System.DateTime.MaxValue?displayProperty=nameWithType>よりも <xref:System.DateTime.MinValue?displayProperty=nameWithType> 前の日付と時刻の値が返される場合、このメソッドは <xref:System.DateTime.MinValue?displayProperty=nameWithType> または <xref:System.DateTime.MaxValue?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-227">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="a8be6-228">`dateTime` 引数の <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> プロパティが <xref:System.DateTimeKind.Local?displayProperty=nameWithType> でも、`sourceTimeZone` 引数が <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>ない場合、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> メソッドは <xref:System.ArgumentException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-228">The <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method throws an <xref:System.ArgumentException> exception if the <xref:System.DateTime.Kind%2A?displayProperty=nameWithType> property of the `dateTime` argument is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> but the `sourceTimeZone` argument is not <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8be6-229">ソースタイムゾーンがローカルタイムゾーンとユニバーサルタイムゾーンのどちらであるかを判断するために、メソッドは、<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> メソッドとの値が等しいかどうかをテストするのではなく、参照の等価性をテストします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-229">To determine whether the source time zone is the local time zone or the universal time zone, the method tests for reference equality instead of testing for value equality with the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method.</span></span> <span data-ttu-id="a8be6-230">ローカルタイムゾーンを表すオブジェクト <xref:System.TimeZoneInfo> <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッドを呼び出すことによって取得されるオブジェクトは、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>との参照等値を持っていないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-230">Note that <xref:System.TimeZoneInfo> objects that represent the local time zone and that are retrieved by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8be6-231">さらに、ローカルタイムゾーンまたはユニバーサルタイムゾーンを表すオブジェクト <xref:System.TimeZoneInfo>、<xref:System.TimeZoneInfo.GetSystemTimeZones%2A> メソッドによって返されるコレクションを反復処理することによって取得されるオブジェクトには、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> または <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>との参照の等価性がありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-231">Furthermore, <xref:System.TimeZoneInfo> objects that represent the local or universal time zone and that are retrieved by iterating the collection returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method do not have referential equality with <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> or <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8be6-232">別の方法として、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> メソッドを呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-232">As an alternative, you can call the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-233">次の例は、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> メソッドを使用して、ハワイ標準時から現地時刻に変換する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-233">The following example illustrates the use of the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29> method to convert from Hawaiian Standard Time to local time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Concepts#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#9)]
 [!code-vb[System.TimeZone2.Concepts#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-234"><see cref="P:System.DateTime.Kind" /> パラメーターの <paramref name="dateTime" /> プロパティは <see cref="F:System.DateTimeKind.Local" /> ですが、<paramref name="sourceTimeZone" /> パラメーターが <see cref="F:System.DateTimeKind.Local" /> と等しくありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-234">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter is <see cref="F:System.DateTimeKind.Local" />, but the <paramref name="sourceTimeZone" /> parameter does not equal <see cref="F:System.DateTimeKind.Local" />.</span></span>  
  
<span data-ttu-id="a8be6-235">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-235">-or-</span></span> 
<span data-ttu-id="a8be6-236"><see cref="P:System.DateTime.Kind" /> パラメーターの <paramref name="dateTime" /> プロパティは <see cref="F:System.DateTimeKind.Utc" /> ですが、<paramref name="sourceTimeZone" /> パラメーターが <see cref="P:System.TimeZoneInfo.Utc" /> と等しくありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-236">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter is <see cref="F:System.DateTimeKind.Utc" />, but the <paramref name="sourceTimeZone" /> parameter does not equal <see cref="P:System.TimeZoneInfo.Utc" />.</span></span>  
  
<span data-ttu-id="a8be6-237">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-237">-or-</span></span> 
<span data-ttu-id="a8be6-238"><paramref name="dateTime" /> パラメーターが無効な時刻です (つまり、タイム ゾーンの調整規則が原因で、存在しない時刻を表しています)。</span><span class="sxs-lookup"><span data-stu-id="a8be6-238">The <paramref name="dateTime" /> parameter is an invalid time (that is, it represents a time that does not exist because of a time zone's adjustment rules).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-239"><paramref name="sourceTimeZone" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-239">The <paramref name="sourceTimeZone" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8be6-240">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-240">-or-</span></span> 
<span data-ttu-id="a8be6-241"><paramref name="destinationTimeZone" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-241">The <paramref name="destinationTimeZone" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId" />
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-242">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-242">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTimeBySystemTimeZoneId">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-243">ある時刻をタイム ゾーン ID に基づいて別のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-243">Converts a time to the time in another time zone based on a time zone identifier.</span></span></summary>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-244">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-244">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeBySystemTimeZoneId(valuetype System.DateTime dateTime, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTime * string -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTime, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-245">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-245">The date and time to convert.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="a8be6-246">変換先タイム ゾーンの ID。</span><span class="sxs-lookup"><span data-stu-id="a8be6-246">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="a8be6-247">ある時刻をタイム ゾーン ID に基づいて別のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-247">Converts a time to the time in another time zone based on the time zone's identifier.</span></span></summary>
        <returns><span data-ttu-id="a8be6-248">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-248">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-249">変換を実行すると、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> メソッドによって、`destinationTimeZoneId` タイムゾーンで有効になっている調整規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-249">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="a8be6-250">このオーバーロードは、<xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> メソッドの呼び出しとほぼ同じですが、オブジェクト参照ではなく、識別子によって変換先のタイムゾーンを指定できる点が異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-250">This overload is largely identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.</span></span> <span data-ttu-id="a8be6-251">このメソッドは、対応するタイムゾーンオブジェクトを取得せずに時刻を変換する必要があり、変換された時刻が標準と夏時間のどちらであるかを知る必要がない場合に最も役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-251">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="a8be6-252"><xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29> メソッドは、次の表に示すように、`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの値からソースタイムゾーンを決定します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-252">The <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%29> method determines the source time zone from the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-253">Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="a8be6-253">Kind property value</span></span>|<span data-ttu-id="a8be6-254">ソースタイムゾーン</span><span class="sxs-lookup"><span data-stu-id="a8be6-254">Source time zone</span></span>|<span data-ttu-id="a8be6-255">メソッドの動作</span><span class="sxs-lookup"><span data-stu-id="a8be6-255">Method behavior</span></span>|  
|-------------------------|----------------------|---------------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A>|<span data-ttu-id="a8be6-256">ローカル時刻を `destinationTimeZone`の時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-256">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Utc%2A>|<span data-ttu-id="a8be6-257">世界協定時刻 (UTC) を `destinationTimeZone`の時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-257">Converts Coordinated Universal Time (UTC) to the time in `destinationTimeZone`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a8be6-258"><xref:System.TimeZoneInfo.Local%2A>と想定されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-258">Assumed to be <xref:System.TimeZoneInfo.Local%2A>.</span></span>|<span data-ttu-id="a8be6-259">ローカル時刻を `destinationTimeZone`の時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-259">Converts the local time to the time in `destinationTimeZone`.</span></span>|  
  
 <span data-ttu-id="a8be6-260">返された <xref:System.DateTime> 値の <xref:System.DateTime.Kind%2A> プロパティは、次の表に示すように設定されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-260">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set as shown in the following table.</span></span>  
  
|<span data-ttu-id="a8be6-261">条件</span><span class="sxs-lookup"><span data-stu-id="a8be6-261">Condition</span></span>|<span data-ttu-id="a8be6-262">返された Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="a8be6-262">Returned Kind property value</span></span>|  
|---------------|----------------------------------|  
|<span data-ttu-id="a8be6-263">`destinationTimeZone` が `TimeZoneInfo.Utc.Id` です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-263">The `destinationTimeZone` is `TimeZoneInfo.Utc.Id`.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="a8be6-264">その他の `destinationTimeZone` 値。</span><span class="sxs-lookup"><span data-stu-id="a8be6-264">Any other `destinationTimeZone` value.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|  
  
 <span data-ttu-id="a8be6-265">`dateTime` パラメーターの値があいまいな現地時刻の場合、標準時として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-265">If the value of the `dateTime` parameter is an ambiguous local time, it is interpreted as a standard time.</span></span> <span data-ttu-id="a8be6-266">`dateTime` パラメーターが無効な現地時刻の場合、このメソッドは <xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-266">If the `dateTime` parameter is an invalid local time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a8be6-267">`dateTime` の変換によって <xref:System.DateTime.MaxValue?displayProperty=nameWithType>よりも <xref:System.DateTime.MinValue?displayProperty=nameWithType> 前の日付と時刻の値が返される場合、このメソッドは <xref:System.DateTime.MinValue?displayProperty=nameWithType> または <xref:System.DateTime.MaxValue?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-267">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 <span data-ttu-id="a8be6-268">このメソッドは、Windows システムのレジストリと Linux および macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)から、`destinationTimeZoneId` パラメーターで指定された識別子を持つタイムゾーンに関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-268">This method retrieves information on the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a8be6-269"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドを使用して作成されたタイムゾーンオブジェクトを取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-269">It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="a8be6-270">`destinationTimeZoneId` パラメーターは、タイムゾーンの長さの識別子と正確に対応している必要がありますが、一致と見なされるようにするには、大文字と小文字は区別されません。つまり、`destinationTimeZoneId` とタイムゾーン識別子の比較では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-270">The `destinationTimeZoneId` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-271"><paramref name="destinationTimeZoneId" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-271"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a8be6-272">タイム ゾーン ID が見つかりましたが、レジストリ データが壊れています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-272">The time zone identifier was found, but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a8be6-273">プロセスには、タイム ゾーン情報を格納するレジストリ キーからの読み取りに必要な権限がありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-273">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="a8be6-274"><paramref name="destinationTimeZoneId" /> ID がローカル システムで見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="a8be6-274">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-275">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-275">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ConvertTimeBySystemTimeZoneId (DateTimeOffset dateTimeOffset, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ConvertTimeBySystemTimeZoneId(valuetype System.DateTimeOffset dateTimeOffset, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ConvertTimeBySystemTimeZoneId(DateTimeOffset dateTimeOffset, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTimeOffset * string -&gt; DateTimeOffset" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTimeOffset, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a8be6-276">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-276">The date and time to convert.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="a8be6-277">変換先タイム ゾーンの ID。</span><span class="sxs-lookup"><span data-stu-id="a8be6-277">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="a8be6-278">ある時刻をタイム ゾーン ID に基づいて別のタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-278">Converts a time to the time in another time zone based on the time zone's identifier.</span></span></summary>
        <returns><span data-ttu-id="a8be6-279">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-279">The date and time in the destination time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-280">変換を実行すると、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> メソッドによって、`destinationTimeZoneId` タイムゾーンで有効になっている調整規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-280">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="a8be6-281">このオーバーロードは <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> メソッドを呼び出すことと同じですが、オブジェクト参照ではなく、識別子を使用して変換先のタイムゾーンを指定できる点が異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-281">This overload is identical to calling the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%29> method, except that it allows you to specify the destination time zone by its identifier rather than by an object reference.</span></span> <span data-ttu-id="a8be6-282">このメソッドは、対応するタイムゾーンオブジェクトを取得せずに時刻を変換する必要があり、変換された時刻が標準と夏時間のどちらであるかを知る必要がない場合に最も役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-282">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="a8be6-283">`dateTimeOffset` パラメーターは、世界協定時刻 (UTC) からの時刻のオフセットと共に日付と時刻を表しているので、あいまいな時刻と無効な時刻のどちらも表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-283">Because the `dateTimeOffset` parameter represents a date and time together with that time's offset from Coordinated Universal Time (UTC), it cannot represent either an ambiguous time or an invalid time.</span></span>  
  
 <span data-ttu-id="a8be6-284">このメソッドは、Windows システムのレジストリと Linux および macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)から、`destinationTimeZoneId` パラメーターで指定された識別子を持つタイムゾーンを取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-284">This method retrieves the time zone whose identifier is specified by the `destinationTimeZoneId` parameter from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a8be6-285"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドを使用して作成されたタイムゾーンオブジェクトを取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-285">It cannot retrieve a time zone object that is created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="a8be6-286">`destinationTimeZoneId` パラメーターは、タイムゾーンの長さの識別子と正確に対応している必要がありますが、一致と見なされるようにするには、大文字と小文字は区別されません。つまり、`destinationTimeZoneId` とタイムゾーン識別子の比較では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-286">The `destinationTimeZoneId` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `destinationTimeZoneId` with time zone identifiers is case-insensitive.</span></span>  
  
 <span data-ttu-id="a8be6-287">`dateTimeOffset` 値を変換先タイムゾーンの時刻に変換する場合、メソッドは、変換先タイムゾーンで有効になっている調整規則を考慮に入れます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-287">In converting the `dateTimeOffset` value to the time in the destination time zone, the method takes into account any adjustment rules in effect in the destination time zone.</span></span>  
  
 <span data-ttu-id="a8be6-288">`dateTimeOffset` の変換によって <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>よりも <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> 前の日付と時刻の値が返される場合、このメソッドは <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> または <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-288">If the conversion of `dateTimeOffset` results in a date and time value that is earlier than <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType> or <xref:System.DateTimeOffset.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-289"><paramref name="destinationTimeZoneId" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-289"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a8be6-290">タイム ゾーン ID が見つかりましたが、レジストリ データが壊れています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-290">The time zone identifier was found but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a8be6-291">プロセスには、タイム ゾーン情報を格納するレジストリ キーからの読み取りに必要な権限がありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-291">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="a8be6-292"><paramref name="destinationTimeZoneId" /> ID がローカル システムで見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="a8be6-292">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-293">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-293">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeBySystemTimeZoneId">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeBySystemTimeZoneId (DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeBySystemTimeZoneId(valuetype System.DateTime dateTime, string sourceTimeZoneId, string destinationTimeZoneId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeBySystemTimeZoneId(DateTime dateTime, System::String ^ sourceTimeZoneId, System::String ^ destinationTimeZoneId);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeBySystemTimeZoneId : DateTime * string * string -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId (dateTime, sourceTimeZoneId, destinationTimeZoneId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="sourceTimeZoneId" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="destinationTimeZoneId" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-294">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-294">The date and time to convert.</span></span></param>
        <param name="sourceTimeZoneId"><span data-ttu-id="a8be6-295">変換元タイム ゾーンの ID。</span><span class="sxs-lookup"><span data-stu-id="a8be6-295">The identifier of the source time zone.</span></span></param>
        <param name="destinationTimeZoneId"><span data-ttu-id="a8be6-296">変換先タイム ゾーンの ID。</span><span class="sxs-lookup"><span data-stu-id="a8be6-296">The identifier of the destination time zone.</span></span></param>
        <summary><span data-ttu-id="a8be6-297">あるタイム ゾーンの時刻を別のタイム ゾーンの時刻にタイム ゾーン ID に基づいて変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-297">Converts a time from one time zone to another based on time zone identifiers.</span></span></summary>
        <returns><span data-ttu-id="a8be6-298">変換元タイム ゾーンでの <paramref name="dateTime" /> パラメーターに対応する、変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-298">The date and time in the destination time zone that corresponds to the <paramref name="dateTime" /> parameter in the source time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-299">変換を実行すると、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> メソッドによって、`destinationTimeZoneId` タイムゾーンで有効になっている調整規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-299">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method applies any adjustment rules in effect in the `destinationTimeZoneId` time zone.</span></span>  
  
 <span data-ttu-id="a8be6-300"><xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> メソッドに似ていますが、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> を使用して、<xref:System.TimeZoneInfo> オブジェクトではなく識別子を使用して、ソースとターゲットのタイムゾーンを指定できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-300">Although it is similar to the <xref:System.TimeZoneInfo.ConvertTime%28System.DateTime%2CSystem.TimeZoneInfo%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method, you can use <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> to specify the source and destination time zones using their identifiers instead of their <xref:System.TimeZoneInfo> objects.</span></span> <span data-ttu-id="a8be6-301">このメソッドは、対応するタイムゾーンオブジェクトを取得せずに時刻を変換する必要があり、変換された時刻が標準と夏時間のどちらであるかを知る必要がない場合に最も役立ちます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-301">This method is most useful when you must convert a time without retrieving the time zone object that corresponds to it and you do not need to know whether the converted time is standard or daylight saving time.</span></span>  
  
 <span data-ttu-id="a8be6-302">このメソッドは、Windows システムのレジストリおよび Linux および macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)から、識別子が `sourceTimeZoneId` および `destinationTimeZoneId` パラメーターであるタイムゾーンを取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-302">This method retrieves the time zones whose identifiers are the `sourceTimeZoneId` and `destinationTimeZoneId` parameters from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a8be6-303"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドを使用して作成されたタイムゾーンオブジェクトを取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-303">It cannot retrieve time zone objects that are created using the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span>  
  
 <span data-ttu-id="a8be6-304">次の表に示すように、`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの値は、`sourceTimeZoneId` パラメーターに対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-304">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter must correspond to the `sourceTimeZoneId` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-305">DateTime. Kind 値</span><span class="sxs-lookup"><span data-stu-id="a8be6-305">DateTime.Kind value</span></span>|<span data-ttu-id="a8be6-306">sourceTimeZone 値</span><span class="sxs-lookup"><span data-stu-id="a8be6-306">sourceTimeZone value</span></span>|<span data-ttu-id="a8be6-307">メソッドの動作</span><span class="sxs-lookup"><span data-stu-id="a8be6-307">Method behavior</span></span>|  
|-------------------------|--------------------------|---------------------|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a8be6-308">が `TimeZoneInfo.Utc.Id`に等しい。</span><span class="sxs-lookup"><span data-stu-id="a8be6-308">Equals `TimeZoneInfo.Utc.Id`.</span></span>|<span data-ttu-id="a8be6-309">`dateTime` を変換先タイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-309">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a8be6-310">Does not equal `TimeZoneInfo.Utc.Id`です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-310">Does not equal `TimeZoneInfo.Utc.Id`.</span></span>|<span data-ttu-id="a8be6-311"><xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-311">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a8be6-312">が `TimeZoneInfo.Local.Id`に等しい。</span><span class="sxs-lookup"><span data-stu-id="a8be6-312">Equals `TimeZoneInfo.Local.Id`.</span></span>|<span data-ttu-id="a8be6-313">`dateTime` を変換先タイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-313">Converts `dateTime` to the destination time zone's time.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a8be6-314">Does not equal `TimeZoneInfo.Local.Id`です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-314">Does not equal `TimeZoneInfo.Local.Id`.</span></span>|<span data-ttu-id="a8be6-315"><xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-315">Throws an <xref:System.ArgumentException>.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a8be6-316">いつ.</span><span class="sxs-lookup"><span data-stu-id="a8be6-316">Any.</span></span>|<span data-ttu-id="a8be6-317">`dateTime` を変換先タイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-317">Converts `dateTime` to the destination time zone's time.</span></span>|  
  
 <span data-ttu-id="a8be6-318"><xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> メソッドは、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッドの呼び出しに依存しているため、`sourceTimeZoneId` と `destinationTimeZoneId`に対応するタイムゾーンを検索するために、大文字と小文字を区別しない検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-318">Because it relies on calls to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method, the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%2A> method performs a case-insensitive search to locate the time zones that correspond to `sourceTimeZoneId` and `destinationTimeZoneId`.</span></span>  
  
 <span data-ttu-id="a8be6-319">`dateTime` パラメーターの値がソースタイムゾーンのあいまいな時刻の場合、標準時として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-319">If the value of the `dateTime` parameter is an ambiguous time in the source time zone, it is interpreted as a standard time.</span></span> <span data-ttu-id="a8be6-320">`dateTime` パラメーターがソースタイムゾーンの無効な時刻の場合、このメソッドは <xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-320">If the `dateTime` parameter is an invalid time in the source time zone, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a8be6-321">返された <xref:System.DateTime> 値の <xref:System.DateTime.Kind%2A> プロパティは <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> に設定されます。ただし、変換先のタイムゾーンが世界協定時刻 (UTC) である場合は、<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>に設定されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-321">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless the destination time zone is Coordinated Universal Time (UTC), in which case it is set to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-322">次の例では、<xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> メソッドを使用して、世界の8都市でローカルシステム時刻に対応する時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-322">The following example uses the <xref:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId%28System.DateTime%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> method to display the time that corresponds to the local system time in eight cities of the world.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#3)]
 [!code-vb[System.TimeZone2.Conversions#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-323"><see cref="P:System.DateTime.Kind" /> パラメーターの <paramref name="dateTime" /> プロパティは変換元タイム ゾーンと対応していません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-323">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> parameter does not correspond to the source time zone.</span></span>  
  
<span data-ttu-id="a8be6-324">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-324">-or-</span></span> 
 <span data-ttu-id="a8be6-325"><paramref name="dateTime" /> はソース タイム ゾーンで無効な時間です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-325"><paramref name="dateTime" /> is an invalid time in the source time zone.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-326"><paramref name="sourceTimeZoneId" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-326"><paramref name="sourceTimeZoneId" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8be6-327">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-327">-or-</span></span> 
 <span data-ttu-id="a8be6-328"><paramref name="destinationTimeZoneId" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-328"><paramref name="destinationTimeZoneId" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a8be6-329">タイム ゾーン ID が見つかりましたが、レジストリ データが破損しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-329">The time zone identifiers were found, but the registry data is corrupted.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a8be6-330">ユーザーには、タイム ゾーン データが格納されているレジストリ キーからの読み取りに必要な権限がありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-330">The user does not have the permissions required to read from the registry keys that hold time zone data.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="a8be6-331"><paramref name="sourceTimeZoneId" /> ID がローカル システムで見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="a8be6-331">The <paramref name="sourceTimeZoneId" /> identifier was not found on the local system.</span></span>  
  
<span data-ttu-id="a8be6-332">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-332">-or-</span></span> 
<span data-ttu-id="a8be6-333"><paramref name="destinationTimeZoneId" /> ID がローカル システムで見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="a8be6-333">The <paramref name="destinationTimeZoneId" /> identifier was not found on the local system.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-334">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-334">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeFromUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeFromUtc (DateTime dateTime, TimeZoneInfo destinationTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeFromUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo destinationTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeFromUtc(DateTime dateTime, TimeZoneInfo ^ destinationTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeFromUtc : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeFromUtc (dateTime, destinationTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-335">世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a8be6-335">The Coordinated Universal Time (UTC).</span></span></param>
        <param name="destinationTimeZone"><span data-ttu-id="a8be6-336"><paramref name="dateTime" /> の変換先タイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-336">The time zone to convert <paramref name="dateTime" /> to.</span></span></param>
        <summary><span data-ttu-id="a8be6-337">世界協定時刻 (UTC) を、指定されたタイム ゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-337">Converts a Coordinated Universal Time (UTC) to the time in a specified time zone.</span></span></summary>
        <returns><span data-ttu-id="a8be6-338">変換先タイム ゾーンでの日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-338">The date and time in the destination time zone.</span></span> <span data-ttu-id="a8be6-339"><see cref="P:System.DateTime.Kind" /> が <see cref="F:System.DateTimeKind.Utc" /> の場合、<paramref name="destinationTimeZone" /> プロパティは <see cref="P:System.TimeZoneInfo.Utc" />。それ以外の場合、<see cref="P:System.DateTime.Kind" /> プロパティは <see cref="F:System.DateTimeKind.Unspecified" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-339">Its <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" /> if <paramref name="destinationTimeZone" /> is <see cref="P:System.TimeZoneInfo.Utc" />; otherwise, its <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-340">変換を実行すると、<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> メソッドによって、`destinationTimeZone` タイムゾーンで有効になっている調整規則が適用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-340">When performing the conversion, the <xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A> method applies any adjustment rules in effect in the `destinationTimeZone` time zone.</span></span>  
  
 <span data-ttu-id="a8be6-341">このメソッドの正確な動作は、次の表に示すように、`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの値によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-341">The precise behavior of this method depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-342">DateTime. Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="a8be6-342">DateTime.Kind property</span></span>|<span data-ttu-id="a8be6-343">変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-343">Conversion</span></span>|  
|----------------------------|----------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a8be6-344"><xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-344">Throws an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="a8be6-345"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> または <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a8be6-345"><xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="a8be6-346">世界協定時刻 (UTC) から変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-346">Converts from Coordinated Universal Time (UTC).</span></span>|  
  
 <span data-ttu-id="a8be6-347">`dateTime` の変換によって <xref:System.DateTime.MaxValue?displayProperty=nameWithType>よりも <xref:System.DateTime.MinValue?displayProperty=nameWithType> 前の日付と時刻の値が返される場合、このメソッドは <xref:System.DateTime.MinValue?displayProperty=nameWithType> または <xref:System.DateTime.MaxValue?displayProperty=nameWithType>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-347">If the conversion of `dateTime` results in a date and time value that is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later than <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue?displayProperty=nameWithType> or <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-348">次の例では、世界協定時刻 (UTC) を中部標準時に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-348">The following example converts Coordinated Universal Time (UTC) to Central Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Concepts#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Concepts/CS/TimeZone2Concepts.cs#8)]
 [!code-vb[System.TimeZone2.Concepts#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Concepts/VB/TimeZone2Concepts.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-349"><see cref="P:System.DateTime.Kind" /> の <paramref name="dateTime" /> プロパティが <see cref="F:System.DateTimeKind.Local" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-349">The <see cref="P:System.DateTime.Kind" /> property of <paramref name="dateTime" /> is <see cref="F:System.DateTimeKind.Local" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-350"><paramref name="destinationTimeZone" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-350"><paramref name="destinationTimeZone" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-351">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-351">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTimeToUtc">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-352">日付と時刻を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-352">Converts a date and time to Coordinated Universal Time (UTC).</span></span></summary>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-353">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-353">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTimeToUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeToUtc (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeToUtc(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeToUtc : DateTime -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeToUtc dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-354">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-354">The date and time to convert.</span></span></param>
        <summary><span data-ttu-id="a8be6-355">指定の日付と時刻を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-355">Converts the specified date and time to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="a8be6-356"><paramref name="dateTime" /> パラメーターに対応する世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a8be6-356">The Coordinated Universal Time (UTC) that corresponds to the <paramref name="dateTime" /> parameter.</span></span> <span data-ttu-id="a8be6-357"><see cref="T:System.DateTime" /> 値の <see cref="P:System.DateTime.Kind" /> プロパティは、常に <see cref="F:System.DateTimeKind.Utc" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-357">The <see cref="T:System.DateTime" /> value's <see cref="P:System.DateTime.Kind" /> property is always set to <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-358">実行される正確な変換は、次の表に示すように、`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの値によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-358">The exact conversion performed depends on the value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-359">DateTime. Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="a8be6-359">DateTime.Kind property</span></span>|<span data-ttu-id="a8be6-360">変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-360">Conversion</span></span>|  
|----------------------------|----------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a8be6-361">現地時刻から世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-361">Converts from local time to Coordinated Universal Time (UTC).</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a8be6-362">は現地時刻であり、現地時刻から UTC に変換される `dateTime` を想定しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-362">Assumes `dateTime` is local time and converts from local time to UTC.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a8be6-363">`dateTime` を変更せずに返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-363">Returns `dateTime` unchanged.</span></span>|  
  
 <span data-ttu-id="a8be6-364">`dateTime` があいまいな現地時刻に対応する場合、このメソッドは標準の現地時刻であると想定します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-364">If `dateTime` corresponds to an ambiguous local time, this method assumes that it is standard local time.</span></span> <span data-ttu-id="a8be6-365">`dateTime` が無効な現地時刻に対応する場合、メソッドは <xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-365">If `dateTime` corresponds to an invalid local time, the method throws an <xref:System.ArgumentException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8be6-366">現在のコンピューターのローカルタイムゾーンに複数の調整規則が含まれている場合、<xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> メソッドのこのオーバーロードは、<xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> メソッドと <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> メソッドとは異なる結果を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-366">If the current computer's local time zone includes multiple adjustment rules, this overload of the <xref:System.TimeZoneInfo.ConvertTimeToUtc%2A> method can return results that differ from the <xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> and <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="a8be6-367"><xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> は、`dateTime` がその日付範囲内にあるかどうかにかかわらず、常に現在の調整規則をタイムゾーンの変換に適用します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-367"><xref:System.TimeZone.ToUniversalTime%2A?displayProperty=nameWithType> always applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.</span></span> <span data-ttu-id="a8be6-368">また、[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]で実行する場合、<xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> の日付範囲内に `dateTime` かどうかにかかわらず、現在の調整規則をタイムゾーンの変換にも適用します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-368">And when executing on [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)], <xref:System.DateTime.ToUniversalTime%2A?displayProperty=nameWithType> also applies the current adjustment rule to time zone conversion, whether or not `dateTime` lies within its date range.</span></span>  
  
 <span data-ttu-id="a8be6-369">`dateTime` に対応する UTC が <xref:System.DateTime.MinValue?displayProperty=nameWithType> 以降の <xref:System.DateTime.MaxValue?displayProperty=nameWithType>よりも前の場合、このメソッドは <xref:System.DateTime.MinValue> または <xref:System.DateTime.MaxValue>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-369">If the UTC equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later that <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-370">次の例は、<xref:System.DateTime.Kind%2A> プロパティがそれぞれ <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>、<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、および <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>である時間値の変換を示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-370">The following example illustrates the conversion of time values whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, and <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, respectively.</span></span> <span data-ttu-id="a8be6-371">また、あいまいな時刻と無効な時刻の変換についても説明します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-371">It also illustrates the conversion of ambiguous and invalid times.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/System.TimeZone2.Conversions.cs#1)]
 [!code-vb[System.TimeZone2.Conversions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/System.TimeZone2.Conversions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-372"><see langword="TimeZoneInfo.Local.IsInvalidDateTime(" />
          <paramref name="dateTime" />
          <see langword=")" /> は <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-372"><see langword="TimeZoneInfo.Local.IsInvalidDateTime(" />
          <paramref name="dateTime" />
          <see langword=")" /> returns <see langword="true" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-373">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-373">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConvertTimeToUtc">
      <MemberSignature Language="C#" Value="public static DateTime ConvertTimeToUtc (DateTime dateTime, TimeZoneInfo sourceTimeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ConvertTimeToUtc(valuetype System.DateTime dateTime, class System.TimeZoneInfo sourceTimeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ConvertTimeToUtc(DateTime dateTime, TimeZoneInfo ^ sourceTimeZone);" />
      <MemberSignature Language="F#" Value="static member ConvertTimeToUtc : DateTime * TimeZoneInfo -&gt; DateTime" Usage="System.TimeZoneInfo.ConvertTimeToUtc (dateTime, sourceTimeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-374">変換する日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-374">The date and time to convert.</span></span></param>
        <param name="sourceTimeZone"><span data-ttu-id="a8be6-375"><paramref name="dateTime" /> のタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-375">The time zone of <paramref name="dateTime" />.</span></span></param>
        <summary><span data-ttu-id="a8be6-376">指定されたタイム ゾーンの時刻を世界協定時刻 (UTC) に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-376">Converts the time in a specified time zone to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="a8be6-377"><paramref name="dateTime" /> パラメーターに対応する世界協定時刻 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="a8be6-377">The Coordinated Universal Time (UTC) that corresponds to the <paramref name="dateTime" /> parameter.</span></span> <span data-ttu-id="a8be6-378"><see cref="T:System.DateTime" /> オブジェクトの <see cref="P:System.DateTime.Kind" /> プロパティは、常に <see cref="F:System.DateTimeKind.Utc" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-378">The <see cref="T:System.DateTime" /> object's <see cref="P:System.DateTime.Kind" /> property is always set to <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-379">`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティが <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> で、`sourceTimeZone` パラメーターが <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>と等しい場合、このメソッドは変換を実行せずに `dateTime` を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-379">If the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter equals <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> and the `sourceTimeZone` parameter equals <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>, this method returns `dateTime` without performing any conversion.</span></span>  
  
 <span data-ttu-id="a8be6-380">`dateTime` があいまいな時刻に対応する場合、このメソッドは、ソースタイムゾーンの標準時刻であると想定します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-380">If `dateTime` corresponds to an ambiguous time, this method assumes that it is the standard time of the source time zone.</span></span> <span data-ttu-id="a8be6-381">`dateTime` が無効な時刻に対応する場合、このメソッドは <xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-381">If `dateTime` corresponds to an invalid time, this method throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="a8be6-382">`dateTime` に対応する世界協定時刻 (UTC) が、<xref:System.DateTime.MaxValue?displayProperty=nameWithType><xref:System.DateTime.MinValue?displayProperty=nameWithType> 以降よりも前の場合、このメソッドは <xref:System.DateTime.MinValue> または <xref:System.DateTime.MaxValue>をそれぞれ返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-382">If the Coordinated Universal Time (UTC) equivalent of `dateTime` is earlier than <xref:System.DateTime.MinValue?displayProperty=nameWithType> or later that <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, this method returns <xref:System.DateTime.MinValue> or <xref:System.DateTime.MaxValue>, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-383">次の例では、ローカルシステムから現在の日付を取得し、世界協定時刻 (UTC) に変換した後、東京標準時に変換し、最後に東京標準時から UTC に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-383">The following example retrieves the current date from the local system and converts it to Coordinated Universal Time (UTC), then converts it to Tokyo Standard Time, and finally converts from Tokyo Standard Time back to UTC.</span></span> <span data-ttu-id="a8be6-384">2つの UTC 時刻は同じであることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-384">Note that the two UTC times are identical.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]
 [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-385"><paramref name="dateTime" />.<see langword="Kind" /></span><span class="sxs-lookup"><span data-stu-id="a8be6-385"><paramref name="dateTime" />.<see langword="Kind" /></span></span> <span data-ttu-id="a8be6-386">は <see cref="F:System.DateTimeKind.Utc" /> であり、<paramref name="sourceTimeZone" /> は <see cref="P:System.TimeZoneInfo.Utc" /> と一致しません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-386">is <see cref="F:System.DateTimeKind.Utc" /> and <paramref name="sourceTimeZone" /> does not equal <see cref="P:System.TimeZoneInfo.Utc" />.</span></span>  
  
<span data-ttu-id="a8be6-387">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-387">-or-</span></span> 
 <span data-ttu-id="a8be6-388"><paramref name="dateTime" />.<see langword="Kind" /></span><span class="sxs-lookup"><span data-stu-id="a8be6-388"><paramref name="dateTime" />.<see langword="Kind" /></span></span> <span data-ttu-id="a8be6-389">は <see cref="F:System.DateTimeKind.Local" /> であり、<paramref name="sourceTimeZone" /> は <see cref="P:System.TimeZoneInfo.Local" /> と一致しません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-389">is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="sourceTimeZone" /> does not equal <see cref="P:System.TimeZoneInfo.Local" />.</span></span>  
  
<span data-ttu-id="a8be6-390">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-390">-or-</span></span> 
 <span data-ttu-id="a8be6-391"><paramref name="sourceTimeZone" /><see langword=".IsInvalidDateTime(" /><paramref name="dateTime" /><see langword=")" /> は <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-391"><paramref name="sourceTimeZone" /><see langword=".IsInvalidDateTime(" /><paramref name="dateTime" /><see langword=")" /> returns <see langword="true" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-392"><paramref name="sourceTimeZone" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-392"><paramref name="sourceTimeZone" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/converting-between-time-zones.md"><span data-ttu-id="a8be6-393">タイム ゾーン間での時刻の変換</span><span class="sxs-lookup"><span data-stu-id="a8be6-393">Converting Times Between Time Zones</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateCustomTimeZone">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-394">ローカル コンピューターにないタイム ゾーンを定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-394">Defines a time zone that is not found on the local computer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="a8be6-395">タイム ゾーン ID。</span><span class="sxs-lookup"><span data-stu-id="a8be6-395">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="a8be6-396">このタイム ゾーンの標準時と世界協定時刻 (UTC) との時差を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-396">An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="a8be6-397">新しいタイム ゾーンの表示名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-397">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="a8be6-398">新しいタイム ゾーンの標準時名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-398">The name of the new time zone's standard time.</span></span></param>
        <summary><span data-ttu-id="a8be6-399">指定された ID、世界協定時刻 (UTC) からのオフセット、表示名、および標準時の表示名を使用して、カスタム タイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-399">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, and a standard time display name.</span></span></summary>
        <returns><span data-ttu-id="a8be6-400">新しいタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-400">The new time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-401"><xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> メソッドのこのオーバーロードは、調整のないタイムゾーン (つまり、夏時間をサポートしていないタイムゾーン) を作成するのに適しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-401">This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29> method is suitable for creating a time zone that has no adjustments (that is, a time zone that does not support daylight saving time).</span></span> <span data-ttu-id="a8be6-402">夏時間の調整を含むタイムゾーンを定義するには、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> または <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> のいずれかの方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-402">To define a time zone that includes adjustments for daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a8be6-403">次の表は、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> メソッドに提供されるパラメーターと、メソッド呼び出しによって返される <xref:System.TimeZoneInfo> オブジェクトのプロパティとの間の関係を示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-403">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the properties of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="a8be6-404">CreateCustomTimeZone パラメーター</span><span class="sxs-lookup"><span data-stu-id="a8be6-404">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="a8be6-405">TimeZoneInfo プロパティ</span><span class="sxs-lookup"><span data-stu-id="a8be6-405">TimeZoneInfo property</span></span>|  
|------------------------------------|---------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
  
 <span data-ttu-id="a8be6-406">通常、タイムゾーンの標準時名とその識別子は同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-406">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="a8be6-407">ただし、タイムゾーンの識別子の長さは32文字を超えないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-407">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="a8be6-408">`displayName` パラメーターに渡された文字列は、かなり標準的な形式に従います。</span><span class="sxs-lookup"><span data-stu-id="a8be6-408">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="a8be6-409">表示名の最初の部分は、協定世界時からのタイムゾーンのベースオフセットです。これは、かっこで囲まれた GMT (グリニッジ標準時) で表されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-409">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="a8be6-410">この後には、タイムゾーン自体、またはタイムゾーン内の1つ以上の都市、地域、または国を識別する文字列、またはその両方が続きます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-410">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="a8be6-411">例:</span><span class="sxs-lookup"><span data-stu-id="a8be6-411">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-412">次の例では、南極の Mawson および Holme Bay 領域のカスタムタイムゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-412">The following example creates a custom time zone for the Mawson and Holme Bay regions of Antarctica.</span></span> <span data-ttu-id="a8be6-413">次に、現地時刻を新しいタイムゾーンの時刻に変換した結果が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-413">It then displays the result of converting the local time to the time in the new time zone.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#1)]
 [!code-vb[System.TimeZone2.CreateTimeZone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-414"><paramref name="id" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-414">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-415"><paramref name="id" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-415">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="a8be6-416">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-416">-or-</span></span> 
<span data-ttu-id="a8be6-417"><paramref name="baseUtcOffset" /> パラメーターが、分を表す整数値ではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-417">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8be6-418"><paramref name="baseUtcOffset" /> パラメーターが 14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-418">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md"><span data-ttu-id="a8be6-419">方法 : 調整規則のないタイム ゾーンを作成する</span><span class="sxs-lookup"><span data-stu-id="a8be6-419">How to: Create Time Zones Without Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String, daylightDisplayName As String, adjustmentRules As TimeZoneInfo.AdjustmentRule()) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName, System::String ^ daylightDisplayName, cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ adjustmentRules);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string * string * TimeZoneInfo.AdjustmentRule[] -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="daylightDisplayName" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="a8be6-420">タイム ゾーン ID。</span><span class="sxs-lookup"><span data-stu-id="a8be6-420">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="a8be6-421">このタイム ゾーンの標準時と世界協定時刻 (UTC) との時差を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-421">An object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="a8be6-422">新しいタイム ゾーンの表示名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-422">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="a8be6-423">新しいタイム ゾーンの標準時名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-423">The new time zone's standard time name.</span></span></param>
        <param name="daylightDisplayName"><span data-ttu-id="a8be6-424">新しいタイム ゾーンの夏時間名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-424">The daylight saving time name of the new time zone.</span></span></param>
        <param name="adjustmentRules"><span data-ttu-id="a8be6-425">特定の期間のベース UTC オフセットを増やす配列。</span><span class="sxs-lookup"><span data-stu-id="a8be6-425">An array that augments the base UTC offset for a particular period.</span></span></param>
        <summary><span data-ttu-id="a8be6-426">指定された ID、世界協定時刻 (UTC) からのオフセット、表示名、標準時名、夏時間名、および夏時間規則を使用して、カスタム タイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-426">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, and daylight saving time rules.</span></span></summary>
        <returns><span data-ttu-id="a8be6-427">新しいタイム ゾーンを表す <see cref="T:System.TimeZoneInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-427">A <see cref="T:System.TimeZoneInfo" /> object that represents the new time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-428"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> メソッドのこのオーバーロードは、夏時間をサポートするタイムゾーンを作成するのに適しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-428">This overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method is suitable for creating a time zone that supports daylight saving time.</span></span> <span data-ttu-id="a8be6-429">夏時間をサポートしていないタイムゾーンを定義するには、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> または <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> のいずれかの方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-429">To define a time zone that does not support daylight saving time, use either the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="a8be6-430">次の表は、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> メソッドに提供されるパラメーターと、メソッド呼び出しによって返される <xref:System.TimeZoneInfo> オブジェクトのメンバーとの関係を示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-430">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="a8be6-431">CreateCustomTimeZone パラメーター</span><span class="sxs-lookup"><span data-stu-id="a8be6-431">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="a8be6-432">TimeZoneInfo メンバー</span><span class="sxs-lookup"><span data-stu-id="a8be6-432">TimeZoneInfo member</span></span>|  
|------------------------------------|-------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
|`daylightDisplayName`|<xref:System.TimeZoneInfo.DaylightName%2A>|  
|`adjustmentRules`|<span data-ttu-id="a8be6-433"><xref:System.TimeZoneInfo.GetAdjustmentRules%2A> メソッドによって返される <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="a8be6-433">An array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method.</span></span>|  
  
 <span data-ttu-id="a8be6-434">通常、タイムゾーンの標準時名とその識別子は同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-434">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="a8be6-435">ただし、タイムゾーンの識別子の長さは32文字を超えないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-435">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="a8be6-436">`displayName` パラメーターに渡された文字列は、かなり標準的な形式に従います。</span><span class="sxs-lookup"><span data-stu-id="a8be6-436">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="a8be6-437">表示名の最初の部分は、協定世界時からのタイムゾーンのベースオフセットです。これは、かっこで囲まれた GMT (グリニッジ標準時) で表されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-437">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="a8be6-438">この後には、タイムゾーン自体、またはタイムゾーン内の1つ以上の都市、地域、または国を識別する文字列、またはその両方が続きます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-438">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="a8be6-439">例:</span><span class="sxs-lookup"><span data-stu-id="a8be6-439">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
 <span data-ttu-id="a8be6-440">`baseUtcOffset` パラメーターは、すべてのタイムゾーンの調整規則について、世界協定時刻 (UTC) からのカスタムタイムゾーンのオフセットを定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-440">The `baseUtcOffset` parameter defines the custom time zone's offset from Coordinated Universal Time (UTC) for all of the time zone's adjustment rules.</span></span> <span data-ttu-id="a8be6-441">言い換えると、<xref:System.TimeZoneInfo> オブジェクトモデルは、タイムゾーンの UTC からのオフセットがタイムゾーンの有効期間全体にわたって一定であると想定し、特定の調整規則とは独立して存在します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-441">In other words, the <xref:System.TimeZoneInfo> object model assumes that the time zone's offset from UTC is constant throughout the life of the time zone, and exists independent of particular adjustment rules.</span></span> <span data-ttu-id="a8be6-442">UTC からのオフセットを変更したタイムゾーンを反映するには、新しいタイムゾーンオブジェクトを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-442">To reflect a time zone that has changed its offset from UTC, you must create a new time zone object.</span></span>  
  
 <span data-ttu-id="a8be6-443">タイムゾーンの調整規則を定義するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-443">A time zone's adjustment rules are defined by doing the following:</span></span>  
  
1.  <span data-ttu-id="a8be6-444"><xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> または <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> のいずれかのメソッドを呼び出して、各調整規則の開始と終了の切り替え時間を定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-444">Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition time for each adjustment rule.</span></span>  
  
2.  <span data-ttu-id="a8be6-445">各調整規則に対して <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-445">Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.</span></span>  
  
3.  <span data-ttu-id="a8be6-446">`adjustmentRules` パラメーターとして渡すことができる配列に調整規則を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-446">Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-447">次の例では、南極に、パーマー局および Anvers 島のカスタムタイムゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-447">The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica.</span></span> <span data-ttu-id="a8be6-448">次に、現地時刻を新しいタイムゾーンの時刻に変換し、結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-448">It then converts the local time to the time in the new time zone and displays the result.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#2)]
 [!code-vb[System.TimeZone2.CreateTimeZone#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-449"><paramref name="id" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-449">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-450"><paramref name="id" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-450">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="a8be6-451">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-451">-or-</span></span> 
<span data-ttu-id="a8be6-452"><paramref name="baseUtcOffset" /> パラメーターが、分を表す整数値ではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-452">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8be6-453"><paramref name="baseUtcOffset" /> パラメーターが 14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-453">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a8be6-454"><paramref name="adjustmentRules" /> パラメーターに指定された調整規則が重複しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-454">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter overlap.</span></span>  
  
<span data-ttu-id="a8be6-455">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-455">-or-</span></span> 
<span data-ttu-id="a8be6-456"><paramref name="adjustmentRules" /> パラメーターに指定された調整規則が時系列順ではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-456">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter are not in chronological order.</span></span>  
  
<span data-ttu-id="a8be6-457">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-457">-or-</span></span> 
<span data-ttu-id="a8be6-458"><paramref name="adjustmentRules" /> の 1 つ以上の要素が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-458">One or more elements in <paramref name="adjustmentRules" /> are <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8be6-459">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-459">-or-</span></span> 
<span data-ttu-id="a8be6-460">複数の調整規則を適用できる日付があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-460">A date can have multiple adjustment rules applied to it.</span></span>  
  
<span data-ttu-id="a8be6-461">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-461">-or-</span></span> 
<span data-ttu-id="a8be6-462"><paramref name="baseUtcOffset" /> パラメーターと、<see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 配列内にある 1 つ以上のオブジェクトの <paramref name="adjustmentRules" /> 値の合計が、14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-462">The sum of the <paramref name="baseUtcOffset" /> parameter and the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> value of one or more objects in the <paramref name="adjustmentRules" /> array is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md"><span data-ttu-id="a8be6-463">方法 : 調整規則のあるタイム ゾーンを作成する</span><span class="sxs-lookup"><span data-stu-id="a8be6-463">How to: Create Time Zones with Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateCustomTimeZone">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo CreateCustomTimeZone (string id, TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, TimeZoneInfo.AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo CreateCustomTimeZone(string id, valuetype System.TimeSpan baseUtcOffset, string displayName, string standardDisplayName, string daylightDisplayName, class System.TimeZoneInfo/AdjustmentRule[] adjustmentRules, bool disableDaylightSavingTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCustomTimeZone (id As String, baseUtcOffset As TimeSpan, displayName As String, standardDisplayName As String, daylightDisplayName As String, adjustmentRules As TimeZoneInfo.AdjustmentRule(), disableDaylightSavingTime As Boolean) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ CreateCustomTimeZone(System::String ^ id, TimeSpan baseUtcOffset, System::String ^ displayName, System::String ^ standardDisplayName, System::String ^ daylightDisplayName, cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ adjustmentRules, bool disableDaylightSavingTime);" />
      <MemberSignature Language="F#" Value="static member CreateCustomTimeZone : string * TimeSpan * string * string * string * TimeZoneInfo.AdjustmentRule[] * bool -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.CreateCustomTimeZone (id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules, disableDaylightSavingTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="baseUtcOffset" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="displayName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="standardDisplayName" Type="System.String" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="daylightDisplayName" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="disableDaylightSavingTime" Type="System.Boolean" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="a8be6-464">タイム ゾーン ID。</span><span class="sxs-lookup"><span data-stu-id="a8be6-464">The time zone's identifier.</span></span></param>
        <param name="baseUtcOffset"><span data-ttu-id="a8be6-465">現在のタイム ゾーンの標準時と世界協定時刻 (UTC) との時差を表す <see cref="T:System.TimeSpan" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-465">A <see cref="T:System.TimeSpan" /> object that represents the time difference between this time zone and Coordinated Universal Time (UTC).</span></span></param>
        <param name="displayName"><span data-ttu-id="a8be6-466">新しいタイム ゾーンの表示名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-466">The display name of the new time zone.</span></span></param>
        <param name="standardDisplayName"><span data-ttu-id="a8be6-467">新しいタイム ゾーンの標準時名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-467">The standard time name of the new time zone.</span></span></param>
        <param name="daylightDisplayName"><span data-ttu-id="a8be6-468">新しいタイム ゾーンの夏時間名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-468">The daylight saving time name of the new time zone.</span></span></param>
        <param name="adjustmentRules"><span data-ttu-id="a8be6-469">特定の期間のベース UTC オフセットを増やす <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="a8be6-469">An array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects that augment the base UTC offset for a particular period.</span></span></param>
        <param name="disableDaylightSavingTime"><span data-ttu-id="a8be6-470">新しいオブジェクトの <see langword="true" /> に含まれている夏時間関連の情報をすべて破棄する場合は <paramref name="adjustmentRules" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-470"><see langword="true" /> to discard any daylight saving time-related information present in <paramref name="adjustmentRules" /> with the new object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a8be6-471">指定された ID、世界協定時刻 (UTC) からのオフセット、表示名、標準時名、夏時間名、夏時間規則、および返されるオブジェクトに夏時間情報を反映するかどうかを示す値を使用して、カスタム タイム ゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-471">Creates a custom time zone with a specified identifier, an offset from Coordinated Universal Time (UTC), a display name, a standard time name, a daylight saving time name, daylight saving time rules, and a value that indicates whether the returned object reflects daylight saving time information.</span></span></summary>
        <returns><span data-ttu-id="a8be6-472">新しいタイム ゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-472">The new time zone.</span></span> <span data-ttu-id="a8be6-473"><paramref name="disableDaylightSavingTime" /> パラメーターが <see langword="true" /> の場合、返されるオブジェクトに夏時間データはありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-473">If the <paramref name="disableDaylightSavingTime" /> parameter is <see langword="true" />, the returned object has no daylight saving time data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-474"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> メソッドのこのオーバーロードを使用して、実行時の条件によって夏時間をサポートするカスタムタイムゾーンを作成できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-474">You can use this overload of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method to create a custom time zone whose support for daylight saving time can be determined by conditions at run time.</span></span>  
  
 <span data-ttu-id="a8be6-475">次の表は、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> メソッドに提供されるパラメーターと、メソッド呼び出しによって返される <xref:System.TimeZoneInfo> オブジェクトのメンバーとの関係を示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-475">The following table shows the relationship between the parameters that are provided to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method and the members of the <xref:System.TimeZoneInfo> object that are returned by the method call.</span></span>  
  
|<span data-ttu-id="a8be6-476">CreateCustomTimeZone パラメーター</span><span class="sxs-lookup"><span data-stu-id="a8be6-476">CreateCustomTimeZone parameter</span></span>|<span data-ttu-id="a8be6-477">TimeZoneInfo プロパティ</span><span class="sxs-lookup"><span data-stu-id="a8be6-477">TimeZoneInfo property</span></span>|  
|------------------------------------|---------------------------|  
|`id`|<xref:System.TimeZoneInfo.Id%2A>|  
|`baseUtcOffset`|<xref:System.TimeZoneInfo.BaseUtcOffset%2A>|  
|`displayName`|<xref:System.TimeZoneInfo.DisplayName%2A>|  
|`standardDisplayName`|<xref:System.TimeZoneInfo.StandardName%2A>|  
|`daylightDisplayName`|<span data-ttu-id="a8be6-478">`disableDaylightSavingTime` が `false`場合に <xref:System.TimeZoneInfo.DaylightName%2A> します。`disableDaylightSavingTime` が `true`場合は <xref:System.String.Empty?displayProperty=nameWithType> します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-478"><xref:System.TimeZoneInfo.DaylightName%2A> if `disableDaylightSavingTime` is `false`; <xref:System.String.Empty?displayProperty=nameWithType> if `disableDaylightSavingTime` is `true`.</span></span>|  
|`adjustmentRules`|<span data-ttu-id="a8be6-479">`disableDaylightSavingTime` が `false`の場合に <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> メソッドによって返される <xref:System.TimeZoneInfo.AdjustmentRule> オブジェクトの配列。`disableDaylightSavingTime` が `true`場合は、<xref:System.TimeZoneInfo.GetAdjustmentRules%2A> メソッドによって返される空の配列。</span><span class="sxs-lookup"><span data-stu-id="a8be6-479">An array of <xref:System.TimeZoneInfo.AdjustmentRule> objects returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `false`; an empty array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method if `disableDaylightSavingTime` is `true`.</span></span>|  
|`disableDaylightSavingTime`|<span data-ttu-id="a8be6-480"><xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>ません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-480">Not <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A>.</span></span>|  
  
 <span data-ttu-id="a8be6-481">通常、タイムゾーンの標準時名とその識別子は同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-481">Typically, the time zone's standard time name and its identifier are the same.</span></span> <span data-ttu-id="a8be6-482">ただし、タイムゾーンの識別子の長さは32文字を超えないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-482">However, the length of the time zone's identifier should not exceed 32 characters.</span></span> <span data-ttu-id="a8be6-483">`displayName` パラメーターに渡された文字列は、かなり標準的な形式に従います。</span><span class="sxs-lookup"><span data-stu-id="a8be6-483">The string passed to the `displayName` parameter follows a fairly standard format.</span></span> <span data-ttu-id="a8be6-484">表示名の最初の部分は、協定世界時からのタイムゾーンのベースオフセットです。これは、かっこで囲まれた GMT (グリニッジ標準時) で表されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-484">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="a8be6-485">この後には、タイムゾーン自体、またはタイムゾーン内の1つ以上の都市、地域、または国を識別する文字列、またはその両方が続きます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-485">This is followed by a string that identifies the time zone itself, or one or more of the cities, regions, or countries in the time zone, or both.</span></span> <span data-ttu-id="a8be6-486">例:</span><span class="sxs-lookup"><span data-stu-id="a8be6-486">For example:</span></span>  
  
```  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
 <span data-ttu-id="a8be6-487">タイムゾーンの調整規則を定義するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-487">A time zone's adjustment rules are defined by doing the following:</span></span>  
  
1.  <span data-ttu-id="a8be6-488"><xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> または <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> のいずれかのメソッドを呼び出して、各調整規則の開始および終了の遷移規則を定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-488">Calling either the <xref:System.TimeZoneInfo.TransitionTime.CreateFloatingDateRule%2A> or the <xref:System.TimeZoneInfo.TransitionTime.CreateFixedDateRule%2A> method to define the starting and ending transition rules for each adjustment rule.</span></span>  
  
2.  <span data-ttu-id="a8be6-489">各調整規則に対して <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-489">Calling the <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> method for each adjustment rule.</span></span>  
  
3.  <span data-ttu-id="a8be6-490">`adjustmentRules` パラメーターとして渡すことができる配列に調整規則を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-490">Assigning the adjustment rules to an array that can be passed as the `adjustmentRules` parameter.</span></span>  
  
 <span data-ttu-id="a8be6-491">`disableDaylightSavingTime` パラメーターが `false`の場合、このメソッドの操作は <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> オーバーロードと同じになります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-491">If `disableDaylightSavingTime` parameter is `false`, the operation of this method is identical to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="a8be6-492">`disableDaylightSavingTime` が `true`場合、返されるオブジェクトには、調整規則と、値が空の文字列である <xref:System.TimeZoneInfo.DaylightName%2A> プロパティは含まれません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-492">If `disableDaylightSavingTime` is `true`, the returned object includes no adjustment rules and a <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is an empty string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-493">次の例では、南極に、パーマー局および Anvers 島のカスタムタイムゾーンを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-493">The following example creates a custom time zone for the Palmer station and Anvers Island in Antarctica.</span></span> <span data-ttu-id="a8be6-494"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> メソッドの呼び出しで `disableDaylightSavingTime` パラメーターを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-494">It sets the `disableDaylightSavingTime` parameter in the call to the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> method to `true`.</span></span> <span data-ttu-id="a8be6-495">次に、新しいタイムゾーンの夏時間名 (存在する場合) と、新しいタイムゾーンに夏時間情報がないことを確認する調整規則の数を表示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-495">It then displays the new time zone's daylight saving time name, if one is present, and the number of adjustment rules to confirm that the new time zone has no daylight saving time information.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#3)]
 [!code-vb[System.TimeZone2.CreateTimeZone#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-496"><paramref name="id" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-496">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-497"><paramref name="id" /> パラメーターが空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-497">The <paramref name="id" /> parameter is an empty string ("").</span></span>  
  
<span data-ttu-id="a8be6-498">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-498">-or-</span></span> 
<span data-ttu-id="a8be6-499"><paramref name="baseUtcOffset" /> パラメーターが、分を表す整数値ではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-499">The <paramref name="baseUtcOffset" /> parameter does not represent a whole number of minutes.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8be6-500"><paramref name="baseUtcOffset" /> パラメーターが 14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-500">The <paramref name="baseUtcOffset" /> parameter is greater than 14 hours or less than -14 hours.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a8be6-501"><paramref name="adjustmentRules" /> パラメーターに指定された調整規則が重複しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-501">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter overlap.</span></span>  
  
<span data-ttu-id="a8be6-502">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-502">-or-</span></span> 
<span data-ttu-id="a8be6-503"><paramref name="adjustmentRules" /> パラメーターに指定された調整規則が時系列順ではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-503">The adjustment rules specified in the <paramref name="adjustmentRules" /> parameter are not in chronological order.</span></span>  
  
<span data-ttu-id="a8be6-504">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-504">-or-</span></span> 
<span data-ttu-id="a8be6-505"><paramref name="adjustmentRules" /> の 1 つ以上の要素が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-505">One or more elements in <paramref name="adjustmentRules" /> are <see langword="null" />.</span></span>  
  
<span data-ttu-id="a8be6-506">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-506">-or-</span></span> 
<span data-ttu-id="a8be6-507">複数の調整規則を適用できる日付があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-507">A date can have multiple adjustment rules applied to it.</span></span>  
  
<span data-ttu-id="a8be6-508">または</span><span class="sxs-lookup"><span data-stu-id="a8be6-508">-or-</span></span> 
<span data-ttu-id="a8be6-509"><paramref name="baseUtcOffset" /> パラメーターと、<see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> 配列内にある 1 つ以上のオブジェクトの <paramref name="adjustmentRules" /> 値の合計が、14 時間を上回っているか、-14 時間を下回っています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-509">The sum of the <paramref name="baseUtcOffset" /> parameter and the <see cref="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" /> value of one or more objects in the <paramref name="adjustmentRules" /> array is greater than 14 hours or less than -14 hours.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md"><span data-ttu-id="a8be6-510">方法 : 調整規則のないタイム ゾーンを作成する</span><span class="sxs-lookup"><span data-stu-id="a8be6-510">How to: Create Time Zones Without Adjustment Rules</span></span></related>
        <related type="Article" href="~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md"><span data-ttu-id="a8be6-511">方法 : 調整規則のあるタイム ゾーンを作成する</span><span class="sxs-lookup"><span data-stu-id="a8be6-511">How to: Create Time Zones with Adjustment Rules</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DaylightName">
      <MemberSignature Language="C#" Value="public string DaylightName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DaylightName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.DaylightName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DaylightName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightName : string" Usage="System.TimeZoneInfo.DaylightName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8be6-512">現在のタイム ゾーンの夏時間の表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-512">Gets the display name for the current time zone's daylight saving time.</span></span></summary>
        <value><span data-ttu-id="a8be6-513">タイム ゾーンの夏時間の表示名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-513">The display name for the time zone's daylight saving time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-514">表示名は、Windows オペレーティングシステムと共にインストールされたカルチャに基づいてローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-514">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="a8be6-515">値が <xref:System.String.Empty?displayProperty=nameWithType> または `null` ではない <xref:System.TimeZoneInfo.DaylightName%2A> プロパティは、必ずしもタイムゾーンが夏時間をサポートしていることを示しているわけではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-515">A <xref:System.TimeZoneInfo.DaylightName%2A> property whose value is not <xref:System.String.Empty?displayProperty=nameWithType> or `null` does not necessarily indicate that the time zone supports daylight saving time.</span></span> <span data-ttu-id="a8be6-516">タイムゾーンで夏時間がサポートされているかどうかを確認するには、<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> プロパティの値を確認します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-516">To determine whether the time zone supports daylight saving time, check the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 <span data-ttu-id="a8be6-517">ほとんどの場合、システム定義のタイムゾーンの `DaylightName` プロパティは <xref:System.String.Empty?displayProperty=nameWithType> または `null`いません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-517">In most cases, the `DaylightName` property of system-defined time zones is not <xref:System.String.Empty?displayProperty=nameWithType> or `null`.</span></span> <span data-ttu-id="a8be6-518">ただし、カスタムタイムゾーンの <xref:System.TimeZoneInfo.DaylightName%2A> プロパティは <xref:System.String.Empty?displayProperty=nameWithType>に設定できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-518">However, the <xref:System.TimeZoneInfo.DaylightName%2A> property of custom time zones can be set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8be6-519">これは、<xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> または <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType> のオーバーロードによってカスタムタイムゾーンが作成され、`disableDaylightSavingTime` パラメーターが `true`場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-519">This occurs when custom time zones are created by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%29?displayProperty=nameWithType> or the <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%2CSystem.Boolean%29?displayProperty=nameWithType> overload and the `disableDaylightSavingTime` parameter is `true`.</span></span> <span data-ttu-id="a8be6-520">したがって、コードでは、<xref:System.TimeZoneInfo.DaylightName%2A> プロパティの値が `null` でも空でもないとは限りません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-520">Therefore, your code should never assume that the value of the <xref:System.TimeZoneInfo.DaylightName%2A> property is not `null` or empty.</span></span>  
  
 <span data-ttu-id="a8be6-521"><xref:System.TimeZoneInfo.DaylightName%2A> プロパティは、<xref:System.TimeZone> クラスの <xref:System.TimeZone.DaylightName%2A> プロパティと同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-521">The <xref:System.TimeZoneInfo.DaylightName%2A> property is equivalent to the <xref:System.TimeZone.DaylightName%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-522">次の例では、<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> メソッドを使用してタイムゾーンの標準時名または夏時間名を表示するかどうかを決定する `DisplayDateWithTimeZoneName` という名前のメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-522">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.TimeZoneInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8be6-523">タイム ゾーンを表す標準表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-523">Gets the general display name that represents the time zone.</span></span></summary>
        <value><span data-ttu-id="a8be6-524">タイム ゾーンの標準表示名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-524">The time zone's general display name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-525">表示名は、Windows オペレーティングシステムと共にインストールされたカルチャに基づいてローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-525">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="a8be6-526">Windows システムタイムゾーンのタイムゾーン表示名は、ごく標準的な形式に従います。</span><span class="sxs-lookup"><span data-stu-id="a8be6-526">Time zone display names for Windows system time zones follow a fairly standard format.</span></span> <span data-ttu-id="a8be6-527">表示名の最初の部分は、協定世界時からのタイムゾーンのベースオフセットです。これは、かっこで囲まれた GMT (グリニッジ標準時) で表されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-527">The first portion of the display name is the time zone's base offset from Coordinated Universal Time, which is indicated by the acronym GMT (for Greenwich Mean Time), enclosed in parentheses.</span></span> <span data-ttu-id="a8be6-528">世界協定時刻では、オフセットのない GMT 頭字語がかっこで囲まれています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-528">For Coordinated Universal Time, the GMT acronym with no offset is enclosed in parentheses.</span></span>  <span data-ttu-id="a8be6-529">この後に、タイムゾーンを識別する文字列、またはタイムゾーンに含まれる都市、地域、または国の1つ以上を指定します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-529">This is followed by a string that identifies the time zone or one or more of the cities, regions, or countries in the time zone.</span></span> <span data-ttu-id="a8be6-530">例:</span><span class="sxs-lookup"><span data-stu-id="a8be6-530">For example:</span></span>  
  
```  
(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London  
(GMT+02:00) Athens, Beirut, Istanbul, Minsk  
(GMT-02:00) Mid-Atlantic  
(GMT-07:00) Mountain Time (US & Canada)  
```  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-531">次の例では、ローカルタイムゾーンを表す <xref:System.TimeZoneInfo> オブジェクトを取得し、その表示名、標準時名、および夏時間名を出力します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-531">The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.</span></span> <span data-ttu-id="a8be6-532">米国太平洋標準時ゾーンのシステムの出力が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-532">The output is displayed for a system in the U.S. Pacific Standard Time zone.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]
 [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-533">2 つの <see cref="T:System.TimeZoneInfo" /> オブジェクトが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-533">Determines whether two <see cref="T:System.TimeZoneInfo" /> objects are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="timeZoneInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a8be6-534">現在のオブジェクトと比較するもう 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-534">A second object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="a8be6-535">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトと別のオブジェクトが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-535">Determines whether the current <see cref="T:System.TimeZoneInfo" /> object and another object are equal.</span></span></summary>
        <returns><span data-ttu-id="a8be6-536"><see langword="true" /> が現在のインスタンスと等しい <paramref name="obj" /> オブジェクトである場合は <see cref="T:System.TimeZoneInfo" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-536"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.TimeZoneInfo" /> object that is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-537">このメソッドは、`obj` を <xref:System.TimeZoneInfo> オブジェクトに変換またはキャストし、現在のインスタンスと比較します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-537">This method converts or casts `obj` to a <xref:System.TimeZoneInfo> object and compares it with the current instance.</span></span> <span data-ttu-id="a8be6-538">等しいかどうかのテストは、値の比較に基づいています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-538">The test for equality is based on a comparison of values.</span></span> <span data-ttu-id="a8be6-539">現在の <xref:System.TimeZoneInfo> インスタンスと `obj` は、次の条件に一致していると見なされます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-539">The current <xref:System.TimeZoneInfo> instance and `obj` are considered to be equal under the following conditions:</span></span>  
  
-   <span data-ttu-id="a8be6-540">`obj` の実行時の型が <xref:System.TimeZoneInfo>。</span><span class="sxs-lookup"><span data-stu-id="a8be6-540">The run-time type of `obj` is <xref:System.TimeZoneInfo>.</span></span>  
  
-   <span data-ttu-id="a8be6-541">2つのオブジェクトの <xref:System.TimeZoneInfo.Id%2A> プロパティ値が同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-541">The two objects have the same <xref:System.TimeZoneInfo.Id%2A> property value.</span></span>  
  
-   <span data-ttu-id="a8be6-542">2つのオブジェクトの調整規則は同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-542">The two objects have the same adjustment rules.</span></span>  
  
 <span data-ttu-id="a8be6-543">`obj` が `null` の場合、このメソッドは `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-543">If `obj` is `null`, this method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-544">次の例では、<xref:System.TimeZoneInfo.Equals%28System.Object%29> メソッドを使用して、ローカルタイムゾーンが太平洋標準時か東部標準時かを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-544">The following example uses the <xref:System.TimeZoneInfo.Equals%28System.Object%29> method to determine whether the local time zone is Pacific Time or Eastern Time.</span></span>  
  
 [!code-csharp[System.TimeZoneInfo.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timezoneinfo.equals/cs/equals1.cs#1)]
 [!code-vb[System.TimeZoneInfo.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timezoneinfo.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo -&gt; bool" Usage="timeZoneInfo.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a8be6-545">現在のオブジェクトと比較するもう 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-545">A second object to compare with the current object.</span></span></param>
        <summary><span data-ttu-id="a8be6-546">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトと別の <see cref="T:System.TimeZoneInfo" /> オブジェクトが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-546">Determines whether the current <see cref="T:System.TimeZoneInfo" /> object and another <see cref="T:System.TimeZoneInfo" /> object are equal.</span></span></summary>
        <returns><span data-ttu-id="a8be6-547">2 つの <see langword="true" /> オブジェクトが等しい場合は <see cref="T:System.TimeZoneInfo" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-547"><see langword="true" /> if the two <see cref="T:System.TimeZoneInfo" /> objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-548">等値は、値の比較に基づいています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-548">Equality is based on a comparison of values.</span></span> <span data-ttu-id="a8be6-549">次の条件下では、2つの <xref:System.TimeZoneInfo> オブジェクトが等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-549">Two <xref:System.TimeZoneInfo> objects are considered to be equal under the following conditions:</span></span>  
  
-   <span data-ttu-id="a8be6-550"><xref:System.TimeZoneInfo.Id%2A> プロパティの値が同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-550">The value of their <xref:System.TimeZoneInfo.Id%2A> property is the same.</span></span>  
  
-   <span data-ttu-id="a8be6-551">同じ調整規則があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-551">They have the same adjustment rules.</span></span>  
  
 <span data-ttu-id="a8be6-552"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> は、次の式を評価した結果のブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-552"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> returns the Boolean value that results from evaluating the following expression:</span></span>  
  
 ```csharp 
 other.Id == this.Id && HasSameRules(other);  
 ```
  
 ```vb
 other.Id = me.Id AndAlso HasSameRules(other)  
 ```

 <span data-ttu-id="a8be6-553">`other` パラメーターが初期化されていない <xref:System.TimeZoneInfo> オブジェクトの場合、このメソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-553">If the `other` parameter is an uninitialized <xref:System.TimeZoneInfo> object, this method returns `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-554">次の例では、<xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> メソッドを使用して、ローカルタイムゾーンが太平洋標準時か東部標準時かを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-554">The following example uses the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29> method to determine whether the local time zone is Pacific Time or Eastern Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#7)]
 [!code-vb[System.TimeZone2.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSystemTimeZoneById">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo FindSystemTimeZoneById (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo FindSystemTimeZoneById(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindSystemTimeZoneById (id As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ FindSystemTimeZoneById(System::String ^ id);" />
      <MemberSignature Language="F#" Value="static member FindSystemTimeZoneById : string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.FindSystemTimeZoneById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="a8be6-555">タイム ゾーン ID。<see cref="P:System.TimeZoneInfo.Id" /> プロパティの値です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-555">The time zone identifier, which corresponds to the <see cref="P:System.TimeZoneInfo.Id" /> property.</span></span></param>
        <summary><span data-ttu-id="a8be6-556">その識別子に基づいて、新しい <see cref="T:System.TimeZoneInfo" /> オブジェクトをインスタンス化されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-556">Instantiates a new <see cref="T:System.TimeZoneInfo" /> object based on its identifier.</span></span></summary>
        <returns><span data-ttu-id="a8be6-557">ID が <paramref name="id" /> パラメーターの値であるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-557">An object whose identifier is the value of the <paramref name="id" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-558">`id` パラメーターは、タイムゾーンの長さの識別子と正確に対応している必要がありますが、一致と見なされるようにするには、大文字と小文字は区別されません。つまり、`id` とタイムゾーン識別子の比較では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-558">The `id` parameter must correspond exactly to the time zone's identifier in length, but not in case, for a successful match to occur; that is, the comparison of `id` with time zone identifiers is case-insensitive.</span></span> <span data-ttu-id="a8be6-559">部分一致に基づいてタイムゾーンオブジェクトを取得する場合は、<xref:System.TimeZoneInfo.GetSystemTimeZones%2A> メソッドによって返される <xref:System.TimeZoneInfo> オブジェクトの読み取り専用コレクションを操作するカスタムプロシージャを記述できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-559">If you want to retrieve time zone objects based on partial matches, you can write custom procedures that work with the read-only collection of <xref:System.TimeZoneInfo> objects returned by the <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method.</span></span>  
  
 <span data-ttu-id="a8be6-560">Windows システムでは、`FindSystemTimeZoneById` は、レジストリの HKEY_LOCAL_MACHINE \Software\Microsoft\Windows NT\CurrentVersion\Time Zones 分岐のサブキー名と `id` を照合しようとします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-560">On Windows systems, `FindSystemTimeZoneById` tries to match `id` to the subkey names of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones branch of the registry.</span></span> <span data-ttu-id="a8be6-561">Linux と macOS では、 [ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)にあるタイムゾーン情報が使用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-561">On Linux and macOS, it uses time zone information available in the [ICU Library](http://userguide.icu-project.org/datetime/timezone).</span></span> <span data-ttu-id="a8be6-562">レジストリまたはライブラリに必要なタイムゾーンの情報がない場合は、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドのいずれかのオーバーロードを呼び出すか、<xref:System.TimeZoneInfo.FromSerializedString%2A> を呼び出して必要なタイムゾーンを表す <xref:System.TimeZoneInfo> オブジェクトを逆シリアル化することによって、特定のタイムゾーンを作成できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-562">If the registry or the library does not have the information for the time zone you desire, you can create a particular time zone either by calling one of the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method or by calling <xref:System.TimeZoneInfo.FromSerializedString%2A> to deserialize a <xref:System.TimeZoneInfo> object that represents the required time zone.</span></span> <span data-ttu-id="a8be6-563">ただし、これらのメソッド呼び出しによって作成されたタイムゾーンはシステム定義の時刻ではなく、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッドを使用して取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-563">However, time zones created by these method calls are not system-defined time and cannot be retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.</span></span> <span data-ttu-id="a8be6-564">これらのカスタムタイムゾーンには、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> または <xref:System.TimeZoneInfo.FromSerializedString%2A> メソッド呼び出しによって返されるオブジェクト参照を使用してのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-564">These custom time zones can be accessed only through the object reference returned by the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> or <xref:System.TimeZoneInfo.FromSerializedString%2A> method call.</span></span>  
  
<span data-ttu-id="a8be6-565">このメソッドは、メソッドの呼び出しごとに新しい <xref:System.TimeZoneInfo> インスタンスを返します。キャッシュされたオブジェクトは返しません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-565">This method returns a new <xref:System.TimeZoneInfo> instance for each method call; it does not return cached objects.</span></span> <span data-ttu-id="a8be6-566">これは、同じ識別子を使用して `FindSystemTimeZoneById` メソッドを繰り返し呼び出すアプリケーションのパフォーマンスに影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-566">This may impact performance in applications that call the `FindSystemTimeZoneById` method repeatedly with the same identifier.</span></span>   
  
## Examples  
 <span data-ttu-id="a8be6-567">次の例では、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッドを使用して、東京標準タイムゾーンを取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-567">The following example uses the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to retrieve the Tokyo Standard Time zone.</span></span> <span data-ttu-id="a8be6-568">この <xref:System.TimeZoneInfo> オブジェクトを使用して、現地時刻を東京の時刻に変換し、東京標準時または東京夏時間のどちらであるかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-568">This <xref:System.TimeZoneInfo> object is then used to convert the local time to the time in Tokyo and to determine whether it is Tokyo Standard Time or Tokyo Daylight Time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Conversions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Conversions/cs/convertdt2.cs#2)]
 [!code-vb[System.TimeZone2.Conversions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Conversions/vb/convertdt2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="a8be6-569">システムに、タイム ゾーンの情報を保持するための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-569">The system does not have enough memory to hold information about the time zone.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-570"><paramref name="id" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-570">The <paramref name="id" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TimeZoneNotFoundException"><span data-ttu-id="a8be6-571">指定されたタイム ゾーン ID <paramref name="id" /> が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="a8be6-571">The time zone identifier specified by <paramref name="id" /> was not found.</span></span> <span data-ttu-id="a8be6-572">つまり、<paramref name="id" /> と同じ名前のタイム ゾーン識別子が存在していないか、または識別子は存在するものの、それにはタイム ゾーンのデータが含まれていません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-572">This means that a time zone identifier whose name matches <paramref name="id" /> does not exist, or that the identifier exists but does not contain any time zone data.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a8be6-573">プロセスには、タイム ゾーン情報を格納するレジストリ キーからの読み取りに必要な権限がありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-573">The process does not have the permissions required to read from the registry key that contains the time zone information.</span></span></exception>
        <exception cref="T:System.InvalidTimeZoneException"><span data-ttu-id="a8be6-574">タイム ゾーン ID が見つかりましたが、レジストリ データが壊れています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-574">The time zone identifier was found, but the registry data is corrupted.</span></span></exception>
        <altmember cref="P:System.TimeZoneInfo.Id" />
        <related type="Article" href="~/docs/standard/datetime/instantiate-time-zone-info.md"><span data-ttu-id="a8be6-575">方法 : TimeZoneInfo オブジェクトをインスタンス化する</span><span class="sxs-lookup"><span data-stu-id="a8be6-575">How to: Instantiate a TimeZoneInfo Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromSerializedString">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo FromSerializedString (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo FromSerializedString(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSerializedString (source As String) As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo ^ FromSerializedString(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member FromSerializedString : string -&gt; TimeZoneInfo" Usage="System.TimeZoneInfo.FromSerializedString source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="a8be6-576">シリアル化された <see cref="T:System.TimeZoneInfo" /> オブジェクトの文字列表現。</span><span class="sxs-lookup"><span data-stu-id="a8be6-576">The string representation of the serialized <see cref="T:System.TimeZoneInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="a8be6-577">文字列を逆シリアル化して、シリアル化された元の <see cref="T:System.TimeZoneInfo" /> オブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-577">Deserializes a string to re-create an original serialized <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="a8be6-578">シリアル化された元のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-578">The original serialized object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-579">Windows のレジストリまたは Linux と macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)にないタイムゾーンを作成するために必要なすべてのコードを提供する代わりに、その他の方法もあります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-579">There is an alternative to providing all the code required to create a time zone that is not found in the registry on Windows or in the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a8be6-580">カスタムタイムゾーンを定義し、スタンドアロンの実行可能ファイルで <xref:System.TimeZoneInfo.ToSerializedString%2A> メソッドを使用することも、アプリケーションのセットアッププログラムを使用してタイムゾーンを文字列として保存することもできます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-580">You can define a custom time zone and either use the <xref:System.TimeZoneInfo.ToSerializedString%2A> method in a standalone executable or use an application's setup program to save the time zone as a string.</span></span> <span data-ttu-id="a8be6-581">その後、アプリケーションは、その格納場所からこの文字列を取得し、<xref:System.TimeZoneInfo.FromSerializedString%2A> メソッドを使用してインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-581">The application can then retrieve this string from its storage location and instantiate it using the <xref:System.TimeZoneInfo.FromSerializedString%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-582">次の例では、ローカルシステムから南極/南部のタイムゾーンを取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-582">The following example tries to retrieve the Antarctica/South Pole time zone from the local system.</span></span> <span data-ttu-id="a8be6-583">失敗した場合、コードはアプリケーションディレクトリ内のテキストファイルからタイムゾーンに関する情報を取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-583">If it fails, the code tries to retrieve information about the time zone from a text file in the application directory.</span></span> <span data-ttu-id="a8be6-584">この試行が失敗した場合、コードはタイムゾーンを作成し、タイムゾーンに関する情報をテキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-584">If this attempt fails, the code creates the time zone and writes information about the time zone to the text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]
 [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-585"><paramref name="source" /> パラメーターが <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-585">The <paramref name="source" /> parameter is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-586"><paramref name="source" /> パラメーターが null 文字列です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-586">The <paramref name="source" /> parameter is a null string.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a8be6-587">ソース パラメーターを逆シリアル化して <see cref="T:System.TimeZoneInfo" /> オブジェクトに戻すことはできません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-587">The source parameter cannot be deserialized back into a <see cref="T:System.TimeZoneInfo" /> object.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.ToSerializedString" />
        <related type="Article" href="~/docs/standard/datetime/restore-time-zones-from-an-embedded-resource.md"><span data-ttu-id="a8be6-588">方法 : 埋め込みリソースからタイム ゾーンを復元する</span><span class="sxs-lookup"><span data-stu-id="a8be6-588">How to: Restore Time Zones from an Embedded Resource</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustmentRules">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.AdjustmentRule[] GetAdjustmentRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.TimeZoneInfo/AdjustmentRule[] GetAdjustmentRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAdjustmentRules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjustmentRules () As TimeZoneInfo.AdjustmentRule()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeZoneInfo::AdjustmentRule ^&gt; ^ GetAdjustmentRules();" />
      <MemberSignature Language="F#" Value="member this.GetAdjustmentRules : unit -&gt; TimeZoneInfo.AdjustmentRule[]" Usage="timeZoneInfo.GetAdjustmentRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8be6-589">現在の <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> オブジェクトに適用する <see cref="T:System.TimeZoneInfo" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-589">Retrieves an array of <see cref="T:System.TimeZoneInfo.AdjustmentRule" /> objects that apply to the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="a8be6-590">このタイム ゾーンのオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="a8be6-590">An array of objects for this time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-591"><xref:System.TimeZoneInfo.GetAdjustmentRules%2A> メソッドは、<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-591">The <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method retrieves an array of <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> objects.</span></span> <span data-ttu-id="a8be6-592">配列内の各オブジェクトは、そのタイムゾーン調整の有効な開始日と終了日、およびデルタ (調整によって時間が変化する正確な量) を定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-592">Each object in the array defines the effective start and end date of that time zone adjustment, as well as its delta (the exact amount by which the adjustment causes the time to change).</span></span> <span data-ttu-id="a8be6-593">また、2つのプロパティは <xref:System.TimeZoneInfo.TransitionTime?displayProperty=nameWithType> を返します。これらのオブジェクトは、標準時間との間の毎年の遷移が発生するタイミングを定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-593">In addition, two properties return <xref:System.TimeZoneInfo.TransitionTime?displayProperty=nameWithType> objects that define when each annual transition to and from standard time occurs.</span></span>  
  
 <span data-ttu-id="a8be6-594">タイムゾーンに複数の調整規則がある場合、通常は、最初の (インデックス0の) から最後 (インデックス <xref:System.Array.Length%2A>-1) までの順序で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-594">If a time zone has multiple adjustment rules, they are generally ordered from earliest (at index 0) to latest (at index <xref:System.Array.Length%2A> - 1).</span></span>  
  
 <span data-ttu-id="a8be6-595">タイムゾーンに調整規則がない場合、<xref:System.TimeZoneInfo.GetAdjustmentRules%2A> メソッドは空の配列 (<xref:System.Array.Length%2A> が0の配列) を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-595">If a time zone has no adjustment rules, the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an empty array (an array whose <xref:System.Array.Length%2A> is zero).</span></span>  
  
 <span data-ttu-id="a8be6-596"><xref:System.TimeZoneInfo.GetAdjustmentRules%2A> メソッドによって返される配列の要素に対する変更は、特定のタイムゾーンに属する調整規則には反映されません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-596">Any modifications to the elements of the array returned by the <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method are not reflected in the adjustment rules that belong to a particular time zone.</span></span> <span data-ttu-id="a8be6-597">タイムゾーンの調整規則 (夏時間前後の履歴を反映するなど) を変更するには、既存のタイムゾーンを変更するのではなく、適切な調整規則を指定して新しいタイムゾーンを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-597">To modify a time zone's adjustment rules (such as to reflect its historical transition to and from daylight saving time) you must create a new time zone with the appropriate adjustment rules, rather than modify the existing one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-598">次の例では、ローカルシステムで定義されているすべてのタイムゾーンを取得し、その調整規則に関する完全な情報をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-598">The following example retrieves all time zones that are defined on the local system and displays complete information about their adjustment rules to the console.</span></span>  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="a8be6-599">システムには、調整規則のメモリ内コピーを作成するのに十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-599">The system does not have enough memory to make an in-memory copy of the adjustment rules.</span></span></exception>
        <altmember cref="T:System.TimeZoneInfo.AdjustmentRule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAmbiguousTimeOffsets">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-600">あいまいな日付と時刻を割り当て可能な、日付と時刻に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-600">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAmbiguousTimeOffsets">
      <MemberSignature Language="C#" Value="public TimeSpan[] GetAmbiguousTimeOffsets (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan[] GetAmbiguousTimeOffsets(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeSpan&gt; ^ GetAmbiguousTimeOffsets(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.GetAmbiguousTimeOffsets : DateTime -&gt; TimeSpan[]" Usage="timeZoneInfo.GetAmbiguousTimeOffsets dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-601">日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-601">A date and time.</span></span></param>
        <summary><span data-ttu-id="a8be6-602">あいまいな日付と時刻を割り当て可能な、日付と時刻に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-602">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
        <returns><span data-ttu-id="a8be6-603">特定の日付と時刻を割り当て可能な、世界協定時刻 (UTC) オフセットを表すオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="a8be6-603">An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-604">このメソッドの正確な動作は、次の表に示すように、<xref:System.DateTime.Kind%2A> プロパティと <xref:System.TimeZoneInfo> オブジェクトの関係によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-604">The precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-605">TimeZoneInfo オブジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="a8be6-605">TimeZoneInfo object type</span></span>|<span data-ttu-id="a8be6-606">Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="a8be6-606">Kind property value</span></span>|<span data-ttu-id="a8be6-607">動作</span><span class="sxs-lookup"><span data-stu-id="a8be6-607">Behavior</span></span>|  
|------------------------------|-------------------------|--------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="a8be6-608"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a8be6-608"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="a8be6-609">`dateTime`のあいまいな時刻オフセットを返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-609">Returns ambiguous time offsets for `dateTime`.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a8be6-610">`dateTime` を現地時刻に変換し、その時間のあいまいな時刻オフセットを返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-610">Converts `dateTime` to the local time, and then returns ambiguous time offsets for that time.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="a8be6-611">任意の値。</span><span class="sxs-lookup"><span data-stu-id="a8be6-611">Any value.</span></span>|<span data-ttu-id="a8be6-612"><xref:System.ArgumentException>をスローします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-612">Throws an <xref:System.ArgumentException>.</span></span>|  
|<span data-ttu-id="a8be6-613">その他のタイムゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-613">Any other time zone.</span></span>|<span data-ttu-id="a8be6-614"><xref:System.DateTimeKind.Local> または <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a8be6-614"><xref:System.DateTimeKind.Local> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="a8be6-615">`dateTime` を指定したタイムゾーンに変換し、その時刻があいまいであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-615">Converts `dateTime` to the specified time zone, and then determines whether that time is ambiguous.</span></span>|  
|<span data-ttu-id="a8be6-616">その他のタイムゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-616">Any other time zone.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a8be6-617">指定したタイムゾーンで `dateTime` があいまいであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-617">Determines whether `dateTime` is ambiguous in the specified time zone.</span></span>|  
  
 <span data-ttu-id="a8be6-618">このメソッドによって返される配列内の <xref:System.TimeSpan> オブジェクトの順序は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-618">The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined.</span></span> <span data-ttu-id="a8be6-619">ただし、タイムゾーンの標準時からのオフセットを表す要素を特定するには、その値をタイムゾーンの <xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティと比較します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-619">However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property.</span></span> <span data-ttu-id="a8be6-620">あいまいな時刻をタイムゾーンの標準時刻にマップする方法については、「[方法: あいまい](~/docs/standard/datetime/resolve-ambiguous-times.md)な時刻を解決する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-620">To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-621">次の例では `ShowPossibleUtcTimes` という名前のメソッドを定義します。このメソッドは、<xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29> メソッドを使用して、あいまいな時刻を、それに対応する世界協定時刻 (UTC) の時刻にマップします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-621">The following example defines a method named `ShowPossibleUtcTimes` that uses the <xref:System.TimeZoneInfo.GetAmbiguousTimeOffsets%28System.DateTime%29> method to map an ambiguous time to its possible corresponding Coordinated Universal Time (UTC) times.</span></span>  
  
 [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#1)]
 [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#1)]  
  
 <span data-ttu-id="a8be6-622">その後、次のようなコードを使用してメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-622">The method can then be called using code such as the following:</span></span>  
  
 [!code-csharp[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/cs/System.TimeZone2.GetAmbiguousTimeOffsets.cs#2)]
 [!code-vb[System.TimeZone2.GetAmbiguousTimeOffsets#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetAmbiguousTimeOffsets/vb/System.TimeZone2.GetAmbiguousTimeOffsets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-623"><paramref name="dateTime" /> はあいまいな時刻ではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-623"><paramref name="dateTime" /> is not an ambiguous time.</span></span></exception>
        <altmember cref="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
        <related type="Article" href="~/docs/standard/datetime/resolve-ambiguous-times.md"><span data-ttu-id="a8be6-624">方法 : あいまいな時刻を解決する</span><span class="sxs-lookup"><span data-stu-id="a8be6-624">How to: Resolve Ambiguous Times</span></span></related>
        <related type="Article" href="~/docs/standard/datetime/let-users-resolve-ambiguous-times.md"><span data-ttu-id="a8be6-625">方法 : ユーザーがあいまいな時刻を解決できるようにする</span><span class="sxs-lookup"><span data-stu-id="a8be6-625">How to: Let Users Resolve Ambiguous Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAmbiguousTimeOffsets">
      <MemberSignature Language="C#" Value="public TimeSpan[] GetAmbiguousTimeOffsets (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan[] GetAmbiguousTimeOffsets(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;TimeSpan&gt; ^ GetAmbiguousTimeOffsets(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.GetAmbiguousTimeOffsets : DateTimeOffset -&gt; TimeSpan[]" Usage="timeZoneInfo.GetAmbiguousTimeOffsets dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a8be6-626">日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-626">A date and time.</span></span></param>
        <summary><span data-ttu-id="a8be6-627">あいまいな日付と時刻を割り当て可能な、日付と時刻に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-627">Returns information about the possible dates and times that an ambiguous date and time can be mapped to.</span></span></summary>
        <returns><span data-ttu-id="a8be6-628">特定の日付と時刻を割り当て可能な、世界協定時刻 (UTC) オフセットを表すオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="a8be6-628">An array of objects that represents possible Coordinated Universal Time (UTC) offsets that a particular date and time can be mapped to.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-629">このメソッドの正確な動作は、`dateTimeOffset` パラメーターの <xref:System.DateTimeOffset.Offset%2A> プロパティと <xref:System.TimeZoneInfo> オブジェクトの関係によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-629">The precise behavior of this method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the <xref:System.TimeZoneInfo> object.</span></span> <span data-ttu-id="a8be6-630"><xref:System.DateTimeOffset.Offset%2A> プロパティの値が、その日付と時刻の世界協定時刻 (UTC) からの現在のタイムゾーンのオフセットに対応する場合、メソッドは可能なオフセットを返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-630">If the value of the <xref:System.DateTimeOffset.Offset%2A> property corresponds to the current time zone's possible offsets from Coordinated Universal Time (UTC) for that date and time, the method returns the possible offsets.</span></span> <span data-ttu-id="a8be6-631">それ以外の場合は、`dateTimeOffset` を現在のタイムゾーンの時刻に変換し、その日付と時刻のオフセットを返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-631">Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then returns the possible offsets of that date and time.</span></span>  
  
 <span data-ttu-id="a8be6-632">このメソッドによって返される配列内の <xref:System.TimeSpan> オブジェクトの順序は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-632">The order of <xref:System.TimeSpan> objects in the array returned by this method is undefined.</span></span> <span data-ttu-id="a8be6-633">ただし、タイムゾーンの標準時からのオフセットを表す要素を特定するには、その値をタイムゾーンの <xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティと比較します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-633">However, you can determine which element represents an offset from the time zone's standard time by comparing its value with the time zone's <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property.</span></span> <span data-ttu-id="a8be6-634">あいまいな時刻をタイムゾーンの標準時刻にマップする方法については、「[方法: あいまい](~/docs/standard/datetime/resolve-ambiguous-times.md)な時刻を解決する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-634">To map an ambiguous time to a time zone's standard time, see [How to: Resolve Ambiguous Times](~/docs/standard/datetime/resolve-ambiguous-times.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-635"><paramref name="dateTimeOffset" /> はあいまいな時刻ではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-635"><paramref name="dateTimeOffset" /> is not an ambiguous time.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
        <related type="Article" href="~/docs/standard/datetime/resolve-ambiguous-times.md"><span data-ttu-id="a8be6-636">方法 : あいまいな時刻を解決する</span><span class="sxs-lookup"><span data-stu-id="a8be6-636">How to: Resolve Ambiguous Times</span></span></related>
        <related type="Article" href="~/docs/standard/datetime/let-users-resolve-ambiguous-times.md"><span data-ttu-id="a8be6-637">方法 : ユーザーがあいまいな時刻を解決できるようにする</span><span class="sxs-lookup"><span data-stu-id="a8be6-637">How to: Let Users Resolve Ambiguous Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="timeZoneInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8be6-638">ハッシュ関数として機能し、ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造に使用されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-638">Serves as a hash function for hashing algorithms and data structures such as hash tables.</span></span></summary>
        <returns><span data-ttu-id="a8be6-639">この <see cref="T:System.TimeZoneInfo" /> オブジェクトのハッシュ コードとして機能する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="a8be6-639">A 32-bit signed integer that serves as the hash code for this <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-640"><xref:System.TimeZoneInfo.GetHashCode%2A> 方法の詳細については、「<xref:System.Object.GetHashCode%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-640">For additional detail about the <xref:System.TimeZoneInfo.GetHashCode%2A> method, see <xref:System.Object.GetHashCode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemTimeZones">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt; GetSystemTimeZones ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.TimeZoneInfo&gt; GetSystemTimeZones() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetSystemTimeZones" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSystemTimeZones () As ReadOnlyCollection(Of TimeZoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;TimeZoneInfo ^&gt; ^ GetSystemTimeZones();" />
      <MemberSignature Language="F#" Value="static member GetSystemTimeZones : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;TimeZoneInfo&gt;" Usage="System.TimeZoneInfo.GetSystemTimeZones " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.TimeZoneInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8be6-641">ローカル システムで情報を使用できるすべてのタイム ゾーンのコレクションを、並べ替えられた状態で返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-641">Returns a sorted collection of all the time zones about which information is available on the local system.</span></span></summary>
        <returns><span data-ttu-id="a8be6-642"><see cref="T:System.TimeZoneInfo" /> オブジェクトの読み取り専用のコレクション。</span><span class="sxs-lookup"><span data-stu-id="a8be6-642">A read-only collection of <see cref="T:System.TimeZoneInfo" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-643"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> メソッドは、Windows システムのレジストリの HKEY_LOCAL_MACHINE \Software\Microsoft\Windows NT\CurrentVersion\Time Zones キーのサブキー、および Linux および macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)から、使用可能なすべてのタイムゾーン情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-643">The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method retrieves all available time zone information from the subkeys of the registry's HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones key on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a8be6-644">個々の <xref:System.TimeZoneInfo> オブジェクトの特定の文字列プロパティの値を正常に取得および解析できない場合、このメソッドはその値を空の文字列 ("") に設定します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-644">If it is unable to successfully retrieve and parse values for particular string properties of individual <xref:System.TimeZoneInfo> objects, this method sets their value to an empty string ("").</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8be6-645"><xref:System.TimeZoneInfo.GetSystemTimeZones%2A> メソッドは、Windows レジストリまたは ICU ライブラリで定義されているタイムゾーンに対してのみ <xref:System.TimeZoneInfo> オブジェクトのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-645">The <xref:System.TimeZoneInfo.GetSystemTimeZones%2A> method returns a collection of <xref:System.TimeZoneInfo> objects only for time zones defined in the Windows registry or the ICU library.</span></span> <span data-ttu-id="a8be6-646"><xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドのオーバーロードを使用して作成されたタイムゾーンは含まれません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-646">It does not include time zones created using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="a8be6-647">これらは、タイムゾーンの作成方法によって返されるオブジェクト参照を通じてのみアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-647">These are accessible only through the object reference returned by the time zone creation method.</span></span>  
  
 <span data-ttu-id="a8be6-648">このメソッドによって返されるコレクションは、UTC オフセットと、現在のカルチャを使用する表示名によって同じ UTC オフセットを持つタイムゾーンに対して並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-648">The collection returned by this method is sorted by UTC offset and, for time zones that have the same UTC offset, by the display name using the current culture.</span></span> <span data-ttu-id="a8be6-649">表示名の詳細については、「<xref:System.TimeZoneInfo.DisplayName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-649">For information about the display name, see <xref:System.TimeZoneInfo.DisplayName%2A>.</span></span>  
  
 <span data-ttu-id="a8be6-650">このメソッドによって返される <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> オブジェクトは、<xref:System.Collections.Generic.IEnumerable%601> インターフェイスをサポートしています。つまり、`foreach` ( C#の場合) または `For Each…Next` (Visual Basic) ステートメントを使用して反復処理できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-650">The <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> object returned by this method supports the <xref:System.Collections.Generic.IEnumerable%601> interface, which means that it can be iterated using the `foreach` (in C#) or `For Each…Next` (in Visual Basic) statements.</span></span> <span data-ttu-id="a8be6-651">ループの各反復処理では、コレクション内の次の <xref:System.TimeZoneInfo> オブジェクトが提供されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-651">Each iteration of the loop provides the next <xref:System.TimeZoneInfo> object in the collection.</span></span>  
  
 <span data-ttu-id="a8be6-652"><xref:System.TimeZoneInfo> オブジェクトのコレクションは、ローカルコンピューターで定義されているタイムゾーンを表します。すべての期間中、すべてのタイムゾーンについて完全な情報が提供されるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-652">The collection of <xref:System.TimeZoneInfo> objects represents time zones defined on the local computer; it does not necessarily provide complete information for all time zones during all time periods.</span></span> <span data-ttu-id="a8be6-653">アプリケーションでローカルコンピューターにタイムゾーンが見つからない場合は、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドのオーバーロードを使用してカスタムタイムゾーンを作成できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-653">If your application requires time zones not found on the local computer, you can create custom time zones using the overloads of the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method.</span></span> <span data-ttu-id="a8be6-654">詳細については、「[方法: 調整規則のないタイムゾーンを作成](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md)する」および「[方法: 調整規則を使用してタイムゾーンを作成する](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-654">For more information, see [How to: Create Time Zones Without Adjustment Rules](~/docs/standard/datetime/create-time-zones-without-adjustment-rules.md) and [How to: Create Time Zones with Adjustment Rules](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).</span></span>  
  
 <span data-ttu-id="a8be6-655">また、<xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッドを呼び出し、パラメーターとして取得するタイムゾーンの識別子を指定することによって、ローカルコンピューターで個別のタイムゾーンが定義されているかどうかを確認することもできます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-655">You can also determine whether an individual time zone is defined on the local computer by calling the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method and providing the identifier of the time zone you want to retrieve as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-656">次の例では、コンピューターで定義されているタイムゾーンを表すタイムゾーンオブジェクトのコレクションを取得し、それらに関する情報をテキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-656">The following example retrieves a collection of time zone objects that represent the time zones defined on a computer and writes information about them to a text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/getsystemtimezones1.cs#6)]
 [!code-vb[System.TimeZone2.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/getsystemtimezones1.vb#6)]
  [!code-powershell[System.TimeZone2.Class#6](~/samples/snippets/powershell/VS_Snippets_CLR_System/System.TimeZone2.Class/PS/Timezone2_Examples.ps1)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="a8be6-657">すべてのタイム ゾーン情報を格納するにはメモリが不足しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-657">There is insufficient memory to store all time zone information.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="a8be6-658">ユーザーには、タイム ゾーン情報が含まれているレジストリ キーから読み取る権限がありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-658">The user does not have permission to read from the registry keys that contain time zone information.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUtcOffset">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-659">特定の日付と時刻について、このタイム ゾーンでの時刻と世界協定時刻 (UTC) とのオフセットまたは差を計算します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-659">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan GetUtcOffset (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetUtcOffset(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.GetUtcOffset : DateTime -&gt; TimeSpan" Usage="timeZoneInfo.GetUtcOffset dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-660">オフセットの計算対象となる日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-660">The date and time to determine the offset for.</span></span></param>
        <summary><span data-ttu-id="a8be6-661">特定の日付と時刻について、このタイム ゾーンでの時刻と世界協定時刻 (UTC) とのオフセットまたは差を計算します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-661">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
        <returns><span data-ttu-id="a8be6-662">2 つのタイム ゾーンの時差を示すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-662">An object that indicates the time difference between the two time zones.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-663">返された期間には、現在のタイムゾーンに調整規則を適用したことによるすべての違いが含まれます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-663">The returned time span includes any differences due to the application of adjustment rules to the current time zone.</span></span> <span data-ttu-id="a8be6-664">これは <xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティとは異なり、世界協定時刻 (UTC) とタイムゾーンの標準時刻の差を返します。したがって、調整規則は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-664">It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.</span></span>  
  
 <span data-ttu-id="a8be6-665">`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティがタイムゾーンオブジェクトに対応していない場合、このメソッドは結果を返す前に必要な変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-665">If the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property does not correspond to the time zone object, this method performs the necessary conversion before returning a result.</span></span> <span data-ttu-id="a8be6-666">たとえば、<xref:System.DateTime.Kind%2A> プロパティが <xref:System.DateTimeKind.Local?displayProperty=nameWithType> でも、タイムゾーンオブジェクトがローカルタイムゾーンではない場合に発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-666">For example, this can occur if the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> but the time zone object is not the local time zone.</span></span> <span data-ttu-id="a8be6-667">`dateTime` があいまいな場合、または変換された時刻があいまいな場合、このメソッドは、あいまいな時刻を標準時として解釈します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-667">If `dateTime` is ambiguous, or if the converted time is ambiguous, this method interprets the ambiguous time as a standard time.</span></span> <span data-ttu-id="a8be6-668">`dateTime` が無効な場合、このメソッドは、UTC とタイムゾーンの標準時刻の差を反映する <xref:System.TimeSpan> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-668">If `dateTime` is invalid, this method returns a <xref:System.TimeSpan> object that reflects the difference between UTC and the time zone's standard time.</span></span>  
  
 <span data-ttu-id="a8be6-669"><xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=nameWithType> メソッドは、<xref:System.TimeZone> クラスの <xref:System.TimeZone.GetUtcOffset%2A> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-669">The <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29?displayProperty=nameWithType> method is similar in operation to the <xref:System.TimeZone.GetUtcOffset%2A> method of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-670">次の例では、異なるタイムゾーンと、異なる <xref:System.DateTime.Kind%2A> プロパティ値を持つ日付値を使用して、<xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29> メソッドを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-670">The following example illustrates the use of the <xref:System.TimeZoneInfo.GetUtcOffset%28System.DateTime%29> method with different time zones and with date values that have different <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 [!code-csharp[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/cs/System.TimeZone2.GetUtcOffset.cs#1)]
 [!code-vb[System.TimeZone2.GetUtcOffset#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.GetUtcOffset/vb/System.TimeZone2.GetUtcOffset.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.BaseUtcOffset" />
      </Docs>
    </Member>
    <Member MemberName="GetUtcOffset">
      <MemberSignature Language="C#" Value="public TimeSpan GetUtcOffset (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetUtcOffset(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.GetUtcOffset(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetUtcOffset(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.GetUtcOffset : DateTimeOffset -&gt; TimeSpan" Usage="timeZoneInfo.GetUtcOffset dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a8be6-671">オフセットの計算対象となる日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-671">The date and time to determine the offset for.</span></span></param>
        <summary><span data-ttu-id="a8be6-672">特定の日付と時刻について、このタイム ゾーンでの時刻と世界協定時刻 (UTC) とのオフセットまたは差を計算します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-672">Calculates the offset or difference between the time in this time zone and Coordinated Universal Time (UTC) for a particular date and time.</span></span></summary>
        <returns><span data-ttu-id="a8be6-673">世界協定時刻 (UTC) と現在のタイム ゾーンとの時差を示すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-673">An object that indicates the time difference between Coordinated Universal Time (UTC) and the current time zone.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-674">返された期間には、現在のタイムゾーンに調整規則を適用したことによるすべての違いが含まれます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-674">The returned time span includes any differences due to the application of adjustment rules to the current time zone.</span></span> <span data-ttu-id="a8be6-675">これは <xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティとは異なり、世界協定時刻 (UTC) とタイムゾーンの標準時刻の差を返します。したがって、調整規則は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-675">It differs from the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property, which returns the difference between Coordinated Universal Time (UTC) and the time zone's standard time and, therefore, does not take adjustment rules into account.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSameRules">
      <MemberSignature Language="C#" Value="public bool HasSameRules (TimeZoneInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasSameRules(class System.TimeZoneInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasSameRules (other As TimeZoneInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasSameRules(TimeZoneInfo ^ other);" />
      <MemberSignature Language="F#" Value="member this.HasSameRules : TimeZoneInfo -&gt; bool" Usage="timeZoneInfo.HasSameRules other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a8be6-676">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトと比較するもう 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-676">A second object to compare with the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="a8be6-677">現在のオブジェクトと別の <see cref="T:System.TimeZoneInfo" /> オブジェクトが同じ調整規則を持っているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-677">Indicates whether the current object and another <see cref="T:System.TimeZoneInfo" /> object have the same adjustment rules.</span></span></summary>
        <returns><span data-ttu-id="a8be6-678">2 つのタイム ゾーンが同じ調整規則と同じベース オフセットを持っている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-678"><see langword="true" /> if the two time zones have identical adjustment rules and an identical base offset; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-679"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> メソッドと同様に、<xref:System.TimeZoneInfo.HasSameRules%2A> メソッドは、2つのタイムゾーンが同じベースオフセット (<xref:System.TimeZoneInfo.BaseUtcOffset%2A> プロパティによって定義される) と同じ調整規則を持っているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-679">Like the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> method, the <xref:System.TimeZoneInfo.HasSameRules%2A> method indicates whether two time zones have the same base offset (as defined by the <xref:System.TimeZoneInfo.BaseUtcOffset%2A> property) and the same adjustment rules.</span></span> <span data-ttu-id="a8be6-680"><xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> メソッドとは異なり、<xref:System.TimeZoneInfo.HasSameRules%2A> では、(<xref:System.TimeZoneInfo.Id%2A> プロパティによって定義された) タイムゾーン id を比較しません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-680">Unlike the <xref:System.TimeZoneInfo.Equals%28System.TimeZoneInfo%29?displayProperty=nameWithType> method, <xref:System.TimeZoneInfo.HasSameRules%2A> does not compare time zone identifiers (as defined by the <xref:System.TimeZoneInfo.Id%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-681">通常、Windows のレジストリで定義されている多くのタイムゾーンと、Linux および macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)のオフセットは、世界協定時刻 (UTC) と同じ調整規則と同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-681">Typically, a number of time zones defined in the registry on Windows and the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS have the same offset from Coordinated Universal Time (UTC) and the same adjustment rules.</span></span> <span data-ttu-id="a8be6-682">次の例では、これらのタイムゾーンの一覧をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-682">The following example displays a list of these time zones to the console.</span></span>  
  
 [!code-csharp[System.TimeZone2.HasSameRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/cs/HasSameRules.cs#1)]
 [!code-vb[System.TimeZone2.HasSameRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.HasSameRules/vb/HasSameRules.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-683"><paramref name="other" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-683">The <paramref name="other" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.TimeZoneInfo.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8be6-684">タイム ゾーン ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-684">Gets the time zone identifier.</span></span></summary>
        <value><span data-ttu-id="a8be6-685">タイム ゾーン ID。</span><span class="sxs-lookup"><span data-stu-id="a8be6-685">The time zone identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-686">タイムゾーン識別子は、特定のタイムゾーンを一意に識別するキー文字列です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-686">The time zone identifier is a key string that uniquely identifies a particular time zone.</span></span> <span data-ttu-id="a8be6-687">Windows システムでは、Windows システムのレジストリの HKEY_LOCAL_MACHINE \Software\Microsoft\Windows NT\CurrentVersion\Time ゾーンブランチのサブキー、および Linux および macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)に対応しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-687">On Windows systems, it corresponds to the subkeys of the HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zone branch of the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span> <span data-ttu-id="a8be6-688">特定のタイムゾーンを表す <xref:System.TimeZoneInfo> オブジェクトをインスタンス化するために、パラメーターとして <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-688">It can be passed as a parameter to the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method to instantiate a <xref:System.TimeZoneInfo> object that represents a particular time zone.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8be6-689">Windows レジストリのキー名は最大255文字にすることができますが、カスタムタイムゾーンに割り当てる識別子は32文字以下にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-689">Although a key name in the Windows registry can be a maximum of 255 characters, we recommend that an identifier that you assign to a custom time zone be 32 characters or fewer.</span></span> <span data-ttu-id="a8be6-690">識別子が長いほど、取得時に無効なキー名が指定される確率が高くなります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-690">The longer the identifier, the greater the probability that an incorrect key name will be supplied when retrieving it.</span></span>  
  
 <span data-ttu-id="a8be6-691"><xref:System.TimeZoneInfo.Id%2A> プロパティの値は通常、<xref:System.TimeZoneInfo.StandardName%2A> プロパティの値と同じですが、常にではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-691">The value of the <xref:System.TimeZoneInfo.Id%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.StandardName%2A> property.</span></span> <span data-ttu-id="a8be6-692">協定世界時ゾーンの識別子は UTC です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-692">The identifier of the Coordinated Universal Time zone is UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-693">次の例では、ローカルコンピューターで定義されている各タイムゾーンの識別子を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-693">The following example lists the identifier of each of the time zones defined on the local computer.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#5)]
 [!code-vb[System.TimeZone2.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAmbiguousTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-694">特定のタイム ゾーンの特定の日付と時刻があいまいかどうか、および複数の世界協定時刻 (UTC) に割り当て可能かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-694">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAmbiguousTime">
      <MemberSignature Language="C#" Value="public bool IsAmbiguousTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAmbiguousTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbiguousTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsAmbiguousTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsAmbiguousTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-695">日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="a8be6-695">A date and time value.</span></span></param>
        <summary><span data-ttu-id="a8be6-696">特定のタイム ゾーンの特定の日付と時刻があいまいかどうか、および複数の世界協定時刻 (UTC) に割り当て可能かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-696">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
        <returns><span data-ttu-id="a8be6-697"><see langword="true" /> パラメーターがあいまいな場合は <paramref name="dateTime" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-697"><see langword="true" /> if the <paramref name="dateTime" /> parameter is ambiguous; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-698">あいまいな時刻は、現在のタイムゾーンの時間範囲内にあります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-698">An ambiguous time falls within a range of times for the current time zone.</span></span> <span data-ttu-id="a8be6-699">これは、調整規則の適用によって生成される標準時間または時刻のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-699">This means it can be either a standard time or a time that results from the application of an adjustment rule.</span></span> <span data-ttu-id="a8be6-700">通常、時刻が夏時間から標準時間に戻るように設定されている場合は、あいまいな時刻が返されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-700">Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.</span></span> <span data-ttu-id="a8be6-701">図については、「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-701">See the Example section for an illustration.</span></span>  
  
 <span data-ttu-id="a8be6-702">協定世界時 (UTC) にはあいまいな時刻がありません。夏時間をサポートしていないタイムゾーンはありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-702">Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.</span></span> <span data-ttu-id="a8be6-703">したがって、これらのタイムゾーンには調整規則がなく、<xref:System.TimeZoneInfo.IsAmbiguousTime%2A> メソッドの呼び出しは常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-703">Therefore, these time zones have no adjustment rules and calls to the <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> method always return `false`.</span></span>  
  
 <span data-ttu-id="a8be6-704">夏時間を観察するタイムゾーンの場合、このメソッドの正確な動作は、次の表に示すように、<xref:System.DateTime.Kind%2A> プロパティと <xref:System.TimeZoneInfo> オブジェクトの関係によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-704">For time zones that do observe daylight saving time, the precise behavior of this method depends on the relationship between the <xref:System.DateTime.Kind%2A> property and the <xref:System.TimeZoneInfo> object, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-705">TimeZoneInfo オブジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="a8be6-705">TimeZoneInfo object type</span></span>|<span data-ttu-id="a8be6-706">Kind プロパティ値</span><span class="sxs-lookup"><span data-stu-id="a8be6-706">Kind property value</span></span>|<span data-ttu-id="a8be6-707">動作</span><span class="sxs-lookup"><span data-stu-id="a8be6-707">Behavior</span></span>|  
|------------------------------|-------------------------|--------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="a8be6-708"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a8be6-708"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="a8be6-709">`dateTime` パラメーターがあいまいであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-709">Determines whether the `dateTime` parameter is ambiguous.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a8be6-710">`dateTime` を現地時刻に変換し、その時刻があいまいであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-710">Converts `dateTime` to the local time and then determines whether that time is ambiguous.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="a8be6-711"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType> または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a8be6-711"><xref:System.DateTimeKind.Utc?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType></span></span>|<span data-ttu-id="a8be6-712">`false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-712">Returns `false`.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a8be6-713">`dateTime` があいまいな場合、は標準時であると見なし、UTC に変換して `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-713">If `dateTime` is ambiguous, assumes it is a standard time, converts it to UTC, and returns `false`.</span></span>|  
|<span data-ttu-id="a8be6-714">その他のタイムゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-714">Any other time zone.</span></span>|<span data-ttu-id="a8be6-715"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> または <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a8be6-715"><xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Utc?displayProperty=nameWithType></span></span>|<span data-ttu-id="a8be6-716">`dateTime` を指定したタイムゾーンの時刻に変換し、その時刻があいまいであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-716">Converts `dateTime` to the time in the specified time zone and then determines whether that time is ambiguous.</span></span>|  
|<span data-ttu-id="a8be6-717">その他のタイムゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-717">Any other time zone.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a8be6-718">`dateTime` があいまいであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-718">Determines whether `dateTime` is ambiguous.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-719">太平洋標準時ゾーンでは、夏時間は午前2:00 に終了します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-719">In the Pacific Time zone, daylight saving time ends at 2:00 A.M.</span></span> <span data-ttu-id="a8be6-720">2007年11月4日。</span><span class="sxs-lookup"><span data-stu-id="a8be6-720">on November 4, 2007.</span></span> <span data-ttu-id="a8be6-721">次の例では、時刻を1分間隔で 12:59 A.M. から渡します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-721">The following example passes the time at one-minute intervals from 12:59 A.M.</span></span> <span data-ttu-id="a8be6-722">2007年11月4日から 2:01 A.M. まで</span><span class="sxs-lookup"><span data-stu-id="a8be6-722">on November 4, 2007, to 2:01 A.M.</span></span> <span data-ttu-id="a8be6-723">2007年11月4日に、太平洋標準時のタイムゾーンを表す <xref:System.TimeZoneInfo> オブジェクトの <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> メソッドにします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-723">on November 4, 2007, to the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone.</span></span> <span data-ttu-id="a8be6-724">コンソール出力は、すべての時刻が午前1:00 から始まることを示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-724">The console output indicates that all times from 1:00 A.M.</span></span> <span data-ttu-id="a8be6-725">2007年11月4日から 1:59 A.M. まで</span><span class="sxs-lookup"><span data-stu-id="a8be6-725">on November 4, 2007, to 1:59 A.M.</span></span> <span data-ttu-id="a8be6-726">2007年11月4日にはあいまいです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-726">on November 4, 2007, are ambiguous.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#8)]
 [!code-vb[System.TimeZone2.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-727"><see cref="P:System.DateTime.Kind" /> 値の <paramref name="dateTime" /> プロパティは <see cref="F:System.DateTimeKind.Local" /> で、<paramref name="dateTime" /> は無効な時刻です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-727">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> value is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="dateTime" /> is an invalid time.</span></span></exception>
        <altmember cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsAmbiguousTime">
      <MemberSignature Language="C#" Value="public bool IsAmbiguousTime (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAmbiguousTime(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsAmbiguousTime(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbiguousTime(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.IsAmbiguousTime : DateTimeOffset -&gt; bool" Usage="timeZoneInfo.IsAmbiguousTime dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a8be6-728">日付と時刻。</span><span class="sxs-lookup"><span data-stu-id="a8be6-728">A date and time.</span></span></param>
        <summary><span data-ttu-id="a8be6-729">特定のタイム ゾーンの特定の日付と時刻があいまいかどうか、および複数の世界協定時刻 (UTC) に割り当て可能かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-729">Determines whether a particular date and time in a particular time zone is ambiguous and can be mapped to two or more Coordinated Universal Time (UTC) times.</span></span></summary>
        <returns><span data-ttu-id="a8be6-730"><see langword="true" /> パラメーターが現在のタイム ゾーンであいまいな場合は <paramref name="dateTimeOffset" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-730"><see langword="true" /> if the <paramref name="dateTimeOffset" /> parameter is ambiguous in the current time zone; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-731">あいまいな時刻は、現在のタイムゾーンの時間範囲内にあります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-731">An ambiguous time falls within a range of times for the current time zone.</span></span> <span data-ttu-id="a8be6-732">これは、調整規則の適用によって生成される標準時間または時刻のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-732">This means that it can be either a standard time or a time that results from the application of an adjustment rule.</span></span> <span data-ttu-id="a8be6-733">通常、時刻が夏時間から標準時間に戻るように設定されている場合は、あいまいな時刻が返されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-733">Typically, ambiguous times result when the clock is set to return to standard time from daylight saving time.</span></span> <span data-ttu-id="a8be6-734">協定世界時 (UTC) にはあいまいな時刻がありません。夏時間をサポートしていないタイムゾーンはありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-734">Coordinated Universal Time (UTC) has no ambiguous times; neither do time zones that do not support daylight saving time.</span></span>  
  
 <span data-ttu-id="a8be6-735">メソッドの正確な動作は、`dateTimeOffset` パラメーターの <xref:System.DateTimeOffset.Offset%2A> プロパティと現在のタイムゾーンとの関係によって異なります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-735">The precise behavior of the method depends on the relationship between the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter and the current time zone.</span></span> <span data-ttu-id="a8be6-736"><xref:System.DateTimeOffset.Offset%2A> プロパティの値が、現在のタイムゾーンの UTC からのオフセットとして使用できる場合、メソッドは、その日付と時刻があいまいであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-736">If the value of the <xref:System.DateTimeOffset.Offset%2A> property is a possible offset from the UTC of the current time zone, the method determines whether that date and time is ambiguous.</span></span> <span data-ttu-id="a8be6-737">それ以外の場合は、`dateTimeOffset` を現在のタイムゾーンの時刻に変換し、その日付と時刻があいまいであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-737">Otherwise, it converts `dateTimeOffset` to the time in the current time zone, and then determines whether that date and time is ambiguous.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDaylightSavingTime">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8be6-738">指定された日付と時刻が、現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトのタイム ゾーンの夏時間の範囲内かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-738">Indicates whether a specified date and time falls in the range of daylight saving time for the current <see cref="T:System.TimeZoneInfo" /> object's time zone.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsDaylightSavingTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-739">日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="a8be6-739">A date and time value.</span></span></param>
        <summary><span data-ttu-id="a8be6-740">指定された日付と時刻が、現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトのタイム ゾーンの夏時間範囲内かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-740">Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="a8be6-741"><see langword="true" /> パラメーターが夏時間の範囲内の場合は <paramref name="dateTime" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-741"><see langword="true" /> if the <paramref name="dateTime" /> parameter is a daylight saving time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-742"><xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> の戻り値は、次の表に示すように、<xref:System.TimeZoneInfo> オブジェクトによって表されるタイムゾーンと `dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの関係によって影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-742">The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-743">TimeZoneInfo オブジェクト</span><span class="sxs-lookup"><span data-stu-id="a8be6-743">TimeZoneInfo object</span></span>|<span data-ttu-id="a8be6-744">DateTime. Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="a8be6-744">DateTime.Kind property</span></span>|<span data-ttu-id="a8be6-745">結果</span><span class="sxs-lookup"><span data-stu-id="a8be6-745">Result</span></span>|  
|-------------------------|----------------------------|------------|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Local`|<span data-ttu-id="a8be6-746">`dateTime` が夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-746">Determines whether `dateTime` is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Utc`|<span data-ttu-id="a8be6-747">`dateTime` を世界協定時刻 (UTC) から現地時刻に変換し、夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-747">Converts `dateTime` from Coordinated Universal Time (UTC) to local time and determines whether it is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|`DateTimeKind.Unspecified`|<span data-ttu-id="a8be6-748">`dateTime` が現地時刻を表し、夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-748">Assumes that `dateTime` represents local time and determines whether it is daylight saving time.</span></span>|  
|<xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType>|<span data-ttu-id="a8be6-749">`DateTimeKind.Local`、 `DateTimeKind.Unspecified`、または `DateTimeKind.Utc`</span><span class="sxs-lookup"><span data-stu-id="a8be6-749">`DateTimeKind.Local`, `DateTimeKind.Unspecified`, or `DateTimeKind.Utc`</span></span>|<span data-ttu-id="a8be6-750">`false` を返します (UTC は夏時間をサポートしていません)。</span><span class="sxs-lookup"><span data-stu-id="a8be6-750">Returns `false` (UTC does not support daylight saving time).</span></span>|  
|<span data-ttu-id="a8be6-751">その他の <xref:System.TimeZoneInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-751">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Local`|<span data-ttu-id="a8be6-752">現地時刻を <xref:System.TimeZoneInfo> オブジェクトの同等の時刻に変換し、その後、その後の時刻が夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-752">Converts the local time to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.</span></span>|  
|<span data-ttu-id="a8be6-753">その他の <xref:System.TimeZoneInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-753">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Utc`|<span data-ttu-id="a8be6-754">UTC を <xref:System.TimeZoneInfo> オブジェクトの同等の時刻に変換し、後者が夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-754">Converts UTC to the equivalent time of the <xref:System.TimeZoneInfo> object and then determines whether the latter is daylight saving time.</span></span>|  
|<span data-ttu-id="a8be6-755">その他の <xref:System.TimeZoneInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-755">Any other <xref:System.TimeZoneInfo> object.</span></span>|`DateTimeKind.Unspecified`|<span data-ttu-id="a8be6-756">`dateTime` が夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-756">Determines whether `dateTime` is daylight saving time.</span></span>|  
  
 <span data-ttu-id="a8be6-757"><xref:System.TimeZoneInfo> オブジェクトによって表されるタイムゾーンで夏時間がサポートされていない場合、メソッドは常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-757">If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`.</span></span> <span data-ttu-id="a8be6-758"><xref:System.TimeZoneInfo.Utc%2A>を含む多くのタイムゾーンは、夏時間を監視しません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-758">A number of time zones, including <xref:System.TimeZoneInfo.Utc%2A>, do not observe daylight saving time.</span></span>  <span data-ttu-id="a8be6-759">タイムゾーンで夏時間がサポートされているかどうかを確認するには、<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-759">To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 <span data-ttu-id="a8be6-760">`dateTime` パラメーターが、現在のオブジェクトのタイムゾーンであいまいな時刻を指定した場合、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> メソッドは `dateTime` を標準時として解釈し、その <xref:System.DateTime.Kind%2A> プロパティが <xref:System.DateTimeKind.Local?displayProperty=nameWithType> または <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>の場合は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-760">If the `dateTime` parameter specifies an ambiguous time in the current object's time zone, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method interprets `dateTime` as standard time and returns `false` if its <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a8be6-761"><xref:System.DateTime.Kind%2A> プロパティが <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>場合、このメソッドは正しいあいまいな時刻を選択し、それが夏時間であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-761">If the <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, this method will select the correct ambiguous time and indicate whether it is a daylight saving time.</span></span>  
  
 <span data-ttu-id="a8be6-762"><xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=nameWithType> メソッドは、あいまいな日付と時刻 (つまり、特定のタイムゾーンの標準時刻または夏時間を表す日付と時刻) に対して `false` を返すことができるため、<xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=nameWithType> メソッドを <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> メソッドと組み合わせて、時刻が夏時間かどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-762">Because the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29?displayProperty=nameWithType> method can return `false` for a date and time that is ambiguous (that is, a date and time that can represent either a standard time or a daylight saving time in a particular time zone), the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29?displayProperty=nameWithType> method can be paired with the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether a time may be a daylight saving time.</span></span> <span data-ttu-id="a8be6-763">あいまいな時刻は、夏時間と標準時間の両方になる可能性があるため、<xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> メソッドを最初に呼び出して、日付と時刻が夏時間であるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-763">Because an ambiguous time is one that can be both a daylight saving time and a standard time, the <xref:System.TimeZoneInfo.IsAmbiguousTime%28System.DateTime%29> method can be called first to determine whether a date and time may be a daylight saving time.</span></span> <span data-ttu-id="a8be6-764">メソッドが `false`を返す場合、<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> メソッドを呼び出して、<xref:System.DateTime> 値が夏時間であるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-764">If the method returns `false`, the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method can be called to determine whether the <xref:System.DateTime> value is a daylight saving time.</span></span> <span data-ttu-id="a8be6-765">次の例は、この手法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-765">The following example illustrates this technique.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#2)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#2)]  
  
 <span data-ttu-id="a8be6-766">`dateTime` パラメーターで無効な時刻が指定されている場合、`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの値が <xref:System.DateTimeKind.Local?displayProperty=nameWithType>の場合、メソッドの呼び出しで <xref:System.ArgumentException> がスローされます。それ以外の場合、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-766">If the `dateTime` parameter specifies an invalid time, the method call throws an <xref:System.ArgumentException> if the value of the `dateTime` parameter's <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>; otherwise, the method returns `false`.</span></span>  
  
 <span data-ttu-id="a8be6-767">タイムゾーンの <xref:System.TimeZoneInfo.StandardName%2A> 値を使用するか、タイムゾーン名を表示するときにその <xref:System.TimeZoneInfo.DaylightName%2A> 値を使用するかを決定するには、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-767">Call the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method to determine whether to use a time zone's <xref:System.TimeZoneInfo.StandardName%2A> value or its <xref:System.TimeZoneInfo.DaylightName%2A> value when displaying the time zone name.</span></span> <span data-ttu-id="a8be6-768">図については、「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-768">See the Example section for an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-769">次の例では、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> メソッドを使用してタイムゾーンの標準時名または夏時間名を表示するかどうかを決定する `DisplayDateWithTimeZoneName` という名前のメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-769">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8be6-770"><see cref="P:System.DateTime.Kind" /> 値の <paramref name="dateTime" /> プロパティは <see cref="F:System.DateTimeKind.Local" /> で、<paramref name="dateTime" /> は無効な時刻です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-770">The <see cref="P:System.DateTime.Kind" /> property of the <paramref name="dateTime" /> value is <see cref="F:System.DateTimeKind.Local" /> and <paramref name="dateTime" /> is an invalid time.</span></span></exception>
        <altmember cref="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime (DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime(valuetype System.DateTimeOffset dateTimeOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime(DateTimeOffset dateTimeOffset);" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : DateTimeOffset -&gt; bool" Usage="timeZoneInfo.IsDaylightSavingTime dateTimeOffset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffset"><span data-ttu-id="a8be6-771">日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="a8be6-771">A date and time value.</span></span></param>
        <summary><span data-ttu-id="a8be6-772">指定された日付と時刻が、現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトのタイム ゾーンの夏時間範囲内かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-772">Indicates whether a specified date and time falls in the range of daylight saving time for the time zone of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="a8be6-773"><see langword="true" /> パラメーターが夏時間の範囲内の場合は <paramref name="dateTimeOffset" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-773"><see langword="true" /> if the <paramref name="dateTimeOffset" /> parameter is a daylight saving time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-774"><xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> の戻り値は、<xref:System.TimeZoneInfo> オブジェクトによって表されるタイムゾーンと `dateTimeOffset` パラメーターの <xref:System.DateTimeOffset.Offset%2A> プロパティの関係によって影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-774">The return value of <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=nameWithType> is affected by the relationship between the time zone represented by the <xref:System.TimeZoneInfo> object and the <xref:System.DateTimeOffset.Offset%2A> property of the `dateTimeOffset` parameter.</span></span> <span data-ttu-id="a8be6-775">`dateTimeOffset` が、世界協定時刻 (UTC) からの現在のタイムゾーンのオフセットに対応していない場合、メソッドはその時刻を現在のタイムゾーンの時刻に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-775">If `dateTimeOffset` does not correspond to the current time zone's offset from Coordinated Universal Time (UTC), the method converts that time to the time in the current time zone.</span></span> <span data-ttu-id="a8be6-776">次に、その日付と時刻が夏時間かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-776">It then determines whether that date and time is a daylight saving time.</span></span>  
  
 <span data-ttu-id="a8be6-777"><xref:System.TimeZoneInfo> オブジェクトによって表されるタイムゾーンで夏時間がサポートされていない場合、メソッドは常に `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-777">If the time zone represented by the <xref:System.TimeZoneInfo> object does not support daylight saving time, the method always returns `false`.</span></span> <span data-ttu-id="a8be6-778">タイムゾーンで夏時間がサポートされているかどうかを確認するには、<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-778">To determine whether a time zone supports daylight saving time, retrieve the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalidTime">
      <MemberSignature Language="C#" Value="public bool IsInvalidTime (DateTime dateTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInvalidTime(valuetype System.DateTime dateTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInvalidTime(DateTime dateTime);" />
      <MemberSignature Language="F#" Value="member this.IsInvalidTime : DateTime -&gt; bool" Usage="timeZoneInfo.IsInvalidTime dateTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTime" Type="System.DateTime" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateTime"><span data-ttu-id="a8be6-779">日付と時刻の値。</span><span class="sxs-lookup"><span data-stu-id="a8be6-779">A date and time value.</span></span></param>
        <summary><span data-ttu-id="a8be6-780">指定された日付と時刻が無効かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-780">Indicates whether a particular date and time is invalid.</span></span></summary>
        <returns><span data-ttu-id="a8be6-781"><see langword="true" /> が無効の場合は <paramref name="dateTime" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-781"><see langword="true" /> if <paramref name="dateTime" /> is invalid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-782">無効な時間は、調整規則の適用により、世界協定時刻 (UTC) にマップできない現在のタイムゾーンの時間範囲内にあります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-782">An invalid time falls within a range of times for the current time zone that cannot be mapped to Coordinated Universal Time (UTC) due to the application of an adjustment rule.</span></span> <span data-ttu-id="a8be6-783">通常、時刻が夏時間の前に移動すると、無効な時刻が発生します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-783">Typically, invalid times occur when the time moves ahead for daylight saving time.</span></span> <span data-ttu-id="a8be6-784">図については、「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-784">See the Example section for an illustration.</span></span>  
  
 <span data-ttu-id="a8be6-785">`dateTime` パラメーターの <xref:System.DateTime.Kind%2A> プロパティの値は、次の表に示すように、`dateTime` が無効な時刻を表しているかどうかに影響します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-785">The value of the <xref:System.DateTime.Kind%2A> property of the `dateTime` parameter affects whether `dateTime` represents an invalid time, as the following table shows.</span></span>  
  
|<span data-ttu-id="a8be6-786">DateTime. Kind プロパティ</span><span class="sxs-lookup"><span data-stu-id="a8be6-786">DateTime.Kind property</span></span>|<span data-ttu-id="a8be6-787">TimeZoneInfo オブジェクト (該当する場合)</span><span class="sxs-lookup"><span data-stu-id="a8be6-787">TimeZoneInfo object (if applicable)</span></span>|<span data-ttu-id="a8be6-788">動作</span><span class="sxs-lookup"><span data-stu-id="a8be6-788">Behavior</span></span>|  
|----------------------------|-------------------------------------------|--------------|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>|<span data-ttu-id="a8be6-789">時刻が無効かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-789">Determines whether the time is invalid.</span></span>|  
|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|<span data-ttu-id="a8be6-790"><xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> またはローカルでないタイムゾーン。</span><span class="sxs-lookup"><span data-stu-id="a8be6-790"><xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> or a non-local time zone.</span></span>|<span data-ttu-id="a8be6-791">`dateTime` を <xref:System.TimeZoneInfo> オブジェクトの時刻に変換し `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-791">Converts `dateTime` to the time of the <xref:System.TimeZoneInfo> object and returns `false`.</span></span>|  
|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|<span data-ttu-id="a8be6-792">該当しない。</span><span class="sxs-lookup"><span data-stu-id="a8be6-792">Not applicable.</span></span>|<span data-ttu-id="a8be6-793">は `dateTime` が <xref:System.TimeZoneInfo> オブジェクトの時刻であると想定し、無効かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-793">Assumes `dateTime` is the time of the <xref:System.TimeZoneInfo> object and determines whether it is invalid.</span></span>|  
|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|<span data-ttu-id="a8be6-794">該当しない。</span><span class="sxs-lookup"><span data-stu-id="a8be6-794">Not applicable.</span></span>|<span data-ttu-id="a8be6-795">`false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-795">Returns `false`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-796">太平洋標準時ゾーンでは、夏時間は午前2:00 に開始されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-796">In the Pacific Time zone, daylight saving time begins at 2:00 A.M.</span></span> <span data-ttu-id="a8be6-797">2006年4月2日。</span><span class="sxs-lookup"><span data-stu-id="a8be6-797">on April 2, 2006.</span></span> <span data-ttu-id="a8be6-798">次のコードは、時刻を1分間隔で1:59 の午前から渡します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-798">The following code passes the time at one-minute intervals from 1:59 A.M.</span></span> <span data-ttu-id="a8be6-799">2006年4月2日、午前3:01 時に</span><span class="sxs-lookup"><span data-stu-id="a8be6-799">on April 2, 2006, to 3:01 A.M.</span></span> <span data-ttu-id="a8be6-800">2006年4月2日に、太平洋標準時のタイムゾーンを表す <xref:System.TimeZoneInfo> オブジェクトの <xref:System.TimeZoneInfo.IsInvalidTime%2A> メソッドにします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-800">on April 2, 2006, to the <xref:System.TimeZoneInfo.IsInvalidTime%2A> method of a <xref:System.TimeZoneInfo> object that represents the Pacific Time zone.</span></span> <span data-ttu-id="a8be6-801">コンソール出力は、すべての時刻が午前2:00 から始まることを示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-801">The console output indicates that all times from 2:00 A.M.</span></span> <span data-ttu-id="a8be6-802">2006年4月2日、午前2:59 時に</span><span class="sxs-lookup"><span data-stu-id="a8be6-802">on April 2, 2006, to 2:59 A.M.</span></span> <span data-ttu-id="a8be6-803">2006年4月2日には無効です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-803">on April 2, 2006, are invalid.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#9)]
 [!code-vb[System.TimeZone2.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.TimeZoneInfo.IsAmbiguousTime" />
      </Docs>
    </Member>
    <Member MemberName="Local">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo Local { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZoneInfo Local" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Local" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Local As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZoneInfo ^ Local { TimeZoneInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Local : TimeZoneInfo" Usage="System.TimeZoneInfo.Local" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8be6-804">ローカル タイム ゾーンを表す <see cref="T:System.TimeZoneInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-804">Gets a <see cref="T:System.TimeZoneInfo" /> object that represents the local time zone.</span></span></summary>
        <value><span data-ttu-id="a8be6-805">ローカル タイム ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-805">An object that represents the local time zone.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-806">ローカルタイムゾーンは、コードが実行されているコンピューターのタイムゾーンです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-806">The local time zone is the time zone on the computer where the code is executing.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8be6-807">ローカルタイムゾーンには、ローカルタイムゾーンを <xref:System.TimeZoneInfo> オブジェクト変数に割り当てるのではなく、常に <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> プロパティを使用してアクセスする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-807">You should always access the local time zone through the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property rather than assigning the local time zone to a <xref:System.TimeZoneInfo> object variable.</span></span> <span data-ttu-id="a8be6-808">これにより、<xref:System.TimeZoneInfo.ClearCachedData%2A> メソッドの呼び出しによって <xref:System.TimeZoneInfo> オブジェクト変数が無効になるのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-808">This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.</span></span>  
  
 <span data-ttu-id="a8be6-809">Windows システムでは、<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.TimeZoneInfo> オブジェクトは、コントロールパネルの**日付と時刻**のアプリケーションの **[夏時間の自動調整時間]** チェックボックスの設定を反映しています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-809">On Windows systems, the <xref:System.TimeZoneInfo> object returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property reflects the setting of the **Automatically adjust clock for Daylight Saving Time** checkbox in the Control Panel **Date and Time** application.</span></span> <span data-ttu-id="a8be6-810">チェックボックスがオフの場合、ローカルタイムゾーンのキャッシュされたコピーには夏時間情報が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-810">If the checkbox is unchecked, the cached copy of the local time zone contains no daylight saving time information.</span></span> <span data-ttu-id="a8be6-811">これによって、次のことが起こります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-811">This means that:</span></span>  
  
-   <span data-ttu-id="a8be6-812">ローカルタイムゾーンの <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> メソッドは、長さが0の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-812">The local time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A> method returns an array whose length is zero.</span></span>  
  
-   <span data-ttu-id="a8be6-813">ローカルタイムゾーンの <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> プロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-813">The local time zone's <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property returns `false`.</span></span>  
  
-   <span data-ttu-id="a8be6-814">ローカルタイムゾーンにあいまいまたは無効な時刻がありません (<xref:System.TimeZoneInfo.IsAmbiguousTime%2A> または <xref:System.TimeZoneInfo.IsInvalidTime%2A> のすべての呼び出しで `false`が返されます)。</span><span class="sxs-lookup"><span data-stu-id="a8be6-814">The local time zone has no ambiguous or invalid times (all calls to <xref:System.TimeZoneInfo.IsAmbiguousTime%2A> or <xref:System.TimeZoneInfo.IsInvalidTime%2A> return `false`).</span></span>  
  
-   <span data-ttu-id="a8be6-815">個々のローカル時刻で <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> を呼び出すと、すべて false が返されます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-815">All calls to <xref:System.TimeZoneInfo.IsDaylightSavingTime%2A> with individual local times return false.</span></span>  
  
 <span data-ttu-id="a8be6-816">ただし、ローカルタイムゾーンへの参照が <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> メソッドを使用して取得された場合、これは当てはまりません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-816">This is not true, however, if a reference to the local time zone is retrieved using the <xref:System.TimeZoneInfo.FindSystemTimeZoneById%2A> method.</span></span>  
  
 <span data-ttu-id="a8be6-817"><xref:System.TimeZoneInfo.Local%2A> プロパティは、<xref:System.TimeZone> クラスの <xref:System.TimeZone.CurrentTimeZone%2A> プロパティに対応します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-817">The <xref:System.TimeZoneInfo.Local%2A> property corresponds to the <xref:System.TimeZone.CurrentTimeZone%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-818">次の例では、ローカルタイムゾーンを表す <xref:System.TimeZoneInfo> オブジェクトを取得し、その表示名、標準時名、および夏時間名を出力します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-818">The following example retrieves a <xref:System.TimeZoneInfo> object that represents the local time zone and outputs its display name, standard time name, and daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/ShowTimeZoneNames1.cs#2)]
 [!code-vb[System.TimeZone2.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/ShowTimeZoneNames1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/datetime/access-utc-and-local.md"><span data-ttu-id="a8be6-819">方法 : 定義済みの UTC オブジェクトおよびローカル タイム ゾーン オブジェクトにアクセスする</span><span class="sxs-lookup"><span data-stu-id="a8be6-819">How to: Access the Predefined UTC and Local Time Zone Objects</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StandardName">
      <MemberSignature Language="C#" Value="public string StandardName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardName" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.StandardName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StandardName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardName : string" Usage="System.TimeZoneInfo.StandardName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8be6-820">タイム ゾーンの標準時の表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-820">Gets the display name for the time zone's standard time.</span></span></summary>
        <value><span data-ttu-id="a8be6-821">タイム ゾーンの標準時間の表示名。</span><span class="sxs-lookup"><span data-stu-id="a8be6-821">The display name of the time zone's standard time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-822">表示名は、Windows オペレーティングシステムと共にインストールされたカルチャに基づいてローカライズされます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-822">The display name is localized based on the culture installed with the Windows operating system.</span></span>  
  
 <span data-ttu-id="a8be6-823"><xref:System.TimeZoneInfo.StandardName%2A> プロパティは、<xref:System.TimeZone> クラスの <xref:System.TimeZone.StandardName%2A> プロパティと同じです。</span><span class="sxs-lookup"><span data-stu-id="a8be6-823">The <xref:System.TimeZoneInfo.StandardName%2A> property is identical to the <xref:System.TimeZone.StandardName%2A> property of the <xref:System.TimeZone> class.</span></span>  
  
 <span data-ttu-id="a8be6-824">オペレーティングシステムの言語が英語の場合、<xref:System.TimeZoneInfo.StandardName%2A> プロパティの値は通常、<xref:System.TimeZoneInfo.Id%2A> プロパティの値と同じですが、常にではありません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-824">If the operating system language is English, the value of the <xref:System.TimeZoneInfo.StandardName%2A> property is usually, but not always, identical to that of the <xref:System.TimeZoneInfo.Id%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-825">次の例では、<xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> メソッドを使用してタイムゾーンの標準時名または夏時間名を表示するかどうかを決定する `DisplayDateWithTimeZoneName` という名前のメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-825">The following example defines a method named `DisplayDateWithTimeZoneName` that uses the <xref:System.TimeZoneInfo.IsDaylightSavingTime%28System.DateTime%29> method to determine whether to display a time zone's standard time name or daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/cs/IsDaylightSavingTime.cs#1)]
 [!code-vb[System.TimeZone2.IsDaylightSavingTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.IsDaylightSavingTime/vb/IsDaylightSavingTime.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool SupportsDaylightSavingTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDaylightSavingTime" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.SupportsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsDaylightSavingTime As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsDaylightSavingTime { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDaylightSavingTime : bool" Usage="System.TimeZoneInfo.SupportsDaylightSavingTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8be6-826">タイム ゾーンに夏時間規則があるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-826">Gets a value indicating whether the time zone has any daylight saving time rules.</span></span></summary>
        <value><span data-ttu-id="a8be6-827">タイム ゾーンが夏時間をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a8be6-827"><see langword="true" /> if the time zone supports daylight saving time; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-828"><xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> プロパティによって返されるローカルタイムゾーンの <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> プロパティの値には、コントロールパネルの**日付と時刻**のアプリケーションのチェックボックスの設定が反映されます。これは、システムが夏時間を自動的に調整するかどうかを定義します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-828">The value of the <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A> property for the local time zone returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property reflects the setting of the Control Panel **Date and Time** application's checkbox that defines whether the system automatically adjusts for daylight saving time.</span></span> <span data-ttu-id="a8be6-829">このチェックボックスがオフになっている場合、またはタイムゾーンに対してチェックボックスが表示されない場合は、このプロパティの値が `false`ます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-829">If it is unchecked, or if no checkbox is displayed for a time zone, the value of this property is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-830">次の例では、ローカルシステムで使用できるすべてのタイムゾーンのコレクションを取得し、夏時間をサポートしていない名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-830">The following example retrieves a collection of all time zones that are available on a local system and displays the names of those that do not support daylight saving time.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#4)]
 [!code-vb[System.TimeZone2.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="a8be6-831">コールバックを開始したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-831">The object that initiated the callback.</span></span> <span data-ttu-id="a8be6-832">このパラメーターの機能は、現在実装されていません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-832">The functionality for this parameter is not currently implemented.</span></span></param>
        <summary><span data-ttu-id="a8be6-833">オブジェクトの逆シリアル化の完了後に実行します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-833">Runs when the deserialization of an object has been completed.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="a8be6-834"><see cref="T:System.TimeZoneInfo" /> オブジェクトには、無効なデータまたは破損したデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="a8be6-834">The <see cref="T:System.TimeZoneInfo" /> object contains invalid or corrupted data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="a8be6-835">データを読み込む先の <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-835">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="a8be6-836">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</span><span class="sxs-lookup"><span data-stu-id="a8be6-836">The destination for this serialization (see <see cref="T:System.Runtime.Serialization.StreamingContext" />).</span></span></param>
        <summary><span data-ttu-id="a8be6-837"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトをシリアル化するために必要なすべてのデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-837">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8be6-838"><paramref name="info" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-838">The <paramref name="info" /> parameter is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a8be6-839">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="a8be6-839">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="a8be6-840">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-840">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ToSerializedString">
      <MemberSignature Language="C#" Value="public string ToSerializedString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToSerializedString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ToSerializedString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToSerializedString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToSerializedString();" />
      <MemberSignature Language="F#" Value="member this.ToSerializedString : unit -&gt; string" Usage="timeZoneInfo.ToSerializedString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8be6-841">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトをシリアル化された文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-841">Converts the current <see cref="T:System.TimeZoneInfo" /> object to a serialized string.</span></span></summary>
        <returns><span data-ttu-id="a8be6-842">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="a8be6-842">A string that represents the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-843">通常、Windows システムのレジストリで定義されていないタイムゾーンや Linux および macOScan の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)に依存するアプリケーションでは、<xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> メソッドを使用して、<xref:System.TimeZoneInfo> オブジェクトとして必要なタイムゾーンをインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-843">Applications that rely on time zones that are not typically defined in the registry of Windows systems or the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOScan can use the <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> method to instantiate the necessary time zones as <xref:System.TimeZoneInfo> objects.</span></span> <span data-ttu-id="a8be6-844">その後、アプリケーションは <xref:System.TimeZoneInfo.ToSerializedString%2A> メソッドを呼び出して、タイムゾーンオブジェクトを文字列に変換できます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-844">The application can then call the <xref:System.TimeZoneInfo.ToSerializedString%2A> method to convert the time zone object to a string.</span></span>  
  
 <span data-ttu-id="a8be6-845"><xref:System.TimeZoneInfo> オブジェクトは、アプリケーションが必要に応じて取得できる場所にも格納する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-845">The <xref:System.TimeZoneInfo> object should also be stored in a location where the application can retrieve it when needed.</span></span> <span data-ttu-id="a8be6-846">次の場所が考えられます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-846">Possible locations include:</span></span>  
  
-   <span data-ttu-id="a8be6-847">Windows システム上のレジストリ。</span><span class="sxs-lookup"><span data-stu-id="a8be6-847">The registry on Windows systems.</span></span>  
  
-   <span data-ttu-id="a8be6-848">アプリケーションリソースファイル。</span><span class="sxs-lookup"><span data-stu-id="a8be6-848">An application resource file.</span></span>  
  
-   <span data-ttu-id="a8be6-849">テキストファイルなどの外部ファイル。</span><span class="sxs-lookup"><span data-stu-id="a8be6-849">An external file, such as a text file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-850">次の例では、ローカルシステムから南極/南部のタイムゾーンを取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-850">The following example tries to retrieve the Antarctica/South Pole time zone from the local system.</span></span> <span data-ttu-id="a8be6-851">失敗した場合、コードはアプリケーションディレクトリ内のテキストファイルからタイムゾーンに関する情報を取得しようとします。</span><span class="sxs-lookup"><span data-stu-id="a8be6-851">If it fails, the code tries to retrieve information about the time zone from a text file in the application directory.</span></span> <span data-ttu-id="a8be6-852">この試行が失敗した場合、コードはタイムゾーンを作成し、それに関する情報をテキストファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-852">If this attempt fails, the code creates the time zone and writes information about it to the text file.</span></span>  
  
 [!code-csharp[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/cs/System.TimeZone2.CreateTimeZone.cs#4)]
 [!code-vb[System.TimeZone2.CreateTimeZone#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.CreateTimeZone/vb/System.TimeZone2.CreateTimeZone.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.FromSerializedString(System.String)" />
        <related type="Article" href="~/docs/standard/datetime/save-time-zones-to-an-embedded-resource.md"><span data-ttu-id="a8be6-853">方法 : 埋め込みリソースにタイム ゾーンを保存する</span><span class="sxs-lookup"><span data-stu-id="a8be6-853">How to: Save Time Zones to an Embedded Resource</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timeZoneInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8be6-854">現在の <see cref="T:System.TimeZoneInfo" /> オブジェクトの表示名を返します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-854">Returns the current <see cref="T:System.TimeZoneInfo" /> object's display name.</span></span></summary>
        <returns><span data-ttu-id="a8be6-855">現在の <see cref="P:System.TimeZoneInfo.DisplayName" /> オブジェクトの <see cref="T:System.TimeZoneInfo" /> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="a8be6-855">The value of the <see cref="P:System.TimeZoneInfo.DisplayName" /> property of the current <see cref="T:System.TimeZoneInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-856"><xref:System.Windows.Forms.ListBox> コントロールなどのリストコントロールに <xref:System.TimeZoneInfo> オブジェクトを含むコレクションを割り当てると、コントロールは <xref:System.TimeZoneInfo.ToString%2A> メソッドを自動的に呼び出して、リストに表示される各オブジェクトを記述する文字列を抽出します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-856">When assigning a collection that contains <xref:System.TimeZoneInfo> objects to a list control such as the <xref:System.Windows.Forms.ListBox> control, the control automatically calls the <xref:System.TimeZoneInfo.ToString%2A> method to extract a string that describes each object to be represented in the list.</span></span> <span data-ttu-id="a8be6-857">その結果、オブジェクトのわかりやすい説明を文字列として格納する必要がなく、ユーザーはその文字列を使用してコレクションからオブジェクトを抽出する必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-857">As a result, you do not need to store a meaningful description of the object as a string, and the user does not need to use that string to extract the object from the collection.</span></span> <span data-ttu-id="a8be6-858">詳細については[、「方法: コンピューター上に存在するタイムゾーンを列挙する](~/docs/standard/datetime/enumerate-time-zones.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8be6-858">See [How to: Enumerate Time Zones Present on a Computer](~/docs/standard/datetime/enumerate-time-zones.md) for more detail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utc">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo Utc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.TimeZoneInfo Utc" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.Utc" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Utc As TimeZoneInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeZoneInfo ^ Utc { TimeZoneInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Utc : TimeZoneInfo" Usage="System.TimeZoneInfo.Utc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8be6-859">世界協定時刻 (UTC) ゾーンを表す <see cref="T:System.TimeZoneInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-859">Gets a <see cref="T:System.TimeZoneInfo" /> object that represents the Coordinated Universal Time (UTC) zone.</span></span></summary>
        <value><span data-ttu-id="a8be6-860">世界協定時刻 (UTC) ゾーンを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a8be6-860">An object that represents the Coordinated Universal Time (UTC) zone.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8be6-861">これは組み込みのオブジェクトです。この <xref:System.TimeZoneInfo> オブジェクトに関する情報は、Windows システムのレジストリ、および Linux および macOS の[ICU ライブラリ](http://userguide.icu-project.org/datetime/timezone)からは取得されません。</span><span class="sxs-lookup"><span data-stu-id="a8be6-861">This is a built-in object; information about this <xref:System.TimeZoneInfo> object is not retrieved from the registry on Windows systems and from the [ICU Library](http://userguide.icu-project.org/datetime/timezone) on Linux and macOS.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8be6-862">UTC タイムゾーンを <xref:System.TimeZoneInfo> オブジェクト変数に割り当てるのではなく、常に <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> プロパティを使用して世界協定時刻 (UTC) ゾーンにアクセスする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8be6-862">You should always access the Coordinated Universal Time (UTC) zone through the <xref:System.TimeZoneInfo.Utc%2A?displayProperty=nameWithType> property rather than assigning the UTC time zone to a <xref:System.TimeZoneInfo> object variable.</span></span> <span data-ttu-id="a8be6-863">これにより、<xref:System.TimeZoneInfo.ClearCachedData%2A> メソッドの呼び出しによって <xref:System.TimeZoneInfo> オブジェクト変数が無効になるのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="a8be6-863">This prevents the <xref:System.TimeZoneInfo> object variable from being invalidated by a call to the <xref:System.TimeZoneInfo.ClearCachedData%2A> method.</span></span>  
  
 <span data-ttu-id="a8be6-864">協定世界時は、以前はグリニッジ標準時 (GMT) と呼ばれていました。</span><span class="sxs-lookup"><span data-stu-id="a8be6-864">Coordinated Universal Time was previously known as Greenwich Mean Time (GMT).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8be6-865">次の例では、世界協定時刻 (UTC) を表す <xref:System.TimeZoneInfo> オブジェクトを取得し、その表示名、標準時名、および夏時間名を出力します。</span><span class="sxs-lookup"><span data-stu-id="a8be6-865">The following example retrieves a <xref:System.TimeZoneInfo> object that represents Coordinated Universal Time (UTC) and outputs its display name, standard time name, and daylight saving time name.</span></span>  
  
 [!code-csharp[System.TimeZone2.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.Class/CS/TimeZone2_Examples.cs#3)]
 [!code-vb[System.TimeZone2.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.Class/VB/TimeZone2_Examples.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/datetime/access-utc-and-local.md"><span data-ttu-id="a8be6-866">方法 : 定義済みの UTC オブジェクトおよびローカル タイム ゾーン オブジェクトにアクセスする</span><span class="sxs-lookup"><span data-stu-id="a8be6-866">How to: Access the Predefined UTC and Local Time Zone Objects</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
