<Type Name="Byte" FullName="System.Byte">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bbb9790437498c0e746d2a77c241723b3f0054a8" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73399995" /></Metadata><TypeSignature Language="C#" Value="public struct Byte : IComparable, IComparable&lt;byte&gt;, IConvertible, IEquatable&lt;byte&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int8 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int8&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int8&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Byte" />
  <TypeSignature Language="VB.NET" Value="Public Structure Byte&#xA;Implements IComparable, IComparable(Of Byte), IConvertible, IEquatable(Of Byte), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Byte : IComparable, IComparable&lt;System::Byte&gt;, IConvertible, IEquatable&lt;System::Byte&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type byte = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Byte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Byte&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ba3de-101">8 ビット符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-101">Represents an 8-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-102"><xref:System.Byte> は、0 (<xref:System.Byte.MinValue?displayProperty=nameWithType> 定数で表されます) から 255 (<xref:System.Byte.MaxValue?displayProperty=nameWithType> 定数で表されます) までの値を持つ符号なし整数を表す、変更できない値型です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-102"><xref:System.Byte> is an immutable value type that represents unsigned integers with values that range from 0 (which is represented by the <xref:System.Byte.MinValue?displayProperty=nameWithType> constant) to 255 (which is represented by the <xref:System.Byte.MaxValue?displayProperty=nameWithType> constant).</span></span> <span data-ttu-id="ba3de-103">.NET Framework には、-128 ~ 127 の範囲の値を表す、<xref:System.SByte>の符号付き8ビット整数値型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-103">The .NET Framework also includes a signed 8-bit integer value type, <xref:System.SByte>, which represents values that range from -128 to 127.</span></span>  
  
## <a name="instantiating-a-byte-value"></a><span data-ttu-id="ba3de-104">バイト値のインスタンス化</span><span class="sxs-lookup"><span data-stu-id="ba3de-104">Instantiating a Byte Value</span></span>  
 <span data-ttu-id="ba3de-105"><xref:System.Byte> 値は、いくつかの方法でインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-105">You can instantiate a <xref:System.Byte> value in several ways:</span></span>  
  
-   <span data-ttu-id="ba3de-106"><xref:System.Byte> 変数を宣言し、<xref:System.Byte> データ型の範囲内のリテラル整数値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-106">You can declare a <xref:System.Byte> variable and assign it a literal integer value that is within the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="ba3de-107">次の例では、2つの <xref:System.Byte> 変数を宣言し、その値をこのように代入します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-107">The following example declares two <xref:System.Byte> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Byte.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs#1)]
     [!code-vb[System.Byte.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb#1)]  
  
-   <span data-ttu-id="ba3de-108">バイト以外の数値をバイトに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-108">You can assign a non-byte numeric value to a byte.</span></span> <span data-ttu-id="ba3de-109">これは縮小変換であるため、のキャスト演算子C#と、`Option Strict` がオンの場合の Visual Basic の変換メソッドが必要です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-109">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="ba3de-110">バイト以外の値が <xref:System.Single>、<xref:System.Double>、または小数部分を含む <xref:System.Decimal> 値の場合、その小数部の処理は、変換を実行するコンパイラによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-110">If the non-byte value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="ba3de-111">次の例では、<xref:System.Byte> 変数にいくつかの数値を代入します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-111">The following example assigns several numeric values to <xref:System.Byte> variables.</span></span>  
  
     [!code-csharp[System.Byte.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs#2)]
     [!code-vb[System.Byte.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb#2)]  
  
-   <span data-ttu-id="ba3de-112"><xref:System.Convert> クラスのメソッドを呼び出して、サポートされている任意の型を <xref:System.Byte> 値に変換できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-112">You can call a method of the <xref:System.Convert> class to convert any supported type to a <xref:System.Byte> value.</span></span> <span data-ttu-id="ba3de-113">これは、<xref:System.Byte> が <xref:System.IConvertible> インターフェイスをサポートしているために発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-113">This is possible because <xref:System.Byte> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-114">次の例は、<xref:System.Int32> 値の配列を <xref:System.Byte> 値に変換する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-114">The following example illustrates the conversion of an array of <xref:System.Int32> values to <xref:System.Byte> values.</span></span>  
  
     [!code-csharp[System.Convert.ToByte#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.tobyte/cs/tobyte1.cs#4)]
     [!code-vb[System.Convert.ToByte#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.tobyte/vb/tobyte1.vb#4)]  
  
-   <span data-ttu-id="ba3de-115"><xref:System.Byte.Parse%2A> または <xref:System.Byte.TryParse%2A> メソッドを呼び出して、<xref:System.Byte> 値の文字列形式を <xref:System.Byte>に変換することができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-115">You can call the <xref:System.Byte.Parse%2A> or <xref:System.Byte.TryParse%2A> method to convert the string representation of a <xref:System.Byte> value to a <xref:System.Byte>.</span></span> <span data-ttu-id="ba3de-116">文字列には、10進数または16進数のいずれかを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-116">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="ba3de-117">次の例は、10進数と16進数の文字列の両方を使用した解析操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-117">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Byte.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.instantiation/cs/byteinstantiation1.cs#3)]
     [!code-vb[System.Byte.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.instantiation/vb/byteinstantiate1.vb#3)]  
  
## <a name="performing-operations-on-byte-values"></a><span data-ttu-id="ba3de-118">バイト値に対する操作の実行</span><span class="sxs-lookup"><span data-stu-id="ba3de-118">Performing Operations on Byte Values</span></span>  
 <span data-ttu-id="ba3de-119"><xref:System.Byte> 型は、加算、減算、除算、乗算、減算、否定、単項否定などの標準的な数値演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-119">The <xref:System.Byte> type supports standard mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="ba3de-120">他の整数型と同様に、<xref:System.Byte> 型では、ビットごとの `AND`、`OR`、`XOR`、左シフト、右シフト演算子もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-120">Like the other integral types, the <xref:System.Byte> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="ba3de-121">標準の数値演算子を使用して2つの <xref:System.Byte> 値を比較することも、<xref:System.Byte.CompareTo%2A> または <xref:System.Byte.Equals%2A> メソッドを呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-121">You can use the standard numeric operators to compare two <xref:System.Byte> values, or you can call the <xref:System.Byte.CompareTo%2A> or <xref:System.Byte.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="ba3de-122">また、<xref:System.Math> クラスのメンバーを呼び出して、数値の絶対値を取得したり、整数の除算から商と剰余を計算したり、2の最大値または最小値を決定したりするなど、さまざまな数値演算を実行することもできます。整数。数値の符号を取得し、数値を丸めます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-122">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-a-byte-as-a-string"></a><span data-ttu-id="ba3de-123">バイトを文字列として表す</span><span class="sxs-lookup"><span data-stu-id="ba3de-123">Representing a Byte as a String</span></span>  
 <span data-ttu-id="ba3de-124"><xref:System.Byte> 型は、標準およびカスタムの数値書式指定文字列を完全にサポートします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-124">The <xref:System.Byte> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="ba3de-125">(詳細については、「[書式設定型](~/docs/standard/base-types/formatting-types.md)」、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」、および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください)。ただし、ほとんどの場合、バイト値は、追加の書式設定や2桁の16進値としてではなく、1桁から3桁の値として表されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-125">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).) However, most commonly, byte values are represented as one-digit to three-digit values without any additional formatting, or as two-digit hexadecimal values.</span></span>  
  
 <span data-ttu-id="ba3de-126"><xref:System.Byte> 値を、先行ゼロを含まない整数文字列として書式設定するには、パラメーターなしの <xref:System.Byte.ToString> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-126">To format a <xref:System.Byte> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Byte.ToString> method.</span></span> <span data-ttu-id="ba3de-127">"D" 書式指定子を使用すると、指定した数の先行ゼロを文字列形式で含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-127">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="ba3de-128">"X" 書式指定子を使用すると、<xref:System.Byte> 値を16進数文字列として表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-128">By using the "X" format specifier, you can represent a <xref:System.Byte> value as a hexadecimal string.</span></span> <span data-ttu-id="ba3de-129">次の例では、これら3つの方法で <xref:System.Byte> 値の配列の要素の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-129">The following example formats the elements in an array of <xref:System.Byte> values in these three ways.</span></span>  
  
 [!code-csharp[System.Byte.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.formatting/cs/formatting1.cs#1)]
 [!code-vb[System.Byte.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.formatting/vb/formatting1.vb#1)]  
  
 <span data-ttu-id="ba3de-130">また、<xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> メソッドを呼び出し、メソッドの2番目のパラメーターとして base を指定することによって、<xref:System.Byte> 値をバイナリ、8進数、10進数、または16進数の文字列として書式設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-130">You can also format a <xref:System.Byte> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Byte%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="ba3de-131">次の例では、このメソッドを呼び出して、バイト値の配列のバイナリ、8進数、および16進数表現を表示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-131">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of byte values.</span></span>  
  
 [!code-csharp[System.Byte.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.formatting/cs/formatting1.cs#2)]
 [!code-vb[System.Byte.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.formatting/vb/formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-byte-values"></a><span data-ttu-id="ba3de-132">10進数以外のバイト値の使用</span><span class="sxs-lookup"><span data-stu-id="ba3de-132">Working with Non-Decimal Byte Values</span></span>  
 <span data-ttu-id="ba3de-133">個々のバイトを10進値として操作するだけでなく、バイト値を使用してビットごとの演算を実行したり、バイト配列を使用したり、バイト値のバイナリ表現または16進表現で操作したりすることもできます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-133">In addition to working with individual bytes as decimal values, you may want to perform bitwise operations with byte values, or work with byte arrays or with the binary or hexadecimal representations of byte values.</span></span> <span data-ttu-id="ba3de-134">たとえば、<xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> メソッドのオーバーロードでは、各プリミティブデータ型をバイト配列に変換できます。また、<xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> メソッドは <xref:System.Numerics.BigInteger> 値をバイト配列に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-134">For example, overloads of the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method can convert each of the primitive data types to a byte array, and the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method converts a <xref:System.Numerics.BigInteger> value to a byte array.</span></span>  
  
 <span data-ttu-id="ba3de-135"><xref:System.Byte> 値は、符号ビットを使用せずに、その大きさだけで8ビットで表されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-135"><xref:System.Byte> values are represented in 8 bits by their magnitude only, without a sign bit.</span></span> <span data-ttu-id="ba3de-136">これは、<xref:System.Byte> 値に対してビットごとの演算を実行する場合や、個々のビットを操作する場合に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-136">This is important to keep in mind when you perform bitwise operations on <xref:System.Byte> values or when you work with individual bits.</span></span> <span data-ttu-id="ba3de-137">数値、ブール値、または比較演算を任意の2つの非10進値に対して実行するには、両方の値が同じ表現を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-137">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 <span data-ttu-id="ba3de-138">2つの <xref:System.Byte> 値に対して演算が実行されると、値は同じ表現を共有するため、結果は正確になります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-138">When an operation is performed on two <xref:System.Byte> values, the values share the same representation, so the result is accurate.</span></span> <span data-ttu-id="ba3de-139">これを次の例に示します。この例では、<xref:System.Byte> 値の最下位ビットがマスクされていることを確認しています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-139">This is illustrated in the following example, which masks the lowest-order bit of a <xref:System.Byte> value to ensure that it is even.</span></span>  
  
 [!code-csharp[System.Byte.Bitwise#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.bitwise/cs/bitwise1.cs#1)]
 [!code-vb[System.Byte.Bitwise#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.bitwise/vb/bitwise1.vb#1)]  
  
 <span data-ttu-id="ba3de-140">一方、符号なしのビットと符号付きビットの両方を扱う場合、<xref:System.SByte> 値は正の値に対して符号と大きさの表現を使用し、負の値に対して2つの補数表現を使用するため、ビットごとの演算は複雑になります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-140">On the other hand, when you work with both unsigned and signed bits, bitwise operations are complicated by the fact that the <xref:System.SByte> values use sign-and-magnitude representation for positive values, and two's complement representation for negative values.</span></span> <span data-ttu-id="ba3de-141">意味のあるビットごとの演算を実行するには、値を等価の2つの表現に変換し、符号ビットに関する情報を保持する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-141">In order to perform a meaningful bitwise operation, the values must be converted to two equivalent representations, and information about the sign bit must be preserved.</span></span> <span data-ttu-id="ba3de-142">次の例では、8ビットの符号付きおよび符号なしの値の配列のビット2と4をマスクアウトします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-142">The following example does this to mask out bits 2 and 4 of an array of 8-bit signed and unsigned values.</span></span>  
  
 [!code-csharp[System.Byte.Bitwise#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.bitwise/cs/bitwise2.cs#2)]
 [!code-vb[System.Byte.Bitwise#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.bitwise/vb/bitwise2.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ba3de-143">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="ba3de-143">All members of this type are thread safe.</span></span> <span data-ttu-id="ba3de-144">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-144">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="ba3de-145">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-145">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.SByte" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IFormattable" />
    <altmember cref="T:System.IConvertible" />
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="ba3de-146">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="ba3de-146">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
    <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="ba3de-147">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="ba3de-147">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba3de-148">指定したオブジェクトまたは <see cref="T:System.Byte" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-148">Compares this instance to a specified object or <see cref="T:System.Byte" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.CompareTo(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Byte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Byte value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : byte -&gt; int&#xA;override this.CompareTo : byte -&gt; int" Usage="byte.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba3de-149">比較対象の 8 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="ba3de-149">An 8-bit unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="ba3de-150">指定した 8 ビット符号なし整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-150">Compares this instance to a specified 8-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="ba3de-151">このインスタンスと <paramref name="value" /> の相対順序を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="ba3de-151">A signed integer that indicates the relative order of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ba3de-152">戻り値</span><span class="sxs-lookup"><span data-stu-id="ba3de-152">Return Value</span></span> 
 </term><description> <span data-ttu-id="ba3de-153">説明</span><span class="sxs-lookup"><span data-stu-id="ba3de-153">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ba3de-154">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="ba3de-154">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ba3de-155">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-155">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ba3de-156">0</span><span class="sxs-lookup"><span data-stu-id="ba3de-156">Zero</span></span> 
 </term><description> <span data-ttu-id="ba3de-157">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-157">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ba3de-158">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="ba3de-158">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ba3de-159">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-159">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-160">このメソッドは、<xref:System.IComparable%601?displayProperty=nameWithType> インターフェイスを実装し、`value` パラメーターをオブジェクトに変換する必要がないため、<xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType> メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-160">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Byte.CompareTo%28System.Object%29?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="ba3de-161">プログラミング言語によっては、パラメーターの型がインスタンスの型よりも少ない (幅が狭い) <xref:System.Byte.CompareTo%2A> メソッドをコーディングすることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-161">Depending on your programming language, it might be possible to code a <xref:System.Byte.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="ba3de-162">これが可能なのは、一部のプログラミング言語では、インスタンスと同数のビットを持つ型として、パラメーターを表す暗黙的な拡大変換が実行されるためです。</span><span class="sxs-lookup"><span data-stu-id="ba3de-162">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="ba3de-163">たとえば、インスタンスの型が <xref:System.Int32> で、パラメーターの型が <xref:System.Byte>であるとします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-163">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="ba3de-164">Microsoft C#コンパイラは、パラメーターの値を <xref:System.Int32>として表す命令を生成し、<xref:System.Int32> インスタンスと <xref:System.Int32> パラメーター表現の値を比較する <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> メソッドを生成します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-164">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="ba3de-165">プログラミング言語のドキュメントを参照して、コンパイラが数値型の暗黙的な拡大変換を実行するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-165">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-166">次のコード例は、いくつかの値および参照型について、`CompareTo` メソッドのジェネリックおよび非ジェネリックバージョンを示しています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-166">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="byte.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba3de-167">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba3de-167">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ba3de-168">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-168">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="ba3de-169">このインスタンスと <paramref name="value" /> の相対順序を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="ba3de-169">A signed integer that indicates the relative order of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ba3de-170">戻り値</span><span class="sxs-lookup"><span data-stu-id="ba3de-170">Return Value</span></span> 
 </term><description> <span data-ttu-id="ba3de-171">説明</span><span class="sxs-lookup"><span data-stu-id="ba3de-171">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ba3de-172">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="ba3de-172">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ba3de-173">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-173">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ba3de-174">0</span><span class="sxs-lookup"><span data-stu-id="ba3de-174">Zero</span></span> 
 </term><description> <span data-ttu-id="ba3de-175">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-175">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ba3de-176">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="ba3de-176">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ba3de-177">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-177">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="ba3de-178">- または -</span><span class="sxs-lookup"><span data-stu-id="ba3de-178">-or-</span></span> 
 <span data-ttu-id="ba3de-179"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-179"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-180">`value` は `null` または <xref:System.Byte>のインスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-180">`value` must be `null` or an instance of <xref:System.Byte>; otherwise, an exception is thrown.</span></span>  
  
 <span data-ttu-id="ba3de-181"><xref:System.Byte>のインスタンスは、その値に関係なく、`null`よりも大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-181">Any instance of <xref:System.Byte>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="ba3de-182">このメソッドは、<xref:System.IComparable> インターフェイスをサポートするために実装されています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-182">This method is implemented to support the <xref:System.IComparable> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-183">次のコード例は、<xref:System.Byte.CompareTo%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-183">The following code example demonstrates the <xref:System.Byte.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[System.Byte Examples#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#3)]
 [!code-csharp[System.Byte Examples#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#3)]
 [!code-vb[System.Byte Examples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba3de-184"><paramref name="value" /> が <see cref="T:System.Byte" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-184"><paramref name="value" /> is not a <see cref="T:System.Byte" />.</span></span></exception>
        <altmember cref="T:System.ArgumentException" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba3de-185"><see cref="T:System.Byte" /> の 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-185">Returns a value indicating whether two instances of <see cref="T:System.Byte" /> represent the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (byte obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int8 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Equals(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Byte obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : byte -&gt; bool" Usage="byte.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Byte" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ba3de-186">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-186">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="ba3de-187">このインスタンスと指定した <see cref="T:System.Byte" /> オブジェクトが同じ値を表しているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-187">Returns a value indicating whether this instance and a specified <see cref="T:System.Byte" /> object represent the same value.</span></span></summary>
        <returns><span data-ttu-id="ba3de-188"><see langword="true" /> がこのインスタンスと等しい場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3de-188"><see langword="true" /> if <paramref name="obj" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-189">このメソッドは <xref:System.IEquatable%601?displayProperty=nameWithType> インターフェイスを実装し、`obj` パラメーターをオブジェクトに変換する必要がないため、<xref:System.Byte.Equals%28System.Object%29> よりもわずかにパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-189">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Byte.Equals%28System.Object%29> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-190">次のコード例では、最初の <xref:System.Byte> 値が2番目の <xref:System.Byte> 値と等しいかどうか、最初の <xref:System.Byte> 値が2番目の <xref:System.Byte> 値のボックス化されたバージョンと等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-190">The following code example determines whether the first <xref:System.Byte> value is equal to the second <xref:System.Byte> value, and whether the first <xref:System.Byte> value is equal to the boxed version of the second <xref:System.Byte> value.</span></span>  
  
 [!code-cpp[system.byte.equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.byte.equals/cpp/eq.cpp#1)]
 [!code-csharp[system.byte.equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.equals/cs/eq.cs#1)]
 [!code-vb[system.byte.equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="byte.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ba3de-191">対象のインスタンスと比較する対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ba3de-191">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ba3de-192">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-192">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="ba3de-193"><see langword="true" /> が <paramref name="obj" /> のインスタンスで、このインスタンスの値に等しい場合は <see cref="T:System.Byte" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3de-193"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Byte" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba3de-194">次のコード例では、最初の <xref:System.Byte> 値が2番目の <xref:System.Byte> 値と等しいかどうか、最初の <xref:System.Byte> 値が2番目の <xref:System.Byte> 値のボックス化されたバージョンと等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-194">The following code example determines whether the first <xref:System.Byte> value is equal to the second <xref:System.Byte> value, and whether the first <xref:System.Byte> value is equal to the boxed version of the second <xref:System.Byte> value.</span></span>  
  
 [!code-cpp[system.byte.equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.byte.equals/cpp/eq.cpp#1)]
 [!code-csharp[system.byte.equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.byte.equals/cs/eq.cs#1)]
 [!code-vb[system.byte.equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.byte.equals/vb/eq.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="byte.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba3de-195">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-195">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="ba3de-196">現在の <see cref="T:System.Byte" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="ba3de-196">A hash code for the current <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="byte.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba3de-197"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Byte" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-197">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Byte" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-198">列挙型定数 <see cref="F:System.TypeCode.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="ba3de-198">The enumerated constant, <see cref="F:System.TypeCode.Byte" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const byte MaxValue = 255;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 MaxValue = unsigned int8(255)" />
      <MemberSignature Language="DocId" Value="F:System.Byte.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Byte  = 255" />
      <MemberSignature Language="C++ CLI" Value="public: System::Byte MaxValue = 255;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : byte" Usage="System.byte.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>255</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ba3de-199"><see cref="T:System.Byte" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-199">Represents the largest possible value of a <see cref="T:System.Byte" />.</span></span> <span data-ttu-id="ba3de-200">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-200">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-201">この定数の値は 255 (16 進数の 0xFF) です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-201">The value of this constant is 255 (hexadecimal 0xFF).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-202">次の例では、<xref:System.Byte.MaxValue> フィールドを使用して、可能なバイト値の範囲外にある値の変数入力を画面に表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-202">The following example demonstrates how to use the <xref:System.Byte.MaxValue> field to screen variable inputs for values that are outside the range of possible byte values.</span></span>  
  
 [!code-cpp[System.Byte Examples#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#1)]
 [!code-csharp[System.Byte Examples#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#1)]
 [!code-vb[System.Byte Examples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Byte.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const byte MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 MinValue = unsigned int8(0)" />
      <MemberSignature Language="DocId" Value="F:System.Byte.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Byte  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::Byte MinValue = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : byte" Usage="System.byte.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ba3de-203"><see cref="T:System.Byte" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-203">Represents the smallest possible value of a <see cref="T:System.Byte" />.</span></span> <span data-ttu-id="ba3de-204">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-204">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-205">この定数の値は0です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-205">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-206">次の例では、<xref:System.Byte.MinValue> フィールドを使用して、可能なバイト値の範囲外にある値の変数入力を画面に表示する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-206">The following example demonstrates how to use the <xref:System.Byte.MinValue> field to screen variable inputs for values that are outside the range of possible byte values.</span></span>  
  
 [!code-cpp[System.Byte Examples#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte Examples/CPP/systembyte.cpp#1)]
 [!code-csharp[System.Byte Examples#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte Examples/CS/systembyte.cs#1)]
 [!code-vb[System.Byte Examples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte Examples/VB/systembyte.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Byte.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba3de-207">数値の文字列形式を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-207">Converts the string representation of a number to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <altmember cref="Overload:System.Byte.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; byte" Usage="System.byte.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba3de-208">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="ba3de-208">A string that contains a number to convert.</span></span> <span data-ttu-id="ba3de-209">文字列は、<see cref="F:System.Globalization.NumberStyles.Integer" /> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-209">The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <summary><span data-ttu-id="ba3de-210">数値の文字列形式を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-210">Converts the string representation of a number to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="ba3de-211"><paramref name="s" /> に格納されている数値と等価のバイト値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-211">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-212">`s` パラメーターには、次の形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-212">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="ba3de-213">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="ba3de-213">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="ba3de-214">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-214">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba3de-215">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-215">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba3de-216">要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-216">Element</span></span>|<span data-ttu-id="ba3de-217">説明</span><span class="sxs-lookup"><span data-stu-id="ba3de-217">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba3de-218">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba3de-218">*ws*</span></span>|<span data-ttu-id="ba3de-219">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ba3de-219">Optional white space.</span></span>|  
|<span data-ttu-id="ba3de-220">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba3de-220">*sign*</span></span>|<span data-ttu-id="ba3de-221">省略可能な正または負の符号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-221">An optional positive or negative sign.</span></span>|  
|<span data-ttu-id="ba3de-222">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-222">*digits*</span></span>|<span data-ttu-id="ba3de-223">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ba3de-223">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ba3de-224">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-224">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ba3de-225">バイト値の10進数に加えて、先頭と末尾のスペースのみが先頭の記号と共に使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-225">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="ba3de-226">(符号が存在する場合は、正の符号であるか、またはメソッドが <xref:System.OverflowException>をスローする必要があります)。`s`で使用できるスタイル要素を明示的に定義するには、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> または <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-226">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements that can be present in `s`, use either the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba3de-227">`s` パラメーターは、現在のシステムカルチャに対して初期化された <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-227">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ba3de-228">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-228">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span> <span data-ttu-id="ba3de-229">他のカルチャの書式設定情報を使用して文字列を解析するには、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-229">To parse a string using the formatting information of some other culture, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-230">次の例では、<xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> メソッドを使用して文字列値をバイト値に変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-230">The following example demonstrates how to convert a string value into a byte value using the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ba3de-231">結果のバイト値がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-231">The resulting byte value is then displayed to the console.</span></span>  
  
 [!code-cpp[System.Byte.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp#1)]
 [!code-csharp[System.Byte.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs#1)]
 [!code-vb[System.Byte.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba3de-232"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-232"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba3de-233"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-233"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ba3de-234"><paramref name="s" /> は、<see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-234"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="ba3de-235">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="ba3de-235">Parsing Numeric Strings in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ba3de-236">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ba3de-236">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; byte" Usage="System.byte.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba3de-237">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="ba3de-237">A string that contains a number to convert.</span></span> <span data-ttu-id="ba3de-238">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-238">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="ba3de-239"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ba3de-239">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="ba3de-240">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-240">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="ba3de-241">指定のスタイルで表現された数値の文字列形式を、それと等価な <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-241">Converts the string representation of a number in a specified style to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="ba3de-242"><paramref name="s" /> に格納されている数値と等価のバイト値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-242">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-243">`style` パラメーターは、解析操作を成功させるために `s` パラメーターで使用できるスタイル要素 (空白や正符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-243">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ba3de-244"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-244">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ba3de-245">`style`の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-245">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ba3de-246">jax-ws[$][sign] 数字 [. fractional_digits] [e [sign] digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="ba3de-246">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="ba3de-247">または、`style` が <xref:System.Globalization.NumberStyles.AllowHexSpecifier>を含む場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-247">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="ba3de-248">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="ba3de-248">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="ba3de-249">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-249">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba3de-250">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-250">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba3de-251">要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-251">Element</span></span>|<span data-ttu-id="ba3de-252">説明</span><span class="sxs-lookup"><span data-stu-id="ba3de-252">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba3de-253">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba3de-253">*ws*</span></span>|<span data-ttu-id="ba3de-254">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ba3de-254">Optional white space.</span></span> <span data-ttu-id="ba3de-255">`s` の先頭に空白が表示されるのは、`style` に <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが含まれている場合、またはスタイルに <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合は、の末尾にあります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-255">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of s if style includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ba3de-256">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-256">A culture-specific currency symbol.</span></span> <span data-ttu-id="ba3de-257">文字列内での位置は、現在のカルチャの <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-257">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the current culture.</span></span> <span data-ttu-id="ba3de-258">現在のカルチャの通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-258">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-259">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba3de-259">*sign*</span></span>|<span data-ttu-id="ba3de-260">省略可能な正符号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-260">An optional positive sign.</span></span> <span data-ttu-id="ba3de-261">(`s`に負の符号が存在する場合、メソッドは <xref:System.OverflowException> をスローします)。<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-261">(The method throws an <xref:System.OverflowException> if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-262">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-262">*digits*</span></span>|<span data-ttu-id="ba3de-263">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ba3de-263">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ba3de-264">*.*</span><span class="sxs-lookup"><span data-stu-id="ba3de-264">*.*</span></span>|<span data-ttu-id="ba3de-265">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-265">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ba3de-266">現在のカルチャの小数点の記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-266">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-267">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-267">*fractional_digits*</span></span>|<span data-ttu-id="ba3de-268">数字0の1回以上の出現。</span><span class="sxs-lookup"><span data-stu-id="ba3de-268">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="ba3de-269">小数点以下の桁数は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合にのみ `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-269">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-270">*e*</span><span class="sxs-lookup"><span data-stu-id="ba3de-270">*e*</span></span>|<span data-ttu-id="ba3de-271">E または E 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-271">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="ba3de-272">`s` パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-272">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-273">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-273">*hexdigits*</span></span>|<span data-ttu-id="ba3de-274">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ba3de-274">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ba3de-275">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-275">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ba3de-276">10進数の数字のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-276">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ba3de-277">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-277">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="ba3de-278">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-278">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ba3de-279">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="ba3de-279">Non-composite NumberStyles values</span></span>|<span data-ttu-id="ba3de-280">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-280">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="ba3de-281">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="ba3de-281">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="ba3de-282">*.*</span><span class="sxs-lookup"><span data-stu-id="ba3de-282">The *.*</span></span> <span data-ttu-id="ba3de-283">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-283">and *fractional_digits* elements.</span></span> <span data-ttu-id="ba3de-284">ただし、 *fractional_digits*は1桁以上の0桁で構成する必要があります。または、<xref:System.OverflowException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-284">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="ba3de-285">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-285">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="ba3de-286">`s`の先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-286">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="ba3de-287">`s`の末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-287">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="ba3de-288">正の符号は、*数字*の前に表示できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-288">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="ba3de-289">正の記号は、*数字*の後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-289">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="ba3de-290">このフラグはサポートされていますが、`s` でかっこを使用すると、<xref:System.OverflowException>になります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-290">Although this flag is supported, the use of parentheses in `s` results in an <xref:System.OverflowException>.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="ba3de-291">桁区切り記号は `s`に表示されますが、1桁以上の0桁だけを先頭に付けることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-291">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="ba3de-292">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-292">The *$* element.</span></span>|  
  
 <span data-ttu-id="ba3de-293"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-293">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="ba3de-294">たとえば、"F3" は正常に解析されますが、"0xF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-294">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="ba3de-295">他のフラグと組み合わせて使用できるのは、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="ba3de-295">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba3de-296">(<xref:System.Globalization.NumberStyles> 列挙には、両方の空白フラグを含む複合数値スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>が含まれています)。</span><span class="sxs-lookup"><span data-stu-id="ba3de-296">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="ba3de-297">`s` パラメーターは、現在のシステムカルチャに対して初期化された <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-297">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ba3de-298">他のカルチャの書式設定情報を使用するには、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> のオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-298">To use the formatting information of some other culture, call the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-299">次の例では、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> メソッドを使用して `Byte` 値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-299">The following example parses string representations of `Byte` values with the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ba3de-300">この例の現在のカルチャは en-us です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-300">The current culture for the example is en-US.</span></span>  
  
 [!code-cpp[System.Byte.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp#3)]
 [!code-csharp[System.Byte.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs#3)]
 [!code-vb[System.Byte.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba3de-301"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-301"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba3de-302"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-302"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ba3de-303"><paramref name="s" /> は、<see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-303"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span>  
  
<span data-ttu-id="ba3de-304">- または -</span><span class="sxs-lookup"><span data-stu-id="ba3de-304">-or-</span></span> 
 <span data-ttu-id="ba3de-305"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-305"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba3de-306"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-306"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ba3de-307">- または -</span><span class="sxs-lookup"><span data-stu-id="ba3de-307">-or-</span></span> 
 <span data-ttu-id="ba3de-308"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-308"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="Overload:System.Byte.TryParse" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ba3de-309">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ba3de-309">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; byte" Usage="System.byte.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba3de-310">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="ba3de-310">A string that contains a number to convert.</span></span> <span data-ttu-id="ba3de-311">文字列は、<see cref="F:System.Globalization.NumberStyles.Integer" /> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-311">The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <param name="provider"><span data-ttu-id="ba3de-312"><paramref name="s" /> に関するカルチャ固有の解析情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-312">An object that supplies culture-specific parsing information about <paramref name="s" />.</span></span> <span data-ttu-id="ba3de-313"><paramref name="provider" /> が <see langword="null" /> の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-313">If <paramref name="provider" /> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <summary><span data-ttu-id="ba3de-314">指定されたカルチャ固有の書式で表現された文字列形式の数値を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-314">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="ba3de-315"><paramref name="s" /> に格納されている数値と等価のバイト値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-315">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-316">`s` パラメーターには、次の形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-316">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="ba3de-317">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="ba3de-317">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="ba3de-318">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-318">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba3de-319">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-319">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba3de-320">要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-320">Element</span></span>|<span data-ttu-id="ba3de-321">説明</span><span class="sxs-lookup"><span data-stu-id="ba3de-321">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba3de-322">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba3de-322">*ws*</span></span>|<span data-ttu-id="ba3de-323">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ba3de-323">Optional white space.</span></span>|  
|<span data-ttu-id="ba3de-324">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba3de-324">*sign*</span></span>|<span data-ttu-id="ba3de-325">省略可能な正符号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-325">An optional positive sign.</span></span>|  
|<span data-ttu-id="ba3de-326">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-326">*digits*</span></span>|<span data-ttu-id="ba3de-327">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ba3de-327">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ba3de-328">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-328">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer> style.</span></span> <span data-ttu-id="ba3de-329">バイト値の10進数に加えて、先頭と末尾のスペースのみが先頭の記号と共に使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-329">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="ba3de-330">(符号が存在する場合は、正の符号であるか、またはメソッドが <xref:System.OverflowException>をスローする必要があります)。`s`に表示されるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-330">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba3de-331">`s` パラメーターは `provider`によって提供される <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-331">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object supplied by `provider`.</span></span> <span data-ttu-id="ba3de-332">`provider` パラメーターは、<xref:System.Globalization.NumberFormatInfo> や <xref:System.Globalization.CultureInfo> オブジェクトなどの <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-332">The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="ba3de-333">`provider` パラメーターは、解析に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-333">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="ba3de-334">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-334">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-335">次の例では、<xref:System.Byte.Parse%2A> メソッドを使用して `Byte` 値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-335">The following example parses string representations of `Byte` values with the <xref:System.Byte.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Byte.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp#2)]
 [!code-csharp[System.Byte.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs#2)]
 [!code-vb[System.Byte.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba3de-336"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-336"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba3de-337"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-337"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ba3de-338"><paramref name="s" /> は、<see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-338"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="Overload:System.Byte.TryParse" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ba3de-339">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ba3de-339">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Byte" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; byte" Usage="System.byte.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static byte Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; byte" Usage="System.byte.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba3de-340">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="ba3de-340">A string that contains a number to convert.</span></span> <span data-ttu-id="ba3de-341">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-341">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="ba3de-342"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ba3de-342">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="ba3de-343">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-343">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ba3de-344"><paramref name="s" /> の書式設定に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-344">An object that supplies culture-specific information about the format of <paramref name="s" />.</span></span> <span data-ttu-id="ba3de-345"><paramref name="provider" /> が <see langword="null" /> の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-345">If <paramref name="provider" /> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <summary><span data-ttu-id="ba3de-346">指定したスタイルおよびカルチャ固有の書式の数値の文字列形式を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-346">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="ba3de-347"><paramref name="s" /> に格納されている数値と等価のバイト値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-347">A byte value that is equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-348">`style` パラメーターは、解析操作を成功させるために `s` パラメーターで使用できるスタイル要素 (空白や正符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-348">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ba3de-349"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-349">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ba3de-350">`style`の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-350">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ba3de-351">jax-ws[$][sign] 数字 [. fractional_digits] [e [sign] digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="ba3de-351">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="ba3de-352">または、`style` パラメーターに <xref:System.Globalization.NumberStyles.AllowHexSpecifier>が含まれている場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-352">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="ba3de-353">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="ba3de-353">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="ba3de-354">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-354">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba3de-355">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-355">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba3de-356">要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-356">Element</span></span>|<span data-ttu-id="ba3de-357">説明</span><span class="sxs-lookup"><span data-stu-id="ba3de-357">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba3de-358">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba3de-358">*ws*</span></span>|<span data-ttu-id="ba3de-359">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ba3de-359">Optional white space.</span></span> <span data-ttu-id="ba3de-360"><xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に空白が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-360">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ba3de-361">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-361">A culture-specific currency symbol.</span></span> <span data-ttu-id="ba3de-362">文字列内の位置は、`provider` パラメーターの <xref:System.IFormatProvider.GetFormat%2A> メソッドによって返される <xref:System.Globalization.NumberFormatInfo> オブジェクトの <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-362">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ba3de-363">通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-363">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-364">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba3de-364">*sign*</span></span>|<span data-ttu-id="ba3de-365">省略可能な正符号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-365">An optional positive sign.</span></span> <span data-ttu-id="ba3de-366">(`s`に負の符号が存在する場合、メソッドは <xref:System.OverflowException> をスローします)。<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-366">(The method throws an <xref:System.OverflowException> if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-367">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-367">*digits*</span></span>|<span data-ttu-id="ba3de-368">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ba3de-368">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ba3de-369">*.*</span><span class="sxs-lookup"><span data-stu-id="ba3de-369">*.*</span></span>|<span data-ttu-id="ba3de-370">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-370">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ba3de-371">`provider` によって指定されたカルチャの小数点記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-371">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-372">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-372">*fractional_digits*</span></span>|<span data-ttu-id="ba3de-373">数字0の1回以上の出現。</span><span class="sxs-lookup"><span data-stu-id="ba3de-373">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="ba3de-374">小数点以下の桁数は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合にのみ `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-374">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-375">*e*</span><span class="sxs-lookup"><span data-stu-id="ba3de-375">*e*</span></span>|<span data-ttu-id="ba3de-376">E または E 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-376">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="ba3de-377">S パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-377">The s parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-378">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-378">*hexdigits*</span></span>|<span data-ttu-id="ba3de-379">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ba3de-379">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ba3de-380">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-380">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ba3de-381">10進数の数字のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-381">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ba3de-382">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-382">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="ba3de-383">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-383">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ba3de-384">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="ba3de-384">Non-composite NumberStyles values</span></span>|<span data-ttu-id="ba3de-385">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-385">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="ba3de-386">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="ba3de-386">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="ba3de-387">*.*</span><span class="sxs-lookup"><span data-stu-id="ba3de-387">The *.*</span></span> <span data-ttu-id="ba3de-388">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-388">and *fractional_digits* elements.</span></span> <span data-ttu-id="ba3de-389">ただし、 *fractional_digits*は1桁以上の0桁で構成する必要があります。または、<xref:System.OverflowException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-389">However, *fractional_digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="ba3de-390">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-390">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="ba3de-391">`s`の先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-391">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="ba3de-392">`s`の末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-392">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="ba3de-393">正の符号は、*数字*の前に表示できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-393">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="ba3de-394">正の記号は、*数字*の後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-394">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="ba3de-395">このフラグはサポートされていますが、`s` でかっこを使用すると、<xref:System.OverflowException>になります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-395">Although this flag is supported, the use of parentheses in `s` results in an <xref:System.OverflowException>.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="ba3de-396">桁区切り記号は `s`に表示されますが、1桁以上の0桁だけを先頭に付けることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-396">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="ba3de-397">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-397">The *$* element.</span></span>|  
  
 <span data-ttu-id="ba3de-398"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-398">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="ba3de-399">たとえば、"F3" は正常に解析されますが、"0xF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-399">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="ba3de-400">`style` に存在できる他のフラグは <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="ba3de-400">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba3de-401">(<xref:System.Globalization.NumberStyles> 列挙体には、2つの空白フラグを含む複合数値スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>があります)。</span><span class="sxs-lookup"><span data-stu-id="ba3de-401">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="ba3de-402">`provider` パラメーターは、<xref:System.Globalization.NumberFormatInfo> や <xref:System.Globalization.CultureInfo> オブジェクトなどの <xref:System.IFormatProvider> の実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-402">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="ba3de-403">`provider` パラメーターは、解析に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-403">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="ba3de-404">`provider` が `null` の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-404">If `provider` is `null`, the thread current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-405">次のコード例では、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドのこのオーバーロードを使用して `Byte` 値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-405">The following code example parses string representations of `Byte` values with this overload of the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.Byte.Parse#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.Parse/cpp/parse.cpp#4)]
 [!code-csharp[System.Byte.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.Parse/CS/parse.cs#4)]
 [!code-vb[System.Byte.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.Parse/VB/parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba3de-406"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-406"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba3de-407"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-407"><paramref name="s" /> is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ba3de-408"><paramref name="s" /> は、<see cref="F:System.Byte.MinValue" /> 未満の数値か、<see cref="F:System.Byte.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-408"><paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span>  
  
<span data-ttu-id="ba3de-409">- または -</span><span class="sxs-lookup"><span data-stu-id="ba3de-409">-or-</span></span> 
 <span data-ttu-id="ba3de-410"><paramref name="s" /> に 0 以外の小数部の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-410"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba3de-411"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-411"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ba3de-412">- または -</span><span class="sxs-lookup"><span data-stu-id="ba3de-412">-or-</span></span> 
 <span data-ttu-id="ba3de-413"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-413"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ba3de-414">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ba3de-414">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-415">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-415">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-416">このメンバーの説明については、<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-416">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-417">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3de-417"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-418">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-418">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-419">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-419">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-420">別の方法として、<xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-420">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-421">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-421">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-422">このメンバーの説明については、<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-422">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-423">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-423">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-424">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-424">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-425">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-425">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-426">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-426">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-427">このメンバーの説明については、<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-427">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-428"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-428">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-429">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-429">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-430">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-430">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-431">別の方法として、<xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-431">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-432">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-432">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-433">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-433">This conversion is not supported.</span></span> <span data-ttu-id="ba3de-434">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-434">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-435">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-435">This conversion is not supported.</span></span> <span data-ttu-id="ba3de-436">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-436">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ba3de-437">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="ba3de-437">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-438">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-438">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-439">このメンバーの説明については、<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-439">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-440"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-440">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-441">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-441">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-442">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-442">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-443">別の方法として、<xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-443">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-444">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-444">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-445">このメンバーの説明については、<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-445">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-446"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-446">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-447">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-447">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-448">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-448">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-449">別の方法として、<xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-449">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-450">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-450">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-451">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-451">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-452"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-452">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-453">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-453">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-454">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-454">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-455">別の方法として、<xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-455">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-456">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-456">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-457">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-457">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-458"><see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-458">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-459">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-459">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-460">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-460">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-461">別の方法として、<xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-461">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-462">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-462">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-463">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-463">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-464"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-464">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-465">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-465">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-466">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-466">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-467">別の方法として、<xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-467">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-468">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-468">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-469">このメンバーの説明については、<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-469">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-470"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-470">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-471">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-471">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-472">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-472">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-473">別の方法として、<xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-473">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-474">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-474">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-475">このメンバーの説明については、<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-475">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-476"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-476">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-477">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-477">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-478">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-478">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-479">別の方法として、<xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-479">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ba3de-480">この <see cref="T:System.Byte" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="ba3de-480">The type to which to convert this <see cref="T:System.Byte" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="ba3de-481">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="ba3de-481">An <see cref="T:System.IFormatProvider" /> implementation that supplies information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="ba3de-482">このメンバーの説明については、<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-482">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-483"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-483">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-484">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-484">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-485">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-485">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-486">別の方法として、代わりに `static` (Visual Basic で`Shared`) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-486">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ba3de-487"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-487"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ba3de-488">要求された型変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-488">The requested type conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-489">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-489">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-490">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-490">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-491"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-491">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-492">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-492">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-493">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-493">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-494">別の方法として、<xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-494">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-495">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-495">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-496">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-496">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-497"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-497">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-498">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-498">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-499">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-499">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-500">別の方法として、<xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-500">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-501">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-501">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ba3de-502">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-502">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ba3de-503"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-503">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-504">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-504">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ba3de-505">これは、<xref:System.Byte> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-505">It can be used only when the <xref:System.Byte> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ba3de-506">別の方法として、<xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType> メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ba3de-506">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Byte%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba3de-507">現在の <see cref="T:System.Byte" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-507">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="byte.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba3de-508">現在の <see cref="T:System.Byte" /> オブジェクトの値を等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-508">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="ba3de-509">0 から 9 までの一連の数字で構成され、先行ゼロを含まない、このオブジェクトの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ba3de-509">The string representation of the value of this object, which consists of a sequence of digits that range from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-510">戻り値は、標準の数値書式指定子 ("G") と、スレッドの現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-510">The return value is formatted with the general numeric format specifier ("G") and the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="ba3de-511"><xref:System.Byte> 値の文字列表現の書式を定義するには、<xref:System.Byte.ToString%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-511">To define the formatting of the <xref:System.Byte> value's string representation, call the <xref:System.Byte.ToString%2A> method.</span></span> <span data-ttu-id="ba3de-512"><xref:System.Byte> 値の文字列形式を作成するために使用される書式指定子とカルチャの両方を定義するには、<xref:System.Byte.ToString%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-512">To define both the format specifiers and culture used to create the string representation of a <xref:System.Byte> value, call the <xref:System.Byte.ToString%2A> method.</span></span>  
  
 <span data-ttu-id="ba3de-513">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-513">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ba3de-514">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-514">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ba3de-515">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-515">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="ba3de-516">スレッドの現在のカルチャの詳細については、「<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-516">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-517">次の例では、バイト値の配列を表示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-517">The following example displays an array of byte values.</span></span> <span data-ttu-id="ba3de-518">この例では、<xref:System.Byte.ToString> メソッドが明示的に呼び出されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-518">Note that the <xref:System.Byte.ToString> method is not called explicitly in the example.</span></span> <span data-ttu-id="ba3de-519">代わりに、[複合書式指定](~/docs/standard/base-types/composite-formatting.md)機能を使用するため、暗黙的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-519">Instead, it is called implicitly, because of the use of the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature.</span></span>  
  
 [!code-cpp[System.Byte.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp#2)]
 [!code-csharp[System.Byte.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#2)]
 [!code-vb[System.Byte.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="byte.ToString provider" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ba3de-520">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-520">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="ba3de-521">指定したカルチャ固有の書式設定情報を使用して、現在の <see cref="T:System.Byte" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-521">Converts the numeric value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="ba3de-522">このオブジェクトの値を <paramref name="provider" /> パラメーターに指定されたの文字列形式で表現した値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-522">The string representation of the value of this object in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-523">戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-523">The return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="ba3de-524">`provider` パラメーターは、<xref:System.IFormatProvider> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ba3de-524">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="ba3de-525"><xref:System.IFormatProvider.GetFormat%2A> メソッドは、このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-525">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="ba3de-526"><xref:System.IFormatProvider> を実装するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-526">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="ba3de-527">書式規則を使用するカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-527">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="ba3de-528">この値の特定の数値書式情報を格納している <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-528">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="ba3de-529"><xref:System.IFormatProvider>を実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-529">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="ba3de-530">`provider` が `null` 場合、または `provider`から <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得できない場合、戻り値は、スレッドの現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-530">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="ba3de-531">スレッドの現在のカルチャの詳細については、「<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-531">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba3de-532">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-532">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ba3de-533">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-533">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ba3de-534">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-534">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-535">次の例では、バイト値の配列を反復処理し、異なる書式プロバイダーを持つ <xref:System.Byte.ToString%28System.IFormatProvider%29> メソッドを呼び出すことによって、各配列をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-535">The following example iterates an array of byte values and displays each of them to the console by calling the <xref:System.Byte.ToString%28System.IFormatProvider%29> method with different format providers.</span></span>  
  
 [!code-cpp[System.Byte.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers.cpp#3)]
 [!code-csharp[System.Byte.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#3)]
 [!code-vb[System.Byte.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Byte.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ba3de-536">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ba3de-536">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="byte.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ba3de-537">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="ba3de-537">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="ba3de-538">指定した書式を使用して、現在の <see cref="T:System.Byte" /> オブジェクトの値をそれと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-538">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="ba3de-539">現在の <see cref="T:System.Byte" /> オブジェクトの文字列形式を、<paramref name="format" /> パラメーターで指定された書式で表現した値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-539">The string representation of the current <see cref="T:System.Byte" /> object, formatted as specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-540">`format` パラメーターには、標準またはカスタムの数値書式指定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-540">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="ba3de-541">すべてのカスタム数値書式指定文字と同様に、"R" (または "r") 以外のすべての標準の数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-541">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="ba3de-542">`format` が `null` または空の文字列 ("") の場合、戻り値は一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-542">If `format` is `null` or an empty string (""), the return value is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="ba3de-543">この関数の戻り値は、スレッドの現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-543">The return value of this function is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="ba3de-544">スレッドの現在のカルチャの詳細については、「<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-544">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba3de-545">現在のカルチャ以外のカルチャの書式設定情報を提供するには、<xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-545">To provide formatting information for cultures other than the current culture, call the <xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba3de-546">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-546">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ba3de-547">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-547">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ba3de-548">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-548">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-549">次の例では、<xref:System.Byte> 値を初期化し、サポートされている各標準書式指定文字列とカスタム書式指定文字列を使用してコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-549">The following example initializes a <xref:System.Byte> value and displays it to the console using each of the supported standard format strings and a custom format string.</span></span> <span data-ttu-id="ba3de-550">この例は、現在のカルチャとして en-us を使用して実行されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-550">The example is run with en-US as the current culture.</span></span>  
  
 [!code-cpp[System.Byte.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp#4)]
 [!code-csharp[System.Byte.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#4)]
 [!code-vb[System.Byte.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba3de-551"><paramref name="format" /> にサポートされていない指定子が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-551"><paramref name="format" /> includes an unsupported specifier.</span></span> <span data-ttu-id="ba3de-552">サポートされている書式指定子は、「解説」に記載されています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-552">Supported format specifiers are listed in the Remarks section.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="ba3de-553">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="ba3de-553">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="byte.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ba3de-554">標準またはカスタムの数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="ba3de-554">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="ba3de-555">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-555">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="ba3de-556">指定した形式およびカルチャ固有の書式設定情報を使用して、現在の <see cref="T:System.Byte" /> オブジェクトの値をそれと等価の文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-556">Converts the value of the current <see cref="T:System.Byte" /> object to its equivalent string representation using the specified format and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="ba3de-557">現在の <see cref="T:System.Byte" /> オブジェクトの文字列形式を、<paramref name="format" /> および <paramref name="provider" /> パラメーターで指定された書式で表現した値。</span><span class="sxs-lookup"><span data-stu-id="ba3de-557">The string representation of the current <see cref="T:System.Byte" /> object, formatted as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-558"><xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29> メソッドは、指定されたカルチャの指定された書式で <xref:System.Byte> 値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-558">The <xref:System.Byte.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Byte> value in a specified format of a specified culture.</span></span> <span data-ttu-id="ba3de-559">現在のカルチャの既定 ("G") 書式を使用して数値の書式を設定するには、<xref:System.Byte.ToString> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-559">To format a number by using the default ("G") format of the current culture, call the <xref:System.Byte.ToString> method.</span></span> <span data-ttu-id="ba3de-560">現在のカルチャの指定した書式を使用して数値の書式を設定するには、<xref:System.Byte.ToString%28System.String%29> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-560">To format a number by using a specified format of the current culture, call the <xref:System.Byte.ToString%28System.String%29> method.</span></span>  
  
 <span data-ttu-id="ba3de-561">`format` パラメーターには、標準またはカスタムの数値書式指定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-561">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="ba3de-562">すべてのカスタム数値書式指定文字と同様に、"R" (または "r") 以外のすべての標準の数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-562">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="ba3de-563">`format` が `null` または空の文字列 ("") の場合、このメソッドの戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-563">If `format` is `null` or an empty string (""), the return value of this method is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="ba3de-564">`provider` パラメーターは、<xref:System.IFormatProvider> インターフェイスを実装するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ba3de-564">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="ba3de-565"><xref:System.IFormatProvider.GetFormat%2A> メソッドは、このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-565">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="ba3de-566"><xref:System.IFormatProvider> を実装するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-566">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="ba3de-567">書式規則を使用するカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-567">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="ba3de-568">この値の特定の数値書式情報を格納している <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-568">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="ba3de-569"><xref:System.IFormatProvider>を実装するカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-569">A custom object that implements <xref:System.IFormatProvider>.</span></span>  
  
 <span data-ttu-id="ba3de-570">`provider` が `null` 場合、または `provider`から <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得できない場合、戻り値は、スレッドの現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-570">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture.</span></span> <span data-ttu-id="ba3de-571">スレッドの現在のカルチャの詳細については、「<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-571">For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba3de-572">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-572">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ba3de-573">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-573">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ba3de-574">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-574">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-575">次の例では、標準の "N" 書式指定文字列と4つの異なる <xref:System.Globalization.CultureInfo> オブジェクトを使用して、バイト値の文字列形式をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-575">The following example uses the standard "N" format string and four different <xref:System.Globalization.CultureInfo> objects to display the string representation of a byte value to the console.</span></span>  
  
 [!code-cpp[System.Byte.ToString#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.ToString/CPP/newbytemembers2.cpp#5)]
 [!code-csharp[System.Byte.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.ToString/CS/NewByteMembers.cs#5)]
 [!code-vb[System.Byte.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.ToString/VB/NewByteMembers.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ba3de-576"><paramref name="format" /> にサポートされていない指定子が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-576"><paramref name="format" /> includes an unsupported specifier.</span></span> <span data-ttu-id="ba3de-577">サポートされている書式指定子は、「解説」に記載されています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-577">Supported format specifiers are listed in the Remarks section.</span></span></exception>
        <altmember cref="M:System.Byte.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormattable" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ba3de-578">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ba3de-578">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="ba3de-579">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="ba3de-579">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="ba3de-580">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="ba3de-580">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="ba3de-581">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="ba3de-581">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="byte.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba3de-582">数値の文字列形式を対応する <see cref="T:System.Byte" /> 表現に変換できるかどうかを試行し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-582">Tries to convert the string representation of a number to its <see cref="T:System.Byte" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.Byte.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.ReadOnlySpan{System.Char},System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * byte -&gt; bool" Usage="System.byte.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Byte" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.String,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * byte -&gt; bool" Usage="System.byte.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Byte" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba3de-583">変換する数値を含んだ文字列。</span><span class="sxs-lookup"><span data-stu-id="ba3de-583">A string that contains a number to convert.</span></span> <span data-ttu-id="ba3de-584">文字列は、<see cref="F:System.Globalization.NumberStyles.Integer" /> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-584">The string is interpreted using the <see cref="F:System.Globalization.NumberStyles.Integer" /> style.</span></span></param>
        <param name="result"><span data-ttu-id="ba3de-585">このメソッドから制御が返されたとき、変換に成功した場合は、<see cref="T:System.Byte" /> に含まれる数値と等価な <paramref name="s" /> 値が格納されます。変換に失敗した場合は 0 が格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-585">When this method returns, contains the <see cref="T:System.Byte" /> value equivalent to the number contained in <paramref name="s" /> if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="ba3de-586">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-586">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="ba3de-587">数値の文字列形式を対応する <see cref="T:System.Byte" /> 表現に変換できるかどうかを試行し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-587">Tries to convert the string representation of a number to its <see cref="T:System.Byte" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="ba3de-588"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3de-588"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-589">変換は失敗し、メソッドは、`s` パラメーターが正しい形式ではない場合、`null` または <xref:System.String.Empty?displayProperty=nameWithType>の場合、または <xref:System.Byte.MinValue> 未満の数値または <xref:System.Byte.MaxValue>を超える場合に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-589">The conversion fails and the method returns `false` if the `s` parameter is not in the correct format, if it is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, or if it represents a number less than <xref:System.Byte.MinValue> or greater than <xref:System.Byte.MaxValue>.</span></span>  
  
 <span data-ttu-id="ba3de-590"><xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> メソッドは、変換に失敗した場合に <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> が例外をスローしない点を除いて、<xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> メソッドに似ています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-590">The <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> method is similar to the <xref:System.Byte.Parse%28System.String%29?displayProperty=nameWithType> method, except that <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="ba3de-591">`s` パラメーターは、次の形式の数値の文字列形式である必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-591">The `s` parameter should be the string representation of a number in the following form:</span></span>  
  
```  
[ws][sign]digits[ws]  
```  
  
 <span data-ttu-id="ba3de-592">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-592">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ba3de-593">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-593">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba3de-594">要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-594">Element</span></span>|<span data-ttu-id="ba3de-595">説明</span><span class="sxs-lookup"><span data-stu-id="ba3de-595">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba3de-596">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba3de-596">*ws*</span></span>|<span data-ttu-id="ba3de-597">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ba3de-597">Optional white space.</span></span>|  
|<span data-ttu-id="ba3de-598">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba3de-598">*sign*</span></span>|<span data-ttu-id="ba3de-599">現在のカルチャの <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> プロパティによって指定された、省略可能な正符号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-599">An optional positive sign, as specified by the <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> property of the current culture.</span></span>|  
|<span data-ttu-id="ba3de-600">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-600">*digits*</span></span>|<span data-ttu-id="ba3de-601">0 ~ 9 の範囲の10進数字。</span><span class="sxs-lookup"><span data-stu-id="ba3de-601">A sequence of decimal digits that range from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ba3de-602">`s` パラメーターは、<xref:System.Globalization.NumberStyles.Integer> スタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-602">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer> style.</span></span> <span data-ttu-id="ba3de-603">バイト値の10進数に加えて、先頭と末尾のスペースのみが先頭の記号と共に使用できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-603">In addition to the byte value's decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="ba3de-604">(符号が存在する場合は、正の符号であるか、またはメソッドが <xref:System.OverflowException>をスローする必要があります)。`s`に表示されるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、<xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-604">(If the sign is present, it must be a positive sign or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Byte.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ba3de-605">`s` パラメーターは、現在のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-605">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="ba3de-606">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ba3de-606">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ba3de-607"><xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> メソッドのこのオーバーロードは、`s` パラメーター内のすべての数字を10進数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-607">This overload of the <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29?displayProperty=nameWithType> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="ba3de-608">16進数の文字列形式を解析するには、<xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType> のオーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-608">To parse the string representation of a hexadecimal number, call the <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-609">次の例では、さまざまな文字列値を指定して <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-609">The following example calls the <xref:System.Byte.TryParse%28System.String%2CSystem.Byte%40%29> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Byte.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.TryParse/cpp/tryparse.cpp#1)]
 [!code-csharp[System.Byte.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.TryParse/cs/TryParse.cs#1)]
 [!code-vb[System.Byte.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.TryParse/vb/TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-cs/"><span data-ttu-id="ba3de-610">サンプル: .NET Core WinForms 書式指定ユーティリティC#()</span><span class="sxs-lookup"><span data-stu-id="ba3de-610">Sample: .NET Core WinForms Formatting Utility (C#)</span></span></related>
        <related type="ExternalDocumentation" href="https://docs.microsoft.com/samples/dotnet/samples/winforms-formatting-utility-vb/"><span data-ttu-id="ba3de-611">サンプル: .NET Core WinForms の書式設定ユーティリティ (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="ba3de-611">Sample: .NET Core WinForms Formatting Utility (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * byte -&gt; bool" Usage="System.byte.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Byte" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out byte result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int8&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Byte) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Byte % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * byte -&gt; bool" Usage="System.byte.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Byte" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ba3de-612">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="ba3de-612">A string containing a number to convert.</span></span> <span data-ttu-id="ba3de-613">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-613">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="ba3de-614"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ba3de-614">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="ba3de-615">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-615">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ba3de-616"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ba3de-616">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span> <span data-ttu-id="ba3de-617"><paramref name="provider" /> が <see langword="null" /> の場合は、スレッドの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-617">If <paramref name="provider" /> is <see langword="null" />, the thread current culture is used.</span></span></param>
        <param name="result"><span data-ttu-id="ba3de-618">このメソッドから制御が返されたとき、変換が成功した場合は、<paramref name="s" /> に格納された数値と等しい 8 ビット符号なし整数値が格納されます。変換に失敗した場合は 0 が格納されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-618">When this method returns, contains the 8-bit unsigned integer value equivalent to the number contained in <paramref name="s" /> if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="ba3de-619"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Byte.MinValue" /> より小さいか <see cref="F:System.Byte.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-619">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span> <span data-ttu-id="ba3de-620">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-620">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="ba3de-621">指定したスタイルおよびカルチャ固有の書式の数値の文字列形式を、それと等価の <see cref="T:System.Byte" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-621">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Byte" /> equivalent.</span></span> <span data-ttu-id="ba3de-622">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-622">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="ba3de-623"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ba3de-623"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba3de-624"><xref:System.Byte.TryParse%2A> メソッドは、<xref:System.Byte.Parse%2A> メソッドに似ていますが、変換に失敗した場合に <xref:System.Byte.TryParse%2A> メソッドが例外をスローしない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-624">The <xref:System.Byte.TryParse%2A> method is like the <xref:System.Byte.Parse%2A> method, except the <xref:System.Byte.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="ba3de-625">`s` パラメーターは、`provider` パラメーターによって提供される <xref:System.Globalization.NumberFormatInfo> オブジェクトの書式情報を使用して解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-625">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object supplied by the `provider` parameter.</span></span>  
  
 <span data-ttu-id="ba3de-626">Style パラメーターは、解析操作を成功させるために `s` パラメーターで使用できるスタイル要素 (空白や正符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-626">The style parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ba3de-627"><xref:System.Globalization.NumberStyles> 列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-627">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ba3de-628">`style`の値に応じて、`s` パラメーターには次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-628">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ba3de-629">jax-ws[$][sign] 数字 [. fractional_digits] [e [sign] digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="ba3de-629">[ws][$][sign]digits[.fractional_digits][e[sign]digits][ws]</span></span>  
  
 <span data-ttu-id="ba3de-630">または、`style` パラメーターに <xref:System.Globalization.NumberStyles.AllowHexSpecifier>が含まれている場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-630">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="ba3de-631">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="ba3de-631">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="ba3de-632">角かっこ ([および]) の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-632">Elements in square brackets ( [ and ] ) are optional.</span></span> <span data-ttu-id="ba3de-633">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ba3de-633">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ba3de-634">要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-634">Element</span></span>|<span data-ttu-id="ba3de-635">説明</span><span class="sxs-lookup"><span data-stu-id="ba3de-635">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ba3de-636">*ws*</span><span class="sxs-lookup"><span data-stu-id="ba3de-636">*ws*</span></span>|<span data-ttu-id="ba3de-637">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ba3de-637">Optional white space.</span></span> <span data-ttu-id="ba3de-638">`s` の先頭に空白が表示されるのは、`style` に <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> フラグが含まれている場合、またはスタイルに <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> フラグが含まれている場合は、の末尾にあります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-638">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of s if style includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ba3de-639">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-639">A culture-specific currency symbol.</span></span> <span data-ttu-id="ba3de-640">文字列内の位置は、`provider` パラメーターの <xref:System.IFormatProvider.GetFormat%2A> メソッドによって返される <xref:System.Globalization.NumberFormatInfo> オブジェクトの <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> プロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-640">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ba3de-641">通貨記号は、`style` に <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-641">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-642">*sign*</span><span class="sxs-lookup"><span data-stu-id="ba3de-642">*sign*</span></span>|<span data-ttu-id="ba3de-643">省略可能な正符号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-643">An optional positive sign.</span></span> <span data-ttu-id="ba3de-644">(`s`に負の符号がある場合、解析操作は失敗します)。<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> フラグが `style` に含まれている場合、また `s` は `style` に <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> フラグが含まれている場合は、`s` の先頭に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-644">(The parse operation fails if a negative sign is present in `s`.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-645">*digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-645">*digits*</span></span>|<span data-ttu-id="ba3de-646">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ba3de-646">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ba3de-647">*.*</span><span class="sxs-lookup"><span data-stu-id="ba3de-647">*.*</span></span>|<span data-ttu-id="ba3de-648">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="ba3de-648">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ba3de-649">`provider` によって指定されたカルチャの小数点記号は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合に `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-649">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-650">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-650">*fractional_digits*</span></span>|<span data-ttu-id="ba3de-651">数字0の1回以上の出現。</span><span class="sxs-lookup"><span data-stu-id="ba3de-651">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="ba3de-652">小数点以下の桁数は、`style` に <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> フラグが含まれている場合にのみ `s` に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-652">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-653">*e*</span><span class="sxs-lookup"><span data-stu-id="ba3de-653">*e*</span></span>|<span data-ttu-id="ba3de-654">E または E 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-654">The e or E character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="ba3de-655">`s` パラメーターは、`style` に <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> フラグが含まれている場合に指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-655">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ba3de-656">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ba3de-656">*hexdigits*</span></span>|<span data-ttu-id="ba3de-657">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ba3de-657">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ba3de-658">`s` 内の終端の NUL (U + 0000) 文字は、`style` 引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-658">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ba3de-659">10進数の数字のみを含む文字列 (<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> スタイルに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-659">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ba3de-660">残りの <xref:System.Globalization.NumberStyles> メンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-660">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="ba3de-661">次の表は、個々の <xref:System.Globalization.NumberStyles> メンバーが `s`に存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="ba3de-661">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ba3de-662">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="ba3de-662">Non-composite NumberStyles values</span></span>|<span data-ttu-id="ba3de-663">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="ba3de-663">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="ba3de-664">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="ba3de-664">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="ba3de-665">*.*</span><span class="sxs-lookup"><span data-stu-id="ba3de-665">The *.*</span></span> <span data-ttu-id="ba3de-666">および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-666">and *fractional_digits* elements.</span></span> <span data-ttu-id="ba3de-667">ただし、 *fractional_digits*は1桁以上の0桁で構成されている必要があります。それ以外の場合、メソッドは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-667">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="ba3de-668">`s` パラメーターでは、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-668">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="ba3de-669">`s` が指数表記の数値を表す場合は、0以外の小数部分を含まない、<xref:System.Byte> データ型の範囲内の整数を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-669">If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Byte> data type without a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="ba3de-670">`s`の先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-670">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="ba3de-671">`s`の末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-671">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="ba3de-672">正の符号は、*数字*の前に表示できます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-672">A positive sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="ba3de-673">正の記号は、*数字*の後に表示されます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-673">A positive sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="ba3de-674">このフラグはサポートされていますが、`s`にかっこが存在する場合、メソッドは `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-674">Although this flag is supported, the method returns `false` if parentheses are present in `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="ba3de-675">桁区切り記号は `s`に表示されますが、1桁以上の0桁だけを先頭に付けることができます。</span><span class="sxs-lookup"><span data-stu-id="ba3de-675">Although the group separator symbol can appear in `s`, it can be preceded by only one or more 0 digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="ba3de-676">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="ba3de-676">The *$* element.</span></span>|  
  
 <span data-ttu-id="ba3de-677"><xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> フラグが使用されている場合、`s` はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="ba3de-677">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="ba3de-678">たとえば、"F3" は正常に解析されますが、"0xF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-678">For example, "F3" parses successfully, but "0xF3" does not.</span></span> <span data-ttu-id="ba3de-679">`style` に存在できる他のフラグは <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> と <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>だけです。</span><span class="sxs-lookup"><span data-stu-id="ba3de-679">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ba3de-680">(<xref:System.Globalization.NumberStyles> 列挙体には、2つの空白フラグを含む複合数値スタイル <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>があります)。</span><span class="sxs-lookup"><span data-stu-id="ba3de-680">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="ba3de-681">`provider` パラメーターは、<xref:System.Globalization.CultureInfo> オブジェクトや <xref:System.Globalization.NumberFormatInfo> オブジェクトなどの <xref:System.IFormatProvider> の実装で、<xref:System.IFormatProvider.GetFormat%2A> メソッドが <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-681">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="ba3de-682"><xref:System.Globalization.NumberFormatInfo> オブジェクトは、`s`の形式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-682">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba3de-683">次の例では、さまざまな文字列値を指定して <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ba3de-683">The following example calls the <xref:System.Byte.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Byte%40%29> method with a number of different string values.</span></span>  
  
 [!code-cpp[System.Byte.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Byte.TryParse/cpp/tryparse2.cpp#2)]
 [!code-csharp[System.Byte.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Byte.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Byte.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Byte.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ba3de-684"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-684"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ba3de-685">- または -</span><span class="sxs-lookup"><span data-stu-id="ba3de-685">-or-</span></span> 
 <span data-ttu-id="ba3de-686"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ba3de-686"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Byte.ToString" />
        <altmember cref="F:System.Byte.MaxValue" />
        <altmember cref="F:System.Byte.MinValue" />
        <altmember cref="T:System.Globalization.NumberStyles" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.IFormatProvider" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="ba3de-687">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="ba3de-687">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
