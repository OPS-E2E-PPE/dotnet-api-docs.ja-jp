<Type Name="OutArgument&lt;T&gt;" FullName="System.Activities.OutArgument&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5779701a50410d1f8f4c91e60c254f312159d57d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78724133" /></Metadata><TypeSignature Language="C#" Value="public sealed class OutArgument&lt;T&gt; : System.Activities.OutArgument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutArgument`1&lt;T&gt; extends System.Activities.OutArgument" />
  <TypeSignature Language="DocId" Value="T:System.Activities.OutArgument`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutArgument(Of T)&#xA;Inherits OutArgument" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class OutArgument sealed : System::Activities::OutArgument" />
  <TypeSignature Language="F#" Value="type OutArgument&lt;'T&gt; = class&#xA;    inherit OutArgument" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.OutArgument</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Activities.XamlIntegration.OutArgumentConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Expression")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Activities.XamlIntegration.ArgumentValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T"><span data-ttu-id="77ffd-101"><see cref="T:System.Activities.OutArgument`1" /> のデータ型。</span><span class="sxs-lookup"><span data-stu-id="77ffd-101">The data type of the <see cref="T:System.Activities.OutArgument`1" />.</span></span></typeparam>
    <summary><span data-ttu-id="77ffd-102">アクティビティから出るデータ フローを表すバインディング ターミナル。</span><span class="sxs-lookup"><span data-stu-id="77ffd-102">A binding terminal that represents the flow of data out of an activity.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ffd-103">アクティビティからデータを流すために、<xref:System.Activities.OutArgument%601> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="77ffd-103">An <xref:System.Activities.OutArgument%601> is used to flow data out of an activity.</span></span> <span data-ttu-id="77ffd-104">アクティビティが、ワークフローのルート アクティビティである場合、ワークフローからワークフロー ホストにデータを流すためにも使用されます。</span><span class="sxs-lookup"><span data-stu-id="77ffd-104">If the activity is the root activity of a workflow, then it is also used to flow data out of the workflow to the workflow host.</span></span> <span data-ttu-id="77ffd-105">この例では、2 つの入力引数と 1 つの出力引数を持つカスタム `Divide` アクティビティが、ワークフローのルート アクティビティとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="77ffd-105">In this example, a custom `Divide` activity that has two input arguments and one output argument is used as the root activity of a workflow.</span></span> <span data-ttu-id="77ffd-106">ホスト アプリケーションは、2 つの値をワークフローに渡します。そして、ワークフローが完了したら、除算の結果を取得します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-106">The host application passes two values into the workflow and then retrieves the result of the division after the workflow completes.</span></span>  
  
 [!code-csharp[CFX_WorkflowInvokerExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowinvokerexample/cs/program.cs#20)]  
  
 <span data-ttu-id="77ffd-107">`Divide` アクティビティでは、引数を使用して入力値を受け取り、計算結果の値を提示します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-107">The `Divide` activity uses arguments to receive the input values and to provide the computed result values.</span></span> <span data-ttu-id="77ffd-108">`Remainder` <xref:System.Activities.OutArgument%601> は、除算の剰余を渡すために使用され、<xref:System.Activities.Activity%601> 派生アクティビティによって提供される <xref:System.Activities.Activity%601.Result%2A> 出力引数を使用して商を渡します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-108">The `Remainder` <xref:System.Activities.OutArgument%601> is used to pass out the remainder of the division, and the <xref:System.Activities.Activity%601.Result%2A> output argument provided by <xref:System.Activities.Activity%601> derived activities is used to pass out the quotient.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77ffd-109">カスタム アクティビティが、<xref:System.Activities.CodeActivity%601> をジェネリック型引数として持つジェネリックの <xref:System.Int32> から派生する場合、アクティビティを <xref:System.Activities.WorkflowInvoker> Invoke メソッドを使用して呼び出すと、<xref:System.Int32> 値が返されます。</span><span class="sxs-lookup"><span data-stu-id="77ffd-109">If your custom activity is derived from the generic <xref:System.Activities.CodeActivity%601> with an <xref:System.Int32> as its generic type argument, when you invoke the activity with the <xref:System.Activities.WorkflowInvoker> Invoke method, it returns an <xref:System.Int32> value.</span></span> <span data-ttu-id="77ffd-110">さらに、<xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=nameWithType> メソッドは `void` ではなく <xref:System.Int32> 値を返し、戻り値を設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="77ffd-110">In Addition, the <xref:System.Activities.CodeActivity%601.Execute%2A?displayProperty=nameWithType> method will return an <xref:System.Int32> value instead of `void` and you do not need to set a return value.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
   
  
## Examples  
 <span data-ttu-id="77ffd-111"><xref:System.Activities.OutArgument%601> を作成するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-111">The following code sample demonstrates creating an <xref:System.Activities.OutArgument%601>.</span></span> <span data-ttu-id="77ffd-112">この例は、Formatter サンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="77ffd-112">This example is from the Formatter sample.</span></span>  
  
 [!code-csharp[wfs_Formatter#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_formatter/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="77ffd-113"><see cref="T:System.Activities.OutArgument`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-113">Initialize a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77ffd-114">既定値を使用して <see cref="T:System.Activities.OutArgument`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-114">Initialize a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="77ffd-115"><xref:System.Activities.OutArgument%601> を作成するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-115">The following code sample demonstrates creating an <xref:System.Activities.OutArgument%601>.</span></span> <span data-ttu-id="77ffd-116">この例は、Formatter サンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="77ffd-116">This example is from the Formatter sample.</span></span>  
  
 [!code-csharp[wfs_Formatter#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_formatter/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument (System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity`1&lt;class System.Activities.Location`1&lt;!T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Activity(Of Location(Of T)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument(System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Activities.OutArgument&lt;'T&gt; : System.Activities.Activity&lt;System.Activities.Location&lt;'T&gt;&gt; -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="new System.Activities.OutArgument&lt;'T&gt; expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="77ffd-117">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-117">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="77ffd-118">指定した <see cref="T:System.Activities.Activity`1" /> を使用して <see cref="T:System.Activities.OutArgument`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-118">Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.Activity`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument (System.Activities.DelegateArgument delegateArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.DelegateArgument delegateArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (delegateArgument As DelegateArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument(System::Activities::DelegateArgument ^ delegateArgument);" />
      <MemberSignature Language="F#" Value="new System.Activities.OutArgument&lt;'T&gt; : System.Activities.DelegateArgument -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="new System.Activities.OutArgument&lt;'T&gt; delegateArgument" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="delegateArgument" Type="System.Activities.DelegateArgument" />
      </Parameters>
      <Docs>
        <param name="delegateArgument"><span data-ttu-id="77ffd-119">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-119">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="77ffd-120">指定した <see cref="T:System.Activities.DelegateArgument" /> を使用して <see cref="T:System.Activities.OutArgument`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-120">Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.DelegateArgument" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (variable As Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="new System.Activities.OutArgument&lt;'T&gt; : System.Activities.Variable -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="new System.Activities.OutArgument&lt;'T&gt; variable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="77ffd-121">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-121">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="77ffd-122">指定した <see cref="T:System.Activities.Variable" /> を使用して <see cref="T:System.Activities.OutArgument`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-122">Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified <see cref="T:System.Activities.Variable" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutArgument (System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext,T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.Activities.ActivityContext, !T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As Expression(Of Func(Of ActivityContext, T)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutArgument(System::Linq::Expressions::Expression&lt;Func&lt;System::Activities::ActivityContext ^, T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Activities.OutArgument&lt;'T&gt; : System.Linq.Expressions.Expression&lt;Func&lt;System.Activities.ActivityContext, 'T&gt;&gt; -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="new System.Activities.OutArgument&lt;'T&gt; expression" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;System.Activities.ActivityContext,T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="77ffd-123">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-123">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="77ffd-124">指定した式を使用して、<see cref="T:System.Activities.OutArgument`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-124">Initializes a new instance of the <see cref="T:System.Activities.OutArgument`1" /> class using the specified expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt; Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity`1&lt;class System.Activities.Location`1&lt;!T&gt;&gt; Expression" />
      <MemberSignature Language="DocId" Value="P:System.Activities.OutArgument`1.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As Activity(Of Location(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ Expression { System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ get(); void set(System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : System.Activities.Activity&lt;System.Activities.Location&lt;'T&gt;&gt; with get, set" Usage="System.Activities.OutArgument&lt;'T&gt;.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77ffd-125">この <see cref="T:System.Activities.Activity`1" /> の値を表す <see cref="T:System.Activities.OutArgument`1" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-125">Gets an <see cref="T:System.Activities.Activity`1" /> that represents the value of this <see cref="T:System.Activities.OutArgument`1" />.</span></span></summary>
        <value><span data-ttu-id="77ffd-126">引数の値を表すアクティビティ。</span><span class="sxs-lookup"><span data-stu-id="77ffd-126">An activity that represents the value of the argument.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromDelegateArgument">
      <MemberSignature Language="C#" Value="public static System.Activities.OutArgument&lt;T&gt; FromDelegateArgument (System.Activities.DelegateArgument delegateArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.OutArgument`1&lt;!T&gt; FromDelegateArgument(class System.Activities.DelegateArgument delegateArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromDelegateArgument (delegateArgument As DelegateArgument) As OutArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::OutArgument&lt;T&gt; ^ FromDelegateArgument(System::Activities::DelegateArgument ^ delegateArgument);" />
      <MemberSignature Language="F#" Value="static member FromDelegateArgument : System.Activities.DelegateArgument -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.FromDelegateArgument delegateArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateArgument" Type="System.Activities.DelegateArgument" />
      </Parameters>
      <Docs>
        <param name="delegateArgument"><span data-ttu-id="77ffd-127">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-127">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="77ffd-128">指定した <see cref="T:System.Activities.OutArgument`1" /> を使用して構築された新しい <see cref="T:System.Activities.DelegateArgument" /> を初期化して返します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-128">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.DelegateArgument" />.</span></span></summary>
        <returns><span data-ttu-id="77ffd-129">新しい引数。</span><span class="sxs-lookup"><span data-stu-id="77ffd-129">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExpression">
      <MemberSignature Language="C#" Value="public static System.Activities.OutArgument&lt;T&gt; FromExpression (System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.OutArgument`1&lt;!T&gt; FromExpression(class System.Activities.Activity`1&lt;class System.Activities.Location`1&lt;!T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExpression (expression As Activity(Of Location(Of T))) As OutArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::OutArgument&lt;T&gt; ^ FromExpression(System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="static member FromExpression : System.Activities.Activity&lt;System.Activities.Location&lt;'T&gt;&gt; -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.FromExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="77ffd-130">引数の値。</span><span class="sxs-lookup"><span data-stu-id="77ffd-130">The value of the argument,</span></span></param>
        <summary><span data-ttu-id="77ffd-131">指定した <see cref="T:System.Activities.OutArgument`1" /> を使用して構築された新しい <see cref="T:System.Activities.Activity`1" /> を初期化して返します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-131">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Activity`1" />.</span></span></summary>
        <returns><span data-ttu-id="77ffd-132">新しい引数。</span><span class="sxs-lookup"><span data-stu-id="77ffd-132">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromVariable">
      <MemberSignature Language="C#" Value="public static System.Activities.OutArgument&lt;T&gt; FromVariable (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.OutArgument`1&lt;!T&gt; FromVariable(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromVariable (variable As Variable) As OutArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::OutArgument&lt;T&gt; ^ FromVariable(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="static member FromVariable : System.Activities.Variable -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.FromVariable variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="77ffd-133">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-133">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="77ffd-134">指定した <see cref="T:System.Activities.OutArgument`1" /> を使用して構築された新しい <see cref="T:System.Activities.Variable" /> を初期化して返します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-134">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Variable" />.</span></span></summary>
        <returns><span data-ttu-id="77ffd-135">新しい引数。</span><span class="sxs-lookup"><span data-stu-id="77ffd-135">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public T Get (System.Activities.ActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !T Get(class System.Activities.ActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (context As ActivityContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T Get(System::Activities::ActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.Get : System.Activities.ActivityContext -&gt; 'T" Usage="outArgument.Get context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.ActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="77ffd-136">現在のアクティビティのコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="77ffd-136">The current activity context.</span></span></param>
        <summary><span data-ttu-id="77ffd-137">指定したアクティビティ コンテキストを使用して <see cref="T:System.Activities.OutArgument`1" /> の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-137">Gets the value of the <see cref="T:System.Activities.OutArgument`1" /> using the specified activity context.</span></span></summary>
        <returns><span data-ttu-id="77ffd-138">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-138">The value of the argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocation">
      <MemberSignature Language="C#" Value="public System.Activities.Location&lt;T&gt; GetLocation (System.Activities.ActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Location`1&lt;!T&gt; GetLocation(class System.Activities.ActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocation (context As ActivityContext) As Location(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Location&lt;T&gt; ^ GetLocation(System::Activities::ActivityContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetLocation : System.Activities.ActivityContext -&gt; System.Activities.Location&lt;'T&gt;" Usage="outArgument.GetLocation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Location&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.ActivityContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="77ffd-139">変数の値を格納しているアクティビティ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="77ffd-139">The activity context that contains the value of the variable.</span></span></param>
        <summary><span data-ttu-id="77ffd-140"><see cref="T:System.Activities.OutArgument`1" /> の値の場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-140">Gets the location of the value for the <see cref="T:System.Activities.OutArgument`1" />.</span></span></summary>
        <returns><span data-ttu-id="77ffd-141">引数の値が格納される場所への参照。</span><span class="sxs-lookup"><span data-stu-id="77ffd-141">A reference to the location where the value of the argument is stored.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Activities.OutArgument&lt;T&gt; (System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt; expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Activities.OutArgument`1&lt;!T&gt; op_Implicit(class System.Activities.Activity`1&lt;class System.Activities.Location`1&lt;!T&gt;&gt; expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (expression As Activity(Of Location(Of T))) As OutArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Activities::OutArgument&lt;T&gt; ^(System::Activities::Activity&lt;System::Activities::Location&lt;T&gt; ^&gt; ^ expression);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Activities.Activity&lt;System.Activities.Location&lt;'T&gt;&gt; -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.op_Implicit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Activities.Activity&lt;System.Activities.Location&lt;T&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="77ffd-142">引数の値。</span><span class="sxs-lookup"><span data-stu-id="77ffd-142">The value of the argument,</span></span></param>
        <summary><span data-ttu-id="77ffd-143">指定した <see cref="T:System.Activities.OutArgument`1" /> を使用して構築された新しい <see cref="T:System.Activities.Activity`1" /> を初期化して返します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-143">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Activity`1" />.</span></span></summary>
        <returns><span data-ttu-id="77ffd-144">新しい引数。</span><span class="sxs-lookup"><span data-stu-id="77ffd-144">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Activities.OutArgument&lt;T&gt; (System.Activities.DelegateArgument delegateArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Activities.OutArgument`1&lt;!T&gt; op_Implicit(class System.Activities.DelegateArgument delegateArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (delegateArgument As DelegateArgument) As OutArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Activities::OutArgument&lt;T&gt; ^(System::Activities::DelegateArgument ^ delegateArgument);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Activities.DelegateArgument -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.op_Implicit delegateArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegateArgument" Type="System.Activities.DelegateArgument" />
      </Parameters>
      <Docs>
        <param name="delegateArgument"><span data-ttu-id="77ffd-145">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-145">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="77ffd-146">指定した <see cref="T:System.Activities.OutArgument`1" /> を使用して構築された新しい <see cref="T:System.Activities.DelegateArgument" /> を初期化して返します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-146">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.DelegateArgument" />.</span></span></summary>
        <returns><span data-ttu-id="77ffd-147">新しい引数。</span><span class="sxs-lookup"><span data-stu-id="77ffd-147">The new argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77ffd-148">これは暗黙の変換です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-148">This is an implicit conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Activities.OutArgument&lt;T&gt; (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Activities.OutArgument`1&lt;!T&gt; op_Implicit(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (variable As Variable) As OutArgument(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Activities::OutArgument&lt;T&gt; ^(System::Activities::Variable ^ variable);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Activities.Variable -&gt; System.Activities.OutArgument&lt;'T&gt;" Usage="System.Activities.OutArgument&lt;'T&gt;.op_Implicit variable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.OutArgument&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable"><span data-ttu-id="77ffd-149">引数の値です。</span><span class="sxs-lookup"><span data-stu-id="77ffd-149">The value of the argument.</span></span></param>
        <summary><span data-ttu-id="77ffd-150">指定した <see cref="T:System.Activities.OutArgument`1" /> を使用して構築された新しい <see cref="T:System.Activities.Variable" /> を初期化して返します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-150">Initializes and returns a new <see cref="T:System.Activities.OutArgument`1" /> constructed using the specified <see cref="T:System.Activities.Variable" />.</span></span></summary>
        <returns><span data-ttu-id="77ffd-151">新しい引数。</span><span class="sxs-lookup"><span data-stu-id="77ffd-151">The new argument.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (System.Activities.ActivityContext context, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(class System.Activities.ActivityContext context, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (context As ActivityContext, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::Activities::ActivityContext ^ context, T value);" />
      <MemberSignature Language="F#" Value="override this.Set : System.Activities.ActivityContext * 'T -&gt; unit" Usage="outArgument.Set (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.ActivityContext" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="77ffd-152">現在のアクティビティのコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="77ffd-152">The current activity context.</span></span></param>
        <param name="value"><span data-ttu-id="77ffd-153">新しい値。</span><span class="sxs-lookup"><span data-stu-id="77ffd-153">The new value.</span></span></param>
        <summary><span data-ttu-id="77ffd-154">指定したアクティビティ コンテキストを使用して <see cref="T:System.Activities.OutArgument`1" /> の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="77ffd-154">Sets the value of the <see cref="T:System.Activities.OutArgument`1" /> using the specified activity context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
