<Type Name="OperationContextScope" FullName="System.ServiceModel.OperationContextScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fc66b91fca50c66cdff8af64a2cad9811d61731a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78739334" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContextScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContextScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContextScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContextScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContextScope sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type OperationContextScope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c8763-101">スコープに <see cref="T:System.ServiceModel.OperationContext" /> オブジェクトが含まれるブロックを作成します。</span><span class="sxs-lookup"><span data-stu-id="c8763-101">Creates a block within which an <see cref="T:System.ServiceModel.OperationContext" /> object is in scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8763-102"><xref:System.ServiceModel.OperationContextScope> クラスを使用して、指定した <xref:System.ServiceModel.OperationContext> オブジェクトを使用する特定の <xref:System.ServiceModel.OperationContext> オブジェクトまたは新しい<xref:System.ServiceModel.IContextChannel> オブジェクトのスコープを作成します。</span><span class="sxs-lookup"><span data-stu-id="c8763-102">Use the <xref:System.ServiceModel.OperationContextScope> class to create a scope for a specific <xref:System.ServiceModel.OperationContext> object or a scope for a new <xref:System.ServiceModel.OperationContext> object using a specified <xref:System.ServiceModel.IContextChannel> object.</span></span> <span data-ttu-id="c8763-103"><xref:System.ServiceModel.OperationContextScope> は、Windows Communication Foundation (WCF) サービスまたは WCF クライアントアプリケーションで使用できます。</span><span class="sxs-lookup"><span data-stu-id="c8763-103">An <xref:System.ServiceModel.OperationContextScope> can be used in a Windows Communication Foundation (WCF) service or WCF client application.</span></span>  
  
 <span data-ttu-id="c8763-104"><xref:System.ServiceModel.OperationContextScope> オブジェクトが現在の操作コンテキストを確立した後は、<xref:System.ServiceModel.OperationContext> を使用して、次の操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="c8763-104">Once the <xref:System.ServiceModel.OperationContextScope> object has established the current operation context, you can use the <xref:System.ServiceModel.OperationContext> to:</span></span>  
  
-   <span data-ttu-id="c8763-105">受信メッセージと送信メッセージのヘッダーと他のプロパティにアクセスして変更します。</span><span class="sxs-lookup"><span data-stu-id="c8763-105">Access and modify incoming and outgoing message headers and other properties.</span></span>  
  
-   <span data-ttu-id="c8763-106">ディスパッチャー、ホスト、チャネル、および拡張を含むランタイムにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c8763-106">Access the runtime, including dispatchers, the host, channel, and extensions.</span></span>  
  
-   <span data-ttu-id="c8763-107">セキュリティ、インスタンス、および要求コンテキストなどの他の種類のコンテキストにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c8763-107">Access other types of contexts, such as security, instance, and request contexts.</span></span>  
  
-   <span data-ttu-id="c8763-108"><xref:System.ServiceModel.OperationContext> オブジェクトに関連付けられたチャネルにアクセスします。チャネルが <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType> を実装する場合は、関連付けられたチャネルのセッション ID にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c8763-108">Access the channel associated with the <xref:System.ServiceModel.OperationContext> object or (if the channel implements <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>) the associated channel's session identifier.</span></span>  
  
 <span data-ttu-id="c8763-109"><xref:System.ServiceModel.OperationContextScope> が作成されると、現在の <xref:System.ServiceModel.OperationContext> は保存され、新しい <xref:System.ServiceModel.OperationContext> が <xref:System.ServiceModel.OperationContext.Current%2A> プロパティによって返される値になります。</span><span class="sxs-lookup"><span data-stu-id="c8763-109">When an <xref:System.ServiceModel.OperationContextScope> is created, the current <xref:System.ServiceModel.OperationContext> is stored and the new <xref:System.ServiceModel.OperationContext> becomes the one returned by the <xref:System.ServiceModel.OperationContext.Current%2A> property.</span></span> <span data-ttu-id="c8763-110"><xref:System.ServiceModel.OperationContextScope> が破棄されると、元の <xref:System.ServiceModel.OperationContext> が復元されます。</span><span class="sxs-lookup"><span data-stu-id="c8763-110">When the <xref:System.ServiceModel.OperationContextScope> is disposed, the original <xref:System.ServiceModel.OperationContext> is restored.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="c8763-111">OperationContextScope ブロック内で非同期の "await" パターンを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="c8763-111">Do not use the asynchronous "await" pattern within a OperationContextScope block.</span></span> <span data-ttu-id="c8763-112">継続が発生すると、別のスレッドで実行される可能性があり、OperationContextScope はスレッド固有です。</span><span class="sxs-lookup"><span data-stu-id="c8763-112">When the continuation occurs, it may run on a different thread and OperationContextScope is thread specific.</span></span> <span data-ttu-id="c8763-113">非同期呼び出しに対して "await" を呼び出す必要がある場合は、OperationContextScope ブロックの外部で使用します。</span><span class="sxs-lookup"><span data-stu-id="c8763-113">If you need to call "await" for an async call, use it outside of the OperationContextScope block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8763-114">次の例では、送信メッセージにカスタム ヘッダーを追加するために、<xref:System.ServiceModel.OperationContextScope> を使用してクライアント アプリケーションに新しいコンテキストを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c8763-114">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#3)]
 [!code-vb[OperationContextScope#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8763-115"><see cref="T:System.ServiceModel.OperationContextScope" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c8763-115">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.IContextChannel -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope channel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="c8763-116">新しい <see cref="T:System.ServiceModel.OperationContext" /> のスコープを作成するときに使用するチャネル。</span><span class="sxs-lookup"><span data-stu-id="c8763-116">The channel to use when creating the scope for a new <see cref="T:System.ServiceModel.OperationContext" />.</span></span></param>
        <summary><span data-ttu-id="c8763-117">指定した <see cref="T:System.ServiceModel.OperationContextScope" /> を使用して新しい <see cref="T:System.ServiceModel.IContextChannel" /> のスコープを作成する<see cref="T:System.ServiceModel.OperationContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c8763-117">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> to create a new <see cref="T:System.ServiceModel.OperationContext" /> for the scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8763-118"><xref:System.ServiceModel.OperationContextScope.%23ctor%2A> コンストラクターを使用して、送信メッセージ ヘッダーの追加または変更、受信メッセージ ヘッダーの読み取り、または <xref:System.ServiceModel.OperationContext> のその他の実行時プロパティにアクセスできる、クライアント チャネルの新しい <xref:System.ServiceModel.OperationContext> を作成します。</span><span class="sxs-lookup"><span data-stu-id="c8763-118">Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a new <xref:System.ServiceModel.OperationContext> for a client channel that can be used to add or modify outbound message headers, read incoming message headers, or access other run-time properties of the <xref:System.ServiceModel.OperationContext>.</span></span>  
  
 <span data-ttu-id="c8763-119">新しく作成された <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> の <xref:System.ServiceModel.OperationContext> プロパティに追加されるヘッダーは、<xref:System.ServiceModel.OperationContextScope.%23ctor%2A> コンストラクターに渡されたチャネルに対してのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="c8763-119">The headers added to the <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> property of the newly created <xref:System.ServiceModel.OperationContext> apply only to the channel that was passed to the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor.</span></span> <span data-ttu-id="c8763-120">ユーザーがスコープ内で新しいチャネルを作成しても、その新しいチャネルで送信されるメッセージにはヘッダーは適用されません。</span><span class="sxs-lookup"><span data-stu-id="c8763-120">If the user creates a new channel within its scope then the headers are not applied to messages sent on the new channel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8763-121">次の例では、送信メッセージにカスタム ヘッダーを追加するために、<xref:System.ServiceModel.OperationContextScope> を使用してクライアント アプリケーションに新しいコンテキストを作成しています。</span><span class="sxs-lookup"><span data-stu-id="c8763-121">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.OperationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.OperationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::OperationContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.OperationContext -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c8763-122">作成されたスコープのアクティブな <see cref="T:System.ServiceModel.OperationContext" />。</span><span class="sxs-lookup"><span data-stu-id="c8763-122">The active <see cref="T:System.ServiceModel.OperationContext" /> in the created scope.</span></span></param>
        <summary><span data-ttu-id="c8763-123">指定した <see cref="T:System.ServiceModel.OperationContextScope" /> オブジェクトのスコープを作成する <see cref="T:System.ServiceModel.OperationContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c8763-123">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class to create a scope for the specified <see cref="T:System.ServiceModel.OperationContext" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8763-124"><xref:System.ServiceModel.OperationContextScope.%23ctor%2A> コンストラクターを使用して、指定した <xref:System.ServiceModel.OperationContextScope> オブジェクトが現在のスコープであるコード ブロックを作成します。</span><span class="sxs-lookup"><span data-stu-id="c8763-124">Use the <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> constructor to create a code block within which the specified <xref:System.ServiceModel.OperationContextScope> object is the current scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="operationContextScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8763-125">元の <see cref="T:System.ServiceModel.OperationContext" /> をアクティブなコンテキストに復元し、<see cref="T:System.ServiceModel.OperationContextScope" /> オブジェクトをリサイクルします。</span><span class="sxs-lookup"><span data-stu-id="c8763-125">Restores the original <see cref="T:System.ServiceModel.OperationContext" /> to the active context and recycles the <see cref="T:System.ServiceModel.OperationContextScope" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
