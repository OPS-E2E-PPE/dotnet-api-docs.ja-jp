<Type Name="FaultContractAttribute" FullName="System.ServiceModel.FaultContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9feb5725b1686f65d52105d54bdeb30c4502a94b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83932442" /></Metadata><TypeSignature Language="C#" Value="public sealed class FaultContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FaultContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.FaultContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FaultContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class FaultContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type FaultContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d1640-101">サービス操作で処理エラーが発生したときに返される SOAP エラーを指定します。</span><span class="sxs-lookup"><span data-stu-id="d1640-101">Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1640-102">操作に、操作によって返される明示的な SOAP エラーメッセージとして、サービス操作の Web サービス記述言語 (WSDL) の説明に追加される1つ以上の特定の例外条件を宣言するには、<xref:System.ServiceModel.FaultContractAttribute> 属性を使用してマークします。</span><span class="sxs-lookup"><span data-stu-id="d1640-102">Mark an operation with the <xref:System.ServiceModel.FaultContractAttribute> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.</span></span>  
  
 <span data-ttu-id="d1640-103">すべてのマネージド アプリケーションで、操作エラーは <xref:System.Exception> オブジェクトにより表されます。</span><span class="sxs-lookup"><span data-stu-id="d1640-103">In all managed applications, processing errors are represented by <xref:System.Exception> objects.</span></span> <span data-ttu-id="d1640-104">Windows Communication Foundation (WCF) アプリケーションなどの SOAP ベースのアプリケーションでは、サービスメソッドは SOAP エラーメッセージを使用して処理エラー情報を通信します。</span><span class="sxs-lookup"><span data-stu-id="d1640-104">In SOAP-based applications such as Windows Communication Foundation (WCF) applications, service methods communicate processing error information using SOAP fault messages.</span></span> <span data-ttu-id="d1640-105">WCF アプリケーションは、両方の種類のエラーシステムで実行されるため、クライアントに送信する必要があるマネージ例外情報は、例外から SOAP エラーに変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1640-105">Because WCF applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults.</span></span> <span data-ttu-id="d1640-106">既定のサービス例外動作を使用できます。または、例外をエラー メッセージにマッピングするかどうかとそのマッピング方法を明示的に制御できます。</span><span class="sxs-lookup"><span data-stu-id="d1640-106">You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages.</span></span> <span data-ttu-id="d1640-107">WCF アプリケーションでの例外と SOAP エラーの概要については、「[コントラクトとサービスのエラーの指定と処理](/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1640-107">For an overview of exceptions and SOAP faults in WCF applications, see [Specifying and Handling Faults in Contracts and Services](/dotnet/framework/wcf/specifying-and-handling-faults-in-contracts-and-services).</span></span>  
  
 <span data-ttu-id="d1640-108">サービス操作では、<xref:System.ServiceModel.FaultContractAttribute> を使用して、通常の操作の過程でクライアントが受け取る可能性のあるすべての SOAP エラーを正式に指定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d1640-108">It is recommended that service operations use the <xref:System.ServiceModel.FaultContractAttribute> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation.</span></span> <span data-ttu-id="d1640-109">また、SOAP エラーでは、情報の開示を最小限に抑えるために、クライアントが知る必要がある情報だけを返すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d1640-109">It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.</span></span>  
  
-   <span data-ttu-id="d1640-110"><xref:System.ServiceModel.FaultContractAttribute.Action%2A> プロパティは、エラーメッセージのアクションを制御します。</span><span class="sxs-lookup"><span data-stu-id="d1640-110">The <xref:System.ServiceModel.FaultContractAttribute.Action%2A> property controls the action of the fault message.</span></span>  
  
-   <span data-ttu-id="d1640-111"><xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> プロパティは、エラーメッセージでシリアル化された詳細オブジェクトの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1640-111">The <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> property gets the type of the detail object serialized in the fault message.</span></span>  
  
-   <span data-ttu-id="d1640-112"><xref:System.ServiceModel.FaultContractAttribute.Name%2A> プロパティと <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> プロパティは、エラーメッセージの名前と名前空間をそれぞれ制御します。</span><span class="sxs-lookup"><span data-stu-id="d1640-112">The <xref:System.ServiceModel.FaultContractAttribute.Name%2A> and <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties control the name and namespace, respectively, of the fault message.</span></span>  
  
-   <span data-ttu-id="d1640-113"><xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> は、エラーメッセージに保護レベルが指定されているかどうかを示します。存在する場合、<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> プロパティは保護レベルを制御します。</span><span class="sxs-lookup"><span data-stu-id="d1640-113">The <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> indicates whether the fault message has a protection level specified, and if so, the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property controls that level of protection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d1640-114">エラーメッセージに機密情報が含まれている場合、またはセキュリティ上の問題につながる可能性がある場合は、<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> プロパティを設定することを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d1640-114">If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set.</span></span>  
  
-   <span data-ttu-id="d1640-115"><xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> を <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> または <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>に明示的に設定した場合は、バインディングの <xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType> プロパティを使用してセキュリティが有効なバインディングを使用する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1640-115">If you set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> explicitly to either <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> or <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>, then you must use a binding with security enabled using the <xref:System.ServiceModel.SecurityMode?displayProperty=nameWithType> property on the binding or an exception is thrown.</span></span>  
  
-   <span data-ttu-id="d1640-116">セキュリティを有効にしたバインドを選択し、コントラクト上のどこにも <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> プロパティを設定しない場合は、すべてのアプリケーション データが暗号化および署名されます。</span><span class="sxs-lookup"><span data-stu-id="d1640-116">If you select a binding that enables security and you do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property anywhere on the contract, all application data will be encrypted and signed.</span></span>  
  
-   <span data-ttu-id="d1640-117">セキュリティが有効になっていないバインドを選択した場合 (たとえば、<xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType> のセキュリティが既定で無効になっていて、<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> が明示的に設定されていない場合)、アプリケーションデータは保護されません。</span><span class="sxs-lookup"><span data-stu-id="d1640-117">If you select a binding that does not have security enabled (for example, the <xref:System.ServiceModel.BasicHttpBinding?displayProperty=nameWithType> has security disabled by default), and the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> is not explicitly set, then none of the application data will be protected.</span></span>  
  
 <span data-ttu-id="d1640-118">多くのシナリオでは、エラーメッセージの <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> に <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> を設定するだけで十分です。</span><span class="sxs-lookup"><span data-stu-id="d1640-118">For many scenarios setting <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> for fault messages is sufficient.</span></span> <span data-ttu-id="d1640-119">詳細については、「[保護レベルについ](/dotnet/framework/wcf/understanding-protection-level)て」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1640-119">For more details, see [Understanding Protection Level](/dotnet/framework/wcf/understanding-protection-level).</span></span>  
  
 <span data-ttu-id="d1640-120"><xref:System.ServiceModel.FaultContractAttribute>でマークされた操作から指定されたエラーを返すには、操作中にマネージ例外が発生したときに、<xref:System.ServiceModel.FaultException%601> (型パラメーターがシリアル化可能なエラー情報) をスローします。</span><span class="sxs-lookup"><span data-stu-id="d1640-120">To return a specified fault from an operation marked with <xref:System.ServiceModel.FaultContractAttribute>, throw a <xref:System.ServiceModel.FaultException%601> (where the type parameter is the serializable error information) when the managed exception occurs during the operation.</span></span> <span data-ttu-id="d1640-121">WCF クライアントアプリケーションは、クライアント実装でスローされたのと同じ型 (つまり <xref:System.ServiceModel.FaultException%601>、typeparameter がシリアル化可能なエラー情報である) として SOAP エラーを格納します。</span><span class="sxs-lookup"><span data-stu-id="d1640-121">WCF client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <xref:System.ServiceModel.FaultException%601> (where the typeparameter is the serializable error information).</span></span> <span data-ttu-id="d1640-122"><xref:System.ServiceModel.FaultContractAttribute> は、双方向のサービス操作と非同期操作のペアに対して SOAP エラーを指定する場合にのみ使用できます。一方向の操作では SOAP エラーがサポートされないため、<xref:System.ServiceModel.FaultContractAttribute>はサポートされません。</span><span class="sxs-lookup"><span data-stu-id="d1640-122">The <xref:System.ServiceModel.FaultContractAttribute> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <xref:System.ServiceModel.FaultContractAttribute>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1640-123">エラー情報を伝えるために、任意のシリアル化可能な型を使用できます。</span><span class="sxs-lookup"><span data-stu-id="d1640-123">You can use any serializable type to convey error information.</span></span> <span data-ttu-id="d1640-124">このバージョンの WCF で唯一の制限は、<xref:System.ServiceModel.FaultContractAttribute> で指定された型が <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType>によってシリアル化できる必要があることです。</span><span class="sxs-lookup"><span data-stu-id="d1640-124">The only restriction in this version of WCF is that types specified in a <xref:System.ServiceModel.FaultContractAttribute> must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1640-125"><xref:System.Runtime.Serialization.DataContractSerializer> が提供するシリアル化のサポートについては、「[データコントラクトシリアライザー](/dotnet/framework/wcf/feature-details/data-contract-serializer)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1640-125">For the serialization support the <xref:System.Runtime.Serialization.DataContractSerializer> provides, see [Data Contract Serializer](/dotnet/framework/wcf/feature-details/data-contract-serializer).</span></span>  
  
 <span data-ttu-id="d1640-126">たとえば、<xref:System.Int32>を含む SOAP エラーをクライアントが想定できるように指定するには、その型パラメーターをサービスメソッドの <xref:System.ServiceModel.FaultContractAttribute> に配置します。</span><span class="sxs-lookup"><span data-stu-id="d1640-126">For example, to specify that clients can expect a SOAP fault that contains an <xref:System.Int32>, place that type parameter in the <xref:System.ServiceModel.FaultContractAttribute> on your service method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1640-127">次のコード例では、<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>、<xref:System.ServiceModel.FaultContractAttribute.Name%2A>、または <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> プロパティは設定しません。</span><span class="sxs-lookup"><span data-stu-id="d1640-127">The following code examples do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A>, or <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties.</span></span>  
  
 [!code-csharp[C_FCA#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#1)]
 [!code-vb[C_FCA#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#1)]  
  
 <span data-ttu-id="d1640-128">次に、サービスメソッドで、型パラメーターがエラー情報を含む型 (上記の場合は <xref:System.Int32>) である新しい <xref:System.ServiceModel.FaultException%601> をスローします。</span><span class="sxs-lookup"><span data-stu-id="d1640-128">Then, in your service method, throw a new <xref:System.ServiceModel.FaultException%601> where the type parameter is the type that contains the error information (in the above case, a <xref:System.Int32>).</span></span> <span data-ttu-id="d1640-129">例 :</span><span class="sxs-lookup"><span data-stu-id="d1640-129">For example:</span></span>  
  
 [!code-csharp[C_FCA#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#2)]
 [!code-vb[C_FCA#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#2)]  
  
 <span data-ttu-id="d1640-130">前の例は非常に基本的なものです。<xref:System.Int32?displayProperty=nameWithType> コードを使用してほぼすべての情報を渡すことができます。そのため、この詳細の種類は最も役に立ちません。</span><span class="sxs-lookup"><span data-stu-id="d1640-130">The preceding example is very basic; almost any information can be passed using an <xref:System.Int32?displayProperty=nameWithType> code, so this detail type is not the most useful.</span></span> <span data-ttu-id="d1640-131">通常、WCF アプリケーションは、クライアントのエラー情報要件に固有の詳細な種類を使用して、SOAP エラーを指定します。</span><span class="sxs-lookup"><span data-stu-id="d1640-131">Typically, WCF applications specify SOAP faults with detail types specific to the error information requirements of the client.</span></span> <span data-ttu-id="d1640-132">より完全な例については、「使用例」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1640-132">For a more complete example, see the Example section.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d1640-133">Type パラメーターが <xref:System.String?displayProperty=nameWithType>である <xref:System.ServiceModel.FaultException%601> を指定すると、クライアントアプリケーションの Detail プロパティに文字列値が割り当てられます。クライアントは、<xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType> メソッドを呼び出すことによってその文字列を取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="d1640-133">If you specify a <xref:System.ServiceModel.FaultException%601> where the type parameter is a <xref:System.String?displayProperty=nameWithType>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d1640-134">クライアント アプリケーションが <xref:System.Exception.ToString%2A?displayProperty=nameWithType> を呼び出したときにこの文字列値を返すには、操作内で <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> 例外をスローし、この文字列をコンストラクターに渡します。</span><span class="sxs-lookup"><span data-stu-id="d1640-134">To have the string value returned when the client application calls <xref:System.Exception.ToString%2A?displayProperty=nameWithType>, throw a <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> exception inside the operation and pass the string to the constructor.</span></span>  
  
 <span data-ttu-id="d1640-135">例外または <xref:System.ServiceModel.FaultException%601> がスローされたときにアプリケーションの動作を明示的に制御するには、<xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>、<xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> または <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> で <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> インターフェイスを実装し、それを <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="d1640-135">To explicitly control the behavior of the application when an exception or <xref:System.ServiceModel.FaultException%601> is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType> interface on an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> and assign it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d1640-136"><xref:System.ServiceModel.Dispatcher.IErrorHandler> を使用すると、生成される SOAP エラーと、それをクライアントに送信するかどうかを明示的に制御できます。</span><span class="sxs-lookup"><span data-stu-id="d1640-136"><xref:System.ServiceModel.Dispatcher.IErrorHandler> enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.</span></span>  
  
 <span data-ttu-id="d1640-137">デバッグを容易にするには、コードで <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> を `true` に設定するか、アプリケーション構成ファイルで <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> を使用します。</span><span class="sxs-lookup"><span data-stu-id="d1640-137">To facilitate debugging, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> to `true` in code or you can use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> in an application configuration file.</span></span> <span data-ttu-id="d1640-138">有効な場合は、サービスが自動的に例外情報を呼び出し元に返します。</span><span class="sxs-lookup"><span data-stu-id="d1640-138">When enabled, the service automatically returns exception information to the caller.</span></span> <span data-ttu-id="d1640-139">これらのエラーは、<xref:System.ServiceModel.FaultException> の例外としてクライアントに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d1640-139">These faults appear to the client as <xref:System.ServiceModel.FaultException> exceptions.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d1640-140">マネージ例外によって内部アプリケーション情報が公開される可能性があるため、<xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> または <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> を `true` に設定すると、WCF クライアントは、個人を特定できる情報やその他の機密情報を含む内部サービス操作例外に関する情報を取得することができます。</span><span class="sxs-lookup"><span data-stu-id="d1640-140">Because managed exceptions can expose internal application information, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> to `true` can permit WCF clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.</span></span>  
>   
>  <span data-ttu-id="d1640-141">したがって、<xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> または <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> を `true` に設定することは、サービス アプリケーションを一時的にデバッグする方法としてのみお勧めできます。</span><span class="sxs-lookup"><span data-stu-id="d1640-141">Therefore, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> to `true` is only recommended as a way of temporarily debugging a service application.</span></span> <span data-ttu-id="d1640-142">さらに、このようにして未処理のマネージド例外を返すメソッドの WSDL には、<xref:System.ServiceModel.FaultException%601> 型の <xref:System.String> のコントラクトが含まれません。</span><span class="sxs-lookup"><span data-stu-id="d1640-142">In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.String>.</span></span> <span data-ttu-id="d1640-143">クライアントは、デバッグ情報を適切に取得するために、不明な SOAP エラー (<xref:System.ServiceModel.FaultException?displayProperty=nameWithType> オブジェクトとして WCF クライアントに返される) の可能性を期待する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1640-143">Clients must expect the possibility of an unknown SOAP fault (returned to WCF clients as <xref:System.ServiceModel.FaultException?displayProperty=nameWithType> objects) to obtain the debugging information properly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1640-144">次のコード例は、<xref:System.ServiceModel.FaultContractAttribute> 操作で `SampleMethod` の詳細な型と共に SOAP エラーを返すことができることを指定するために、`GreetingFault` を使用しています。</span><span class="sxs-lookup"><span data-stu-id="d1640-144">The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.</span></span>  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="d1640-145">次のコード例は、`ISampleService` の WCF クライアントが、`GreetingFault`型の <xref:System.ServiceModel.FaultException%601> としてこの SOAP エラーを発生させることを示しています。</span><span class="sxs-lookup"><span data-stu-id="d1640-145">The following code example shows that WCF clients of `ISampleService` experience this SOAP fault as a <xref:System.ServiceModel.FaultException%601> of type `GreetingFault`.</span></span>  
  
 [!code-csharp[FaultContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/client.cs#3)]
 [!code-vb[FaultContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FaultContractAttribute (Type detailType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type detailType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (detailType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FaultContractAttribute(Type ^ detailType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.FaultContractAttribute : Type -&gt; System.ServiceModel.FaultContractAttribute" Usage="new System.ServiceModel.FaultContractAttribute detailType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="detailType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="detailType"><span data-ttu-id="d1640-146">呼び出し元のエラー情報を含むシリアル化可能な型。</span><span class="sxs-lookup"><span data-stu-id="d1640-146">The serializable type that contains error information for the caller.</span></span></param>
        <summary><span data-ttu-id="d1640-147"><see cref="T:System.ServiceModel.FaultContractAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d1640-147">Initializes a new instance of the <see cref="T:System.ServiceModel.FaultContractAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1640-148">コンストラクターは、通常、属性をサービス メソッドに適用し、型を属性の引数として指定することで実行されます。</span><span class="sxs-lookup"><span data-stu-id="d1640-148">The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1640-149">次のコード例は、<xref:System.ServiceModel.FaultContractAttribute> 操作で `SampleMethod` の詳細な型と共に SOAP エラーを返すことができることを指定するために、`GreetingFault` を使用しています。</span><span class="sxs-lookup"><span data-stu-id="d1640-149">The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.</span></span>  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1640-150"><paramref name="detailType" /> 引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d1640-150">The <paramref name="detailType" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Action : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1640-151">操作コントラクトの一部として指定された SOAP エラー メッセージのアクションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d1640-151">Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.</span></span></summary>
        <value><span data-ttu-id="d1640-152">SOAP エラー メッセージのアクションの値。</span><span class="sxs-lookup"><span data-stu-id="d1640-152">The value of the action for the SOAP fault message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1640-153">SOAP エラー メッセージのアクションを制御するために使用します。</span><span class="sxs-lookup"><span data-stu-id="d1640-153">Use to control the action of the SOAP fault message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetailType">
      <MemberSignature Language="C#" Value="public Type DetailType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DetailType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.DetailType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DetailType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DetailType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DetailType : Type" Usage="System.ServiceModel.FaultContractAttribute.DetailType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1640-154">エラー情報を含むシリアル化可能なオブジェクトの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1640-154">Gets the type of a serializable object that contains error information.</span></span></summary>
        <value><span data-ttu-id="d1640-155">シリアル化可能なエラー クラスを表す型。</span><span class="sxs-lookup"><span data-stu-id="d1640-155">The type that represents the serializable error class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1640-156">次のコード例は、<xref:System.ServiceModel.FaultContractAttribute> 操作で `SampleMethod` の詳細な型と共に SOAP エラーを返すことができることを指定するために、`GreetingFault` を使用しています。</span><span class="sxs-lookup"><span data-stu-id="d1640-156">The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.</span></span>  
  
 [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]
 [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.FaultContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1640-157">SOAP エラー メッセージに保護レベルが割り当てられているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1640-157">Gets a value that indicates whether the SOAP fault message has a protection level assigned.</span></span></summary>
        <value><span data-ttu-id="d1640-158">エラー メッセージに保護レベルがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1640-158"><see langword="true" /> if the fault message has a protection level; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d1640-159">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="d1640-159">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1640-160"><xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> プロパティを使用して、SOAP エラーメッセージの暗号化、署名、または両方を行う必要があるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="d1640-160">Use the <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> property to specify whether the SOAP fault message must be encrypted, signed, or both.</span></span> <span data-ttu-id="d1640-161">詳細については、<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1640-161">See the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property for details.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1640-162">Web サービス記述言語 (WSDL) でのエラー メッセージの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d1640-162">Gets or sets the name of the fault message in Web Services Description Language (WSDL).</span></span></summary>
        <value><span data-ttu-id="d1640-163">エラー メッセージの名前。</span><span class="sxs-lookup"><span data-stu-id="d1640-163">The fault message name.</span></span> <span data-ttu-id="d1640-164">既定値は、エラー詳細として使用された型の名前です。</span><span class="sxs-lookup"><span data-stu-id="d1640-164">The default is the name of the type used as the fault detail.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.FaultContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1640-165">SOAP エラーの名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d1640-165">Gets or sets the namespace of the SOAP fault.</span></span></summary>
        <value><span data-ttu-id="d1640-166">SOAP エラーの名前空間。</span><span class="sxs-lookup"><span data-stu-id="d1640-166">The namespace of the SOAP fault.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.FaultContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1640-167">SOAP エラーがバインドに要求する保護レベルを指定します。</span><span class="sxs-lookup"><span data-stu-id="d1640-167">Specifies the level of protection the SOAP fault requires from the binding.</span></span></summary>
        <value><span data-ttu-id="d1640-168"><see cref="T:System.Net.Security.ProtectionLevel" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="d1640-168">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="d1640-169">既定値は、<see cref="F:System.Net.Security.ProtectionLevel.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="d1640-169">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1640-170"><xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType> プロパティを使用して、SOAP エラーの送信時に、バインドを行う必要がある暗号化、署名、またはその両方の程度を指定します。</span><span class="sxs-lookup"><span data-stu-id="d1640-170">Use the <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=nameWithType> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault.</span></span> <span data-ttu-id="d1640-171">コントラクトのセキュリティ保護レベル要件を、操作のエラーで明示的に決定することを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d1640-171">It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract.</span></span> <span data-ttu-id="d1640-172">既定の保護レベルは <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>です。これは、定義している SOAP エラーメッセージに暗号化またはデジタル署名が必要ないことを意味します (ただし、バインドでは、このように構成されている場合は、このサポートが提供される場合があります)。</span><span class="sxs-lookup"><span data-stu-id="d1640-172">The default protection level is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so).</span></span> <span data-ttu-id="d1640-173">エラーメッセージに機密情報が含まれている場合、またはセキュリティ上の問題につながる可能性がある場合は、<xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> プロパティを <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>に設定することを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d1640-173">If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1640-174">セキュリティの問題の詳細については、「[保護レベルについ](/dotnet/framework/wcf/understanding-protection-level)て」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1640-174">For more about security issues, see [Understanding Protection Level](/dotnet/framework/wcf/understanding-protection-level).</span></span>  
  
 <span data-ttu-id="d1640-175">ランタイム時の保護動作は、階層構造になっている保護レベルのプロパティの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="d1640-175">The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure.</span></span> <span data-ttu-id="d1640-176">最も外側の値を設定すると、それより狭いスコープで異なる値を明示的に設定していなければ、より狭いスコープでその既定の設定が定まります。</span><span class="sxs-lookup"><span data-stu-id="d1640-176">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="d1640-177">この場合、外側の値は特に設定された値を除いて、それより狭いすべてのスコープで既定の設定として残ります。</span><span class="sxs-lookup"><span data-stu-id="d1640-177">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="d1640-178">たとえば、<xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> が <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> に設定されていて、その他の狭いスコープに保護レベルの設定がない場合、操作コントラクト内のすべてのメッセージが暗号化され、エラーメッセージも含めて署名されます。</span><span class="sxs-lookup"><span data-stu-id="d1640-178">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages.</span></span> <span data-ttu-id="d1640-179">ただし、これらの操作の1つで <xref:System.ServiceModel.OperationContractAttribute> が <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>に設定されている場合、その操作のメッセージは署名されますが、コントラクト内の他のすべてのメッセージは、エラーメッセージを含めて暗号化および署名されます。</span><span class="sxs-lookup"><span data-stu-id="d1640-179">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.</span></span>  
  
 <span data-ttu-id="d1640-180">こうした値が設定されるスコープは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1640-180">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="d1640-181"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> の <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="d1640-181">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d1640-182"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> の <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="d1640-182">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d1640-183">コントラクト上で明示的に指定された保護レベルが存在せず、基になるバインドで (トランスポート レベルまたはメッセージ レベルを問わず) セキュリティをサポートする場合、コントラクト全体の有効な保護レベルは <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="d1640-183">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1640-184">バインドで (<xref:System.ServiceModel.BasicHttpBinding> などの) セキュリティをサポートしない場合、コントラクト全体の有効な <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> は <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="d1640-184">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="d1640-185">したがって、コントラクトで <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> を指定している場合でも、エンドポイント バインドによってはクライアントが要求するメッセージ レベルまたはトランスポート レベルのセキュリティ保護が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="d1640-185">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
