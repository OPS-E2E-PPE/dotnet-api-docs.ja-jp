<Type Name="WSDualHttpBinding" FullName="System.ServiceModel.WSDualHttpBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="629c357e0108594efca482b68bc2ff03c3451298" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78738736" /></Metadata><TypeSignature Language="C#" Value="public class WSDualHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSDualHttpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSDualHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class WSDualHttpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSDualHttpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type WSDualHttpBinding = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a2d2f-101">サービスとクライアントの両方がメッセージを送受信できる双方向サービス コントラクトで使用するように設計された、安全で相互運用可能なバインドです。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-101">A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-102"><xref:System.ServiceModel.WSDualHttpBinding> は、<xref:System.ServiceModel.WSHttpBinding> と同じ Web サービス プロトコルをサポートしますが、双方向コントラクトでの使用を想定しています。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-102">The <xref:System.ServiceModel.WSDualHttpBinding> provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts.</span></span> <span data-ttu-id="a2d2f-103"><xref:System.ServiceModel.WSDualHttpBinding> は SOAP セキュリティのみをサポートし、信頼できるメッセージングを要求します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-103"><xref:System.ServiceModel.WSDualHttpBinding> only supports SOAP security and requires reliable messaging.</span></span> <span data-ttu-id="a2d2f-104">このバインディングでは、クライアントが、サービスのコールバック エンドポイントを提供するパブリック URI を保持していることが必要です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-104">This binding requires that the client has a public URI that provides a callback endpoint for the service.</span></span> <span data-ttu-id="a2d2f-105">これは、<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> によって提供されます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-105">This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</span></span> <span data-ttu-id="a2d2f-106">二重バインディングでは、クライアントの IP アドレスをサービスに公開します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-106">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="a2d2f-107">クライアントは、セキュリティを使用して信頼するサービスに対して接続のみを可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-107">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
 <span data-ttu-id="a2d2f-108">既定では、<xref:System.ServiceModel.WSDualHttpBinding> は、次のバインド要素スタックを生成します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-108">By default the <xref:System.ServiceModel.WSDualHttpBinding> generates the following binding element stack:</span></span>  
  
-   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>  
  
-   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>  
  
-   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>  
  
-   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>  
  
-   <xref:System.ServiceModel.Channels.OneWayBindingElement>  
  
-   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-109">構成ファイルで `wsDualHttpBinding` バインディングを指定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-109">The following example shows how to specify the `wsDualHttpBinding` binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#134](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#134)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2d2f-110"><see cref="T:System.ServiceModel.WSDualHttpBinding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-110">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2d2f-111"><see cref="T:System.ServiceModel.WSDualHttpBinding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-111">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2d2f-112">次の例では、wsDualHttpBinding にパラメーターなしのコンストラクターを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-112">The following example shows how to use the parameterless constructor for wsDualHttpBinding.</span></span>  
  
 [!code-csharp[S_dualhttp#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#1)]
 [!code-vb[S_dualhttp#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (System.ServiceModel.WSDualHttpSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.WSDualHttpSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As WSDualHttpSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::ServiceModel::WSDualHttpSecurityMode securityMode);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSDualHttpBinding : System.ServiceModel.WSDualHttpSecurityMode -&gt; System.ServiceModel.WSDualHttpBinding" Usage="new System.ServiceModel.WSDualHttpBinding securityMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.WSDualHttpSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode"><span data-ttu-id="a2d2f-113">SOAP メッセージと共に、およびクライアントに対して使用されるセキュリティの種類を指定する <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> の値。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-113">The value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</span></span></param>
        <summary><span data-ttu-id="a2d2f-114">バインドで使用されるセキュリティの種類を指定して、<see cref="T:System.ServiceModel.WSDualHttpBinding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-114">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a specified type of security used by the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-115"><xref:System.ServiceModel.WSDualHttpBinding> では信頼できるメッセージングが必要であるため、<xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> の <xref:System.ServiceModel.WSHttpBinding> コンストラクターのような、これをオフにするスイッチを提供するコンストラクターはありません。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-115">Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-116">指定したセキュリティ モードで `wsDualHttpBinding` コンストラクターを使用する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-116">The following example shows how to use the `wsDualHttpBinding` constructor with a security mode.</span></span>  
  
 [!code-csharp[S_dualhttp#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#3)]
 [!code-vb[S_dualhttp#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (string configName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::String ^ configName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.WSDualHttpBinding : string -&gt; System.ServiceModel.WSDualHttpBinding" Usage="new System.ServiceModel.WSDualHttpBinding configName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configName"><span data-ttu-id="a2d2f-117"><see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" /> のバインド構成の名前。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-117">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span></span></param>
        <summary><span data-ttu-id="a2d2f-118">構成名で指定されたバインディングを使用して、<see cref="T:System.ServiceModel.WSDualHttpBinding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-118">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a binding specified by its configuration name.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="a2d2f-119">名前 <paramref name="configurationName" /> を持つバインディング要素が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-119">The binding element with the name <paramref name="configurationName" /> was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BypassProxyOnLocal : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-120">ローカル アドレスでプロキシ サーバーをバイパスするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-120">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span></span></summary>
        <value><span data-ttu-id="a2d2f-121">ローカル アドレスのプロキシ サーバーをバイパスする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-121"><see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2d2f-122">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-122">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-123">インターネット リソースは、ローカル アドレスを持つ場合ローカルです。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-123">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="a2d2f-124">ローカルアドレスは、同じコンピューター、ローカル LAN、またはイントラネット上にあり、構文的にはピリオド (.) がないことで識別されます。これには、`http://webserver/` と `http://localhost/`の Uri が含まれます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-124">A local address is one that is on the same computer, the local LAN or intranet, and is identified, syntactically, by the lack of a period (.), as in the URIs `http://webserver/` and `http://localhost/`.</span></span>  
  
 <span data-ttu-id="a2d2f-125"><xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> プロパティを設定して、<xref:System.ServiceModel.WSDualHttpBinding> で構成されたエンドポイントがローカル リソースへのアクセス時にプロキシ サーバーを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-125">Setting the <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources.</span></span>  
  
 <span data-ttu-id="a2d2f-126"><xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> が `true` の場合、ローカル インターネット リソースへの要求はプロキシ サーバーを使用しません。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-126">If <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="a2d2f-127">このプロパティを `localhost` に設定した場合で、同じコンピューター上のサービスと対話するクライアントがプロキシを経由するときは、(`true` ではなく) ホスト名を使用します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-127">Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.</span></span>  
  
 <span data-ttu-id="a2d2f-128"><xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> が `false` の場合、すべてのインターネット要求はプロキシ サーバー経由で行われます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-128">When <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-129">構成ファイルで wsDualHttpBinding バインディングを指定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-129">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
  
  
 <span data-ttu-id="a2d2f-130">次の例では、ローカル リソースでプロキシをバイパスするようにこのプロパティを設定しています。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-130">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>  
  
 [!code-csharp[S_dualhttp#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#6)]
 [!code-vb[S_dualhttp#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#6)]  
  
 <span data-ttu-id="a2d2f-131">このプロパティの値は、構成ファイルでも設定できます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-131">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientBaseAddress : Uri with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-132">クライアントのベース アドレスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-132">Gets or sets the base address of the client.</span></span></summary>
        <value><span data-ttu-id="a2d2f-133">クライアントのベース アドレスである <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-133">The <see cref="T:System.Uri" /> that is the base address of the client.</span></span> <span data-ttu-id="a2d2f-134">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-134">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-135">このクライアントのパブリック URI は、コントラクトが双方向の場合に、サービスがクライアントに接触するために必要なコールバック エンドポイントを提供します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-135">This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-136">構成ファイルで wsDualHttpBinding バインディングを指定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-136">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#8)]
 [!code-vb[S_dualhttp#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="wSDualHttpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2d2f-137">現在のバインディングに含まれるバインディング要素の順序付けられたコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-137">Returns an ordered collection of binding elements contained in the current binding.</span></span></summary>
        <returns><span data-ttu-id="a2d2f-138"><see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> を含む <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" />。<see cref="T:System.ServiceModel.WSDualHttpBinding" /> では信頼できるセッションが必要であるため、<see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> も含まれます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-138">A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that includes a <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> and, because a reliable session is required for the <see cref="T:System.ServiceModel.WSDualHttpBinding" />, a <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2d2f-139">現在のバインドに含まれる、順序付けられたバインド要素のコレクションを取得する方法を、次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-139">The following example shows how to get an ordered collection of binding elements contained in the current binding.</span></span>  
  
 [!code-csharp[S_dualhttp#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#20)]
 [!code-vb[S_dualhttp#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-140">このバインドによって処理されるメッセージに使用される SOAP のバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-140">Gets the version of SOAP that is used for messages that are processed by this binding.</span></span></summary>
        <value><span data-ttu-id="a2d2f-141">このバインディングと共に使用される <see cref="T:System.ServiceModel.EnvelopeVersion" /> の値。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-141">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span></span> <span data-ttu-id="a2d2f-142">値は常に SOAP 1.2 でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-142">The value must always be SOAP 1.2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2d2f-143">このバインドで処理されるメッセージで使用される SOAP のバージョンを取得する方法を、次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-143">The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.</span></span>  
  
 [!code-csharp[S_dualhttp#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#21)]
 [!code-vb[S_dualhttp#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberSignature Language="F#" Value="member this.HostNameComparisonMode : System.ServiceModel.HostNameComparisonMode with get, set" Usage="System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-144">URI が一致した場合にサービスに到達するためにホスト名を使用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-144">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span></span></summary>
        <value><span data-ttu-id="a2d2f-145">URI で一致する場合にサービスに到達するためにホスト名を使用するかどうかを示す <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-145">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span></span> <span data-ttu-id="a2d2f-146">既定値は <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" /> で、一致しているホスト名を無視します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-146">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2d2f-147">構成ファイルで wsDualHttpBinding バインディングを指定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-147">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#9)]
 [!code-vb[S_dualhttp#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-148">このバインドで構成されるエンドポイントでメッセージを受信するメッセージ バッファーのマネージャーに割り当て可能な最大メモリ量 (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-148">Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="a2d2f-149">このバインディングで構成されるエンドポイントによって使用されるバッファーのプールの最大サイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-149">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span></span> <span data-ttu-id="a2d2f-150">既定値は524288バイトです。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-150">The default value is 524288 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-151"><xref:System.ServiceModel.Channels.BufferManager> は、バッファー プールを使用することで、バッファーの使用コストを最小化します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-151">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool.</span></span> <span data-ttu-id="a2d2f-152">バッファーは、チャネルから出てくるメッセージをサービスが処理するときに必要です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-152">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="a2d2f-153">メッセージの読み込み処理に十分なメモリがバッファー プールにない場合、<xref:System.ServiceModel.Channels.BufferManager> は、CLR ヒープから追加のメモリを割り当てる必要があります。これにより、ガベージ コレクションのオーバーヘッドが増加します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-153">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="a2d2f-154">CLR ガベージ ヒープから多大な割り当てが行われることは、バッファー プール サイズが小さすぎること、および <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> の制限を緩めて割り当てを増やすとパフォーマンスが向上する可能性があることを示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-154">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> limit.</span></span>  
  
 <span data-ttu-id="a2d2f-155">ここで設定されるバッファー サイズに対する制限は、メッセージ交換のパフォーマンスを最適化するためのものです。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-155">The limitations on buffer size set here are for optimizing the performance of message exchanges.</span></span> <span data-ttu-id="a2d2f-156">メッセージがバッファーに設定された最大値を超える場合に、メッセージが失われることはありません。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-156">If a message exceeds the maximum value set for the buffer, it is not dropped.</span></span> <span data-ttu-id="a2d2f-157">この場合は、CLR ヒープからのメモリがより多く要求され、これによりバッファーの使用時よりも多くのガベージ コレクションのオーバーヘッドが生じます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-157">Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-158">`MaxBufferPoolSize` を設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-158">The following example shows how to set the `MaxBufferPoolSize`.</span></span>  
  
 [!code-csharp[S_dualhttp#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#10)]
 [!code-vb[S_dualhttp#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-159">このバインディングで構成されたチャネルで受信可能なメッセージの最大サイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-159">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span></span></summary>
        <value><span data-ttu-id="a2d2f-160">バインドで処理されるメッセージの最大サイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-160">The maximum size, in bytes, for a message that is processed by the binding.</span></span> <span data-ttu-id="a2d2f-161">既定値は 65,536 バイトです。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-161">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-162"><xref:System.ServiceModel.WSDualHttpBinding> を使用するサービスがワイヤ上で受信できるメッセージのサイズは、各メッセージに割り当てられたメモリの大きさに制限されます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-162">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="a2d2f-163">このメッセージ サイズの制限は、DoS スタイルの攻撃への露出を制限するためのものです。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-163">This bound on message size is intended to limit exposure to DOS-style attacks.</span></span>  
  
 <span data-ttu-id="a2d2f-164"><xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> および <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> の設定は、ローカルの動作設定であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-164">Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings.</span></span> <span data-ttu-id="a2d2f-165">これは、それらがメタデータの他のエンドポイントに転送されないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-165">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="a2d2f-166">メタデータから、最大メッセージ サイズ 2 GB でサービスへのプロキシを生成する場合、プロキシは既定値の 64K のままです。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-166">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.</span></span> <span data-ttu-id="a2d2f-167">これによって、メッセージおよびメッセージ バッファー サイズの適切な制限を、引き続きローカル管理者が制御できます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-167">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-168"><xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> プロパティを取得する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-168">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#22)]
 [!code-vb[S_dualhttp#22](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a2d2f-169">値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-169">The value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberSignature Language="F#" Value="member this.MessageEncoding : System.ServiceModel.WSMessageEncoding with get, set" Usage="System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-170">SOAP メッセージのエンコードに MTOM または Text/XML が使用されるかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-170">Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</span></span></summary>
        <value><span data-ttu-id="a2d2f-171"><see cref="T:System.ServiceModel.WSMessageEncoding" /> の値は、SOAP メッセージのエンコードで MTOM または Text/XML が使用されることを示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-171">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates that MTOM or Text/XML is used to encode SOAP messages.</span></span> <span data-ttu-id="a2d2f-172">既定値は <see cref="F:System.ServiceModel.WSMessageEncoding.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-172">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2d2f-173">`WSMessageEncoding` プロパティを MTOM に設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-173">The following example shows how to set the `WSMessageEncoding` property to MTOM.</span></span>  
  
 [!code-csharp[S_dualhttp#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#11)]
 [!code-vb[S_dualhttp#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProxyAddress : Uri with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-174">HTTP プロキシの URI アドレスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-174">Gets or sets the URI address of the HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="a2d2f-175">HTTP プロキシのアドレスとして使用できる <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-175">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span></span> <span data-ttu-id="a2d2f-176">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-176">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-177"><xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> を `true` に設定した場合、<xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> の値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-177">If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of the <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-178">HTTP プロキシのアドレスを指定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-178">The following example shows how to specify the address of the HTTP proxy.</span></span>  
  
 [!code-csharp[S_dualhttp#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#12)]
 [!code-vb[S_dualhttp#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-179">このバインディングを使用して設定されるエンドポイントにより処理可能な、SOAP メッセージの複雑さに対する制約を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-179">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="a2d2f-180">複雑さの制約を指定する <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-180">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-181">複雑さの制約には、要素の最大深度やメッセージ内の文字列コンテンツの最大長などの項目が含まれます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-181">The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</span></span> <span data-ttu-id="a2d2f-182">制約は、メッセージの複雑さを使用してエンドポイント処理リソースを停滞させるサービス拒否 (DOS) 型の攻撃から保護します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-182">The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-183">`ReaderQuotas` プロパティを取得する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-183">The following example shows how to get the `ReaderQuotas` property.</span></span>  
  
 [!code-csharp[S_dualhttp#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#13)]
 [!code-vb[S_dualhttp#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReliableSession ReliableSession { get; }" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ReliableSession ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReliableSession As ReliableSession" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReliableSession ^ ReliableSession { System::ServiceModel::ReliableSession ^ get(); };" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.ReliableSession : System.ServiceModel.ReliableSession" Usage="System.ServiceModel.WSDualHttpBinding.ReliableSession" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReliableSession ReliableSession { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliableSession As ReliableSession" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReliableSession ^ ReliableSession { System::ServiceModel::ReliableSession ^ get(); void set(System::ServiceModel::ReliableSession ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ReliableSession : System.ServiceModel.ReliableSession with get, set" Usage="System.ServiceModel.WSDualHttpBinding.ReliableSession" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReliableSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-184">システム指定のバインディングのいずれかを使用したときに使用できる、信頼できるセッションのバインド要素のプロパティにアクセスする便利な方法を提供するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-184">Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span></span></summary>
        <value><span data-ttu-id="a2d2f-185">システム指定のバインドのいずれかを使用したときに使用できる、信頼できるセッションのバインド要素のプロパティにアクセスする便利な方法を提供する <see cref="T:System.ServiceModel.ReliableSession" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-185">The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-186"><xref:System.ServiceModel.WSDualHttpBinding> で構成されたサービスでは、信頼できるセッションが必要です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-186">The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-187"><xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A> プロパティを取得する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-187">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#14)]
 [!code-vb[S_dualhttp#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.WSDualHttpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-188">このバインディングで構成されたチャネルとリスナーのための URI トランスポート スキームを取得します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-188">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span></span></summary>
        <value><span data-ttu-id="a2d2f-189">トランスポート スキーム : "http"。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-189">The transport scheme: "http".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2d2f-190">構成ファイルで wsDualHttpBinding バインディングを指定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-190">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#15)]
 [!code-vb[S_dualhttp#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSDualHttpSecurity Security { get; }" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.WSDualHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Security As WSDualHttpSecurity" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSDualHttpSecurity ^ Security { System::ServiceModel::WSDualHttpSecurity ^ get(); };" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.WSDualHttpSecurity" Usage="System.ServiceModel.WSDualHttpBinding.Security" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSDualHttpSecurity Security { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As WSDualHttpSecurity" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSDualHttpSecurity ^ Security { System::ServiceModel::WSDualHttpSecurity ^ get(); void set(System::ServiceModel::WSDualHttpSecurity ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.WSDualHttpSecurity with get, set" Usage="System.ServiceModel.WSDualHttpBinding.Security" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSDualHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-191">このバインドで使用されるセキュリティの設定を指定するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-191">Gets an object that specifies the security settings used with this binding.</span></span></summary>
        <value><span data-ttu-id="a2d2f-192">このバインドで使用されるセキュリティの設定を指定する <see cref="T:System.ServiceModel.WSDualHttpSecurity" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-192">The <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> that specifies security settings used with the binding.</span></span> <span data-ttu-id="a2d2f-193"><see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> の既定値は <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-193">The default value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-194">二重バインディングでは、クライアントの IP アドレスをサービスに公開します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-194">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="a2d2f-195">クライアントは、セキュリティを使用して信頼するサービスに対して接続のみを可能にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-195">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-196">バインドのセキュリティの種類を取得する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-196">The following example shows how to get the type of security of the binding.</span></span>  
  
 [!code-csharp[S_dualhttp#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#16)]
 [!code-vb[S_dualhttp#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2d2f-197"><see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> プロパティが既定値から変更されたためにシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-197">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns><span data-ttu-id="a2d2f-198"><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-198"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReliableSession">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReliableSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReliableSession () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReliableSession();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReliableSession : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeReliableSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2d2f-199"><see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> プロパティが既定値から変更されたためにシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-199">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns><span data-ttu-id="a2d2f-200"><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-200"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2d2f-201"><see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> プロパティが既定値から変更されたためにシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-201">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns><span data-ttu-id="a2d2f-202"><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-202"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTextEncoding : unit -&gt; bool" Usage="wSDualHttpBinding.ShouldSerializeTextEncoding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2d2f-203"><see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> プロパティが既定値から変更されたためにシリアル化する必要があるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-203">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns><span data-ttu-id="a2d2f-204"><see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-204"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-205">受信要求を同期処理するか、または非同期処理するかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-205">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="a2d2f-206">要求が同期的に処理される場合は <see langword="true" />。非同期的に処理される場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-206"><see langword="true" /> if requests are handled synchronously; <see langword="false" /> if handled asynchronously.</span></span> <span data-ttu-id="a2d2f-207">返される値は常に <see langword="false" /> であり、要求は非同期で処理されます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-207">The value returned is always is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-208">この値は、サービス モデル動作を使用して変更できます。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-208">This value can be changed by using a service model behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-209">次の例では、<xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-209">The following examples show how to get the <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> value.</span></span>  
  
 [!code-csharp[S_dualhttp#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#23)]
 [!code-vb[S_dualhttp#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#23)]  
  
 [!code-csharp[S_dualhttp#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#24)]
 [!code-vb[S_dualhttp#24](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextEncoding : System.Text.Encoding with get, set" Usage="System.ServiceModel.WSDualHttpBinding.TextEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-210">メッセージ テキストに使用される文字エンコーディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-210">Gets or sets the character encoding that is used for the message text.</span></span></summary>
        <value><span data-ttu-id="a2d2f-211">使用されている文字エンコードを示す <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-211">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span></span> <span data-ttu-id="a2d2f-212">既定値は、<see cref="T:System.Text.UTF8Encoding" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-212">The default is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2d2f-213">メッセージ テキストに使用される文字エンコーディングを取得する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-213">The following example shows how to get the character encoding that is used for the message text.</span></span>  
  
 [!code-csharp[S_dualhttp#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#17)]
 [!code-vb[S_dualhttp#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionFlow : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-214">このバインディングが WS-Transactions のフローをサポートするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-214">Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</span></span></summary>
        <value><span data-ttu-id="a2d2f-215">トランザクション フローがサポートされる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-215"><see langword="true" /> if the flowing of transactions is supported; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2d2f-216">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-216">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2d2f-217">既定値は、クライアントがトランザクションをフローせず、サービスが、フローされたトランザクション メッセージ ヘッダーを持つメッセージを拒否するよう指定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-217">The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2d2f-218">トランザクションのフローをサポートする `TransactionFlow` プロパティを設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-218">The following example shows how to set the `TransactionFlow` property to support the flowing of transactions.</span></span>  
  
 [!code-csharp[S_dualhttp#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#18)]
 [!code-vb[S_dualhttp#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultWebProxy : bool with get, set" Usage="System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2d2f-219">使用できる場合にシステムの自動構成される HTTP プロキシを使用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-219">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span></span></summary>
        <value><span data-ttu-id="a2d2f-220">システムの自動構成される HTTP プロキシを使用する必要がある場合 (利用可能な場合) は、<see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-220"><see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2d2f-221">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-221">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a2d2f-222">システムの自動構成される HTTP プロキシを使用する `UseDefaultWebProxy` プロパティを設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="a2d2f-222">The following example shows how to set the `UseDefaultWebProxy` property to use the auto-configured HTTP proxy of the system.</span></span>  
  
 [!code-csharp[S_dualhttp#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#19)]
 [!code-vb[S_dualhttp#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
