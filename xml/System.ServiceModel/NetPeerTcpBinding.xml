<Type Name="NetPeerTcpBinding" FullName="System.ServiceModel.NetPeerTcpBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c47df9b829b12a8e456ea556fe3ced4ac2151a24" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78787707" /></Metadata><TypeSignature Language="C#" Value="public class NetPeerTcpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetPeerTcpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.NetPeerTcpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class NetPeerTcpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetPeerTcpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type NetPeerTcpBinding = class&#xA;    inherit Binding&#xA;    interface IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("PeerChannel feature is obsolete and will be removed in the future.", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="39ad2-101">ピア ツー ピア ネットワーク アプリケーション用のセキュリティで保護されたバインドを用意します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-101">Provides a secure binding for peer-to-peer network applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ad2-102"><xref:System.ServiceModel.NetPeerTcpBinding> バインドは、TCP レベルのピア ツー ピア メッシュ インフラストラクチャを使用するピア ネットワーキング アプリケーションの作成をサポートします。</span><span class="sxs-lookup"><span data-stu-id="39ad2-102">The <xref:System.ServiceModel.NetPeerTcpBinding> binding provides support for the creation of peer networking applications that use a TCP-level peer-to-peer mesh infrastructure.</span></span>  
  
 <span data-ttu-id="39ad2-103">各 <xref:System.ServiceModel.PeerNode> インスタンスは、この種類のバイディングを使用して定義された複数のピア チャネルをホストできます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-103">Each <xref:System.ServiceModel.PeerNode> instance can host multiple peer channels defined with this binding type.</span></span> <span data-ttu-id="39ad2-104">この種類の構成済みのインスタンスで作成されたチャネル ファクトリを使用すると、ピア チャネルを生成できます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-104">Channel factories produced using a configured instance of this type can be used to generate peer channels.</span></span> <span data-ttu-id="39ad2-105">ピア チャネル ファクトリは、入力のみ (<xref:System.ServiceModel.Channels.IInputChannel> を実装)、出力のみ (<xref:System.ServiceModel.Channels.IOutputChannel> を実装)、および二重 (<xref:System.ServiceModel.Channels.IDuplexChannel> を実装) であるピア チャネルを生成できます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-105">A peer channel factory can produce peer channels that are input-only (implements <xref:System.ServiceModel.Channels.IInputChannel>), output-only (implements <xref:System.ServiceModel.Channels.IOutputChannel>), and duplex (implements <xref:System.ServiceModel.Channels.IDuplexChannel>).</span></span>  
  
 <span data-ttu-id="39ad2-106">これは、Windows Communication Framework (WCF) が提供する標準バインドの 1 つです。</span><span class="sxs-lookup"><span data-stu-id="39ad2-106">This is one of the standard bindings provided by the Windows Communication Framework (WCF).</span></span> <span data-ttu-id="39ad2-107">このバインドは、強制コード内で使用するか、アプリケーションの対応する XML 構成ファイルの中に指定できます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-107">It can be used in imperative code or specified in the corresponding XML configuration file for the application.</span></span> <span data-ttu-id="39ad2-108">手順としては、構成値を使用するバインディングを定義し、コードベースの方法を使用しないことをお勧めします。ただし、サービスの初期化時に構成値を設定する必要がある特定の高度なシナリオの場合は除きます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-108">The recommended procedure is to define the binding using configuration values and not to use a code-based approach, except in certain advanced scenarios where configuration values must be set as a service is initialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="39ad2-109"><see cref="T:System.ServiceModel.NetPeerTcpBinding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-109">Initializes a new instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetPeerTcpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetPeerTcpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39ad2-110"><see cref="T:System.ServiceModel.NetPeerTcpBinding" /> クラスの新しい既定のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-110">Initializes a new default instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetPeerTcpBinding (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configurationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetPeerTcpBinding(System::String ^ configurationName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.NetPeerTcpBinding : string -&gt; System.ServiceModel.NetPeerTcpBinding" Usage="new System.ServiceModel.NetPeerTcpBinding configurationName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName"><span data-ttu-id="39ad2-111">バインディングを初期化するために設定が使用されるバインド要素を識別する <see langword="configurationName" /> 属性の値。</span><span class="sxs-lookup"><span data-stu-id="39ad2-111">The value of the <see langword="configurationName" /> attribute that identifies the binding element whose settings are used to initialize the binding.</span></span></param>
        <summary><span data-ttu-id="39ad2-112">構成名を指定して、<see cref="T:System.ServiceModel.NetPeerTcpBinding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-112">Initializes a new instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class with a specified configuration name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ad2-113">このコンストラクターは、指定された名前で新しい <xref:System.ServiceModel.NetPeerTcpBinding> を作成します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-113">This constructor creates a new <xref:System.ServiceModel.NetPeerTcpBinding> with the supplied name.</span></span> <span data-ttu-id="39ad2-114">指定された名前の構成が既に存在する場合は、その名前を含む構成ファイルの設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-114">If a configuration for that name already exists, the settings in the configuration file that contains that name are used.</span></span> <span data-ttu-id="39ad2-115">指定された名前が存在しない場合は、既定の構成設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-115">If the name does not already exist, the default configuration settings are used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException"><span data-ttu-id="39ad2-116">構成が無効です。</span><span class="sxs-lookup"><span data-stu-id="39ad2-116">The configuration is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberSignature Language="F#" Value="override this.CreateBindingElements : unit -&gt; System.ServiceModel.Channels.BindingElementCollection" Usage="netPeerTcpBinding.CreateBindingElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39ad2-117">バインド用のバインド要素でコレクションを作成します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-117">Creates a collection with the binding elements for the binding.</span></span></summary>
        <returns><span data-ttu-id="39ad2-118">バインドを構成する <see cref="T:System.Collections.Generic.ICollection`1" /> 型の <see cref="T:System.ServiceModel.Channels.BindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="39ad2-118">The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvelopeVersion : System.ServiceModel.EnvelopeVersion" Usage="System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-119">このバインドで使用される SOAP のバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-119">Gets the SOAP version used with this binding.</span></span></summary>
        <value><span data-ttu-id="39ad2-120">このバイディングで使用される SOAP のバージョンを指定する <see cref="T:System.ServiceModel.EnvelopeVersion" />。</span><span class="sxs-lookup"><span data-stu-id="39ad2-120"><see cref="T:System.ServiceModel.EnvelopeVersion" /> that specifies the version of SOAP to use with this binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPnrpAvailable">
      <MemberSignature Language="C#" Value="public static bool IsPnrpAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsPnrpAvailable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsPnrpAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsPnrpAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPnrpAvailable : bool" Usage="System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-121">コンピューターに PNRP サービスがインストールされ、使用可能であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-121">Gets a value that indicates whether the PNRP service is installed and available on the computer.</span></span></summary>
        <value><span data-ttu-id="39ad2-122">PNRP がインストールされ、構成されている場合は <see langword="true" />それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-122"><see langword="true" /> if PNRP is installed and configured; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenIPAddress">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress ListenIPAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress ListenIPAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenIPAddress As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ ListenIPAddress { System::Net::IPAddress ^ get(); void set(System::Net::IPAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ListenIPAddress : System.Net.IPAddress with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.ListenIPAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.PeerTransportListenAddressConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-123">ローカル ピア ノードによるリッスンで使用される IP アドレスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-123">Gets or sets the IP address used for listening by the local peer node.</span></span></summary>
        <value><span data-ttu-id="39ad2-124">ローカル ピア ノードがリッスンする、正しい形式の IPv4 または IPv6 アドレスを格納する <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="39ad2-124">A <see cref="T:System.String" /> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ad2-125">このプロパティが設定されていない、あるいは `null` または <xref:System.String.Empty> に設定されている場合は、関連付けられた <xref:System.ServiceModel.PeerNode> は、ローカル マシンに対して構成されたすべてのグローバル アドレス (IPv4 と IPv6 の両方) 上でリッスンします。</span><span class="sxs-lookup"><span data-stu-id="39ad2-125">If this property is not set, or is set to `null` or <xref:System.String.Empty>, the associated <xref:System.ServiceModel.PeerNode> listens on all global addresses (both IPv4 and IPv6) configured for the local machine.</span></span>  
  
 <span data-ttu-id="39ad2-126">このプロパティで有効なユニキャスト IP アドレスを指定した場合、関連する <xref:System.ServiceModel.PeerNode> オブジェクトがそのアドレス上で待機します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-126">If a valid unicast IP address is specified for this property, then the associated <xref:System.ServiceModel.PeerNode> object listens on that address.</span></span> <span data-ttu-id="39ad2-127">IPv4 および IPv6 のワイルドカード アドレスは、有効なアドレスとは見なされません。</span><span class="sxs-lookup"><span data-stu-id="39ad2-127">IPv4 and IPv6 wildcard addresses are not considered valid.</span></span>  
  
 <span data-ttu-id="39ad2-128">`null` と組み合わせてこのプロパティに <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement> 以外の IP アドレス文字列を指定する場合は、IP アドレスを仮想インターフェイスではなく物理インターフェイスに関連付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="39ad2-128">If a non-`null` IP address string is specified for this property in conjunction with <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement>, then the IP address must be associated with a physical interface rather than a virtual one.</span></span>  
  
 <span data-ttu-id="39ad2-129">既定のピア リゾルバー (PNRP) で登録するには、アドホック ネットワーク用の ListenIPAddress を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="39ad2-129">ListenIPAddress must be set for ad-hoc networks in order to register with the default peer resolver (PNRP).</span></span> <span data-ttu-id="39ad2-130">このプロパティを <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (既定のピア リゾルバー) と組み合わせて指定する場合、IP アドレスは、仮想ネットワーク インターフェイス (トンネル インターフェイスなど) ではなく、物理ネットワーク インターフェイスに属している必要があります。</span><span class="sxs-lookup"><span data-stu-id="39ad2-130">If this property is specified in conjunction with <xref:System.ServiceModel.Configuration.PnrpPeerResolverElement> (the default peer resolver), then the IP address must belong to a physical network interface rather than a virtual one (such as a tunneling interface).</span></span> <span data-ttu-id="39ad2-131">これは、PNRP は、物理インターフェイスに対応する PNRP クラウド内でのみ公開するためです。</span><span class="sxs-lookup"><span data-stu-id="39ad2-131">This is because PNRP only publishes within PNRP clouds corresponding to physical interfaces.</span></span> <span data-ttu-id="39ad2-132">このプロパティを null に設定すると、すべてのグローバル アドレスがグローバルな PNRP 集団内に公開されます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-132">By setting this property to null, all global addresses are published in the global PNRP cloud.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="39ad2-133">提供されたアドレスが無効である、または形式が間違っています。</span><span class="sxs-lookup"><span data-stu-id="39ad2-133">The provided address is invalid or incorrectly formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxBufferPoolSize : int64 with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-134">ピア TCP バッファーで使用されるメモリ プールの最大サイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-134">Gets or sets the maximum size, in bytes, of the memory pool used for the peer TCP buffer.</span></span></summary>
        <value><span data-ttu-id="39ad2-135">入力メッセージをメモリ内にバッファーするために使用される最大バイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="39ad2-135">A <see cref="T:System.Int32" /> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory.</span></span> <span data-ttu-id="39ad2-136">既定値は 65,536 バイトです。</span><span class="sxs-lookup"><span data-stu-id="39ad2-136">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ad2-137"><xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> の値は、<xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> の値 (既定値は 65536 バイト (64 KB)) よりも小さくすることはできません。</span><span class="sxs-lookup"><span data-stu-id="39ad2-137">The value of <xref:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize%2A> cannot be less than <xref:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize%2A> whose default value is 65536 bytes (64 KB).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxReceivedMessageSize : int64 with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-138">このバインディングによって作成されるピア チャネルで処理される TCP メッセージの最大サイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-138">Gets or sets the maximum size, in bytes, of TCP messages handled by peer channels created by this binding.</span></span></summary>
        <value><span data-ttu-id="39ad2-139">このバインドによって作成されるピア チャネル上で送信される TCP メッセージのバイト単位の最大サイズを格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="39ad2-139"><see cref="T:System.Int32" /> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding.</span></span> <span data-ttu-id="39ad2-140">既定値は 65,536 (64 KB) です。</span><span class="sxs-lookup"><span data-stu-id="39ad2-140">The default value is 65,536 (64 KB).</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-141">バインドするネットワーク ポートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-141">Gets or sets the network port on which to bind.</span></span></summary>
        <value><span data-ttu-id="39ad2-142">このバインド インスタンスがピア固有の TCP メッセージを処理するネットワーク ポートを表す <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="39ad2-142">A <see cref="T:System.Int32" /> value that represents the network port on which this binding instance will process peer-specific TCP messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ad2-143">ポートが無効な場合は、<xref:System.ArgumentException> が発生します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-143">If the port value is invalid, <xref:System.ArgumentException> is raised.</span></span> <span data-ttu-id="39ad2-144">このプロパティの既定値は 0 です。これは、予約されていないすべてのポートからランダムにリスナー ポートが選択されることを示します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-144">The default value for this property is 0, which indicates that the listener port is randomly selected from all unreserved ports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-145">このバインドに関連付けられる <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-145">Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</span></span></summary>
        <value><span data-ttu-id="39ad2-146">このバインドに関連付けられている <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</span><span class="sxs-lookup"><span data-stu-id="39ad2-146">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="39ad2-147">アプリケーションがこのプロパティを null に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="39ad2-147">The application attempted to set this property to null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Resolver">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerResolvers.PeerResolverSettings Resolver" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Resolver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resolver As PeerResolverSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerResolvers::PeerResolverSettings ^ Resolver { System::ServiceModel::PeerResolvers::PeerResolverSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Resolver : System.ServiceModel.PeerResolvers.PeerResolverSettings" Usage="System.ServiceModel.NetPeerTcpBinding.Resolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.PeerResolverSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-148">このバインド インスタンスがピア メッシュ ID をピア メッシュ内のノードのエンドポイント IP アドレスに解決するために使用する <see cref="T:System.ServiceModel.PeerResolver" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-148">Gets the <see cref="T:System.ServiceModel.PeerResolver" /> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh.</span></span></summary>
        <value><span data-ttu-id="39ad2-149">ピア メッシュ ID を、メッシュに参加する複数のノードを表す <see cref="T:System.ServiceModel.PeerResolver" /> インスタンスのセットに解決するために使用される <see cref="T:System.ServiceModel.PeerNodeAddress" />。</span><span class="sxs-lookup"><span data-stu-id="39ad2-149">A <see cref="T:System.ServiceModel.PeerResolver" /> used to resolve a peer mesh ID to a set of <see cref="T:System.ServiceModel.PeerNodeAddress" /> instances representing several nodes participating in the mesh.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.NetPeerTcpBinding.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-150">このバインドに関連付けられるトランスポート プロトコルで使用される URI スキームを取得します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-150">Gets the URI scheme used for the transport protocol associated with this binding.</span></span></summary>
        <value><span data-ttu-id="39ad2-151">このバインドで使用される特定のトランスポート プロトコルの URI スキームを指定する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="39ad2-151">A <see cref="T:System.String" /> that specifies the URI scheme for the specific transport protocol used for this binding.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="39ad2-152">この値は "net.p2p" である必要があります。</span><span class="sxs-lookup"><span data-stu-id="39ad2-152">This value must be "net.p2p".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerSecuritySettings Security { get; }" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerSecuritySettings Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Security As PeerSecuritySettings" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerSecuritySettings ^ Security { System::ServiceModel::PeerSecuritySettings ^ get(); };" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.PeerSecuritySettings" Usage="System.ServiceModel.NetPeerTcpBinding.Security" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerSecuritySettings Security { get; set; }" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As PeerSecuritySettings" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::PeerSecuritySettings ^ Security { System::ServiceModel::PeerSecuritySettings ^ get(); void set(System::ServiceModel::PeerSecuritySettings ^ value); };" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Security : System.ServiceModel.PeerSecuritySettings with get, set" Usage="System.ServiceModel.NetPeerTcpBinding.Security" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerSecuritySettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-153">このバインドによって作成されるピア チャネルのセキュリティ設定を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-153">Gets or sets the security to set on peer channels created by this binding.</span></span></summary>
        <value><span data-ttu-id="39ad2-154">このバインドによって作成されるピア チャネルに対して設定するセキュリティを示す <see cref="T:System.ServiceModel.PeerSecuritySettings" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="39ad2-154"><see cref="T:System.ServiceModel.PeerSecuritySettings" /> enumeration value that indicates the security to set on peer channels created by this binding.</span></span> <span data-ttu-id="39ad2-155">セキュリティは、メッセージ固有にすることも、トランスポート固有にすることもできます。</span><span class="sxs-lookup"><span data-stu-id="39ad2-155">Security can be either message- or transport-specific.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeReaderQuotas : unit -&gt; bool" Usage="netPeerTcpBinding.ShouldSerializeReaderQuotas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39ad2-156">バインドのリーダー クォータ データをシリアル化する必要があるかどうかを指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-156">Gets a value that specifies whether reader quota data for the binding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="39ad2-157">リーダー クォータ データをシリアル化する必要がある場合は <see cref="T:System.Boolean" /> を示し、シリアル化が必要ない場合は <see langword="true" /> を示す <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-157">Returns <see cref="T:System.Boolean" /> that specifies <see langword="true" /> if reader quota data should be serialized, and <see langword="false" /> if it should not be serialized.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSecurity : unit -&gt; bool" Usage="netPeerTcpBinding.ShouldSerializeSecurity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="39ad2-158">バインドのセキュリティ情報をシリアル化する必要があるかどうかを指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-158">Gets a value that specifies whether security information for the binding should be serialized.</span></span></summary>
        <returns><span data-ttu-id="39ad2-159">バインディングのセキュリティ情報をシリアル化する必要がある場合は <see cref="T:System.Boolean" /> を示し、シリアル化が必要ない場合は <see langword="true" /> を示す <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-159">Returns <see cref="T:System.Boolean" /> that specifies <see langword="true" /> if the security information for the binding should be serialized, and <see langword="false" /> if it should not be serialized.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ServiceModel::Channels::IBindingRuntimePreferences::ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="39ad2-160">このバインドによって作成されるピア チャネル上の受信要求を、同期または非同期のどちらで処理するかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="39ad2-160">Gets a value that indicates whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="39ad2-161">受信要求が同期的に処理されるかどうかを <see langword="true" /> します。非同期的に処理される場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="39ad2-161"><see langword="true" /> if incoming requests are handled synchronously; <see langword="false" /> if they are handled asynchronously.</span></span> <span data-ttu-id="39ad2-162">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="39ad2-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
