<Type Name="ServiceContractAttribute" FullName="System.ServiceModel.ServiceContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f572344a4a9e9fdc13798bfa90a0b7c30f9ea824" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82304102" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ServiceContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-uwp-10.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e73c0-101">インターフェイスまたはクラスが、Windows Communication Foundation (WCF) アプリケーション内にサービス コントラクトを定義することを示します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-101">Indicates that an interface or a class defines a service contract in a Windows Communication Foundation (WCF) application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e73c0-102">インターフェイス (またはクラス) に対して <xref:System.ServiceModel.ServiceContractAttribute> 属性を使用して、サービス コントラクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-102">Use the <xref:System.ServiceModel.ServiceContractAttribute> attribute on an interface (or class) to define a service contract.</span></span> <span data-ttu-id="e73c0-103">その後、1 つ以上のクラス (またはインターフェイス) のメソッドに対して <xref:System.ServiceModel.OperationContractAttribute> 属性を使用して、コントラクトのサービス操作を定義します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-103">Then use the <xref:System.ServiceModel.OperationContractAttribute> attribute on one or more of the class (or interface) methods to define the contract's service operations.</span></span> <span data-ttu-id="e73c0-104">サービスコントラクトが実装され、[バインド](~/docs/framework/wcf/bindings.md)と <xref:System.ServiceModel.EndpointAddress> オブジェクトと組み合わされると、サービスコントラクトがクライアントによって使用されるように公開されます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-104">When the service contract is implemented and combined with a [Bindings](~/docs/framework/wcf/bindings.md) and an <xref:System.ServiceModel.EndpointAddress> object, the service contract is exposed for use by clients.</span></span> <span data-ttu-id="e73c0-105">単純な例を使用したプロセスの概要については、「[はじめにチュートリアル](~/docs/framework/wcf/getting-started-tutorial.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-105">For an overview of the process using simple examples, see [Getting Started Tutorial](~/docs/framework/wcf/getting-started-tutorial.md).</span></span> <span data-ttu-id="e73c0-106">サービスコントラクトの作成の詳細については、「[サービスの設計と実装](~/docs/framework/wcf/designing-and-implementing-services.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-106">For more information about creating service contracts, see [Designing and Implementing Services](~/docs/framework/wcf/designing-and-implementing-services.md).</span></span>  
  
 <span data-ttu-id="e73c0-107"><xref:System.ServiceModel.ServiceContractAttribute> とそのインターフェイスで表現される情報は、Web サービス記述言語 (WSDL) の `<portType>` 要素に大まかに関連しています。</span><span class="sxs-lookup"><span data-stu-id="e73c0-107">The information expressed by a <xref:System.ServiceModel.ServiceContractAttribute> and its interface is loosely related to the Web Services Description Language (WSDL) `<portType>` element.</span></span> <span data-ttu-id="e73c0-108">サービスコントラクトは、サービスのエンドポイントが呼び出し元に公開する対象を指定するために、サービス側で使用されます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-108">A service contract is used on the service side to specify what the service's endpoint exposes to callers.</span></span> <span data-ttu-id="e73c0-109">サービス コントラクトはクライアント側でも使用され、クライアントが通信を行うエンドポイントのコントラクトを指定します。双方向コントラクトの場合は、クライアントが双方向のメッセージ交換を行うために実装する必要があるコールバック コントラクトを (<xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> プロパティを使用して) 指定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-109">It is also used on the client side to specify the contract of the endpoint with which the client communicates and, in the case of duplex contracts, to specify the callback contract (using the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property) that the client must implement in order to participate in a duplex conversation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e73c0-110">さらに、<xref:System.ServiceModel.ServiceContractAttribute> で修飾したインターフェイスまたはクラスがなんらかの機能を公開するには、<xref:System.ServiceModel.OperationContractAttribute> 属性でマークされた、少なくとも 1 つのメソッドを持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="e73c0-110">An interface or class that is decorated with <xref:System.ServiceModel.ServiceContractAttribute> must also have at least one method marked with the <xref:System.ServiceModel.OperationContractAttribute> attribute to expose any functionality.</span></span> <span data-ttu-id="e73c0-111">この 2 つの属性を使用してサービスの定義と実装を行う最も単純な方法のコード例については、「使用例」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-111">See the Examples section for a code example of the simplest use of the two attributes to define and implement a service.</span></span>  
  
 <span data-ttu-id="e73c0-112">サービス コントラクトを変更するには、<xref:System.ServiceModel.ServiceContractAttribute> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-112">Use the <xref:System.ServiceModel.ServiceContractAttribute> properties to modify the service contract.</span></span>  
  
-   <span data-ttu-id="e73c0-113"><xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> プロパティは、使用する構成ファイル内のサービス要素の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-113">The <xref:System.ServiceModel.ServiceContractAttribute.ConfigurationName%2A> property specifies the name of the service element in the configuration file to use.</span></span>  
  
-   <span data-ttu-id="e73c0-114"><xref:System.ServiceModel.ServiceContractAttribute.Name%2A> プロパティと <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> プロパティは、WSDL の`<portType>` 要素内のコントラクトの名前と名前空間を制御します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-114">The <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties control the name and namespace of the contract in the WSDL `<portType>` element.</span></span>  
  
-   <span data-ttu-id="e73c0-115"><xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> プロパティは、コントラクトがセッションをサポートするバインディングを必要とするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-115">The <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property specifies whether the contract requires a binding that supports sessions.</span></span>  
  
-   <span data-ttu-id="e73c0-116"><xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> プロパティは、双方向 (二重) 通信で使用されるリターン コントラクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-116">The <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property specifies the return contract in a two-way (duplex) conversation.</span></span>  
  
-   <span data-ttu-id="e73c0-117"><xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> プロパティと <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> プロパティは、このコントラクトをサポートするすべてのメッセージに明示的な <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> 値が設定されているかどうかを示し、設定されている場合はそのレベルを示します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-117">The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> properties indicate whether all messages supporting the contract have a explicit <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> value, and if so, what that level is.</span></span>  
  
 <span data-ttu-id="e73c0-118">サービスはサービス コントラクトを実装します。サービス コントラクトは、サービスの種類がサポートするデータ交換を表します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-118">Services implement service contracts, which represent the data exchange that a service type supports.</span></span> <span data-ttu-id="e73c0-119">サービス クラスは、<xref:System.ServiceModel.ServiceContractAttribute> でマークされたメソッドを持つ <xref:System.ServiceModel.OperationContractAttribute> でマークされたインターフェイスを実装することで、サービス コントラクトを実装できます。または、<xref:System.ServiceModel.ServiceContractAttribute> でマークし、<xref:System.ServiceModel.OperationContractAttribute> 属性を独自のメソッドに適用できます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-119">A service class can implement a service contract (by implementing an interface marked with <xref:System.ServiceModel.ServiceContractAttribute> that has methods marked with <xref:System.ServiceModel.OperationContractAttribute>) or it can be marked with the <xref:System.ServiceModel.ServiceContractAttribute> and apply the <xref:System.ServiceModel.OperationContractAttribute> attribute to its own methods.</span></span> <span data-ttu-id="e73c0-120">(クラスが <xref:System.ServiceModel.ServiceContractAttribute>でマークされたインターフェイスを実装している場合、そのクラス自体を <xref:System.ServiceModel.ServiceContractAttribute>でマークすることはできません)。<xref:System.ServiceModel.OperationContractAttribute> でマークされたサービスの種類のメソッドは、サービスの種類自体によって指定された既定のサービスコントラクトの一部として扱われます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-120">(If a class implements an interface marked with <xref:System.ServiceModel.ServiceContractAttribute>, it cannot be itself marked with <xref:System.ServiceModel.ServiceContractAttribute>.) Methods on service types that are marked with the <xref:System.ServiceModel.OperationContractAttribute> are treated as part of a default service contract specified by the service type itself.</span></span> <span data-ttu-id="e73c0-121">サービス操作の詳細については、<xref:System.ServiceModel.OperationContractAttribute> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-121">For details about service operations, see <xref:System.ServiceModel.OperationContractAttribute>.</span></span>  
  
 <span data-ttu-id="e73c0-122">既定では、<xref:System.ServiceModel.ServiceContractAttribute.Name%2A> プロパティと <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> プロパティは、それぞれコントラクトの種類と`http://tempuri.org` であり、<xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> は <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-122">By default, the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties are the name of the contract type and `http://tempuri.org`, respectively, and <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e73c0-123">サービス コントラクトでは、名前、名前空間、および保護レベルを、これらのプロパティを使用して明示的に設定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e73c0-123">It is recommended that service contracts explicitly set their names, namespaces, and protection levels using these properties.</span></span> <span data-ttu-id="e73c0-124">この作業により、次の 2 つの目標が達成されます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-124">Doing so accomplishes two goals.</span></span> <span data-ttu-id="e73c0-125">第 1 に、マネージド型情報に直接接続されないコントラクトを構築し、コントラクトを WSDL で表現するときに、コントラクトを壊さずにマネージド コードと名前空間をリファクタリングできます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-125">First, it builds a contract that is not directly connected to the managed type information, enabling you to refactor your managed code and namespaces without breaking the contract as it is expressed in WSDL.</span></span> <span data-ttu-id="e73c0-126">第 2 に、コントラクト自体の保護レベルを明示的に要求することによって、ランタイムがバインド構成でそのレベルのセキュリティがサポートされているかどうかを検証でき、それによって、機密情報を漏洩する不良な構成を回避できます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-126">Second, explicitly requiring a certain level of protection on the contract itself enables the runtime to validate whether the binding configuration supports that level of security, preventing poor configuration from exposing sensitive information.</span></span> <span data-ttu-id="e73c0-127">保護レベルの詳細については、「[保護レベル](~/docs/framework/wcf/understanding-protection-level.md)について」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-127">For more information about protection levels, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="e73c0-128">クライアントアプリケーションで使用するサービスを公開するには、サービスエンドポイントを Windows Communication Foundation (WCF) に登録するホストアプリケーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-128">To expose a service for use by client applications, create a host application to register your service endpoint with Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="e73c0-129">Windows ライセンス認証サービス (WAS)、コンソールアプリケーション、Windows サービスアプリケーション、ASP.NET アプリケーション、Windows フォームアプリケーション、またはその他の種類のアプリケーションドメインを使用して、WCF サービスをホストできます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-129">You can host WCF services using Windows Activation Services (WAS), in console applications, Windows Service applications, ASP.NET applications, Windows Forms applications, or any other kind of application domain.</span></span>  
  
 <span data-ttu-id="e73c0-130">WAS でのホスティングは、ASP.NET アプリケーションの作成とほとんど同じです。</span><span class="sxs-lookup"><span data-stu-id="e73c0-130">Hosting in the WAS is very similar to creating an ASP.NET application.</span></span> <span data-ttu-id="e73c0-131">詳細については、「 [How to: Host a WCF Service IN IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-131">For details, see [How to: Host a WCF Service in IIS](~/docs/framework/wcf/feature-details/how-to-host-a-wcf-service-in-iis.md).</span></span>  
  
 <span data-ttu-id="e73c0-132">クライアントは、サービス コントラクト インターフェイス (<xref:System.ServiceModel.ServiceContractAttribute> でマークされたインターフェイス) を使用してサービスへのチャネルを作成するか、またはクライアント オブジェクト (サービス コントラクト インターフェイスの型情報と <xref:System.ServiceModel.ClientBase%601> クラスの組み合わせ) を使用してサービスと通信します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-132">Clients either use the service contract interface (the interface marked with <xref:System.ServiceModel.ServiceContractAttribute>) to create a channel to the service or they use the client objects (which combine the type information of the service contract interface with the <xref:System.ServiceModel.ClientBase%601> class) to communicate with your service.</span></span> <span data-ttu-id="e73c0-133">サービスへのクライアントチャネルの詳細については、「<xref:System.ServiceModel.ChannelFactory%601> クラス」と「 [WCF クライアントの概要](~/docs/framework/wcf/wcf-client-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-133">For details on client channels to services, see the <xref:System.ServiceModel.ChannelFactory%601> class and [WCF Client Overview](~/docs/framework/wcf/wcf-client-overview.md).</span></span>  
  
 <span data-ttu-id="e73c0-134"><xref:System.ServiceModel.ServiceContractAttribute> クラスまたはインターフェイスを使用して別の <xref:System.ServiceModel.ServiceContractAttribute> クラスまたはインターフェイスから継承すると、親コントラクトが拡張されます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-134">Using a <xref:System.ServiceModel.ServiceContractAttribute> class or interface to inherit from another <xref:System.ServiceModel.ServiceContractAttribute> class or interface extends the parent contract.</span></span> <span data-ttu-id="e73c0-135">たとえば、`IChildContract` インターフェイスが <xref:System.ServiceModel.ServiceContractAttribute> でマークされ、別のサービス コントラクト インターフェイスである `IParentContract` から継承された場合、`IChildContract` サービス コントラクトには、`IParentContract` と `IChildContract` の両方のメソッドが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-135">For example, if an `IChildContract` interface is marked with <xref:System.ServiceModel.ServiceContractAttribute> and inherited from another service contract interface, `IParentContract`, the `IChildContract` service contract contains the methods of both `IParentContract` and `IChildContract`.</span></span> <span data-ttu-id="e73c0-136">コントラクト (クラスまたはインターフェイス) の拡張は、マネージド クラスとマネージド インターフェイスの拡張とほとんど同じです。</span><span class="sxs-lookup"><span data-stu-id="e73c0-136">Extending contracts (whether on classes or interfaces) is very similar to extending managed classes and interfaces.</span></span>  
  
 <span data-ttu-id="e73c0-137">サービスを作成する最も柔軟な方法は、最初にサービス コントラクト インターフェイスを定義し、その後、サービス クラスでそのインターフェイスを実装することです。</span><span class="sxs-lookup"><span data-stu-id="e73c0-137">The most flexible approach to creating services is to define service contract interfaces first and then have your service class implement that interface.</span></span> <span data-ttu-id="e73c0-138">(これは、他のユーザーによって定義されたサービスコントラクトを実装する必要がある場合に、サービスを構築するための最も簡単な方法でもあります)。サービスが1つのコントラクトだけを公開している (ただし、そのコントラクトを複数のエンドポイントで公開できる) 場合は、クラスを <xref:System.ServiceModel.ServiceContractAttribute> とそのメソッドを <xref:System.ServiceModel.OperationContractAttribute> でマークすることによって、サービスを直接構築できます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-138">(This is also the simplest way to build your services if you must implement service contracts that have been defined by others.) Building services directly by marking a class with <xref:System.ServiceModel.ServiceContractAttribute> and its methods with <xref:System.ServiceModel.OperationContractAttribute> works when the service exposes only one contract (but that contract can be exposed by more than one endpoint).</span></span>  
  
 <span data-ttu-id="e73c0-139"><xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> プロパティを使用して、元のサービスコントラクトと共にバインドされている場合に、2つの方法で個別にフローできるメッセージ交換を定義する別のサービスコントラクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-139">Use the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property to indicate another service contract that, when bound together with the original service contract, define a message exchange that can flow in two ways independently.</span></span> <span data-ttu-id="e73c0-140">詳細については、「<xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-140">For details, see <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e73c0-141">次のコード例は、<xref:System.ServiceModel.ServiceContractAttribute> をインターフェイスに適用し、<xref:System.ServiceModel.OperationContractAttribute> によって示される 1 つのサービス メソッドを持つサービス コントラクトを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e73c0-141">The following code example shows how to apply the <xref:System.ServiceModel.ServiceContractAttribute> to an interface to define a service contract with one service method, indicated by the <xref:System.ServiceModel.OperationContractAttribute>.</span></span> <span data-ttu-id="e73c0-142">この場合、すべてのメッセージのバインドで要求される保護レベルは <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-142">In this case, the protection level required of bindings for all messages is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e73c0-143">その後、このコード例では、定義したコントラクトを `SampleService` クラスで実装します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-143">The code example then implements that contract on the `SampleService` class.</span></span>  
  
 [!code-csharp[ServiceContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/services.cs#1)]
 [!code-vb[ServiceContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/services.vb#1)]  
  
 <span data-ttu-id="e73c0-144">次のコード例は、上のサービス用の 1 つのエンドポイントを作成する単純な構成ファイルを示しています。</span><span class="sxs-lookup"><span data-stu-id="e73c0-144">The following code example shows a simple configuration file for the preceding service that creates one endpoint.</span></span>  
  
 [!code-xml[ServiceContractAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/hostapplication.exe.config#2)]   
  
 <span data-ttu-id="e73c0-145">次のコード例は、上の `SampleService` を呼び出す単純なクライアントを示しています。</span><span class="sxs-lookup"><span data-stu-id="e73c0-145">The following code example shows a simple client that invokes the preceding `SampleService`.</span></span>  
  
 [!code-csharp[ServiceContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicecontractattribute/cs/client.cs#3)]
 [!code-vb[ServiceContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicecontractattribute/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.OperationContractAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/036fae20-7c55-4002-b71d-ac4466e167a3"><span data-ttu-id="e73c0-146">サービス コントラクトの定義</span><span class="sxs-lookup"><span data-stu-id="e73c0-146">Defining Service Contracts</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/192be927-6be2-4fda-98f0-e513c4881acc"><span data-ttu-id="e73c0-147">サービスをホストする</span><span class="sxs-lookup"><span data-stu-id="e73c0-147">Hosting a Service</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/7cf21bfe-23bd-46aa-8033-609f851dbf76"><span data-ttu-id="e73c0-148">サービスの作成の概要</span><span class="sxs-lookup"><span data-stu-id="e73c0-148">Service Creation Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/28dfff47-d95b-4cc2-9d5c-b3b9ba71fd50"><span data-ttu-id="e73c0-149">クライアントの作成</span><span class="sxs-lookup"><span data-stu-id="e73c0-149">Building a Client</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d780af9f-73c5-42db-9e52-077a5e4de7fe"><span data-ttu-id="e73c0-150">プロキシ作成の概要</span><span class="sxs-lookup"><span data-stu-id="e73c0-150">Proxy Creation Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e73c0-151"><see cref="T:System.ServiceModel.ServiceContractAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-151">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e73c0-152">このコンストラクターは、セッション要件もコールバック コントラクトもない、既定の名前と名前空間を使用する属性を持つインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-152">The constructor creates an instance of the attribute with no session requirements, no callback contract, and the default name and namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackContract">
      <MemberSignature Language="C#" Value="public Type CallbackContract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackContract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberSignature Language="VB.NET" Value="Public Property CallbackContract As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackContract { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CallbackContract : Type with get, set" Usage="System.ServiceModel.ServiceContractAttribute.CallbackContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e73c0-153">コントラクトが双方向コントラクトの場合のコールバック コントラクトの型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-153">Gets or sets the type of callback contract when the contract is a duplex contract.</span></span></summary>
        <value><span data-ttu-id="e73c0-154">コールバック コントラクトを示す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e73c0-154">A <see cref="T:System.Type" /> that indicates the callback contract.</span></span> <span data-ttu-id="e73c0-155">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-155">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e73c0-156">双方向 (または双方向) のメッセージ交換で必要とされる反対のコントラクトを表すインターフェイスを <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> プロパティに指定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-156">Specify an interface in the <xref:System.ServiceModel.ServiceContractAttribute.CallbackContract%2A> property that represents the required opposite contract in a two-way (or duplex) message exchange.</span></span> <span data-ttu-id="e73c0-157">これにより、クライアント アプリケーションは、サーバー側のサービス アプリケーションがクライアントのアクティビティとは無関係に送信できる受信操作呼び出しをリッスンできます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-157">This enables client applications to listen for inbound operation calls that the server-side service application can send independently of client activity.</span></span> <span data-ttu-id="e73c0-158">一方向操作を持つコールバック コントラクトは、クライアントが処理できるサービスからの呼び出しを表します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-158">Callback contracts that have one-way operations represent calls from the service that the client can handle.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e73c0-159"><xref:System.ServiceModel.ServiceContractAttribute> 属性は、コールバックコントラクトでは無視されます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-159">The <xref:System.ServiceModel.ServiceContractAttribute> attribute is ignored on callback contracts.</span></span> <span data-ttu-id="e73c0-160">コールバックオブジェクトの実行時の動作を構成するには、<xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-160">To configure runtime behavior of callback objects, use the <xref:System.ServiceModel.CallbackBehaviorAttribute?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e73c0-161">次のコード例は、コールバックコントラクトを指定するサービスを示しています。これは、型 `IDuplexHello` のサービスが `IHelloCallbackContract`型のサービスを実装する通信を持つ必要があることを示します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-161">The following code example shows a service that specifies a callback contract, which indicates that a service of type `IDuplexHello` must have a correspondent that implements a service of type `IHelloCallbackContract`.</span></span> <span data-ttu-id="e73c0-162">さらに、`IHelloCallbackContract` は一方向のコールバックメソッドを実装します。これにより、サービスは、配信されたイベントドリブンクライアントをサポートするために応答を待つことなくクライアントを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-162">In addition, `IHelloCallbackContract` implements a one-way callback method, enabling the service to call the client without waiting for a reply to support a distributed, event-driven client.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigurationName">
      <MemberSignature Language="C#" Value="public string ConfigurationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigurationName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberSignature Language="VB.NET" Value="Public Property ConfigurationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConfigurationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConfigurationName : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ConfigurationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e73c0-163">アプリケーション構成ファイル内でサービスを検索するために使用される名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-163">Gets or sets the name used to locate the service in an application configuration file.</span></span></summary>
        <value><span data-ttu-id="e73c0-164">アプリケーション構成ファイル内でサービス要素を検索するために使用される名前。</span><span class="sxs-lookup"><span data-stu-id="e73c0-164">The name used to locate the service element in an application configuration file.</span></span> <span data-ttu-id="e73c0-165">既定の名前は、サービス実装クラスの名前です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-165">The default is the name of the service implementation class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e73c0-166">構成ファイル内で構成システムがコントラクト値を検索する値を設定するには、「<xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-166">To set the value by which the configuration system locates a contract value in the configuration file, see <xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e73c0-167">値は null です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-167">The value is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e73c0-168">値が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-168">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasProtectionLevel">
      <MemberSignature Language="C#" Value="public bool HasProtectionLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasProtectionLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasProtectionLevel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasProtectionLevel : bool" Usage="System.ServiceModel.ServiceContractAttribute.HasProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e73c0-169">メンバーに保護レベルが割り当てられているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-169">Gets a value that indicates whether the member has a protection level assigned.</span></span></summary>
        <value><span data-ttu-id="e73c0-170"><see langword="true" /> プロパティが <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> でない場合は <see cref="F:System.Net.Security.ProtectionLevel.None" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e73c0-170"><see langword="true" /> if the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property is not <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e73c0-171">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-171">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e73c0-172"><xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> プロパティは、`false` 以外の保護レベルの値がコントラクトに対して設定されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-172">The <xref:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel%2A> property indicates whether a protection level value other than `false` has been set for the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e73c0-173">Web サービス記述言語 (WSDL) での <see langword="&lt;portType&gt;" /> 要素の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-173">Gets or sets the name for the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</span></span></summary>
        <value><span data-ttu-id="e73c0-174">既定値は <see cref="T:System.ServiceModel.ServiceContractAttribute" /> が適用されたクラスまたはインターフェイスの名前です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-174">The default value is the name of the class or interface to which the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> is applied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e73c0-175"><xref:System.ServiceModel.ServiceContractAttribute.Name%2A> と <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> のプロパティを使用して、WSDL の `<portType>` 要素の名前と名前空間を制御します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-175">Use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and the <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties to control the name and namespace of the `<portType>` element in WSDL.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e73c0-176">次のコード例は、<xref:System.ServiceModel.ServiceContractAttribute> の <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> および <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> プロパティを使用して、WSDL で対応する値を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e73c0-176">The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.</span></span>  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 <span data-ttu-id="e73c0-177">次のコード例は、 [ServiceModel メタデータユーティリティツール (svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)を使用して WSDL をインポートした前のサービスの WINDOWS COMMUNICATION FOUNDATION (WCF) クライアントを示しています。</span><span class="sxs-lookup"><span data-stu-id="e73c0-177">The following code example shows an Windows Communication Foundation (WCF) client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span></span> <span data-ttu-id="e73c0-178">このクライアントは、`SampleServiceProxy` クライアントではなく `HelloWorldProxy` クライアントを使用します (<xref:System.ServiceModel.ServiceContractAttribute>の「例」セクションのサンプルの場合と同様)。</span><span class="sxs-lookup"><span data-stu-id="e73c0-178">This client uses a `HelloWorldProxy` client rather than a `SampleServiceProxy` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).</span></span>  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e73c0-179">値は null です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-179">The value is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e73c0-180">値が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-180">The value is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.ServiceModel.ServiceContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e73c0-181">Web サービス記述言語 (WSDL) での <see langword="&lt;portType&gt;" /> 要素の名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-181">Gets or sets the namespace of the <see langword="&lt;portType&gt;" /> element in Web Services Description Language (WSDL).</span></span></summary>
        <value><span data-ttu-id="e73c0-182"><see langword="&lt;portType&gt;" /> 要素の WSDL 名前空間。</span><span class="sxs-lookup"><span data-stu-id="e73c0-182">The WSDL namespace of the <see langword="&lt;portType&gt;" /> element.</span></span> <span data-ttu-id="e73c0-183">既定値は<c>"http://tempuri.org"</c>です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-183">The default value is <c>"http://tempuri.org"</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e73c0-184">次のコード例は、<xref:System.ServiceModel.ServiceContractAttribute> の <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> および <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> プロパティを使用して、WSDL で対応する値を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e73c0-184">The following code example shows how to use the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> and <xref:System.ServiceModel.ServiceContractAttribute.Namespace%2A> properties of the <xref:System.ServiceModel.ServiceContractAttribute> to set the corresponding values in WSDL.</span></span>  
  
 [!code-csharp[SCA.Names#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/services.cs#1)]
 [!code-vb[SCA.Names#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/services.vb#1)]  
  
 <span data-ttu-id="e73c0-185">次のコード例は、 [ServiceModel メタデータユーティリティツール (svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)を使用して WSDL をインポートした前のサービスの WINDOWS COMMUNICATION FOUNDATION (WCF) クライアントを示しています。</span><span class="sxs-lookup"><span data-stu-id="e73c0-185">The following code example shows an Windows Communication Foundation (WCF) client for the preceding service that imported WSDL using the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md).</span></span> <span data-ttu-id="e73c0-186">このクライアントは、`SampleServiceClient` クライアントではなく `HelloWorldClient` クライアントを使用します (<xref:System.ServiceModel.ServiceContractAttribute>の「例」セクションのサンプルの場合と同様)。</span><span class="sxs-lookup"><span data-stu-id="e73c0-186">This client uses a `HelloWorldClient` client rather than a `SampleServiceClient` client (as is the case with the sample in the Example section of <xref:System.ServiceModel.ServiceContractAttribute>).</span></span>  
  
 [!code-csharp[SCA.Names#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.names/cs/client.cs#3)]
 [!code-vb[SCA.Names#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.names/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectionLevel">
      <MemberSignature Language="C#" Value="public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.ProtectionLevel ProtectionLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtectionLevel As ProtectionLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::ProtectionLevel ProtectionLevel { System::Net::Security::ProtectionLevel get(); void set(System::Net::Security::ProtectionLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ProtectionLevel : System.Net.Security.ProtectionLevel with get, set" Usage="System.ServiceModel.ServiceContractAttribute.ProtectionLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.ProtectionLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e73c0-187">コントラクトのバインドで、<see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> プロパティの値をサポートする必要があるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-187">Specifies whether the binding for the contract must support the value of the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property.</span></span></summary>
        <value><span data-ttu-id="e73c0-188"><see cref="T:System.Net.Security.ProtectionLevel" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="e73c0-188">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span> <span data-ttu-id="e73c0-189">既定では、 <see cref="F:System.Net.Security.ProtectionLevel.None" />です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-189">The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e73c0-190">コントラクトを公開するエンドポイントに対して、コントラクトバインドが暗号化、デジタル署名、またはその両方を必要とする程度を指定するには、<xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-190">Use the <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A> property to specify the degree to which the contract binding requires encryption, digital signatures, or both for endpoints that expose the contract.</span></span> <span data-ttu-id="e73c0-191">ここで設定する値は、エラーを含むすべての操作メッセージの既定値となります。</span><span class="sxs-lookup"><span data-stu-id="e73c0-191">The value set here is the default value for all operation messages including faults.</span></span>  
  
 <span data-ttu-id="e73c0-192">ランタイムでの保護動作は、次のプロパティで設定された保護レベル値の組み合わせであることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-192">It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</span></span> <span data-ttu-id="e73c0-193">こうしたプロパティは、階層構造を持ちます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-193">These properties have a hierarchical structure.</span></span> <span data-ttu-id="e73c0-194">最も外側の値を設定すると、それより狭いスコープで異なる値を明示的に設定していなければ、より狭いスコープでその既定の設定が定まります。</span><span class="sxs-lookup"><span data-stu-id="e73c0-194">Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</span></span> <span data-ttu-id="e73c0-195">この場合、外側の値は特に設定された値を除いて、それより狭いすべてのスコープで既定の設定として残ります。</span><span class="sxs-lookup"><span data-stu-id="e73c0-195">In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</span></span>  
  
 <span data-ttu-id="e73c0-196">たとえば、<xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> が <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> に設定され、他のより狭いスコープに保護レベル設定が存在しない場合、操作コントラクト内のすべてのメッセージが暗号化および署名されます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-196">For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType> is set to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</span></span> <span data-ttu-id="e73c0-197">ただし、こうした操作の 1 つで <xref:System.ServiceModel.OperationContractAttribute> が <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType> に設定されている場合、その操作のメッセージは署名されますが、コントラクト内の他のすべてのメッセージは暗号化および署名されます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-197">If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</span></span>  
  
 <span data-ttu-id="e73c0-198">保護レベルとその想定および範囲の詳細については、「[保護レベル](~/docs/framework/wcf/understanding-protection-level.md)について」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-198">For details about protection levels and their assumptions and scopes, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).</span></span>  
  
 <span data-ttu-id="e73c0-199">こうした値が設定されるスコープは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e73c0-199">The scopes at which these values are set are:</span></span>  
  
 <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="e73c0-200"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> の <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e73c0-200">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e73c0-201"><xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> の <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e73c0-201">The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e73c0-202">コントラクト上で明示的に指定された保護レベルが存在せず、基になるバインドで (トランスポート レベルまたはメッセージ レベルを問わず) セキュリティをサポートする場合、コントラクト全体の有効な保護レベルは <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-202">When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e73c0-203">バインドで (<xref:System.ServiceModel.BasicHttpBinding> などの) セキュリティをサポートしない場合、コントラクト全体の有効な <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> は <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> です。</span><span class="sxs-lookup"><span data-stu-id="e73c0-203">If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType> is <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> for the whole contract.</span></span> <span data-ttu-id="e73c0-204">したがって、コントラクトで <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType> を指定している場合でも、エンドポイント バインドによってはクライアントが要求するメッセージ レベルまたはトランスポート レベルのセキュリティ保護が異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="e73c0-204">The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e73c0-205">値が、<see cref="T:System.Net.Security.ProtectionLevel" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="e73c0-205">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SessionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.SessionMode SessionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.SessionMode SessionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionMode As SessionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::SessionMode SessionMode { System::ServiceModel::SessionMode get(); void set(System::ServiceModel::SessionMode value); };" />
      <MemberSignature Language="F#" Value="member this.SessionMode : System.ServiceModel.SessionMode with get, set" Usage="System.ServiceModel.ServiceContractAttribute.SessionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.SessionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e73c0-206">セッションが許可されるか、許可されないか、または必要であるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-206">Gets or sets whether sessions are allowed, not allowed or required.</span></span></summary>
        <value><span data-ttu-id="e73c0-207"><see cref="T:System.ServiceModel.SessionMode" /> は、セッションが許可されるか、許可されないか、または必要であるかを示します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-207">A <see cref="T:System.ServiceModel.SessionMode" /> that indicates whether sessions are allowed, not allowed, or required.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e73c0-208">エンドポイント間のセッションをサポートするバインディングを要求するには、<xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-208">Use the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property to require bindings that support sessions between endpoints.</span></span> <span data-ttu-id="e73c0-209">セッションとは、2 つ以上のエンドポイント間で交換される一連のメッセージを相互に関連付ける方法のことです。</span><span class="sxs-lookup"><span data-stu-id="e73c0-209">A session is a way of correlating a set of messages exchanged between two or more endpoints.</span></span> <span data-ttu-id="e73c0-210">サービスがチャネルセッションをサポートしている場合は、<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> プロパティを使用して、サービスコントラクトの実装とチャネルセッションの間の関係を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-210">If your service supports channel sessions, you can then use the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to specify the relationship between instances your service contract implementation and the channel session.</span></span> <span data-ttu-id="e73c0-211">バインドがセッションをサポートしない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-211">If a binding does not support sessions, an exception is thrown.</span></span>  
  
 <span data-ttu-id="e73c0-212">たとえば、<xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> プロパティが <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType> に設定されており、<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> プロパティが <xref:System.ServiceModel.InstanceContextMode.PerSession>に設定されている場合、クライアントは同じ接続を使用して同じサービスオブジェクトを繰り返し呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-212">For example, if the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property is set to <xref:System.ServiceModel.SessionMode.Required?displayProperty=nameWithType> and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property is set to <xref:System.ServiceModel.InstanceContextMode.PerSession>, clients can use the same connection to make repeated calls to the same service object.</span></span>  
  
 <span data-ttu-id="e73c0-213">セッションとサービスインスタンスの詳細については、「セッションと[セッション、インスタンス化、および同時実行](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md)の[使用](~/docs/framework/wcf/using-sessions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-213">For more information about sessions and service instances, see [Using Sessions](~/docs/framework/wcf/using-sessions.md) and [Sessions, Instancing, and Concurrency](~/docs/framework/wcf/feature-details/sessions-instancing-and-concurrency.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e73c0-214">セッションをサポートするチャネルは、特定のセッションとのサービス インスタンスの既定の関連付けをサポートします。</span><span class="sxs-lookup"><span data-stu-id="e73c0-214">A channel that supports sessions supports the default association of a service instance with a particular session.</span></span> <span data-ttu-id="e73c0-215">ただし、セッションの実装が異なれば、セッション ベースのインスタンス作成の制御に加えてサポートされる機能も異なります。</span><span class="sxs-lookup"><span data-stu-id="e73c0-215">However, different session implementations support different features in addition to session-based instancing control.</span></span> <span data-ttu-id="e73c0-216">WCF には、セッションフルアプリケーションの動作を提供するために使用できる4種類のセッションが用意されています。セッションの種類ごとに、セッションの種類に固有の追加の動作が提供されます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-216">WCF provides four types of sessions that you can use to provide sessionful application behavior; each type of session provides additional behavior specific to the type of session it is.</span></span>  
  
1.  <span data-ttu-id="e73c0-217"><xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType> は、暗号化とデジタル署名のプロセスに関して通信の両端が合意しているセキュリティセッションをサポートしています。すべてのメッセージは、セキュリティで保護された特定のメッセージ交換と関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="e73c0-217">The <xref:System.ServiceModel.Channels.SecurityBindingElement?displayProperty=nameWithType> supports security sessions, in which both ends of communication have agreed upon an encryption and/or digital signature process; all messages are correlated with that specific secure conversation.</span></span> <span data-ttu-id="e73c0-218">詳細については、「[サービスのセキュリティ保護](~/docs/framework/wcf/securing-services.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-218">For more information, see [Securing Services](~/docs/framework/wcf/securing-services.md).</span></span> <span data-ttu-id="e73c0-219">たとえば、セキュリティセッションと信頼できるセッションの両方のサポートを含む <xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType>は、既定では、メッセージを暗号化してデジタル署名する、セキュリティで保護されたセッションのみを使用します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-219">For example, the <xref:System.ServiceModel.WSHttpBinding?displayProperty=nameWithType>, which contains support for both security sessions and reliable sessions, by default uses only a secure session which encrypts and digitally signs messages.</span></span>  
  
2.  <span data-ttu-id="e73c0-220"><xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType> は、すべてのメッセージがソケットレベルで接続セッションによって関連付けられていることを確認するために、TCP/IP 接続によって公開されているセッションをサポートします。</span><span class="sxs-lookup"><span data-stu-id="e73c0-220">The <xref:System.ServiceModel.NetTcpBinding?displayProperty=nameWithType> supports the sessions exposed by the TCP/IP connections to ensure that all messages are correlated by the connection session at the socket level.</span></span>  
  
3.  <span data-ttu-id="e73c0-221">Ws-reliablemessaging 仕様を実装する <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType>は、メッセージが順番に1回だけ配信される信頼できるセッションをサポートします。これにより、メッセージ交換中にメッセージが複数のノードに移動した場合でも信頼できるようになります。</span><span class="sxs-lookup"><span data-stu-id="e73c0-221">The <xref:System.ServiceModel.Channels.ReliableSessionBindingElement?displayProperty=nameWithType>, which implements the WS-ReliableMessaging specification, provides support for reliable sessions in which messages are delivered in order and exactly once, enabling confidence even when messages travel across multiple nodes during the conversation.</span></span> <span data-ttu-id="e73c0-222">詳細については、「[信頼できるセッション](~/docs/framework/wcf/feature-details/reliable-sessions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-222">For more information, see [Reliable Sessions](~/docs/framework/wcf/feature-details/reliable-sessions.md).</span></span>  
  
4.  <span data-ttu-id="e73c0-223"><xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType> は、MSMQ データグラムセッションを提供します。</span><span class="sxs-lookup"><span data-stu-id="e73c0-223">The <xref:System.ServiceModel.NetMsmqBinding?displayProperty=nameWithType> provides MSMQ datagram sessions.</span></span> <span data-ttu-id="e73c0-224">詳細については、「 [WCF のキュー](~/docs/framework/wcf/feature-details/queues-in-wcf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-224">For more information, see [Queues in WCF](~/docs/framework/wcf/feature-details/queues-in-wcf.md).</span></span>  
  
 <span data-ttu-id="e73c0-225"><xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> プロパティを設定しても、コントラクトが必要とするセッションの種類は指定されないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e73c0-225">Remember that setting the <xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A> property does not specify the type of session the contract requires, only that it requires one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e73c0-226">次のサービスコントラクトでは、構成されたバインディングが `SampleDuplexHello` サービス実装と対話するときにセッションを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e73c0-226">The following service contract requires that configured bindings use sessions when interacting with `SampleDuplexHello` service implementations.</span></span>  
  
 [!code-csharp[SCA.Session#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.session/cs/services.cs#1)]
 [!code-vb[SCA.Session#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.session/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e73c0-227">値が、<see cref="T:System.ServiceModel.SessionMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="e73c0-227">The value is not one of the <see cref="T:System.ServiceModel.SessionMode" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
