<Type Name="TransferMode" FullName="System.ServiceModel.TransferMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c448cbccab2f71e9c2c94da63318cef52f1bb325" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83891704" /></Metadata><TypeSignature Language="C#" Value="public enum TransferMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TransferMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.TransferMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum TransferMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class TransferMode" />
  <TypeSignature Language="F#" Value="type TransferMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="dea13-101">チャネルが要求メッセージと応答メッセージの転送でストリーミング モードとバッファー モードのどちらを使用するかを示します。</span><span class="sxs-lookup"><span data-stu-id="dea13-101">Indicates whether a channel uses streamed or buffered modes for the transfer of request and response messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dea13-102">Windows Communication Foundation (WCF) トランスポートでは、各方向にメッセージを転送する2つのモードがサポートされるようになります。</span><span class="sxs-lookup"><span data-stu-id="dea13-102">Windows Communication Foundation (WCF) transports support two modes of transferring messages in each direction:</span></span>  
  
-   <span data-ttu-id="dea13-103">バッファー転送では、転送が完了するまで、メッセージ全体がメモリ バッファーに保持されます。</span><span class="sxs-lookup"><span data-stu-id="dea13-103">Buffered transfers hold the entire message in a memory buffer until the transfer is complete.</span></span>  
  
-   <span data-ttu-id="dea13-104">ストリーミング転送では、メッセージ ヘッダーだけをバッファーし、メッセージ本体をストリームとして公開し、一度に一部分を読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="dea13-104">Streamed transfers only buffer the message headers and expose the message body as a stream, from which smaller portions can be read at a time.</span></span>  
  
 <span data-ttu-id="dea13-105">転送モードを `Streamed` に設定すると、両方向のストリーミング通信が可能になります。</span><span class="sxs-lookup"><span data-stu-id="dea13-105">Setting the transfer mode to `Streamed` enables streaming communication in both directions.</span></span> <span data-ttu-id="dea13-106">転送モードを `StreamedRequest` または `StreamedResponse` に設定すると、指示した方向でのみストリーミング通信が可能になります。</span><span class="sxs-lookup"><span data-stu-id="dea13-106">Setting the transfer mode to `StreamedRequest` or `StreamedResponse` enables streaming communication only in the indicated direction.</span></span>  
  
 <span data-ttu-id="dea13-107">ストリーミング転送は、大容量のメモリ バッファーを用意する必要性をなくすことで、サービスのスケーラビリティを向上させます。</span><span class="sxs-lookup"><span data-stu-id="dea13-107">Streamed transfers can improve the scalability of a service by eliminating the need for large memory buffers.</span></span> <span data-ttu-id="dea13-108">転送モードの変更によって実際にスケーラビリティが向上するかどうかは、転送されるメッセージのサイズによって決まります。</span><span class="sxs-lookup"><span data-stu-id="dea13-108">Whether changing the transfer mode actually improves scalability in practice depends on the size of the messages being transferred.</span></span> <span data-ttu-id="dea13-109">スケーラビリティの向上は、大きなメッセージでバッファー転送の代わりにストリーミング転送を使用すると最も明らかになります。</span><span class="sxs-lookup"><span data-stu-id="dea13-109">Improvements in scalability should be most evident when large messages use streamed instead of buffered transfers.</span></span>  
  
 <span data-ttu-id="dea13-110">既定では、HTTP、TCP/IP、および名前付きパイプの各トランスポートでバッファー メッセージ転送が使用されます。</span><span class="sxs-lookup"><span data-stu-id="dea13-110">By default, the HTTP, TCP/IP and named pipe transports use buffered message transfers.</span></span> <span data-ttu-id="dea13-111">`TransferMode` の値は、<xref:System.ServiceModel.BasicHttpBinding>、<xref:System.ServiceModel.NetTcpBinding>、および <xref:System.ServiceModel.NetNamedPipeBinding> システム指定のバインディングで、表示される転送モードプロパティを使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="dea13-111">You can set the values of `TransferMode` on the <xref:System.ServiceModel.BasicHttpBinding>, <xref:System.ServiceModel.NetTcpBinding>, and <xref:System.ServiceModel.NetNamedPipeBinding> system-provided bindings using the transfer mode properties exposed on them.</span></span> <span data-ttu-id="dea13-112">このモードは、たとえば、<xref:System.ServiceModel.NetTcpBinding.TransferMode%2A?displayProperty=nameWithType> プロパティを使用して、<xref:System.ServiceModel.NetTcpBinding> クラスに設定できます。</span><span class="sxs-lookup"><span data-stu-id="dea13-112">The mode can be set on the <xref:System.ServiceModel.NetTcpBinding> class, for example, by using the <xref:System.ServiceModel.NetTcpBinding.TransferMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="dea13-113">バインドの構成セクションに設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="dea13-113">It can also be set in the configuration section for the binding.</span></span>  
  
 <span data-ttu-id="dea13-114">転送モード プロパティを公開しないバインドでは、バインド要素に対して転送モードを設定した後、その要素をカスタム バインドに追加できます。</span><span class="sxs-lookup"><span data-stu-id="dea13-114">For bindings that do not expose the transfer mode property, the transfer mode can be set on the binding element of the transport and this element can then be added to a custom binding.</span></span> <span data-ttu-id="dea13-115">たとえば、<xref:System.ServiceModel.Channels.HttpTransportBindingElement> を作成し、カスタム バインドの作成時に <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A> プロパティを使用して転送モードを設定します。</span><span class="sxs-lookup"><span data-stu-id="dea13-115">For example, create an <xref:System.ServiceModel.Channels.HttpTransportBindingElement> and use the <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A> property to set the transfer mode when creating a custom binding.</span></span> <span data-ttu-id="dea13-116">転送モードは、カスタム バインドの構成セクションに設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="dea13-116">The transfer mode can also be set in the configuration section for the custom binding.</span></span>  
  
 <span data-ttu-id="dea13-117">バッファー転送とストリーミング転送のどちらを使用するかは、HTTP 転送のエンドポイントでローカルに決定します。</span><span class="sxs-lookup"><span data-stu-id="dea13-117">The decision to use either buffered or streamed transfers is a local decision of the endpoint for HTTP transports.</span></span> <span data-ttu-id="dea13-118">HTTP トランスポートの場合、転送モードは、接続、つまりプロキシ サーバーやその他の中継局に伝達されません。</span><span class="sxs-lookup"><span data-stu-id="dea13-118">For HTTP transports, the transfer mode does not propagate across a connection, or to proxy servers or other intermediaries.</span></span> <span data-ttu-id="dea13-119">転送モードを設定しても、サービス コントラクトの記述には反映されません。</span><span class="sxs-lookup"><span data-stu-id="dea13-119">Setting the transfer mode is not reflected in the description of the service contract.</span></span> <span data-ttu-id="dea13-120">サービスのプロキシを生成した後、ストリーミング転送を使用するサービスの構成ファイルを編集して、その転送モードを設定できます (これは必須の作業ではありません)。</span><span class="sxs-lookup"><span data-stu-id="dea13-120">After generating a proxy to a service, you can (it is allowed but not required) edit the configuration file for services intended to be used with streamed transfers to set the transfer mode.</span></span> <span data-ttu-id="dea13-121">TCP トランスポートと名前付きパイプ トランスポートの場合、転送モードはポリシー アサーションとして伝達されます。</span><span class="sxs-lookup"><span data-stu-id="dea13-121">For TCP and named pipe transports, the transfer mode is propagated as a policy assertion.</span></span>  
  
 <span data-ttu-id="dea13-122">`Streamed` 転送モードを使用すると、WCF ランタイムによっていくつかの制限が適用されます。</span><span class="sxs-lookup"><span data-stu-id="dea13-122">Using the `Streamed` transfer mode causes the WCF runtime to enforce some restrictions.</span></span>  
  
-   <span data-ttu-id="dea13-123">ストリーミング トランスポートで発生する操作は、最大で 1 つの入力パラメーターまたは 1 つの出力パラメーター、あるいはその両方が設定されたコントラクトをプログラミング モデル レイヤーに持つことができます。</span><span class="sxs-lookup"><span data-stu-id="dea13-123">Operations that occur across a streamed transport can have a contract with at most one input and/or one output parameter at the programming model layer.</span></span> <span data-ttu-id="dea13-124">設定するパラメーターは、メッセージの本文全体に対応し、<xref:System.ServiceModel.Channels.Message> または <xref:System.IO.Stream> の派生型であるか、<xref:System.Xml.Serialization.IXmlSerializable> インターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="dea13-124">That parameter corresponds to the entire body of the message and must be a <xref:System.ServiceModel.Channels.Message>, be a subtype of <xref:System.IO.Stream>, or implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span> <span data-ttu-id="dea13-125">操作の戻り値を取得することは、出力パラメーターを取得することと同じです。</span><span class="sxs-lookup"><span data-stu-id="dea13-125">Having a return value for an operation is equivalent to having an output parameter.</span></span>  
  
-   <span data-ttu-id="dea13-126">信頼できるメッセージングや SOAP メッセージレベルのセキュリティなどの一部の WCF 機能は、転送するメッセージのバッファー処理に依存しています。</span><span class="sxs-lookup"><span data-stu-id="dea13-126">Some WCF features such as Reliable Messaging and SOAP message-level security rely on buffering messages for transmissions.</span></span> <span data-ttu-id="dea13-127">これらの機能を使用すると、ストリーミングによって得られるパフォーマンス上の利点が減少したり、失われたりする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="dea13-127">Using these features may reduce or eliminate the performance benefits gained by using streaming.</span></span> <span data-ttu-id="dea13-128">ストリーミング トランスポートを保護するには、トランスポート レベルのセキュリティだけを使用するか、WS-Security クレームとトランスポート セキュリティを組み合わせた混合モードセキュリティを使用します。</span><span class="sxs-lookup"><span data-stu-id="dea13-128">To secure a streamed transport, use transport level security only or use mixed-mode security, which combines WS-Security claims with transport security.</span></span>  
  
-   <span data-ttu-id="dea13-129">SOAP ヘッダーは、転送モードに `Streamed` が設定された場合でも、常にバッファーされます。</span><span class="sxs-lookup"><span data-stu-id="dea13-129">SOAP headers are always buffered, even when the transfer mode is set to `Streamed`.</span></span> <span data-ttu-id="dea13-130">メッセージのヘッダーは、さまざまなバインドとバインド要素に公開される MaxBufferSize トランスポート クォータのサイズを超過してはなりません。</span><span class="sxs-lookup"><span data-stu-id="dea13-130">The headers for a message must not exceed the size of the MaxBufferSize transport quota which is exposed on the various bindings and binding elements.</span></span>  
  
 <span data-ttu-id="dea13-131">転送モードを `Buffered` から `Streamed` に変更すると、TCP トランスポートと名前付きパイプ トランスポートのネイティブなチャネル形状も変更されます。</span><span class="sxs-lookup"><span data-stu-id="dea13-131">Changing the transfer mode from `Buffered` to `Streamed` also changes the native channel shape of the TCP and named pipe transports.</span></span> <span data-ttu-id="dea13-132">バッファー転送では、ネイティブなチャネル形状は <xref:System.ServiceModel.Channels.IDuplexSessionChannel> です。</span><span class="sxs-lookup"><span data-stu-id="dea13-132">For buffered transfers, the native channel shape is <xref:System.ServiceModel.Channels.IDuplexSessionChannel>.</span></span> <span data-ttu-id="dea13-133">ストリーム転送では、ネイティブなチャネル形状は <xref:System.ServiceModel.Channels.IRequestChannel> と <xref:System.ServiceModel.Channels.IReplyChannel> です。</span><span class="sxs-lookup"><span data-stu-id="dea13-133">For streamed transfers, the native channels are <xref:System.ServiceModel.Channels.IRequestChannel> and <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span> <span data-ttu-id="dea13-134">この結果、セッションフル サービス コントラクトは、トランスポート ストリーミングでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="dea13-134">A consequence of this is that sessionful service contracts cannot be used with transport streaming.</span></span>  
  
## Examples

<span data-ttu-id="dea13-135">次の例では、コードを使用して、 [Tcptransportbindingelement. TransferMode](xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode)プロパティを `Streamed` に設定します。</span><span class="sxs-lookup"><span data-stu-id="dea13-135">The following example sets the [TcpTransportBindingElement.TransferMode](xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode) property to `Streamed` through code:</span></span>  
  
```csharp  
TcpTransportBindingElement transport = new TcpTransportBindingElement();  
transport.TransferMode = TransferMode.Streamed;  
BinaryMessageEncodingBindingElement encoder = new BinaryMessageEncodingBindingElement();  
CustomBinding binding = new CustomBinding(encoder, transport);  
```  
  
<span data-ttu-id="dea13-136">次の例では、構成を使用して、 [Tcptransportbindingelement. TransferMode](xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode)プロパティを `Streamed` に設定します。</span><span class="sxs-lookup"><span data-stu-id="dea13-136">The following example sets the [TcpTransportBindingElement.TransferMode](xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode) property to `Streamed` through configuration:</span></span>  
  
```xml
<customBinding>  
    <binding name="streamingBinding">  
        <binaryMessageEncoding />  
            <tcpTransport transferMode="Streamed" />  
     </binding>  
</customBinding>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Buffered">
      <MemberSignature Language="C#" Value="Buffered" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode Buffered = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.Buffered" />
      <MemberSignature Language="VB.NET" Value="Buffered" />
      <MemberSignature Language="C++ CLI" Value="Buffered" />
      <MemberSignature Language="F#" Value="Buffered = 0" Usage="System.ServiceModel.TransferMode.Buffered" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="dea13-137">要求メッセージと応答メッセージの両方をバッファーします。</span><span class="sxs-lookup"><span data-stu-id="dea13-137">The request and response messages are both buffered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Streamed">
      <MemberSignature Language="C#" Value="Streamed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode Streamed = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.Streamed" />
      <MemberSignature Language="VB.NET" Value="Streamed" />
      <MemberSignature Language="C++ CLI" Value="Streamed" />
      <MemberSignature Language="F#" Value="Streamed = 1" Usage="System.ServiceModel.TransferMode.Streamed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="dea13-138">要求メッセージと応答メッセージの両方をストリーミングします。</span><span class="sxs-lookup"><span data-stu-id="dea13-138">The request and response messages are both streamed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StreamedRequest">
      <MemberSignature Language="C#" Value="StreamedRequest" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode StreamedRequest = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.StreamedRequest" />
      <MemberSignature Language="VB.NET" Value="StreamedRequest" />
      <MemberSignature Language="C++ CLI" Value="StreamedRequest" />
      <MemberSignature Language="F#" Value="StreamedRequest = 2" Usage="System.ServiceModel.TransferMode.StreamedRequest" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="dea13-139">要求メッセージをストリーミングし、応答メッセージをバッファーします。</span><span class="sxs-lookup"><span data-stu-id="dea13-139">The request message is streamed and the response message is buffered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StreamedResponse">
      <MemberSignature Language="C#" Value="StreamedResponse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.TransferMode StreamedResponse = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.TransferMode.StreamedResponse" />
      <MemberSignature Language="VB.NET" Value="StreamedResponse" />
      <MemberSignature Language="C++ CLI" Value="StreamedResponse" />
      <MemberSignature Language="F#" Value="StreamedResponse = 3" Usage="System.ServiceModel.TransferMode.StreamedResponse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="dea13-140">要求メッセージをバッファーし、応答メッセージをストリーミングします。</span><span class="sxs-lookup"><span data-stu-id="dea13-140">The request message is buffered and the response message is streamed.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
