<Type Name="OperationContext" FullName="System.ServiceModel.OperationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2eeeaac64c58f236504ec08bb447a9a08590b714" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83958467" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContext : System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContext extends System.Object implements class System.ServiceModel.IExtensibleObject`1&lt;class System.ServiceModel.OperationContext&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContext&#xA;Implements IExtensibleObject(Of OperationContext)" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContext sealed : System::ServiceModel::IExtensibleObject&lt;System::ServiceModel::OperationContext ^&gt;" />
  <TypeSignature Language="F#" Value="type OperationContext = class&#xA;    interface IExtensibleObject&lt;OperationContext&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.IExtensibleObject&lt;System.ServiceModel.OperationContext&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="29035-101">サービス メソッドの実行コンテキストへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="29035-101">Provides access to the execution context of a service method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-102">現在の操作実行環境にアクセスするには、サービス操作内から <xref:System.ServiceModel.OperationContext> を使用します。</span><span class="sxs-lookup"><span data-stu-id="29035-102">Use the <xref:System.ServiceModel.OperationContext> from within a service operation to access the current operation execution environment.</span></span> <span data-ttu-id="29035-103">特に、操作コンテキストは、双方向サービスでのコールバック チャネルへのアクセス、操作の複数部分に関係する特別な状態データの保存、受信メッセージ ヘッダーとプロパティへのアクセス、および送信メッセージ ヘッダーとプロパティの追加を行うために使用されます。</span><span class="sxs-lookup"><span data-stu-id="29035-103">In particular, the operation context is used to access callback channels in duplex services, to store extra state data across portions of the operations, and to access incoming message headers and properties as well as add outgoing message headers and properties.</span></span>  
  
 <span data-ttu-id="29035-104">拡張機能を使用して状態データを格納する方法の詳細については、「[拡張オブジェクト](/dotnet/framework/wcf/extending/extensible-objects)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29035-104">For more information about using extensions to store state data, see [Extensible Objects](/dotnet/framework/wcf/extending/extensible-objects).</span></span>  
  
 <span data-ttu-id="29035-105"><xref:System.ServiceModel.OperationContext> には、次のプロパティとメソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="29035-105">The <xref:System.ServiceModel.OperationContext> has the following properties and methods.</span></span>  
  
-   <span data-ttu-id="29035-106"><xref:System.ServiceModel.OperationContext.Current%2A> プロパティは、現在の実行コンテキストを表す <xref:System.ServiceModel.OperationContext> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="29035-106">The <xref:System.ServiceModel.OperationContext.Current%2A> property returns the <xref:System.ServiceModel.OperationContext> object representing the current execution context.</span></span>  
  
-   <span data-ttu-id="29035-107"><xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> プロパティは、メソッドが実行されるセキュリティ環境を返します。</span><span class="sxs-lookup"><span data-stu-id="29035-107">The <xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A> property returns the security environment under which the method executes.</span></span>  
  
-   <span data-ttu-id="29035-108"><xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> プロパティは、操作の <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>を取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-108">The <xref:System.ServiceModel.OperationContext.EndpointDispatcher%2A> property gets the operation's <xref:System.ServiceModel.Dispatcher.EndpointDispatcher?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="29035-109"><xref:System.ServiceModel.OperationContext.Extensions%2A> プロパティは、現在の <xref:System.ServiceModel.OperationContext>の拡張コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="29035-109">The <xref:System.ServiceModel.OperationContext.Extensions%2A> property returns an extension collection for the current <xref:System.ServiceModel.OperationContext>.</span></span>  
  
-   <span data-ttu-id="29035-110"><xref:System.ServiceModel.OperationContext.Host%2A> プロパティは、サービスを管理する <xref:System.ServiceModel.ServiceHostBase> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="29035-110">The <xref:System.ServiceModel.OperationContext.Host%2A> property returns the <xref:System.ServiceModel.ServiceHostBase> object that manages the service.</span></span>  
  
-   <span data-ttu-id="29035-111"><xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> プロパティは、メソッドにサポートトークンがあるかどうかを示す値を返します。存在する場合は、<xref:System.ServiceModel.OperationContext.SupportingTokens%2A> プロパティによって取得されます。</span><span class="sxs-lookup"><span data-stu-id="29035-111">The <xref:System.ServiceModel.OperationContext.HasSupportingTokens%2A> property returns a value that indicates whether the method has supporting tokens, if so, the <xref:System.ServiceModel.OperationContext.SupportingTokens%2A> property gets them.</span></span>  
  
-   <span data-ttu-id="29035-112"><xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>、<xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>、および <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> の各プロパティは、これらの項目を受信メッセージから取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-112">The <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A>, <xref:System.ServiceModel.OperationContext.IncomingMessageProperties%2A>, and <xref:System.ServiceModel.OperationContext.IncomingMessageVersion%2A> properties get these items from the incoming message.</span></span>  
  
-   <span data-ttu-id="29035-113">操作が完了すると、<xref:System.ServiceModel.OperationContext.OperationCompleted> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="29035-113">The <xref:System.ServiceModel.OperationContext.OperationCompleted> event is fired when the operation has completed.</span></span>  
  
-   <span data-ttu-id="29035-114"><xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> プロパティと <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> プロパティは、送信メッセージに対してこれらの項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-114">The <xref:System.ServiceModel.OperationContext.OutgoingMessageHeaders%2A> and <xref:System.ServiceModel.OperationContext.OutgoingMessageProperties%2A> properties get these items for the outbound message.</span></span>  
  
-   <span data-ttu-id="29035-115"><xref:System.ServiceModel.OperationContext.RequestContext%2A> プロパティは、メソッドの <xref:System.ServiceModel.Channels.RequestContext> の実装を返します。</span><span class="sxs-lookup"><span data-stu-id="29035-115">The <xref:System.ServiceModel.OperationContext.RequestContext%2A> property returns the <xref:System.ServiceModel.Channels.RequestContext> implementation for the method.</span></span>  
  
-   <span data-ttu-id="29035-116"><xref:System.ServiceModel.OperationContext.InstanceContext%2A> プロパティは、操作に関連付けられた <xref:System.ServiceModel.InstanceContext> を返します。</span><span class="sxs-lookup"><span data-stu-id="29035-116">The <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property returns the <xref:System.ServiceModel.InstanceContext> associated with the operation.</span></span>  
  
-   <span data-ttu-id="29035-117"><xref:System.ServiceModel.OperationContext.SessionId%2A> プロパティは、現在のチャネルとオブジェクトのセッション識別子を返します。</span><span class="sxs-lookup"><span data-stu-id="29035-117">The <xref:System.ServiceModel.OperationContext.SessionId%2A> property returns the session identifier for the current channel and object.</span></span>  
  
-   <span data-ttu-id="29035-118">双方向通信の場合は、<xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> メソッドによって呼び出し元にコールバックチャネルが返されます。</span><span class="sxs-lookup"><span data-stu-id="29035-118">The <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method returns a callback channel to the caller in the case of duplex communication.</span></span>  
  
-   <span data-ttu-id="29035-119"><xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> メソッドは、現在のトランザクションをコミットします。</span><span class="sxs-lookup"><span data-stu-id="29035-119">The <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> method commits the current transaction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29035-120">次のコード例では、<xref:System.ServiceModel.OperationContext.Current%2A> プロパティと <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> メソッドを使用して、メソッド内から呼び出し元へのチャネルを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-120">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to obtain the channel back to the caller from within a method.</span></span> <span data-ttu-id="29035-121">この例のすべてのメソッドは一方向メソッドであり、サービスおよびクライアントが独立して双方向通信できます。</span><span class="sxs-lookup"><span data-stu-id="29035-121">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="29035-122">この場合、クライアントアプリケーションの例では、終了する前に1つの戻り値の呼び出しだけが想定されますが、別のクライアント (たとえば、Windows フォームクライアント) はサービスから任意の数の呼び出しを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="29035-122">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="29035-123">次のクライアントは、コールバックメッセージを受信するための `SampleDuplexHelloCallback` を実装します。</span><span class="sxs-lookup"><span data-stu-id="29035-123">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="29035-124">インポートされたコールバックコントラクトは、前の例の <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> プロパティを使用しているため、サービス内のものと同じ名前ではありません。</span><span class="sxs-lookup"><span data-stu-id="29035-124">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="29035-125">クライアントがコールバックを受信するかどうか、または受信タイミングに関する前提はないので、サーバー コールバックがクライアントの送信呼び出しからは完全に独立していることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="29035-125">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29035-126">クライアントシナリオで <xref:System.ServiceModel.OperationContext> クラスを使用する例については、「<xref:System.ServiceModel.OperationContextScope>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29035-126">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContext (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContext(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContext : System.ServiceModel.IContextChannel -&gt; System.ServiceModel.OperationContext" Usage="new System.ServiceModel.OperationContext channel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="29035-127">新しいクライアントの <see cref="T:System.ServiceModel.IContextChannel" /> を作成するために使用される <see cref="T:System.ServiceModel.OperationContext" />。</span><span class="sxs-lookup"><span data-stu-id="29035-127">The <see cref="T:System.ServiceModel.IContextChannel" /> used to create a new client <see cref="T:System.ServiceModel.OperationContext" />.</span></span></param>
        <summary><span data-ttu-id="29035-128">クライアント アプリケーション内の指定された <see cref="T:System.ServiceModel.OperationContext" /> を使用する <see cref="T:System.ServiceModel.IContextChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="29035-128">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContext" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> in a client application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-129"><xref:System.ServiceModel.OperationContext.%23ctor%2A> コンストラクターを使用して、ヘッダーなどの送信項目を変更するために、プロキシが関連付けられているスコープ内に新しい操作コンテキストを作成します。</span><span class="sxs-lookup"><span data-stu-id="29035-129">Use the <xref:System.ServiceModel.OperationContext.%23ctor%2A> constructor to create a new operation context within the scope of which the proxy is associated in order to modify outbound items such as headers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29035-130">次の例では、送信メッセージにカスタム ヘッダーを追加するために、<xref:System.ServiceModel.OperationContextScope> を使用してクライアント アプリケーションに新しいコンテキストを作成しています。</span><span class="sxs-lookup"><span data-stu-id="29035-130">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="29035-131">チャネルが null です。</span><span class="sxs-lookup"><span data-stu-id="29035-131">The channel is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Channel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IContextChannel Channel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IContextChannel Channel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Channel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Channel As IContextChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IContextChannel ^ Channel { System::ServiceModel::IContextChannel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Channel : System.ServiceModel.IContextChannel" Usage="System.ServiceModel.OperationContext.Channel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IContextChannel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-132">現在の <see cref="T:System.ServiceModel.OperationContext" /> オブジェクトに関連付けられているチャネルを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-132">Gets the channel associated with the current <see cref="T:System.ServiceModel.OperationContext" /> object.</span></span></summary>
        <value><span data-ttu-id="29035-133">現在の <see cref="T:System.ServiceModel.IContextChannel" /> に関連付けられている <see cref="T:System.ServiceModel.OperationContext" />。</span><span class="sxs-lookup"><span data-stu-id="29035-133">An <see cref="T:System.ServiceModel.IContextChannel" /> associated with the current <see cref="T:System.ServiceModel.OperationContext" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal ClaimsPrincipal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ClaimsPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimsPrincipal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ ClaimsPrincipal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipal : System.Security.Claims.ClaimsPrincipal" Usage="System.ServiceModel.OperationContext.ClaimsPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-134">操作に関連付けられているクレーム ベースのプリンシパルを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-134">Gets the claims-based principal associated with the operation.</span></span></summary>
        <value><span data-ttu-id="29035-135">要求のプリンシパル。</span><span class="sxs-lookup"><span data-stu-id="29035-135">The claims principal.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.OperationContext Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.OperationContext Current" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As OperationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::OperationContext ^ Current { System::ServiceModel::OperationContext ^ get(); void set(System::ServiceModel::OperationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.ServiceModel.OperationContext with get, set" Usage="System.ServiceModel.OperationContext.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.OperationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-136">現在のスレッドの実行コンテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="29035-136">Gets or sets the execution context for the current thread.</span></span></summary>
        <value><span data-ttu-id="29035-137">現在のメソッドのメッセージ コンテキストと実行コンテキストを表す <see cref="T:System.ServiceModel.OperationContext" /> 。</span><span class="sxs-lookup"><span data-stu-id="29035-137">The <see cref="T:System.ServiceModel.OperationContext" /> that represents the messaging and execution context of the current method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-138">現在のメソッドの実行およびメッセージコンテキストを取得するには、<xref:System.ServiceModel.OperationContext.Current%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="29035-138">Use the <xref:System.ServiceModel.OperationContext.Current%2A> property to obtain the execution and message context for the current method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29035-139">次のコード例では、<xref:System.ServiceModel.OperationContext.Current%2A> プロパティと <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> メソッドを使用して、メソッド内から呼び出し元へのチャネルを作成します。</span><span class="sxs-lookup"><span data-stu-id="29035-139">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a method.</span></span> <span data-ttu-id="29035-140">この例のすべてのメソッドは一方向メソッドであり、サービスおよびクライアントが独立して双方向通信できます。</span><span class="sxs-lookup"><span data-stu-id="29035-140">All methods in this example are one-way methods, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="29035-141">この場合、クライアントアプリケーションの例では、終了する前に1つの戻り値の呼び出しだけが想定されますが、別のクライアント (たとえば、Windows フォームクライアント) はサービスから任意の数の呼び出しを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="29035-141">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.EndpointDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public Property EndpointDispatcher As EndpointDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::EndpointDispatcher ^ EndpointDispatcher { System::ServiceModel::Dispatcher::EndpointDispatcher ^ get(); void set(System::ServiceModel::Dispatcher::EndpointDispatcher ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EndpointDispatcher : System.ServiceModel.Dispatcher.EndpointDispatcher with get, set" Usage="System.ServiceModel.OperationContext.EndpointDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.EndpointDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-142">検査または変更するエンドポイントのエンドポイント ディスパッチャーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="29035-142">Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</span></span></summary>
        <value><span data-ttu-id="29035-143">検査または変更するエンドポイントのエンドポイント ディスパッチャー。</span><span class="sxs-lookup"><span data-stu-id="29035-143">The endpoint dispatcher for the endpoint to inspect or modify.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt; Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.IExtensionCollection`1&lt;class System.ServiceModel.OperationContext&gt; Extensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As IExtensionCollection(Of OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ Extensions { System::ServiceModel::IExtensionCollection&lt;System::ServiceModel::OperationContext ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Extensions : System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt;" Usage="System.ServiceModel.OperationContext.Extensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.IExtensibleObject`1.Extensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.IExtensionCollection&lt;System.ServiceModel.OperationContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-144">現在のメッセージ コンテキストからサービス拡張のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-144">Gets the collection of service extensions from the current message context.</span></span></summary>
        <value><span data-ttu-id="29035-145"><see cref="T:System.ServiceModel.OperationContext" /> の拡張のコレクション。</span><span class="sxs-lookup"><span data-stu-id="29035-145">A collection of extensions of <see cref="T:System.ServiceModel.OperationContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-146"><xref:System.ServiceModel.OperationContext.Extensions%2A> プロパティを使用して、コンテキストの変更またはカスタム状態の追加に使用される <xref:System.ServiceModel.OperationContext> のすべての拡張機能のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-146">Use the <xref:System.ServiceModel.OperationContext.Extensions%2A> property to obtain a collection of all extensions of the <xref:System.ServiceModel.OperationContext> used to modify the context or add custom state.</span></span> <span data-ttu-id="29035-147">拡張機能の詳細については、「[拡張オブジェクト](/dotnet/framework/wcf/extending/extensible-objects)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29035-147">For more information about extensions, see [Extensible Objects](/dotnet/framework/wcf/extending/extensible-objects).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackChannel&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetCallbackChannel&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetCallbackChannel&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.GetCallbackChannel``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackChannel(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetCallbackChannel();" />
      <MemberSignature Language="F#" Value="member this.GetCallbackChannel : unit -&gt; 'T" Usage="operationContext.GetCallbackChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="29035-148">クライアントにコールバックするために使用されるチャネルの種類。</span><span class="sxs-lookup"><span data-stu-id="29035-148">The type of channel used to call back to the client.</span></span></typeparam>
        <summary><span data-ttu-id="29035-149">現在の操作を呼び出したクライアント インスタンスへのチャネルを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-149">Gets a channel to the client instance that called the current operation.</span></span></summary>
        <returns><span data-ttu-id="29035-150"><see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> プロパティに指定された型の操作を呼び出したクライアント インスタンスへのチャネル。</span><span class="sxs-lookup"><span data-stu-id="29035-150">A channel to the client instance that called the operation of the type specified in the <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-151"><xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> プロパティを呼び出して、サービスを呼び出したクライアントインスタンスで操作を呼び出すために使用できるチャネルを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-151">Call the <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> property to obtain a channel that you can use to call operations on the client instance that called the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29035-152">次のコード例では、<xref:System.ServiceModel.OperationContext.Current%2A> プロパティと <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> メソッドを使用して、操作内から呼び出し元へのチャネルを作成します。</span><span class="sxs-lookup"><span data-stu-id="29035-152">The following code example uses the <xref:System.ServiceModel.OperationContext.Current%2A> property and <xref:System.ServiceModel.OperationContext.GetCallbackChannel%2A> method to create a channel back to the caller from within a operation.</span></span> <span data-ttu-id="29035-153">この例のすべての操作は一方向操作であり、サービスとクライアントが独立して双方向通信できます。</span><span class="sxs-lookup"><span data-stu-id="29035-153">All operations in this example are one-way operations, enabling the service and the client to communicate in both directions independently.</span></span> <span data-ttu-id="29035-154">この場合、クライアントアプリケーションの例では、終了する前に1つの戻り値の呼び出しだけが想定されますが、別のクライアント (たとえば、Windows フォームクライアント) はサービスから任意の数の呼び出しを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="29035-154">In this case, the example client application expects only one return call before it exits, but another client, for example a Windows Forms client, can receive any number of calls from the service.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#1](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/services.cs#1)]
 [!code-vb[SCA.CallbackContract#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/services.vb#1)]  
  
 <span data-ttu-id="29035-155">次のクライアントは、コールバックメッセージを受信するための `SampleDuplexHelloCallback` を実装します。</span><span class="sxs-lookup"><span data-stu-id="29035-155">The following client implements the `SampleDuplexHelloCallback` to receive the callback message.</span></span> <span data-ttu-id="29035-156">インポートされたコールバックコントラクトは、前の例の <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> プロパティを使用しているため、サービス内のものと同じ名前ではありません。</span><span class="sxs-lookup"><span data-stu-id="29035-156">The imported callback contract is not the same name as the one in the service, due to the use of the <xref:System.ServiceModel.ServiceContractAttribute.Name%2A> property in the preceding example.</span></span> <span data-ttu-id="29035-157">クライアントがコールバックを受信するかどうか、または受信タイミングに関する前提はないので、サーバー コールバックがクライアントの送信呼び出しからは完全に独立していることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="29035-157">Note that the client makes no assumptions about whether or when it might receive a callback; the server callback is entirely independent of the client's outbound call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29035-158">クライアントシナリオで <xref:System.ServiceModel.OperationContext> クラスを使用する例については、「<xref:System.ServiceModel.OperationContextScope>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="29035-158">For an example that uses the <xref:System.ServiceModel.OperationContext> class in a client scenario, see <xref:System.ServiceModel.OperationContextScope>.</span></span>  
  
 [!code-csharp[SCA.CallbackContract#3](~/samples/snippets/csharp/VS_Snippets_CFX/sca.callbackcontract/cs/client.cs#3)]
 [!code-vb[SCA.CallbackContract#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/sca.callbackcontract/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSupportingTokens">
      <MemberSignature Language="C#" Value="public bool HasSupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.HasSupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSupportingTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSupportingTokens { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasSupportingTokens : bool" Usage="System.ServiceModel.OperationContext.HasSupportingTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-159">受信メッセージがトークンをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-159">Gets a value that indicates whether the incoming message has supporting tokens.</span></span></summary>
        <value><span data-ttu-id="29035-160">受信メッセージがトークンをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="29035-160"><see langword="true" /> if the incoming message has supporting tokens; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : System.ServiceModel.ServiceHostBase" Usage="System.ServiceModel.OperationContext.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-161">現在のサービス オブジェクトの <see cref="T:System.ServiceModel.ServiceHost" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-161">Gets the <see cref="T:System.ServiceModel.ServiceHost" /> for the current service object.</span></span></summary>
        <value><span data-ttu-id="29035-162"><see cref="T:System.ServiceModel.ServiceHost" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29035-162">A <see cref="T:System.ServiceModel.ServiceHost" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders IncomingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ IncomingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncomingMessageHeaders : System.ServiceModel.Channels.MessageHeaders" Usage="System.ServiceModel.OperationContext.IncomingMessageHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-163"><see cref="T:System.ServiceModel.OperationContext" /> の受信メッセージ ヘッダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-163">Gets the incoming message headers for the <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="29035-164">受信メッセージ ヘッダーを格納する <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29035-164">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains the incoming message headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-165">このプロパティを使用して、サービス操作に到着する要求ヘッダー、またはクライアント プロキシに到着する応答ヘッダーの検査と変更を行います。</span><span class="sxs-lookup"><span data-stu-id="29035-165">Use this property to inspect or modify the request headers that arrive at a service operation or reply headers that arrive at a client proxy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29035-166">サービス操作内の受信メッセージ ヘッダーを読み取る方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="29035-166">The following code example shows how to read the incoming message headers in a service operation.</span></span>  
  
 [!code-csharp[OperationContextScope#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/services.cs#2)]
 [!code-vb[OperationContextScope#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties IncomingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties IncomingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ IncomingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncomingMessageProperties : System.ServiceModel.Channels.MessageProperties" Usage="System.ServiceModel.OperationContext.IncomingMessageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-167"><see cref="T:System.ServiceModel.OperationContext" /> 内の受信メッセージのメッセージ プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-167">Gets the message properties for the incoming message in the <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="29035-168">受信メッセージのメッセージ プロパティを格納する <see cref="T:System.ServiceModel.Channels.MessageProperties" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29035-168">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the incoming message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-169">このプロパティを使用して、サービス操作内の要求メッセージまたはクライアント プロキシ内の応答メッセージのメッセージ プロパティの検査と変更を行います。</span><span class="sxs-lookup"><span data-stu-id="29035-169">Use this property to inspect or modify the message properties for a request message in a service operation or a reply message in a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncomingMessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion IncomingMessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion IncomingMessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IncomingMessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncomingMessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ IncomingMessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncomingMessageVersion : System.ServiceModel.Channels.MessageVersion" Usage="System.ServiceModel.OperationContext.IncomingMessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-170"><see cref="T:System.ServiceModel.OperationContext" /> の受信 SOAP メッセージのバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-170">Gets the incoming SOAP message version for the <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="29035-171">受信メッセージの SOAP バージョン。</span><span class="sxs-lookup"><span data-stu-id="29035-171">The SOAP version of the incoming message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-172">このプロパティを使用して、サービス操作に到着する要求メッセージの SOAP バージョン、またはクライアント プロキシに到着する応答メッセージの SOAP バージョンを検査します。</span><span class="sxs-lookup"><span data-stu-id="29035-172">Use this property to inspect the SOAP version of the request message that arrives at a service operation or the SOAP version of the reply message that arrives at a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext InstanceContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.InstanceContext InstanceContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.InstanceContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceContext As InstanceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::InstanceContext ^ InstanceContext { System::ServiceModel::InstanceContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceContext : System.ServiceModel.InstanceContext" Usage="System.ServiceModel.OperationContext.InstanceContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-173">現在のサービス インスタンスを管理する <see cref="T:System.ServiceModel.InstanceContext" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-173">Gets the <see cref="T:System.ServiceModel.InstanceContext" /> object that manages the current service instance.</span></span></summary>
        <value><span data-ttu-id="29035-174">現在のサービスの <see cref="T:System.ServiceModel.InstanceContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29035-174">The <see cref="T:System.ServiceModel.InstanceContext" /> object for the current service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-175">現在のサービスオブジェクトを管理するランタイムオブジェクトにアクセスするには、<xref:System.ServiceModel.OperationContext.InstanceContext%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="29035-175">Use the <xref:System.ServiceModel.OperationContext.InstanceContext%2A> property to access the run-time object that manages the current service object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserContext">
      <MemberSignature Language="C#" Value="public bool IsUserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.IsUserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserContext { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUserContext : bool" Usage="System.ServiceModel.OperationContext.IsUserContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-176">このプロパティはシステムによる使用を目的としています。ユーザーが呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="29035-176">This property is intended for system use and should not be called by users.</span></span></summary>
        <value><span data-ttu-id="29035-177">[https://login.microsoftonline.com/consumers/](<see langword="true" />)</span><span class="sxs-lookup"><span data-stu-id="29035-177"><see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler OperationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler OperationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.OperationContext.OperationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OperationCompleted As EventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ OperationCompleted;" />
      <MemberSignature Language="F#" Value="member this.OperationCompleted : EventHandler " Usage="member this.OperationCompleted : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event OperationCompleted As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-178">操作の完了時に発生します。</span><span class="sxs-lookup"><span data-stu-id="29035-178">Occurs when the operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-179"><xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> を `false`に設定した場合は、<xref:System.ServiceModel.OperationContext.OperationCompleted> イベントを使用して、パラメーターまたは戻り値を破棄します。</span><span class="sxs-lookup"><span data-stu-id="29035-179">Use the <xref:System.ServiceModel.OperationContext.OperationCompleted> event to dispose parameters or a return value if you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="29035-180">通常は、<xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> を `false` に設定して、WCF がパラメーターおよび戻り値オブジェクトに対して <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> を呼び出さないようにします。</span><span class="sxs-lookup"><span data-stu-id="29035-180">Normally you set <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A?displayProperty=nameWithType> to `false` to prevent WCF from calling <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> on the parameter and return value objects.</span></span>  <span data-ttu-id="29035-181">ただし、保持する必要があるパラメーターと破棄する必要があるパラメーターが混在する場合、このイベントは、パラメーターを破棄するための最善の場所です。</span><span class="sxs-lookup"><span data-stu-id="29035-181">However, if some parameters need to be preserved while others need to be disposed, this event is the best place to dispose those parameters.</span></span>  
  
 <span data-ttu-id="29035-182">さらに、双方向バインドでは、現在の操作に対する応答が送信された後で、このイベントを使用して、コールバック チャネル上に要求を送信できます。</span><span class="sxs-lookup"><span data-stu-id="29035-182">Also, with duplex bindings, this event can be used to send a request on the callback channel after the reply for the current operation is sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="29035-183">呼び出し元が <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> 操作の <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> イベントをリッスンしている場合、応答の受信時にブロックすることができます。</span><span class="sxs-lookup"><span data-stu-id="29035-183">If a caller is listening for the <xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType> event for an <xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType> operation, it is possible to block when the response is received.</span></span> <span data-ttu-id="29035-184">これを処理する適切な方法として、<xref:System.ServiceModel.OperationContext.OperationCompleted> が発生し、その直後に該当のイベント ハンドラーから制御が返されたときに、別のスレッドで処理するようにスケジュールを設定します。</span><span class="sxs-lookup"><span data-stu-id="29035-184">The proper way to handle this is to schedule work on another thread when <xref:System.ServiceModel.OperationContext.OperationCompleted> is raised and then immediately return from that event handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageHeaders">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders OutgoingMessageHeaders" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageHeaders As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageHeaders ^ OutgoingMessageHeaders { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutgoingMessageHeaders : System.ServiceModel.Channels.MessageHeaders" Usage="System.ServiceModel.OperationContext.OutgoingMessageHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-185">アクティブな <see cref="T:System.ServiceModel.OperationContext" /> の送信メッセージ ヘッダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-185">Gets the outgoing message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="29035-186">アクティブな <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> の送信メッセージ ヘッダーを格納する <see cref="T:System.ServiceModel.OperationContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29035-186">A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains outbound message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-187">このプロパティを使用して、WCF クライアントオブジェクトによって送信されるサービス操作または要求ヘッダーによって送信される応答ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="29035-187">Use this property to add reply headers that are sent by a service operation or request headers that are sent by a WCF client object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="29035-188">次の例では、送信メッセージにカスタム ヘッダーを追加するために、<xref:System.ServiceModel.OperationContextScope> を使用してクライアント アプリケーションに新しいコンテキストを作成しています。</span><span class="sxs-lookup"><span data-stu-id="29035-188">The following example shows how to use the <xref:System.ServiceModel.OperationContextScope> to create a new context in a client application in order to add a custom header to the outgoing message.</span></span>  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutgoingMessageProperties">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties OutgoingMessageProperties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.OutgoingMessageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutgoingMessageProperties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageProperties ^ OutgoingMessageProperties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutgoingMessageProperties : System.ServiceModel.Channels.MessageProperties" Usage="System.ServiceModel.OperationContext.OutgoingMessageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-189">アクティブな <see cref="T:System.ServiceModel.OperationContext" /> 内の送信メッセージのメッセージ プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-189">Gets the message properties for the outbound message in the active <see cref="T:System.ServiceModel.OperationContext" />.</span></span></summary>
        <value><span data-ttu-id="29035-190">送信メッセージのメッセージ プロパティを格納する <see cref="T:System.ServiceModel.Channels.MessageProperties" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29035-190">A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the outbound message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-191">このプロパティを使用して、サービス操作から応答メッセージのメッセージ プロパティ、またはクライアント プロキシから要求メッセージのメッセージ プロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="29035-191">Use this property to add message properties for a reply message from a service operation or message properties for a request message from a client proxy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::RequestContext ^ RequestContext { System::ServiceModel::Channels::RequestContext ^ get(); void set(System::ServiceModel::Channels::RequestContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.ServiceModel.Channels.RequestContext with get, set" Usage="System.ServiceModel.OperationContext.RequestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-192">このメソッドの <see cref="T:System.ServiceModel.Channels.RequestContext" /> 実装を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="29035-192">Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation for this method.</span></span></summary>
        <value><span data-ttu-id="29035-193"><see cref="T:System.ServiceModel.Channels.RequestContext" /> の実装。要求コンテキストがない場合は null。</span><span class="sxs-lookup"><span data-stu-id="29035-193">An <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation, or null if there is no request context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-194">一方向操作には、要求コンテキストはありません。</span><span class="sxs-lookup"><span data-stu-id="29035-194">One-way operations are do not have a request context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceSecurityContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceSecurityContext ServiceSecurityContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceSecurityContext ServiceSecurityContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.ServiceSecurityContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceSecurityContext As ServiceSecurityContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceSecurityContext ^ ServiceSecurityContext { System::ServiceModel::ServiceSecurityContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceSecurityContext : System.ServiceModel.ServiceSecurityContext" Usage="System.ServiceModel.OperationContext.ServiceSecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceSecurityContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-195">このメソッドが実行される <see cref="T:System.ServiceModel.ServiceSecurityContext" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="29035-195">Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> within which this method executes.</span></span></summary>
        <value><span data-ttu-id="29035-196"><see cref="T:System.ServiceModel.ServiceSecurityContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="29035-196">A <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.ServiceModel.OperationContext.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-197">現在のセッションを識別するために使用される <see cref="T:System.String" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-197">Gets the <see cref="T:System.String" /> used to identify the current session.</span></span></summary>
        <value><span data-ttu-id="29035-198">セッションの識別子。</span><span class="sxs-lookup"><span data-stu-id="29035-198">The session identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTransactionComplete">
      <MemberSignature Language="C#" Value="public void SetTransactionComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTransactionComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContext.SetTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTransactionComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTransactionComplete();" />
      <MemberSignature Language="F#" Value="member this.SetTransactionComplete : unit -&gt; unit" Usage="operationContext.SetTransactionComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="29035-199">現在実行中のトランザクションをコミットします。</span><span class="sxs-lookup"><span data-stu-id="29035-199">Commits the currently executing transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="29035-200">これは、<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> を `false` に設定する操作でのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="29035-200">This is only useful in operations that set <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> to `false`.</span></span> <span data-ttu-id="29035-201">通常、サービスは一部の操作でのみ、これを行います。すべての操作で行うわけではありません。</span><span class="sxs-lookup"><span data-stu-id="29035-201">Typically, services do this on some but not all operations.</span></span> <span data-ttu-id="29035-202"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> が false の場合、トランザクションは自動的に完了します。</span><span class="sxs-lookup"><span data-stu-id="29035-202">When <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A?displayProperty=nameWithType> is false the transaction completes automatically.</span></span> <span data-ttu-id="29035-203">デザイン時では、操作がトランザクションを完了する必要があるかどうかを判断できない場合は、<xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="29035-203">Use <xref:System.ServiceModel.OperationContext.SetTransactionComplete%2A> in cases where it is not possible to determine at design-time whether an operation needs to complete the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="29035-204">コンテキストの中にトランザクションがありません。</span><span class="sxs-lookup"><span data-stu-id="29035-204">There is no transaction in the context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportingTokens">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Security.SupportingTokenSpecification&gt; SupportingTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationContext.SupportingTokens" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportingTokens As ICollection(Of SupportingTokenSpecification)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ SupportingTokens { System::Collections::Generic::ICollection&lt;System::ServiceModel::Security::SupportingTokenSpecification ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportingTokens : System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt;" Usage="System.ServiceModel.OperationContext.SupportingTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Security.SupportingTokenSpecification&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="29035-205"><see cref="T:System.Collections.Generic.ICollection`1" /> 型の <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="29035-205">Gets a <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</span></span></summary>
        <value><span data-ttu-id="29035-206">セキュリティ トークンのコレクション。</span><span class="sxs-lookup"><span data-stu-id="29035-206">A collection of security tokens.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
