<Type Name="OperationBehaviorAttribute" FullName="System.ServiceModel.OperationBehaviorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2521b45c9ec1ac5cdc4c2bc92d913ba531d6d724" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78739412" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationBehaviorAttribute extends System.Attribute implements class System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationBehaviorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationBehaviorAttribute&#xA;Inherits Attribute&#xA;Implements IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationBehaviorAttribute sealed : Attribute, System::ServiceModel::Description::IOperationBehavior" />
  <TypeSignature Language="F#" Value="type OperationBehaviorAttribute = class&#xA;    inherit Attribute&#xA;    interface IOperationBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IOperationBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="87d5b-101">サービス メソッドのローカル実行動作を指定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-101">Specifies the local execution behavior of a service method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d5b-102"><xref:System.ServiceModel.OperationBehaviorAttribute> 属性を使用して、操作が実行されるときの操作固有の実行動作を示します</span><span class="sxs-lookup"><span data-stu-id="87d5b-102">Use the <xref:System.ServiceModel.OperationBehaviorAttribute> attribute to indicate what operation-specific execution behavior the operation has when executed.</span></span> <span data-ttu-id="87d5b-103">(サービス レベルの実行動作を指定するには、<xref:System.ServiceModel.ServiceBehaviorAttribute> 属性を使用します)。</span><span class="sxs-lookup"><span data-stu-id="87d5b-103">(To specify execution behavior at the service level, use the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="87d5b-104"><xref:System.ServiceModel.OperationBehaviorAttribute> を使用して、双方向クライアント アプリケーションでコールバック コントラクト操作を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-104">You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application.</span></span> <span data-ttu-id="87d5b-105">コールバック操作で使用する場合は、<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> プロパティが <xref:System.ServiceModel.ReleaseInstanceMode.None> である必要があります。そうでない場合は、<xref:System.InvalidOperationException> 例外が実行時にスローされます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-105">When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode.None> or an <xref:System.InvalidOperationException> exception is thrown at runtime.</span></span>  
  
 <span data-ttu-id="87d5b-106"><xref:System.ServiceModel.OperationBehaviorAttribute> 属性は、開発者がそれ以外で実装する必要のある一般的な機能を有効にする、Windows Communication Foundation (WCF) プログラミングモデルの機能です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-106">The <xref:System.ServiceModel.OperationBehaviorAttribute> attribute is a Windows Communication Foundation (WCF) programming model feature that enables common features that developers otherwise must implement themselves.</span></span>  
  
-   <span data-ttu-id="87d5b-107"><xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> プロパティは、操作に渡されたパラメーター オブジェクトを操作の完了時に破棄するかどうかを制御します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-107">The <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> property controls whether parameter objects passed to an operation are disposed when the operation completes.</span></span>  
  
-   <span data-ttu-id="87d5b-108"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> プロパティは、未処理の例外が発生しなかった場合に、メソッドが実行されているトランザクションが自動的にコミットされるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-108">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property specifies whether the transaction in which the method executes is automatically committed if no unhandled exceptions occur.</span></span>  
  
-   <span data-ttu-id="87d5b-109"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> プロパティは、メソッドをトランザクションの中で実行する必要があるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-109">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property specifies whether a method must execute within a transaction.</span></span>  
  
-   <span data-ttu-id="87d5b-110"><xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> プロパティは、サービス操作が、呼び出し元の ID を偽装できるか、偽装する必要があるか、または偽装できないかを指定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-110">The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property specifies whether the service operation can, must, or cannot impersonate the caller's identity.</span></span>  
  
-   <span data-ttu-id="87d5b-111"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> プロパティは、サービス オブジェクトが、メソッドの呼び出しプロセスの間にリサイクルされるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-111">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property specifies when service objects are recycled during the method invocation process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87d5b-112">必須の分散トランザクション内で実行する操作のコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-112">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="87d5b-113"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> プロパティは、メソッドが呼び出し元のトランザクションの下で実行されることを示し、<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> プロパティは、未処理の例外が発生しない場合にトランザクションが自動的にコミットすることを示します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-113">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the method executes under the caller's transaction and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction commits automatically.</span></span> <span data-ttu-id="87d5b-114">未処理の例外が発生すると、トランザクションは中止されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-114">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationBehaviorAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationBehaviorAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="87d5b-115"><see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-115">Initializes a new instance of the <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d5b-116">パラメーターなしのコンストラクターは、次の既定値を使用してクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-116">The parameterless constructor creates an instance of the class with the following defaults:</span></span>  
  
-   <span data-ttu-id="87d5b-117"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> プロパティが `true` です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-117">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="87d5b-118"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> プロパティが `false` です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-118">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="87d5b-119"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> プロパティが <xref:System.ServiceModel.ReleaseInstanceMode.None> です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-119">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is <xref:System.ServiceModel.ReleaseInstanceMode.None>.</span></span>  
  
-   <span data-ttu-id="87d5b-120"><xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> が <xref:System.ServiceModel.ImpersonationOption.NotAllowed> です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-120">The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoDisposeParameters">
      <MemberSignature Language="C#" Value="public bool AutoDisposeParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoDisposeParameters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoDisposeParameters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoDisposeParameters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoDisposeParameters : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87d5b-121">パラメーターを自動的に破棄するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-121">Gets or sets a value that indicates whether parameters are to be automatically disposed.</span></span></summary>
        <value><span data-ttu-id="87d5b-122">パラメーターを自動的に破棄するかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-122"><see langword="true" /> if the parameters are to be automatically disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d5b-123">このプロパティは、メッセージの処理中に作成された破棄可能なすべてのパラメーター (入力、出力、または参照の各パラメーター) をサービスが破棄するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-123">This property determines whether the service disposes all disposable parameters (input, output or reference parameters) that were created while processing a message.</span></span> <span data-ttu-id="87d5b-124">既定値は `true` です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-124">The default value is `true`.</span></span> <span data-ttu-id="87d5b-125">システムによる必要に応じたリソースの破棄とキャッシュを回避するには、このプロパティを `false` に設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-125">Set this property to `false` if you want to prevent the system from disposing of resources and cache them if required.</span></span>  
  
 <span data-ttu-id="87d5b-126">たとえば、<xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> が `false` の場合は、送信側でストリームを閉じるのは送信者の役割です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-126">For example, if <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A> is `false`, then the sender is responsible for closing the stream on the sending side.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ImpersonationOption Impersonation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ImpersonationOption Impersonation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberSignature Language="VB.NET" Value="Public Property Impersonation As ImpersonationOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ImpersonationOption Impersonation { System::ServiceModel::ImpersonationOption get(); void set(System::ServiceModel::ImpersonationOption value); };" />
      <MemberSignature Language="F#" Value="member this.Impersonation : System.ServiceModel.ImpersonationOption with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.Impersonation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ImpersonationOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87d5b-127">操作がサポートする呼び出し元の偽装レベルを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-127">Gets or sets a value that indicates the level of caller impersonation that the operation supports.</span></span></summary>
        <value><span data-ttu-id="87d5b-128"><see cref="T:System.ServiceModel.ImpersonationOption" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="87d5b-128">One of the <see cref="T:System.ServiceModel.ImpersonationOption" /> values.</span></span> <span data-ttu-id="87d5b-129">既定値は、<see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" /> です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-129">The default is <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d5b-130"><xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> プロパティ (および偽装をサポートするバインド構成) を使用して、指定したメソッド (<xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> プロパティを <xref:System.ServiceModel.ImpersonationOption.Allowed> または <xref:System.ServiceModel.ImpersonationOption.Required> を設定することでマークしたメソッド) が、呼び出し元の ID で実行されるようにします。</span><span class="sxs-lookup"><span data-stu-id="87d5b-130">Use the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property (together with a binding configuration that supports impersonation) to enable specified methods (those marked with the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property set to <xref:System.ServiceModel.ImpersonationOption.Allowed> or <xref:System.ServiceModel.ImpersonationOption.Required>) to execute under the caller's identity.</span></span> <span data-ttu-id="87d5b-131"><xref:System.ServiceModel.ImpersonationOption.Allowed> を <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> プロパティと共に使用する場合の権限借用の実行方法などの詳細については、「[委任と偽装](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md)」および「[方法: サービスでクライアントを偽装する](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="87d5b-131">For details, including how impersonation is performed when using <xref:System.ServiceModel.ImpersonationOption.Allowed> together with the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=nameWithType> property, see [Delegation and Impersonation](~/docs/framework/wcf/feature-details/delegation-and-impersonation-with-wcf.md) and [How to: Impersonate a Client on a Service](~/docs/framework/wcf/how-to-impersonate-a-client-on-a-service.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="87d5b-132">偽装を行うサービス エンドポイントをプログラムで追加する場合は、<xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> メソッドのいずれか、または <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> メソッドを使用して、コントラクトを新しい <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> オブジェクトに適切に読み込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="87d5b-132">When programmatically adding a service endpoint that performs impersonation, you must either use one of the <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> methods or the <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=nameWithType> method to properly load the contract into a new <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="87d5b-133">構成ファイルを使用する場合は、追加手順は不要です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-133">Using a configuration file requires no extra step.</span></span>  
  
 <span data-ttu-id="87d5b-134">偽装がサポートされない特別なシナリオがあります。</span><span class="sxs-lookup"><span data-stu-id="87d5b-134">There may be specific scenarios when impersonation is not supported.</span></span> <span data-ttu-id="87d5b-135">詳細については、「サポートされ[ないシナリオ](~/docs/framework/wcf/feature-details/unsupported-scenarios.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="87d5b-135">For more information, see [Unsupported Scenarios](~/docs/framework/wcf/feature-details/unsupported-scenarios.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87d5b-136">次のサービスのコード例では、<xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> プロパティを <xref:System.ServiceModel.ImpersonationOption.Required> に設定することで、偽装を要求しています。</span><span class="sxs-lookup"><span data-stu-id="87d5b-136">The following service code example requires impersonation by setting the <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> property to <xref:System.ServiceModel.ImpersonationOption.Required>.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/services.cs#1)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/services.vb#1)]  
  
 <span data-ttu-id="87d5b-137">次のコード例では、<xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> プロパティを使用して、偽装するためにクライアント アプリケーション資格情報を必要とする操作を呼び出す前に、それらの情報を設定しています。</span><span class="sxs-lookup"><span data-stu-id="87d5b-137">The following code example shows using the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property to set the client application credentials prior to invoking the operation that requires those credentials for impersonation.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_impersonation/cs/client.cs#3)]
 [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_impersonation/vb/client.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseInstanceMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseInstanceMode As ReleaseInstanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReleaseInstanceMode ReleaseInstanceMode { System::ServiceModel::ReleaseInstanceMode get(); void set(System::ServiceModel::ReleaseInstanceMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseInstanceMode : System.ServiceModel.ReleaseInstanceMode with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReleaseInstanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87d5b-138">操作呼び出しのどの時点でサービス オブジェクトをリサイクルするかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-138">Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.</span></span></summary>
        <value><span data-ttu-id="87d5b-139"><see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="87d5b-139">One of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values.</span></span> <span data-ttu-id="87d5b-140">既定値は、<see cref="F:System.ServiceModel.ReleaseInstanceMode.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-140">The default is <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d5b-141">メソッドの実行中に Windows Communication Foundation (WCF) がサービスオブジェクトをリサイクルするタイミングを指定するには、<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-141">Use the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property to specify when Windows Communication Foundation (WCF) recycles a service object in the course of executing a method.</span></span> <span data-ttu-id="87d5b-142">既定の動作では、<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> 値に従ってサービス オブジェクトをリサイクルします。</span><span class="sxs-lookup"><span data-stu-id="87d5b-142">The default behavior is to recycle a service object according to the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value.</span></span> <span data-ttu-id="87d5b-143"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> プロパティを設定すると、この既定の動作が変更されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-143">Setting the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property changes that default behavior.</span></span>  
  
 <span data-ttu-id="87d5b-144"><xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> は、スレッドの保証を行いません。</span><span class="sxs-lookup"><span data-stu-id="87d5b-144">The <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> makes no threading guarantees.</span></span> <span data-ttu-id="87d5b-145">サービスの実行時に、新しい変更されていないオブジェクトを用意する必要がある場合は、<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> プロパティを <xref:System.ServiceModel.InstanceContextMode.PerCall> に設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-145">If you must have a new, unmodified object when your service runs, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to <xref:System.ServiceModel.InstanceContextMode.PerCall>.</span></span>  
  
 <span data-ttu-id="87d5b-146">トランザクション シナリオでは、<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> プロパティは、メソッドの呼び出しを処理する前に、サービス オブジェクトに関連付けられた古いデータがクリーンアップされることを保証するためにしばしば使用されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-146">In transaction scenarios, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property is often used to ensure that old data associated with the service object is cleaned up prior to processing a method call.</span></span> <span data-ttu-id="87d5b-147"><xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> プロパティを `true` に設定することで、トランザクションが正常に完了した後で、トランザクションに関連付けられたサービス オブジェクトがリサイクルされることを保証できます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-147">You can also ensure that service objects associated with transactions are recycled after the transaction successfully completes by setting the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="87d5b-148">次の動作を選択できます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-148">You can choose the following behaviors:</span></span>  
  
-   <span data-ttu-id="87d5b-149">操作が呼び出される前に、サービス オブジェクトをリサイクルします。</span><span class="sxs-lookup"><span data-stu-id="87d5b-149">Recycle a service object before an operation is called.</span></span>  
  
-   <span data-ttu-id="87d5b-150">操作が呼び出された後で、サービス オブジェクトをリサイクルします。</span><span class="sxs-lookup"><span data-stu-id="87d5b-150">Recycle a service object after an operation is called.</span></span>  
  
-   <span data-ttu-id="87d5b-151">操作の呼び出しの前後の両方で、サービス オブジェクトをリサイクルします。</span><span class="sxs-lookup"><span data-stu-id="87d5b-151">Recycle a service object both before and after an operation is called.</span></span>  
  
-   <span data-ttu-id="87d5b-152">リサイクル動作はありません。</span><span class="sxs-lookup"><span data-stu-id="87d5b-152">No recycling behavior.</span></span>  
  
 <span data-ttu-id="87d5b-153"><xref:System.ServiceModel.OperationBehaviorAttribute> を使用して、双方向クライアント アプリケーションでコールバック コントラクト操作を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-153">You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application.</span></span> <span data-ttu-id="87d5b-154">コールバック操作で使用する場合は、<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> プロパティが <xref:System.ServiceModel.ReleaseInstanceMode.None> である必要があります。そうでない場合は、<xref:System.InvalidOperationException> 例外が実行時にスローされます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-154">When used on a callback operation, the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property must be <xref:System.ServiceModel.ReleaseInstanceMode.None> or an <xref:System.InvalidOperationException> exception is thrown at runtime.</span></span>  
  
 <span data-ttu-id="87d5b-155">さらに、サービスがサービス オブジェクトを <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> コンストラクターに渡すことで作成される場合、このプロパティの値は、<xref:System.ServiceModel.ReleaseInstanceMode.None> であるかのように処理されることを認識しておくことが重要です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-155">In addition, it is important to realize that if the service is created by passing a service object to the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29?displayProperty=nameWithType> constructor, the value of this property is treated as if it were <xref:System.ServiceModel.ReleaseInstanceMode.None>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87d5b-156"><xref:System.ServiceModel.ReleaseInstanceMode> を使用して呼び出しの前後にサービス オブジェクトをリサイクルするコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-156">The following example code shows the use of <xref:System.ServiceModel.ReleaseInstanceMode> to recycle service objects both before and after a call.</span></span>  
  
 [!code-csharp[OBA.ReleaseInstanceMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/oba.releaseinstancemode/cs/services.cs#1)]
 [!code-vb[OBA.ReleaseInstanceMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/oba.releaseinstancemode/vb/services.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="87d5b-157">値が、<see cref="T:System.ServiceModel.ReleaseInstanceMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="87d5b-157">The value is not one of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="VB.NET" Value="Sub AddBindingParameters (description As OperationDescription, parameters As BindingParameterCollection) Implements IOperationBehavior.AddBindingParameters" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IOperationBehavior::AddBindingParameters;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters (description, parameters)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="87d5b-158"><see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> プロパティをサポートするように変更された操作の説明。</span><span class="sxs-lookup"><span data-stu-id="87d5b-158">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span></span></param>
        <param name="parameters"><span data-ttu-id="87d5b-159">バインドの動作をサポートするために渡されるバインド パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="87d5b-159">Binding parameters passed to support binding behaviors.</span></span></param>
        <summary><span data-ttu-id="87d5b-160"><see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-160">Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.ClientOperation proxy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyClientBehavior (description As OperationDescription, proxy As ClientOperation) Implements IOperationBehavior.ApplyClientBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::ClientOperation ^ proxy) = System::ServiceModel::Description::IOperationBehavior::ApplyClientBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior (description, proxy)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="87d5b-161"><see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> プロパティをサポートするように変更された操作の説明。</span><span class="sxs-lookup"><span data-stu-id="87d5b-161">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span></span></param>
        <param name="proxy"><span data-ttu-id="87d5b-162">この操作のためのカスタム クライアント変更を挿入する拡張アクセス ポイント。</span><span class="sxs-lookup"><span data-stu-id="87d5b-162">The extensibility access point to insert custom client modifications for this operation.</span></span></param>
        <summary><span data-ttu-id="87d5b-163">クライアントのオペレーション動作を実装します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-163">Implements the client operation behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription description, class System.ServiceModel.Dispatcher.DispatchOperation dispatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="VB.NET" Value="Sub ApplyDispatchBehavior (description As OperationDescription, dispatch As DispatchOperation) Implements IOperationBehavior.ApplyDispatchBehavior" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ description, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatch) = System::ServiceModel::Description::IOperationBehavior::ApplyDispatchBehavior;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior (description, dispatch)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="87d5b-164"><see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> プロパティをサポートするように変更された操作の説明。</span><span class="sxs-lookup"><span data-stu-id="87d5b-164">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</span></span></param>
        <param name="dispatch"><span data-ttu-id="87d5b-165">この操作のためのカスタム サービス変更を挿入する拡張ポイント。</span><span class="sxs-lookup"><span data-stu-id="87d5b-165">The extensibility point to insert custom service modifications for this operation.</span></span></param>
        <summary><span data-ttu-id="87d5b-166">サービス操作の動作を実装します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-166">Implements the service operation behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IOperationBehavior.Validate">
      <MemberSignature Language="C#" Value="void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IOperationBehavior.Validate(class System.ServiceModel.Description.OperationDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="VB.NET" Value="Sub Validate (description As OperationDescription) Implements IOperationBehavior.Validate" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IOperationBehavior.Validate(System::ServiceModel::Description::OperationDescription ^ description) = System::ServiceModel::Description::IOperationBehavior::Validate;" />
      <MemberSignature Language="F#" Value="abstract member System.ServiceModel.Description.IOperationBehavior.Validate : System.ServiceModel.Description.OperationDescription -&gt; unit&#xA;override this.System.ServiceModel.Description.IOperationBehavior.Validate : System.ServiceModel.Description.OperationDescription -&gt; unit" Usage="operationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate description" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="87d5b-167">検証する操作の説明。</span><span class="sxs-lookup"><span data-stu-id="87d5b-167">The operation description to validate.</span></span></param>
        <summary><span data-ttu-id="87d5b-168">検証動作を実装します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-168">Implements the validation behavior.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoComplete">
      <MemberSignature Language="C#" Value="public bool TransactionAutoComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoComplete : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87d5b-169">未処理の例外が発生しなかった場合は、現在のトランザクション スコープを自動的にコミットするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-169">Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.</span></span></summary>
        <value><span data-ttu-id="87d5b-170">操作の実行が正常に終了した時点でトランザクション スコープを自動的に完了する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="87d5b-170"><see langword="true" /> to complete the transaction scope automatically on successful execution of the operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="87d5b-171">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-171">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d5b-172">操作用のコードの中でトランザクションを直接完了または中止するには、<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> プロパティを `false` に設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-172">Set the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property to `false` to complete or abort transactions directly in the code for the operation.</span></span>  
  
 <span data-ttu-id="87d5b-173">処理済みの例外は、操作の途中で、トランザクションを自動的に中止せずにスローできます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-173">Handled exceptions can be thrown in the course of the operation without automatically aborting the transaction.</span></span> <span data-ttu-id="87d5b-174">未処理の例外だけが自動中止をトリガーします。</span><span class="sxs-lookup"><span data-stu-id="87d5b-174">Only unhandled exceptions trigger an automatic abort.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="87d5b-175">必須の分散トランザクション内で実行する操作のコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-175">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="87d5b-176"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> プロパティは、操作がトランザクション スコープの下で実行されることを示し、<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> プロパティは、未処理の例外が発生しなかった場合はトランザクション スコープが自動的にコミットされることを示します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-176">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically.</span></span> <span data-ttu-id="87d5b-177">未処理の例外が発生すると、トランザクションは中止されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-177">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionScopeRequired">
      <MemberSignature Language="C#" Value="public bool TransactionScopeRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionScopeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionScopeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionScopeRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionScopeRequired : bool with get, set" Usage="System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="87d5b-178">メソッドが、実行のためにトランザクション スコープを必要とするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-178">Gets or sets a value that indicates whether the method requires a transaction scope for its execution.</span></span></summary>
        <value><span data-ttu-id="87d5b-179">メソッドが実行のためにトランザクション スコープを必要とする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="87d5b-179"><see langword="true" /> if the method requires a transaction scope to execute; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="87d5b-180">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="87d5b-180">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87d5b-181">操作をトランザクション スコープの中で実行するように要求する場合は、<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> を `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-181">Set the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> to `true` to require your operation to execute within a transaction scope.</span></span> <span data-ttu-id="87d5b-182">フローされたトランザクションを使用できる場合、操作はそのトランザクションの中で実行されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-182">If a flowed transaction is available, the operation executes within that transaction.</span></span> <span data-ttu-id="87d5b-183">使用できるトランザクションがない場合は、新しいトランザクションが作成され、操作の実行で使用されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-183">If one is not available, a new transaction is created and used for the operation execution.</span></span> <span data-ttu-id="87d5b-184">フローされたトランザクションがサポートされるかどうかは、エンドポイントに指定されたバイディングが制御します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-184">The binding specified in the endpoint controls whether flowed transactions are supported.</span></span> <span data-ttu-id="87d5b-185">したがって、正しい動作を取得するには、トランザクション フローがバインドによって許可されているかどうかと <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> プロパティの相互関係を理解する必要があります。</span><span class="sxs-lookup"><span data-stu-id="87d5b-185">Therefore, to obtain the proper behavior you must understand the interaction between whether transaction flow is permitted by the binding and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property.</span></span> <span data-ttu-id="87d5b-186">次の表に、可能な動作を示します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-186">The following table shows the possible behavior.</span></span>  
  
|<span data-ttu-id="87d5b-187">TransactionScopeRequired</span><span class="sxs-lookup"><span data-stu-id="87d5b-187">TransactionScopeRequired</span></span>|<span data-ttu-id="87d5b-188">バインドがトランザクション フローを許可</span><span class="sxs-lookup"><span data-stu-id="87d5b-188">Binding permits transaction flow</span></span>|<span data-ttu-id="87d5b-189">呼び出し元がトランザクションをフロー</span><span class="sxs-lookup"><span data-stu-id="87d5b-189">Caller flows transaction</span></span>|<span data-ttu-id="87d5b-190">結果</span><span class="sxs-lookup"><span data-stu-id="87d5b-190">Result</span></span>|  
|-|-|-|-|  
|<span data-ttu-id="87d5b-191">False</span><span class="sxs-lookup"><span data-stu-id="87d5b-191">False</span></span>|<span data-ttu-id="87d5b-192">False</span><span class="sxs-lookup"><span data-stu-id="87d5b-192">False</span></span>|<span data-ttu-id="87d5b-193">いいえ</span><span class="sxs-lookup"><span data-stu-id="87d5b-193">No</span></span>|<span data-ttu-id="87d5b-194">メソッドは、トランザクションなしで実行されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-194">Method executes without a transaction.</span></span>|  
|<span data-ttu-id="87d5b-195">True</span><span class="sxs-lookup"><span data-stu-id="87d5b-195">True</span></span>|<span data-ttu-id="87d5b-196">False</span><span class="sxs-lookup"><span data-stu-id="87d5b-196">False</span></span>|<span data-ttu-id="87d5b-197">いいえ</span><span class="sxs-lookup"><span data-stu-id="87d5b-197">No</span></span>|<span data-ttu-id="87d5b-198">メソッドは新しいトランザクションを作成し、その中で実行されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-198">Method creates and executes within a new transaction.</span></span>|  
|<span data-ttu-id="87d5b-199">True または False</span><span class="sxs-lookup"><span data-stu-id="87d5b-199">True or False</span></span>|<span data-ttu-id="87d5b-200">False</span><span class="sxs-lookup"><span data-stu-id="87d5b-200">False</span></span>|<span data-ttu-id="87d5b-201">はい</span><span class="sxs-lookup"><span data-stu-id="87d5b-201">Yes</span></span>|<span data-ttu-id="87d5b-202">トランザクション ヘッダーについての SOAP エラーが返されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-202">A SOAP fault is returned for the transaction header.</span></span>|  
|<span data-ttu-id="87d5b-203">False</span><span class="sxs-lookup"><span data-stu-id="87d5b-203">False</span></span>|<span data-ttu-id="87d5b-204">True</span><span class="sxs-lookup"><span data-stu-id="87d5b-204">True</span></span>|<span data-ttu-id="87d5b-205">はい</span><span class="sxs-lookup"><span data-stu-id="87d5b-205">Yes</span></span>|<span data-ttu-id="87d5b-206">メソッドは、トランザクションなしで実行されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-206">Method executes without a transaction.</span></span>|  
|<span data-ttu-id="87d5b-207">True</span><span class="sxs-lookup"><span data-stu-id="87d5b-207">True</span></span>|<span data-ttu-id="87d5b-208">True</span><span class="sxs-lookup"><span data-stu-id="87d5b-208">True</span></span>|<span data-ttu-id="87d5b-209">はい</span><span class="sxs-lookup"><span data-stu-id="87d5b-209">Yes</span></span>|<span data-ttu-id="87d5b-210">メソッドは、フローされたトランザクションで実行されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-210">Method executes under the flowed transaction.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="87d5b-211">必須の分散トランザクション内で実行する操作のコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-211">The following code example shows an operation that executes within a mandatory distributed transaction.</span></span> <span data-ttu-id="87d5b-212"><xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> プロパティは、操作がトランザクション スコープの下で実行されることを示し、<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> プロパティは、未処理の例外が発生しなかった場合はトランザクション スコープが自動的にコミットされることを示します。</span><span class="sxs-lookup"><span data-stu-id="87d5b-212">The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically.</span></span> <span data-ttu-id="87d5b-213">未処理の例外が発生すると、トランザクションは中止されます。</span><span class="sxs-lookup"><span data-stu-id="87d5b-213">If an unhandled exception does occur, the transaction is aborted.</span></span>  
  
 [!code-csharp[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/csharp/VS_Snippets_CFX/operationbehaviorattribute_transaction/cs/services.cs#2)]
 [!code-vb[OperationBehaviorAttribute_Transaction#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationbehaviorattribute_transaction/vb/services.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
