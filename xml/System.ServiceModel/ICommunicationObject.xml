<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d85a452975482fe95fa191d9289d95271fa4774" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78740099" /></Metadata><TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <TypeSignature Language="F#" Value="type ICommunicationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ebc1b-101">システム内のチャネル、チャネル マネージャー、ファクトリ、リスナー、およびディスパッチャーを含むすべての通信指向オブジェクトとサービス ホストに対して使用する、基本ステート マシンのためのコントラクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-101">Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-102"><xref:System.ServiceModel.ICommunicationObject> インターフェイスは次を定義します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-102">The <xref:System.ServiceModel.ICommunicationObject> interface defines:</span></span>  
  
-   <span data-ttu-id="ebc1b-103">状態遷移を開始する open、close、および abort メソッドのセット:</span><span class="sxs-lookup"><span data-stu-id="ebc1b-103">A set of open, close and abort methods for initiating state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   <span data-ttu-id="ebc1b-104">open および close メソッドの非同期バージョン:</span><span class="sxs-lookup"><span data-stu-id="ebc1b-104">Asynchronous versions of the open and close methods:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   <span data-ttu-id="ebc1b-105">状態遷移の通知を提供するイベント セット:</span><span class="sxs-lookup"><span data-stu-id="ebc1b-105">A set of events that provide notifications of state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   <span data-ttu-id="ebc1b-106">オブジェクトの状態を検査するための共通の <xref:System.ServiceModel.ICommunicationObject.State%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="ebc1b-106">A common <xref:System.ServiceModel.ICommunicationObject.State%2A> property for inspecting the state of an object</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="iCommunicationObject.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebc1b-107">通信オブジェクトを、現在の状態から Closed 状態に直ちに遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-107">Causes a communication object to transition immediately from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-108">このメソッドは、戻る前に、終了していない作業を無視するか、または異常終了させるかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-108">This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</span></span> <span data-ttu-id="ebc1b-109"><xref:System.ServiceModel.ICommunicationObject.Abort%2A> メソッドは、<xref:System.ServiceModel.ICommunicationObject.Close%2A> 呼び出しの保留など、保留状態の操作のキャンセルに使用できます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-109">The <xref:System.ServiceModel.ICommunicationObject.Abort%2A> method can be used to cancel any outstanding operations, including outstanding calls to <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 <span data-ttu-id="ebc1b-110"><xref:System.ServiceModel.ICommunicationObject> を <xref:System.ServiceModel.CommunicationState.Opened> 状態から <xref:System.ServiceModel.CommunicationState.Closed> 状態の呼び出し <xref:System.ServiceModel.ICommunicationObject.Close%2A>に正常に移行するには</span><span class="sxs-lookup"><span data-stu-id="ebc1b-110">To gracefully transition an <xref:System.ServiceModel.ICommunicationObject> from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state call <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ebc1b-111">通信オブジェクトをクローズするための非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-111">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-112">このメソッドは、<xref:System.ServiceModel.ICommunicationObject> を <xref:System.ServiceModel.CommunicationState.Opened> 状態から <xref:System.ServiceModel.CommunicationState.Closed> 状態に正常に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-112">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span>  
  
 <span data-ttu-id="ebc1b-113">明示的なタイムアウトを持つバージョンと持たないバージョンが提供されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-113">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ebc1b-114">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-114">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="ebc1b-115">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-115">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="ebc1b-116">通信オブジェクトをクローズするための非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-116">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <returns><span data-ttu-id="ebc1b-117">非同期の close 操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-117">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-118">このメソッドは、<xref:System.ServiceModel.ICommunicationObject> を、<xref:System.ServiceModel.CommunicationState.Opened> 状態以外の任意の状態から <xref:System.ServiceModel.CommunicationState.Closed> 状態に正常に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-118">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="ebc1b-119"><xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> メソッドにより、戻る前に未完了の作業を完了できます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-119">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="ebc1b-120">たとえば、バッファー内のメッセージの送信を完了します)。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-120">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="ebc1b-121"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> が、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態のオブジェクトで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-121"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-122"><see cref="T:System.ServiceModel.ICommunicationObject" /> を正常にクローズする前に、既定のタイムアウトが経過しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-122">The default timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ebc1b-123">送信操作を完了する必要がある、タイムアウトまでの制限時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-123">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="ebc1b-124">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-124">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span></span></param>
        <param name="state"><span data-ttu-id="ebc1b-125">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-125">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span></span></param>
        <summary><span data-ttu-id="ebc1b-126">タイムアウトを指定して、通信オブジェクトをクローズするための非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-126">Begins an asynchronous operation to close a communication object with a specified timeout.</span></span></summary>
        <returns><span data-ttu-id="ebc1b-127">非同期の close 操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-127">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-128">このメソッドにより、<xref:System.ServiceModel.ICommunicationObject> は、<xref:System.ServiceModel.CommunicationState.Opened> 状態以外の任意の状態から、指定した時間内に <xref:System.ServiceModel.CommunicationState.Closed> 状態に正常に遷移します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-128">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state with in a specified interval of time.</span></span> <span data-ttu-id="ebc1b-129"><xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> メソッドにより、戻る前に未完了の作業を完了できます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-129">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="ebc1b-130">たとえば、バッファー内のメッセージの送信を完了します)。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-130">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="ebc1b-131"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> が、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態のオブジェクトで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-131"><see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-132"><see cref="T:System.ServiceModel.ICommunicationObject" /> を正常にクローズする前に、指定したタイムアウトが経過しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-132">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ebc1b-133">通信オブジェクトをクローズするための非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-133">Begins an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-134"><xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> メソッドは、<xref:System.ServiceModel.CommunicationState.Opened> 状態への遷移が完了するか失敗するまで、<xref:System.ServiceModel.ICommunicationObject> を <xref:System.ServiceModel.CommunicationState.Opening> 状態に移行させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-134">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until its transition to the <xref:System.ServiceModel.CommunicationState.Opened> state is completed or fails.</span></span>  
  
 <span data-ttu-id="ebc1b-135">明示的なタイムアウトを持つバージョンと持たないバージョンが提供されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-135">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="ebc1b-136">非同期の open 操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-136">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span></span></param>
        <param name="state"><span data-ttu-id="ebc1b-137">非同期のオープン操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-137">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="ebc1b-138">通信オブジェクトを開くための非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-138">Begins an asynchronous operation to open a communication object.</span></span></summary>
        <returns><span data-ttu-id="ebc1b-139">非同期の open 操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-139">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-140"><xref:System.ServiceModel.ICommunicationObject> がインスタンス化されると、<xref:System.ServiceModel.CommunicationState.Created> の状態から開始されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-140">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="ebc1b-141"><xref:System.ServiceModel.CommunicationState.Created> 状態の場合、オブジェクトを構成する (プロパティの設定やイベントの登録など) ことはできますが、メッセージの送受信にはまだ使用できません。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-141">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="ebc1b-142"><xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> メソッドを実行すると、<xref:System.ServiceModel.ICommunicationObject> は <xref:System.ServiceModel.CommunicationState.Opening> 状態に入ります。これにより、オープン操作が成功するまで、開いている操作がタイムアウトになるか失敗し、オブジェクトがエラーになるか、または <xref:System.ServiceModel.ICommunicationObject> が中止されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-142">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="ebc1b-143"><xref:System.ServiceModel.CommunicationState.Opened> 状態では、<xref:System.ServiceModel.ICommunicationObject> を使用できます (たとえば、メッセージを受信できます) が、構成できなくなりました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-143">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="ebc1b-144"><see cref="T:System.ServiceModel.ICommunicationObject" /> が開きません。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-144">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-145"><see cref="T:System.ServiceModel.ICommunicationObject" /> が <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態に入る前に既定の open タイムアウトが経過しました。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-145">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ebc1b-146">送信操作を完了する必要がある、タイムアウトまでの制限時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-146">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="ebc1b-147">非同期の open 操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-147">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span></span></param>
        <param name="state"><span data-ttu-id="ebc1b-148">非同期のオープン操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-148">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span></span></param>
        <summary><span data-ttu-id="ebc1b-149">指定した時間内で通信オブジェクトを開くための非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-149">Begins an asynchronous operation to open a communication object within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="ebc1b-150">非同期の open 操作を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-150">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-151"><xref:System.ServiceModel.ICommunicationObject> がインスタンス化されると、<xref:System.ServiceModel.CommunicationState.Created> の状態から開始されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-151">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="ebc1b-152"><xref:System.ServiceModel.CommunicationState.Created> 状態の場合、オブジェクトを構成する (プロパティの設定やイベントの登録など) ことはできますが、メッセージの送受信にはまだ使用できません。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-152">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="ebc1b-153"><xref:System.ServiceModel.ICommunicationObject.Open%2A> メソッドを実行すると、<xref:System.ServiceModel.ICommunicationObject> は <xref:System.ServiceModel.CommunicationState.Opening> 状態に入ります。これにより、オープン操作が成功するまで、開いている操作がタイムアウトになるか失敗し、オブジェクトがエラーになるか、または <xref:System.ServiceModel.ICommunicationObject> が中止されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-153">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="ebc1b-154"><xref:System.ServiceModel.CommunicationState.Opened> 状態では、<xref:System.ServiceModel.ICommunicationObject> を使用できます (たとえば、メッセージを受信できます) が、構成できなくなりました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-154">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="ebc1b-155"><see cref="T:System.ServiceModel.ICommunicationObject" /> が開きません。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-155">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-156"><see cref="T:System.ServiceModel.ICommunicationObject" /> が <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態に入る前に指定したタイムアウトが経過しました。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-156">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ebc1b-157">指定された <paramref name="timeout" /> を超えた場合、操作は <see cref="T:System.TimeoutException" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-157">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ebc1b-158">通信オブジェクトを、現在の状態から Closed 状態に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-158">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iCommunicationObject.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebc1b-159">通信オブジェクトを、現在の状態から Closed 状態に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-159">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-160">このメソッドは、<xref:System.ServiceModel.ICommunicationObject> を <xref:System.ServiceModel.CommunicationState.Opened> 状態から <xref:System.ServiceModel.CommunicationState.Closed> 状態に正常に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-160">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="ebc1b-161"><xref:System.ServiceModel.ICommunicationObject.Close%2A> メソッドにより、戻る前に未完了の作業を完了できます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-161">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="ebc1b-162">たとえば、バッファー内のメッセージの送信を完了します)。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-162">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="ebc1b-163"><xref:System.ServiceModel.ICommunicationObject> は <xref:System.ServiceModel.CommunicationState.Closing> 状態になり、<xref:System.ServiceModel.CommunicationState.Closed> 状態への遷移が完了するまでそのまま残ります。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-163">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="ebc1b-164"><xref:System.ServiceModel.CommunicationState.Closed> の状態に達すると <xref:System.ServiceModel.ICommunicationObject.Close%2A> が返されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-164"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="ebc1b-165"><xref:System.ServiceModel.ICommunicationObject> が正常に終了する前に既定のクローズタイムアウトが経過した場合、<xref:System.ServiceModel.ICommunicationObject> は中止されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-165">If the default close timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to close gracefully, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="ebc1b-166"><xref:System.ServiceModel.CommunicationState.Created>、<xref:System.ServiceModel.CommunicationState.Opening>、または <xref:System.ServiceModel.CommunicationState.Faulted> 状態の <xref:System.ServiceModel.ICommunicationObject> に対して <xref:System.ServiceModel.ICommunicationObject.Close%2A> が呼び出されると、<xref:System.ServiceModel.ICommunicationObject> は中止されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-166">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span> <span data-ttu-id="ebc1b-167"><xref:System.ServiceModel.CommunicationState.Closing> または <xref:System.ServiceModel.CommunicationState.Closed> 状態の <xref:System.ServiceModel.ICommunicationObject> に対して <xref:System.ServiceModel.ICommunicationObject.Close%2A> が呼び出されると、その呼び出しはすぐに返されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-167">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="ebc1b-168">また、<xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> を呼び出し、<xref:System.ServiceModel.ICommunicationObject.Close%2A>を呼び出すことによって開始される close メソッドの非同期バージョンもあります。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-168">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="ebc1b-169"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> が、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態のオブジェクトで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-169"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-170"><see cref="T:System.ServiceModel.ICommunicationObject" /> を正常にクローズする前に、既定の close タイムアウトが経過しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-170">The default close timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="iCommunicationObject.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ebc1b-171">送信操作を完了する必要がある、タイムアウトまでの制限時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-171">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="ebc1b-172">通信オブジェクトを、現在の状態から Closed 状態に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-172">Causes a communication object to transition from its current state into the closed state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-173">このメソッドは、指定した時間内に、<xref:System.ServiceModel.ICommunicationObject> を <xref:System.ServiceModel.CommunicationState.Opened> 状態から <xref:System.ServiceModel.CommunicationState.Closed> 状態に正常に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-173">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state within a specified interval of time.</span></span> <span data-ttu-id="ebc1b-174"><xref:System.ServiceModel.ICommunicationObject.Close%2A> メソッドにより、戻る前に未完了の作業を完了できます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-174">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="ebc1b-175">たとえば、バッファー内のメッセージの送信を完了します)。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-175">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="ebc1b-176"><xref:System.ServiceModel.ICommunicationObject> は <xref:System.ServiceModel.CommunicationState.Closing> 状態になり、<xref:System.ServiceModel.CommunicationState.Closed> 状態への遷移が完了するまでそのまま残ります。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-176">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="ebc1b-177"><xref:System.ServiceModel.CommunicationState.Closed> の状態に達すると <xref:System.ServiceModel.ICommunicationObject.Close%2A> が返されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-177"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="ebc1b-178"><xref:System.ServiceModel.ICommunicationObject> が正常に終了する前にタイムアウトが経過した場合、<xref:System.ServiceModel.ICommunicationObject> は中止されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-178">If the timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to gracefully close, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="ebc1b-179"><xref:System.ServiceModel.CommunicationState.Created>、<xref:System.ServiceModel.CommunicationState.Opening>、または <xref:System.ServiceModel.CommunicationState.Faulted> 状態の <xref:System.ServiceModel.ICommunicationObject> に対して <xref:System.ServiceModel.ICommunicationObject.Close%2A> が呼び出されると、<xref:System.ServiceModel.ICommunicationObject> は中止されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-179">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  <span data-ttu-id="ebc1b-180"><xref:System.ServiceModel.CommunicationState.Closing> または <xref:System.ServiceModel.CommunicationState.Closed> 状態の <xref:System.ServiceModel.ICommunicationObject> に対して <xref:System.ServiceModel.ICommunicationObject.Close%2A> が呼び出されると、その呼び出しはすぐに返されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-180">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="ebc1b-181">また、<xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> を呼び出し、<xref:System.ServiceModel.ICommunicationObject.Close%2A>を呼び出すことによって開始される close メソッドの非同期バージョンもあります。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-181">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="ebc1b-182"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> が、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態のオブジェクトで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-182"><see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-183"><see cref="T:System.ServiceModel.ICommunicationObject" /> を正常にクローズする前に、タイムアウトが経過しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-183">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ebc1b-184">指定された <paramref name="timeout" /> を超えた場合、操作は <see cref="T:System.TimeoutException" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-184">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebc1b-185">通信オブジェクトが、Closing 状態から Closed 状態への通信状態の遷移を完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-185">Occurs when the communication object completes its transition from the closing state into the closed state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : EventHandler " Usage="member this.Closing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebc1b-186">通信オブジェクトが初めて Closing 状態に遷移するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-186">Occurs when the communication object first enters the closing state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-187">このイベントは、<xref:System.ServiceModel.ICommunicationObject.Close%2A> または <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> メソッドが呼び出された直後に、通信オブジェクトが最初に <xref:System.ServiceModel.CommunicationState.Opened> 状態から <xref:System.ServiceModel.CommunicationState.Closed> 状態への遷移を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-187">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Opened> state into the <xref:System.ServiceModel.CommunicationState.Closed> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Close%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndClose : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ebc1b-188"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-188">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> method.</span></span></param>
        <summary><span data-ttu-id="ebc1b-189">通信オブジェクトをクローズするための非同期操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-189">Completes an asynchronous operation to close a communication object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException"><span data-ttu-id="ebc1b-190"><see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> が、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態のオブジェクトで呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-190"><see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-191"><see cref="T:System.ServiceModel.ICommunicationObject" /> を正常にクローズする前に、タイムアウトが経過しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-191">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOpen : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="ebc1b-192"><see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-192">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> method.</span></span></param>
        <summary><span data-ttu-id="ebc1b-193">通信オブジェクトを開くための非同期操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-193">Completes an asynchronous operation to open a communication object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="ebc1b-194"><see cref="T:System.ServiceModel.ICommunicationObject" /> が開きません。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-194">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-195"><see cref="T:System.ServiceModel.ICommunicationObject" /> が <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態に入る前にタイムアウトが経過しました。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-195">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberSignature Language="F#" Value="member this.Faulted : EventHandler " Usage="member this.Faulted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebc1b-196">通信オブジェクトが初めて Faulted 状態に遷移するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-196">Occurs when the communication object first enters the faulted state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ebc1b-197">通信オブジェクトを、Created 状態から Opened 状態に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-197">Causes a communication object to transition from the created state into the opened state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-198">明示的なタイムアウトを持つバージョンと持たないバージョンが提供されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-198">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="iCommunicationObject.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebc1b-199">通信オブジェクトを、Created 状態から Opened 状態に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-199">Causes a communication object to transition from the created state into the opened state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-200"><xref:System.ServiceModel.ICommunicationObject> がインスタンス化されると、<xref:System.ServiceModel.CommunicationState.Created> の状態から開始されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-200">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="ebc1b-201"><xref:System.ServiceModel.CommunicationState.Created> 状態の場合、オブジェクトを構成する (プロパティの設定やイベントの登録など) ことはできますが、メッセージの送受信にはまだ使用できません。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-201">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="ebc1b-202"><xref:System.ServiceModel.ICommunicationObject.Open%2A> メソッドを実行すると、<xref:System.ServiceModel.ICommunicationObject> は <xref:System.ServiceModel.CommunicationState.Opening> 状態に入ります。これにより、オープン操作が成功するまで、開いている操作がタイムアウトになるか失敗し、オブジェクトがエラーになるか、または <xref:System.ServiceModel.ICommunicationObject> が中止されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-202">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="ebc1b-203"><xref:System.ServiceModel.CommunicationState.Opened> 状態では、<xref:System.ServiceModel.ICommunicationObject> を使用できます (たとえば、メッセージを受信できます) が、構成できなくなりました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-203">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="ebc1b-204">また、非同期バージョンの open メソッドがあります。これは、<xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> の呼び出しで開始され、<xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> の呼び出しで完了します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-204">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="ebc1b-205"><see cref="T:System.ServiceModel.ICommunicationObject" /> が開きません。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-205">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-206"><see cref="T:System.ServiceModel.ICommunicationObject" /> が <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態に入る前に既定の open タイムアウトが経過しました。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-206">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Open : TimeSpan -&gt; unit" Usage="iCommunicationObject.Open timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="ebc1b-207">送信操作を完了する必要がある、タイムアウトまでの制限時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-207">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="ebc1b-208">指定した時間内で、通信オブジェクトを Created 状態から Opened 状態に遷移させます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-208">Causes a communication object to transition from the created state into the opened state within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-209"><xref:System.ServiceModel.ICommunicationObject> がインスタンス化されると、<xref:System.ServiceModel.CommunicationState.Created> の状態から開始されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-209">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="ebc1b-210"><xref:System.ServiceModel.CommunicationState.Created> 状態の場合、オブジェクトを構成する (プロパティの設定やイベントの登録など) ことはできますが、メッセージの送受信にはまだ使用できません。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-210">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="ebc1b-211"><xref:System.ServiceModel.ICommunicationObject.Open%2A> メソッドを実行すると、<xref:System.ServiceModel.ICommunicationObject> は <xref:System.ServiceModel.CommunicationState.Opening> 状態に入ります。これにより、オープン操作が成功するまで、開いている操作がタイムアウトになるか失敗し、オブジェクトがエラーになるか、または <xref:System.ServiceModel.ICommunicationObject> が中止されます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-211">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="ebc1b-212"><xref:System.ServiceModel.CommunicationState.Opened> 状態では、<xref:System.ServiceModel.ICommunicationObject> を使用できます (たとえば、メッセージを受信できます) が、構成できなくなりました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-212">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="ebc1b-213">また、非同期バージョンの open メソッドがあります。これは、<xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> の呼び出しで開始され、<xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29> の呼び出しで完了します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-213">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException"><span data-ttu-id="ebc1b-214"><see cref="T:System.ServiceModel.ICommunicationObject" /> が開きません。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-214">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="ebc1b-215"><see cref="T:System.ServiceModel.ICommunicationObject" /> が <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態に入る前に指定したタイムアウトが経過しました。<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態に遷移しました。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-215">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ebc1b-216">指定された <paramref name="timeout" /> を超えた場合、操作は <see cref="T:System.TimeoutException" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-216">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebc1b-217">通信オブジェクトが、Opening 状態から Opened 状態への通信状態の遷移を完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-217">Occurs when the communication object completes its transition from the opening state into the opened state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberSignature Language="F#" Value="member this.Opening : EventHandler " Usage="member this.Opening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebc1b-218">通信オブジェクトが初めて Opening 状態に遷移するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-218">Occurs when the communication object first enters the opening state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-219">このイベントは、<xref:System.ServiceModel.ICommunicationObject.Open%2A> または <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> メソッドが呼び出された直後に、通信オブジェクトが最初に <xref:System.ServiceModel.CommunicationState.Created> 状態から <xref:System.ServiceModel.CommunicationState.Opened> 状態への遷移を開始するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-219">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Created> state into the <xref:System.ServiceModel.CommunicationState.Opened> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.ServiceModel.CommunicationState" Usage="System.ServiceModel.ICommunicationObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebc1b-220">通信指向オブジェクトの現在の状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-220">Gets the current state of the communication-oriented object.</span></span></summary>
        <value><span data-ttu-id="ebc1b-221">オブジェクトの <see cref="T:System.ServiceModel.CommunicationState" /> の値。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-221">The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebc1b-222"><xref:System.ServiceModel.ICommunicationObject> で使用できる主な通信状態は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-222">The main communication states available to an <xref:System.ServiceModel.ICommunicationObject> are:</span></span>  
  
-   <span data-ttu-id="ebc1b-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span><span class="sxs-lookup"><span data-stu-id="ebc1b-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 <span data-ttu-id="ebc1b-224">さらに、そのようなオブジェクトは、上に挙げた最初の 3 つのメイン状態の間を遷移するときに、次の遷移状態を取ることができます。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-224">There are also transitory states that such an object can occupy when transitioning between the first three main states:</span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 <span data-ttu-id="ebc1b-225">この <xref:System.ServiceModel.CommunicationState> は、チャネル、リスナー、チャネルとリスナーのファクトリ、および <xref:System.ServiceModel.ServiceHost> クラスを含む、システム内のすべての通信指向オブジェクトに対して有効な状態を定義します。</span><span class="sxs-lookup"><span data-stu-id="ebc1b-225">This <xref:System.ServiceModel.CommunicationState> defines the states that are valid for all communication-oriented objects in the system, including channels, listeners, the channel and listener factories, and the <xref:System.ServiceModel.ServiceHost> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
