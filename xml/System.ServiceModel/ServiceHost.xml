<Type Name="ServiceHost" FullName="System.ServiceModel.ServiceHost">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04f76fc37757c93c7888cb66fa3475ae48623e69" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78787369" /></Metadata><TypeSignature Language="C#" Value="public class ServiceHost : System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceHost extends System.ServiceModel.ServiceHostBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceHost&#xA;Inherits ServiceHostBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceHost : System::ServiceModel::ServiceHostBase" />
  <TypeSignature Language="F#" Value="type ServiceHost = class&#xA;    inherit ServiceHostBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHostBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1f1e4-101">サービスのホストを提供します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-101">Provides a host for services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-102">Windows Communication Foundation (WCF) サービスモデルプログラミングモデルによって使用されるホストを実装します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-102">Implements the host used by the Windows Communication Foundation (WCF) service model programming model.</span></span>  
  
 <span data-ttu-id="1f1e4-103">インターネットインフォメーションサービス (IIS) または Windows アクティブ化サービス (WAS) を使用してサービスを公開していない場合に、クライアントアプリケーションが使用するサービスを構成および公開するには、<xref:System.ServiceModel.ServiceHost> クラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-103">Use the <xref:System.ServiceModel.ServiceHost> class to configure and expose a service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.</span></span> <span data-ttu-id="1f1e4-104">IIS と WAS はどちらも <xref:System.ServiceModel.ServiceHost> オブジェクトと自動的に対話します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-104">Both IIS and WAS interact with a <xref:System.ServiceModel.ServiceHost> object on your behalf.</span></span>  
  
 <span data-ttu-id="1f1e4-105">呼び出し元が使用するサービスを公開するには、WCF で完全なサービスの説明 (<xref:System.ServiceModel.Description.ServiceDescription> クラスによって表される) が必要です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-105">To expose a service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class).</span></span> <span data-ttu-id="1f1e4-106"><xref:System.ServiceModel.ServiceHost> クラスは、サービスの種類と構成情報から <xref:System.ServiceModel.Description.ServiceDescription> を作成し、その説明を使用して、説明の各エンドポイントに対して <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-106">The <xref:System.ServiceModel.ServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.</span></span>  
  
 <span data-ttu-id="1f1e4-107"><xref:System.ServiceModel.ServiceHost> オブジェクトを使用して、サービスの読み込み、エンドポイントの構成、セキュリティ設定の適用、および受信要求を処理するためのリスナーの開始を行います。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-107">Use a <xref:System.ServiceModel.ServiceHost> object to load a service, configure endpoints, apply security settings, and start listeners to handle incoming requests.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_SelfHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_selfhost/cs/wholeenchilada.cs#1)]
 [!code-vb[S_SelfHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_selfhost/vb/wholeenchilada.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f1e4-108"><see cref="T:System.ServiceModel.ServiceHost" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-108">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f1e4-109"><see cref="T:System.ServiceModel.ServiceHost" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-109">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-110"><xref:System.ServiceModel.ServiceHost> クラスのインスタンスを作成するには、2つのコンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-110">There are two constructors used to create an instance of the <xref:System.ServiceModel.ServiceHost> class.</span></span> <span data-ttu-id="1f1e4-111">サービスの種類を入力パラメーターとして受け取る <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> コンストラクターを使用します (ほとんどの場合)。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-111">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Type%2CSystem.Uri%5B%5D%29> constructor which takes the service type as an input parameter, most of the time.</span></span> <span data-ttu-id="1f1e4-112">ホストは、これを使用して、必要に応じて新しいサービスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-112">The host can use this to create new services as needed.</span></span> <span data-ttu-id="1f1e4-113">サービスホストでサービスの特定のシングルトンインスタンスを使用する場合にのみ、<xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-113">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceHost : obj * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="new System.ServiceModel.ServiceHost (singletonInstance, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance"><span data-ttu-id="1f1e4-114">ホストされたサービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-114">The instance of the hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="1f1e4-115">ホストされるサービスのベース アドレスを格納する <see cref="T:System.Array" /> 型の <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-115">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="1f1e4-116">指定したサービスのインスタンスと、そのベース アドレスを使用して、<see cref="T:System.ServiceModel.ServiceHost" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-116">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the instance of the service and its base addresses specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-117">このコンストラクターは、シングルトンサービスで使用する特定のオブジェクトインスタンスを提供する場合に、カスタム <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> を実装する代わりに使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-117">Use this constructor as an alternative to implementing a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType> when you want to provide a specific object instance for use by a singleton service.</span></span> <span data-ttu-id="1f1e4-118">サービスを実装する型を作成することが困難な場合 (たとえば、パラメーターを持たない既定のパブリック コンストラクターを実装しない場合) は、このオーバーロードを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-118">You may want to use this overload when your service implementation type is difficult to construct (for example, if it does not implement a default public constructor that has no parameters).</span></span>  
  
 <span data-ttu-id="1f1e4-119">このオーバーロードにオブジェクトが指定されている場合は、Windows Communication Foundation (WCF) のインスタンス化動作に関連する一部の機能が異なる動作をすることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-119">Note that when an object is provided to this overload, some features related to the Windows Communication Foundation (WCF) instancing behavior work differently.</span></span> <span data-ttu-id="1f1e4-120">たとえば、既知のオブジェクトインスタンスがこのコンストラクターのオーバーロードを使用して提供されている場合、<xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> を呼び出すと、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-120">For example, calling <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A?displayProperty=nameWithType> have no effect when a well-known object instance is provided using this constructor overload.</span></span> <span data-ttu-id="1f1e4-121">他のインスタンス解放機構も、同様に無視されます。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-121">Similarly, any other instance release mechanism is ignored.</span></span> <span data-ttu-id="1f1e4-122"><xref:System.ServiceModel.ServiceHost> は常に、すべての操作について <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> プロパティが <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType> に設定されているかのように動作します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-122">The <xref:System.ServiceModel.ServiceHost> always behaves as if the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A?displayProperty=nameWithType> property is set to <xref:System.ServiceModel.ReleaseInstanceMode.None?displayProperty=nameWithType> for all operations.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost2#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost2/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost2#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost2/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f1e4-123"><paramref name="singletonInstance" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-123"><paramref name="singletonInstance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceHost : Type * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="new System.ServiceModel.ServiceHost (serviceType, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="1f1e4-124">ホストされるサービスの型。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-124">The type of hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="1f1e4-125">ホストされるサービスのベース アドレスを格納する <see cref="T:System.Uri" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-125">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="1f1e4-126">指定したサービスの種類と、そのベース アドレスを使用して、<see cref="T:System.ServiceModel.ServiceHost" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-126">Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the type of service and its base addresses specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-127">このコンストラクターは、サービスの種類があり、必要に応じて新しいインスタンスを作成できる場合に使用します。これは、シングルトン インスタンスが必要な場合でも使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-127">Use this constructor when you have the service type and you can create new instances of it when needed, even when you need a singleton instance.</span></span> <span data-ttu-id="1f1e4-128">サービスホストでサービスの特定のシングルトンインスタンスを使用する場合にのみ、<xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-128">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor instead only when you want the service host to use a specific singleton instance of the service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f1e4-129">このサンプルでは、<xref:System.ServiceModel.ServiceHost> クラスを使用して Windows Communication Foundation サービスをホストする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-129">This sample illustrates how to use the <xref:System.ServiceModel.ServiceHost> class to host a Windows Communication Foundation service:</span></span>  
  
 [!code-csharp[S_UEServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#1)]
 [!code-vb[S_UEServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f1e4-130"><paramref name="serviceType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-130"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddServiceEndpoint">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f1e4-131">ホストされるサービスにサービス エンドポイントを追加します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-131">Adds a service endpoint to the hosted service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddServiceEndpoint (implementedContract As Type, binding As Binding, address As String) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="1f1e4-132">追加されたエンドポイントのコントラクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-132">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="1f1e4-133">追加されたエンドポイントの <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-133">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="1f1e4-134">追加されるエンドポイントのアドレス。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-134">The address for the endpoint added.</span></span></param>
        <summary><span data-ttu-id="1f1e4-135">指定されたコントラクト、バインディング、およびエンドポイント アドレスを持つホストされるサービスに、サービス エンドポイントを追加します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-135">Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</span></span></summary>
        <returns><span data-ttu-id="1f1e4-136">ホストされるサービスに追加された <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-136">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#3)]
 [!code-vb[S_UEServiceHost#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f1e4-137"><paramref name="implementedContract" />、<paramref name="binding" />、または <paramref name="address" /> は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-137"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddServiceEndpoint (implementedContract As Type, binding As Binding, address As Uri) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHost.AddServiceEndpoint (implementedContract, binding, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="1f1e4-138">追加されたエンドポイントのコントラクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-138">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="1f1e4-139">追加されたエンドポイントの <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-139">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="1f1e4-140">追加されたエンドポイントのアドレスを格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-140">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span></span></param>
        <summary><span data-ttu-id="1f1e4-141">指定したコントラクト、バインディング、およびエンドポイント アドレスを含む URI を使用して、ホストされるサービスにサービス エンドポイントを追加します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-141">Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</span></span></summary>
        <returns><span data-ttu-id="1f1e4-142">ホストされるサービスに追加された <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-142">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEServiceHost#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#4)]
 [!code-vb[S_UEServiceHost#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f1e4-143"><paramref name="implementedContract" />、<paramref name="binding" />、または <paramref name="address" /> は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-143"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, string address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddServiceEndpoint (implementedContract As Type, binding As Binding, address As String, listenUri As Uri) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, System::String ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * string * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="1f1e4-144">追加されたエンドポイントのコントラクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-144">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="1f1e4-145">追加されたエンドポイントの <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-145">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="1f1e4-146">サービスのエンドポイント アドレス。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-146">The endpoint address for the service.</span></span></param>
        <param name="listenUri"><span data-ttu-id="1f1e4-147">サービス エンドポイントがリッスンできる <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-147">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span></span></param>
        <summary><span data-ttu-id="1f1e4-148">指定したコントラクト、バインディング、エンドポイント アドレス、およびサービスがリッスンする URI を使用して、ホストされるサービスにサービス エンドポイントを追加します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-148">Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</span></span></summary>
        <returns><span data-ttu-id="1f1e4-149">ホストされるサービスに追加された <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-149">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-150">指定したものと同じ URI でリッスンする必要がある複数のエンドポイントがある場合は、メソッドのこのバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-150">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#5)]
 [!code-vb[S_UEServiceHost#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f1e4-151"><paramref name="implementedContract" />、<paramref name="binding" />、または <paramref name="address" /> は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-151"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddServiceEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint(class System.Type implementedContract, class System.ServiceModel.Channels.Binding binding, class System.Uri address, class System.Uri listenUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddServiceEndpoint (implementedContract As Type, binding As Binding, address As Uri, listenUri As Uri) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ AddServiceEndpoint(Type ^ implementedContract, System::ServiceModel::Channels::Binding ^ binding, Uri ^ address, Uri ^ listenUri);" />
      <MemberSignature Language="F#" Value="override this.AddServiceEndpoint : Type * System.ServiceModel.Channels.Binding * Uri * Uri -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="serviceHost.AddServiceEndpoint (implementedContract, binding, address, listenUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContract" Type="System.Type" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="listenUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="implementedContract"><span data-ttu-id="1f1e4-152">追加されたエンドポイントのコントラクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-152">The <see cref="T:System.Type" /> of contract for the endpoint added.</span></span></param>
        <param name="binding"><span data-ttu-id="1f1e4-153">追加されたエンドポイントの <see cref="T:System.ServiceModel.Channels.Binding" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-153">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</span></span></param>
        <param name="address"><span data-ttu-id="1f1e4-154">追加されたエンドポイントのアドレスを格納する <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-154">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</span></span></param>
        <param name="listenUri"><span data-ttu-id="1f1e4-155">サービス エンドポイントがリッスンできる <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-155">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</span></span></param>
        <summary><span data-ttu-id="1f1e4-156">指定したコントラクト、バインド、エンドポイント アドレスを含む URI、およびサービスがリッスンする URI を使用して、ホストされるサービスにサービス エンドポイントを追加します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-156">Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</span></span></summary>
        <returns><span data-ttu-id="1f1e4-157">ホストされるサービスに追加された <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-157">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-158">指定したものと同じ URI でリッスンする必要がある複数のエンドポイントがある場合は、メソッドのこのバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-158">Use this version of the method when you have multiple endpoints that need to listen on the same, specified URI.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEServiceHost#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicehost/cs/service.cs#6)]
 [!code-vb[S_UEServiceHost#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueservicehost/vb/service.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f1e4-159"><paramref name="implementedContract" />、<paramref name="binding" />、または <paramref name="address" /> は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-159"><paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f1e4-160">コントラクトが初期化されていません。またはコントラクト キーが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-160">The contracts are not initialized or the contract keys cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void ApplyConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ApplyConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyConfiguration();" />
      <MemberSignature Language="F#" Value="override this.ApplyConfiguration : unit -&gt; unit" Usage="serviceHost.ApplyConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f1e4-161">サービス記述を構成ファイルから読み込み、構築中のランタイムにそれを適用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-161">Loads the service description from the configuration file and applies it to the runtime being constructed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDescription">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary&lt;string,System.ServiceModel.Description.ContractDescription&gt; implementedContracts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Description.ServiceDescription CreateDescription([out] class System.Collections.Generic.IDictionary`2&lt;string, class System.ServiceModel.Description.ContractDescription&gt;&amp; implementedContracts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDescription (ByRef implementedContracts As IDictionary(Of String, ContractDescription)) As ServiceDescription" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Description::ServiceDescription ^ CreateDescription([Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ % implementedContracts);" />
      <MemberSignature Language="F#" Value="override this.CreateDescription : IDictionary -&gt; System.ServiceModel.Description.ServiceDescription" Usage="serviceHost.CreateDescription implementedContracts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementedContracts" Type="System.Collections.Generic.IDictionary&lt;System.String,System.ServiceModel.Description.ContractDescription&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="implementedContracts"><span data-ttu-id="1f1e4-162">実装されているホストされるサービスのキー付きコントラクトを含む型 (<see cref="T:System.Collections.Generic.IDictionary`2" /><see cref="T:System.String" />) のキー ペアを持つ<see cref="T:System.ServiceModel.Description.ContractDescription" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-162">The <see cref="T:System.Collections.Generic.IDictionary`2" /> with key pairs of type (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />) that contains the keyed-contracts of the hosted service that have been implemented.</span></span></param>
        <summary><span data-ttu-id="1f1e4-163">ホストされるサービスの説明を作成します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-163">Creates a description of the service hosted.</span></span></summary>
        <returns><span data-ttu-id="1f1e4-164">ホストされるサービスの <see cref="T:System.ServiceModel.Description.ServiceDescription" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-164">A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the hosted service.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-165">このメソッドは、カスタマイズしたプログラミング モデルからコントラクトの説明を作成するために使用します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-165">This method is used to construct contract descriptions from customized programming models.</span></span> <span data-ttu-id="1f1e4-166">対応する基底クラスのメソッドをオーバーライドして、カスタマイズされたモデルを実装 <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>ます。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-166">Override the corresponding base class method, <xref:System.ServiceModel.ServiceHostBase.CreateDescription%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.ServiceModel.Description.ContractDescription%7D%40%29>, to implement the customized model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1f1e4-167">ホストされるサービスの種類が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-167">The type of service hosted is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InitializeDescription">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f1e4-168">種類またはインスタンスに基づいて、ホストされるサービスの説明を初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-168">Initializes a description of the service hosted based on its type or instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-169">このメソッドは、<xref:System.ServiceModel.ServiceHost.%23ctor%2A>の一部としてベースアドレスを渡す要件を削除します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-169">This method removes the requirement for passing base addresses as part of <xref:System.ServiceModel.ServiceHost.%23ctor%2A>.</span></span> <span data-ttu-id="1f1e4-170"><xref:System.ServiceModel.ServiceHost> から継承するクラスは <xref:System.ServiceModel.ServiceHost.%23ctor%2A> を呼び出し、ベースアドレスが使用可能な場合に <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> のいずれかを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-170">Classes that inherit from <xref:System.ServiceModel.ServiceHost> can call <xref:System.ServiceModel.ServiceHost.%23ctor%2A> and then can call one of the <xref:System.ServiceModel.ServiceHost.InitializeDescription%2A> when a base address is available.</span></span> <span data-ttu-id="1f1e4-171">これが、サービス モデル メタデータ ユーティリティ ツール (Svcutil.exe) が実装される方法です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-171">This is how the Service Model Metadata Utility Tool (Svcutil.exe) is implemented.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (object singletonInstance, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(object singletonInstance, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (singletonInstance As Object, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(System::Object ^ singletonInstance, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.InitializeDescription : obj * System.ServiceModel.UriSchemeKeyedCollection -&gt; unit" Usage="serviceHost.InitializeDescription (singletonInstance, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="singletonInstance"><span data-ttu-id="1f1e4-172">ホストされたサービスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-172">The instance of the hosted service.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="1f1e4-173">ホストされるサービスのベース アドレスを格納している <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-173">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="1f1e4-174">インスタンスと、指定したベース アドレスに基づいて、ホストされるサービスの説明を初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-174">Initializes a description of the service hosted based on its instance and specified base addresses.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f1e4-175"><paramref name="singletonInstance" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-175"><paramref name="singletonInstance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeDescription">
      <MemberSignature Language="C#" Value="protected void InitializeDescription (Type serviceType, System.ServiceModel.UriSchemeKeyedCollection baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InitializeDescription(class System.Type serviceType, class System.ServiceModel.UriSchemeKeyedCollection baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InitializeDescription (serviceType As Type, baseAddresses As UriSchemeKeyedCollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InitializeDescription(Type ^ serviceType, System::ServiceModel::UriSchemeKeyedCollection ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.InitializeDescription : Type * System.ServiceModel.UriSchemeKeyedCollection -&gt; unit" Usage="serviceHost.InitializeDescription (serviceType, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.ServiceModel.UriSchemeKeyedCollection" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="1f1e4-176">ホストされるサービスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-176">The <see cref="T:System.Type" /> of service hosted.</span></span></param>
        <param name="baseAddresses"><span data-ttu-id="1f1e4-177">ホストされるサービスのベース アドレスを格納している <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" />。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-177">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</span></span></param>
        <summary><span data-ttu-id="1f1e4-178">種類と、指定したベース アドレスに基づいて、ホストされるサービスの説明を初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-178">Initializes a description of the service hosted based on its type and specified base addresses.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f1e4-179"><paramref name="serviceType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-179"><paramref name="serviceType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceHost.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberSignature Language="F#" Value="override this.OnClosed : unit -&gt; unit" Usage="serviceHost.OnClosed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f1e4-180">サービス ホストが閉じられるときに、ホストされているサービスで破棄可能なサービスを破棄します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-180">Disposes of disposable services that are being hosted when the service host is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-181"><xref:System.ServiceModel.ServiceHost.OnClosed%2A> メソッドをオーバーライドする場合は、基本を確認する必要があります。OnClosed メソッドは、例外が発生した場合でも呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-181">When overriding the <xref:System.ServiceModel.ServiceHost.OnClosed%2A> method you must ensure the base.OnClosed method is called, even if an exception occurs.</span></span> <span data-ttu-id="1f1e4-182">次のコードは、これを行う方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-182">The following code illustrates how to do this.</span></span>  
  
```  
protected override void OnClosed()  
{  
    try  
    {  
        if (FaultFlagService.faultFlag == ThrowDuring.OnClosed)  
        {  
            FaultFlagService.faultFlag = ThrowDuring.Never;  
            throw new ServiceActivationException("Faulting the service because FaultFlagService.faultFlag = ThrowDuring.OnClosed");  
        }  
    }  
    finally  
    {  
        base.OnClosed();  
    }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonInstance">
      <MemberSignature Language="C#" Value="public object SingletonInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SingletonInstance" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceHost.SingletonInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SingletonInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SingletonInstance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SingletonInstance : obj" Usage="System.ServiceModel.ServiceHost.SingletonInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f1e4-183">ホストされるサービスのシングルトン インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-183">Gets the singleton instance of the hosted service.</span></span></summary>
        <value><span data-ttu-id="1f1e4-184">ホストされるサービス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-184">The hosted service object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f1e4-185">使用するサービスのインスタンスを制御する場合は、<xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> コンストラクターを使用して、ホストされるサービスのシングルトンインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f1e4-185">Use the <xref:System.ServiceModel.ServiceHost.%23ctor%28System.Object%2CSystem.Uri%5B%5D%29> constructor to initialize a singleton instance of the service to be hosted when you want to control the instance of the service that is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
