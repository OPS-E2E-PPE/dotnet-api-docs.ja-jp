<Type Name="ReliableSession" FullName="System.ServiceModel.ReliableSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e91b0f2d082648b0297852981a7d01c98c3475f8" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73381456" /></Metadata><TypeSignature Language="C#" Value="public class ReliableSession" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReliableSession extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ReliableSession" />
  <TypeSignature Language="VB.NET" Value="Public Class ReliableSession" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReliableSession" />
  <TypeSignature Language="F#" Value="type ReliableSession = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8a430-101">システム指定のバインドのいずれかを使用したときに使用できる、信頼できるセッションのバインド要素のプロパティにアクセスする便利な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="8a430-101">Provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a430-102"><xref:System.ServiceModel.ReliableSession> クラスに含まれるプロパティは、定義済みのバインドからアクセスできる <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> に含まれるプロパティのサブセットです。</span><span class="sxs-lookup"><span data-stu-id="8a430-102">The properties contained in the <xref:System.ServiceModel.ReliableSession> class are the subset of those contained in the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement> that are accessible from a predefined binding.</span></span> <span data-ttu-id="8a430-103">このサブセットは、<xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> プロパティと <xref:System.ServiceModel.ReliableSession.Ordered%2A> プロパティで構成されます。</span><span class="sxs-lookup"><span data-stu-id="8a430-103">This subset consists of the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> and <xref:System.ServiceModel.ReliableSession.Ordered%2A> properties.</span></span> <span data-ttu-id="8a430-104"><xref:System.ServiceModel.ReliableSession> クラスは、<xref:System.ServiceModel.Channels.ReliableSessionBindingElement> と同じオブジェクトを参照するので、一方の値を変更すると、他方の値も変更されます。</span><span class="sxs-lookup"><span data-stu-id="8a430-104">The <xref:System.ServiceModel.ReliableSession> class references the same objects as does the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>, so changing the value of one changes the value of the other too.</span></span> <span data-ttu-id="8a430-105">このクラスは、この 2 つのプロパティと信頼できるセッションのバインディング要素を一緒にして、発見性を高めています。</span><span class="sxs-lookup"><span data-stu-id="8a430-105">This class gathers these two properties of reliable session binding element together for better discoverability.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a430-106">信頼できるセッションを新たに作成する方法およびそのセッションのプロパティ値にアクセスして変更する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="8a430-106">The following example shows how to create a new reliable session, and access and change the property values of that session.</span></span> <span data-ttu-id="8a430-107"><xref:System.ServiceModel.ReliableSession> クラスを使用して、以下を書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="8a430-107">The <xref:System.ServiceModel.ReliableSession> class allows you to write:</span></span>  
  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a430-108"><see cref="T:System.ServiceModel.ReliableSession" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a430-108">Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a430-109"><see cref="T:System.ServiceModel.ReliableSession" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a430-109">Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement reliableSessionBindingElement) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ reliableSessionBindingElement);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession reliableSessionBindingElement" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public ReliableSession (System.ServiceModel.Channels.ReliableSessionBindingElement binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.ReliableSessionBindingElement binding) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As ReliableSessionBindingElement)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReliableSession(System::ServiceModel::Channels::ReliableSessionBindingElement ^ binding);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ReliableSession : System.ServiceModel.Channels.ReliableSessionBindingElement -&gt; System.ServiceModel.ReliableSession" Usage="new System.ServiceModel.ReliableSession binding" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reliableSessionBindingElement" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="binding" Type="System.ServiceModel.Channels.ReliableSessionBindingElement" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reliableSessionBindingElement"><span data-ttu-id="8a430-110">信頼できるセッションを初期化するためにプロパティ値が使用される<see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="8a430-110">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property values are used to initialize the reliable session.</span></span></param>
        <param name="binding"><span data-ttu-id="8a430-111">信頼できるセッションを初期化するためにプロパティ値が使用される<see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="8a430-111">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property values are used to initialize the reliable session.</span></span></param>
        <summary><span data-ttu-id="8a430-112">信頼できるセッション バインド要素から、<see cref="T:System.ServiceModel.ReliableSession" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a430-112">Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class from a reliable session binding element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[UEReliableSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#1)]
 [!code-vb[UEReliableSession#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a430-113"><paramref name="reliableSessionBindingElement" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a430-113">The <paramref name="reliableSessionBindingElement" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InactivityTimeout : TimeSpan with get, set" Usage="System.ServiceModel.ReliableSession.InactivityTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a430-114">サービスが非アクティブになってから終了するまでの時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a430-114">Gets or sets an interval of time that a service can remain inactive before closing.</span></span></summary>
        <value><span data-ttu-id="8a430-115">サービスが非アクティブになってから終了するまでの時間を指定する <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="8a430-115">The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service remains inactive before closing.</span></span> <span data-ttu-id="8a430-116">既定値は10分です。</span><span class="sxs-lookup"><span data-stu-id="8a430-116">The default value is 10 minutes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a430-117">このプロパティは、<xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> プロパティの値を取得および設定します。</span><span class="sxs-lookup"><span data-stu-id="8a430-117">The property gets and sets the value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.InactivityTimeout%2A> property.</span></span>  
  
 <span data-ttu-id="8a430-118">チャネルでのアクティビティは、アプリケーションまたはインフラストラクチャのメッセージを受信するように定義されています。</span><span class="sxs-lookup"><span data-stu-id="8a430-118">Activity on a channel is defined as receiving an application or infrastructure message.</span></span> <span data-ttu-id="8a430-119">非アクティブ タイムアウト プロパティは、アクティブでないセッションを維持する最長期間を制御します。</span><span class="sxs-lookup"><span data-stu-id="8a430-119">The inactivity timeout property controls the maximum amount of time to keep an inactive session alive.</span></span> <span data-ttu-id="8a430-120">反応のない時間が <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> より長くなると、インフラストラクチャによってセッションは中止され、チャネルはエラーとなります。</span><span class="sxs-lookup"><span data-stu-id="8a430-120">If more than the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> specified time interval passes with no activity, the session is aborted by the infrastructure and the channel faults.</span></span> <span data-ttu-id="8a430-121">信頼できるセッションは、強制的に終了されます。</span><span class="sxs-lookup"><span data-stu-id="8a430-121">The reliable session is torn down unilaterally.</span></span>  
  
 <span data-ttu-id="8a430-122">送信元アプリケーションに送信するメッセージがない場合は、通常、無反応のために信頼できるセッションがエラーになることはありません。代わりに、keep-alive 機構が無期限にセッションをアクティブ状態で維持します。</span><span class="sxs-lookup"><span data-stu-id="8a430-122">If the sending application has no messages to send then the reliable session is normally not faulted because of inactivity; instead a keep-alive mechanism keeps the session active indefinitely.</span></span> <span data-ttu-id="8a430-123">アプリケーション メッセージが送信または受信されない場合、これとは関係なく、ディスパッチャーが信頼できるセッションを終了させる場合があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="8a430-123">Note that the dispatcher could independently abort the reliable session if no application messages are sent or received.</span></span> <span data-ttu-id="8a430-124">したがって、どのような種類のメッセージも受信されないようなネットワーク状態の場合、または送信側でエラーが発生した場合には、通常、非アクティブ タイムアウトになります。</span><span class="sxs-lookup"><span data-stu-id="8a430-124">Thus, the inactivity timeout typically expires if network conditions are such that no messages of any sort are received or if there is a failure on the sender.</span></span>  
  
 <span data-ttu-id="8a430-125">このタイムアウトを設定すると、クライアントがセキュリティ セッションを閉じない場合にサーバーがそのセッションを保持することを回避できます。</span><span class="sxs-lookup"><span data-stu-id="8a430-125">Setting this timeout prevents the server from holding onto a security session if the client does not close it.</span></span> <span data-ttu-id="8a430-126">セキュリティ セッションが、非アクティブ時間の間にメッセージを受信しなかった場合、そのセッションは、サーバーによって閉じられます。</span><span class="sxs-lookup"><span data-stu-id="8a430-126">If the security session has not received a message for the inactivity interval of time, it is closed by the server.</span></span> <span data-ttu-id="8a430-127">これにより、潜在的なサービス拒否攻撃が軽減されます。</span><span class="sxs-lookup"><span data-stu-id="8a430-127">This mitigates a potential denial of service attack.</span></span>  
  
 <span data-ttu-id="8a430-128">信頼できるセッションを使用しているとき、接続を維持するために適用する必要がある非アクティブ タイマーが 2 つあります。</span><span class="sxs-lookup"><span data-stu-id="8a430-128">When using a reliable session, there are two different inactivity timers that must be satisfied to keep the connection alive.</span></span> <span data-ttu-id="8a430-129">これらの非アクティブ タイマーのいずれかがオフになると、接続が切断されます。</span><span class="sxs-lookup"><span data-stu-id="8a430-129">If either of these inactivity timers goes off, then the connection is dropped.</span></span>  
  
-   <span data-ttu-id="8a430-130">非アクティブ タイマーの 1 つは、信頼できるセッションに対して適用され、<xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="8a430-130">The first inactivity timer is on the reliable session and is called the <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A>.</span></span> <span data-ttu-id="8a430-131">タイムアウト時間内にアプリケーション メッセージまたはインフラストラクチャ メッセージが受信されない場合、この非アクティブ タイマーが発生します。</span><span class="sxs-lookup"><span data-stu-id="8a430-131">This inactivity timer fires if no messages, either application or infrastructure, are received within the timeout period.</span></span> <span data-ttu-id="8a430-132">インフラストラクチャ メッセージは、アプリケーション データを含んでいるのではなく、接続維持や受信確認など、チャネル スタック内でプロトコルの 1 つのために生成されるメッセージです。</span><span class="sxs-lookup"><span data-stu-id="8a430-132">An infrastructure message is a message that is generated for the purpose of one of the protocols in the channel stack, such as a keep alive or an acknowledgment, rather than containing application data.</span></span>  
  
-   <span data-ttu-id="8a430-133">もう 1 つの非アクティブ タイマーはサービスに対して適用され、バインドの <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> 設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="8a430-133">The second inactivity timer is on the service and uses the <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> setting of the binding.</span></span> <span data-ttu-id="8a430-134">タイムアウト時間内にアプリケーション メッセージが受信されない場合、この非アクティブ タイマーが発生します。</span><span class="sxs-lookup"><span data-stu-id="8a430-134">This inactivity timer fires if no application messages are received within the timeout period.</span></span>  
  
 <span data-ttu-id="8a430-135">いずれかの非アクティブ タイマーが発生した場合は接続が切断されるので、<xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> が <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> を超えてからその値を大きくしても、影響はありません。</span><span class="sxs-lookup"><span data-stu-id="8a430-135">Since the connection is dropped if either inactivity timer fires, increasing <xref:System.ServiceModel.ReliableSession.InactivityTimeout%2A> once it is greater than <xref:System.ServiceModel.Channels.Binding.ReceiveTimeout%2A> has no effect.</span></span> <span data-ttu-id="8a430-136">これらのタイムアウトの既定は両方とも 10 分です。したがって、信頼できるセッションを使用しているときに設定を変えるには、これらの両方の値を大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a430-136">The default for both of these timeouts is 10 minutes, so you always have to increase both of them to make a difference when using a reliable session.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a430-137">値が 0 以下の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8a430-137">The value set is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Ordered">
      <MemberSignature Language="C#" Value="public bool Ordered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Ordered" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ReliableSession.Ordered" />
      <MemberSignature Language="VB.NET" Value="Public Property Ordered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Ordered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Ordered : bool with get, set" Usage="System.ServiceModel.ReliableSession.Ordered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a430-138">メッセージが送信された順序をメッセージ配信で維持する必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a430-138">Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.</span></span></summary>
        <value><span data-ttu-id="8a430-139">メッセージを送信順に配信する必要があるかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="8a430-139"><see langword="true" /> if messages must be delivered in the order in which they are sent; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8a430-140">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a430-140">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a430-141">このプロパティは、<xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A> プロパティの値を取得および設定します。</span><span class="sxs-lookup"><span data-stu-id="8a430-141">The property gets and sets the value of the <xref:System.ServiceModel.Channels.ReliableSessionBindingElement.Ordered%2A> property.</span></span>  
  
   
  
## Examples  
 [!code-csharp[UEReliableSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/uereliablesession/cs/program.cs#2)]
 [!code-vb[UEReliableSession#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/uereliablesession/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
