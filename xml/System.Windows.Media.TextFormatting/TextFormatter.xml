<Type Name="TextFormatter" FullName="System.Windows.Media.TextFormatting.TextFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fb023b52c09ff7f93f9049f6d81b9ded59d5c129" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73348204" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextFormatter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextFormatter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextFormatter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFormatter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type TextFormatter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>カスタム テキスト レイアウト クライアントを使用して、テキストの書式設定およびテキスト行の改行のサービスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> は、テキストの書式設定やテキスト行の分割を行うためのサービスを提供する [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] テキストエンジンです。 <xref:System.Windows.Media.TextFormatting.TextFormatter> は、さまざまなテキスト文字形式や段落スタイルを処理でき、国際対応のテキストレイアウトもサポートされています。  
  
 従来のテキスト API とは異なり、<xref:System.Windows.Media.TextFormatting.TextFormatter> は、一連のコールバックメソッドを使用してテキストレイアウトクライアントと対話します。 クライアントは、<xref:System.Windows.Media.TextFormatting.TextSource> クラスの実装でこれらのメソッドを提供する必要があります。 次の図は、テキストフォーマッタクライアントとテキストレイアウトクライアントの相互作用を示しています。  
  
 ![テキスト レイアウト クライアントと TextFormatter のダイアグラム](~/add/media/textformatter01.png "テキスト レイアウト クライアントと TextFormatter のダイアグラム")  
テキストレイアウトクライアントと TextFormatter オブジェクトの間の相互作用  
  
## <a name="text-formatting-services"></a>テキストの書式設定サービス  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> は、OpenType タイポグラフィなどのテキスト機能をサポートするだけでなく、テキストラン、行、および段落レベルの機能をサポートします。  
  
 次の表は、テキスト機能でサポートされているサービス <xref:System.Windows.Media.TextFormatting.TextFormatter> キーの一覧です。  
  
|機能|説明|  
|-------------|-----------------|  
|背景ブラシ|背景色に使用される <xref:System.Windows.Media.Brush>。 <xref:System.Windows.Media.TextFormatting.TextRunProperties.BackgroundBrush%2A> プロパティを参照してください。|  
|ベースラインの配置|線のベースラインの距離を決定します。 <xref:System.Windows.Media.TextFormatting.TextRunProperties.BaselineAlignment%2A> プロパティを参照してください。|  
|フォントのリンク|複合フォントを使用したフォントのリンクを提供します。|  
|前景ブラシ|前景色に使用される <xref:System.Windows.Media.Brush>。 <xref:System.Windows.Media.TextFormatting.TextRunProperties.ForegroundBrush%2A> プロパティを参照してください。|  
|OpenType|高度な OpenType 表記機能 (文脈に依存しない、標準合字など)。 <xref:System.Windows.Media.TextFormatting.TextRunTypographyProperties> クラスのプロパティを参照してください。|  
|伴う|タイプフェイス、太さ、スタイル、および伸縮を決定します。 <xref:System.Windows.Media.TextFormatting.TextRunProperties.Typeface%2A> プロパティを参照してください。|  
|文字の装飾|下線や取り消し線などの <xref:System.Windows.TextDecoration> オブジェクトのサポートを提供します。 <xref:System.Windows.Media.TextFormatting.TextRunProperties.TextDecorations%2A> プロパティを参照してください。|  
|テキスト効果|<xref:System.Windows.Media.TextEffect> オブジェクトのサポートを提供します。 <xref:System.Windows.Media.TextFormatting.TextRunProperties.TextEffects%2A> プロパティを参照してください。|  
  
 次の表は、段落レベルの機能でサポートされているサービス <xref:System.Windows.Media.TextFormatting.TextFormatter> キーの一覧です。  
  
|機能|説明|  
|-------------|-----------------|  
|フロー方向|段落のフロー方向 (左から右、または右から左)。 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.FlowDirection%2A> プロパティを参照してください。|  
|行のインデント|段落内の各行のインデント。 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.Indent%2A> プロパティを参照してください。|  
|マーカー|段落の最初の行のマーカー特性。 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextMarkerProperties%2A> プロパティを参照してください。|  
|段落インデント|段落の最初の行のインデント。 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.ParagraphIndent%2A> プロパティを参照してください。|  
|タブ|タブの配置とタブリーダーのサポートが含まれます。|  
|幅|段落の幅の最小値と最大値を決定します。 <xref:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth%2A> メソッドを参照してください。|  
|右端で折り返す|フローエッジに達したときにテキストを折り返す方法を決定します。 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextWrapping%2A> プロパティを参照してください。|  
  
 次の表は、行レベルの機能でサポートされているサービス <xref:System.Windows.Media.TextFormatting.TextFormatter> キーの一覧です。  
  
|機能|説明|  
|-------------|-----------------|  
|アラインメント|左揃え、右揃え、中央揃え、または両端揃え。 <xref:System.Windows.Media.TextFormatting.TextParagraphProperties.TextAlignment%2A> プロパティを参照してください。|  
|[行間]|線の高さ。 <xref:System.Windows.Media.TextFormatting.TextLine.Height%2A> プロパティを参照してください。|  
|行の折りたたみ|行の折りたたみサポート。 <xref:System.Windows.Media.TextFormatting.TextLine.Collapse%2A> メソッドを参照してください。|  
|ブラックボックスの測定|デバイス フォントで文字をレイアウトするために使用されるメトリックを表します。 詳細については、<xref:System.Windows.Media.CharacterMetrics> クラスのトピックを参照してください。|  
|キャレットのサポート|キャレットのナビゲーションと編集のサポート。 <xref:System.Windows.Media.TextFormatting.TextLine.GetNextCaretCharacterHit%2A> や <xref:System.Windows.Media.TextFormatting.TextLine.GetPreviousCaretCharacterHit%2A>などの <xref:System.Windows.Media.TextFormatting.TextLine> 文字ヒットプロパティを参照してください。|  
  
 次の表に、テキストランレベル機能でサポートされているサービス <xref:System.Windows.Media.TextFormatting.TextFormatter> キーの一覧を示します。  
  
|機能|説明|  
|-------------|-----------------|  
|非表示の実行|表示されない文字の範囲。 <xref:System.Windows.Media.TextFormatting.TextHidden> オブジェクトを参照してください。|  
|あり|行と段落の区切り。|  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Media.TextFormatting.TextFormatter> オブジェクトを使用して、描画オブジェクトとして表示できるテキストの書式設定された行を生成する方法を示しています。  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet1)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet1)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">高度なテキスト書式設定のサンプル</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> クラスの新しいインスタンスを作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.TextFormatter Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.TextFormatting.TextFormatter Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As TextFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::TextFormatting::TextFormatter ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Windows.Media.TextFormatting.TextFormatter" Usage="System.Windows.Media.TextFormatting.TextFormatter.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextFormatter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> クラスの新しいインスタンスを作成します。 これは静的メソッドです。</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> の新しいインスタンス。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.TextFormatting.TextFormatter Create (System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.TextFormatting.TextFormatter Create(valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Create(System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::TextFormatting::TextFormatter ^ Create(System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="F#" Value="static member Create : System.Windows.Media.TextFormattingMode -&gt; System.Windows.Media.TextFormatting.TextFormatter" Usage="System.Windows.Media.TextFormatting.TextFormatter.Create textFormattingMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="textFormattingMode"><see cref="T:System.Windows.Media.TextFormattingMode" /> のテキスト レイアウトを指定する <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />。</param>
        <summary>指定した書式設定モードを使用して、<see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> クラスの新しいインスタンスを作成します。 これは静的メソッドです。</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> の新しいインスタンス。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.TextFormattingMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textFormatter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> オブジェクトによって使用されているマネージド リソースおよびアンマネージド リソースをすべて解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatLine">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ドキュメント コンテンツの書式設定および表示に使用される <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> を作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatLine">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine FormatLine (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, double paragraphWidth, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine FormatLine(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, float64 paragraphWidth, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ FormatLine(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, double paragraphWidth, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextLineBreak ^ previousLineBreak);" />
      <MemberSignature Language="F#" Value="abstract member FormatLine : System.Windows.Media.TextFormatting.TextSource * int * double * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextLineBreak -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textFormatter.FormatLine (textSource, firstCharIndex, paragraphWidth, paragraphProperties, previousLineBreak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphWidth" Type="System.Double" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="previousLineBreak" Type="System.Windows.Media.TextFormatting.TextLineBreak" />
      </Parameters>
      <Docs>
        <param name="textSource">行のテキスト ソースを表す <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 値。</param>
        <param name="firstCharIndex">行の先頭の文字の文字インデックスを指定する <see cref="T:System.Int32" /> 値。</param>
        <param name="paragraphWidth">行が表示される段落の幅を指定する <see cref="T:System.Double" /> 値。</param>
        <param name="paragraphProperties">フロー方向、配置、インデントなど、段落のプロパティを表す <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> 値。</param>
        <param name="previousLineBreak">テキスト書式設定プロセスによって改行された段落の前の行の改行位置に関して、テキスト フォーマッタの状態を指定する <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> 値。</param>
        <summary>ドキュメント コンテンツの書式設定および表示に使用される <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> を作成します。</summary>
        <returns>表示可能なテキスト行を表す <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Windows.Media.TextFormatting.TextFormatter.FormatLine%2A> メソッドを使用して、書式設定された <xref:System.Windows.Media.TextFormatting.TextLine>を返す方法を示します。  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet2)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatLine">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextLine FormatLine (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, double paragraphWidth, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak, System.Windows.Media.TextFormatting.TextRunCache textRunCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextLine FormatLine(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, float64 paragraphWidth, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextLineBreak previousLineBreak, class System.Windows.Media.TextFormatting.TextRunCache textRunCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextLine ^ FormatLine(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, double paragraphWidth, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextLineBreak ^ previousLineBreak, System::Windows::Media::TextFormatting::TextRunCache ^ textRunCache);" />
      <MemberSignature Language="F#" Value="abstract member FormatLine : System.Windows.Media.TextFormatting.TextSource * int * double * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextLineBreak * System.Windows.Media.TextFormatting.TextRunCache -&gt; System.Windows.Media.TextFormatting.TextLine" Usage="textFormatter.FormatLine (textSource, firstCharIndex, paragraphWidth, paragraphProperties, previousLineBreak, textRunCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextLine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphWidth" Type="System.Double" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="previousLineBreak" Type="System.Windows.Media.TextFormatting.TextLineBreak" />
        <Parameter Name="textRunCache" Type="System.Windows.Media.TextFormatting.TextRunCache" />
      </Parameters>
      <Docs>
        <param name="textSource">行のテキスト ソースを表す <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> オブジェクト。</param>
        <param name="firstCharIndex">行の先頭の文字の文字インデックスを指定する <see cref="T:System.Int32" /> 値。</param>
        <param name="paragraphWidth">行が表示される段落の幅を指定する <see cref="T:System.Double" /> 値。</param>
        <param name="paragraphProperties">フロー方向、配置、インデントなど、段落のプロパティを表す <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> オブジェクト。</param>
        <param name="previousLineBreak">テキスト書式設定プロセスによって改行された段落の前の行の改行位置に関して、テキスト フォーマッタの状態を指定する <see cref="T:System.Windows.Media.TextFormatting.TextLineBreak" /> オブジェクト。</param>
        <param name="textRunCache">テキストのレイアウトのキャッシュ機構を表す <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> オブジェクト。</param>
        <summary>ドキュメント コンテンツの書式設定および表示に使用される <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> を作成します。</summary>
        <returns>表示可能なテキスト行を表す <see cref="T:System.Windows.Media.TextFormatting.TextLine" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、<xref:System.Windows.Media.TextFormatting.TextLine> がパフォーマンスに大きな影響を与えるアプリケーションのパフォーマンスを向上させるために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FormatMinMaxParagraphWidth">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したテキスト コンテンツをすべて格納できる最小および最大の段落幅を表す値を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FormatMinMaxParagraphWidth">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::MinMaxParagraphWidth FormatMinMaxParagraphWidth(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties);" />
      <MemberSignature Language="F#" Value="abstract member FormatMinMaxParagraphWidth : System.Windows.Media.TextFormatting.TextSource * int * System.Windows.Media.TextFormatting.TextParagraphProperties -&gt; System.Windows.Media.TextFormatting.MinMaxParagraphWidth" Usage="textFormatter.FormatMinMaxParagraphWidth (textSource, firstCharIndex, paragraphProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.MinMaxParagraphWidth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
      </Parameters>
      <Docs>
        <param name="textSource">行のテキスト ソースを表す <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> オブジェクト。</param>
        <param name="firstCharIndex">行の先頭の文字の文字インデックスを指定する <see cref="T:System.Int32" /> 値。</param>
        <param name="paragraphProperties">フロー方向、配置、インデントなど、段落のプロパティを表す <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> オブジェクト。</param>
        <summary>指定したテキスト コンテンツをすべて格納できる最小および最大の段落幅を表す値を返します。</summary>
        <returns>指定したテキスト コンテンツをすべて格納できる最小および最大の段落幅を表す <see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次のテキストでは、ソーステキストの最小の段落幅を使用します。これは、複数の行として表示されます。 段落の最小幅は、最大の幅を持つ単語 (この場合は "ジャンプ" という単語) に対応します。 合計幅が段落の最小幅を超えない限り、複数の単語が同じ行に表示されることに注意してください。  
  
 ![段落の最小幅を使用したテキストフォーマッタ](~/add/media/textformatter03.png "段落の最小幅を使用するテキスト フォーマッタ")  
段落の最小幅  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth%2A> メソッドを使用して、書式設定されたテキスト行の段落の最小幅を生成する方法を示しています。  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet3)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatMinMaxParagraphWidth">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth (System.Windows.Media.TextFormatting.TextSource textSource, int firstCharIndex, System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, System.Windows.Media.TextFormatting.TextRunCache textRunCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth FormatMinMaxParagraphWidth(class System.Windows.Media.TextFormatting.TextSource textSource, int32 firstCharIndex, class System.Windows.Media.TextFormatting.TextParagraphProperties paragraphProperties, class System.Windows.Media.TextFormatting.TextRunCache textRunCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextRunCache)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::MinMaxParagraphWidth FormatMinMaxParagraphWidth(System::Windows::Media::TextFormatting::TextSource ^ textSource, int firstCharIndex, System::Windows::Media::TextFormatting::TextParagraphProperties ^ paragraphProperties, System::Windows::Media::TextFormatting::TextRunCache ^ textRunCache);" />
      <MemberSignature Language="F#" Value="abstract member FormatMinMaxParagraphWidth : System.Windows.Media.TextFormatting.TextSource * int * System.Windows.Media.TextFormatting.TextParagraphProperties * System.Windows.Media.TextFormatting.TextRunCache -&gt; System.Windows.Media.TextFormatting.MinMaxParagraphWidth" Usage="textFormatter.FormatMinMaxParagraphWidth (textSource, firstCharIndex, paragraphProperties, textRunCache)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.MinMaxParagraphWidth</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSource" Type="System.Windows.Media.TextFormatting.TextSource" />
        <Parameter Name="firstCharIndex" Type="System.Int32" />
        <Parameter Name="paragraphProperties" Type="System.Windows.Media.TextFormatting.TextParagraphProperties" />
        <Parameter Name="textRunCache" Type="System.Windows.Media.TextFormatting.TextRunCache" />
      </Parameters>
      <Docs>
        <param name="textSource">行のテキスト ソースを表す <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> オブジェクト。</param>
        <param name="firstCharIndex">行の先頭の文字の文字インデックスを指定する <see cref="T:System.Int32" /> 値。</param>
        <param name="paragraphProperties">フロー方向、配置、インデントなど、段落のプロパティを表す <see cref="T:System.Windows.Media.TextFormatting.TextParagraphProperties" /> オブジェクト。</param>
        <param name="textRunCache">テキストのレイアウトのキャッシュ機構を表す <see cref="T:System.Windows.Media.TextFormatting.TextRunCache" /> オブジェクト。</param>
        <summary>指定したテキスト コンテンツをすべて格納できる最小および最大の段落幅を表す値を返します。</summary>
        <returns>指定したテキスト コンテンツをすべて格納できる最小および最大の段落幅を表す <see cref="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
