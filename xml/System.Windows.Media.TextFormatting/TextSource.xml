<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="460353977f817f940e55388825332c9d5078d36b" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82451977" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Windows.Media.TextFormatting.TextFormatter" /> オブジェクトによって使用される文字データと書式設定プロパティを指定するための抽象クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.TextFormatting.TextSource> オブジェクト内のテキストへのすべてのアクセスは、<xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>を介して行われます。これは、テキストレイアウトクライアントが選択した任意の方法でテキストを仮想化できるように設計されています。  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> は、テキストの書式設定やテキスト行の分割を行うためのサービスを提供する [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] テキストエンジンです。 <xref:System.Windows.Media.TextFormatting.TextFormatter> は、さまざまなテキスト文字形式や段落スタイルを処理でき、国際対応のテキストレイアウトもサポートされています。 従来のテキスト API とは異なり、<xref:System.Windows.Media.TextFormatting.TextFormatter> は、一連のコールバックメソッドを使用してテキストレイアウトクライアントと対話します。 クライアントは、<xref:System.Windows.Media.TextFormatting.TextSource> クラスの実装でこれらのメソッドを提供する必要があります。 次の一覧では、オーバーライドする必要がある3つのメンバーについて説明します。  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: 指定した <xref:System.Windows.Media.TextFormatting.TextSource> の位置から始まる <xref:System.Windows.Media.TextFormatting.TextRun> を取得します。  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: 指定した <xref:System.Windows.Media.TextFormatting.TextSource> 位置の直前のテキスト範囲を取得します。  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: <xref:System.Windows.Media.TextFormatting.TextSource> 文字インデックスを <xref:System.Windows.Media.TextEffect> 文字インデックスにマップする値を取得します。  
  
> [!NOTE]
>  派生 <xref:System.Windows.Media.TextFormatting.TextSource> クラスの実装方法を示す完全なコードサンプルについては、「[高度なテキスト書式設定の例](https://go.microsoft.com/fwlink/?LinkID=159965)」を参照してください。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">高度なテキスト書式設定のサンプル</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">テキストの取得を停止する文字インデックス位置です。</param>
        <summary>指定した <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 位置の直前のテキスト範囲を取得します。</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> の直前のテキスト範囲を表す <paramref name="textSourceCharacterIndexLimit" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> メソッドは、インラインオブジェクトや非表示の実行などのテキストが `textSourceCharacterIndexLimit` 直前のテキストに含まれていない場合、空の <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> を返します。  
  
 `textSourceCharacterIndexLimit`の前に値がない場合、このメソッドは長さ0のテキスト範囲を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">マップする <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 文字インデックスです。</param>
        <summary><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> 文字インデックスを <see cref="T:System.Windows.Media.TextEffect" /> 文字インデックスに割り当てる値を取得します。</summary>
        <returns><see cref="T:System.Int32" /> 文字インデックスを表す <see cref="T:System.Windows.Media.TextEffect" /> 値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex"><see cref="T:System.Windows.Media.TextFormatting.TextSource" /> の取得元となる <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> の文字インデックス位置を指定します。</param>
        <summary>指定した <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> 位置を開始位置として <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> を取得します。</summary>
        <returns><see cref="T:System.Windows.Media.TextFormatting.TextRun" />、または <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> の派生オブジェクトを表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキストランは、1つのプロパティセットを共有する一連の文字です。 フォントファミリ、フォントスタイル、前景色、文字装飾、またはその他の書式設定効果など、形式を変更すると、テキストランが中断されます。 <xref:System.Windows.Media.TextFormatting.TextRun> クラスは、<xref:System.Windows.Media.TextFormatting.TextFormatter>によって処理されるいくつかの種類のテキストコンテンツを表す型階層のルートです。 <xref:System.Windows.Media.TextFormatting.TextRun> から派生した各クラスは、個別の種類のテキストコンテンツを表します。  
  
|クラス|説明|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|階層のルート。 文字プロパティの同じセットを共有する文字のグループを定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|異なる物理タイプフェイスからの文字グリフのコレクションを定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|コンテンツ全体の測定、ヒットテスト、および描画を個別のエンティティとして実行するテキストコンテンツの種類を定義します。 この種類のコンテンツの例としては、テキスト行の中央にボタンがあります。|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|改行文字コードを定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|改行文字コードを定義します。 <xref:System.Windows.Media.TextFormatting.TextEndOfLine> の派生クラスです。|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|セグメントの区切りマーカーを定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|非表示文字の範囲を定義します。|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|変更スコープの先頭を定義します。|  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> メソッドのオーバーライドが実装されています。  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストを表示する PixelsPerDip を取得または設定します。</summary>
        <value>現在の <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 モニターごとの DPI 対応アプリケーションの DPI が変更されるたびに、<xref:System.Windows.Media.TextFormatting.TextSource> を拡張するすべてのクラスが <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> を更新する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
