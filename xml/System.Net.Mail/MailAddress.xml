<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b338755043642b5c64feecf0a1a8e0a374238fb" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83531816" /></Metadata><TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <TypeSignature Language="VB.NET" Value="Public Class MailAddress" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailAddress" />
  <TypeSignature Language="F#" Value="type MailAddress = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Mail" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4ad06-101">電子メールの差出人または受信者のアドレスを表します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-101">Represents the address of an electronic mail sender or recipient.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="4ad06-102"><xref:System.Net.Mail.MailAddress> クラスは、電子メールメッセージのアドレス情報を格納するために、<xref:System.Net.Mail.SmtpClient> クラスおよび <xref:System.Net.Mail.MailMessage> クラスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-102">The <xref:System.Net.Mail.MailAddress> class is used by the <xref:System.Net.Mail.SmtpClient> and <xref:System.Net.Mail.MailMessage> classes to store address information for email messages.</span></span>  
  
<span data-ttu-id="4ad06-103">メールアドレスは、<xref:System.Net.Mail.MailAddress.User%2A> 名、<xref:System.Net.Mail.MailAddress.Host%2A> 名、および必要に応じて <xref:System.Net.Mail.MailAddress.DisplayName%2A>で構成されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-103">A mail address is composed of a <xref:System.Net.Mail.MailAddress.User%2A> name, <xref:System.Net.Mail.MailAddress.Host%2A> name and optionally, a <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span></span> <span data-ttu-id="4ad06-104">エンコードする場合、<xref:System.Net.Mail.MailAddress.DisplayName%2A> には ASCII 以外の文字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-104">The <xref:System.Net.Mail.MailAddress.DisplayName%2A> can contain non-ASCII characters if you encode them.</span></span>  
  
<span data-ttu-id="4ad06-105"><xref:System.Net.Mail.MailAddress> クラスは、次のメールアドレス形式をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="4ad06-105">The <xref:System.Net.Mail.MailAddress> class supports the following mail address formats:</span></span>  
  
-   <span data-ttu-id="4ad06-106">`user@host`の単純なアドレス形式。</span><span class="sxs-lookup"><span data-stu-id="4ad06-106">A simple address format of `user@host`.</span></span> <span data-ttu-id="4ad06-107"><xref:System.Net.Mail.MailAddress.DisplayName%2A> が設定されていない場合は、電子メールアドレスの形式が生成されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-107">If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is not set, this is the mail address format generated.</span></span>  
  
-   <span data-ttu-id="4ad06-108">`"display name" <user@host>`の標準の引用符で囲まれた表示名形式。</span><span class="sxs-lookup"><span data-stu-id="4ad06-108">A standard quoted display name format of `"display name" <user@host>`.</span></span> <span data-ttu-id="4ad06-109"><xref:System.Net.Mail.MailAddress.DisplayName%2A> が設定されている場合は、これが生成された形式になります。</span><span class="sxs-lookup"><span data-stu-id="4ad06-109">If a <xref:System.Net.Mail.MailAddress.DisplayName%2A> is set, this is the format generated.</span></span>  
  
-   <span data-ttu-id="4ad06-110"><xref:System.Net.Mail.MailAddress.User%2A> 名と <xref:System.Net.Mail.MailAddress.Host%2A> 名の前後に山かっこが追加されます (これらが含まれていない場合)。</span><span class="sxs-lookup"><span data-stu-id="4ad06-110">Angle brackets are added around the <xref:System.Net.Mail.MailAddress.User%2A> name and <xref:System.Net.Mail.MailAddress.Host%2A> name, if these are not included.</span></span> <span data-ttu-id="4ad06-111">たとえば、`"display name" user@host` が `"display name" <user@host>`に変更されたとします。</span><span class="sxs-lookup"><span data-stu-id="4ad06-111">For example, `"display name" user@host` is changed to `"display name" <user@host>`.</span></span>
  
-   <span data-ttu-id="4ad06-112">これらが含まれていない場合は、<xref:System.Net.Mail.MailAddress.DisplayName%2A>の周りに引用符が追加されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-112">Quotes are added around the <xref:System.Net.Mail.MailAddress.DisplayName%2A>, if these are not included.</span></span> <span data-ttu-id="4ad06-113">たとえば、`display name <user@host>` が `"display name" <user@host>`に変更されたとします。</span><span class="sxs-lookup"><span data-stu-id="4ad06-113">For example, `display name <user@host>` is changed to `"display name" <user@host>`.</span></span>
  
-   <span data-ttu-id="4ad06-114"><xref:System.Net.Mail.MailAddress.DisplayName%2A> プロパティでは、Unicode 文字がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4ad06-114">Unicode characters are supported in the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property.</span></span>  
  
-   <span data-ttu-id="4ad06-115">引用符で囲まれた <xref:System.Net.Mail.MailAddress.User%2A> 名。</span><span class="sxs-lookup"><span data-stu-id="4ad06-115">A <xref:System.Net.Mail.MailAddress.User%2A> name with quotes.</span></span> <span data-ttu-id="4ad06-116">たとえば、「 `"user name"@host` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-116">For example, `"user name"@host`.</span></span>  
  
-   <span data-ttu-id="4ad06-117">ユーザー名の連続したドットと末尾のドット。</span><span class="sxs-lookup"><span data-stu-id="4ad06-117">Consecutive and trailing dots in user names.</span></span> <span data-ttu-id="4ad06-118">たとえば、「 `user...name..@host` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-118">For example, `user...name..@host`.</span></span>  
  
-   <span data-ttu-id="4ad06-119">角かっこで囲まれたドメインリテラル。</span><span class="sxs-lookup"><span data-stu-id="4ad06-119">Bracketed domain literals.</span></span> <span data-ttu-id="4ad06-120">たとえば、「 `<user@[my domain]>` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-120">For example, `<user@[my domain]>`.</span></span>  
  
-   <span data-ttu-id="4ad06-121">コメント。</span><span class="sxs-lookup"><span data-stu-id="4ad06-121">Comments.</span></span> <span data-ttu-id="4ad06-122">たとえば、「 `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-122">For example, `(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)`.</span></span> <span data-ttu-id="4ad06-123">コメントは転送前に削除されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-123">Comments are removed before transmission.</span></span>  
  
<span data-ttu-id="4ad06-124">コンマは、メールアドレスのリスト内の要素を区切るために使用されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-124">A comma is used to separate elements in a list of mail addresses.</span></span> <span data-ttu-id="4ad06-125">そのため、リスト内の引用符で囲まれていない表示名にはコンマを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="4ad06-125">As a result, a comma should not be used in unquoted display names in a list.</span></span> <span data-ttu-id="4ad06-126">次のメールアドレスが許可されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-126">The following mail addresses would be allowed:</span></span>
  
`"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
<span data-ttu-id="4ad06-127">次のメールアドレスは使用できません:</span><span class="sxs-lookup"><span data-stu-id="4ad06-127">The following mail address would not be allowed:</span></span>  
  
`John, Doe <user@host>, Bob, Smith <user2@host>`  
  
<span data-ttu-id="4ad06-128">引用符は引用符で囲まれた文字列に埋め込むことができますが、エスケープする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4ad06-128">Quotes can be embedded in a quoted string, but they must be escaped.</span></span> <span data-ttu-id="4ad06-129">次のメールアドレスが許可されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-129">The following mail addresses would be allowed:</span></span>
  
`"John \"Jr\" Doe" <user@host>`  
  
`"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
<span data-ttu-id="4ad06-130">次のメールアドレスは使用できません:</span><span class="sxs-lookup"><span data-stu-id="4ad06-130">The following mail address would not be allowed:</span></span>  
  
`"John "Jr" Doe" <user@host>`  
  
<span data-ttu-id="4ad06-131">ユーザー名が引用符で囲まれていない場合、文字列 (またはコンマ) の先頭とアドレスの間のすべてのテキストは、コメントを含め、<xref:System.Net.Mail.MailAddress.DisplayName%2A>の一部と見なされます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-131">When the username is not quoted, all text between the start of the string (or comma) and the address are considered part of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>, including comments.</span></span> <span data-ttu-id="4ad06-132">例 :</span><span class="sxs-lookup"><span data-stu-id="4ad06-132">For example:</span></span>
  
`(non comment) unquoted display (non comment) name (non comment) <user@host>`
  
<span data-ttu-id="4ad06-133"><xref:System.Net.Mail.MailAddress> クラスはメールアドレスを有効なものとして受け入れますが、他のメールサーバーはメールアドレスを受け付けない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4ad06-133">Although the <xref:System.Net.Mail.MailAddress> class accepts a mail address as valid, other mail servers may not accept the mail address.</span></span>  
  
<span data-ttu-id="4ad06-134"><xref:System.Net.Mail.MailAddress> クラスは、次のメールアドレス形式をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="4ad06-134">The <xref:System.Net.Mail.MailAddress> class does not support the following mail address formats:</span></span>  
  
- <span data-ttu-id="4ad06-135">引用符付きおよび引用符で囲まれていない表示名。</span><span class="sxs-lookup"><span data-stu-id="4ad06-135">Mixed quoted and unquoted display names.</span></span> <span data-ttu-id="4ad06-136">たとえば、「 `display "name" <user@host>` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-136">For example, `display "name" <user@host>`.</span></span>
  
- <span data-ttu-id="4ad06-137">IETF によって発行された RFC 2822 セクション3.4 で定義されているグループ。</span><span class="sxs-lookup"><span data-stu-id="4ad06-137">Groups, as defined in RFC 2822 Section 3.4 published by the IETF.</span></span>  
  
- <span data-ttu-id="4ad06-138">`"user"."name"@host`、`user."name"@host` または `"user".name@host`の不使用のユーザー名形式。</span><span class="sxs-lookup"><span data-stu-id="4ad06-138">The obsolete user name formats of `"user"."name"@host`, `user."name"@host` or `"user".name@host`.</span></span>
  
   
  
## Examples  
<span data-ttu-id="4ad06-139">次のコード例は、<xref:System.Net.Mail.SmtpClient>、<xref:System.Net.Mail.MailAddress>、および <xref:System.Net.Mail.MailMessage> クラスを使用して電子メールメッセージを送信する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4ad06-139">The following code example demonstrates sending an email message by using the <xref:System.Net.Mail.SmtpClient>, <xref:System.Net.Mail.MailAddress>, and <xref:System.Net.Mail.MailMessage> classes.</span></span>  
  
[!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
[!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4ad06-140"><see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-140">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="4ad06-141">電子メール アドレスを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-141">A <see cref="T:System.String" /> that contains an email address.</span></span></param>
        <summary><span data-ttu-id="4ad06-142">指定したアドレスを使用して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-142">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-143">`address` パラメーターには、山かっこでアドレスを囲む場合、表示名と関連付けられた電子メールアドレスを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-143">The `address` parameter can contain a display name and the associated email address if you enclose the address in angle brackets.</span></span> <span data-ttu-id="4ad06-144">例 :</span><span class="sxs-lookup"><span data-stu-id="4ad06-144">For example:</span></span>  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 <span data-ttu-id="4ad06-145">表示名と山かっこの間には空白文字を使用できます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-145">White space is permitted between the display name and the angle brackets.</span></span>  
  
 <span data-ttu-id="4ad06-146">次の表は、前の例のアドレスを使用して構築された <xref:System.Net.Mail.MailAddress> オブジェクトのプロパティ値を示しています。</span><span class="sxs-lookup"><span data-stu-id="4ad06-146">The following table shows the property values for a <xref:System.Net.Mail.MailAddress> object constructed using the preceding example address.</span></span>  
  
|<span data-ttu-id="4ad06-147">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4ad06-147">Property</span></span>|<span data-ttu-id="4ad06-148">値</span><span class="sxs-lookup"><span data-stu-id="4ad06-148">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## Examples  
 <span data-ttu-id="4ad06-149">次のコード例では、このコンストラクターを使用して、電子メールメッセージの <xref:System.Net.Mail.MailMessage.Bcc%2A> 受信者の <xref:System.Net.Mail.MailAddress> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-149">The following code example uses this constructor to create a <xref:System.Net.Mail.MailAddress> object for the <xref:System.Net.Mail.MailMessage.Bcc%2A> recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ad06-150"><paramref name="address" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-150"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ad06-151"><paramref name="address" /> が <see cref="F:System.String.Empty" /> ("") です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-151"><paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4ad06-152"><paramref name="address" /> が、認識される形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="4ad06-152"><paramref name="address" /> is not in a recognized format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="4ad06-153">電子メール アドレスを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-153">A <see cref="T:System.String" /> that contains an email address.</span></span></param>
        <param name="displayName"><span data-ttu-id="4ad06-154"><paramref name="address" /> に関連付けられた表示名を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-154">A <see cref="T:System.String" /> that contains the display name associated with <paramref name="address" />.</span></span> <span data-ttu-id="4ad06-155">このパラメーターは、<see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-155">This parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="4ad06-156">アドレスと表示名を指定して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-156">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address and display name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-157">表示名の先頭と末尾の空白は保持されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-157">Leading and trailing white space in the display name is preserved.</span></span>  
  
 <span data-ttu-id="4ad06-158">`displayName` に ASCII 以外の文字が含まれている場合、`displayName` エンコードには iso-8859-1 文字セットが使用されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-158">If `displayName` contains non-ASCII characters, the iso-8859-1 character set is used for the `displayName` encoding.</span></span> <span data-ttu-id="4ad06-159">非 ASCII 文字のエンコードについては、RFC 1522 で説明されています。これは[https://www.ietf.org/](https://www.ietf.org/)で入手できます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-159">Encoding non-ASCII characters is discussed in RFC 1522, which is available at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="4ad06-160">`address` に表示名が含まれていて、`displayName` が `null` ではなく <xref:System.String.Empty?displayProperty=nameWithType>と等しくない場合は、`displayName` に指定された値がオーバーライドされます。`address`</span><span class="sxs-lookup"><span data-stu-id="4ad06-160">If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` overrides the value specified in `address`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ad06-161">次のコード例では、このコンストラクターを使用して、電子メールメッセージの送信者と受信者の <xref:System.Net.Mail.MailAddress> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-161">The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender and recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ad06-162"><paramref name="address" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-162"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ad06-163"><paramref name="address" /> が <see cref="F:System.String.Empty" /> ("") です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-163"><paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4ad06-164"><paramref name="address" /> が、認識される形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="4ad06-164"><paramref name="address" /> is not in a recognized format.</span></span>  
  
<span data-ttu-id="4ad06-165">または</span><span class="sxs-lookup"><span data-stu-id="4ad06-165">-or-</span></span> 
 <span data-ttu-id="4ad06-166"><paramref name="address" /> に非 ASCII 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4ad06-166"><paramref name="address" /> contains non-ASCII characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As String, displayName As String, displayNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MailAddress(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.Net.Mail.MailAddress : string * string * System.Text.Encoding -&gt; System.Net.Mail.MailAddress" Usage="new System.Net.Mail.MailAddress (address, displayName, displayNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="4ad06-167">電子メール アドレスを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-167">A <see cref="T:System.String" /> that contains an email address.</span></span></param>
        <param name="displayName"><span data-ttu-id="4ad06-168"><paramref name="address" /> に関連付けられた表示名を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-168">A <see cref="T:System.String" /> that contains the display name associated with <paramref name="address" />.</span></span></param>
        <param name="displayNameEncoding"><span data-ttu-id="4ad06-169"><paramref name="displayName" /> で使用される文字セットを定義する <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-169">The <see cref="T:System.Text.Encoding" /> that defines the character set used for <paramref name="displayName" />.</span></span></param>
        <summary><span data-ttu-id="4ad06-170">アドレス、表示名、およびエンコーディングを指定して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-170">Initializes a new instance of the <see cref="T:System.Net.Mail.MailAddress" /> class using the specified address, display name, and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-171">表示名の先頭と末尾の空白は保持されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-171">Leading and trailing white space in the display name is preserved.</span></span>  
  
 <span data-ttu-id="4ad06-172">`address` に表示名が含まれていて、`displayName` が `null` ではなく <xref:System.String.Empty?displayProperty=nameWithType>と等しくない場合は、`displayName` に指定された値がオーバーライドされます。`address`</span><span class="sxs-lookup"><span data-stu-id="4ad06-172">If `address` contains a display name, and `displayName` is not `null` and is not equal to <xref:System.String.Empty?displayProperty=nameWithType>, `displayName` overrides the value specified in `address`.</span></span>  
  
 <span data-ttu-id="4ad06-173"><xref:System.Net.Mail.MailAddress.%23ctor%2A> メソッドは、`displayName` パラメーターが有効かどうかを確認しません。</span><span class="sxs-lookup"><span data-stu-id="4ad06-173">The <xref:System.Net.Mail.MailAddress.%23ctor%2A> method does not check if the `displayName` parameter is valid.</span></span> <span data-ttu-id="4ad06-174">このメソッドは、<xref:System.Net.Mail.MailAddress.DisplayName%2A> プロパティによって表示されない周囲の引用符を削除します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-174">This method removes surrounding quotes not displayed by the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property.</span></span> <span data-ttu-id="4ad06-175">`displayNameEncoding` パラメーターで <xref:System.Text.Encoding.ASCII%2A> または <xref:System.Text.Encoding.Unicode%2A> が指定されている場合を除き、転送の前に引用符が追加されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-175">Quotes will be added before transmission, except where <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter.</span></span> <span data-ttu-id="4ad06-176">`displayNameEncoding` パラメーターで指定されたエンコーディングは、転送 <xref:System.Text.Encoding.ASCII%2A> または <xref:System.Text.Encoding.Unicode%2A> が `displayNameEncoding` パラメーターで指定される前に <xref:System.Net.Mail.MailAddress.DisplayName%2A> プロパティに適用されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-176">The encoding specified in the `displayNameEncoding` parameter will be applied to the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property before transmission <xref:System.Text.Encoding.ASCII%2A> or <xref:System.Text.Encoding.Unicode%2A> is specified in the `displayNameEncoding` parameter.</span></span> <span data-ttu-id="4ad06-177">none が指定されている場合、<xref:System.Text.Encoding.UTF8%2A> は既定のエンコードです。</span><span class="sxs-lookup"><span data-stu-id="4ad06-177"><xref:System.Text.Encoding.UTF8%2A> is the default encoding if none is specified.</span></span>  
  
 <span data-ttu-id="4ad06-178">サポートされているメールアドレスの形式の詳細については、「<xref:System.Net.Mail.MailAddress>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4ad06-178">For more information on supported mail address formats, see <xref:System.Net.Mail.MailAddress>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ad06-179">次のコード例では、このコンストラクターを使用して、電子メールメッセージの送信者の <xref:System.Net.Mail.MailAddress> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-179">The following code example uses this constructor to create <xref:System.Net.Mail.MailAddress> instances for the sender of an email message.</span></span>  
  
 [!code-cpp[NclMailASync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4ad06-180"><paramref name="address" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-180"><paramref name="address" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="4ad06-181">または</span><span class="sxs-lookup"><span data-stu-id="4ad06-181">-or-</span></span> 
 <span data-ttu-id="4ad06-182"><paramref name="displayName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-182"><paramref name="displayName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4ad06-183"><paramref name="address" /> が <see cref="F:System.String.Empty" /> ("") です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-183"><paramref name="address" /> is <see cref="F:System.String.Empty" /> ("").</span></span>  
  
<span data-ttu-id="4ad06-184">または</span><span class="sxs-lookup"><span data-stu-id="4ad06-184">-or-</span></span> 
 <span data-ttu-id="4ad06-185"><paramref name="displayName" /> が <see cref="F:System.String.Empty" /> ("") です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-185"><paramref name="displayName" /> is <see cref="F:System.String.Empty" /> ("").</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="4ad06-186"><paramref name="address" /> が、認識される形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="4ad06-186"><paramref name="address" /> is not in a recognized format.</span></span>  
  
<span data-ttu-id="4ad06-187">または</span><span class="sxs-lookup"><span data-stu-id="4ad06-187">-or-</span></span> 
 <span data-ttu-id="4ad06-188"><paramref name="address" /> に非 ASCII 文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="4ad06-188"><paramref name="address" /> contains non-ASCII characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Address { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : string" Usage="System.Net.Mail.MailAddress.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ad06-189">このインスタンスが作成されたときに指定された電子メール アドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-189">Gets the email address specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="4ad06-190">電子メール アドレスを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-190">A <see cref="T:System.String" /> that contains the email address.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-191">このプロパティによって返される値には、<xref:System.Net.Mail.MailAddress.DisplayName%2A> 情報は含まれません。</span><span class="sxs-lookup"><span data-stu-id="4ad06-191">The value returned by this property does not include the <xref:System.Net.Mail.MailAddress.DisplayName%2A> information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ad06-192">次のコード例では、電子メールメッセージの受信者のアドレスを表示します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-192">The following code example displays the address for an email message recipient.</span></span>  
  
 [!code-cpp[NclMailSync#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Net.Mail.MailAddress.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ad06-193">このインスタンスが作成されたときに指定された表示名とアドレス情報で構成される表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-193">Gets the display name composed from the display name and address information specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="4ad06-194">表示名を格納している <see cref="T:System.String" />。このインスタンスが作成されたときに表示名情報が指定されなかった場合は <see cref="F:System.String.Empty" /> ("")。</span><span class="sxs-lookup"><span data-stu-id="4ad06-194">A <see cref="T:System.String" /> that contains the display name; otherwise, <see cref="F:System.String.Empty" /> ("") if no display name information was specified when this instance was created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-195">ASCII 以外の文字が含まれている表示名は、人間が判読できる形式で返されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-195">Display names that contain non-ASCII characters are returned in human-readable form.</span></span> <span data-ttu-id="4ad06-196"><xref:System.Net.Mail.MailAddress.ToString%2A> メソッドを使用して、<xref:System.Net.Mail.MailAddress.DisplayName%2A>のエンコードされた形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-196">Use the <xref:System.Net.Mail.MailAddress.ToString%2A> method to get the encoded form of the <xref:System.Net.Mail.MailAddress.DisplayName%2A>.</span></span>  
  
 <span data-ttu-id="4ad06-197">電子メールの読み取りに使用されるソフトウェアプログラムによっては、電子メールアドレスの代わりに、<xref:System.Net.Mail.MailAddress.DisplayName%2A> のプロパティ値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-197">Some software programs that are used to read email display the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property value instead of, or in addition to, the email address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ad06-198">次のコード例では、電子メールメッセージの受信者の <xref:System.Net.Mail.MailAddress.DisplayName%2A> を表示します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-198">The following code example displays the <xref:System.Net.Mail.MailAddress.DisplayName%2A> for the recipient of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals value" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="mailAddress.Equals obj" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="4ad06-199">現在のインスタンスと比較する <see cref="T:System.Net.Mail.MailAddress" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="4ad06-199">A <see cref="T:System.Net.Mail.MailAddress" /> instance to compare to the current instance.</span></span></param>
        <param name="obj"><span data-ttu-id="4ad06-200">現在のインスタンスと比較する <see cref="T:System.Net.Mail.MailAddress" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="4ad06-200">A <see cref="T:System.Net.Mail.MailAddress" /> instance to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="4ad06-201">2 つのメール アドレスを比較します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-201">Compares two mail addresses.</span></span></summary>
        <returns><span data-ttu-id="4ad06-202">2 つのメール アドレスが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-202"><see langword="true" /> if the two mail addresses are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="mailAddress.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ad06-203">メール アドレスのハッシュ値を返します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-203">Returns a hash value for a mail address.</span></span></summary>
        <returns><span data-ttu-id="4ad06-204">整数ハッシュ値。</span><span class="sxs-lookup"><span data-stu-id="4ad06-204">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-205"><xref:System.Net.Mail.MailAddress.GetHashCode%2A> メソッドは、メールアドレスのハッシュコードを返します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-205">The <xref:System.Net.Mail.MailAddress.GetHashCode%2A> method returns a hash code of the mail address.</span></span> <span data-ttu-id="4ad06-206">この値は、ハッシュテーブルのキーとして使用できます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-206">This value can be used as a key in hash tables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Host : string" Usage="System.Net.Mail.MailAddress.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ad06-207">このインスタンスが作成されたときに指定されたアドレスのホスト部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-207">Gets the host portion of the address specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="4ad06-208"><see cref="P:System.Net.Mail.MailAddress.User" /> プロパティの電子メールを受け入れるホストコンピューターの名前を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-208">A <see cref="T:System.String" /> that contains the name of the host computer that accepts email for the <see cref="P:System.Net.Mail.MailAddress.User" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-209">一般的な電子メールアドレスでは、ホスト文字列に "`@`" 記号に続くすべての情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-209">In a typical email address, the host string includes all information following the "`@`" sign.</span></span> <span data-ttu-id="4ad06-210">たとえば、`"tsmith@contoso.com"`では、ホストが `"contoso.com"`ます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-210">For example, in `"tsmith@contoso.com"`, the host is `"contoso.com"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ad06-211">次のコード例では、電子メールメッセージの送信先を表示します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-211">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="mailAddress.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4ad06-212">このインスタンスの文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-212">Returns a string representation of this instance.</span></span></summary>
        <returns><span data-ttu-id="4ad06-213">この <see cref="T:System.String" /> の内容を格納している <see cref="T:System.Net.Mail.MailAddress" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-213">A <see cref="T:System.String" /> that contains the contents of this <see cref="T:System.Net.Mail.MailAddress" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-214">このメソッドによって返される文字列は、インスタンスの作成時に指定された文字列と必ずしも同じであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="4ad06-214">The string returned by this method is not necessarily identical to the string specified when the instance was created.</span></span> <span data-ttu-id="4ad06-215"><xref:System.Net.Mail.MailAddress.DisplayName%2A> プロパティが `null` ではなく、<xref:System.String.Empty?displayProperty=nameWithType> ("") と等しくない場合、<xref:System.Net.Mail.MailAddress.ToString%2A> は次の構文を使用して構成された文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-215">If the <xref:System.Net.Mail.MailAddress.DisplayName%2A> property is not `null` and not equal to <xref:System.String.Empty?displayProperty=nameWithType> (""), <xref:System.Net.Mail.MailAddress.ToString%2A> returns a string composed using the following syntax:</span></span>  
  
 <span data-ttu-id="4ad06-216"><xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>></span><span class="sxs-lookup"><span data-stu-id="4ad06-216"><xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>></span></span>  
  
 <span data-ttu-id="4ad06-217"><xref:System.Net.Mail.MailAddress.DisplayName%2A> が `null` または <xref:System.String.Empty?displayProperty=nameWithType>に等しい場合、<xref:System.Net.Mail.MailAddress.ToString%2A> は <xref:System.Net.Mail.MailAddress.Address%2A> プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-217">If <xref:System.Net.Mail.MailAddress.DisplayName%2A> is `null` or is equal to <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Net.Mail.MailAddress.ToString%2A> returns the value of the <xref:System.Net.Mail.MailAddress.Address%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ad06-218">次のコード例では、電子メールメッセージの送信先を表示します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-218">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (string address, out System.Net.Mail.MailAddress result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(string address, [out] class System.Net.Mail.MailAddress&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.TryCreate(System.String,System.Net.Mail.MailAddress@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (address As String, ByRef result As MailAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::String ^ address, [Runtime::InteropServices::Out] System::Net::Mail::MailAddress ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : string * MailAddress -&gt; bool" Usage="System.Net.Mail.MailAddress.TryCreate (address, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="result" Type="System.Net.Mail.MailAddress" RefType="out" Index="1" FrameworkAlternate="net-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.Diagnostics.CodeAnalysis.NotNullWhen(true)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (string address, string displayName, out System.Net.Mail.MailAddress result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(string address, string displayName, [out] class System.Net.Mail.MailAddress&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.TryCreate(System.String,System.String,System.Net.Mail.MailAddress@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (address As String, displayName As String, ByRef result As MailAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::String ^ address, System::String ^ displayName, [Runtime::InteropServices::Out] System::Net::Mail::MailAddress ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : string * string * MailAddress -&gt; bool" Usage="System.Net.Mail.MailAddress.TryCreate (address, displayName, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="displayName" Type="System.String" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="result" Type="System.Net.Mail.MailAddress" RefType="out" Index="2" FrameworkAlternate="net-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.Diagnostics.CodeAnalysis.NotNullWhen(true)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="displayName">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (string address, string displayName, System.Text.Encoding displayNameEncoding, out System.Net.Mail.MailAddress result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(string address, string displayName, class System.Text.Encoding displayNameEncoding, [out] class System.Net.Mail.MailAddress&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.TryCreate(System.String,System.String,System.Text.Encoding,System.Net.Mail.MailAddress@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (address As String, displayName As String, displayNameEncoding As Encoding, ByRef result As MailAddress) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::String ^ address, System::String ^ displayName, System::Text::Encoding ^ displayNameEncoding, [Runtime::InteropServices::Out] System::Net::Mail::MailAddress ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : string * string * System.Text.Encoding * MailAddress -&gt; bool" Usage="System.Net.Mail.MailAddress.TryCreate (address, displayName, displayNameEncoding, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" Index="0" FrameworkAlternate="net-5.0" />
        <Parameter Name="displayName" Type="System.String" Index="1" FrameworkAlternate="net-5.0" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" Index="2" FrameworkAlternate="net-5.0" />
        <Parameter Name="result" Type="System.Net.Mail.MailAddress" RefType="out" Index="3" FrameworkAlternate="net-5.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.Diagnostics.CodeAnalysis.NotNullWhen(true)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="displayName">To be added.</param>
        <param name="displayNameEncoding">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ User { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : string" Usage="System.Net.Mail.MailAddress.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4ad06-219">このインスタンスが作成されたときに指定されたアドレスからユーザー情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-219">Gets the user information from the address specified when this instance was created.</span></span></summary>
        <value><span data-ttu-id="4ad06-220"><see cref="T:System.String" /> のユーザー名の部分を格納している <see cref="P:System.Net.Mail.MailAddress.Address" />。</span><span class="sxs-lookup"><span data-stu-id="4ad06-220">A <see cref="T:System.String" /> that contains the user name portion of the <see cref="P:System.Net.Mail.MailAddress.Address" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ad06-221">一般的な電子メールアドレスでは、ユーザー文字列に "`@`" 記号の前にあるすべての情報が含まれます。</span><span class="sxs-lookup"><span data-stu-id="4ad06-221">In a typical email address, the user string includes all information preceding the "`@`" sign.</span></span> <span data-ttu-id="4ad06-222">たとえば、`"tsmith@contoso.com"`では、ユーザーは `"tsmith"`です。</span><span class="sxs-lookup"><span data-stu-id="4ad06-222">For example, in `"tsmith@contoso.com"`, the user is `"tsmith"`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ad06-223">次のコード例では、電子メールメッセージの送信先を表示します。</span><span class="sxs-lookup"><span data-stu-id="4ad06-223">The following code example displays the destination of an email message.</span></span>  
  
 [!code-cpp[NclMailSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
