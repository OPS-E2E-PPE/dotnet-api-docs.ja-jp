<Type Name="IPermission" FullName="System.Security.IPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33aa4a47c14ba4976971832362b895e1e2e516cd" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75068337" /></Metadata><TypeSignature Language="C#" Value="public interface IPermission : System.Security.ISecurityEncodable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPermission implements class System.Security.ISecurityEncodable" />
  <TypeSignature Language="DocId" Value="T:System.Security.IPermission" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPermission&#xA;Implements ISecurityEncodable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPermission : System::Security::ISecurityEncodable" />
  <TypeSignature Language="F#" Value="type IPermission = interface&#xA;    interface ISecurityEncodable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4592-101">アクセス許可の種類によって実装されるメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="c4592-101">Defines methods implemented by permission types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4592-102">共通言語ランタイムのアクセス許可は、指定されたリソースに対してセキュリティで保護できる一連の操作を記述するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c4592-102">Permissions in the common language runtime are objects that describe sets of operations that can be secured for specified resources.</span></span> <span data-ttu-id="c4592-103">アクセス許可オブジェクトでは、セキュリティ制御の対象となる操作またはアクセスが記述されます。アクセスまたは操作を実行する権限を表していません。</span><span class="sxs-lookup"><span data-stu-id="c4592-103">A permission object describes operations or access that is subject to security control; it does not represent access or a right to perform operations.</span></span> <span data-ttu-id="c4592-104">アクセス許可は、次の方法でアプリケーションコードと .NET Framework セキュリティシステムの両方で使用されます。</span><span class="sxs-lookup"><span data-stu-id="c4592-104">Permissions are used by both application code and the .NET Framework security system in the following ways.</span></span>  
  
-   <span data-ttu-id="c4592-105">コードは、実行するために必要なアクセス許可を要求します。</span><span class="sxs-lookup"><span data-stu-id="c4592-105">Code requests the permissions it needs in order to run.</span></span>  
  
-   <span data-ttu-id="c4592-106">セキュリティシステムポリシーは、コードを実行するためのアクセス許可をコードに付与します。</span><span class="sxs-lookup"><span data-stu-id="c4592-106">The security system policy grants permissions to code in order for it to run.</span></span>  
  
-   <span data-ttu-id="c4592-107">コードを呼び出すコードでは、アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="c4592-107">Code demands that calling code has a permission.</span></span>  
  
-   <span data-ttu-id="c4592-108">コードは、アサート/拒否/許可のみを使用して、セキュリティスタックをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="c4592-108">Code overrides the security stack using assert/deny/permit-only.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4592-109">新しいアクセス許可を作成する場合は、このインターフェイスをクラスに実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4592-109">If you write a new permission, you must implement this interface in your class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4592-110">複数のスレッドからアクセス許可にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="c4592-110">A permission can be accessed by multiple threads.</span></span> <span data-ttu-id="c4592-111">このインターフェイスを実装する場合は、<xref:System.Security.IPermission.IsSubsetOf%2A>、<xref:System.Security.IPermission.Intersect%2A>、<xref:System.Security.IPermission.Union%2A>、および <xref:System.Security.IPermission.Copy%2A> メソッドの実装がスレッドセーフであることを保証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4592-111">When implementing this interface, you must guarantee that the <xref:System.Security.IPermission.IsSubsetOf%2A>, <xref:System.Security.IPermission.Intersect%2A>, <xref:System.Security.IPermission.Union%2A>, and <xref:System.Security.IPermission.Copy%2A> method implementations are thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4592-112">この例では、コードアクセスセキュリティで使用するアクセス許可クラスを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="c4592-112">This example shows how to define a permission class for use with code access security.</span></span> <span data-ttu-id="c4592-113">必要なすべてのアクセス許可インターフェイスが実装されます。</span><span class="sxs-lookup"><span data-stu-id="c4592-113">All of the necessary permission interfaces are implemented.</span></span>  
  
 [!code-cpp[Permission#1](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#1)]
 [!code-csharp[Permission#1](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#1)]
 [!code-vb[Permission#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission" Usage="iPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4592-114">現在のアクセス許可の同一のコピーを作成して返します。</span><span class="sxs-lookup"><span data-stu-id="c4592-114">Creates and returns an identical copy of the current permission.</span></span></summary>
        <returns><span data-ttu-id="c4592-115">現在のアクセス許可のコピー。</span><span class="sxs-lookup"><span data-stu-id="c4592-115">A copy of the current permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4592-116">アクセス許可のコピーは、元のアクセス許可と同じリソースへのアクセスを表します。</span><span class="sxs-lookup"><span data-stu-id="c4592-116">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4592-117">次のコード例は、<xref:System.Security.IPermission.Copy%2A> メソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4592-117">The following code example demonstrates implementing the <xref:System.Security.IPermission.Copy%2A> method.</span></span> <span data-ttu-id="c4592-118">このコード例は、<xref:System.Security.IPermission> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="c4592-118">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#4](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#4)]
 [!code-csharp[Permission#4](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#4)]
 [!code-vb[Permission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Demand();" />
      <MemberSignature Language="F#" Value="abstract member Demand : unit -&gt; unit" Usage="iPermission.Demand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4592-119">セキュリティ要件が満たされない場合、実行時に <see cref="T:System.Security.SecurityException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="c4592-119">Throws a <see cref="T:System.Security.SecurityException" /> at run time if the security requirement is not met.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4592-120">このメソッドは、通常、呼び出し元にリソースへのアクセス許可があることを保証するために、安全なライブラリによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="c4592-120">This method is typically used by secure libraries to ensure that callers have permission to access a resource.</span></span> <span data-ttu-id="c4592-121">たとえば、セキュリティで保護されたクラスライブラリ内のファイルクラスは、呼び出し元によって要求されたファイル操作を実行する前に、必要な <xref:System.Security.Permissions.FileIOPermission> に対して <xref:System.Security.CodeAccessPermission.Demand%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c4592-121">For example, a file class in a secure class library calls <xref:System.Security.CodeAccessPermission.Demand%2A> for the necessary <xref:System.Security.Permissions.FileIOPermission> before performing a file operation requested by the caller.</span></span>  
  
 <span data-ttu-id="c4592-122">このインターフェイスメソッドを実装するクラスの大部分は、完全なスタックウォークを実行することによってセキュリティ条件を満たすため、必ずしもスタックウォークが実行されるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="c4592-122">Although the majority of the classes that implement this interface method satisfy the security criteria by performing a full stack walk, a stack walk is not necessarily performed.</span></span> <span data-ttu-id="c4592-123">スタックウォークを実行しない実装の例としては、<xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>があります。</span><span class="sxs-lookup"><span data-stu-id="c4592-123">An example of an implementation that does not perform a stack walk is <xref:System.Security.Permissions.PrincipalPermission.Demand%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c4592-124">スタックウォークを実行すると、このメソッドを呼び出すコードのアクセス許可は検査されません。このチェックは、そのコードの直前の呼び出し元から開始され、スタックを進めます。</span><span class="sxs-lookup"><span data-stu-id="c4592-124">When a stack walk is performed, the permissions of the code that calls this method are not examined; the check begins from the immediate caller of that code and proceeds up the stack.</span></span> <span data-ttu-id="c4592-125">呼び出し履歴は、通常、コールスタックの上位にあるメソッドが呼び出し履歴の下位にあるメソッドを呼び出すように、拡張ダウンとして表されます。</span><span class="sxs-lookup"><span data-stu-id="c4592-125">The call stack is typically represented as growing down, so that methods higher in the call stack call methods lower in the call stack.</span></span> <span data-ttu-id="c4592-126"><xref:System.Security.CodeAccessPermission.Demand%2A> は、<xref:System.Security.SecurityException> が発生しなかった場合にのみ成功します。</span><span class="sxs-lookup"><span data-stu-id="c4592-126"><xref:System.Security.CodeAccessPermission.Demand%2A> succeeds only if no <xref:System.Security.SecurityException> is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="iPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c4592-127">現在のアクセス許可との共通部分のあるアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="c4592-127">A permission to intersect with the current permission.</span></span> <span data-ttu-id="c4592-128">これは、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="c4592-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="c4592-129">現在のアクセス許可と指定したアクセス許可の積集合となるアクセス許可を作成して返します。</span><span class="sxs-lookup"><span data-stu-id="c4592-129">Creates and returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="c4592-130">現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="c4592-130">A new permission that represents the intersection of the current permission and the specified permission.</span></span> <span data-ttu-id="c4592-131">積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c4592-131">This new permission is <see langword="null" /> if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4592-132">2つのアクセス許可の積集合は、両方が共通で記述する一連の操作を記述するアクセス許可です。</span><span class="sxs-lookup"><span data-stu-id="c4592-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="c4592-133">両方の元のアクセス許可を渡す要求だけが、積集合を渡します。</span><span class="sxs-lookup"><span data-stu-id="c4592-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="c4592-134">次のステートメントは、<xref:System.Security.IPermission.Intersect%2A> メソッドのすべての実装に対して true である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4592-134">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="c4592-135">`X` と `Y` は `null`ない <xref:System.Security.IPermission> オブジェクト参照を表します。</span><span class="sxs-lookup"><span data-stu-id="c4592-135">`X` and `Y` represent <xref:System.Security.IPermission> object references that are not `null`.</span></span>  
  
-   <span data-ttu-id="c4592-136">`X`。Intersect (`X`) は、`X`に等しい値を返します。</span><span class="sxs-lookup"><span data-stu-id="c4592-136">`X`.Intersect(`X`) returns a value equal to `X`.</span></span>  
  
-   <span data-ttu-id="c4592-137">`X`。Intersect (`Y`) は `Y`と同じ値を返します。Intersect (`X`)。</span><span class="sxs-lookup"><span data-stu-id="c4592-137">`X`.Intersect(`Y`) returns the same value as `Y`.Intersect(`X`).</span></span>  
  
-   <span data-ttu-id="c4592-138">`X`。Intersect (`null`) は `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="c4592-138">`X`.Intersect(`null`) returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4592-139">次のコード例は、<xref:System.Security.IPermission.Intersect%2A> メソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4592-139">The following code example demonstrates implementing the <xref:System.Security.IPermission.Intersect%2A> method.</span></span> <span data-ttu-id="c4592-140">このコード例は、<xref:System.Security.IPermission> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="c4592-140">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#2](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#2)]
 [!code-csharp[Permission#2](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#2)]
 [!code-vb[Permission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4592-141"><paramref name="target" /> パラメーターは <see langword="null" /> ではなく、現在のアクセス許可と同じクラスのインスタンスでもありません。</span><span class="sxs-lookup"><span data-stu-id="c4592-141">The <paramref name="target" /> parameter is not <see langword="null" /> and is not an instance of the same class as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="iPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c4592-142">サブセットの関係にあるかどうかをテストするアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="c4592-142">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="c4592-143">このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="c4592-143">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="c4592-144">現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c4592-144">Determines whether the current permission is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="c4592-145">現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c4592-145"><see langword="true" /> if the current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4592-146">現在のアクセス許可が、指定したアクセス許可によって完全に含まれる一連の操作を指定している場合、現在のアクセス許可は、指定したアクセス許可のサブセットになります。</span><span class="sxs-lookup"><span data-stu-id="c4592-146">The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="c4592-147">たとえば、C:\example.txt へのアクセスを表すアクセス許可は、C:\\へのアクセスを表すアクセス許可のサブセットです。</span><span class="sxs-lookup"><span data-stu-id="c4592-147">For example, a permission that represents access to C:\example.txt is a subset of a permission that represents access to C:\\.</span></span> <span data-ttu-id="c4592-148">このメソッドが `true`を返す場合、現在のアクセス許可は、指定されたアクセス許可よりも保護されたリソースへのアクセスを許可しません。</span><span class="sxs-lookup"><span data-stu-id="c4592-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="c4592-149">次のステートメントは、<xref:System.Security.IPermission.IsSubsetOf%2A> メソッドのすべての実装に対して true である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4592-149">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="c4592-150">`X`、`Y`、および `Z` は、`null`されていない <xref:System.Security.IPermission> オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="c4592-150">`X`, `Y`, and `Z` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="c4592-151">`X`。IsSubsetOf (`X`) は `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="c4592-151">`X`.IsSubsetOf(`X`) returns `true`.</span></span>  
  
-   <span data-ttu-id="c4592-152">`X`。IsSubsetOf (`Y`) は `Y`と同じ値を返します。IsSubsetOf (`X`)。 `X` と `Y` が同じ権限のセットを表している場合に限ります。</span><span class="sxs-lookup"><span data-stu-id="c4592-152">`X`.IsSubsetOf(`Y`) returns the same value as `Y`.IsSubsetOf(`X`) if and only if `X` and `Y` represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="c4592-153">`X`の場合。IsSubsetOf (`Y`) と `Y`。IsSubsetOf (`Z`) はどちらも `true`、`X`を返します。IsSubsetOf (`Z`) は `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="c4592-153">If `X`.IsSubsetOf(`Y`) and `Y`.IsSubsetOf(`Z`) both return `true`, `X`.IsSubsetOf(`Z`) returns `true`.</span></span>  
  
 <span data-ttu-id="c4592-154">`X` が <xref:System.Security.Permissions.PermissionState.None> のアクセス許可状態を持つ空の <xref:System.Security.IPermission> オブジェクトを表し、`Y` が <xref:System.Security.IPermission> の `null`オブジェクトを表す場合は。IsSubsetOf (`Y`) は `true`を返します。`X`</span><span class="sxs-lookup"><span data-stu-id="c4592-154">If `X` represents an empty <xref:System.Security.IPermission> object with a permission state of <xref:System.Security.Permissions.PermissionState.None> and `Y` represents an <xref:System.Security.IPermission> object that is `null`, `X`.IsSubsetOf(`Y`) returns `true`.</span></span> <span data-ttu-id="c4592-155">`Z` も空の権限である場合、複合セット操作は `X`ます。Union (Z)。IsSubsetOf (Y) も `true` を返します。これは、2つの空の権限の和集合が空の権限であるためです。</span><span class="sxs-lookup"><span data-stu-id="c4592-155">If `Z` is also an empty permission, the compound set operation `X`.Union(Z).IsSubsetOf(Y) also returns `true` because the union of two empty permissions is an empty permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4592-156">次のコード例は、<xref:System.Security.IPermission.IsSubsetOf%2A> メソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4592-156">The following code example demonstrates implementing the <xref:System.Security.IPermission.IsSubsetOf%2A> method.</span></span> <span data-ttu-id="c4592-157">このコード例は、<xref:System.Security.IPermission> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="c4592-157">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#3](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#3)]
 [!code-csharp[Permission#3](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#3)]
 [!code-vb[Permission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4592-158"><paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</span><span class="sxs-lookup"><span data-stu-id="c4592-158">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.IPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="iPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c4592-159">現在のアクセス許可と結合するアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="c4592-159">A permission to combine with the current permission.</span></span> <span data-ttu-id="c4592-160">これは、現在のアクセス許可と同じ型であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="c4592-160">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="c4592-161">現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</span><span class="sxs-lookup"><span data-stu-id="c4592-161">Creates a permission that is the union of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="c4592-162">現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</span><span class="sxs-lookup"><span data-stu-id="c4592-162">A new permission that represents the union of the current permission and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4592-163"><xref:System.Security.IPermission.Union%2A> の呼び出しの結果は、現在のアクセス許可と指定したアクセス許可の両方によって表されるすべての操作を表すアクセス許可です。</span><span class="sxs-lookup"><span data-stu-id="c4592-163">The result of a call to <xref:System.Security.IPermission.Union%2A> is a permission that represents all the operations represented by both the current permission and the specified permission.</span></span> <span data-ttu-id="c4592-164">いずれかのアクセス許可を渡す要求では、その共用体が渡されます。</span><span class="sxs-lookup"><span data-stu-id="c4592-164">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="c4592-165">次のステートメントは、<xref:System.Security.IPermission.Union%2A> メソッドのすべての実装に対して true である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c4592-165">The following statements are required to be true for all implementations of the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="c4592-166">`X` と `Y` は `null`ない <xref:System.Security.IPermission> オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="c4592-166">`X` and `Y` represent <xref:System.Security.IPermission> objects that are not `null`.</span></span>  
  
-   <span data-ttu-id="c4592-167">`X`。Union (`X`) は `X`と同じ値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="c4592-167">`X`.Union(`X`) returns an object that has the same value as `X`.</span></span>  
  
-   <span data-ttu-id="c4592-168">`X`。Union (`Y`) は、`Y`によって返されたオブジェクトと同じ値を持つオブジェクトを返します。Union (`X`)。</span><span class="sxs-lookup"><span data-stu-id="c4592-168">`X`.Union(`Y`) returns an object that has the same value as the object returned by `Y`.Union(`X`).</span></span>  
  
-   <span data-ttu-id="c4592-169">`X`。Union (`null`) は `X`と同じ値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="c4592-169">`X`.Union(`null`) returns an object that has the same value as `X`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4592-170">次のコード例は、<xref:System.Security.IPermission.Union%2A> メソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c4592-170">The following code example demonstrates implementing the <xref:System.Security.IPermission.Union%2A> method.</span></span> <span data-ttu-id="c4592-171">このコード例は、<xref:System.Security.IPermission> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="c4592-171">This code example is part of a larger example provided for the <xref:System.Security.IPermission> class.</span></span>  
  
 [!code-cpp[Permission#5](~/samples/snippets/cpp/VS_Snippets_CLR/Permission/cpp/Permission.cpp#5)]
 [!code-csharp[Permission#5](~/samples/snippets/csharp/VS_Snippets_CLR/Permission/CS/Permission.cs#5)]
 [!code-vb[Permission#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Permission/vb/permission.vb#5)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c4592-172"><paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</span><span class="sxs-lookup"><span data-stu-id="c4592-172">The <paramref name="target" /> parameter is not <see langword="null" /> and is not of the same type as the current permission.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
