<Type Name="SecurityState" FullName="System.Security.SecurityState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f73fb7d0b21b86743d8db264b4731efbbbbe9402" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77219173" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityState extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.SecurityState" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityState" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityState abstract" />
  <TypeSignature Language="F#" Value="type SecurityState = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="82295-101"><see cref="T:System.AppDomainManager" /> オブジェクトからアクションのセキュリティ ステータスを要求するための基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="82295-101">Provides a base class for requesting the security status of an action from the <see cref="T:System.AppDomainManager" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82295-102">実行するセキュリティを重視したアクションを指定するプロパティを含むクラスを提供するには、このクラスから継承する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82295-102">You must inherit from this class to provide a class that includes a property that specifies the security-sensitive action to be performed.</span></span> <span data-ttu-id="82295-103">派生クラスからインスタンス化された <xref:System.Security.SecurityState> オブジェクトは <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> メソッドに渡され、ホストがそのアクションを実行できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="82295-103">The <xref:System.Security.SecurityState> object that is instantiated from the derived class is passed to the <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> method to determine whether the host allows that action to be performed.</span></span> <span data-ttu-id="82295-104"><xref:System.AppDomainManager.CheckSecuritySettings%2A> メソッドの既定の実装では、常に `false`が返されます。</span><span class="sxs-lookup"><span data-stu-id="82295-104">The default implementation of the <xref:System.AppDomainManager.CheckSecuritySettings%2A> method always returns `false`.</span></span>  <span data-ttu-id="82295-105">許可されているアクションを検出するには、メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="82295-105">The method must be overridden to detect the actions that are allowed.</span></span>  
  
 <span data-ttu-id="82295-106">たとえば、ライブラリコードで Web カメラにアクセスする場合は、次の例に示すように、`WebcamSecurityState` オブジェクトを作成し、<xref:System.Security.SecurityState.EnsureState%2A> メソッドを呼び出して、ホストが Web カメラへのアクセスを許可しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="82295-106">For example, if you want to access a Web camera in your library code, you would create a `WebcamSecurityState` object and call the <xref:System.Security.SecurityState.EnsureState%2A> method to determine whether the host allows Web camera access, as shown in the following example.</span></span>  <span data-ttu-id="82295-107">(`WebcamSecurityState` のコードについては、「例」セクションを参照してください)。</span><span class="sxs-lookup"><span data-stu-id="82295-107">(You can find the code for `WebcamSecurityState` in the "Example" section.)</span></span>  
  
```csharp
var securityState = new WebcamSecurityState("Safe access to Webcam", WebcamSecurityOptions.SafeAccess);  
try  
{  
    securityState.EnsureState();  
    // Allocate memory.  
}  
catch (ApplicationException e)  
{  
    // Handle any exception that is thrown.  
    System.Diagnostics.Debug.WriteLine(e.Message);  
}  
```  
  
 <span data-ttu-id="82295-108">呼び出しを処理するには、次の例に示すように、<xref:System.AppDomainManager> が <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> メソッドのオーバーライドによって `WebcamSecurityState` を認識している必要があります。</span><span class="sxs-lookup"><span data-stu-id="82295-108">To process the call the <xref:System.AppDomainManager> must be made aware of `WebcamSecurityState` through an override of the <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> method, as shown in the following example.</span></span>  
  
```csharp
[SecurityCritical]  
public override bool CheckSecuritySettings(System.Security.SecurityState securityState)  
{  
    switch (securityState.ToString())  
    {  
        case "WebcamSecurityState":  
        {  
            if ((securityState as WebcamSecurityState).Options == WebcamSecurityOptions.SafeAccess)  
                return PromptUser((securityState as WebcamSecurityState).Description);  
            return false;  
        }  
    }  
    return false;  
}  
private bool PromptUser(string text)  
{  
    // Replace the OpenFileDialog with a custom user prompt.  
    OpenFileDialog o = new OpenFileDialog();  
    o.Title = text;  
    if (o.ShowDialog() == DialogResult.OK)  
        return true;  
    else  
        return false;  
}   
```  
  
   
  
## Examples  
 <span data-ttu-id="82295-109">次の例は、<xref:System.Security.SecurityState> クラスをオーバーライドする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="82295-109">The following example shows how to override the <xref:System.Security.SecurityState> class.</span></span>  
  
```csharp
[SecurityCritical]  
public enum WebcamSecurityOptions
{
    SafeAccess,  
    FullAccess  
}  
[SecurityCritical]  
public class WebcamSecurityState : SecurityState  
{  
    public WebcamSecurityState(string description, WebcamSecurityOptions options)  
    {  
        Options = options;  
        Description = description;  
    }  
    public WebcamSecurityOptions Options { get; set; }  
    public string Description { get; set; }  
    public override void EnsureState()  
    {  
        if (!IsStateAvailable())  
            throw new ApplicationException("WebcamSecurityState not available");  
    }  
}    
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82295-110"><see cref="T:System.Security.SecurityState" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="82295-110">Initializes a new instance of the <see cref="T:System.Security.SecurityState" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureState">
      <MemberSignature Language="C#" Value="public abstract void EnsureState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityState.EnsureState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EnsureState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EnsureState();" />
      <MemberSignature Language="F#" Value="abstract member EnsureState : unit -&gt; unit" Usage="securityState.EnsureState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82295-111">派生クラスでオーバーライドしたとき、<see cref="T:System.Security.SecurityState" /> で表される状態をホストで確実に使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="82295-111">When overridden in a derived class, ensures that the state that is represented by <see cref="T:System.Security.SecurityState" /> is available on the host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82295-112">このメソッドの実装は、次の例のようになります。</span><span class="sxs-lookup"><span data-stu-id="82295-112">The implementation of this method should be similar to the following example.</span></span>  
  
```csharp
public override void EnsureState()  
{  
    if (!IsStateAvailable())  
          throw new ApplicationException("WebcamSecurityState not available");  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStateAvailable">
      <MemberSignature Language="C#" Value="public bool IsStateAvailable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStateAvailable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.SecurityState.IsStateAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStateAvailable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStateAvailable();" />
      <MemberSignature Language="F#" Value="member this.IsStateAvailable : unit -&gt; bool" Usage="securityState.IsStateAvailable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82295-113"><see cref="T:System.Security.SecurityState" /> クラスの実装の状態が現在のホストで使用できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="82295-113">Gets a value that indicates whether the state for this implementation of the <see cref="T:System.Security.SecurityState" /> class is available on the current host.</span></span></summary>
        <returns><span data-ttu-id="82295-114">状態が使用可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="82295-114"><see langword="true" /> if the state is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82295-115"><xref:System.Security.SecurityState.IsStateAvailable%2A> は、このクラスによって表される状態がホストで使用できるかどうかを判断するために、<xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="82295-115"><xref:System.Security.SecurityState.IsStateAvailable%2A> calls the <xref:System.AppDomainManager.CheckSecuritySettings%2A?displayProperty=nameWithType> method to determine whether the state that is represented by this class is available on the host.</span></span>  
  
 <span data-ttu-id="82295-116"><xref:System.AppDomainManager.CheckSecuritySettings%2A> メソッドの実装例については、<xref:System.Security.SecurityState> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="82295-116">See the <xref:System.Security.SecurityState> class for an example implementation of the <xref:System.AppDomainManager.CheckSecuritySettings%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
