<Type Name="MetadataReaderProvider" FullName="System.Reflection.Metadata.MetadataReaderProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="243154fea080bbe6f3e4d5f28527a38d95d5d746" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75100902" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataReaderProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataReaderProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.MetadataReaderProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataReaderProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataReaderProvider sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type MetadataReaderProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ea8e9-101">バイト配列、メモリ ブロック、またはストリームに格納されているメタデータに <see cref="T:System.Reflection.Metadata.MetadataReader" /> を提供します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-101">Provides a <see cref="T:System.Reflection.Metadata.MetadataReader" /> for metadata stored in an array of bytes, a memory block, or a stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ea8e9-102">`MetadataReaderProvider` は、次の形式をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-102">`MetadataReaderProvider` supports the following formats:</span></span>

 - <span data-ttu-id="ea8e9-103">ECMA-335 CLI (共通言語基盤) メタデータ (<xref:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)>)。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-103">ECMA-335 CLI (Common Language Infrastructure) metadata (<xref:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)>).</span></span>
 - <span data-ttu-id="ea8e9-104">エディットコンティニュメタデータデルタ (<xref:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)>)。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-104">Edit and Continue metadata delta (<xref:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)>).</span></span>
 - <span data-ttu-id="ea8e9-105">ポータブル PDB メタデータ (<xref:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Byte*,System.Int32)>)。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-105">Portable PDB metadata (<xref:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Byte*,System.Int32)>).</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="metadataReaderProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea8e9-106">リーダーによって割り当てられたすべてのメモリを破棄します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-106">Disposes all memory allocated by the reader.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ea8e9-107"><xref:System.Reflection.Metadata.MetadataReaderProvider.Dispose> は複数回呼び出すことができますが (並列ではありません)。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-107"><xref:System.Reflection.Metadata.MetadataReaderProvider.Dispose> can be called multiple times (but not in parallel).</span></span>

<span data-ttu-id="ea8e9-108"><xref:System.Reflection.Metadata.MetadataReaderProvider> に対する他の操作と並行して <xref:System.Reflection.Metadata.MetadataReaderProvider.Dispose> を呼び出したり、基になるメモリから読み取りを行ったりすることは安全ではありません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-108">It is not safe to call <xref:System.Reflection.Metadata.MetadataReaderProvider.Dispose> in parallel with any other operation on the <xref:System.Reflection.Metadata.MetadataReaderProvider> or when reading from the underlying memory.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromMetadataImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="ea8e9-109">メタデータのイメージ。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-109">Metadata image.</span></span></param>
        <summary><span data-ttu-id="ea8e9-110">バイト配列に対してプロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-110">Creates a provider over a byte array.</span></span></summary>
        <returns><span data-ttu-id="ea8e9-111">新しいプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-111">The new provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ea8e9-112">イメージの内容は、<xref:System.Reflection.Metadata.MetadataReaderProvider>の作成時には読み取られません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-112">The content of the image is not read during the construction of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea8e9-113"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-113"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromMetadataImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromMetadataImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="ea8e9-114">メタデータの BLOB の先頭へのポインター。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-114">Pointer to the start of the metadata blob.</span></span></param>
        <param name="size"><span data-ttu-id="ea8e9-115">メタデータの BLOB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-115">The size of the metadata blob.</span></span></param>
        <summary><span data-ttu-id="ea8e9-116">メモリに格納されているイメージのメタデータ プロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-116">Creates a metadata provider over an image stored in memory.</span></span></summary>
        <returns><span data-ttu-id="ea8e9-117">新しいメタデータ プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-117">The new metadata provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ea8e9-118">メモリは呼び出し元によって所有されており、<xref:System.Reflection.Metadata.MetadataReaderProvider>の破棄時に解放されることはありません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-118">The memory is owned by the caller and is not released on disposal of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span>

<span data-ttu-id="ea8e9-119">呼び出し元は、メモリを保持し、<xref:System.Reflection.Metadata.MetadataReaderProvider>の有効期間全体にわたって変更されないようにする責任があります。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-119">The caller is responsible for keeping the memory alive and unmodified throughout the lifetime of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span>

<span data-ttu-id="ea8e9-120">Blob の内容は、<xref:System.Reflection.Metadata.MetadataReaderProvider>の構築時に読み取られることはありません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-120">The content of the blob is not read during the construction of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea8e9-121"><paramref name="start" /> は <see cref="F:System.IntPtr.Zero" /> です。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-121"><paramref name="start" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ea8e9-122"><paramref name="size" /> は負の値です。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-122"><paramref name="size" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromMetadataStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromMetadataStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromMetadataStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromMetadataStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="ea8e9-123"><see cref="T:System.IO.Stream" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-123">A <see cref="T:System.IO.Stream" /> instance.</span></span></param>
        <param name="options"><span data-ttu-id="ea8e9-124">ストリームから、イメージのセクションを読み取る方法を指定するオプション。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-124">Options specifying how sections of the image are read from the stream.</span></span></param>
        <param name="size"><span data-ttu-id="ea8e9-125">ストリームのメタデータ BLOB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-125">Size of the metadata blob in the stream.</span></span> <span data-ttu-id="ea8e9-126">指定しない場合、メタデータ BLOB はストリームの末尾まで広がると見なされます。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-126">If not specified, the metadata blob is assumed to span to the end of the stream.</span></span></param>
        <summary><span data-ttu-id="ea8e9-127">現在の位置を起点とする指定されたサイズのストリームのプロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-127">Creates a provider for a stream of the specified size beginning at its current position.</span></span></summary>
        <returns><span data-ttu-id="ea8e9-128">新しいプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-128">The new provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="ea8e9-129"><xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> が指定されていない限り、成功した引数の検証時にストリームの所有権が <xref:System.Reflection.Metadata.MetadataReaderProvider> に転送されます。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-129">Unless <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> is specified, ownership of the stream is transferred to the <xref:System.Reflection.Metadata.MetadataReaderProvider> upon successful argument validation.</span></span> <span data-ttu-id="ea8e9-130">これは <xref:System.Reflection.Metadata.MetadataReaderProvider>によって破棄され、呼び出し元は操作できません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-130">It will be disposed by the <xref:System.Reflection.Metadata.MetadataReaderProvider>, and the caller must not manipulate it.</span></span>
            
<span data-ttu-id="ea8e9-131"><xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType> が指定されていない限り、<xref:System.Reflection.Metadata.MetadataReaderProvider>の構築時にストリームからデータが読み取られません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-131">Unless <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType> is specified, no data is read from the stream during construction of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span> <span data-ttu-id="ea8e9-132">さらに、<xref:System.Reflection.Metadata.MetadataReaderProvider> が有効になっていて破棄されていない場合、ストリームは呼び出し元によって操作されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-132">Furthermore, the stream must not be manipulated by caller while the <xref:System.Reflection.Metadata.MetadataReaderProvider> is alive and undisposed.</span></span>
            
<span data-ttu-id="ea8e9-133"><xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>場合、<xref:System.Reflection.Metadata.MetadataReaderProvider> は構築中に要求されたすべてのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-133">If <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>, the <xref:System.Reflection.Metadata.MetadataReaderProvider> will have read all of the data requested during construction.</span></span> <span data-ttu-id="ea8e9-134">そのため <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> が指定されている場合、呼び出し元はストリームの完全な所有権を保持し、構築後に <xref:System.Reflection.Metadata.MetadataReaderProvider> によって操作されないことを保証します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-134">As such, if <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> is also specified, the caller retains full ownership of the stream and is assured that it will not be manipulated by the <xref:System.Reflection.Metadata.MetadataReaderProvider> after construction.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea8e9-135"><paramref name="stream" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-135"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ea8e9-136"><paramref name="stream" /> は読み取りとシークの操作をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-136"><paramref name="stream" /> doesn't support read and seek operations.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ea8e9-137">サイズは負の値になるか、ストリームの末尾を超えます。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-137">Size is negative or extends past the end of the stream.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ea8e9-138">ストリームからの読み取り中のエラー (<see cref="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata" /> が指定されている場合のみ)。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-138">Error reading from the stream (only when <see cref="F:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata" /> is specified).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPortablePdbImage (image As ImmutableArray(Of Byte)) As MetadataReaderProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; image);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="ea8e9-139">ポータブル PDB イメージ。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-139">A portable PDB image.</span></span></param>
        <summary><span data-ttu-id="ea8e9-140">バイト配列に対して、ポータブル PDB のメタデータ プロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-140">Creates a portable PDB metadata provider over a byte array.</span></span></summary>
        <returns><span data-ttu-id="ea8e9-141">新しいポータブル PDB のメタデータ プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-141">The new portable PDB metadata provider .</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ea8e9-142">イメージの内容は、<xref:System.Reflection.Metadata.MetadataReaderProvider>の作成時には読み取られません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-142">The content of the image is not read during the construction of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea8e9-143"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-143"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbImage">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage (byte* start, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbImage(unsigned int8* start, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Metadata::MetadataReaderProvider ^ FromPortablePdbImage(System::Byte* start, int size);" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbImage : nativeptr&lt;byte&gt; * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbImage (start, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Byte*" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="ea8e9-144">ポータブル PDB の BLOB の先頭へのポインター。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-144">Pointer to the start of the portable PDB blob.</span></span></param>
        <param name="size"><span data-ttu-id="ea8e9-145">ポータブル PDB の BLOB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-145">The size of the portable PDB blob.</span></span></param>
        <summary><span data-ttu-id="ea8e9-146">メモリに格納された BLOB に対して、ポータブル PDB のメタデータ プロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-146">Creates a portable PDB metadata provider over a blob stored in memory.</span></span></summary>
        <returns><span data-ttu-id="ea8e9-147">新しいポータブル PDB のメタデータ プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-147">The new portable PDB metadata provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ea8e9-148">メモリは呼び出し元によって所有されており、<xref:System.Reflection.Metadata.MetadataReaderProvider>の破棄時に解放されません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-148">The memory is owned by the caller and not released on disposal of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span>

<span data-ttu-id="ea8e9-149">呼び出し元は、メモリを保持し、<xref:System.Reflection.Metadata.MetadataReaderProvider>の有効期間全体にわたって変更されないようにする責任があります。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-149">The caller is responsible for keeping the memory alive and unmodified throughout the lifetime of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span>

<span data-ttu-id="ea8e9-150">Blob の内容は、<xref:System.Reflection.Metadata.MetadataReaderProvider>の構築時に読み取られることはありません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-150">The content of the blob is not read during the construction of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea8e9-151"><paramref name="start" /> は <see cref="F:System.IntPtr.Zero" /> です。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-151"><paramref name="start" /> is <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ea8e9-152"><paramref name="size" /> は負の値です。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-152"><paramref name="size" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromPortablePdbStream">
      <MemberSignature Language="C#" Value="public static System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream (System.IO.Stream stream, System.Reflection.Metadata.MetadataStreamOptions options = System.Reflection.Metadata.MetadataStreamOptions.Default, int size = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Metadata.MetadataReaderProvider FromPortablePdbStream(class System.IO.Stream stream, valuetype System.Reflection.Metadata.MetadataStreamOptions options, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream(System.IO.Stream,System.Reflection.Metadata.MetadataStreamOptions,System.Int32)" />
      <MemberSignature Language="F#" Value="static member FromPortablePdbStream : System.IO.Stream * System.Reflection.Metadata.MetadataStreamOptions * int -&gt; System.Reflection.Metadata.MetadataReaderProvider" Usage="System.Reflection.Metadata.MetadataReaderProvider.FromPortablePdbStream (stream, options, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReaderProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataStreamOptions" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="ea8e9-153">ストリーム。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-153">The stream.</span></span></param>
        <param name="options"><span data-ttu-id="ea8e9-154">ストリームから、イメージのセクションを読み取る方法を指定するオプション。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-154">Options specifying how sections of the image are read from the stream.</span></span></param>
        <param name="size"><span data-ttu-id="ea8e9-155">ストリームのメタデータ BLOB のサイズ。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-155">Size of the metadata blob in the stream.</span></span> <span data-ttu-id="ea8e9-156">指定しない場合、メタデータ BLOB はストリームの末尾まで広がると見なされます。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-156">If not specified, the metadata blob is assumed to span to the end of the stream.</span></span></param>
        <summary><span data-ttu-id="ea8e9-157">現在の位置を起点とする指定されたサイズのストリームのプロバイダーを作成します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-157">Creates a provider for a stream of the specified size beginning at its current position.</span></span></summary>
        <returns><span data-ttu-id="ea8e9-158"><see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-158">A <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
            
<span data-ttu-id="ea8e9-159"><xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> が指定されていない限り、成功した引数の検証時にストリームの所有権が <xref:System.Reflection.Metadata.MetadataReaderProvider> に転送されます。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-159">Unless <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> is specified, ownership of the stream is transferred to the <xref:System.Reflection.Metadata.MetadataReaderProvider> upon successful argument validation.</span></span> <span data-ttu-id="ea8e9-160">これは <xref:System.Reflection.Metadata.MetadataReaderProvider>によって破棄され、呼び出し元は操作できません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-160">It will be disposed by the <xref:System.Reflection.Metadata.MetadataReaderProvider>, and the caller must not manipulate it.</span></span>
            
<span data-ttu-id="ea8e9-161"><xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType> が指定されていない限り、<xref:System.Reflection.Metadata.MetadataReaderProvider>の構築時にストリームからデータが読み取られません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-161">Unless <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType> is specified, no data is read from the stream during the construction of the <xref:System.Reflection.Metadata.MetadataReaderProvider>.</span></span> <span data-ttu-id="ea8e9-162">さらに、<xref:System.Reflection.Metadata.MetadataReaderProvider> が有効になっていて破棄されていない場合、ストリームは呼び出し元によって操作されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-162">Furthermore, the stream must not be manipulated by caller while the <xref:System.Reflection.Metadata.MetadataReaderProvider> is alive and undisposed.</span></span>
            
<span data-ttu-id="ea8e9-163"><xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>場合、<xref:System.Reflection.Metadata.MetadataReaderProvider> は構築中に要求されたすべてのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-163">If <xref:System.Reflection.Metadata.MetadataStreamOptions.PrefetchMetadata?displayProperty=nameWithType>, the <xref:System.Reflection.Metadata.MetadataReaderProvider> will have read all of the data requested during construction.</span></span> <span data-ttu-id="ea8e9-164">そのため <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> が指定されている場合、呼び出し元はストリームの完全な所有権を保持し、構築後に <xref:System.Reflection.Metadata.MetadataReaderProvider> によって操作されないことを保証します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-164">As such, if <xref:System.Reflection.Metadata.MetadataStreamOptions.LeaveOpen?displayProperty=nameWithType> is also specified, the caller retains full ownership of the stream and is assured that it will not be manipulated by the <xref:System.Reflection.Metadata.MetadataReaderProvider> after construction.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea8e9-165"><paramref name="stream" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-165"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ea8e9-166"><paramref name="stream" /> は読み取りとシークの操作をサポートしません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-166"><paramref name="stream" /> doesn't support read and seek operations.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ea8e9-167">サイズは負の値になるか、ストリームの末尾を超えます。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-167">Size is negative or extends past the end of the stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataReader">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MetadataReader GetMetadataReader (System.Reflection.Metadata.MetadataReaderOptions options = System.Reflection.Metadata.MetadataReaderOptions.ApplyWindowsRuntimeProjections, System.Reflection.Metadata.MetadataStringDecoder utf8Decoder = null);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Metadata.MetadataReader GetMetadataReader(valuetype System.Reflection.Metadata.MetadataReaderOptions options, class System.Reflection.Metadata.MetadataStringDecoder utf8Decoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.MetadataReaderProvider.GetMetadataReader(System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataReader (Optional options As MetadataReaderOptions = System.Reflection.Metadata.MetadataReaderOptions.ApplyWindowsRuntimeProjections, Optional utf8Decoder As MetadataStringDecoder = null) As MetadataReader" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="F#" Value="member this.GetMetadataReader : System.Reflection.Metadata.MetadataReaderOptions * System.Reflection.Metadata.MetadataStringDecoder -&gt; System.Reflection.Metadata.MetadataReader" Usage="metadataReaderProvider.GetMetadataReader (options, utf8Decoder)" />
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MetadataReader GetMetadataReader (System.Reflection.Metadata.MetadataReaderOptions options = System.Reflection.Metadata.MetadataReaderOptions.Default, System.Reflection.Metadata.MetadataStringDecoder utf8Decoder = null);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataReader (Optional options As MetadataReaderOptions = System.Reflection.Metadata.MetadataReaderOptions.Default, Optional utf8Decoder As MetadataStringDecoder = null) As MetadataReader" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MetadataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Reflection.Metadata.MetadataReaderOptions" />
        <Parameter Name="utf8Decoder" Type="System.Reflection.Metadata.MetadataStringDecoder" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="ea8e9-168">メタデータの読み取り時の構成を表す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-168">A bitwise combination of the enumeration values that represent the configuration when reading the metadata.</span></span></param>
        <param name="utf8Decoder"><span data-ttu-id="ea8e9-169">使用するエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-169">The encoding to use.</span></span></param>
        <summary><span data-ttu-id="ea8e9-170"><see cref="T:System.Reflection.Metadata.MetadataReader" /> から <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-170">Gets a <see cref="T:System.Reflection.Metadata.MetadataReader" /> from a <see cref="T:System.Reflection.Metadata.MetadataReaderProvider" />.</span></span></summary>
        <returns><span data-ttu-id="ea8e9-171"><see cref="T:System.Reflection.Metadata.MetadataReader" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-171">A <see cref="T:System.Reflection.Metadata.MetadataReader" /> instance..</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="ea8e9-172">呼び出し元は、メタデータリーダーの有効期間全体にわたって <xref:System.Reflection.Metadata.MetadataReaderProvider> 破棄されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-172">The caller must keep the <xref:System.Reflection.Metadata.MetadataReaderProvider> undisposed throughout the lifetime of the metadata reader.</span></span>

<span data-ttu-id="ea8e9-173">このメソッドが複数回呼び出された場合、前の正常な呼び出しに渡された引数と同じ引数を持つ各呼び出しは、前の呼び出しと同じ <xref:System.Reflection.Metadata.MetadataReader> のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-173">If this method is called multiple times, each call with arguments equal to the arguments passed to the previous successful call returns the same instance of <xref:System.Reflection.Metadata.MetadataReader> as the previous call.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ea8e9-174"><paramref name="utf8Decoder" /> のエンコードは、<see cref="T:System.Text.UTF8Encoding" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-174">The encoding of <paramref name="utf8Decoder" /> is not <see cref="T:System.Text.UTF8Encoding" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ea8e9-175">現在のプラットフォームはビッグ エンディアンです。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-175">The current platform is big-endian.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ea8e9-176">基になるストリームからの読み取り中の入出力エラー。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-176">IO error while reading from the underlying stream.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ea8e9-177">プロバイダーは破棄されています。</span><span class="sxs-lookup"><span data-stu-id="ea8e9-177">Provider has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
