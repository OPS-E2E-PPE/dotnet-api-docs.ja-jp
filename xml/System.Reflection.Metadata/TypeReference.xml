<Type Name="TypeReference" FullName="System.Reflection.Metadata.TypeReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c8fe7a58b03ac4413368436fa57ce617b7a657c7" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82408843" /></Metadata><TypeSignature Language="C#" Value="public struct TypeReference" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TypeReference extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.TypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Structure TypeReference" />
  <TypeSignature Language="C++ CLI" Value="public value class TypeReference" />
  <TypeSignature Language="F#" Value="type TypeReference = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Name { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.TypeReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7bf1e-101">対象の型の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-101">Gets the name of the target type.</span></span></summary>
        <value><span data-ttu-id="7bf1e-102">対象の型の名前。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-102">The name of the target type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Namespace { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.TypeReference.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7bf1e-103">対象の型が定義されている名前空間の完全名を取得します。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-103">Gets the full name of the namespace where the target type is defined.</span></span></summary>
        <value><span data-ttu-id="7bf1e-104">ターゲットの型が定義されている名前空間の完全名。型が入れ子になっている場合、またはルート名前空間で定義されている場合は、<see cref="P:System.Reflection.Metadata.StringHandle.IsNil" /> プロパティを <see langword="true" /> するハンドル。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-104">The full name of the namespace where the target type is defined, or a handle whose the <see cref="P:System.Reflection.Metadata.StringHandle.IsNil" /> property is <see langword="true" /> if the type is nested or defined in a root namespace,</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolutionScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.EntityHandle ResolutionScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.EntityHandle ResolutionScope" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.ResolutionScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolutionScope As EntityHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::EntityHandle ResolutionScope { System::Reflection::Metadata::EntityHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolutionScope : System.Reflection.Metadata.EntityHandle" Usage="System.Reflection.Metadata.TypeReference.ResolutionScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.EntityHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7bf1e-105">対象の型が定義され、指定した <see cref="P:System.Reflection.Metadata.TypeReference.Namespace" /> と <see cref="P:System.Reflection.Metadata.TypeReference.Name" /> によって一意に識別される解決スコープを取得します。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-105">Gets the resolution scope in which the target type is defined and is uniquely identified by the specified <see cref="P:System.Reflection.Metadata.TypeReference.Namespace" /> and <see cref="P:System.Reflection.Metadata.TypeReference.Name" />.</span></span></summary>
        <value><span data-ttu-id="7bf1e-106">対象の型が一意に定義される解決スコープ。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-106">The resolution scope in which the target type is uniquely defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="7bf1e-107">解決スコープには、次のいずれかのハンドルを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-107">Resolution scope can be one of the following handles:</span></span>

- <span data-ttu-id="7bf1e-108">対象の型が入れ子にされた型の場合は、外側の型の <xref:System.Reflection.Metadata.TypeReferenceHandle>。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-108"><xref:System.Reflection.Metadata.TypeReferenceHandle> of the enclosing type, if the target type is a nested type.</span></span>

- <span data-ttu-id="7bf1e-109">ターゲットの型が、同じアセンブリ内の別のモジュールで定義されている場合は <xref:System.Reflection.Metadata.ModuleReferenceHandle>。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-109"><xref:System.Reflection.Metadata.ModuleReferenceHandle>, if the target type is defined in another module within the same assembly as this one.</span></span>

- <span data-ttu-id="7bf1e-110">対象の型が現在のモジュールで定義されている場合は <xref:System.Reflection.Metadata.EntityHandle.ModuleDefinition>。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-110"><xref:System.Reflection.Metadata.EntityHandle.ModuleDefinition>, if the target type is defined in the current module.</span></span> <span data-ttu-id="7bf1e-111">これは、CLI の圧縮されたメタデータモジュールでは発生しません。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-111">This should not occur in a CLI compressed metadata module.</span></span>

- <span data-ttu-id="7bf1e-112">ターゲット型が現在のモジュールとは別のアセンブリで定義されている場合は <xref:System.Reflection.Metadata.AssemblyReferenceHandle>。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-112"><xref:System.Reflection.Metadata.AssemblyReferenceHandle>, if the target type is defined in a different assembly from the current module.</span></span>

- <span data-ttu-id="7bf1e-113"><xref:System.Reflection.Metadata.MetadataReader.ExportedTypes> で一致する <xref:System.Reflection.Metadata.TypeReference.Namespace> および <xref:System.Reflection.Metadata.TypeReference.Name>を検索して、対象の型を解決する必要があるかどうかを `Nil` ハンドルします。</span><span class="sxs-lookup"><span data-stu-id="7bf1e-113">`Nil` handle if the target type must be resolved by searching the <xref:System.Reflection.Metadata.MetadataReader.ExportedTypes> for a matching <xref:System.Reflection.Metadata.TypeReference.Namespace> and <xref:System.Reflection.Metadata.TypeReference.Name>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
