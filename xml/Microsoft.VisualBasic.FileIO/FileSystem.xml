<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileIO.FileSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f295a86589933fed06a05ec45729b5628066393" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77231825" /></Metadata><TypeSignature Language="C#" Value="public class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem" />
  <TypeSignature Language="F#" Value="type FileSystem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ca089-101">ドライブ、ファイル、ディレクトリを操作するためのプロパティとメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="ca089-101">Provides properties and methods for working with drives, files, and directories.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-102">次の表に、`My.Computer.FileSystem` オブジェクトに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-102">The following table lists examples of tasks involving the `My.Computer.FileSystem` object.</span></span>  
  
|<span data-ttu-id="ca089-103">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-103">To</span></span>|<span data-ttu-id="ca089-104">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-104">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-105">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-105">Read from a text file</span></span>|[<span data-ttu-id="ca089-106">方法: テキスト ファイルからデータを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-106">How to: Read from Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)|  
|<span data-ttu-id="ca089-107">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-107">Read from a delimited text file</span></span>|[<span data-ttu-id="ca089-108">方法: コンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-108">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="ca089-109">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-109">Read from a fixed-width text file</span></span>|[<span data-ttu-id="ca089-110">方法: 固定幅のテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-110">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="ca089-111">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-111">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="ca089-112">方法: 複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-112">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
|<span data-ttu-id="ca089-113">バイナリ ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-113">Read from a binary file</span></span>|[<span data-ttu-id="ca089-114">方法: バイナリ ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-114">How to: Read From Binary Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-binary-files.md)|  
|<span data-ttu-id="ca089-115"><xref:System.IO.StreamReader> のあるテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-115">Read from a text file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="ca089-116">方法: StreamReader を使用してファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-116">How to: Read Text from Files with a StreamReader</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md)|  
|<span data-ttu-id="ca089-117">テキスト ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="ca089-117">Write to a text file</span></span>|[<span data-ttu-id="ca089-118">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-118">How to: Write Text to Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md)|  
|<span data-ttu-id="ca089-119">テキストファイルに追加する</span><span class="sxs-lookup"><span data-stu-id="ca089-119">Append to a text file</span></span>|[<span data-ttu-id="ca089-120">方法: テキスト ファイルに追記する</span><span class="sxs-lookup"><span data-stu-id="ca089-120">How to: Append to Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files.md)|  
|<span data-ttu-id="ca089-121">バイナリ ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="ca089-121">Write to a binary file</span></span>|[<span data-ttu-id="ca089-122">方法: バイナリ ファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-122">How to: Write to Binary Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-to-binary-files.md)|  
|<span data-ttu-id="ca089-123">**マイドキュメント**ディレクトリ内のテキストファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="ca089-123">Write to text files in the **MyDocuments** directory</span></span>|[<span data-ttu-id="ca089-124">方法: My Documents ディレクトリのファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-124">How to: Write Text to Files in the My Documents Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-in-the-my-documents-directory.md)|  
|<span data-ttu-id="ca089-125">`StreamWriter` を使用してテキストファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-125">Write to a text file with a `StreamWriter`</span></span>|[<span data-ttu-id="ca089-126">方法: StreamWriter を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-126">How to: Write Text to Files with a StreamWriter</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md)|  
|<span data-ttu-id="ca089-127">特定のパターンを持つファイルをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-127">Copy files with a specific pattern</span></span>|[<span data-ttu-id="ca089-128">方法: 特定のパターンを持つファイルをディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-128">How to: Copy Files with a Specific Pattern to a Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-files-with-a-specific-pattern-to-a-directory.md)|  
|<span data-ttu-id="ca089-129">同じディレクトリにファイルをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-129">Copy a file to the same directory</span></span>|[<span data-ttu-id="ca089-130">方法: ファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-130">How to: Create a Copy of a File in the Same Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="ca089-131">ファイルを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-131">Copy a file to a different directory</span></span>|[<span data-ttu-id="ca089-132">方法: ファイルのコピーを別のディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-132">How to: Create a Copy of a File in a Different Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
|<span data-ttu-id="ca089-133">ファイルを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-133">Create a file</span></span>|[<span data-ttu-id="ca089-134">方法: ファイルを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-134">How to: Create a File</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-file.md)|  
|<span data-ttu-id="ca089-135">ファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="ca089-135">Delete a file</span></span>|[<span data-ttu-id="ca089-136">方法: ファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="ca089-136">How to: Delete a File</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file.md)|  
|<span data-ttu-id="ca089-137">特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-137">Find files with a specific pattern</span></span>|[<span data-ttu-id="ca089-138">方法: 特定のパターンに一致するファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-138">How to: Find Files with a Specific Pattern</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern.md)|  
|<span data-ttu-id="ca089-139">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="ca089-139">Move a file</span></span>|[<span data-ttu-id="ca089-140">方法: ファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="ca089-140">How to: Move a File</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
|<span data-ttu-id="ca089-141">ファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="ca089-141">Rename a file</span></span>|[<span data-ttu-id="ca089-142">方法: ファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="ca089-142">How to: Rename a File</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file.md)|  
|<span data-ttu-id="ca089-143">ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-143">Copy a directory to another directory</span></span>|[<span data-ttu-id="ca089-144">方法: ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-144">How to: Copy a Directory to Another Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
|<span data-ttu-id="ca089-145">ディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-145">Create a directory</span></span>|[<span data-ttu-id="ca089-146">方法: ディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-146">How to: Create a Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-directory.md)|  
|<span data-ttu-id="ca089-147">特定のパターンでサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-147">Find subdirectories with a specific pattern</span></span>|[<span data-ttu-id="ca089-148">方法: 特定のパターンに一致するサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-148">How to: Find Subdirectories with a Specific Pattern</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern.md)|  
|<span data-ttu-id="ca089-149">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca089-149">Get the collection of files in a directory</span></span>|[<span data-ttu-id="ca089-150">方法: ディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="ca089-150">How to: Get the Collection of Files in a Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory.md)|  
|<span data-ttu-id="ca089-151">**マイドキュメント**ディレクトリからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-151">Read from the **MyDocuments** directory</span></span>|[<span data-ttu-id="ca089-152">方法: My Documents ディレクトリの内容を取得する</span><span class="sxs-lookup"><span data-stu-id="ca089-152">How to: Retrieve the Contents of the My Documents Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-retrieve-the-contents-of-the-my-documents-directory.md)|  
|<span data-ttu-id="ca089-153">ファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="ca089-153">Parse a file path</span></span>|[<span data-ttu-id="ca089-154">方法: ファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="ca089-154">How to: Parse File Paths</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-155">この例では、フォルダー `C:\backup\logs` 存在するかどうかを確認し、そのプロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="ca089-155">This example checks to determine whether the folder `C:\backup\logs` exists and checks its properties.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#23)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="ca089-156">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="ca089-156">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystem();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca089-157"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ca089-157">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [<span data-ttu-id="ca089-158">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="ca089-158">Objects (Visual Basic)</span></span>](~/docs/visual-basic/language-reference/objects/index.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombinePath">
      <MemberSignature Language="C#" Value="public static string CombinePath (string baseDirectory, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CombinePath(string baseDirectory, string relativePath) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CombinePath (baseDirectory As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CombinePath(System::String ^ baseDirectory, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member CombinePath : string * string -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CombinePath (baseDirectory, relativePath)" />
      <MemberSignature Language="ILAsm" Value=".method public static string CombinePath(string baseDirectory, string relativePath) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseDirectory" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseDirectory"><span data-ttu-id="ca089-159">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="ca089-159"><see langword="String" />.</span></span> <span data-ttu-id="ca089-160">結合する 1 つ目のパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-160">First path to be combined.</span></span></param>
        <param name="relativePath"><span data-ttu-id="ca089-161">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="ca089-161"><see langword="String" />.</span></span> <span data-ttu-id="ca089-162">結合する 2 つ目のパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-162">Second path to be combined.</span></span></param>
        <summary><span data-ttu-id="ca089-163">2 つのパスを結合し、適切な形式のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-163">Combines two paths and returns a properly formatted path.</span></span></summary>
        <returns><span data-ttu-id="ca089-164">指定されたパスの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ca089-164">The combination of the specified paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-165">このメソッドは、余分なスラッシュ記号をトリムして、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca089-165">This method trims excess slash-mark characters to create a properly formatted path.</span></span>  
  
 <span data-ttu-id="ca089-166">次の表に、`My.Computer.FileSystem.CombinePath` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-166">The following table lists an example of a task involving the `My.Computer.FileSystem.CombinePath` method.</span></span>  
  
|<span data-ttu-id="ca089-167">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-167">To</span></span>|<span data-ttu-id="ca089-168">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-168">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-169">ディレクトリパスとファイル名を結合する</span><span class="sxs-lookup"><span data-stu-id="ca089-169">Combine a directory path and file name</span></span>|[<span data-ttu-id="ca089-170">方法: Visual Basic でファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="ca089-170">How to: Parse File Paths in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-171">この例では、ディレクトリパスとファイル名を組み合わせて、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca089-171">This example combines a directory path and file name to create a properly formatted path.</span></span>  
  
 [!code-vb[VbRefFile#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#3)]  
  
 <span data-ttu-id="ca089-172">この例では、2つのパスを結合して、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca089-172">This example combines two paths to create a properly formatted path.</span></span>  
  
 [!code-vb[VbRefFile#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#4)]  
  
 <span data-ttu-id="ca089-173">この例では `C:\Dir1\Dir2\Dir4\Dir5\File.txt`が返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-173">This example returns `C:\Dir1\Dir2\Dir4\Dir5\File.txt`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-174"><paramref name="baseDirectory" /> または <paramref name="relativePath" /> のパスの形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-174"><paramref name="baseDirectory" /> or <paramref name="relativePath" /> are malformed paths.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-175">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-175">Copies the contents of a directory to another directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member CopyDirectory : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory (sourceDirectoryName, destinationDirectoryName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="ca089-176">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-176">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="ca089-177">ディレクトリの内容のコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-177">The location to which the directory contents should be copied.</span></span></param>
        <summary><span data-ttu-id="ca089-178">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-178">Copies the contents of a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-179">このメソッドは、ソースディレクトリの内容をターゲットディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-179">This method copies the contents of the source directory to the target directory.</span></span> <span data-ttu-id="ca089-180">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-180">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="ca089-181">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="ca089-181">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="ca089-182">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-182">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="ca089-183">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-183">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="ca089-184">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-184">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="ca089-185">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="ca089-185">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="ca089-186">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-186">The following table lists an example of a task involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="ca089-187">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-187">To</span></span>|<span data-ttu-id="ca089-188">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-188">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-189">ディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-189">Copy a directory</span></span>|[<span data-ttu-id="ca089-190">方法: Visual Basic 内の別のディレクトリにディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-190">How to: Copy a Directory to Another Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-191">次の例では、ディレクトリ `TestDirectory1` の内容を `TestDirectory2`にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-191">The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#94)]  
  
 <span data-ttu-id="ca089-192">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-192">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-193">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-193">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-194"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-194"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-195">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-195">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-196">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="ca089-196">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca089-197">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-197">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-198">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-198">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-199">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-199">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-200">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-200">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-201">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="ca089-201">A destination file exists but cannot be accessed.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="static member CopyDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory (sourceDirectoryName, destinationDirectoryName, showUI)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="ca089-202">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-202">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="ca089-203">ディレクトリの内容のコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-203">The location to which the directory contents should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-204">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-204">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-205">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-205">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="ca089-206">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-206">Copies the contents of a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-207">このメソッドは、ソースディレクトリの内容をターゲットディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-207">This method copies the contents of the source directory to the target directory.</span></span> <span data-ttu-id="ca089-208">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-208">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="ca089-209">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="ca089-209">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="ca089-210">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-210">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="ca089-211">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-211">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="ca089-212">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-212">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="ca089-213">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="ca089-213">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="ca089-214">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-214">The following table lists an example of a task involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="ca089-215">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-215">To</span></span>|<span data-ttu-id="ca089-216">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-216">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-217">ディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-217">Copy a directory</span></span>|[<span data-ttu-id="ca089-218">方法: Visual Basic 内の別のディレクトリにディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-218">How to: Copy a Directory to Another Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-219">次の例では、ディレクトリ `TestDirectory1` の内容を `TestDirectory2`にコピーして、進行状況のダイアログとエラーダイアログを表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-219">The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, showing progress dialog and any error dialog.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#92)]  
  
 <span data-ttu-id="ca089-220">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-220">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-221">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-221">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-222"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-222"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-223">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-223">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-224">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="ca089-224">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca089-225">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-225">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-226">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-226">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-227">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-227">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-228">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-228">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-229">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="ca089-229">A destination file exists but cannot be accessed.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-230"><paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="ca089-230"><paramref name="ShowUI" /> is set to <see langword="UIOption.AllDialogs" /> and the user cancels the operation, or one or more files in the directory cannot be copied.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member CopyDirectory : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory (sourceDirectoryName, destinationDirectoryName, overwrite)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="ca089-231">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-231">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="ca089-232">ディレクトリの内容のコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-232">The location to which the directory contents should be copied.</span></span></param>
        <param name="overwrite"><span data-ttu-id="ca089-233">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-233"><see langword="True" /> to overwrite existing files; otherwise <see langword="False" />.</span></span> <span data-ttu-id="ca089-234">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-234">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="ca089-235">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-235">Copies the contents of a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-236">このメソッドは、ソースディレクトリの内容をターゲットディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-236">This method copies the contents of the source directory to the target directory.</span></span> <span data-ttu-id="ca089-237">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-237">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="ca089-238">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="ca089-238">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="ca089-239">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-239">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="ca089-240">ディレクトリ内のファイルをコピーする場合、`overwrite` が `False`に設定されている間に、マージ中に存在するファイルなど、特定のファイルが原因で例外がスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="ca089-240">When copying files within a directory, exceptions may be thrown that are caused by a specific file, such as a file existing during a merge while `overwrite` is set to `False`.</span></span> <span data-ttu-id="ca089-241">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-241">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="ca089-242">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="ca089-242">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="ca089-243">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-243">The following table lists an example of a task involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="ca089-244">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-244">To</span></span>|<span data-ttu-id="ca089-245">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-245">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-246">ディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-246">Copy a directory</span></span>|[<span data-ttu-id="ca089-247">方法: Visual Basic 内の別のディレクトリにディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-247">How to: Copy a Directory to Another Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-248">次の例では、ディレクトリ `TestDirectory1` の内容を `TestDirectory2`にコピーし、既存のファイルを上書きします。</span><span class="sxs-lookup"><span data-stu-id="ca089-248">The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#49)]  
  
 <span data-ttu-id="ca089-249">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-249">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-250">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-250">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-251"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-251"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-252">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-252">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-253">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="ca089-253">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca089-254">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-254">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-255">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-255">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-256">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-256">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-257">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-257">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-258">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="ca089-258">A destination file exists but cannot be accessed.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member CopyDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory (sourceDirectoryName, destinationDirectoryName, showUI, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="ca089-259">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-259">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="ca089-260">ディレクトリの内容のコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-260">The location to which the directory contents should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-261">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-261">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-262">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-262">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="ca089-263">操作中にユーザーが **[キャンセル]** をクリックした場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-263">Specifies what should be done if the user clicks **Cancel** during the operation.</span></span> <span data-ttu-id="ca089-264">既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-264">Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="ca089-265">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-265">Copies the contents of a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-266">このメソッドは、ソースディレクトリの内容をターゲットディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-266">This method copies the contents of the source directory to the target directory.</span></span> <span data-ttu-id="ca089-267">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-267">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="ca089-268">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="ca089-268">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="ca089-269">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-269">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="ca089-270">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-270">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="ca089-271">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-271">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="ca089-272">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="ca089-272">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="ca089-273">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-273">The following table lists an example of a task involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="ca089-274">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-274">To</span></span>|<span data-ttu-id="ca089-275">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-275">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-276">ディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-276">Copy a directory</span></span>|[<span data-ttu-id="ca089-277">方法: Visual Basic 内の別のディレクトリにディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="ca089-277">How to: Copy a Directory to Another Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-278">次の例では、ディレクトリ `TestDirectory1` の内容を `TestDirectory2`にコピーします。進行状況ダイアログとエラーダイアログが表示されます。操作中にユーザーが **[キャンセル]** をクリックしても、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="ca089-278">The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, showing progress dialog and any error dialog, and does nothing if the user clicks **Cancel** during the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#93)]  
  
 <span data-ttu-id="ca089-279">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-279">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-280">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-280">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-281"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-281"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-282">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-282">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-283">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="ca089-283">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca089-284">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-284">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-285">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-285">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-286">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-286">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-287">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-287">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-288">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="ca089-288">A destination file exists but cannot be accessed.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-289"><paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="ca089-289"><paramref name="ShowUI" /> is set to <see langword="UIOption.AllDialogs" /> and the user cancels the operation, or one or more files in the directory cannot be copied.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-290">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-290">Copies a file to a new location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public static void CopyFile (string sourceFileName, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFile(string sourceFileName, string destinationFileName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyFile (sourceFileName As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member CopyFile : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyFile (sourceFileName, destinationFileName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyFile(string sourceFileName, string destinationFileName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="ca089-291">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-291">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="ca089-292">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-292">The location to which the file should be copied.</span></span></param>
        <summary><span data-ttu-id="ca089-293">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-293">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-294">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-294">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="ca089-295">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="ca089-295">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="ca089-296">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-296">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="ca089-297">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-297">To</span></span>|<span data-ttu-id="ca089-298">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-298">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-299">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-299">Copy a file to the same directory.</span></span>|[<span data-ttu-id="ca089-300">方法: Visual Basic の同じディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-300">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="ca089-301">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-301">Copy a file to a different directory.</span></span>|[<span data-ttu-id="ca089-302">方法: Visual Basic の別のディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-302">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-303">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-303">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="ca089-304">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-304">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="ca089-305">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-305">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="ca089-306">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-306">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-307"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-307"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-308"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-308"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-309">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-309">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-310">コピー先のディレクトリにある同じ名前のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="ca089-310">A file in the target directory with the same name is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-311">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-311">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-312">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-312">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-313">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-313">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-314">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-314">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyFile (sourceFileName As String, destinationFileName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="static member CopyFile : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyFile (sourceFileName, destinationFileName, showUI)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="ca089-315">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-315">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="ca089-316">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-316">The location to which the file should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-317">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-317">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-318">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-318">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="ca089-319">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-319">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-320">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-320">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="ca089-321">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="ca089-321">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="ca089-322">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-322">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="ca089-323">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-323">To</span></span>|<span data-ttu-id="ca089-324">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-324">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-325">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-325">Copy a file to the same directory.</span></span>|[<span data-ttu-id="ca089-326">方法: Visual Basic の同じディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-326">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="ca089-327">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-327">Copy a file to a different directory.</span></span>|[<span data-ttu-id="ca089-328">方法: Visual Basic の別のディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-328">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-329">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-329">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="ca089-330">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-330">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="ca089-331">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-331">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="ca089-332">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-332">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-333"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-333"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-334"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-334"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-335">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-335">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-336">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-336">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-337">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-337">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-338">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-338">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-339">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-339">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-340">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-340">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public static void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyFile (sourceFileName As String, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member CopyFile : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyFile (sourceFileName, destinationFileName, overwrite)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="ca089-341">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-341">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="ca089-342">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-342">The location to which the file should be copied.</span></span></param>
        <param name="overwrite"><span data-ttu-id="ca089-343">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-343"><see langword="True" /> if existing files should be overwritten; otherwise <see langword="False" />.</span></span> <span data-ttu-id="ca089-344">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-344">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="ca089-345">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-345">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-346">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-346">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="ca089-347">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="ca089-347">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="ca089-348">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-348">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="ca089-349">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-349">To</span></span>|<span data-ttu-id="ca089-350">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-350">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-351">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-351">Copy a file to the same directory.</span></span>|[<span data-ttu-id="ca089-352">方法: Visual Basic の同じディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-352">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="ca089-353">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-353">Copy a file to a different directory.</span></span>|[<span data-ttu-id="ca089-354">方法: Visual Basic の別のディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-354">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-355">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-355">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="ca089-356">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-356">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="ca089-357">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-357">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="ca089-358">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-358">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-359"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-359"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-360"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-360"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-361">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-361">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-362">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-362">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-363">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-363">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-364">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-364">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-365">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-365">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-366">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-366">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyFile (sourceFileName As String, destinationFileName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member CopyFile : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyFile (sourceFileName, destinationFileName, showUI, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="ca089-367">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-367">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="ca089-368">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-368">The location to which the file should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-369">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-369">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-370">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-370">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="ca089-371">操作中にユーザーが **[キャンセル]** をクリックした場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-371">Specifies what should be done if the user clicks **Cancel** during the operation.</span></span> <span data-ttu-id="ca089-372">既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-372">Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="ca089-373">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-373">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-374">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-374">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="ca089-375">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="ca089-375">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="ca089-376">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-376">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="ca089-377">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-377">To</span></span>|<span data-ttu-id="ca089-378">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-378">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-379">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-379">Copy a file to the same directory.</span></span>|[<span data-ttu-id="ca089-380">方法: Visual Basic の同じディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-380">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="ca089-381">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-381">Copy a file to a different directory.</span></span>|[<span data-ttu-id="ca089-382">方法: Visual Basic の別のディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-382">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-383">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="ca089-383">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="ca089-384">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-384">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="ca089-385">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-385">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="ca089-386">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-386">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-387"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-387"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-388"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-388"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-389">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-389">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-390">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-390">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-391">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-391">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-392">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-392">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-393">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-393">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-394">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-394">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-395"><paramref name="UICancelOption" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-395"><paramref name="UICancelOption" /> is set to <see langword="ThrowException" />, and the user has canceled the operation or an unspecified I/O error occurs.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public static void CreateDirectory (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDirectory(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateDirectory (directory As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDirectory(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member CreateDirectory : string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory directory" />
      <MemberSignature Language="ILAsm" Value=".method public static void CreateDirectory(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-396">ディレクトリの名前および場所。</span><span class="sxs-lookup"><span data-stu-id="ca089-396">Name and location of the directory.</span></span></param>
        <summary><span data-ttu-id="ca089-397">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="ca089-397">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-398">ディレクトリが既にある場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="ca089-398">If the directory already exists, no exception is thrown.</span></span>  
  
 <span data-ttu-id="ca089-399">次の表に、`My.Computer.FileSystem.CreateDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-399">The following table lists an example of a task involving the `My.Computer.FileSystem.CreateDirectory` method.</span></span>  
  
|<span data-ttu-id="ca089-400">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-400">To</span></span>|<span data-ttu-id="ca089-401">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-401">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-402">ディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-402">Create a directory</span></span>|[<span data-ttu-id="ca089-403">方法: Visual Basic でディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="ca089-403">How to: Create a Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-404">この例では、`C:\Documents and Settings\All Users\Documents`にディレクトリ `NewDirectory`を作成します。</span><span class="sxs-lookup"><span data-stu-id="ca089-404">This example creates the directory, `NewDirectory`, in `C:\Documents and Settings\All Users\Documents`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-405">ディレクトリ名が不正な場合。</span><span class="sxs-lookup"><span data-stu-id="ca089-405">The directory name is malformed.</span></span> <span data-ttu-id="ca089-406">たとえば、無効な文字が含まれているか、空白のみであることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-406">For example, it contains illegal characters or is only white space.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-407"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-407"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-408">ディレクトリ名が長すぎます。</span><span class="sxs-lookup"><span data-stu-id="ca089-408">The directory name is too long.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-409">ディレクトリ名にコロン (":") だけが指定されている場合</span><span class="sxs-lookup"><span data-stu-id="ca089-409">The directory name is only a colon (:).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-410">作成するディレクトリの親ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ca089-410">The parent directory of the directory to be created is read-only</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-411">ユーザーがディレクトリを作成するためのアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-411">The user does not have permission to create the directory.</span></span></exception>
        <altmember cref="M:System.IO.Directory.CreateDirectory(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDirectory">
      <MemberSignature Language="C#" Value="public static string CurrentDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string CurrentDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CurrentDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDirectory : string with get, set" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca089-412">現在のディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-412">Gets or sets the current directory.</span></span></summary>
        <value><span data-ttu-id="ca089-413">ファイル I/O 操作の現在のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-413">The current directory for file I/O operations.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-414">`CurrentDirectory` は、システム全体の環境変数です。</span><span class="sxs-lookup"><span data-stu-id="ca089-414">`CurrentDirectory` is a system-wide environment variable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-415">この例では、現在のディレクトリが返され、メッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-415">This example returns the current directory and displays it in a message box.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#18)]  
  
 <span data-ttu-id="ca089-416">この例では、現在のディレクトリを `C:\TestDirectory`に設定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-416">This example sets the current directory to `C:\TestDirectory`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-417">パスが無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-417">The path is not valid.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-418">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-418">The user lacks necessary permissions.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-419">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-419">Deletes a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteDirectory (directory As String, onDirectoryNotEmpty As DeleteDirectoryOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::DeleteDirectoryOption onDirectoryNotEmpty);" />
      <MemberSignature Language="F#" Value="static member DeleteDirectory : string * Microsoft.VisualBasic.FileIO.DeleteDirectoryOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory (directory, onDirectoryNotEmpty)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="onDirectoryNotEmpty" Type="Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-420">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-420">Directory to be deleted.</span></span></param>
        <param name="onDirectoryNotEmpty"><span data-ttu-id="ca089-421">削除対象のディレクトリ内にファイルまたはディレクトリが存在する場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-421">Specifies what should be done when a directory that is to be deleted contains files or directories.</span></span> <span data-ttu-id="ca089-422">既定値は <see langword="DeleteDirectoryOption.DeleteAllContents" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-422">Default is <see langword="DeleteDirectoryOption.DeleteAllContents" />.</span></span></param>
        <summary><span data-ttu-id="ca089-423">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-423">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ca089-424">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-424">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="ca089-425">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-425">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="ca089-426">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-426">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="ca089-427">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="ca089-427">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-428">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-428">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="ca089-429">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="ca089-429">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-430"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-430"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-431">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-431">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-432">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="ca089-432">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-433">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-433">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-434">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-434">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-435">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-435">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-436">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ca089-436">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
      </Docs>
    </Member>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteDirectory (directory As String, showUI As UIOption, recycle As RecycleOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle);" />
      <MemberSignature Language="F#" Value="static member DeleteDirectory : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory (directory, showUI, recycle)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-437">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-437">Directory to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-438">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-438">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-439">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-439">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="ca089-440">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-440">Specifies whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="ca089-441">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-441">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <summary><span data-ttu-id="ca089-442">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-442">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-443">`showUI` パラメーターと `recycle` パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ca089-443">The `showUI` and `recycle` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-444">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-444">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="ca089-445">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-445">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="ca089-446">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-446">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="ca089-447">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="ca089-447">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-448">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-448">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="ca089-449">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="ca089-449">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-450"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-450"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-451">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-451">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-452">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="ca089-452">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-453">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-453">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-454">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-454">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-455">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-455">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-456">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ca089-456">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteDirectory (directory As String, showUI As UIOption, recycle As RecycleOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member DeleteDirectory : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory (directory, showUI, recycle, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-457">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-457">Directory to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-458">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-458">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-459">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-459">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="ca089-460">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-460">Specifies whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="ca089-461">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-461">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="ca089-462">ユーザーが **[キャンセル]** をクリックした場合に例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-462">Specifies whether to throw an exception if the user clicks **Cancel**.</span></span></param>
        <summary><span data-ttu-id="ca089-463">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-463">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-464">`showUI`、`recycle`、および `onUserCancel` の各パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ca089-464">The `showUI`, `recycle`, and `onUserCancel` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-465">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-465">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="ca089-466">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-466">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="ca089-467">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-467">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="ca089-468">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="ca089-468">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-469">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-469">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="ca089-470">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="ca089-470">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-471"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-471"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-472">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-472">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-473">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="ca089-473">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-474">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-474">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-475">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-475">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-476">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-476">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-477">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ca089-477">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-478">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-478">Deletes a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public static void DeleteFile (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteFile(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteFile (file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteFile(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member DeleteFile : string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile file" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteFile(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-479">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-479">Name and path of the file to be deleted.</span></span></param>
        <summary><span data-ttu-id="ca089-480">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-480">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-481">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-481">The following table lists an example of a task involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="ca089-482">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-482">To</span></span>|<span data-ttu-id="ca089-483">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-483">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-484">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="ca089-484">To delete a file</span></span>|[<span data-ttu-id="ca089-485">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="ca089-485">How to: Delete a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-486">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-486">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="ca089-487">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca089-487">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="ca089-488">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="ca089-488">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-489">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-489">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-490"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-490"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-491">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-491">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-492">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-492">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-493">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="ca089-493">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-494">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-494">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-495">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-495">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-496">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ca089-496">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteFile (file As String, showUI As UIOption, recycle As RecycleOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteFile(System::String ^ file, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle);" />
      <MemberSignature Language="F#" Value="static member DeleteFile : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile (file, showUI, recycle)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-497">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-497">Name and path of the file to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-498">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-498">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-499">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-499">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="ca089-500">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-500">Whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="ca089-501">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-501">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <summary><span data-ttu-id="ca089-502">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-502">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-503">`showUI` パラメーターと `recycle` パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ca089-503">The `showUI` and `recycle` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
 <span data-ttu-id="ca089-504">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-504">The following table lists an example of a task involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="ca089-505">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-505">To</span></span>|<span data-ttu-id="ca089-506">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-506">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-507">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="ca089-507">To delete a file</span></span>|[<span data-ttu-id="ca089-508">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="ca089-508">How to: Delete a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-509">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-509">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="ca089-510">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca089-510">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="ca089-511">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="ca089-511">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-512">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-512">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-513"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-513"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-514">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-514">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-515">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-515">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-516">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="ca089-516">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-517">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-517">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-518">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-518">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-519">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ca089-519">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteFile (file As String, showUI As UIOption, recycle As RecycleOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteFile(System::String ^ file, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member DeleteFile : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile (file, showUI, recycle, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-520">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-520">Name and path of the file to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-521">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-521">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-522">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-522">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="ca089-523">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-523">Whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="ca089-524">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-524">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="ca089-525">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-525">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="ca089-526">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-526">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="ca089-527">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-527">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-528">`showUI`、`recycle`、および `onUserCancel` の各パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ca089-528">The `showUI`, `recycle`, and `onUserCancel` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
 <span data-ttu-id="ca089-529">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-529">The following table lists an example of a task involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="ca089-530">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-530">To</span></span>|<span data-ttu-id="ca089-531">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-531">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-532">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="ca089-532">To delete a file</span></span>|[<span data-ttu-id="ca089-533">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="ca089-533">How to: Delete a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-534">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="ca089-534">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="ca089-535">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca089-535">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="ca089-536">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="ca089-536">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-537">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-537">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-538"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-538"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-539">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-539">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-540">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-540">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-541">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="ca089-541">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-542">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-542">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-543">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-543">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-544">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ca089-544">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-545">ユーザーが操作を取り消し、かつ <paramref name="onUserCancel" /> が <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-545">The user cancelled the operation and <paramref name="onUserCancel" /> is set to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public static bool DirectoryExists (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DirectoryExists(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DirectoryExists (directory As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DirectoryExists(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member DirectoryExists : string -&gt; bool" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists directory" />
      <MemberSignature Language="ILAsm" Value=".method public static bool DirectoryExists(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-546">ディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-546">Path of the directory.</span></span></param>
        <summary><span data-ttu-id="ca089-547">指定されたディレクトリが存在する場合、<see langword="True" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-547">Returns <see langword="True" /> if the specified directory exists.</span></span></summary>
        <returns><span data-ttu-id="ca089-548">ディレクトリが存在する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-548"><see langword="True" /> if the directory exists; otherwise <see langword="False" />.</span></span> <span data-ttu-id="ca089-549">パラメーターがディレクトリではなく名前とファイルのパスを表していた場合は、このメソッドも <see langword="False" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-549">This method also returns <see langword="False" /> if the parameter represents the name and path of a file rather than a directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ca089-550">この例では、ディレクトリ `C:\backup\logs` 存在するかどうかを判断し、そのプロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="ca089-550">This example determines whether the directory `C:\backup\logs` exists and checks its properties.</span></span>  
  
 [!code-vb[VbRefFile#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drives">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt; Drives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.DriveInfo&gt; Drives" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Drives As ReadOnlyCollection(Of DriveInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::DriveInfo ^&gt; ^ Drives { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::DriveInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Drives : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.Drives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca089-551">利用可能なすべてのドライブ名の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-551">Returns a read-only collection of all available drive names.</span></span></summary>
        <value><span data-ttu-id="ca089-552"><see cref="T:System.IO.DriveInfo" /> オブジェクトとして使用できるすべてのドライブの読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca089-552">A read-only collection of all available drives as <see cref="T:System.IO.DriveInfo" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-553">このプロパティは、すべての論理ドライブを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-553">This property returns all logical drives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-554">この例では、使用可能なドライブ名をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-554">This example displays the available drive names in a message box.</span></span>  
  
 [!code-vb[VbRefFile#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public static bool FileExists (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FileExists(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FileExists (file As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool FileExists(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member FileExists : string -&gt; bool" Usage="Microsoft.VisualBasic.FileIO.FileSystem.FileExists file" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FileExists(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-555">ファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-555">Name and path of the file.</span></span></param>
        <summary><span data-ttu-id="ca089-556">指定されたファイルが存在する場合、<see langword="True" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-556">Returns <see langword="True" /> if the specified file exists.</span></span></summary>
        <returns><span data-ttu-id="ca089-557">ファイルが存在する場合は <see langword="True" /> を返します。それ以外の場合は <see langword="False" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-557">Returns <see langword="True" /> if the file exists; otherwise this method returns <see langword="False" />.</span></span> <span data-ttu-id="ca089-558">パラメーターがファイルではなくディレクトリのパスを表していた場合は、このメソッドも <see langword="False" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-558">This method also returns <see langword="False" /> if the parameter represents the path of a directory rather than a file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-559">アプリケーションに、指定されたファイルを読み取るための十分なアクセス許可がない場合、`FileExists` メソッドは、パスが存在するかどうかに関係なく `False`を返します。メソッドは例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="ca089-559">If the application does not have sufficient permissions to read the specified file, the `FileExists` method returns `False`, regardless of the existence of the path; the method does not throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-560">この例では、ファイル `Check.txt` が存在するかどうかを確認し、メッセージボックスに情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ca089-560">This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.</span></span>  
  
 [!code-vb[VbRefFile#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-561">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="ca089-561">The name of the file ends with a backslash (\\).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInFiles">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-562">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-562">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInFiles (directory As String, containsText As String, ignoreCase As Boolean, searchType As SearchOption) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FindInFiles(System::String ^ directory, System::String ^ containsText, bool ignoreCase, Microsoft::VisualBasic::FileIO::SearchOption searchType);" />
      <MemberSignature Language="F#" Value="static member FindInFiles : string * string * bool * Microsoft.VisualBasic.FileIO.SearchOption -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles (directory, containsText, ignoreCase, searchType)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="containsText" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-563">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-563">The directory to be searched.</span></span></param>
        <param name="containsText"><span data-ttu-id="ca089-564">検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ca089-564">The search text.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="ca089-565">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-565"><see langword="True" /> if the search should be case-sensitive; otherwise <see langword="False" />.</span></span> <span data-ttu-id="ca089-566">既定値は <see langword="True" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-566">Default is <see langword="True" />.</span></span></param>
        <param name="searchType"><span data-ttu-id="ca089-567">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-567">Whether to include subfolders.</span></span> <span data-ttu-id="ca089-568">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-568">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <summary><span data-ttu-id="ca089-569">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-569">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="ca089-570">指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca089-570">Read-only collection of the names of files containing the specified text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-571">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-571">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="ca089-572">次の表に、`My.Computer.FileSystem.FindInFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-572">The following table lists an example of a task involving the `My.Computer.FileSystem.FindInFiles` method.</span></span>  
  
|<span data-ttu-id="ca089-573">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-573">To</span></span>|<span data-ttu-id="ca089-574">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-574">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-575">特定の文字列を含むファイルをディレクトリで検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-575">Search a directory for files containing a specific string</span></span>|[<span data-ttu-id="ca089-576">チュートリアル: Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="ca089-576">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-577">この例では、ディレクトリ `C:\TestDir` で文字列 `"sample string"` を含むすべてのファイルを検索し、`ListBox1`に結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-577">This example searches the directory `C:\TestDir` for any files containing the string `"sample string"` and displays the results in `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#12)]  
  
 <span data-ttu-id="ca089-578">作業するには、プロジェクトに `ListBox1`という名前の `ListBox` が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-578">In order to work, the project must contain a `ListBox` named `ListBox1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-579">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\\.\</c> である) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-579">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with <c>\\.\</c>).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-580"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-580"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-581">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-581">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-582">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-582">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-583">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-583">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-584">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-584">The specified directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-585">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-585">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-586">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-586">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="FindInFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] fileWildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInFiles (directory As String, containsText As String, ignoreCase As Boolean, searchType As SearchOption, ParamArray fileWildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FindInFiles(System::String ^ directory, System::String ^ containsText, bool ignoreCase, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ fileWildcards);" />
      <MemberSignature Language="F#" Value="static member FindInFiles : string * string * bool * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles (directory, containsText, ignoreCase, searchType, fileWildcards)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="containsText" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="fileWildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-587">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-587">The directory to be searched.</span></span></param>
        <param name="containsText"><span data-ttu-id="ca089-588">検索文字列。</span><span class="sxs-lookup"><span data-stu-id="ca089-588">The search text.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="ca089-589">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-589"><see langword="True" /> if the search should be case-sensitive; otherwise <see langword="False" />.</span></span> <span data-ttu-id="ca089-590">既定値は <see langword="True" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-590">Default is <see langword="True" />.</span></span></param>
        <param name="searchType"><span data-ttu-id="ca089-591">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-591">Whether to include subfolders.</span></span> <span data-ttu-id="ca089-592">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-592">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="fileWildcards"><span data-ttu-id="ca089-593">検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="ca089-593">Pattern to be matched.</span></span></param>
        <summary><span data-ttu-id="ca089-594">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-594">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="ca089-595">指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca089-595">Read-only collection of the names of files containing the specified text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-596">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-596">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="ca089-597">次の表に、`My.Computer.FileSystem.FindInFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-597">The following table lists an example of a task involving the `My.Computer.FileSystem.FindInFiles` method.</span></span>  
  
|<span data-ttu-id="ca089-598">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-598">To</span></span>|<span data-ttu-id="ca089-599">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-599">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-600">特定の文字列を含むファイルをディレクトリで検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-600">Search a directory for files containing a specific string</span></span>|[<span data-ttu-id="ca089-601">チュートリアル: Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="ca089-601">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-602">この例では、ディレクトリ `C:\TestDir` で文字列 `"sample string"` を含むすべてのファイルを検索し、`ListBox1`に結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-602">This example searches the directory `C:\TestDir` for any files containing the string `"sample string"` and displays the results in `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#12)]  
  
 <span data-ttu-id="ca089-603">作業するには、プロジェクトに `ListBox1`という名前の `ListBox` が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-603">In order to work, the project must contain a `ListBox` named `ListBox1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-604">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\\.\</c> である) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-604">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with <c>\\.\</c>).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-605"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-605"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-606">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-606">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-607">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-607">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-608">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-608">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-609">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-609">The specified directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-610">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-610">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-611">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-611">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-612">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-612">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetDirectories (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectories (directory As String) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetDirectories(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member GetDirectories : string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories directory" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-613">ディレクトリの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-613">Name and path of directory.</span></span></param>
        <summary><span data-ttu-id="ca089-614">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-614">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
        <returns><span data-ttu-id="ca089-615">指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca089-615">Read-only collection of the path names of subdirectories within the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-616">次の表に、`My.Computer.FileSystem.GetDirectories` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-616">The following table lists an example of a task involving the `My.Computer.FileSystem.GetDirectories` method.</span></span>  
  
|<span data-ttu-id="ca089-617">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-617">To</span></span>|<span data-ttu-id="ca089-618">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-618">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-619">特定のパターンでサブディレクトリを一覧表示する</span><span class="sxs-lookup"><span data-stu-id="ca089-619">List subdirectories with a specific pattern</span></span>|[<span data-ttu-id="ca089-620">方法: Visual Basic で特定のパターンを持つサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-620">How to: Find Subdirectories with a Specific Pattern in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-621">次の例では、名前に `Logs` という単語が含まれているディレクトリ構造内のすべてのディレクトリを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="ca089-621">The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#10)]  
  
 <span data-ttu-id="ca089-622">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca089-622">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-623">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-623">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-624"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-624"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-625">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-625">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-626">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-626">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-627">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-627">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-628">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-628">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-629">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-629">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-630">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-630">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] wildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectories (directory As String, searchType As SearchOption, ParamArray wildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetDirectories(System::String ^ directory, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ wildcards);" />
      <MemberSignature Language="F#" Value="static member GetDirectories : string * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories (directory, searchType, wildcards)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="wildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-631">ディレクトリの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-631">Name and path of directory.</span></span></param>
        <param name="searchType"><span data-ttu-id="ca089-632">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-632">Whether to include subfolders.</span></span> <span data-ttu-id="ca089-633">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-633">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="wildcards"><span data-ttu-id="ca089-634">名前の検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="ca089-634">Pattern to match names.</span></span></param>
        <summary><span data-ttu-id="ca089-635">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-635">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
        <returns><span data-ttu-id="ca089-636">指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca089-636">Read-only collection of the path names of subdirectories within the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-637">`wildcards` パラメーターを使用して、特定のパターンを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-637">You can use the `wildcards` parameter to specify a specific pattern.</span></span> <span data-ttu-id="ca089-638">サブディレクトリの内容を検索対象に含めるには、`searchType` パラメーターを `SearchAllSubDirectories` に設定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-638">If you would like to include the contents of subdirectories in the search, set the `searchType` parameter to `SearchAllSubDirectories`.</span></span>  
  
 <span data-ttu-id="ca089-639">指定したパターンに一致するディレクトリが見つからなかった場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-639">An empty collection is returned if no directories matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="ca089-640">次の表に、`My.Computer.FileSystem.GetDirectories` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-640">The following table lists an example of a task involving the `My.Computer.FileSystem.GetDirectories` method.</span></span>  
  
|<span data-ttu-id="ca089-641">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-641">To</span></span>|<span data-ttu-id="ca089-642">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-642">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-643">特定のパターンでサブディレクトリを一覧表示する</span><span class="sxs-lookup"><span data-stu-id="ca089-643">List subdirectories with a specific pattern</span></span>|[<span data-ttu-id="ca089-644">方法: Visual Basic で特定のパターンを持つサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-644">How to: Find Subdirectories with a Specific Pattern in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-645">次の例では、名前に `Logs` という単語が含まれているディレクトリ構造内のすべてのディレクトリを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="ca089-645">The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#10)]  
  
 <span data-ttu-id="ca089-646">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca089-646">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-647">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-647">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-648">指定したワイルドカード文字の中に、<see langword="Nothing" />、空の文字列、または空白のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-648">One or more of the specified wildcard characters is <see langword="Nothing" />, an empty string, or contains only spaces.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-649">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-649">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-650">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-650">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-651">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-651">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-652">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-652">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-653">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-653">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-654">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-654">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryInfo">
      <MemberSignature Language="C#" Value="public static System.IO.DirectoryInfo GetDirectoryInfo (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DirectoryInfo GetDirectoryInfo(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryInfo (directory As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::DirectoryInfo ^ GetDirectoryInfo(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo directory" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.DirectoryInfo GetDirectoryInfo(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-655">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="ca089-655"><see langword="String" />.</span></span> <span data-ttu-id="ca089-656">ディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-656">Path of directory.</span></span></param>
        <summary><span data-ttu-id="ca089-657">指定したパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-657">Returns a <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</span></span></summary>
        <returns><span data-ttu-id="ca089-658">指定されたパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca089-658"><see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-659">ディレクトリが存在しない場合、<xref:System.IO.DirectoryInfo> オブジェクトのプロパティが初めてアクセスされるまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="ca089-659">If the directory does not exist, an exception is not thrown until the first time a property on the <xref:System.IO.DirectoryInfo> object is accessed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-660">この例では、ディレクトリ `C:\Documents and Settings` の <xref:System.IO.DirectoryInfo> オブジェクトを取得し、ディレクトリの作成時刻、最終アクセス時刻、最終書き込み時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-660">This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\Documents and Settings` and displays the directory's creation time, last access time, and last write time.</span></span>  
  
 [!code-vb[VbRefFile#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-661">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-661">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-662"><paramref name="directory" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-662"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-663">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-663">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-664">ディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-664">The directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-665">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-665">The user lacks necessary permissions to view the path</span></span></exception>
        <altmember cref="T:System.IO.DirectoryInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetDriveInfo">
      <MemberSignature Language="C#" Value="public static System.IO.DriveInfo GetDriveInfo (string drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DriveInfo GetDriveInfo(string drive) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDriveInfo (drive As String) As DriveInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::DriveInfo ^ GetDriveInfo(System::String ^ drive);" />
      <MemberSignature Language="F#" Value="static member GetDriveInfo : string -&gt; System.IO.DriveInfo" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo drive" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.DriveInfo GetDriveInfo(string drive) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DriveInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="drive"><span data-ttu-id="ca089-666">確認するドライブ。</span><span class="sxs-lookup"><span data-stu-id="ca089-666">Drive to be examined.</span></span></param>
        <summary><span data-ttu-id="ca089-667">指定したドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-667">Returns a <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</span></span></summary>
        <returns><span data-ttu-id="ca089-668">指定されたドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca089-668"><see cref="T:System.IO.DriveInfo" /> object for the specified drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-669"><xref:System.IO.DriveInfo> クラスはドライブをモデル化し、ドライブ情報を照会するためのメソッドとプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="ca089-669">The <xref:System.IO.DriveInfo> class models a drive and provides methods and properties to query for drive information.</span></span> <span data-ttu-id="ca089-670"><xref:System.IO.DriveInfo> を使用して、使用可能なドライブとそのドライブの種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-670">Use <xref:System.IO.DriveInfo> to determine what drives are available, and what type of drives they are.</span></span> <span data-ttu-id="ca089-671">また、プロパティを照会して、ドライブの容量と使用可能な空き領域を確認することもできます。</span><span class="sxs-lookup"><span data-stu-id="ca089-671">You can also query the property to determine the capacity and available free space on the drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-672">この例では、C ドライブの <xref:System.IO.DriveInfo> オブジェクトを取得し、それを使用してドライブに関する情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-672">This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.</span></span>  
  
 [!code-vb[VbRefFile#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#11)]  
  
 <span data-ttu-id="ca089-673">さまざまなドライブの種類の詳細については、「<xref:System.IO.DriveType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ca089-673">For information on the different drive types, see <xref:System.IO.DriveType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-674">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-674">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-675"><paramref name="drive" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-675"><paramref name="drive" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-676">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-676">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-677">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-677">The user lacks necessary permissions to view the path</span></span></exception>
        <altmember cref="T:System.IO.DriveInfo" />
        <altmember cref="T:System.IO.DriveType" />
      </Docs>
    </Member>
    <Member MemberName="GetFileInfo">
      <MemberSignature Language="C#" Value="public static System.IO.FileInfo GetFileInfo (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.FileInfo GetFileInfo(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileInfo (file As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::FileInfo ^ GetFileInfo(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member GetFileInfo : string -&gt; System.IO.FileInfo" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo file" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.FileInfo GetFileInfo(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-678">ファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-678">Name and path of the file.</span></span></param>
        <summary><span data-ttu-id="ca089-679">指定したファイルの <see cref="T:System.IO.FileInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-679">Returns a <see cref="T:System.IO.FileInfo" /> object for the specified file.</span></span></summary>
        <returns><span data-ttu-id="ca089-680">指定されたファイルの <see cref="T:System.IO.FileInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca089-680"><see cref="T:System.IO.FileInfo" /> object for the specified file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-681">ファイルが存在しない場合、例外はスローされません。代わりに、オブジェクトのプロパティに初めてアクセスしたときにスローされます。</span><span class="sxs-lookup"><span data-stu-id="ca089-681">An exception is not thrown if the file does not exist; rather, it will be thrown the first time the object's properties are accessed.</span></span>  
  
 <span data-ttu-id="ca089-682">次の表に、`My.Computer.FileSystem.GetFileInfo` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-682">The following table lists an example of a task involving the `My.Computer.FileSystem.GetFileInfo` method.</span></span>  
  
|<span data-ttu-id="ca089-683">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-683">To</span></span>|<span data-ttu-id="ca089-684">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-684">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-685">ファイルの名前とパスを確認する</span><span class="sxs-lookup"><span data-stu-id="ca089-685">Determine a file's name and path</span></span>|[<span data-ttu-id="ca089-686">方法: Visual Basic でファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="ca089-686">How to: Parse File Paths in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-687">この例では、ファイル `MyLogFile.log` の <xref:System.IO.FileInfo?displayProperty=nameWithType> オブジェクトを取得し、それを使用してファイルの完全名、最終アクセス時刻、および長さを報告します。</span><span class="sxs-lookup"><span data-stu-id="ca089-687">This example retrieves a <xref:System.IO.FileInfo?displayProperty=nameWithType> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.</span></span>  
  
 [!code-vb[VbRefFile#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-688">パス名が不適切である場合。</span><span class="sxs-lookup"><span data-stu-id="ca089-688">The path name is malformed.</span></span> <span data-ttu-id="ca089-689">たとえば、無効な文字が含まれている場合や、空白のみの場合などがあります。</span><span class="sxs-lookup"><span data-stu-id="ca089-689">For example, it contains invalid characters or is only white space.</span></span> <span data-ttu-id="ca089-690">ファイル名の末尾にスラッシュ記号が付いています。</span><span class="sxs-lookup"><span data-stu-id="ca089-690">The file name has a trailing slash mark.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-691"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-691"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-692">パス文字列の途中にコロンが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-692">The path contains a colon in the middle of the string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-693">パスが長すぎます。</span><span class="sxs-lookup"><span data-stu-id="ca089-693">The path is too long.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-694">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-694">The user lacks necessary permissions.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-695">当該ファイルに対して、ユーザーがアクセス制御リスト (ACL: access control list) のアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-695">The user lacks ACL (access control list) access to the file.</span></span></exception>
        <altmember cref="T:System.IO.FileInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-696">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-696">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetFiles (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFiles (directory As String) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetFiles(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member GetFiles : string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetFiles directory" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-697">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-697">Directory to be searched.</span></span></param>
        <summary><span data-ttu-id="ca089-698">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-698">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
        <returns><span data-ttu-id="ca089-699">指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca089-699">Read-only collection of file names from the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-700">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-700">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="ca089-701">次の表に、`My.Computer.FileSystem.GetFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-701">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetFiles` method.</span></span>  
  
|<span data-ttu-id="ca089-702">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-702">To</span></span>|<span data-ttu-id="ca089-703">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-703">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-704">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca089-704">Get the collection of files in a directory</span></span>|[<span data-ttu-id="ca089-705">方法: Visual Basic のディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="ca089-705">How to: Get the Collection of Files in a Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory.md)|  
|<span data-ttu-id="ca089-706">ディレクトリ内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-706">Find files with a specific pattern in a directory</span></span>|[<span data-ttu-id="ca089-707">方法: Visual Basic 内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-707">How to: Find Files with a Specific Pattern in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-708">次の例では、ディレクトリ内のすべてのファイルが返され、`ListBox1` に追加されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-708">The following example returns all files in the directory and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#5)]  
  
 <span data-ttu-id="ca089-709">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca089-709">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 <span data-ttu-id="ca089-710">この例では、ディレクトリ内の拡張子 `.txt` を持つすべてのファイルを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="ca089-710">This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#6)]  
  
 <span data-ttu-id="ca089-711">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca089-711">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-712">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-712">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-713"><paramref name="directory" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-713"><paramref name="directory" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-714">検索対象のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-714">The directory to search does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-715"><paramref name="directory" /> が既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-715"><paramref name="directory" /> points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-716">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-716">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-717">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-717">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-718">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-718">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-719">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-719">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] wildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFiles (directory As String, searchType As SearchOption, ParamArray wildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetFiles(System::String ^ directory, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ wildcards);" />
      <MemberSignature Language="F#" Value="static member GetFiles : string * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetFiles (directory, searchType, wildcards)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="wildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-720">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="ca089-720">Directory to be searched.</span></span></param>
        <param name="searchType"><span data-ttu-id="ca089-721">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="ca089-721">Whether to include subfolders.</span></span> <span data-ttu-id="ca089-722">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-722">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="wildcards"><span data-ttu-id="ca089-723">検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="ca089-723">Pattern to be matched.</span></span></param>
        <summary><span data-ttu-id="ca089-724">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-724">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
        <returns><span data-ttu-id="ca089-725">指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="ca089-725">Read-only collection of file names from the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-726">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-726">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="ca089-727">次の表に、`My.Computer.FileSystem.GetFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-727">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetFiles` method.</span></span>  
  
|<span data-ttu-id="ca089-728">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-728">To</span></span>|<span data-ttu-id="ca089-729">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-729">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-730">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca089-730">Get the collection of files in a directory</span></span>|[<span data-ttu-id="ca089-731">方法: Visual Basic のディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="ca089-731">How to: Get the Collection of Files in a Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory.md)|  
|<span data-ttu-id="ca089-732">ディレクトリ内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-732">Find files with a specific pattern in a directory</span></span>|[<span data-ttu-id="ca089-733">方法: Visual Basic 内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="ca089-733">How to: Find Files with a Specific Pattern in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-734">次の例では、ディレクトリ内のすべてのファイルが返され、`ListBox1` に追加されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-734">The following example returns all files in the directory and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#5)]  
  
 <span data-ttu-id="ca089-735">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca089-735">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 <span data-ttu-id="ca089-736">この例では、ディレクトリ内の拡張子 `.txt` を持つすべてのファイルを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="ca089-736">This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#6)]  
  
 <span data-ttu-id="ca089-737">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="ca089-737">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-738">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-738">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-739"><paramref name="directory" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-739"><paramref name="directory" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-740">検索対象のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-740">The directory to search does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-741"><paramref name="directory" /> が既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-741"><paramref name="directory" /> points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-742">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-742">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-743">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-743">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-744">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-744">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-745">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-745">The user lacks necessary permissions.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(string path) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetName : string -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetName path" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetName(string path) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ca089-746">必須。</span><span class="sxs-lookup"><span data-stu-id="ca089-746">Required.</span></span> <span data-ttu-id="ca089-747">解析対象のパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-747">Path to be parsed.</span></span> <span data-ttu-id="ca089-748">[https://login.microsoftonline.com/consumers/](<see langword="String" />)</span><span class="sxs-lookup"><span data-stu-id="ca089-748"><see langword="String" />.</span></span></param>
        <summary><span data-ttu-id="ca089-749">指定されたパスからファイル名を解析し、取り出します。</span><span class="sxs-lookup"><span data-stu-id="ca089-749">Parses the file name out of the path provided.</span></span></summary>
        <returns><span data-ttu-id="ca089-750">指定されたパスのファイル名部分。</span><span class="sxs-lookup"><span data-stu-id="ca089-750">The file name from the specified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-751">これは文字列操作です。`FileSystem` は検証されません。</span><span class="sxs-lookup"><span data-stu-id="ca089-751">This is a string operation; the `FileSystem` is not examined.</span></span>  
  
 <span data-ttu-id="ca089-752">`GetName` メソッドは、パスの末尾で発生するスラッシュ記号を無視します。</span><span class="sxs-lookup"><span data-stu-id="ca089-752">The `GetName` method ignores a slash mark occurring at the end of the path.</span></span>  
  
 <span data-ttu-id="ca089-753">次の表に、`My.Computer.FileSystem.GetFileName` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-753">The following table lists an example of a task involving the `My.Computer.FileSystem.GetFileName` method.</span></span>  
  
|<span data-ttu-id="ca089-754">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-754">To</span></span>|<span data-ttu-id="ca089-755">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-755">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-756">ファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="ca089-756">Parse a file path</span></span>|[<span data-ttu-id="ca089-757">方法: Visual Basic でファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="ca089-757">How to: Parse File Paths in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-758">次の例では、ファイルパスを解析し、ファイルの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-758">The following example parses a file path and returns the name of the file.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#21)]  
  
 <span data-ttu-id="ca089-759">パス `C:\Testdirectory\Testfile` を解析するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ca089-759">Replace the path `C:\Testdirectory\Testfile` with the path you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentPath">
      <MemberSignature Language="C#" Value="public static string GetParentPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetParentPath(string path) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParentPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetParentPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetParentPath : string -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath path" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetParentPath(string path) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="ca089-760">確認するパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-760">Path to be examined.</span></span></param>
        <summary><span data-ttu-id="ca089-761">指定されたパスの親パスを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-761">Returns the parent path of the provided path.</span></span></summary>
        <returns><span data-ttu-id="ca089-762">指定されたパスの親パス。</span><span class="sxs-lookup"><span data-stu-id="ca089-762">The parent path of the provided path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-763">これは文字列操作です。ファイルシステムが検査されません。</span><span class="sxs-lookup"><span data-stu-id="ca089-763">This is a string operation; the file system is not examined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-764">この例では、`C:\Backups\Tmp\Test`の親パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="ca089-764">This example gets the parent path for `C:\Backups\Tmp\Test`.</span></span>  
  
 [!code-vb[VbRefFile#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-765">パスがルート パスであるため、親パスが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-765">Path does not have a parent path because it is a root path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-766"><paramref name="path" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-766"><paramref name="path" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-767">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-767">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-768">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-768">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTempFileName">
      <MemberSignature Language="C#" Value="public static string GetTempFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempFileName() cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempFileName();" />
      <MemberSignature Language="F#" Value="static member GetTempFileName : unit -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName " />
      <MemberSignature Language="ILAsm" Value=".method public static string GetTempFileName() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca089-769">一意な名前を持つ 0 バイトの一時ファイルをディスク上に作成し、そのファイルへの完全パスを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-769">Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.</span></span></summary>
        <returns><span data-ttu-id="ca089-770">一時ファイルの完全パスを保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-770"><see langword="String" /> containing the full path of the temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-771">このメソッドを使用して、一時ファイルを作成できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-771">This method can be used to create a temporary file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-772">この例では、一時ファイルを作成し、そのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-772">This example creates a temp file and returns its path.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-773">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-773">Moves a directory from one location to another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member MoveDirectory : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory (sourceDirectoryName, destinationDirectoryName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="ca089-774">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-774">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="ca089-775">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-775">Path of the directory to which the source directory is being moved.</span></span></param>
        <summary><span data-ttu-id="ca089-776">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-776">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-777">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-777">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-778">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-778">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="ca089-779">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="ca089-779">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-780">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-780">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-781"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-781"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-782">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-782">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-783">移動先がルート ディレクトリであるか、移動元と移動先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="ca089-783">The source is a root directory or The source path and the target path are the same.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-784">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-784">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca089-785">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-785">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-786">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-786">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-787">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-787">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-788">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-788">The user does not have required permission.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="static member MoveDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory (sourceDirectoryName, destinationDirectoryName, showUI)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="ca089-789">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-789">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="ca089-790">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-790">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-791">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-791">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-792">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-792">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="ca089-793">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-793">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-794">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-794">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-795">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-795">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="ca089-796">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="ca089-796">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-797">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-797">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-798"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-798"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-799">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-799">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-800">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-800">The target directory already exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-801">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-801">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca089-802">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-802">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-803">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-803">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-804">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-804">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-805">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-805">The user does not have required permission.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member MoveDirectory : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory (sourceDirectoryName, destinationDirectoryName, overwrite)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="ca089-806">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-806">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="ca089-807">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-807">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="overwrite"><span data-ttu-id="ca089-808">既存のディレクトリを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-808"><see langword="True" /> if existing directories should be overwritten; otherwise <see langword="False" />.</span></span> <span data-ttu-id="ca089-809">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-809">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="ca089-810">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-810">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-811">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-811">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-812">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-812">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="ca089-813">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="ca089-813">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-814">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-814">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-815"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-815"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-816">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-816">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-817">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ca089-817">The target directory already exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-818">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-818">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca089-819">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-819">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-820">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-820">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-821">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-821">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-822">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-822">The user does not have required permission.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member MoveDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory (sourceDirectoryName, destinationDirectoryName, showUI, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="ca089-823">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-823">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="ca089-824">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-824">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-825">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-825">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-826">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-826">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="ca089-827">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-827">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="ca089-828">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-828">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="ca089-829">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-829">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-830">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-830">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-831">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-831">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="ca089-832">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="ca089-832">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-833">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-833">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-834"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-834"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-835">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-835">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-836"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されており、ファイルのサブディレクトリをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="ca089-836"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" /> and a subdirectory of the file cannot be copied.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-837"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、操作を完了できませんでした。</span><span class="sxs-lookup"><span data-stu-id="ca089-837"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" />, and the user cancels the operation, or the operation cannot be completed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-838">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-838">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-839">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-839">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ca089-840">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="ca089-840">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-841">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-841">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-842">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-842">The user does not have required permission.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-843">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-843">Moves a file to a new location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public static void MoveFile (string sourceFileName, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveFile(string sourceFileName, string destinationFileName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveFile (sourceFileName As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member MoveFile : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveFile (sourceFileName, destinationFileName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveFile(string sourceFileName, string destinationFileName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="ca089-844">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-844">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="ca089-845">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-845">Path of the directory into which the file should be moved.</span></span></param>
        <summary><span data-ttu-id="ca089-846">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-846">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-847">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-847">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="ca089-848">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="ca089-848">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="ca089-849">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="ca089-849">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="ca089-850">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="ca089-850">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="ca089-851">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-851">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="ca089-852">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-852">To</span></span>|<span data-ttu-id="ca089-853">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-853">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-854">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="ca089-854">Move a file</span></span>|[<span data-ttu-id="ca089-855">方法: Visual Basic でファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="ca089-855">How to: Move a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-856">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-856">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="ca089-857">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-857">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-858">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-858">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-859"><paramref name="destinationFileName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-859"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-860">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-860">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-861">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-861">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-862">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-862">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-863">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-863">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-864">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-864">The user lacks necessary permissions to view the path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveFile (sourceFileName As String, destinationFileName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="static member MoveFile : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveFile (sourceFileName, destinationFileName, showUI)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="ca089-865">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-865">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="ca089-866">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-866">Path of the directory into which the file should be moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-867">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-867">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-868">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-868">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="ca089-869">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-869">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-870">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-870">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="ca089-871">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="ca089-871">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="ca089-872">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="ca089-872">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="ca089-873">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="ca089-873">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="ca089-874">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-874">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="ca089-875">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-875">To</span></span>|<span data-ttu-id="ca089-876">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-876">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-877">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="ca089-877">Move a file</span></span>|[<span data-ttu-id="ca089-878">方法: Visual Basic でファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="ca089-878">How to: Move a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-879">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-879">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="ca089-880">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-880">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-881">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-881">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-882"><paramref name="destinationFileName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-882"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-883">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-883">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-884">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-884">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-885">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-885">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-886">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-886">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-887">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-887">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public static void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveFile (sourceFileName As String, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member MoveFile : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveFile (sourceFileName, destinationFileName, overwrite)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="ca089-888">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-888">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="ca089-889">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-889">Path of the directory into which the file should be moved.</span></span></param>
        <param name="overwrite"><span data-ttu-id="ca089-890">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-890"><see langword="True" /> to overwrite existing files; otherwise <see langword="False" />.</span></span> <span data-ttu-id="ca089-891">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-891">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="ca089-892">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-892">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-893">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-893">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="ca089-894">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="ca089-894">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="ca089-895">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="ca089-895">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="ca089-896">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="ca089-896">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="ca089-897">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-897">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="ca089-898">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-898">To</span></span>|<span data-ttu-id="ca089-899">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-899">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-900">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="ca089-900">Move a file</span></span>|[<span data-ttu-id="ca089-901">方法: Visual Basic でファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="ca089-901">How to: Move a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-902">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-902">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="ca089-903">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-903">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-904">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-904">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-905"><paramref name="destinationFileName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-905"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-906">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-906">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-907">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-907">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-908">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-908">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-909">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-909">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-910">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-910">The user lacks necessary permissions to view the path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveFile (sourceFileName As String, destinationFileName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member MoveFile : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveFile (sourceFileName, destinationFileName, showUI, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="ca089-911">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-911">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="ca089-912">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-912">Path of the directory into which the file should be moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="ca089-913">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-913">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="ca089-914">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-914">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="ca089-915">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-915">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="ca089-916">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-916">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="ca089-917">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-917">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-918">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-918">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="ca089-919">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="ca089-919">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="ca089-920">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="ca089-920">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="ca089-921">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="ca089-921">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="ca089-922">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-922">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="ca089-923">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-923">To</span></span>|<span data-ttu-id="ca089-924">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-924">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-925">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="ca089-925">Move a file</span></span>|[<span data-ttu-id="ca089-926">方法: Visual Basic でファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="ca089-926">How to: Move a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-927">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="ca089-927">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="ca089-928">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-928">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-929">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-929">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-930"><paramref name="destinationFileName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-930"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-931">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-931">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-932">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-932">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="ca089-933"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合に、ユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-933"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" />, and either the user has cancelled the operation or an unspecified I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-934">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-934">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-935">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-935">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-936">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-936">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFieldParser">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-937"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca089-937">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="ca089-938"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-938">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFieldParser (file As String) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member OpenTextFieldParser : string -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser file" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-939"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-939">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <summary><span data-ttu-id="ca089-940"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca089-940">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object,  which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="ca089-941"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-941">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="ca089-942">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-942"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-943">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-943">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="ca089-944">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-944">To</span></span>|<span data-ttu-id="ca089-945">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-945">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-946">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-946">Read from a delimited text file</span></span>|[<span data-ttu-id="ca089-947">方法: Visual Basic でコンマ区切りのテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-947">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="ca089-948">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-948">Read from a fixed-width text file</span></span>|[<span data-ttu-id="ca089-949">方法: Visual Basic で固定幅のテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-949">How to: Read From Fixed-width Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="ca089-950">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-950">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="ca089-951">方法: Visual Basic で複数の形式を持つテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-951">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-952">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca089-952">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-953">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-953">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-954"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-954"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-955">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-955">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-956">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-956">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-957">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-957">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-958">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-958">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="ca089-959">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="ca089-959">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="ca089-960">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-960">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-961">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-961">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      </Docs>
    </Member>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, params int[] fieldWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, int32[] fieldWidths) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFieldParser (file As String, ParamArray fieldWidths As Integer()) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file, ... cli::array &lt;int&gt; ^ fieldWidths);" />
      <MemberSignature Language="F#" Value="static member OpenTextFieldParser : string * int[] -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser (file, fieldWidths)" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, int32[] fieldWidths) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="fieldWidths" Type="System.Int32[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-962"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-962">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <param name="fieldWidths"><span data-ttu-id="ca089-963">フィールドの幅。</span><span class="sxs-lookup"><span data-stu-id="ca089-963">Widths of the fields.</span></span></param>
        <summary><span data-ttu-id="ca089-964"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca089-964">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="ca089-965"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-965">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="ca089-966">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-966"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-967">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-967">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="ca089-968">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-968">To</span></span>|<span data-ttu-id="ca089-969">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-969">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-970">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-970">Read from a delimited text file</span></span>|[<span data-ttu-id="ca089-971">方法: Visual Basic でコンマ区切りのテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-971">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="ca089-972">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-972">Read from a fixed-width text file</span></span>|[<span data-ttu-id="ca089-973">方法: Visual Basic で固定幅のテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-973">How to: Read From Fixed-width Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="ca089-974">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-974">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="ca089-975">方法: Visual Basic で複数の形式を持つテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-975">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-976">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca089-976">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-977">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-977">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-978"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-978"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-979">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-979">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-980">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-980">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-981">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-981">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-982">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-982">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="ca089-983">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="ca089-983">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="ca089-984">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-984">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-985">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-985">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      </Docs>
    </Member>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, params string[] delimiters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, string[] delimiters) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFieldParser (file As String, ParamArray delimiters As String()) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file, ... cli::array &lt;System::String ^&gt; ^ delimiters);" />
      <MemberSignature Language="F#" Value="static member OpenTextFieldParser : string * string[] -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser (file, delimiters)" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, string[] delimiters) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="delimiters" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-986"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-986">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <param name="delimiters"><span data-ttu-id="ca089-987">フィールドの区切り記号。</span><span class="sxs-lookup"><span data-stu-id="ca089-987">Delimiters for the fields.</span></span></param>
        <summary><span data-ttu-id="ca089-988"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ca089-988">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="ca089-989"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-989">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="ca089-990">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-990"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-991">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-991">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="ca089-992">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-992">To</span></span>|<span data-ttu-id="ca089-993">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-993">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-994">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-994">Read from a delimited text file</span></span>|[<span data-ttu-id="ca089-995">方法: Visual Basic でコンマ区切りのテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-995">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="ca089-996">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-996">Read from a fixed-width text file</span></span>|[<span data-ttu-id="ca089-997">方法: Visual Basic で固定幅のテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-997">How to: Read From Fixed-width Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="ca089-998">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-998">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="ca089-999">方法: Visual Basic で複数の形式を持つテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-999">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1000">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1000">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1001">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1001">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1002"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1002"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1003">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1003">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1004">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-1004">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1005">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1005">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1006">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1006">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="ca089-1007">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1007">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="ca089-1008">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1008">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1009">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1009">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFileReader">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-1010"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1010">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFileReader">
      <MemberSignature Language="C#" Value="public static System.IO.StreamReader OpenTextFileReader (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.StreamReader OpenTextFileReader(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFileReader (file As String) As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::StreamReader ^ OpenTextFileReader(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member OpenTextFileReader : string -&gt; System.IO.StreamReader" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader file" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.StreamReader OpenTextFileReader(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1011">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-1011">File to be read.</span></span></param>
        <summary><span data-ttu-id="ca089-1012"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1012">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
        <returns><span data-ttu-id="ca089-1013">ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca089-1013"><see cref="T:System.IO.StreamReader" /> object to read from the file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1014"><xref:System.IO.StreamReader>では、テキストファイルのみを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1014">Only text files can be read with a <xref:System.IO.StreamReader>.</span></span>  
  
 <span data-ttu-id="ca089-1015">次の表に、`My.Computer.FileSystem.OpenTextFileReader` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1015">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileReader` method.</span></span>  
  
|<span data-ttu-id="ca089-1016">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1016">To</span></span>|<span data-ttu-id="ca089-1017">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1017">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1018"><xref:System.IO.StreamReader> を使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1018">Open a file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="ca089-1019">方法: StreamReader を使用してファイルからテキストを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="ca089-1019">How to: Read Text from Files with a StreamReader (Visual Basic)</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1020">この例では、ファイル `Testfile.txt`を開き、そこから行を読み取り、`MessageBox`でその行を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1020">This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.</span></span>  
  
 [!code-vb[VbRefFile#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1021">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1021">The file name ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1022">指定されたファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1022">The specified file cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1023">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1023">The user lacks necessary permissions to read from the file.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="OpenTextFileReader">
      <MemberSignature Language="C#" Value="public static System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.StreamReader OpenTextFileReader(string file, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::StreamReader ^ OpenTextFileReader(System::String ^ file, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member OpenTextFileReader : string * System.Text.Encoding -&gt; System.IO.StreamReader" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader (file, encoding)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.StreamReader OpenTextFileReader(string file, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1024">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-1024">File to be read.</span></span></param>
        <param name="encoding"><span data-ttu-id="ca089-1025">ファイルの内容に使用されるエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="ca089-1025">The encoding to use for the file contents.</span></span> <span data-ttu-id="ca089-1026">既定値は ASCII です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1026">Default is ASCII.</span></span></param>
        <summary><span data-ttu-id="ca089-1027"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1027">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
        <returns><span data-ttu-id="ca089-1028">ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca089-1028"><see cref="T:System.IO.StreamReader" /> object to read from the file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1029"><xref:System.IO.StreamReader>では、テキストファイルのみを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1029">Only text files can be read with a <xref:System.IO.StreamReader>.</span></span>  
  
 <span data-ttu-id="ca089-1030">次の表に、`My.Computer.FileSystem.OpenTextFileReader` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1030">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileReader` method.</span></span>  
  
|<span data-ttu-id="ca089-1031">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1031">To</span></span>|<span data-ttu-id="ca089-1032">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1032">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1033"><xref:System.IO.StreamReader> を使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1033">Open a file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="ca089-1034">方法: StreamReader を使用してファイルからテキストを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="ca089-1034">How to: Read Text from Files with a StreamReader (Visual Basic)</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1035">この例では、ファイル `Testfile.txt`を開き、そこから行を読み取り、`MessageBox`でその行を表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1035">This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.</span></span>  
  
 [!code-vb[VbRefFile#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1036">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1036">The file name ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1037">指定されたファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1037">The specified file cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1038">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1038">The user lacks necessary permissions to read from the file.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFileWriter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-1039"><see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1039">Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFileWriter">
      <MemberSignature Language="C#" Value="public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.StreamWriter OpenTextFileWriter(string file, bool append) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFileWriter (file As String, append As Boolean) As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::StreamWriter ^ OpenTextFileWriter(System::String ^ file, bool append);" />
      <MemberSignature Language="F#" Value="static member OpenTextFileWriter : string * bool -&gt; System.IO.StreamWriter" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter (file, append)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.StreamWriter OpenTextFileWriter(string file, bool append) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1040">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-1040">File to be written to.</span></span></param>
        <param name="append"><span data-ttu-id="ca089-1041">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-1041"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span> <span data-ttu-id="ca089-1042">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1042">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="ca089-1043"><see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1043">Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></summary>
        <returns><span data-ttu-id="ca089-1044">指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca089-1044"><see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1045">`OpenTextFileWriter` メソッドは、ファイルのストリームを開いて初期化し、そのストリームの <xref:System.IO.StreamWriter> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1045">The `OpenTextFileWriter` method opens and initializes a stream for a file and then returns the <xref:System.IO.StreamWriter> object for that stream.</span></span> <span data-ttu-id="ca089-1046">必要に応じて何回でもストリームに書き込むことができます。終了したら、それを閉じます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1046">You can write to the steam as many times as necessary and then close it when you are finished.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca089-1047">すべてのデータが基になるストリームに正しく書き込まれるようにするには、<xref:System.IO.StreamWriter> オブジェクトの <xref:System.IO.StreamWriter.Close%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1047">You must call the <xref:System.IO.StreamWriter.Close%2A> method on the <xref:System.IO.StreamWriter> object to make sure that all data is correctly written to the underlying stream.</span></span>  
  
 <span data-ttu-id="ca089-1048">少数の文字列のみをファイルに書き込む場合は、<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> メソッドを使用する方が簡単な場合があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1048">If you are writing only a few strings to a file, it might be simpler to use the <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="ca089-1049">次の表に、`My.Computer.FileSystem.OpenTextFileWriter` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1049">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileWriter` method.</span></span>  
  
|<span data-ttu-id="ca089-1050">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1050">To</span></span>|<span data-ttu-id="ca089-1051">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1051">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1052">`StreamWriter` を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-1052">Write text to a file with a `StreamWriter`</span></span>|[<span data-ttu-id="ca089-1053">方法: StreamWriter を使用してファイルにテキストを書き込む Visual Basic</span><span class="sxs-lookup"><span data-stu-id="ca089-1053">How to: Write Text to Files with a StreamWriter in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1054">この例では、`My.Computer.FileSystem.OpenTextFileWriter` メソッドを使用して <xref:System.IO.StreamWriter> を開き、それを使用して `StreamWriter` クラスの `WriteLine` メソッドを使用してテキストファイルに文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1054">This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.</span></span>  
  
 [!code-vb[VbRefFile#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1055"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1055"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1056">ファイル名の末尾にスラッシュが付いています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1056">The file name ends with a trailing slash.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamWriter" />
      </Docs>
    </Member>
    <Member MemberName="OpenTextFileWriter">
      <MemberSignature Language="C#" Value="public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.StreamWriter OpenTextFileWriter(string file, bool append, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::StreamWriter ^ OpenTextFileWriter(System::String ^ file, bool append, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member OpenTextFileWriter : string * bool * System.Text.Encoding -&gt; System.IO.StreamWriter" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter (file, append, encoding)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.StreamWriter OpenTextFileWriter(string file, bool append, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1057">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-1057">File to be written to.</span></span></param>
        <param name="append"><span data-ttu-id="ca089-1058">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-1058"><see langword="True" /> to append to the contents in the file; <see langword="False" /> to overwrite the contents of the file.</span></span> <span data-ttu-id="ca089-1059">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1059">Default is <see langword="False" />.</span></span></param>
        <param name="encoding"><span data-ttu-id="ca089-1060">ファイルへの書き込み時に使用するエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="ca089-1060">Encoding to be used in writing to the file.</span></span> <span data-ttu-id="ca089-1061">既定値は ASCII です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1061">Default is ASCII.</span></span></param>
        <summary><span data-ttu-id="ca089-1062"><see cref="T:System.IO.StreamWriter" /> を開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1062">Opens a <see cref="T:System.IO.StreamWriter" /> to write to the specified file.</span></span></summary>
        <returns><span data-ttu-id="ca089-1063">指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ca089-1063"><see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1064">`OpenTextFileWriter` メソッドは、ファイルのストリームを開いて初期化し、そのストリームの <xref:System.IO.StreamWriter> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1064">The `OpenTextFileWriter` method opens and initializes a stream for a file and then returns the <xref:System.IO.StreamWriter> object for that stream.</span></span> <span data-ttu-id="ca089-1065">必要に応じて何回でもストリームに書き込むことができます。終了したら、それを閉じます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1065">You can write to the steam as many times as necessary and then close it when you are finished.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca089-1066">すべてのデータが基になるストリームに正しく書き込まれるようにするには、<xref:System.IO.StreamWriter> オブジェクトの <xref:System.IO.StreamWriter.Close%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1066">You must call the <xref:System.IO.StreamWriter.Close%2A> method on the <xref:System.IO.StreamWriter> object to make sure that all data is correctly written to the underlying stream.</span></span>  
  
 <span data-ttu-id="ca089-1067">少数の文字列のみをファイルに書き込む場合は、<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> メソッドを使用する方が簡単な場合があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1067">If you are writing only a few strings to a file, it might be simpler to use the <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="ca089-1068">次の表に、`My.Computer.FileSystem.OpenTextFileWriter` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1068">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileWriter` method.</span></span>  
  
|<span data-ttu-id="ca089-1069">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1069">To</span></span>|<span data-ttu-id="ca089-1070">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1070">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1071">`StreamWriter` を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-1071">Write text to a file with a `StreamWriter`</span></span>|[<span data-ttu-id="ca089-1072">方法: StreamWriter を使用してファイルにテキストを書き込む Visual Basic</span><span class="sxs-lookup"><span data-stu-id="ca089-1072">How to: Write Text to Files with a StreamWriter in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1073">この例では、`Unicode` エンコーディングを使用して `My.Computer.FileSystem.OpenTextFileWriter` メソッドを使用して <xref:System.IO.StreamWriter> を開き、それを使用して、`StreamWriter` クラスの `WriteLine` メソッドを使用してテキストファイルに文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1073">This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method with `Unicode` encoding and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.</span></span>  
  
 [!code-vb[VbRefFile#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1074"><paramref name="file" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1074"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1075">ファイル名の末尾にスラッシュが付いています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1075">The file name ends with a trailing slash.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamWriter" />
      </Docs>
    </Member>
    <Member MemberName="ReadAllBytes">
      <MemberSignature Language="C#" Value="public static byte[] ReadAllBytes (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ReadAllBytes(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadAllBytes (file As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ReadAllBytes(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member ReadAllBytes : string -&gt; byte[]" Usage="Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes file" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8[] ReadAllBytes(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1076">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-1076">File to be read.</span></span></param>
        <summary><span data-ttu-id="ca089-1077">テキスト ファイルの内容をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1077">Returns the contents of a file as a byte array.</span></span></summary>
        <returns><span data-ttu-id="ca089-1078">ファイルの内容を保持する <see langword="Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="ca089-1078"><see langword="Byte" /> array containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1079">`My.Computer.FileSystem` オブジェクトの `ReadAllBytes` メソッドを使用すると、バイナリファイルから読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1079">The `ReadAllBytes` method of the `My.Computer.FileSystem` object allows you to read from a binary file.</span></span> <span data-ttu-id="ca089-1080">ファイルの内容は、バイト配列として返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1080">The contents of the file are returned as a byte array.</span></span>  
  
 <span data-ttu-id="ca089-1081">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1081">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="ca089-1082">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1082">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="ca089-1083">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1083">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="ca089-1084">次の表に、`My.Computer.FileSystem.ReadAllBytes` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1084">The following table lists an example of a task involving the `My.Computer.FileSystem.ReadAllBytes` method.</span></span>  
  
|<span data-ttu-id="ca089-1085">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1085">To</span></span>|<span data-ttu-id="ca089-1086">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1086">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1087">バイナリ ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-1087">Read from a binary file</span></span>|[<span data-ttu-id="ca089-1088">方法: Visual Basic でバイナリファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-1088">How to: Read From Binary Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-binary-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1089">この例では、ファイルから読み取り `C:/Documents and Settings/selfportrait.jpg.`</span><span class="sxs-lookup"><span data-stu-id="ca089-1089">This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1090">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1090">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1091"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1091"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1092">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1092">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1093">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-1093">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1094">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1094">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1095">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1095">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ca089-1096">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1096">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1097">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1097">The user lacks necessary permissions to view the path.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAllText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-1098">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1098">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAllText">
      <MemberSignature Language="C#" Value="public static string ReadAllText (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadAllText(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadAllText (file As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadAllText(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member ReadAllText : string -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText file" />
      <MemberSignature Language="ILAsm" Value=".method public static string ReadAllText(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1099">読み取るファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-1099">Name and path of the file to read.</span></span></param>
        <summary><span data-ttu-id="ca089-1100">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1100">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
        <returns><span data-ttu-id="ca089-1101">ファイルの内容を保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-1101"><see langword="String" /> containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1102">`ReadAllText` オブジェクトの `My.Computer.FileSystem` メソッドを使用すると、テキスト ファイルを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1102">The `ReadAllText` method of the `My.Computer.FileSystem` object allows you to read from a text file.</span></span> <span data-ttu-id="ca089-1103">ファイルの内容は文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1103">The contents of the file are returned as a string.</span></span>  
  
 <span data-ttu-id="ca089-1104">ファイルの内容が ASCII や UTF-8 などのエンコーディングに含まれる場合は、ファイルのエンコーディングを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1104">The file encoding can be specified if the contents of the file are in an encoding such as ASCII or UTF-8.</span></span> <span data-ttu-id="ca089-1105">拡張文字を含むファイルから読み取る場合は、<xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A> メソッドの別のオーバーロードを使用して、ファイルのエンコードを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1105">If you are reading from a file with extended characters, you need to specify the file encoding using another overload of the <xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A> method.</span></span>  
  
 <span data-ttu-id="ca089-1106">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1106">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="ca089-1107">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1107">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="ca089-1108">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1108">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="ca089-1109">次の表に、`My.Computer.FileSystem.ReadAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1109">The following table lists an example of a task involving the `My.Computer.FileSystem.ReadAllText` method.</span></span>  
  
|<span data-ttu-id="ca089-1110">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1110">To</span></span>|<span data-ttu-id="ca089-1111">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1111">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1112">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-1112">Read from a text file</span></span>|[<span data-ttu-id="ca089-1113">方法: Visual Basic でテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-1113">How to: Read From Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1114">この例では、`Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1114">This example reads the contents of `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ca089-1115">この例では、ASCII ファイル `Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1115">This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1116">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1116">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1117"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1117"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1118">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1118">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1119">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-1119">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1120">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1120">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1121">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1121">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ca089-1122">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1122">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1123">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1123">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText" />
        <altmember cref="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      </Docs>
    </Member>
    <Member MemberName="ReadAllText">
      <MemberSignature Language="C#" Value="public static string ReadAllText (string file, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadAllText(string file, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadAllText(System::String ^ file, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member ReadAllText : string * System.Text.Encoding -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText (file, encoding)" />
      <MemberSignature Language="ILAsm" Value=".method public static string ReadAllText(string file, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1124">読み取るファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="ca089-1124">Name and path of the file to read.</span></span></param>
        <param name="encoding"><span data-ttu-id="ca089-1125">ファイルの読み取り時に使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="ca089-1125">Character encoding to use in reading the file.</span></span> <span data-ttu-id="ca089-1126">既定値は UTF-8 です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1126">Default is UTF-8.</span></span></param>
        <summary><span data-ttu-id="ca089-1127">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1127">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
        <returns><span data-ttu-id="ca089-1128">ファイルの内容を保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-1128"><see langword="String" /> containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1129">`ReadAllText` オブジェクトの `My.Computer.FileSystem` メソッドを使用すると、テキスト ファイルを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1129">The `ReadAllText` method of the `My.Computer.FileSystem` object allows you to read from a text file.</span></span> <span data-ttu-id="ca089-1130">ファイルの内容は文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1130">The contents of the file are returned as a string.</span></span>  
  
 <span data-ttu-id="ca089-1131">ファイルの内容が ASCII や UTF-8 などのエンコーディングに含まれる場合は、ファイルのエンコーディングを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1131">The file encoding can be specified if the contents of the file are in an encoding such as ASCII or UTF-8.</span></span> <span data-ttu-id="ca089-1132">拡張文字を使用してファイルを読み取る場合は、ファイルのエンコードを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1132">If you are reading from a file with extended characters, you need to specify the file encoding.</span></span>  
  
 <span data-ttu-id="ca089-1133">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1133">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="ca089-1134">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1134">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="ca089-1135">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1135">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="ca089-1136">次の表に、`My.Computer.FileSystem.ReadAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1136">The following table lists an example of a task involving the `My.Computer.FileSystem.ReadAllText` method.</span></span>  
  
|<span data-ttu-id="ca089-1137">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1137">To</span></span>|<span data-ttu-id="ca089-1138">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1138">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1139">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="ca089-1139">Read from a text file</span></span>|[<span data-ttu-id="ca089-1140">方法: Visual Basic でテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="ca089-1140">How to: Read From Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1141">この例では、`Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1141">This example reads the contents of `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#8)]  
  
 <span data-ttu-id="ca089-1142">この例では、ASCII ファイル `Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1142">This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1143">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1143">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1144"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1144"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1145">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1145">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1146">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-1146">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1147">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1147">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1148">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1148">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ca089-1149">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1149">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1150">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1150">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      </Docs>
    </Member>
    <Member MemberName="RenameDirectory">
      <MemberSignature Language="C#" Value="public static void RenameDirectory (string directory, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenameDirectory(string directory, string newName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RenameDirectory (directory As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RenameDirectory(System::String ^ directory, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="static member RenameDirectory : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory (directory, newName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void RenameDirectory(string directory, string newName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="ca089-1151">名前を変更するディレクトリのパスおよび名前。</span><span class="sxs-lookup"><span data-stu-id="ca089-1151">Path and name of directory to be renamed.</span></span></param>
        <param name="newName"><span data-ttu-id="ca089-1152">ディレクトリの新しい名前。</span><span class="sxs-lookup"><span data-stu-id="ca089-1152">New name for directory.</span></span></param>
        <summary><span data-ttu-id="ca089-1153">ディレクトリ名を変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1153">Renames a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1154">このメソッドを使用してディレクトリを移動することはできません。`MoveDirectory` メソッドを使用して、ディレクトリの移動と名前変更を行います。</span><span class="sxs-lookup"><span data-stu-id="ca089-1154">This method cannot be used to move a directory; use the `MoveDirectory` method to move and rename the directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1155">この例では、`Test` ディレクトリの名前を `SecondTest`に変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1155">This example renames the `Test` directory to `SecondTest`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1156"><paramref name="newName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1156"><paramref name="newName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1157"><paramref name="directory" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1157"><paramref name="directory" /> is <see langword="Nothing" />.</span></span>  
  
<span data-ttu-id="ca089-1158">または</span><span class="sxs-lookup"><span data-stu-id="ca089-1158">-or-</span></span> 
 <span data-ttu-id="ca089-1159"><paramref name="newName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1159"><paramref name="newName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="ca089-1160">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1160">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1161"><paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1161">There is an existing file or directory with the name specified in <paramref name="newName" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1162">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1162">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1163">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1163">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1164">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1164">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-1165">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1165">The user does not have required permission.</span></span></exception>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory" />
      </Docs>
    </Member>
    <Member MemberName="RenameFile">
      <MemberSignature Language="C#" Value="public static void RenameFile (string file, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenameFile(string file, string newName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RenameFile (file As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RenameFile(System::String ^ file, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="static member RenameFile : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.RenameFile (file, newName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void RenameFile(string file, string newName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1166">名前を変更するファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-1166">File to be renamed.</span></span></param>
        <param name="newName"><span data-ttu-id="ca089-1167">新しいファイル名。</span><span class="sxs-lookup"><span data-stu-id="ca089-1167">New name of file.</span></span></param>
        <summary><span data-ttu-id="ca089-1168">ファイル名を変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1168">Renames a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1169">このメソッドは、ファイルを移動する目的には使用できません。ファイルを移動して名前を変更するには、<xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1169">This method cannot be used to move a file; use the <xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A> method to move and rename the file.</span></span>  
  
 <span data-ttu-id="ca089-1170">次の表に、`My.Computer.FileSystem.RenameFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1170">The following table lists an example of a task involving the `My.Computer.FileSystem.RenameFile` method.</span></span>  
  
|<span data-ttu-id="ca089-1171">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1171">To</span></span>|<span data-ttu-id="ca089-1172">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1172">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1173">ファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="ca089-1173">Rename a file</span></span>|[<span data-ttu-id="ca089-1174">方法: Visual Basic 内のファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="ca089-1174">How to: Rename a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1175">この例では、`Test.txt` ファイルの名前を `SecondTest.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1175">This example renames the file `Test.txt` to `SecondTest.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#1)]  
  
 <span data-ttu-id="ca089-1176">名前を変更するファイルのパスとファイル名に "`C:\Test.txt`" を変更します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1176">Change "`C:\Test.txt`" to the path and file name of the file that you want to rename.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1177"><paramref name="newName" /> にパス情報が含まれているか、末尾にバックスラッシュ (\\) が付いています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1177"><paramref name="newName" /> contains path information or ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1178"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1178"><paramref name="file" /> is <see langword="Nothing" />.</span></span>  
  
<span data-ttu-id="ca089-1179">または</span><span class="sxs-lookup"><span data-stu-id="ca089-1179">-or-</span></span> 
 <span data-ttu-id="ca089-1180"><paramref name="newName" /> は <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1180"><paramref name="newName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1181">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1181">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1182"><paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1182">There is an existing file or directory with the name specified in <paramref name="newName" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1183">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1183">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1184">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1184">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1185">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1185">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="ca089-1186">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1186">The user does not have required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAllBytes">
      <MemberSignature Language="C#" Value="public static void WriteAllBytes (string file, byte[] data, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteAllBytes(string file, unsigned int8[] data, bool append) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteAllBytes (file As String, data As Byte(), append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteAllBytes(System::String ^ file, cli::array &lt;System::Byte&gt; ^ data, bool append);" />
      <MemberSignature Language="F#" Value="static member WriteAllBytes : string * byte[] * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes (file, data, append)" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteAllBytes(string file, unsigned int8[] data, bool append) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1187">書き込み先のファイルのパスと名前。</span><span class="sxs-lookup"><span data-stu-id="ca089-1187">Path and name of the file to be written to.</span></span></param>
        <param name="data"><span data-ttu-id="ca089-1188">ファイルに書き込むデータ。</span><span class="sxs-lookup"><span data-stu-id="ca089-1188">Data to be written to the file.</span></span></param>
        <param name="append"><span data-ttu-id="ca089-1189">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-1189"><see langword="True" /> to append to the file contents; <see langword="False" /> to overwrite the file contents.</span></span> <span data-ttu-id="ca089-1190">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1190">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="ca089-1191">バイナリ ファイルにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1191">Writes data to a binary file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1192">指定されたパス (ファイル名を除く) が有効でない場合は、<xref:System.IO.DirectoryNotFoundException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1192">If the specified path, excluding the file name, is not valid, a <xref:System.IO.DirectoryNotFoundException> exception will be thrown.</span></span> <span data-ttu-id="ca089-1193">パスが有効であってもファイルが存在しない場合は、ファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1193">If the path is valid but the file does not exist, the file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca089-1194">`WriteAllBytes` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1194">The `WriteAllBytes` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="ca089-1195">`WriteAllBytes` メソッドを使用するコードは、<xref:System.IO.BinaryWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1195">Code that uses the `WriteAllBytes` method is simpler than code that uses a <xref:System.IO.BinaryWriter> object.</span></span> <span data-ttu-id="ca089-1196">ただし、ループを使用してデータをファイルに追加する場合は、ファイルを一度だけ開いて閉じなければならないため、<xref:System.IO.BinaryWriter> オブジェクトの方がパフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ca089-1196">However, if you are adding data to a file using a loop, a <xref:System.IO.BinaryWriter> object can provide better performance because you only have to open and close the file once.</span></span>  
  
 <span data-ttu-id="ca089-1197">次の表に、`My.Computer.FileSystem.WriteAllBytes` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1197">The following table lists an example of a task involving the `My.Computer.FileSystem.WriteAllBytes` method.</span></span>  
  
|<span data-ttu-id="ca089-1198">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1198">To</span></span>|<span data-ttu-id="ca089-1199">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1199">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1200">バイナリ ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="ca089-1200">Write to a binary file</span></span>|[<span data-ttu-id="ca089-1201">方法: Visual Basic でバイナリファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-1201">How to: Write to Binary Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-to-binary-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1202">この例では、データ配列 `CustomerData` をファイル `CollectedData`に追加します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1202">This example appends the data array `CustomerData` to the file `CollectedData`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1203">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1203">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1204"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1204"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1205">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1205">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1206">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-1206">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1207">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1207">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1208">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1208">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ca089-1209">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1209">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1210">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1210">The user lacks necessary permissions to view the path.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAllText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ca089-1211">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1211">Writes text to a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAllText">
      <MemberSignature Language="C#" Value="public static void WriteAllText (string file, string text, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteAllText(string file, string text, bool append) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteAllText (file As String, text As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteAllText(System::String ^ file, System::String ^ text, bool append);" />
      <MemberSignature Language="F#" Value="static member WriteAllText : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText (file, text, append)" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteAllText(string file, string text, bool append) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1212">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-1212">File to be written to.</span></span></param>
        <param name="text"><span data-ttu-id="ca089-1213">ファイルに書き込まれるテキスト。</span><span class="sxs-lookup"><span data-stu-id="ca089-1213">Text to be written to file.</span></span></param>
        <param name="append"><span data-ttu-id="ca089-1214">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-1214"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span></param>
        <summary><span data-ttu-id="ca089-1215">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1215">Writes text to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1216">UTF-8 エンコーディングは、ファイルへの書き込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1216">The UTF-8 encoding is used to write to the file.</span></span> <span data-ttu-id="ca089-1217">別のエンコードを指定するには、<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> メソッドの別のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1217">To specify a different encoding, use a different overload of the <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="ca089-1218">指定したファイルが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1218">If the specified file does not exist, it is created.</span></span>  
  
 <span data-ttu-id="ca089-1219">指定したエンコーディングがファイルの既存のエンコーディングと一致しない場合、指定されたコードは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1219">If the specified encoding does not match the existing encoding of the file, the specified coding is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca089-1220">`WriteAllText` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1220">The `WriteAllText` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="ca089-1221">`WriteAllText` メソッドを使用するコードは、<xref:System.IO.StreamWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1221">Code that uses the `WriteAllText` method is simpler than code that uses a <xref:System.IO.StreamWriter> object.</span></span> <span data-ttu-id="ca089-1222">ただし、ループを使用してファイルに文字列を追加する場合は、ファイルを1回だけ開いて閉じる必要があるため、<xref:System.IO.StreamWriter> オブジェクトを使用するとパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1222">However, if you are adding strings to a file by using a loop, a <xref:System.IO.StreamWriter> object can provide better performance because you only have to open and close the file one time.</span></span> <span data-ttu-id="ca089-1223">詳細については、<xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1223">For more information, see the <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A> method.</span></span>  
  
 <span data-ttu-id="ca089-1224">次の表に、`My.Computer.FileSystem.WriteAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1224">The following table lists examples of tasks involving the `My.Computer.FileSystem.WriteAllText` method.</span></span>  
  
|<span data-ttu-id="ca089-1225">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1225">To</span></span>|<span data-ttu-id="ca089-1226">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1226">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1227">テキストのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="ca089-1227">Write text to a file</span></span>|[<span data-ttu-id="ca089-1228">方法: Visual Basic 内のファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-1228">How to: Write Text to Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md)|  
|<span data-ttu-id="ca089-1229">ファイルへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="ca089-1229">Append text to a file</span></span>|[<span data-ttu-id="ca089-1230">方法: Visual Basic でテキストファイルに追加する</span><span class="sxs-lookup"><span data-stu-id="ca089-1230">How to: Append to Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1231">この例では、`"This is new text to be added."` 行をファイル `Test.txt`に書き込み、ファイル内の既存のテキストを上書きします。</span><span class="sxs-lookup"><span data-stu-id="ca089-1231">This example writes the line `"This is new text to be added."` to the file `Test.txt`, overwriting any existing text in the file.</span></span>  
  
 [!code-vb[VbRefFile#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#21)]  
  
 <span data-ttu-id="ca089-1232">この例では、`Documents and Settings` フォルダー内のファイルの名前を `FileList.txt`に書き込み、それぞれの間にキャリッジリターンを挿入して読みやすくします。</span><span class="sxs-lookup"><span data-stu-id="ca089-1232">This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.</span></span>  
  
 [!code-vb[VbRefFile#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1233">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1233">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1234"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1234"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1235">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1235">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1236">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-1236">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1237">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1237">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1238">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1238">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ca089-1239">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1239">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1240">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1240">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText" />
      </Docs>
    </Member>
    <Member MemberName="WriteAllText">
      <MemberSignature Language="C#" Value="public static void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteAllText(string file, string text, bool append, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteAllText(System::String ^ file, System::String ^ text, bool append, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member WriteAllText : string * string * bool * System.Text.Encoding -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText (file, text, append, encoding)" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteAllText(string file, string text, bool append, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ca089-1241">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="ca089-1241">File to be written to.</span></span></param>
        <param name="text"><span data-ttu-id="ca089-1242">ファイルに書き込まれるテキスト。</span><span class="sxs-lookup"><span data-stu-id="ca089-1242">Text to be written to file.</span></span></param>
        <param name="append"><span data-ttu-id="ca089-1243">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="ca089-1243"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span></param>
        <param name="encoding"><span data-ttu-id="ca089-1244">ファイルへの書き込み時に使用するエンコーディングを指定します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1244">What encoding to use when writing to file.</span></span></param>
        <summary><span data-ttu-id="ca089-1245">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1245">Writes text to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca089-1246">指定したファイルが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1246">If the specified file does not exist, it is created.</span></span>  
  
 <span data-ttu-id="ca089-1247">指定したエンコーディングがファイルの既存のエンコーディングと一致しない場合、指定されたコードは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1247">If the specified encoding does not match the existing encoding of the file, the specified coding is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca089-1248">`WriteAllText` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1248">The `WriteAllText` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="ca089-1249">`WriteAllText` メソッドを使用するコードは、<xref:System.IO.StreamWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1249">Code that uses the `WriteAllText` method is simpler than code that uses a <xref:System.IO.StreamWriter> object.</span></span> <span data-ttu-id="ca089-1250">ただし、ループを使用してファイルに文字列を追加する場合は、ファイルを1回だけ開いて閉じる必要があるため、<xref:System.IO.StreamWriter> オブジェクトを使用するとパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1250">However, if you are adding strings to a file by using a loop, a <xref:System.IO.StreamWriter> object can provide better performance because you only have to open and close the file one time.</span></span> <span data-ttu-id="ca089-1251">詳細については、<xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ca089-1251">For more information, see the <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A> method.</span></span>  
  
 <span data-ttu-id="ca089-1252">次の表に、`My.Computer.FileSystem.WriteAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="ca089-1252">The following table lists examples of tasks involving the `My.Computer.FileSystem.WriteAllText` method.</span></span>  
  
|<span data-ttu-id="ca089-1253">目的</span><span class="sxs-lookup"><span data-stu-id="ca089-1253">To</span></span>|<span data-ttu-id="ca089-1254">参照先</span><span class="sxs-lookup"><span data-stu-id="ca089-1254">See</span></span>|  
|-|-|  
|<span data-ttu-id="ca089-1255">テキストのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="ca089-1255">Write text to a file</span></span>|[<span data-ttu-id="ca089-1256">方法: Visual Basic 内のファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="ca089-1256">How to: Write Text to Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md)|  
|<span data-ttu-id="ca089-1257">ファイルへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="ca089-1257">Append text to a file</span></span>|[<span data-ttu-id="ca089-1258">方法: Visual Basic でテキストファイルに追加する</span><span class="sxs-lookup"><span data-stu-id="ca089-1258">How to: Append to Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="ca089-1259">この例では、`"This is new text to be added."` 行をファイル `Test.txt`に書き込み、ファイル内の既存のテキストを上書きします。</span><span class="sxs-lookup"><span data-stu-id="ca089-1259">This example writes the line `"This is new text to be added."` to the file `Test.txt`, overwriting any existing text in the file.</span></span>  
  
 [!code-vb[VbRefFile#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#21)]  
  
 <span data-ttu-id="ca089-1260">この例では、`Documents and Settings` フォルダー内のファイルの名前を `FileList.txt`に書き込み、それぞれの間にキャリッジリターンを挿入して読みやすくします。</span><span class="sxs-lookup"><span data-stu-id="ca089-1260">This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.</span></span>  
  
 [!code-vb[VbRefFile#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ca089-1261">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="ca089-1261">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ca089-1262"><paramref name="file" /> が <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1262"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ca089-1263">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1263">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ca089-1264">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="ca089-1264">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="ca089-1265">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="ca089-1265">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ca089-1266">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="ca089-1266">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="ca089-1267">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1267">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ca089-1268">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="ca089-1268">The user lacks necessary permissions to view the path.</span></span></exception>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
  </Members>
</Type>
