<Type Name="FileSystem" FullName="Microsoft.VisualBasic.FileIO.FileSystem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="718645f16f550f93c34bb96c4261b931017619dc" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75154488" /></Metadata><TypeSignature Language="C#" Value="public class FileSystem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileSystem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.FileSystem" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystem" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystem" />
  <TypeSignature Language="F#" Value="type FileSystem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fab50-101">ドライブ、ファイル、ディレクトリを操作するためのプロパティとメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="fab50-101">Provides properties and methods for working with drives, files, and directories.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-102">次の表に、`My.Computer.FileSystem` オブジェクトに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-102">The following table lists examples of tasks involving the `My.Computer.FileSystem` object.</span></span>  
  
|<span data-ttu-id="fab50-103">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-103">To</span></span>|<span data-ttu-id="fab50-104">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-104">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-105">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-105">Read from a text file</span></span>|[<span data-ttu-id="fab50-106">方法: テキスト ファイルからデータを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-106">How to: Read from Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)|  
|<span data-ttu-id="fab50-107">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-107">Read from a delimited text file</span></span>|[<span data-ttu-id="fab50-108">方法: コンマ区切りのテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-108">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="fab50-109">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-109">Read from a fixed-width text file</span></span>|[<span data-ttu-id="fab50-110">方法: 固定幅のテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-110">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="fab50-111">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-111">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="fab50-112">方法: 複数の書式を持つテキスト ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-112">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
|<span data-ttu-id="fab50-113">バイナリ ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-113">Read from a binary file</span></span>|[<span data-ttu-id="fab50-114">方法: バイナリ ファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-114">How to: Read From Binary Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-binary-files.md)|  
|<span data-ttu-id="fab50-115"><xref:System.IO.StreamReader> のあるテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-115">Read from a text file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="fab50-116">方法: StreamReader を使用してファイルからテキストを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-116">How to: Read Text from Files with a StreamReader</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md)|  
|<span data-ttu-id="fab50-117">テキスト ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fab50-117">Write to a text file</span></span>|[<span data-ttu-id="fab50-118">方法: ファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-118">How to: Write Text to Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md)|  
|<span data-ttu-id="fab50-119">テキストファイルに追加する</span><span class="sxs-lookup"><span data-stu-id="fab50-119">Append to a text file</span></span>|[<span data-ttu-id="fab50-120">方法: テキスト ファイルに追記する</span><span class="sxs-lookup"><span data-stu-id="fab50-120">How to: Append to Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files.md)|  
|<span data-ttu-id="fab50-121">バイナリ ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fab50-121">Write to a binary file</span></span>|[<span data-ttu-id="fab50-122">方法: バイナリ ファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-122">How to: Write to Binary Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-to-binary-files.md)|  
|<span data-ttu-id="fab50-123">**マイドキュメント**ディレクトリ内のテキストファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fab50-123">Write to text files in the **MyDocuments** directory</span></span>|[<span data-ttu-id="fab50-124">方法: My Documents ディレクトリのファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-124">How to: Write Text to Files in the My Documents Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-in-the-my-documents-directory.md)|  
|<span data-ttu-id="fab50-125">`StreamWriter` を使用してテキストファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-125">Write to a text file with a `StreamWriter`</span></span>|[<span data-ttu-id="fab50-126">方法: StreamWriter を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-126">How to: Write Text to Files with a StreamWriter</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md)|  
|<span data-ttu-id="fab50-127">特定のパターンを持つファイルをコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-127">Copy files with a specific pattern</span></span>|[<span data-ttu-id="fab50-128">方法: 特定のパターンを持つファイルをディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-128">How to: Copy Files with a Specific Pattern to a Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-files-with-a-specific-pattern-to-a-directory.md)|  
|<span data-ttu-id="fab50-129">同じディレクトリにファイルをコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-129">Copy a file to the same directory</span></span>|[<span data-ttu-id="fab50-130">方法: ファイルのコピーを同じディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-130">How to: Create a Copy of a File in the Same Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="fab50-131">ファイルを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-131">Copy a file to a different directory</span></span>|[<span data-ttu-id="fab50-132">方法: ファイルのコピーを別のディレクトリに作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-132">How to: Create a Copy of a File in a Different Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
|<span data-ttu-id="fab50-133">ファイルの作成</span><span class="sxs-lookup"><span data-stu-id="fab50-133">Create a file</span></span>|[<span data-ttu-id="fab50-134">方法: ファイルを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-134">How to: Create a File</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-file.md)|  
|<span data-ttu-id="fab50-135">ファイルの削除</span><span class="sxs-lookup"><span data-stu-id="fab50-135">Delete a file</span></span>|[<span data-ttu-id="fab50-136">方法: ファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fab50-136">How to: Delete a File</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file.md)|  
|<span data-ttu-id="fab50-137">特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-137">Find files with a specific pattern</span></span>|[<span data-ttu-id="fab50-138">方法: 特定のパターンに一致するファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-138">How to: Find Files with a Specific Pattern</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern.md)|  
|<span data-ttu-id="fab50-139">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fab50-139">Move a file</span></span>|[<span data-ttu-id="fab50-140">方法: ファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fab50-140">How to: Move a File</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
|<span data-ttu-id="fab50-141">ファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fab50-141">Rename a file</span></span>|[<span data-ttu-id="fab50-142">方法: ファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fab50-142">How to: Rename a File</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file.md)|  
|<span data-ttu-id="fab50-143">ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-143">Copy a directory to another directory</span></span>|[<span data-ttu-id="fab50-144">方法: ディレクトリを別のディレクトリにコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-144">How to: Copy a Directory to Another Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
|<span data-ttu-id="fab50-145">ディレクトリの作成</span><span class="sxs-lookup"><span data-stu-id="fab50-145">Create a directory</span></span>|[<span data-ttu-id="fab50-146">方法: ディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-146">How to: Create a Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-directory.md)|  
|<span data-ttu-id="fab50-147">特定のパターンでサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-147">Find subdirectories with a specific pattern</span></span>|[<span data-ttu-id="fab50-148">方法: 特定のパターンに一致するサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-148">How to: Find Subdirectories with a Specific Pattern</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern.md)|  
|<span data-ttu-id="fab50-149">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fab50-149">Get the collection of files in a directory</span></span>|[<span data-ttu-id="fab50-150">方法: ディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fab50-150">How to: Get the Collection of Files in a Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory.md)|  
|<span data-ttu-id="fab50-151">**マイドキュメント**ディレクトリからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-151">Read from the **MyDocuments** directory</span></span>|[<span data-ttu-id="fab50-152">方法: My Documents ディレクトリの内容を取得する</span><span class="sxs-lookup"><span data-stu-id="fab50-152">How to: Retrieve the Contents of the My Documents Directory</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-retrieve-the-contents-of-the-my-documents-directory.md)|  
|<span data-ttu-id="fab50-153">ファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="fab50-153">Parse a file path</span></span>|[<span data-ttu-id="fab50-154">方法: ファイル パスを解析する</span><span class="sxs-lookup"><span data-stu-id="fab50-154">How to: Parse File Paths</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-155">この例では、フォルダー `C:\backup\logs` 存在するかどうかを確認し、そのプロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="fab50-155">This example checks to determine whether the folder `C:\backup\logs` exists and checks its properties.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#23)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="fab50-156">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fab50-156">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystem();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fab50-157"><see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fab50-157">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.FileIO.FileSystem" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [<span data-ttu-id="fab50-158">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fab50-158">Objects (Visual Basic)</span></span>](~/docs/visual-basic/language-reference/objects/index.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombinePath">
      <MemberSignature Language="C#" Value="public static string CombinePath (string baseDirectory, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CombinePath(string baseDirectory, string relativePath) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CombinePath (baseDirectory As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CombinePath(System::String ^ baseDirectory, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member CombinePath : string * string -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CombinePath (baseDirectory, relativePath)" />
      <MemberSignature Language="ILAsm" Value=".method public static string CombinePath(string baseDirectory, string relativePath) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseDirectory" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseDirectory"><span data-ttu-id="fab50-159"><see langword="String" /> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="fab50-159"><see langword="String" />.</span></span> <span data-ttu-id="fab50-160">結合する 1 つ目のパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-160">First path to be combined.</span></span></param>
        <param name="relativePath"><span data-ttu-id="fab50-161"><see langword="String" /> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="fab50-161"><see langword="String" />.</span></span> <span data-ttu-id="fab50-162">結合する 2 つ目のパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-162">Second path to be combined.</span></span></param>
        <summary><span data-ttu-id="fab50-163">2 つのパスを結合し、適切な形式のパスを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-163">Combines two paths and returns a properly formatted path.</span></span></summary>
        <returns><span data-ttu-id="fab50-164">指定されたパスの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="fab50-164">The combination of the specified paths.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-165">このメソッドは、余分なスラッシュ記号をトリムして、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="fab50-165">This method trims excess slash-mark characters to create a properly formatted path.</span></span>  
  
 <span data-ttu-id="fab50-166">次の表に、`My.Computer.FileSystem.CombinePath` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-166">The following table lists an example of a task involving the `My.Computer.FileSystem.CombinePath` method.</span></span>  
  
|<span data-ttu-id="fab50-167">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-167">To</span></span>|<span data-ttu-id="fab50-168">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-168">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-169">ディレクトリパスとファイル名を結合する</span><span class="sxs-lookup"><span data-stu-id="fab50-169">Combine a directory path and file name</span></span>|[<span data-ttu-id="fab50-170">方法: Visual Basic でファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="fab50-170">How to: Parse File Paths in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-171">この例では、ディレクトリパスとファイル名を組み合わせて、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="fab50-171">This example combines a directory path and file name to create a properly formatted path.</span></span>  
  
 [!code-vb[VbRefFile#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#3)]  
  
 <span data-ttu-id="fab50-172">この例では、2つのパスを結合して、適切に書式設定されたパスを作成します。</span><span class="sxs-lookup"><span data-stu-id="fab50-172">This example combines two paths to create a properly formatted path.</span></span>  
  
 [!code-vb[VbRefFile#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#4)]  
  
 <span data-ttu-id="fab50-173">この例では `C:\Dir1\Dir2\Dir4\Dir5\File.txt`が返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-173">This example returns `C:\Dir1\Dir2\Dir4\Dir5\File.txt`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-174"><paramref name="baseDirectory" /> または <paramref name="relativePath" /> のパスの形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-174"><paramref name="baseDirectory" /> or <paramref name="relativePath" /> are malformed paths.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-175">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-175">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-176"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-176">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-177">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-177">Copies the contents of a directory to another directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member CopyDirectory : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory (sourceDirectoryName, destinationDirectoryName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fab50-178">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-178">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fab50-179">ディレクトリの内容のコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-179">The location to which the directory contents should be copied.</span></span></param>
        <summary><span data-ttu-id="fab50-180">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-180">Copies the contents of a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-181">このメソッドは、ソースディレクトリの内容をターゲットディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-181">This method copies the contents of the source directory to the target directory.</span></span> <span data-ttu-id="fab50-182">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-182">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="fab50-183">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="fab50-183">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="fab50-184">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-184">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="fab50-185">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-185">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="fab50-186">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-186">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="fab50-187">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="fab50-187">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="fab50-188">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-188">The following table lists an example of a task involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="fab50-189">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-189">To</span></span>|<span data-ttu-id="fab50-190">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-190">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-191">ディレクトリのコピー</span><span class="sxs-lookup"><span data-stu-id="fab50-191">Copy a directory</span></span>|[<span data-ttu-id="fab50-192">方法: Visual Basic 内の別のディレクトリにディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-192">How to: Copy a Directory to Another Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-193">次の例では、ディレクトリ `TestDirectory1` の内容を `TestDirectory2`にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-193">The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#94)]  
  
 <span data-ttu-id="fab50-194">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-194">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-195">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-195">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-196"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-196"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-197">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-197">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-198">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fab50-198">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fab50-199">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-199">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-200">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-200">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-201">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-201">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-202">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-202">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-203">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="fab50-203">A destination file exists but cannot be accessed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-204">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-204">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-205"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-205">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="static member CopyDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory (sourceDirectoryName, destinationDirectoryName, showUI)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fab50-206">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-206">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fab50-207">ディレクトリの内容のコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-207">The location to which the directory contents should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-208">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-208">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-209">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-209">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="fab50-210">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-210">Copies the contents of a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-211">このメソッドは、ソースディレクトリの内容をターゲットディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-211">This method copies the contents of the source directory to the target directory.</span></span> <span data-ttu-id="fab50-212">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-212">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="fab50-213">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="fab50-213">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="fab50-214">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-214">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="fab50-215">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-215">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="fab50-216">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-216">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="fab50-217">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="fab50-217">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="fab50-218">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-218">The following table lists an example of a task involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="fab50-219">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-219">To</span></span>|<span data-ttu-id="fab50-220">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-220">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-221">ディレクトリのコピー</span><span class="sxs-lookup"><span data-stu-id="fab50-221">Copy a directory</span></span>|[<span data-ttu-id="fab50-222">方法: Visual Basic 内の別のディレクトリにディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-222">How to: Copy a Directory to Another Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-223">次の例では、ディレクトリ `TestDirectory1` の内容を `TestDirectory2`にコピーして、進行状況のダイアログとエラーダイアログを表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-223">The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, showing progress dialog and any error dialog.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#92)]  
  
 <span data-ttu-id="fab50-224">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-224">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-225">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-225">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-226"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-226"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-227">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-227">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-228">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fab50-228">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fab50-229">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-229">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-230">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-230">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-231">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-231">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-232">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-232">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-233">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="fab50-233">A destination file exists but cannot be accessed.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-234"><paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="fab50-234"><paramref name="ShowUI" /> is set to <see langword="UIOption.AllDialogs" /> and the user cancels the operation, or one or more files in the directory cannot be copied.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-235">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-235">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-236"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-236">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-237">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-237">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-238"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-238">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member CopyDirectory : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory (sourceDirectoryName, destinationDirectoryName, overwrite)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fab50-239">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-239">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fab50-240">ディレクトリの内容のコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-240">The location to which the directory contents should be copied.</span></span></param>
        <param name="overwrite"><span data-ttu-id="fab50-241">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-241"><see langword="True" /> to overwrite existing files; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fab50-242">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-242">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fab50-243">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-243">Copies the contents of a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-244">このメソッドは、ソースディレクトリの内容をターゲットディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-244">This method copies the contents of the source directory to the target directory.</span></span> <span data-ttu-id="fab50-245">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-245">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="fab50-246">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="fab50-246">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="fab50-247">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-247">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="fab50-248">ディレクトリ内のファイルをコピーする場合、`overwrite` が `False`に設定されている間に、マージ中に存在するファイルなど、特定のファイルが原因で例外がスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="fab50-248">When copying files within a directory, exceptions may be thrown that are caused by a specific file, such as a file existing during a merge while `overwrite` is set to `False`.</span></span> <span data-ttu-id="fab50-249">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-249">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="fab50-250">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="fab50-250">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="fab50-251">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-251">The following table lists an example of a task involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="fab50-252">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-252">To</span></span>|<span data-ttu-id="fab50-253">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-253">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-254">ディレクトリのコピー</span><span class="sxs-lookup"><span data-stu-id="fab50-254">Copy a directory</span></span>|[<span data-ttu-id="fab50-255">方法: Visual Basic 内の別のディレクトリにディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-255">How to: Copy a Directory to Another Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-256">次の例では、ディレクトリ `TestDirectory1` の内容を `TestDirectory2`にコピーし、既存のファイルを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fab50-256">The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#49)]  
  
 <span data-ttu-id="fab50-257">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-257">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-258">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-258">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-259"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-259"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-260">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-260">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-261">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fab50-261">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fab50-262">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-262">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-263">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-263">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-264">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-264">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-265">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-265">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-266">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="fab50-266">A destination file exists but cannot be accessed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-267">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-267">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-268"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-268">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyDirectory">
      <MemberSignature Language="C#" Value="public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member CopyDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory (sourceDirectoryName, destinationDirectoryName, showUI, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fab50-269">コピーするディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-269">The directory to be copied.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fab50-270">ディレクトリの内容のコピー先の場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-270">The location to which the directory contents should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-271">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-271">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-272">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-272">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fab50-273">操作中にユーザーが **[キャンセル]** をクリックした場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-273">Specifies what should be done if the user clicks **Cancel** during the operation.</span></span> <span data-ttu-id="fab50-274">既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-274">Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fab50-275">ディレクトリの内容を別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-275">Copies the contents of a directory to another directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-276">このメソッドは、ソースディレクトリの内容をターゲットディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-276">This method copies the contents of the source directory to the target directory.</span></span> <span data-ttu-id="fab50-277">ターゲットディレクトリが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-277">If the target directory does not exist, it is created.</span></span> <span data-ttu-id="fab50-278">同じ名前のディレクトリがターゲットの場所に存在する場合、2つのディレクトリの内容がマージされます。</span><span class="sxs-lookup"><span data-stu-id="fab50-278">If a directory with the same name exists in the target location, the contents of the two directories are merged.</span></span> <span data-ttu-id="fab50-279">操作中に、ディレクトリに新しい名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-279">You can specify a new name for the directory during the operation.</span></span>  
  
 <span data-ttu-id="fab50-280">ディレクトリ内のファイルをコピーするときに、特定のファイルが原因で例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-280">When copying files within a directory, exceptions may be thrown that are caused by a specific file.</span></span> <span data-ttu-id="fab50-281">このような例外がスローされると、`Data` プロパティが、ファイルまたはディレクトリのパスがキーで、特定の例外メッセージが対応する値に含まれている <xref:System.Collections.IDictionary> 形式のエントリを保持する1つの例外に統合されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-281">When such exceptions are thrown, they are consolidated into a single exception whose `Data` property holds entries in the form of an <xref:System.Collections.IDictionary> in which the file or directory path is the key and the specific exception message is contained in the corresponding value.</span></span> <span data-ttu-id="fab50-282">`For…Each` を使用して、エントリを列挙します。</span><span class="sxs-lookup"><span data-stu-id="fab50-282">Use `For…Each` to enumerate through the entries.</span></span>  
  
 <span data-ttu-id="fab50-283">次の表に、`My.Computer.FileSystem.CopyDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-283">The following table lists an example of a task involving the `My.Computer.FileSystem.CopyDirectory` method.</span></span>  
  
|<span data-ttu-id="fab50-284">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-284">To</span></span>|<span data-ttu-id="fab50-285">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-285">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-286">ディレクトリのコピー</span><span class="sxs-lookup"><span data-stu-id="fab50-286">Copy a directory</span></span>|[<span data-ttu-id="fab50-287">方法: Visual Basic 内の別のディレクトリにディレクトリをコピーする</span><span class="sxs-lookup"><span data-stu-id="fab50-287">How to: Copy a Directory to Another Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-288">次の例では、ディレクトリ `TestDirectory1` の内容を `TestDirectory2`にコピーします。進行状況ダイアログとエラーダイアログが表示されます。操作中にユーザーが **[キャンセル]** をクリックしても、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="fab50-288">The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, showing progress dialog and any error dialog, and does nothing if the user clicks **Cancel** during the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#49](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#93)]  
  
 <span data-ttu-id="fab50-289">`C:\TestDirectory1` と `C:\TestDirectory2` を、コピーするディレクトリのパスと名前、およびコピー先の場所に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-289">Replace `C:\TestDirectory1` and `C:\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-290">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-290">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-291"><paramref name="destinationDirectoryName" /> または <paramref name="sourceDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-291"><paramref name="destinationDirectoryName" /> or <paramref name="sourceDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-292">コピー元のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-292">The source directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-293">コピー元とコピー先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fab50-293">The source path and target path are the same.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fab50-294">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-294">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-295">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-295">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-296">パス内のフォルダー名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-296">A folder name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-297">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-297">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-298">コピー先のファイルは存在しますが、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="fab50-298">A destination file exists but cannot be accessed.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-299"><paramref name="ShowUI" /> が <see langword="UIOption.AllDialogs" /> に設定されている場合にユーザーが操作を取り消したか、ディレクトリ内の 1 つ以上のファイルをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="fab50-299"><paramref name="ShowUI" /> is set to <see langword="UIOption.AllDialogs" /> and the user cancels the operation, or one or more files in the directory cannot be copied.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-300">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-300">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-301"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-301">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-302">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-302">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-303"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-303">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-304">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-304">Copies a file to a new location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public static void CopyFile (string sourceFileName, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFile(string sourceFileName, string destinationFileName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyFile (sourceFileName As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member CopyFile : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyFile (sourceFileName, destinationFileName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyFile(string sourceFileName, string destinationFileName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fab50-305">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-305">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fab50-306">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-306">The location to which the file should be copied.</span></span></param>
        <summary><span data-ttu-id="fab50-307">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-307">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-308">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-308">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="fab50-309">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="fab50-309">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="fab50-310">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-310">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="fab50-311">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-311">To</span></span>|<span data-ttu-id="fab50-312">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-312">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-313">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-313">Copy a file to the same directory.</span></span>|[<span data-ttu-id="fab50-314">方法: Visual Basic の同じディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-314">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="fab50-315">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-315">Copy a file to a different directory.</span></span>|[<span data-ttu-id="fab50-316">方法: Visual Basic の別のディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-316">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-317">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-317">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="fab50-318">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-318">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="fab50-319">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-319">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="fab50-320">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-320">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-321"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-321"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-322"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-322"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-323">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-323">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-324">コピー先のディレクトリにある同じ名前のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fab50-324">A file in the target directory with the same name is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-325">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-325">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-326">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-326">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-327">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-327">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-328">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-328">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fab50-329">すべての環境変数にアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-329">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="fab50-330"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-330">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-331">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-331">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-332"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-332">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="fab50-333">レジストリ変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-333">Controls the ability to access registry variables.</span></span> <span data-ttu-id="fab50-334"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-334">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyFile (sourceFileName As String, destinationFileName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="static member CopyFile : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyFile (sourceFileName, destinationFileName, showUI)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fab50-335">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-335">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fab50-336">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-336">The location to which the file should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-337">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-337">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-338">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-338">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="fab50-339">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-339">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-340">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-340">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="fab50-341">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="fab50-341">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="fab50-342">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-342">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="fab50-343">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-343">To</span></span>|<span data-ttu-id="fab50-344">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-344">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-345">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-345">Copy a file to the same directory.</span></span>|[<span data-ttu-id="fab50-346">方法: Visual Basic の同じディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-346">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="fab50-347">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-347">Copy a file to a different directory.</span></span>|[<span data-ttu-id="fab50-348">方法: Visual Basic の別のディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-348">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-349">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-349">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="fab50-350">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-350">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="fab50-351">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-351">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="fab50-352">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-352">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-353"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-353"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-354"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-354"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-355">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-355">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-356">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-356">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-357">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-357">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-358">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-358">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-359">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-359">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-360">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-360">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fab50-361">すべての環境変数にアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-361">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="fab50-362"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-362">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-363">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-363">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-364"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-364">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="fab50-365">レジストリ変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-365">Controls the ability to access registry variables.</span></span> <span data-ttu-id="fab50-366"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-366">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-367">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-367">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-368"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-368">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public static void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyFile (sourceFileName As String, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member CopyFile : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyFile (sourceFileName, destinationFileName, overwrite)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fab50-369">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-369">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fab50-370">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-370">The location to which the file should be copied.</span></span></param>
        <param name="overwrite"><span data-ttu-id="fab50-371">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-371"><see langword="True" /> if existing files should be overwritten; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fab50-372">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-372">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fab50-373">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-373">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-374">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-374">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="fab50-375">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="fab50-375">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="fab50-376">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-376">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="fab50-377">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-377">To</span></span>|<span data-ttu-id="fab50-378">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-378">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-379">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-379">Copy a file to the same directory.</span></span>|[<span data-ttu-id="fab50-380">方法: Visual Basic の同じディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-380">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="fab50-381">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-381">Copy a file to a different directory.</span></span>|[<span data-ttu-id="fab50-382">方法: Visual Basic の別のディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-382">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-383">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-383">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="fab50-384">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-384">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="fab50-385">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-385">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="fab50-386">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-386">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-387"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-387"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-388"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-388"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-389">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-389">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-390">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-390">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-391">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-391">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-392">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-392">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-393">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-393">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-394">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-394">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fab50-395">すべての環境変数にアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-395">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="fab50-396"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-396">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-397">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-397">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-398"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-398">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="fab50-399">レジストリ変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-399">Controls the ability to access registry variables.</span></span> <span data-ttu-id="fab50-400"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-400">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CopyFile (sourceFileName As String, destinationFileName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member CopyFile : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CopyFile (sourceFileName, destinationFileName, showUI, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void CopyFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fab50-401">コピーするファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-401">The file to be copied.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fab50-402">ファイルのコピー先となる場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-402">The location to which the file should be copied.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-403">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-403">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-404">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-404">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fab50-405">操作中にユーザーが **[キャンセル]** をクリックした場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-405">Specifies what should be done if the user clicks **Cancel** during the operation.</span></span> <span data-ttu-id="fab50-406">既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-406">Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fab50-407">ファイルを新しい場所にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-407">Copies a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-408">`CopyFile` は、Ace (Access Control エントリ) を保持しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-408">`CopyFile` does not preserve ACEs (Access Control Entries).</span></span> <span data-ttu-id="fab50-409">新しく作成されたファイルは、作成されたディレクトリから既定の Ace を継承します。</span><span class="sxs-lookup"><span data-stu-id="fab50-409">The newly created file inherits default ACEs from the directory in which it is created.</span></span>  
  
 <span data-ttu-id="fab50-410">次の表に、`My.Computer.FileSystem.CopyFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-410">The following table lists examples of tasks involving the `My.Computer.FileSystem.CopyFile` method.</span></span>  
  
|<span data-ttu-id="fab50-411">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-411">To</span></span>|<span data-ttu-id="fab50-412">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-412">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-413">同じディレクトリにファイルをコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-413">Copy a file to the same directory.</span></span>|[<span data-ttu-id="fab50-414">方法: Visual Basic の同じディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-414">How to: Create a Copy of a File in the Same Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-the-same-directory.md)|  
|<span data-ttu-id="fab50-415">ファイルを別のディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-415">Copy a file to a different directory.</span></span>|[<span data-ttu-id="fab50-416">方法: Visual Basic の別のディレクトリにファイルのコピーを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-416">How to: Create a Copy of a File in a Different Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-copy-of-a-file-in-a-different-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-417">この例では、既存のファイルを上書きせずに、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーします。</span><span class="sxs-lookup"><span data-stu-id="fab50-417">This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.</span></span>  
  
 [!code-vb[VbRefFile#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#15)]  
  
 <span data-ttu-id="fab50-418">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-418">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 <span data-ttu-id="fab50-419">この例では、ファイル `Test.txt` をディレクトリ `TestFiles2` にコピーし、`NewFile.txt`名前を変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-419">This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.</span></span>  
  
 [!code-vb[VbRefFile#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#16)]  
  
 <span data-ttu-id="fab50-420">ファイルパスをコードで使用するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-420">Replace the file paths with the paths you want to use in your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-421"><paramref name="destinationFileName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-421"><paramref name="destinationFileName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-422"><paramref name="destinationFileName" /> または <paramref name="sourceFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-422"><paramref name="destinationFileName" /> or <paramref name="sourceFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-423">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-423">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-424">移動先にファイルが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-424">The destination file exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-425">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-425">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-426">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-426">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-427">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-427">The user does not have required permission.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-428">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-428">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-429"><paramref name="UICancelOption" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-429"><paramref name="UICancelOption" /> is set to <see langword="ThrowException" />, and the user has canceled the operation or an unspecified I/O error occurs.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fab50-430">すべての環境変数にアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-430">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="fab50-431"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-431">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-432">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-432">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-433"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-433">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="fab50-434">レジストリ変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-434">Controls the ability to access registry variables.</span></span> <span data-ttu-id="fab50-435"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-435">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-436">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-436">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-437"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-437">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public static void CreateDirectory (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDirectory(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateDirectory (directory As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDirectory(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member CreateDirectory : string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory directory" />
      <MemberSignature Language="ILAsm" Value=".method public static void CreateDirectory(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-438">ディレクトリの名前および場所。</span><span class="sxs-lookup"><span data-stu-id="fab50-438">Name and location of the directory.</span></span></param>
        <summary><span data-ttu-id="fab50-439">ディレクトリを作成します。</span><span class="sxs-lookup"><span data-stu-id="fab50-439">Creates a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-440">ディレクトリが既にある場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="fab50-440">If the directory already exists, no exception is thrown.</span></span>  
  
 <span data-ttu-id="fab50-441">次の表に、`My.Computer.FileSystem.CreateDirectory` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-441">The following table lists an example of a task involving the `My.Computer.FileSystem.CreateDirectory` method.</span></span>  
  
|<span data-ttu-id="fab50-442">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-442">To</span></span>|<span data-ttu-id="fab50-443">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-443">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-444">ディレクトリの作成</span><span class="sxs-lookup"><span data-stu-id="fab50-444">Create a directory</span></span>|[<span data-ttu-id="fab50-445">方法: Visual Basic でディレクトリを作成する</span><span class="sxs-lookup"><span data-stu-id="fab50-445">How to: Create a Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-create-a-directory.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-446">この例では、`C:\Documents and Settings\All Users\Documents`にディレクトリ `NewDirectory`を作成します。</span><span class="sxs-lookup"><span data-stu-id="fab50-446">This example creates the directory, `NewDirectory`, in `C:\Documents and Settings\All Users\Documents`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-447">ディレクトリ名が不正な場合。</span><span class="sxs-lookup"><span data-stu-id="fab50-447">The directory name is malformed.</span></span> <span data-ttu-id="fab50-448">たとえば、無効な文字が含まれているか、空白のみであることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-448">For example, it contains illegal characters or is only white space.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-449"><paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-449"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-450">ディレクトリ名が長すぎます。</span><span class="sxs-lookup"><span data-stu-id="fab50-450">The directory name is too long.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-451">ディレクトリ名にコロン (":") だけが指定されている場合</span><span class="sxs-lookup"><span data-stu-id="fab50-451">The directory name is only a colon (:).</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-452">作成するディレクトリの親ディレクトリが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fab50-452">The parent directory of the directory to be created is read-only</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-453">ユーザーがディレクトリを作成するためのアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-453">The user does not have permission to create the directory.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-454">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-454">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-455"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-455">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="M:System.IO.Directory.CreateDirectory(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentDirectory">
      <MemberSignature Language="C#" Value="public static string CurrentDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string CurrentDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CurrentDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDirectory : string with get, set" Usage="Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fab50-456">現在のディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-456">Gets or sets the current directory.</span></span></summary>
        <value><span data-ttu-id="fab50-457">ファイル I/O 操作の現在のディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-457">The current directory for file I/O operations.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-458">`CurrentDirectory` は、システム全体の環境変数です。</span><span class="sxs-lookup"><span data-stu-id="fab50-458">`CurrentDirectory` is a system-wide environment variable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-459">この例では、現在のディレクトリが返され、メッセージボックスに表示されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-459">This example returns the current directory and displays it in a message box.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#18)]  
  
 <span data-ttu-id="fab50-460">この例では、現在のディレクトリを `C:\TestDirectory`に設定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-460">This example sets the current directory to `C:\TestDirectory`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-461">パスが無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-461">The path is not valid.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-462">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-462">The user lacks necessary permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-463">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-463">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-464"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-464">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-465">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-465">Deletes a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteDirectory (directory As String, onDirectoryNotEmpty As DeleteDirectoryOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::DeleteDirectoryOption onDirectoryNotEmpty);" />
      <MemberSignature Language="F#" Value="static member DeleteDirectory : string * Microsoft.VisualBasic.FileIO.DeleteDirectoryOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory (directory, onDirectoryNotEmpty)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="onDirectoryNotEmpty" Type="Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-466">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-466">Directory to be deleted.</span></span></param>
        <param name="onDirectoryNotEmpty"><span data-ttu-id="fab50-467">削除対象のディレクトリ内にファイルまたはディレクトリが存在する場合の処理を指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-467">Specifies what should be done when a directory that is to be deleted contains files or directories.</span></span> <span data-ttu-id="fab50-468">既定値は <see langword="DeleteDirectoryOption.DeleteAllContents" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-468">Default is <see langword="DeleteDirectoryOption.DeleteAllContents" />.</span></span></param>
        <summary><span data-ttu-id="fab50-469">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-469">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fab50-470">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-470">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="fab50-471">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-471">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="fab50-472">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-472">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="fab50-473">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="fab50-473">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-474">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-474">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="fab50-475">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="fab50-475">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-476"><paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-476"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-477">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-477">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-478">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fab50-478">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-479">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-479">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-480">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-480">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-481">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-481">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-482">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fab50-482">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-483">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-483">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-484"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-484">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
      </Docs>
    </Member>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteDirectory (directory As String, showUI As UIOption, recycle As RecycleOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle);" />
      <MemberSignature Language="F#" Value="static member DeleteDirectory : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory (directory, showUI, recycle)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-485">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-485">Directory to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-486">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-486">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-487">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-487">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="fab50-488">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-488">Specifies whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="fab50-489">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-489">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <summary><span data-ttu-id="fab50-490">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-490">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-491">`showUI` パラメーターと `recycle` パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fab50-491">The `showUI` and `recycle` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-492">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-492">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="fab50-493">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-493">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="fab50-494">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-494">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="fab50-495">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="fab50-495">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-496">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-496">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="fab50-497">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="fab50-497">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-498"><paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-498"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-499">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-499">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-500">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fab50-500">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-501">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-501">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-502">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-502">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-503">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-503">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-504">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fab50-504">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-505">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-505">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-506"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-506">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-507">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-507">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-508"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-508">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteDirectory (directory As String, showUI As UIOption, recycle As RecycleOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDirectory(System::String ^ directory, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member DeleteDirectory : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory (directory, showUI, recycle, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteDirectory(string directory, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-509">削除するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-509">Directory to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-510">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-510">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-511">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-511">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="fab50-512">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-512">Specifies whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="fab50-513">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-513">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fab50-514">ユーザーが **[キャンセル]** をクリックした場合に例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-514">Specifies whether to throw an exception if the user clicks **Cancel**.</span></span></param>
        <summary><span data-ttu-id="fab50-515">ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-515">Deletes a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-516">`showUI`、`recycle`、および `onUserCancel` の各パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fab50-516">The `showUI`, `recycle`, and `onUserCancel` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-517">この例では、ディレクトリが空の場合にのみ、`OldDirectory` ディレクトリを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-517">The example deletes the directory `OldDirectory` only if it is empty.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#56](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#56)]  
  
 <span data-ttu-id="fab50-518">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-518">This example deletes the directory `OldDirectory` and all of its contents.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#57](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#57)]  
  
 <span data-ttu-id="fab50-519">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除し、ユーザーに削除の確認を求めますが、コンテンツは**ごみ箱**に送信しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-519">This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#58](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#58)]  
  
 <span data-ttu-id="fab50-520">この例では、ディレクトリ `OldDirectory` とそのすべての内容を削除して**ごみ箱**に送信しますが、操作の進行状況は表示されません。</span><span class="sxs-lookup"><span data-stu-id="fab50-520">This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#59](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-521">パスが長さ 0 の文字列であるか、形式に誤りがあるか、空白だけが含まれているか、または無効な文字 (ワイルドカード文字を含む) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-521">The path is a zero-length string, is malformed, contains only white space, or contains invalid characters (including wildcard characters).</span></span> <span data-ttu-id="fab50-522">パスがデバイス パスです (\\\\.\\ で始まる)。</span><span class="sxs-lookup"><span data-stu-id="fab50-522">The path is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-523"><paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-523"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-524">ディレクトリが存在しないか、ファイルが指定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-524">The directory does not exist or is a file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-525">ディレクトリまたはサブディレクトリ内のファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fab50-525">A file in the directory or subdirectory is in use.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-526">ディレクトリ名にコロン (:) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-526">The directory name contains a colon (:).</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-527">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-527">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-528">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-528">The user does not have required permissions.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-529">ユーザーが操作を取り消したか、ディレクトリを削除できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fab50-529">The user cancels the operation or the directory cannot be deleted.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-530">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-530">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-531"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-531">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-532">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-532">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-533"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-533">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-534">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-534">Deletes a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public static void DeleteFile (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteFile(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteFile (file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteFile(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member DeleteFile : string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile file" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteFile(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-535">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-535">Name and path of the file to be deleted.</span></span></param>
        <summary><span data-ttu-id="fab50-536">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-536">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-537">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-537">The following table lists an example of a task involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="fab50-538">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-538">To</span></span>|<span data-ttu-id="fab50-539">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-539">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-540">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="fab50-540">To delete a file</span></span>|[<span data-ttu-id="fab50-541">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fab50-541">How to: Delete a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-542">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-542">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="fab50-543">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fab50-543">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="fab50-544">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="fab50-544">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-545">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-545">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-546"><paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-546"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-547">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-547">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-548">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-548">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-549">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fab50-549">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-550">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-550">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-551">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-551">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-552">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fab50-552">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-553">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-553">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-554"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-554">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteFile (file As String, showUI As UIOption, recycle As RecycleOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteFile(System::String ^ file, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle);" />
      <MemberSignature Language="F#" Value="static member DeleteFile : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile (file, showUI, recycle)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-555">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-555">Name and path of the file to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-556">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-556">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-557">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-557">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="fab50-558">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-558">Whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="fab50-559">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-559">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <summary><span data-ttu-id="fab50-560">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-560">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-561">`showUI` パラメーターと `recycle` パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fab50-561">The `showUI` and `recycle` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
 <span data-ttu-id="fab50-562">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-562">The following table lists an example of a task involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="fab50-563">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-563">To</span></span>|<span data-ttu-id="fab50-564">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-564">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-565">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="fab50-565">To delete a file</span></span>|[<span data-ttu-id="fab50-566">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fab50-566">How to: Delete a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-567">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-567">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="fab50-568">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fab50-568">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="fab50-569">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="fab50-569">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-570">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-570">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-571"><paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-571"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-572">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-572">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-573">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-573">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-574">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fab50-574">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-575">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-575">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-576">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-576">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-577">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fab50-577">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-578">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-578">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-579"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-579">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-580">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-580">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-581"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-581">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeleteFile (file As String, showUI As UIOption, recycle As RecycleOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteFile(System::String ^ file, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::RecycleOption recycle, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member DeleteFile : string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.RecycleOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile (file, showUI, recycle, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void DeleteFile(string file, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.RecycleOption recycle, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="recycle" Type="Microsoft.VisualBasic.FileIO.RecycleOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-582">削除対象のファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-582">Name and path of the file to be deleted.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-583">操作の進行状況を視覚的に追跡するかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-583">Whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-584">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-584">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="recycle"><span data-ttu-id="fab50-585">削除したファイルを **[ごみ箱]** に送るかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-585">Whether or not the deleted file should be sent to the **Recycle Bin**.</span></span> <span data-ttu-id="fab50-586">既定値は <see langword="RecycleOption.DeletePermanently" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-586">Default is <see langword="RecycleOption.DeletePermanently" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fab50-587">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-587">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="fab50-588">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-588">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fab50-589">ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-589">Deletes a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-590">`showUI`、`recycle`、および `onUserCancel` の各パラメーターは、Windows サービスなど、ユーザーが対話型でないアプリケーションではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="fab50-590">The `showUI`, `recycle`, and `onUserCancel` parameters are not supported in applications that are not user interactive, such as Windows Services.</span></span>  
  
 <span data-ttu-id="fab50-591">次の表に、`My.Computer.FileSystem.DeleteFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-591">The following table lists an example of a task involving the `My.Computer.FileSystem.DeleteFile` method.</span></span>  
  
|<span data-ttu-id="fab50-592">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-592">To</span></span>|<span data-ttu-id="fab50-593">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-593">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-594">ファイルを削除するには</span><span class="sxs-lookup"><span data-stu-id="fab50-594">To delete a file</span></span>|[<span data-ttu-id="fab50-595">方法: Visual Basic でファイルを削除する</span><span class="sxs-lookup"><span data-stu-id="fab50-595">How to: Delete a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-delete-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-596">この例では、`Test.txt`ファイルを削除します。</span><span class="sxs-lookup"><span data-stu-id="fab50-596">This example deletes the file `Test.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#3)]  
  
 <span data-ttu-id="fab50-597">この例では、ファイル `Test.txt` を削除し、ファイルを削除するかどうかをユーザーが確認できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fab50-597">This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#4)]  
  
 <span data-ttu-id="fab50-598">この例では、`Test.txt` ファイルを削除し、**ごみ箱**に送信します。</span><span class="sxs-lookup"><span data-stu-id="fab50-598">This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-599">パスが無効です。原因として、パスが長さ 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、ファイルを指定する必要がある場所の末尾にスラッシュが付いているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-599">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; it has a trailing slash where a file must be specified; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-600"><paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-600"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-601">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-601">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-602">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-602">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-603">ファイルが使用中です。</span><span class="sxs-lookup"><span data-stu-id="fab50-603">The file is in use.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-604">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-604">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-605">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-605">The file does not exist.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-606">ユーザーがファイルの削除に必要なアクセス許可を保持していないか、ファイルが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="fab50-606">The user does not have permission to delete the file or the file is read-only.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-607">ユーザーが操作を取り消し、かつ <paramref name="onUserCancel" /> が <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-607">The user cancelled the operation and <paramref name="onUserCancel" /> is set to <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-608">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-608">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-609"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-609">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-610">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-610">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-611"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-611">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public static bool DirectoryExists (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DirectoryExists(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DirectoryExists (directory As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DirectoryExists(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member DirectoryExists : string -&gt; bool" Usage="Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists directory" />
      <MemberSignature Language="ILAsm" Value=".method public static bool DirectoryExists(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-612">ディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-612">Path of the directory.</span></span></param>
        <summary><span data-ttu-id="fab50-613">指定されたディレクトリが存在する場合、<see langword="True" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-613">Returns <see langword="True" /> if the specified directory exists.</span></span></summary>
        <returns><span data-ttu-id="fab50-614">ディレクトリが存在する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-614"><see langword="True" /> if the directory exists; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fab50-615">パラメーターがディレクトリではなく名前とファイルのパスを表していた場合は、このメソッドも <see langword="False" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-615">This method also returns <see langword="False" /> if the parameter represents the name and path of a file rather than a directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fab50-616">この例では、ディレクトリ `C:\backup\logs` 存在するかどうかを判断し、そのプロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="fab50-616">This example determines whether the directory `C:\backup\logs` exists and checks its properties.</span></span>  
  
 [!code-vb[VbRefFile#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-617">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-617">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-618"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-618">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Drives">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt; Drives { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.DriveInfo&gt; Drives" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Drives As ReadOnlyCollection(Of DriveInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::DriveInfo ^&gt; ^ Drives { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::DriveInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Drives : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.Drives" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.DriveInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fab50-619">利用可能なすべてのドライブ名の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-619">Returns a read-only collection of all available drive names.</span></span></summary>
        <value><span data-ttu-id="fab50-620"><see cref="T:System.IO.DriveInfo" /> オブジェクトとして使用できるすべてのドライブの読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fab50-620">A read-only collection of all available drives as <see cref="T:System.IO.DriveInfo" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-621">このプロパティは、すべての論理ドライブを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-621">This property returns all logical drives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-622">この例では、使用可能なドライブ名をメッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-622">This example displays the available drive names in a message box.</span></span>  
  
 [!code-vb[VbRefFile#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#19)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-623">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-623">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-624"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-624">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.IO.DriveInfo" />
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public static bool FileExists (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool FileExists(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FileExists (file As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool FileExists(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member FileExists : string -&gt; bool" Usage="Microsoft.VisualBasic.FileIO.FileSystem.FileExists file" />
      <MemberSignature Language="ILAsm" Value=".method public static bool FileExists(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-625">ファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-625">Name and path of the file.</span></span></param>
        <summary><span data-ttu-id="fab50-626">指定されたファイルが存在する場合、<see langword="True" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-626">Returns <see langword="True" /> if the specified file exists.</span></span></summary>
        <returns><span data-ttu-id="fab50-627">ファイルが存在する場合は <see langword="True" /> を返します。それ以外の場合は <see langword="False" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-627">Returns <see langword="True" /> if the file exists; otherwise this method returns <see langword="False" />.</span></span> <span data-ttu-id="fab50-628">パラメーターがファイルではなくディレクトリのパスを表していた場合は、このメソッドも <see langword="False" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-628">This method also returns <see langword="False" /> if the parameter represents the path of a directory rather than a file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-629">アプリケーションに、指定されたファイルを読み取るための十分なアクセス許可がない場合、`FileExists` メソッドは、パスが存在するかどうかに関係なく `False`を返します。メソッドは例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="fab50-629">If the application does not have sufficient permissions to read the specified file, the `FileExists` method returns `False`, regardless of the existence of the path; the method does not throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-630">この例では、ファイル `Check.txt` が存在するかどうかを確認し、メッセージボックスに情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="fab50-630">This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.</span></span>  
  
 [!code-vb[VbRefFile#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-631">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="fab50-631">The name of the file ends with a backslash (\\).</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-632">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-632">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-633"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-633">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInFiles">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-634">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-634">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInFiles (directory As String, containsText As String, ignoreCase As Boolean, searchType As SearchOption) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FindInFiles(System::String ^ directory, System::String ^ containsText, bool ignoreCase, Microsoft::VisualBasic::FileIO::SearchOption searchType);" />
      <MemberSignature Language="F#" Value="static member FindInFiles : string * string * bool * Microsoft.VisualBasic.FileIO.SearchOption -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles (directory, containsText, ignoreCase, searchType)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="containsText" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-635">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-635">The directory to be searched.</span></span></param>
        <param name="containsText"><span data-ttu-id="fab50-636">検索文字列。</span><span class="sxs-lookup"><span data-stu-id="fab50-636">The search text.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fab50-637">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-637"><see langword="True" /> if the search should be case-sensitive; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fab50-638">既定値は <see langword="True" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-638">Default is <see langword="True" />.</span></span></param>
        <param name="searchType"><span data-ttu-id="fab50-639">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-639">Whether to include subfolders.</span></span> <span data-ttu-id="fab50-640">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-640">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <summary><span data-ttu-id="fab50-641">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-641">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="fab50-642">指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fab50-642">Read-only collection of the names of files containing the specified text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-643">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-643">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fab50-644">次の表に、`My.Computer.FileSystem.FindInFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-644">The following table lists an example of a task involving the `My.Computer.FileSystem.FindInFiles` method.</span></span>  
  
|<span data-ttu-id="fab50-645">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-645">To</span></span>|<span data-ttu-id="fab50-646">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-646">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-647">特定の文字列を含むファイルをディレクトリで検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-647">Search a directory for files containing a specific string</span></span>|[<span data-ttu-id="fab50-648">チュートリアル: Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fab50-648">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-649">この例では、ディレクトリ `C:\TestDir` で文字列 `"sample string"` を含むすべてのファイルを検索し、`ListBox1`に結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-649">This example searches the directory `C:\TestDir` for any files containing the string `"sample string"` and displays the results in `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#12)]  
  
 <span data-ttu-id="fab50-650">作業するには、プロジェクトに `ListBox1`という名前の `ListBox` が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-650">In order to work, the project must contain a `ListBox` named `ListBox1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-651">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\\.\</c> である) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-651">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with <c>\\.\</c>).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-652"><paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-652"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-653">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-653">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-654">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-654">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-655">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-655">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-656">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-656">The specified directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-657">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-657">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-658">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-658">The user lacks necessary permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-659">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-659">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-660"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-660">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="FindInFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] fileWildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInFiles (directory As String, containsText As String, ignoreCase As Boolean, searchType As SearchOption, ParamArray fileWildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FindInFiles(System::String ^ directory, System::String ^ containsText, bool ignoreCase, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ fileWildcards);" />
      <MemberSignature Language="F#" Value="static member FindInFiles : string * string * bool * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles (directory, containsText, ignoreCase, searchType, fileWildcards)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FindInFiles(string directory, string containsText, bool ignoreCase, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="containsText" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="fileWildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-661">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-661">The directory to be searched.</span></span></param>
        <param name="containsText"><span data-ttu-id="fab50-662">検索文字列。</span><span class="sxs-lookup"><span data-stu-id="fab50-662">The search text.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fab50-663">検索時に大文字と小文字を区別する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-663"><see langword="True" /> if the search should be case-sensitive; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fab50-664">既定値は <see langword="True" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-664">Default is <see langword="True" />.</span></span></param>
        <param name="searchType"><span data-ttu-id="fab50-665">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-665">Whether to include subfolders.</span></span> <span data-ttu-id="fab50-666">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-666">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="fileWildcards"><span data-ttu-id="fab50-667">検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="fab50-667">Pattern to be matched.</span></span></param>
        <summary><span data-ttu-id="fab50-668">指定されたテキストが格納されたファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-668">Returns a read-only collection of strings representing the names of files containing the specified text.</span></span></summary>
        <returns><span data-ttu-id="fab50-669">指定されたテキストを含んでいるファイルの名前の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fab50-669">Read-only collection of the names of files containing the specified text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-670">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-670">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fab50-671">次の表に、`My.Computer.FileSystem.FindInFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-671">The following table lists an example of a task involving the `My.Computer.FileSystem.FindInFiles` method.</span></span>  
  
|<span data-ttu-id="fab50-672">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-672">To</span></span>|<span data-ttu-id="fab50-673">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-673">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-674">特定の文字列を含むファイルをディレクトリで検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-674">Search a directory for files containing a specific string</span></span>|[<span data-ttu-id="fab50-675">チュートリアル: Visual Basic によるファイルとディレクトリの操作</span><span class="sxs-lookup"><span data-stu-id="fab50-675">Walkthrough: Manipulating Files and Directories in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/walkthrough-manipulating-files-and-directories.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-676">この例では、ディレクトリ `C:\TestDir` で文字列 `"sample string"` を含むすべてのファイルを検索し、`ListBox1`に結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-676">This example searches the directory `C:\TestDir` for any files containing the string `"sample string"` and displays the results in `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#12)]  
  
 <span data-ttu-id="fab50-677">作業するには、プロジェクトに `ListBox1`という名前の `ListBox` が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-677">In order to work, the project must contain a `ListBox` named `ListBox1`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-678">パスが有効ではありません。原因として、長さが 0 の文字列であるか、空白のみが含まれているか、無効な文字が含まれているか、デバイス パスである (先頭が <c>\\.\</c> である) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-678">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with <c>\\.\</c>).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-679"><paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-679"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-680">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-680">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-681">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-681">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-682">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-682">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-683">指定されたディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-683">The specified directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-684">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-684">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-685">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-685">The user lacks necessary permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-686">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-686">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-687"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-687">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectories">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-688">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-688">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetDirectories (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectories (directory As String) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetDirectories(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member GetDirectories : string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories directory" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-689">ディレクトリの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-689">Name and path of directory.</span></span></param>
        <summary><span data-ttu-id="fab50-690">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-690">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
        <returns><span data-ttu-id="fab50-691">指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fab50-691">Read-only collection of the path names of subdirectories within the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-692">次の表に、`My.Computer.FileSystem.GetDirectories` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-692">The following table lists an example of a task involving the `My.Computer.FileSystem.GetDirectories` method.</span></span>  
  
|<span data-ttu-id="fab50-693">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-693">To</span></span>|<span data-ttu-id="fab50-694">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-694">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-695">特定のパターンでサブディレクトリを一覧表示する</span><span class="sxs-lookup"><span data-stu-id="fab50-695">List subdirectories with a specific pattern</span></span>|[<span data-ttu-id="fab50-696">方法: Visual Basic で特定のパターンを持つサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-696">How to: Find Subdirectories with a Specific Pattern in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-697">次の例では、名前に `Logs` という単語が含まれているディレクトリ構造内のすべてのディレクトリを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fab50-697">The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#10)]  
  
 <span data-ttu-id="fab50-698">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fab50-698">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-699">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-699">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-700"><paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-700"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-701">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-701">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-702">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-702">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-703">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-703">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-704">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-704">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-705">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-705">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-706">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-706">The user lacks necessary permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-707">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-707">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-708"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-708">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectories">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] wildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectories (directory As String, searchType As SearchOption, ParamArray wildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetDirectories(System::String ^ directory, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ wildcards);" />
      <MemberSignature Language="F#" Value="static member GetDirectories : string * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories (directory, searchType, wildcards)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetDirectories(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="wildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-709">ディレクトリの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-709">Name and path of directory.</span></span></param>
        <param name="searchType"><span data-ttu-id="fab50-710">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-710">Whether to include subfolders.</span></span> <span data-ttu-id="fab50-711">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-711">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="wildcards"><span data-ttu-id="fab50-712">名前の検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="fab50-712">Pattern to match names.</span></span></param>
        <summary><span data-ttu-id="fab50-713">ディレクトリに含まれるサブディレクトリのパス名を表す文字列のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-713">Returns a collection of strings representing the path names of subdirectories within a directory.</span></span></summary>
        <returns><span data-ttu-id="fab50-714">指定されたディレクトリに存在するサブディレクトリのパス名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fab50-714">Read-only collection of the path names of subdirectories within the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-715">`wildcards` パラメーターを使用して、特定のパターンを指定できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-715">You can use the `wildcards` parameter to specify a specific pattern.</span></span> <span data-ttu-id="fab50-716">サブディレクトリの内容を検索対象に含めるには、`searchType` パラメーターを `SearchAllSubDirectories` に設定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-716">If you would like to include the contents of subdirectories in the search, set the `searchType` parameter to `SearchAllSubDirectories`.</span></span>  
  
 <span data-ttu-id="fab50-717">指定したパターンに一致するディレクトリが見つからなかった場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-717">An empty collection is returned if no directories matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fab50-718">次の表に、`My.Computer.FileSystem.GetDirectories` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-718">The following table lists an example of a task involving the `My.Computer.FileSystem.GetDirectories` method.</span></span>  
  
|<span data-ttu-id="fab50-719">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-719">To</span></span>|<span data-ttu-id="fab50-720">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-720">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-721">特定のパターンでサブディレクトリを一覧表示する</span><span class="sxs-lookup"><span data-stu-id="fab50-721">List subdirectories with a specific pattern</span></span>|[<span data-ttu-id="fab50-722">方法: Visual Basic で特定のパターンを持つサブディレクトリを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-722">How to: Find Subdirectories with a Specific Pattern in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-subdirectories-with-a-specific-pattern.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-723">次の例では、名前に `Logs` という単語が含まれているディレクトリ構造内のすべてのディレクトリを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fab50-723">The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#10)]  
  
 <span data-ttu-id="fab50-724">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fab50-724">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-725">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-725">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-726">指定したワイルドカード文字の中に、<see langword="Nothing" />、空の文字列、または空白のみが含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-726">One or more of the specified wildcard characters is <see langword="Nothing" />, an empty string, or contains only spaces.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-727">指定されたディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-727">The specified directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-728">指定されたディレクトリが既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-728">The specified directory points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-729">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-729">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-730">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-730">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-731">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-731">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-732">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-732">The user lacks necessary permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-733">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-733">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-734"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-734">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryInfo">
      <MemberSignature Language="C#" Value="public static System.IO.DirectoryInfo GetDirectoryInfo (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DirectoryInfo GetDirectoryInfo(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectoryInfo (directory As String) As DirectoryInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::DirectoryInfo ^ GetDirectoryInfo(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member GetDirectoryInfo : string -&gt; System.IO.DirectoryInfo" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo directory" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.DirectoryInfo GetDirectoryInfo(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DirectoryInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-735"><see langword="String" /> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="fab50-735"><see langword="String" />.</span></span> <span data-ttu-id="fab50-736">ディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-736">Path of directory.</span></span></param>
        <summary><span data-ttu-id="fab50-737">指定したパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-737">Returns a <see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</span></span></summary>
        <returns><span data-ttu-id="fab50-738">指定されたパスの <see cref="T:System.IO.DirectoryInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fab50-738"><see cref="T:System.IO.DirectoryInfo" /> object for the specified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-739">ディレクトリが存在しない場合、<xref:System.IO.DirectoryInfo> オブジェクトのプロパティが初めてアクセスされるまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="fab50-739">If the directory does not exist, an exception is not thrown until the first time a property on the <xref:System.IO.DirectoryInfo> object is accessed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-740">この例では、ディレクトリ `C:\Documents and Settings` の <xref:System.IO.DirectoryInfo> オブジェクトを取得し、ディレクトリの作成時刻、最終アクセス時刻、最終書き込み時刻を表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-740">This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\Documents and Settings` and displays the directory's creation time, last access time, and last write time.</span></span>  
  
 [!code-vb[VbRefFile#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-741">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-741">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-742"><paramref name="directory" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-742"><paramref name="directory" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-743">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-743">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-744">ディレクトリ パスにコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-744">The directory path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-745">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-745">The user lacks necessary permissions to view the path</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-746">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-746">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-747"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-747">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.IO.DirectoryInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetDriveInfo">
      <MemberSignature Language="C#" Value="public static System.IO.DriveInfo GetDriveInfo (string drive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.DriveInfo GetDriveInfo(string drive) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDriveInfo (drive As String) As DriveInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::DriveInfo ^ GetDriveInfo(System::String ^ drive);" />
      <MemberSignature Language="F#" Value="static member GetDriveInfo : string -&gt; System.IO.DriveInfo" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo drive" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.DriveInfo GetDriveInfo(string drive) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.DriveInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drive" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="drive"><span data-ttu-id="fab50-748">確認するドライブ。</span><span class="sxs-lookup"><span data-stu-id="fab50-748">Drive to be examined.</span></span></param>
        <summary><span data-ttu-id="fab50-749">指定したドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-749">Returns a <see cref="T:System.IO.DriveInfo" /> object for the specified drive.</span></span></summary>
        <returns><span data-ttu-id="fab50-750">指定されたドライブの <see cref="T:System.IO.DriveInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fab50-750"><see cref="T:System.IO.DriveInfo" /> object for the specified drive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-751"><xref:System.IO.DriveInfo> クラスはドライブをモデル化し、ドライブ情報を照会するためのメソッドとプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="fab50-751">The <xref:System.IO.DriveInfo> class models a drive and provides methods and properties to query for drive information.</span></span> <span data-ttu-id="fab50-752"><xref:System.IO.DriveInfo> を使用して、使用可能なドライブとそのドライブの種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-752">Use <xref:System.IO.DriveInfo> to determine what drives are available, and what type of drives they are.</span></span> <span data-ttu-id="fab50-753">また、プロパティを照会して、ドライブの容量と使用可能な空き領域を確認することもできます。</span><span class="sxs-lookup"><span data-stu-id="fab50-753">You can also query the property to determine the capacity and available free space on the drive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-754">この例では、C ドライブの <xref:System.IO.DriveInfo> オブジェクトを取得し、それを使用してドライブに関する情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-754">This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.</span></span>  
  
 [!code-vb[VbRefFile#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#11)]  
  
 <span data-ttu-id="fab50-755">さまざまなドライブの種類の詳細については、「<xref:System.IO.DriveType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fab50-755">For information on the different drive types, see <xref:System.IO.DriveType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-756">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-756">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-757"><paramref name="drive" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-757"><paramref name="drive" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-758">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-758">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-759">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-759">The user lacks necessary permissions to view the path</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-760">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-760">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-761"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-761">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.IO.DriveInfo" />
        <altmember cref="T:System.IO.DriveType" />
      </Docs>
    </Member>
    <Member MemberName="GetFileInfo">
      <MemberSignature Language="C#" Value="public static System.IO.FileInfo GetFileInfo (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.FileInfo GetFileInfo(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileInfo (file As String) As FileInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::FileInfo ^ GetFileInfo(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member GetFileInfo : string -&gt; System.IO.FileInfo" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo file" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.FileInfo GetFileInfo(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-762">ファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-762">Name and path of the file.</span></span></param>
        <summary><span data-ttu-id="fab50-763">指定したファイルの <see cref="T:System.IO.FileInfo" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-763">Returns a <see cref="T:System.IO.FileInfo" /> object for the specified file.</span></span></summary>
        <returns><span data-ttu-id="fab50-764">指定されたファイルの <see cref="T:System.IO.FileInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fab50-764"><see cref="T:System.IO.FileInfo" /> object for the specified file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-765">ファイルが存在しない場合、例外はスローされません。代わりに、オブジェクトのプロパティに初めてアクセスしたときにスローされます。</span><span class="sxs-lookup"><span data-stu-id="fab50-765">An exception is not thrown if the file does not exist; rather, it will be thrown the first time the object's properties are accessed.</span></span>  
  
 <span data-ttu-id="fab50-766">次の表に、`My.Computer.FileSystem.GetFileInfo` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-766">The following table lists an example of a task involving the `My.Computer.FileSystem.GetFileInfo` method.</span></span>  
  
|<span data-ttu-id="fab50-767">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-767">To</span></span>|<span data-ttu-id="fab50-768">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-768">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-769">ファイルの名前とパスを確認する</span><span class="sxs-lookup"><span data-stu-id="fab50-769">Determine a file's name and path</span></span>|[<span data-ttu-id="fab50-770">方法: Visual Basic でファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="fab50-770">How to: Parse File Paths in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-771">この例では、ファイル `MyLogFile.log` の <xref:System.IO.FileInfo?displayProperty=nameWithType> オブジェクトを取得し、それを使用してファイルの完全名、最終アクセス時刻、および長さを報告します。</span><span class="sxs-lookup"><span data-stu-id="fab50-771">This example retrieves a <xref:System.IO.FileInfo?displayProperty=nameWithType> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.</span></span>  
  
 [!code-vb[VbRefFile#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-772">パス名が不適切である場合。</span><span class="sxs-lookup"><span data-stu-id="fab50-772">The path name is malformed.</span></span> <span data-ttu-id="fab50-773">たとえば、無効な文字が含まれている場合や、空白のみの場合などがあります。</span><span class="sxs-lookup"><span data-stu-id="fab50-773">For example, it contains invalid characters or is only white space.</span></span> <span data-ttu-id="fab50-774">ファイル名の末尾にスラッシュ記号が付いています。</span><span class="sxs-lookup"><span data-stu-id="fab50-774">The file name has a trailing slash mark.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-775"><paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-775"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-776">パス文字列の途中にコロンが含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-776">The path contains a colon in the middle of the string.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-777">パスが長すぎます。</span><span class="sxs-lookup"><span data-stu-id="fab50-777">The path is too long.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-778">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-778">The user lacks necessary permissions.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-779">当該ファイルに対して、ユーザーがアクセス制御リスト (ACL: access control list) のアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-779">The user lacks ACL (access control list) access to the file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-780">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-780">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-781"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-781">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.IO.FileInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-782">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-782">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetFiles (string directory);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFiles (directory As String) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetFiles(System::String ^ directory);" />
      <MemberSignature Language="F#" Value="static member GetFiles : string -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetFiles directory" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-783">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-783">Directory to be searched.</span></span></param>
        <summary><span data-ttu-id="fab50-784">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-784">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
        <returns><span data-ttu-id="fab50-785">指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fab50-785">Read-only collection of file names from the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-786">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-786">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fab50-787">次の表に、`My.Computer.FileSystem.GetFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-787">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetFiles` method.</span></span>  
  
|<span data-ttu-id="fab50-788">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-788">To</span></span>|<span data-ttu-id="fab50-789">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-789">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-790">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fab50-790">Get the collection of files in a directory</span></span>|[<span data-ttu-id="fab50-791">方法: Visual Basic のディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fab50-791">How to: Get the Collection of Files in a Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory.md)|  
|<span data-ttu-id="fab50-792">ディレクトリ内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-792">Find files with a specific pattern in a directory</span></span>|[<span data-ttu-id="fab50-793">方法: Visual Basic 内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-793">How to: Find Files with a Specific Pattern in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-794">次の例では、ディレクトリ内のすべてのファイルが返され、`ListBox1` に追加されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-794">The following example returns all files in the directory and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#5)]  
  
 <span data-ttu-id="fab50-795">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fab50-795">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 <span data-ttu-id="fab50-796">この例では、ディレクトリ内の拡張子 `.txt` を持つすべてのファイルを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fab50-796">This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#6)]  
  
 <span data-ttu-id="fab50-797">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fab50-797">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-798">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-798">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-799"><paramref name="directory" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-799"><paramref name="directory" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-800">検索対象のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-800">The directory to search does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-801"><paramref name="directory" /> が既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-801"><paramref name="directory" /> points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-802">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-802">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-803">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-803">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-804">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-804">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-805">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-805">The user lacks necessary permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-806">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-806">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-807"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-807">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, params string[] wildcards);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFiles (directory As String, searchType As SearchOption, ParamArray wildcards As String()) As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ GetFiles(System::String ^ directory, Microsoft::VisualBasic::FileIO::SearchOption searchType, ... cli::array &lt;System::String ^&gt; ^ wildcards);" />
      <MemberSignature Language="F#" Value="static member GetFiles : string * Microsoft.VisualBasic.FileIO.SearchOption * string[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetFiles (directory, searchType, wildcards)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; GetFiles(string directory, valuetype Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="searchType" Type="Microsoft.VisualBasic.FileIO.SearchOption" />
        <Parameter Name="wildcards" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-808">検索するディレクトリ。</span><span class="sxs-lookup"><span data-stu-id="fab50-808">Directory to be searched.</span></span></param>
        <param name="searchType"><span data-ttu-id="fab50-809">サブフォルダーを含めるかどうか。</span><span class="sxs-lookup"><span data-stu-id="fab50-809">Whether to include subfolders.</span></span> <span data-ttu-id="fab50-810">既定値は <see langword="SearchOption.SearchTopLevelOnly" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-810">Default is <see langword="SearchOption.SearchTopLevelOnly" />.</span></span></param>
        <param name="wildcards"><span data-ttu-id="fab50-811">検索に使用するパターン。</span><span class="sxs-lookup"><span data-stu-id="fab50-811">Pattern to be matched.</span></span></param>
        <summary><span data-ttu-id="fab50-812">ディレクトリ内のファイル名を表す文字列の読み取り専用コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-812">Returns a read-only collection of strings representing the names of files within a directory.</span></span></summary>
        <returns><span data-ttu-id="fab50-813">指定されたディレクトリから取得されたファイル名の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="fab50-813">Read-only collection of file names from the specified directory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-814">指定したパターンに一致するファイルがない場合は、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-814">An empty collection is returned if no files matching the specified pattern are found.</span></span>  
  
 <span data-ttu-id="fab50-815">次の表に、`My.Computer.FileSystem.GetFiles` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-815">The following table lists examples of tasks involving the `My.Computer.FileSystem.GetFiles` method.</span></span>  
  
|<span data-ttu-id="fab50-816">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-816">To</span></span>|<span data-ttu-id="fab50-817">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-817">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-818">ディレクトリ内のファイルのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="fab50-818">Get the collection of files in a directory</span></span>|[<span data-ttu-id="fab50-819">方法: Visual Basic のディレクトリにあるファイルのコレクションを取得する</span><span class="sxs-lookup"><span data-stu-id="fab50-819">How to: Get the Collection of Files in a Directory in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-get-the-collection-of-files-in-a-directory.md)|  
|<span data-ttu-id="fab50-820">ディレクトリ内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-820">Find files with a specific pattern in a directory</span></span>|[<span data-ttu-id="fab50-821">方法: Visual Basic 内の特定のパターンを持つファイルを検索する</span><span class="sxs-lookup"><span data-stu-id="fab50-821">How to: Find Files with a Specific Pattern in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-find-files-with-a-specific-pattern.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-822">次の例では、ディレクトリ内のすべてのファイルが返され、`ListBox1` に追加されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-822">The following example returns all files in the directory and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#5)]  
  
 <span data-ttu-id="fab50-823">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fab50-823">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 <span data-ttu-id="fab50-824">この例では、ディレクトリ内の拡張子 `.txt` を持つすべてのファイルを返し、`ListBox1`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fab50-824">This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.</span></span>  
  
 [!code-vb[VbRefFile#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#6)]  
  
 <span data-ttu-id="fab50-825">この例では、フォームに `ListBox1` という名前の `ListBox` が必要です。</span><span class="sxs-lookup"><span data-stu-id="fab50-825">This example requires that you have a `ListBox` named `ListBox1` on your form.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-826">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-826">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-827"><paramref name="directory" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-827"><paramref name="directory" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-828">検索対象のディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-828">The directory to search does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-829"><paramref name="directory" /> が既存のファイルを指しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-829"><paramref name="directory" /> points to an existing file.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-830">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-830">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-831">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-831">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-832">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-832">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-833">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-833">The user lacks necessary permissions.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-834">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-834">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-835"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-835">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(string path) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetName : string -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetName path" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetName(string path) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="fab50-836">必須。</span><span class="sxs-lookup"><span data-stu-id="fab50-836">Required.</span></span> <span data-ttu-id="fab50-837">解析対象のパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-837">Path to be parsed.</span></span> <span data-ttu-id="fab50-838"><see langword="String" /> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="fab50-838"><see langword="String" />.</span></span></param>
        <summary><span data-ttu-id="fab50-839">指定されたパスからファイル名を解析し、取り出します。</span><span class="sxs-lookup"><span data-stu-id="fab50-839">Parses the file name out of the path provided.</span></span></summary>
        <returns><span data-ttu-id="fab50-840">指定されたパスのファイル名部分。</span><span class="sxs-lookup"><span data-stu-id="fab50-840">The file name from the specified path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-841">これは文字列操作です。`FileSystem` は検証されません。</span><span class="sxs-lookup"><span data-stu-id="fab50-841">This is a string operation; the `FileSystem` is not examined.</span></span>  
  
 <span data-ttu-id="fab50-842">`GetName` メソッドは、パスの末尾で発生するスラッシュ記号を無視します。</span><span class="sxs-lookup"><span data-stu-id="fab50-842">The `GetName` method ignores a slash mark occurring at the end of the path.</span></span>  
  
 <span data-ttu-id="fab50-843">次の表に、`My.Computer.FileSystem.GetFileName` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-843">The following table lists an example of a task involving the `My.Computer.FileSystem.GetFileName` method.</span></span>  
  
|<span data-ttu-id="fab50-844">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-844">To</span></span>|<span data-ttu-id="fab50-845">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-845">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-846">ファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="fab50-846">Parse a file path</span></span>|[<span data-ttu-id="fab50-847">方法: Visual Basic でファイルパスを解析する</span><span class="sxs-lookup"><span data-stu-id="fab50-847">How to: Parse File Paths in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-848">次の例では、ファイルパスを解析し、ファイルの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-848">The following example parses a file path and returns the name of the file.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#21)]  
  
 <span data-ttu-id="fab50-849">パス `C:\Testdirectory\Testfile` を解析するパスに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="fab50-849">Replace the path `C:\Testdirectory\Testfile` with the path you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentPath">
      <MemberSignature Language="C#" Value="public static string GetParentPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetParentPath(string path) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParentPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetParentPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member GetParentPath : string -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath path" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetParentPath(string path) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="fab50-850">確認するパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-850">Path to be examined.</span></span></param>
        <summary><span data-ttu-id="fab50-851">指定されたパスの親パスを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-851">Returns the parent path of the provided path.</span></span></summary>
        <returns><span data-ttu-id="fab50-852">指定されたパスの親パス。</span><span class="sxs-lookup"><span data-stu-id="fab50-852">The parent path of the provided path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-853">これは文字列操作です。ファイルシステムが検査されません。</span><span class="sxs-lookup"><span data-stu-id="fab50-853">This is a string operation; the file system is not examined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-854">この例では、`C:\Backups\Tmp\Test`の親パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="fab50-854">This example gets the parent path for `C:\Backups\Tmp\Test`.</span></span>  
  
 [!code-vb[VbRefFile#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-855">パスがルート パスであるため、親パスが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-855">Path does not have a parent path because it is a root path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-856"><paramref name="path" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-856"><paramref name="path" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-857">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-857">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-858">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-858">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTempFileName">
      <MemberSignature Language="C#" Value="public static string GetTempFileName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTempFileName() cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTempFileName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTempFileName();" />
      <MemberSignature Language="F#" Value="static member GetTempFileName : unit -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName " />
      <MemberSignature Language="ILAsm" Value=".method public static string GetTempFileName() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fab50-859">一意な名前を持つ 0 バイトの一時ファイルをディスク上に作成し、そのファイルへの完全パスを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-859">Creates a uniquely named zero-byte temporary file on disk and returns the full path of that file.</span></span></summary>
        <returns><span data-ttu-id="fab50-860">一時ファイルの完全パスを保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-860"><see langword="String" /> containing the full path of the temporary file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-861">このメソッドを使用して、一時ファイルを作成できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-861">This method can be used to create a temporary file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-862">この例では、一時ファイルを作成し、そのパスを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-862">This example creates a temp file and returns its path.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#12)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-863">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-863">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-864"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-864">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveDirectory">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-865">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-865">Moves a directory from one location to another.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName);" />
      <MemberSignature Language="F#" Value="static member MoveDirectory : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory (sourceDirectoryName, destinationDirectoryName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fab50-866">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-866">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fab50-867">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-867">Path of the directory to which the source directory is being moved.</span></span></param>
        <summary><span data-ttu-id="fab50-868">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-868">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-869">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-869">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-870">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-870">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="fab50-871">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="fab50-871">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-872">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-872">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-873"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-873"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-874">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-874">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-875">移動先がルート ディレクトリであるか、移動元と移動先のパスが同じです。</span><span class="sxs-lookup"><span data-stu-id="fab50-875">The source is a root directory or The source path and the target path are the same.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-876">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-876">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fab50-877">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-877">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-878">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-878">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-879">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-879">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-880">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-880">The user does not have required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-881">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-881">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-882"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-882">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="static member MoveDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory (sourceDirectoryName, destinationDirectoryName, showUI)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fab50-883">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-883">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fab50-884">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-884">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-885">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-885">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-886">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-886">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="fab50-887">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-887">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-888">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-888">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-889">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-889">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="fab50-890">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="fab50-890">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-891">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-891">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-892"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-892"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-893">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-893">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-894">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-894">The target directory already exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-895">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-895">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fab50-896">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-896">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-897">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-897">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-898">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-898">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-899">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-899">The user does not have required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-900">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-900">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-901"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-901">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-902">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-902">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-903"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-903">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member MoveDirectory : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory (sourceDirectoryName, destinationDirectoryName, overwrite)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, bool overwrite) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fab50-904">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-904">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fab50-905">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-905">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="overwrite"><span data-ttu-id="fab50-906">既存のディレクトリを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-906"><see langword="True" /> if existing directories should be overwritten; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fab50-907">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-907">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fab50-908">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-908">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-909">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-909">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-910">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-910">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="fab50-911">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="fab50-911">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-912">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-912">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-913"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-913"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-914">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-914">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-915">ターゲット ディレクトリが既に存在し、<paramref name="overwrite" /> が <see langword="False" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="fab50-915">The target directory already exists and <paramref name="overwrite" /> is set to <see langword="False" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-916">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-916">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fab50-917">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-917">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-918">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-918">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-919">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-919">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-920">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-920">The user does not have required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-921">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-921">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-922"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-922">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member MoveDirectory : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory (sourceDirectoryName, destinationDirectoryName, showUI, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName"><span data-ttu-id="fab50-923">移動するディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-923">Path of the directory to be moved.</span></span></param>
        <param name="destinationDirectoryName"><span data-ttu-id="fab50-924">ソース ディレクトリの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-924">Path of the directory to which the source directory is being moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-925">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-925">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-926">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-926">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fab50-927">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-927">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="fab50-928">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-928">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fab50-929">ディレクトリの場所を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-929">Moves a directory from one location to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-930">存在しないディレクトリ内のディレクトリを移動しようとすると、ターゲットの構造が作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-930">If an attempt is made to move a directory inside a directory that does not exist, the target structure will be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-931">この例では、`Directory2`内で `Directory1` を移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-931">This example moves `Directory1` inside `Directory2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#81](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#81)]  
  
 <span data-ttu-id="fab50-932">この例では `Directory1` を `Directory2`内で移動し、ディレクトリが既に存在する場合は上書きします。</span><span class="sxs-lookup"><span data-stu-id="fab50-932">This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#82](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-933">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、またはパスがデバイス パスである (\\\\.\\ で始まっている) ことが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-933">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-934"><paramref name="sourceDirectoryName" /> または <paramref name="destinationDirectoryName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-934"><paramref name="sourceDirectoryName" /> or <paramref name="destinationDirectoryName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-935">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-935">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-936"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されており、ファイルのサブディレクトリをコピーできません。</span><span class="sxs-lookup"><span data-stu-id="fab50-936"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" /> and a subdirectory of the file cannot be copied.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-937"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合にユーザーが操作を取り消したか、操作を完了できませんでした。</span><span class="sxs-lookup"><span data-stu-id="fab50-937"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" />, and the user cancels the operation, or the operation cannot be completed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-938">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-938">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-939">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-939">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fab50-940">操作が巡回しています。</span><span class="sxs-lookup"><span data-stu-id="fab50-940">The operation is cyclic.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-941">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-941">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-942">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-942">The user does not have required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-943">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-943">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-944"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-944">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-945">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-945">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-946"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-946">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-947">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-947">Moves a file to a new location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public static void MoveFile (string sourceFileName, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveFile(string sourceFileName, string destinationFileName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveFile (sourceFileName As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="static member MoveFile : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveFile (sourceFileName, destinationFileName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveFile(string sourceFileName, string destinationFileName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fab50-948">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-948">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fab50-949">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-949">Path of the directory into which the file should be moved.</span></span></param>
        <summary><span data-ttu-id="fab50-950">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-950">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-951">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-951">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fab50-952">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="fab50-952">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="fab50-953">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="fab50-953">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="fab50-954">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="fab50-954">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="fab50-955">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-955">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="fab50-956">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-956">To</span></span>|<span data-ttu-id="fab50-957">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-957">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-958">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fab50-958">Move a file</span></span>|[<span data-ttu-id="fab50-959">方法: Visual Basic でファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fab50-959">How to: Move a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-960">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-960">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="fab50-961">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-961">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-962">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-962">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-963"><paramref name="destinationFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-963"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-964">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-964">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-965">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-965">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-966">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-966">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-967">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-967">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-968">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-968">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fab50-969">すべての環境変数にアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-969">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="fab50-970"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-970">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-971">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-971">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-972"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-972">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="fab50-973">レジストリ変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-973">Controls the ability to access registry variables.</span></span> <span data-ttu-id="fab50-974"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-974">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveFile (sourceFileName As String, destinationFileName As String, showUI As UIOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI);" />
      <MemberSignature Language="F#" Value="static member MoveFile : string * string * Microsoft.VisualBasic.FileIO.UIOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveFile (sourceFileName, destinationFileName, showUI)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fab50-975">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-975">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fab50-976">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-976">Path of the directory into which the file should be moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-977">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-977">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-978">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-978">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <summary><span data-ttu-id="fab50-979">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-979">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-980">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-980">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fab50-981">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="fab50-981">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="fab50-982">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="fab50-982">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="fab50-983">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="fab50-983">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="fab50-984">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-984">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="fab50-985">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-985">To</span></span>|<span data-ttu-id="fab50-986">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-986">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-987">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fab50-987">Move a file</span></span>|[<span data-ttu-id="fab50-988">方法: Visual Basic でファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fab50-988">How to: Move a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-989">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-989">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="fab50-990">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-990">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-991">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-991">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-992"><paramref name="destinationFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-992"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-993">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-993">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-994">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-994">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-995">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-995">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-996">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-996">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-997">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-997">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fab50-998">すべての環境変数にアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-998">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="fab50-999"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-999">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1000">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1000">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1001"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1001">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="fab50-1002">レジストリ変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1002">Controls the ability to access registry variables.</span></span> <span data-ttu-id="fab50-1003"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1003">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-1004">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1004">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-1005"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1005">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public static void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveFile (sourceFileName As String, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, bool overwrite);" />
      <MemberSignature Language="F#" Value="static member MoveFile : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveFile (sourceFileName, destinationFileName, overwrite)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fab50-1006">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-1006">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fab50-1007">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-1007">Path of the directory into which the file should be moved.</span></span></param>
        <param name="overwrite"><span data-ttu-id="fab50-1008">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1008"><see langword="True" /> to overwrite existing files; otherwise <see langword="False" />.</span></span> <span data-ttu-id="fab50-1009">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1009">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fab50-1010">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1010">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1011">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1011">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fab50-1012">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1012">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="fab50-1013">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="fab50-1013">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="fab50-1014">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1014">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="fab50-1015">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1015">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="fab50-1016">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1016">To</span></span>|<span data-ttu-id="fab50-1017">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1017">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1018">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fab50-1018">Move a file</span></span>|[<span data-ttu-id="fab50-1019">方法: Visual Basic でファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fab50-1019">How to: Move a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1020">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1020">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="fab50-1021">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1021">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1022">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1022">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1023"><paramref name="destinationFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1023"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1024">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1024">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1025">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1025">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1026">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1026">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1027">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1027">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1028">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1028">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fab50-1029">すべての環境変数にアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1029">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="fab50-1030"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1030">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1031">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1031">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1032"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1032">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="fab50-1033">レジストリ変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1033">Controls the ability to access registry variables.</span></span> <span data-ttu-id="fab50-1034"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1034">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveFile (sourceFileName As String, destinationFileName As String, showUI As UIOption, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName, Microsoft::VisualBasic::FileIO::UIOption showUI, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="static member MoveFile : string * string * Microsoft.VisualBasic.FileIO.UIOption * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.MoveFile (sourceFileName, destinationFileName, showUI, onUserCancel)" />
      <MemberSignature Language="ILAsm" Value=".method public static void MoveFile(string sourceFileName, string destinationFileName, valuetype Microsoft.VisualBasic.FileIO.UIOption showUI, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="showUI" Type="Microsoft.VisualBasic.FileIO.UIOption" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName"><span data-ttu-id="fab50-1035">移動するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-1035">Path of the file to be moved.</span></span></param>
        <param name="destinationFileName"><span data-ttu-id="fab50-1036">ファイルの移動先となるディレクトリのパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-1036">Path of the directory into which the file should be moved.</span></span></param>
        <param name="showUI"><span data-ttu-id="fab50-1037">操作の進行状況を視覚的に追跡するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1037">Specifies whether to visually track the operation's progress.</span></span> <span data-ttu-id="fab50-1038">既定値は <see langword="UIOption.OnlyErrorDialogs" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1038">Default is <see langword="UIOption.OnlyErrorDialogs" />.</span></span></param>
        <param name="onUserCancel"><span data-ttu-id="fab50-1039">ユーザーによって操作が取り消された場合に、例外をスローするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1039">Specifies whether or not an exception is thrown when the user cancels the operation.</span></span> <span data-ttu-id="fab50-1040">既定値は <see langword="UICancelOption.ThrowException" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1040">Default is <see langword="UICancelOption.ThrowException" />.</span></span></param>
        <summary><span data-ttu-id="fab50-1041">ファイルを新しい場所に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1041">Moves a file to a new location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1042">ターゲットの構造が存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1042">If the target structure does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fab50-1043">`MoveFile` メソッドは、同じボリューム内でファイルを移動するときにのみ、Ace (Access Control エントリ) を保持します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1043">The `MoveFile` method preserves ACEs (Access Control Entries) only when moving the file within the same volume.</span></span> <span data-ttu-id="fab50-1044">これには、移動時に直接の Ace になる継承された Ace が含まれます (直接の Ace は、継承された Ace より優先されます)。</span><span class="sxs-lookup"><span data-stu-id="fab50-1044">This includes inherited ACEs, which become direct ACEs when moved (direct ACEs take precedence over inherited ACEs).</span></span> <span data-ttu-id="fab50-1045">ボリューム間でファイルを移動すると、Ace はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1045">If a file is moved between volumes, ACEs will not be copied.</span></span>  
  
 <span data-ttu-id="fab50-1046">次の表に、`My.Computer.FileSystem.MoveFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1046">The following table lists an example of a task involving the `My.Computer.FileSystem.MoveFile` method.</span></span>  
  
|<span data-ttu-id="fab50-1047">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1047">To</span></span>|<span data-ttu-id="fab50-1048">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1048">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1049">ファイルの移動</span><span class="sxs-lookup"><span data-stu-id="fab50-1049">Move a file</span></span>|[<span data-ttu-id="fab50-1050">方法: Visual Basic でファイルを移動する</span><span class="sxs-lookup"><span data-stu-id="fab50-1050">How to: Move a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-move-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1051">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2`に移動します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1051">This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#86](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#86)]  
  
 <span data-ttu-id="fab50-1052">この例では、ファイル `Test.txt` を `TestDir1` から `TestDir2` に移動し、その名前を `Test2.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1052">This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#87](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1053">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1053">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1054"><paramref name="destinationFileName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1054"><paramref name="destinationFileName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1055">ソース ファイルが有効でないか、存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1055">The source file is not valid or does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1056">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1056">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="fab50-1057"><paramref name="onUserCancel" /> が <see langword="ThrowException" /> に設定されている場合に、ユーザーが操作を取り消したか、不特定の I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1057"><paramref name="onUserCancel" /> is set to <see langword="ThrowException" />, and either the user has cancelled the operation or an unspecified I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1058">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1058">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1059">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1059">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1060">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1060">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="fab50-1061">すべての環境変数にアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1061">Controls the ability to access all environment variables.</span></span> <span data-ttu-id="fab50-1062"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1062">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1063">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1063">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1064"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1064">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission"><span data-ttu-id="fab50-1065">レジストリ変数へのアクセスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1065">Controls the ability to access registry variables.</span></span> <span data-ttu-id="fab50-1066"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1066">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fab50-1067">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1067">Controls the permissions related to user interfaces and the clipboard.</span></span> <span data-ttu-id="fab50-1068"><see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1068">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFieldParser">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-1069"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fab50-1069">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="fab50-1070"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1070">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFieldParser (file As String) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member OpenTextFieldParser : string -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser file" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1071"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1071">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <summary><span data-ttu-id="fab50-1072"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fab50-1072">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object,  which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="fab50-1073"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1073">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="fab50-1074">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1074"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1075">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1075">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="fab50-1076">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1076">To</span></span>|<span data-ttu-id="fab50-1077">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1077">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1078">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1078">Read from a delimited text file</span></span>|[<span data-ttu-id="fab50-1079">方法: Visual Basic でコンマ区切りのテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1079">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="fab50-1080">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1080">Read from a fixed-width text file</span></span>|[<span data-ttu-id="fab50-1081">方法: Visual Basic で固定幅のテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1081">How to: Read From Fixed-width Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="fab50-1082">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1082">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="fab50-1083">方法: Visual Basic で複数の形式を持つテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1083">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1084">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1084">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1085">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1085">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1086"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1086"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1087">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1087">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1088">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1088">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1089">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1089">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1090">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1090">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="fab50-1091">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1091">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="fab50-1092">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1092">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1093">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1093">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1094">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1094">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1095"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1095">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fab50-1096">コードに適用されるセキュリティのアクセス許可のセットについて説明します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1096">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="fab50-1097"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1097">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      </Docs>
    </Member>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, params int[] fieldWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, int32[] fieldWidths) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFieldParser (file As String, ParamArray fieldWidths As Integer()) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file, ... cli::array &lt;int&gt; ^ fieldWidths);" />
      <MemberSignature Language="F#" Value="static member OpenTextFieldParser : string * int[] -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser (file, fieldWidths)" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, int32[] fieldWidths) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="fieldWidths" Type="System.Int32[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1098"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1098">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <param name="fieldWidths"><span data-ttu-id="fab50-1099">フィールドの幅。</span><span class="sxs-lookup"><span data-stu-id="fab50-1099">Widths of the fields.</span></span></param>
        <summary><span data-ttu-id="fab50-1100"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fab50-1100">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="fab50-1101"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1101">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="fab50-1102">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1102"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1103">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1103">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="fab50-1104">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1104">To</span></span>|<span data-ttu-id="fab50-1105">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1105">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1106">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1106">Read from a delimited text file</span></span>|[<span data-ttu-id="fab50-1107">方法: Visual Basic でコンマ区切りのテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1107">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="fab50-1108">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1108">Read from a fixed-width text file</span></span>|[<span data-ttu-id="fab50-1109">方法: Visual Basic で固定幅のテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1109">How to: Read From Fixed-width Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="fab50-1110">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1110">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="fab50-1111">方法: Visual Basic で複数の形式を持つテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1111">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1112">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1112">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1113">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1113">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1114"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1114"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1115">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1115">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1116">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1116">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1117">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1117">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1118">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1118">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="fab50-1119">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1119">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="fab50-1120">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1120">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1121">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1121">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1122">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1122">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1123"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1123">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fab50-1124">コードに適用されるセキュリティのアクセス許可のセットについて説明します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1124">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="fab50-1125"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1125">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      </Docs>
    </Member>
    <Member MemberName="OpenTextFieldParser">
      <MemberSignature Language="C#" Value="public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, params string[] delimiters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, string[] delimiters) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFieldParser (file As String, ParamArray delimiters As String()) As TextFieldParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::VisualBasic::FileIO::TextFieldParser ^ OpenTextFieldParser(System::String ^ file, ... cli::array &lt;System::String ^&gt; ^ delimiters);" />
      <MemberSignature Language="F#" Value="static member OpenTextFieldParser : string * string[] -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser (file, delimiters)" />
      <MemberSignature Language="ILAsm" Value=".method public static class Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser(string file, string[] delimiters) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.TextFieldParser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="delimiters" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1126"><see langword="TextFieldParser" /> で開くファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1126">The file to be opened with the <see langword="TextFieldParser" />.</span></span></param>
        <param name="delimiters"><span data-ttu-id="fab50-1127">フィールドの区切り記号。</span><span class="sxs-lookup"><span data-stu-id="fab50-1127">Delimiters for the fields.</span></span></param>
        <summary><span data-ttu-id="fab50-1128"><see langword="OpenTextFieldParser" /> メソッドを使用すると、<see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> オブジェクトを作成できます。このオブジェクトは、ログなどの構造化されたテキスト ファイルを容易かつ効率的に解析できるようにします。</span><span class="sxs-lookup"><span data-stu-id="fab50-1128">The <see langword="OpenTextFieldParser" /> method allows you to create a <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object, which provides a way to easily and efficiently parse structured text files, such as logs.</span></span> <span data-ttu-id="fab50-1129"><see langword="TextFieldParser" /> オブジェクトは、区切り形式および固定幅の、どちらのファイルの読み込みにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1129">The <see langword="TextFieldParser" /> object can be used to read both delimited and fixed-width files.</span></span></summary>
        <returns><span data-ttu-id="fab50-1130">指定されたファイルを読み取るための <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1130"><see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> to read the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1131">次の表に、`My.Computer.FileSystem.OpenTextFieldParser` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1131">The following table lists examples of tasks involving the `My.Computer.FileSystem.OpenTextFieldParser` method.</span></span>  
  
|<span data-ttu-id="fab50-1132">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1132">To</span></span>|<span data-ttu-id="fab50-1133">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1133">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1134">区切られたテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1134">Read from a delimited text file</span></span>|[<span data-ttu-id="fab50-1135">方法: Visual Basic でコンマ区切りのテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1135">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="fab50-1136">固定幅のテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1136">Read from a fixed-width text file</span></span>|[<span data-ttu-id="fab50-1137">方法: Visual Basic で固定幅のテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1137">How to: Read From Fixed-width Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="fab50-1138">複数の形式を持つテキストファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1138">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="fab50-1139">方法: Visual Basic で複数の形式を持つテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1139">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1140">この例では、`TextFieldParser.reader` を開き、それを使用して `C:\TestFolder1\Test1.txt`から読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1140">This example opens the `TextFieldParser.reader` and uses it to read from `C:\TestFolder1\Test1.txt`.</span></span>  
  
 [!code-vb[VbRefFile#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1141">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1141">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1142"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1142"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1143">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1143">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1144">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1144">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1145">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1145">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1146">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1146">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="fab50-1147">指定の書式を使用して行を解析できません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1147">A row cannot be parsed using the specified format.</span></span> <span data-ttu-id="fab50-1148">例外の原因となった行が例外メッセージで報告され、その行に含まれているテキストには <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> プロパティが代入されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1148">The exception message specifies the line causing the exception, while the <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" /> property is assigned the text contained in the line.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1149">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1149">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1150">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1150">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1151"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1151">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fab50-1152">コードに適用されるセキュリティのアクセス許可のセットについて説明します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1152">Describes a set of security permissions applied to code.</span></span> <span data-ttu-id="fab50-1153"><see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1153">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFileReader">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-1154"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1154">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFileReader">
      <MemberSignature Language="C#" Value="public static System.IO.StreamReader OpenTextFileReader (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.StreamReader OpenTextFileReader(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFileReader (file As String) As StreamReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::StreamReader ^ OpenTextFileReader(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member OpenTextFileReader : string -&gt; System.IO.StreamReader" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader file" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.StreamReader OpenTextFileReader(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1155">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1155">File to be read.</span></span></param>
        <summary><span data-ttu-id="fab50-1156"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1156">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
        <returns><span data-ttu-id="fab50-1157">ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fab50-1157"><see cref="T:System.IO.StreamReader" /> object to read from the file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1158"><xref:System.IO.StreamReader>では、テキストファイルのみを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1158">Only text files can be read with a <xref:System.IO.StreamReader>.</span></span>  
  
 <span data-ttu-id="fab50-1159">次の表に、`My.Computer.FileSystem.OpenTextFileReader` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1159">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileReader` method.</span></span>  
  
|<span data-ttu-id="fab50-1160">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1160">To</span></span>|<span data-ttu-id="fab50-1161">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1161">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1162"><xref:System.IO.StreamReader> を使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1162">Open a file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="fab50-1163">方法: StreamReader を使用してファイルからテキストを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fab50-1163">How to: Read Text from Files with a StreamReader (Visual Basic)</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1164">この例では、ファイル `Testfile.txt`を開き、そこから行を読み取り、`MessageBox`でその行を表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1164">This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.</span></span>  
  
 [!code-vb[VbRefFile#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1165">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1165">The file name ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1166">指定されたファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1166">The specified file cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1167">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1167">The user lacks necessary permissions to read from the file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1168">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1168">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1169"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1169">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="OpenTextFileReader">
      <MemberSignature Language="C#" Value="public static System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.StreamReader OpenTextFileReader(string file, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::StreamReader ^ OpenTextFileReader(System::String ^ file, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member OpenTextFileReader : string * System.Text.Encoding -&gt; System.IO.StreamReader" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader (file, encoding)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.StreamReader OpenTextFileReader(string file, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1170">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1170">File to be read.</span></span></param>
        <param name="encoding"><span data-ttu-id="fab50-1171">ファイルの内容に使用されるエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="fab50-1171">The encoding to use for the file contents.</span></span> <span data-ttu-id="fab50-1172">既定値は ASCII です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1172">Default is ASCII.</span></span></param>
        <summary><span data-ttu-id="fab50-1173"><see cref="T:System.IO.StreamReader" /> オブジェクトを開いてファイルから読み取ります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1173">Opens a <see cref="T:System.IO.StreamReader" /> object to read from a file.</span></span></summary>
        <returns><span data-ttu-id="fab50-1174">ファイルから読み取る <see cref="T:System.IO.StreamReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fab50-1174"><see cref="T:System.IO.StreamReader" /> object to read from the file</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1175"><xref:System.IO.StreamReader>では、テキストファイルのみを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1175">Only text files can be read with a <xref:System.IO.StreamReader>.</span></span>  
  
 <span data-ttu-id="fab50-1176">次の表に、`My.Computer.FileSystem.OpenTextFileReader` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1176">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileReader` method.</span></span>  
  
|<span data-ttu-id="fab50-1177">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1177">To</span></span>|<span data-ttu-id="fab50-1178">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1178">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1179"><xref:System.IO.StreamReader> を使用してファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1179">Open a file with a <xref:System.IO.StreamReader></span></span>|[<span data-ttu-id="fab50-1180">方法: StreamReader を使用してファイルからテキストを読み取る (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fab50-1180">How to: Read Text from Files with a StreamReader (Visual Basic)</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-text-from-files-with-a-streamreader.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1181">この例では、ファイル `Testfile.txt`を開き、そこから行を読み取り、`MessageBox`でその行を表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1181">This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.</span></span>  
  
 [!code-vb[VbRefFile#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1182">ファイル名がバックスラッシュ (\\) で終わっています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1182">The file name ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1183">指定されたファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1183">The specified file cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1184">ユーザーがファイルの読み取りに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1184">The user lacks necessary permissions to read from the file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1185">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1185">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1186"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1186">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenTextFileWriter">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-1187"><see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1187">Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenTextFileWriter">
      <MemberSignature Language="C#" Value="public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.StreamWriter OpenTextFileWriter(string file, bool append) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenTextFileWriter (file As String, append As Boolean) As StreamWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::StreamWriter ^ OpenTextFileWriter(System::String ^ file, bool append);" />
      <MemberSignature Language="F#" Value="static member OpenTextFileWriter : string * bool -&gt; System.IO.StreamWriter" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter (file, append)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.StreamWriter OpenTextFileWriter(string file, bool append) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1188">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1188">File to be written to.</span></span></param>
        <param name="append"><span data-ttu-id="fab50-1189">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1189"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span> <span data-ttu-id="fab50-1190">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1190">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fab50-1191"><see cref="T:System.IO.StreamWriter" /> オブジェクトを開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1191">Opens a <see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></summary>
        <returns><span data-ttu-id="fab50-1192">指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fab50-1192"><see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1193">`OpenTextFileWriter` メソッドは、ファイルのストリームを開いて初期化し、そのストリームの <xref:System.IO.StreamWriter> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1193">The `OpenTextFileWriter` method opens and initializes a stream for a file and then returns the <xref:System.IO.StreamWriter> object for that stream.</span></span> <span data-ttu-id="fab50-1194">必要に応じて何回でもストリームに書き込むことができます。終了したら、それを閉じます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1194">You can write to the steam as many times as necessary and then close it when you are finished.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab50-1195">すべてのデータが基になるストリームに正しく書き込まれるようにするには、<xref:System.IO.StreamWriter> オブジェクトの <xref:System.IO.StreamWriter.Close%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1195">You must call the <xref:System.IO.StreamWriter.Close%2A> method on the <xref:System.IO.StreamWriter> object to make sure that all data is correctly written to the underlying stream.</span></span>  
  
 <span data-ttu-id="fab50-1196">少数の文字列のみをファイルに書き込む場合は、<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> メソッドを使用する方が簡単な場合があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1196">If you are writing only a few strings to a file, it might be simpler to use the <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="fab50-1197">次の表に、`My.Computer.FileSystem.OpenTextFileWriter` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1197">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileWriter` method.</span></span>  
  
|<span data-ttu-id="fab50-1198">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1198">To</span></span>|<span data-ttu-id="fab50-1199">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1199">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1200">`StreamWriter` を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-1200">Write text to a file with a `StreamWriter`</span></span>|[<span data-ttu-id="fab50-1201">方法: StreamWriter を使用してファイルにテキストを書き込む Visual Basic</span><span class="sxs-lookup"><span data-stu-id="fab50-1201">How to: Write Text to Files with a StreamWriter in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1202">この例では、`My.Computer.FileSystem.OpenTextFileWriter` メソッドを使用して <xref:System.IO.StreamWriter> を開き、それを使用して `StreamWriter` クラスの `WriteLine` メソッドを使用してテキストファイルに文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1202">This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.</span></span>  
  
 [!code-vb[VbRefFile#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1203"><paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1203"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1204">ファイル名の末尾にスラッシュが付いています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1204">The file name ends with a trailing slash.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1205">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1205">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1206"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1206">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamWriter" />
      </Docs>
    </Member>
    <Member MemberName="OpenTextFileWriter">
      <MemberSignature Language="C#" Value="public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.StreamWriter OpenTextFileWriter(string file, bool append, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::StreamWriter ^ OpenTextFileWriter(System::String ^ file, bool append, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member OpenTextFileWriter : string * bool * System.Text.Encoding -&gt; System.IO.StreamWriter" Usage="Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter (file, append, encoding)" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.IO.StreamWriter OpenTextFileWriter(string file, bool append, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.StreamWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1207">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1207">File to be written to.</span></span></param>
        <param name="append"><span data-ttu-id="fab50-1208">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1208"><see langword="True" /> to append to the contents in the file; <see langword="False" /> to overwrite the contents of the file.</span></span> <span data-ttu-id="fab50-1209">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1209">Default is <see langword="False" />.</span></span></param>
        <param name="encoding"><span data-ttu-id="fab50-1210">ファイルへの書き込み時に使用するエンコーディング。</span><span class="sxs-lookup"><span data-stu-id="fab50-1210">Encoding to be used in writing to the file.</span></span> <span data-ttu-id="fab50-1211">既定値は ASCII です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1211">Default is ASCII.</span></span></param>
        <summary><span data-ttu-id="fab50-1212"><see cref="T:System.IO.StreamWriter" /> を開いて指定されたファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1212">Opens a <see cref="T:System.IO.StreamWriter" /> to write to the specified file.</span></span></summary>
        <returns><span data-ttu-id="fab50-1213">指定したファイルに書き込む <see cref="T:System.IO.StreamWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fab50-1213"><see cref="T:System.IO.StreamWriter" /> object to write to the specified file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1214">`OpenTextFileWriter` メソッドは、ファイルのストリームを開いて初期化し、そのストリームの <xref:System.IO.StreamWriter> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1214">The `OpenTextFileWriter` method opens and initializes a stream for a file and then returns the <xref:System.IO.StreamWriter> object for that stream.</span></span> <span data-ttu-id="fab50-1215">必要に応じて何回でもストリームに書き込むことができます。終了したら、それを閉じます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1215">You can write to the steam as many times as necessary and then close it when you are finished.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab50-1216">すべてのデータが基になるストリームに正しく書き込まれるようにするには、<xref:System.IO.StreamWriter> オブジェクトの <xref:System.IO.StreamWriter.Close%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1216">You must call the <xref:System.IO.StreamWriter.Close%2A> method on the <xref:System.IO.StreamWriter> object to make sure that all data is correctly written to the underlying stream.</span></span>  
  
 <span data-ttu-id="fab50-1217">少数の文字列のみをファイルに書き込む場合は、<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> メソッドを使用する方が簡単な場合があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1217">If you are writing only a few strings to a file, it might be simpler to use the <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="fab50-1218">次の表に、`My.Computer.FileSystem.OpenTextFileWriter` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1218">The following table lists an example of a task involving the `My.Computer.FileSystem.OpenTextFileWriter` method.</span></span>  
  
|<span data-ttu-id="fab50-1219">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1219">To</span></span>|<span data-ttu-id="fab50-1220">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1220">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1221">`StreamWriter` を使用してファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-1221">Write text to a file with a `StreamWriter`</span></span>|[<span data-ttu-id="fab50-1222">方法: StreamWriter を使用してファイルにテキストを書き込む Visual Basic</span><span class="sxs-lookup"><span data-stu-id="fab50-1222">How to: Write Text to Files with a StreamWriter in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files-with-a-streamwriter.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1223">この例では、`Unicode` エンコーディングを使用して `My.Computer.FileSystem.OpenTextFileWriter` メソッドを使用して <xref:System.IO.StreamWriter> を開き、それを使用して、`StreamWriter` クラスの `WriteLine` メソッドを使用してテキストファイルに文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1223">This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method with `Unicode` encoding and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.</span></span>  
  
 [!code-vb[VbRefFile#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1224"><paramref name="file" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1224"><paramref name="file" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1225">ファイル名の末尾にスラッシュが付いています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1225">The file name ends with a trailing slash.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1226">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1226">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1227"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1227">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.IO.StreamWriter" />
      </Docs>
    </Member>
    <Member MemberName="ReadAllBytes">
      <MemberSignature Language="C#" Value="public static byte[] ReadAllBytes (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] ReadAllBytes(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadAllBytes (file As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ ReadAllBytes(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member ReadAllBytes : string -&gt; byte[]" Usage="Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes file" />
      <MemberSignature Language="ILAsm" Value=".method public static unsigned int8[] ReadAllBytes(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1228">読み取るファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1228">File to be read.</span></span></param>
        <summary><span data-ttu-id="fab50-1229">テキスト ファイルの内容をバイト配列として返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1229">Returns the contents of a file as a byte array.</span></span></summary>
        <returns><span data-ttu-id="fab50-1230">ファイルの内容を保持する <see langword="Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="fab50-1230"><see langword="Byte" /> array containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1231">`My.Computer.FileSystem` オブジェクトの `ReadAllBytes` メソッドを使用すると、バイナリファイルから読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1231">The `ReadAllBytes` method of the `My.Computer.FileSystem` object allows you to read from a binary file.</span></span> <span data-ttu-id="fab50-1232">ファイルの内容は、バイト配列として返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1232">The contents of the file are returned as a byte array.</span></span>  
  
 <span data-ttu-id="fab50-1233">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1233">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="fab50-1234">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1234">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="fab50-1235">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1235">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="fab50-1236">次の表に、`My.Computer.FileSystem.ReadAllBytes` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1236">The following table lists an example of a task involving the `My.Computer.FileSystem.ReadAllBytes` method.</span></span>  
  
|<span data-ttu-id="fab50-1237">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1237">To</span></span>|<span data-ttu-id="fab50-1238">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1238">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1239">バイナリ ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1239">Read from a binary file</span></span>|[<span data-ttu-id="fab50-1240">方法: Visual Basic でバイナリファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1240">How to: Read From Binary Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-binary-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1241">この例では、ファイルから読み取り `C:/Documents and Settings/selfportrait.jpg.`</span><span class="sxs-lookup"><span data-stu-id="fab50-1241">This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#33](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1242">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1242">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1243"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1243"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1244">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1244">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1245">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1245">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1246">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1246">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1247">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1247">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fab50-1248">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1248">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1249">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1249">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1250">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1250">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1251"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1251">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadAllText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-1252">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1252">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadAllText">
      <MemberSignature Language="C#" Value="public static string ReadAllText (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadAllText(string file) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadAllText (file As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadAllText(System::String ^ file);" />
      <MemberSignature Language="F#" Value="static member ReadAllText : string -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText file" />
      <MemberSignature Language="ILAsm" Value=".method public static string ReadAllText(string file) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1253">読み取るファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-1253">Name and path of the file to read.</span></span></param>
        <summary><span data-ttu-id="fab50-1254">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1254">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
        <returns><span data-ttu-id="fab50-1255">ファイルの内容を保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1255"><see langword="String" /> containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1256">`ReadAllText` オブジェクトの `My.Computer.FileSystem` メソッドを使用すると、テキスト ファイルを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1256">The `ReadAllText` method of the `My.Computer.FileSystem` object allows you to read from a text file.</span></span> <span data-ttu-id="fab50-1257">ファイルの内容は文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1257">The contents of the file are returned as a string.</span></span>  
  
 <span data-ttu-id="fab50-1258">ファイルの内容が ASCII や UTF-8 などのエンコーディングに含まれる場合は、ファイルのエンコーディングを指定できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1258">The file encoding can be specified if the contents of the file are in an encoding such as ASCII or UTF-8.</span></span> <span data-ttu-id="fab50-1259">拡張文字を含むファイルから読み取る場合は、<xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A> メソッドの別のオーバーロードを使用して、ファイルのエンコードを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1259">If you are reading from a file with extended characters, you need to specify the file encoding using another overload of the <xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A> method.</span></span>  
  
 <span data-ttu-id="fab50-1260">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1260">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="fab50-1261">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1261">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="fab50-1262">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1262">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="fab50-1263">次の表に、`My.Computer.FileSystem.ReadAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1263">The following table lists an example of a task involving the `My.Computer.FileSystem.ReadAllText` method.</span></span>  
  
|<span data-ttu-id="fab50-1264">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1264">To</span></span>|<span data-ttu-id="fab50-1265">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1265">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1266">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1266">Read from a text file</span></span>|[<span data-ttu-id="fab50-1267">方法: Visual Basic でテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1267">How to: Read From Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1268">この例では、`Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1268">This example reads the contents of `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#8)]  
  
 <span data-ttu-id="fab50-1269">この例では、ASCII ファイル `Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1269">This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1270">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1270">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1271"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1271"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1272">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1272">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1273">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1273">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1274">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1274">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1275">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1275">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fab50-1276">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1276">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1277">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1277">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1278">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1278">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1279"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1279">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText" />
        <altmember cref="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      </Docs>
    </Member>
    <Member MemberName="ReadAllText">
      <MemberSignature Language="C#" Value="public static string ReadAllText (string file, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadAllText(string file, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ReadAllText(System::String ^ file, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member ReadAllText : string * System.Text.Encoding -&gt; string" Usage="Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText (file, encoding)" />
      <MemberSignature Language="ILAsm" Value=".method public static string ReadAllText(string file, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1280">読み取るファイルの名前とパス。</span><span class="sxs-lookup"><span data-stu-id="fab50-1280">Name and path of the file to read.</span></span></param>
        <param name="encoding"><span data-ttu-id="fab50-1281">ファイルの読み取り時に使用する文字エンコーディング。</span><span class="sxs-lookup"><span data-stu-id="fab50-1281">Character encoding to use in reading the file.</span></span> <span data-ttu-id="fab50-1282">既定値は、UTF-8 です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1282">Default is UTF-8.</span></span></param>
        <summary><span data-ttu-id="fab50-1283">テキスト ファイルの内容を <see langword="String" /> として返します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1283">Returns the contents of a text file as a <see langword="String" />.</span></span></summary>
        <returns><span data-ttu-id="fab50-1284">ファイルの内容を保持する <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1284"><see langword="String" /> containing the contents of the file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1285">`ReadAllText` オブジェクトの `My.Computer.FileSystem` メソッドを使用すると、テキスト ファイルを読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1285">The `ReadAllText` method of the `My.Computer.FileSystem` object allows you to read from a text file.</span></span> <span data-ttu-id="fab50-1286">ファイルの内容は文字列として返されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1286">The contents of the file are returned as a string.</span></span>  
  
 <span data-ttu-id="fab50-1287">ファイルの内容が ASCII や UTF-8 などのエンコーディングに含まれる場合は、ファイルのエンコーディングを指定できます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1287">The file encoding can be specified if the contents of the file are in an encoding such as ASCII or UTF-8.</span></span> <span data-ttu-id="fab50-1288">拡張文字を使用してファイルを読み取る場合は、ファイルのエンコードを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1288">If you are reading from a file with extended characters, you need to specify the file encoding.</span></span>  
  
 <span data-ttu-id="fab50-1289">ファイル名からファイルの内容を判断しないでください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1289">Do not make decisions about the contents of the file based on the name of the file.</span></span> <span data-ttu-id="fab50-1290">たとえば、Form1.vb というファイルは Visual Basic のソース ファイルではない可能性もあります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1290">For example, the file Form1.vb may not be a Visual Basic source file.</span></span> <span data-ttu-id="fab50-1291">アプリケーションでデータを使用する前に、入力をすべて検証してください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1291">Verify all inputs before using the data in your application.</span></span>  
  
 <span data-ttu-id="fab50-1292">次の表に、`My.Computer.FileSystem.ReadAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1292">The following table lists an example of a task involving the `My.Computer.FileSystem.ReadAllText` method.</span></span>  
  
|<span data-ttu-id="fab50-1293">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1293">To</span></span>|<span data-ttu-id="fab50-1294">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1294">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1295">テキスト ファイルからの読み取り</span><span class="sxs-lookup"><span data-stu-id="fab50-1295">Read from a text file</span></span>|[<span data-ttu-id="fab50-1296">方法: Visual Basic でテキストファイルを読み取る</span><span class="sxs-lookup"><span data-stu-id="fab50-1296">How to: Read From Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1297">この例では、`Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1297">This example reads the contents of `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#8)]  
  
 <span data-ttu-id="fab50-1298">この例では、ASCII ファイル `Test.txt` の内容を文字列に読み取り、メッセージボックスに表示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1298">This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.</span></span>  
  
 [!code-vb[VbRefFile#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1299">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1299">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1300"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1300"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1301">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1301">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1302">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1302">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1303">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1303">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1304">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1304">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fab50-1305">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1305">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1306">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1306">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1307">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1307">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1308"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1308">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="M:System.IO.StreamReader.#ctor(System.IO.Stream,System.Text.Encoding)" />
      </Docs>
    </Member>
    <Member MemberName="RenameDirectory">
      <MemberSignature Language="C#" Value="public static void RenameDirectory (string directory, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenameDirectory(string directory, string newName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RenameDirectory (directory As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RenameDirectory(System::String ^ directory, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="static member RenameDirectory : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory (directory, newName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void RenameDirectory(string directory, string newName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directory"><span data-ttu-id="fab50-1309">名前を変更するディレクトリのパスおよび名前。</span><span class="sxs-lookup"><span data-stu-id="fab50-1309">Path and name of directory to be renamed.</span></span></param>
        <param name="newName"><span data-ttu-id="fab50-1310">ディレクトリの新しい名前。</span><span class="sxs-lookup"><span data-stu-id="fab50-1310">New name for directory.</span></span></param>
        <summary><span data-ttu-id="fab50-1311">ディレクトリ名を変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1311">Renames a directory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1312">このメソッドを使用してディレクトリを移動することはできません。`MoveDirectory` メソッドを使用して、ディレクトリの移動と名前変更を行います。</span><span class="sxs-lookup"><span data-stu-id="fab50-1312">This method cannot be used to move a directory; use the `MoveDirectory` method to move and rename the directory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1313">この例では、`Test` ディレクトリの名前を `SecondTest`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1313">This example renames the `Test` directory to `SecondTest`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1314"><paramref name="newName" /> にパス情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1314"><paramref name="newName" /> contains path information.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1315"><paramref name="directory" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1315"><paramref name="directory" /> is <see langword="Nothing" />.</span></span>  
  
<span data-ttu-id="fab50-1316">または</span><span class="sxs-lookup"><span data-stu-id="fab50-1316">-or-</span></span> 
 <span data-ttu-id="fab50-1317"><paramref name="newName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1317"><paramref name="newName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="fab50-1318">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1318">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1319"><paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1319">There is an existing file or directory with the name specified in <paramref name="newName" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1320">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1320">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1321">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1321">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1322">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1322">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-1323">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1323">The user does not have required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1324">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1324">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1325"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1325">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory" />
      </Docs>
    </Member>
    <Member MemberName="RenameFile">
      <MemberSignature Language="C#" Value="public static void RenameFile (string file, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RenameFile(string file, string newName) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RenameFile (file As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RenameFile(System::String ^ file, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="static member RenameFile : string * string -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.RenameFile (file, newName)" />
      <MemberSignature Language="ILAsm" Value=".method public static void RenameFile(string file, string newName) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1326">名前を変更するファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1326">File to be renamed.</span></span></param>
        <param name="newName"><span data-ttu-id="fab50-1327">新しいファイル名。</span><span class="sxs-lookup"><span data-stu-id="fab50-1327">New name of file.</span></span></param>
        <summary><span data-ttu-id="fab50-1328">ファイル名を変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1328">Renames a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1329">このメソッドは、ファイルを移動する目的には使用できません。ファイルを移動して名前を変更するには、<xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1329">This method cannot be used to move a file; use the <xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A> method to move and rename the file.</span></span>  
  
 <span data-ttu-id="fab50-1330">次の表に、`My.Computer.FileSystem.RenameFile` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1330">The following table lists an example of a task involving the `My.Computer.FileSystem.RenameFile` method.</span></span>  
  
|<span data-ttu-id="fab50-1331">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1331">To</span></span>|<span data-ttu-id="fab50-1332">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1332">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1333">ファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fab50-1333">Rename a file</span></span>|[<span data-ttu-id="fab50-1334">方法: Visual Basic 内のファイルの名前を変更する</span><span class="sxs-lookup"><span data-stu-id="fab50-1334">How to: Rename a File in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-rename-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1335">この例では、`Test.txt` ファイルの名前を `SecondTest.txt`に変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1335">This example renames the file `Test.txt` to `SecondTest.txt`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#1)]  
  
 <span data-ttu-id="fab50-1336">名前を変更するファイルのパスとファイル名に "`C:\Test.txt`" を変更します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1336">Change "`C:\Test.txt`" to the path and file name of the file that you want to rename.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1337"><paramref name="newName" /> にパス情報が含まれているか、末尾にバックスラッシュ (\\) が付いています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1337"><paramref name="newName" /> contains path information or ends with a backslash (\\).</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1338"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1338"><paramref name="file" /> is <see langword="Nothing" />.</span></span>  
  
<span data-ttu-id="fab50-1339">または</span><span class="sxs-lookup"><span data-stu-id="fab50-1339">-or-</span></span> 
 <span data-ttu-id="fab50-1340"><paramref name="newName" /> が <see langword="Nothing" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1340"><paramref name="newName" /> is <see langword="Nothing" /> or an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1341">ディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1341">The directory does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1342"><paramref name="newName" /> で指定したのと同じ名前のファイルまたはディレクトリが既に存在します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1342">There is an existing file or directory with the name specified in <paramref name="newName" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1343">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1343">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1344">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1344">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1345">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1345">The user lacks necessary permissions to view the path.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="fab50-1346">ユーザーに必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1346">The user does not have required permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1347">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1347">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1348"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1348">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="WriteAllBytes">
      <MemberSignature Language="C#" Value="public static void WriteAllBytes (string file, byte[] data, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteAllBytes(string file, unsigned int8[] data, bool append) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteAllBytes (file As String, data As Byte(), append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteAllBytes(System::String ^ file, cli::array &lt;System::Byte&gt; ^ data, bool append);" />
      <MemberSignature Language="F#" Value="static member WriteAllBytes : string * byte[] * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes (file, data, append)" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteAllBytes(string file, unsigned int8[] data, bool append) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1349">書き込み先のファイルのパスと名前。</span><span class="sxs-lookup"><span data-stu-id="fab50-1349">Path and name of the file to be written to.</span></span></param>
        <param name="data"><span data-ttu-id="fab50-1350">ファイルに書き込むデータ。</span><span class="sxs-lookup"><span data-stu-id="fab50-1350">Data to be written to the file.</span></span></param>
        <param name="append"><span data-ttu-id="fab50-1351">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1351"><see langword="True" /> to append to the file contents; <see langword="False" /> to overwrite the file contents.</span></span> <span data-ttu-id="fab50-1352">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1352">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="fab50-1353">バイナリ ファイルにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1353">Writes data to a binary file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1354">指定されたパス (ファイル名を除く) が有効でない場合は、<xref:System.IO.DirectoryNotFoundException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1354">If the specified path, excluding the file name, is not valid, a <xref:System.IO.DirectoryNotFoundException> exception will be thrown.</span></span> <span data-ttu-id="fab50-1355">パスが有効であってもファイルが存在しない場合は、ファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1355">If the path is valid but the file does not exist, the file is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab50-1356">`WriteAllBytes` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1356">The `WriteAllBytes` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="fab50-1357">`WriteAllBytes` メソッドを使用するコードは、<xref:System.IO.BinaryWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1357">Code that uses the `WriteAllBytes` method is simpler than code that uses a <xref:System.IO.BinaryWriter> object.</span></span> <span data-ttu-id="fab50-1358">ただし、ループを使用してデータをファイルに追加する場合は、ファイルを一度だけ開いて閉じなければならないため、<xref:System.IO.BinaryWriter> オブジェクトの方がパフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fab50-1358">However, if you are adding data to a file using a loop, a <xref:System.IO.BinaryWriter> object can provide better performance because you only have to open and close the file once.</span></span>  
  
 <span data-ttu-id="fab50-1359">次の表に、`My.Computer.FileSystem.WriteAllBytes` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1359">The following table lists an example of a task involving the `My.Computer.FileSystem.WriteAllBytes` method.</span></span>  
  
|<span data-ttu-id="fab50-1360">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1360">To</span></span>|<span data-ttu-id="fab50-1361">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1361">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1362">バイナリ ファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fab50-1362">Write to a binary file</span></span>|[<span data-ttu-id="fab50-1363">方法: Visual Basic でバイナリファイルに書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-1363">How to: Write to Binary Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-to-binary-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1364">この例では、データ配列 `CustomerData` をファイル `CollectedData`に追加します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1364">This example appends the data array `CustomerData` to the file `CollectedData`.</span></span>  
  
 [!code-vb[VbVbcnMyFileSystem#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1365">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1365">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1366"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1366"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1367">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1367">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1368">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1368">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1369">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1369">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1370">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1370">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fab50-1371">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1371">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1372">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1372">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1373">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1373">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1374"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1374">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAllText">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fab50-1375">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1375">Writes text to a file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAllText">
      <MemberSignature Language="C#" Value="public static void WriteAllText (string file, string text, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteAllText(string file, string text, bool append) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteAllText (file As String, text As String, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteAllText(System::String ^ file, System::String ^ text, bool append);" />
      <MemberSignature Language="F#" Value="static member WriteAllText : string * string * bool -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText (file, text, append)" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteAllText(string file, string text, bool append) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1376">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1376">File to be written to.</span></span></param>
        <param name="text"><span data-ttu-id="fab50-1377">ファイルに書き込まれるテキスト。</span><span class="sxs-lookup"><span data-stu-id="fab50-1377">Text to be written to file.</span></span></param>
        <param name="append"><span data-ttu-id="fab50-1378">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1378"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span></param>
        <summary><span data-ttu-id="fab50-1379">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1379">Writes text to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1380">UTF-8 エンコーディングは、ファイルへの書き込みに使用されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1380">The UTF-8 encoding is used to write to the file.</span></span> <span data-ttu-id="fab50-1381">別のエンコードを指定するには、<xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> メソッドの別のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1381">To specify a different encoding, use a different overload of the <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A> method.</span></span>  
  
 <span data-ttu-id="fab50-1382">指定したファイルが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1382">If the specified file does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fab50-1383">指定したエンコーディングがファイルの既存のエンコーディングと一致しない場合、指定されたコードは無視されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1383">If the specified encoding does not match the existing encoding of the file, the specified coding is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab50-1384">`WriteAllText` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1384">The `WriteAllText` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="fab50-1385">`WriteAllText` メソッドを使用するコードは、<xref:System.IO.StreamWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1385">Code that uses the `WriteAllText` method is simpler than code that uses a <xref:System.IO.StreamWriter> object.</span></span> <span data-ttu-id="fab50-1386">ただし、ループを使用してファイルに文字列を追加する場合は、ファイルを1回だけ開いて閉じる必要があるため、<xref:System.IO.StreamWriter> オブジェクトを使用するとパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1386">However, if you are adding strings to a file by using a loop, a <xref:System.IO.StreamWriter> object can provide better performance because you only have to open and close the file one time.</span></span> <span data-ttu-id="fab50-1387">詳細については、<xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1387">For more information, see the <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A> method.</span></span>  
  
 <span data-ttu-id="fab50-1388">次の表に、`My.Computer.FileSystem.WriteAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1388">The following table lists examples of tasks involving the `My.Computer.FileSystem.WriteAllText` method.</span></span>  
  
|<span data-ttu-id="fab50-1389">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1389">To</span></span>|<span data-ttu-id="fab50-1390">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1390">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1391">テキストのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fab50-1391">Write text to a file</span></span>|[<span data-ttu-id="fab50-1392">方法: Visual Basic 内のファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-1392">How to: Write Text to Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md)|  
|<span data-ttu-id="fab50-1393">ファイルへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="fab50-1393">Append text to a file</span></span>|[<span data-ttu-id="fab50-1394">方法: Visual Basic でテキストファイルに追加する</span><span class="sxs-lookup"><span data-stu-id="fab50-1394">How to: Append to Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1395">この例では、`"This is new text to be added."` 行をファイル `Test.txt`に書き込み、ファイル内の既存のテキストを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fab50-1395">This example writes the line `"This is new text to be added."` to the file `Test.txt`, overwriting any existing text in the file.</span></span>  
  
 [!code-vb[VbRefFile#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#21)]  
  
 <span data-ttu-id="fab50-1396">この例では、`Documents and Settings` フォルダー内のファイルの名前を `FileList.txt`に書き込み、それぞれの間にキャリッジリターンを挿入して読みやすくします。</span><span class="sxs-lookup"><span data-stu-id="fab50-1396">This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.</span></span>  
  
 [!code-vb[VbRefFile#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1397">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1397">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1398"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1398"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1399">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1399">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1400">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1400">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1401">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1401">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1402">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1402">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fab50-1403">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1403">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1404">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1404">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1405">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1405">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1406"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1406">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="Overload:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText" />
      </Docs>
    </Member>
    <Member MemberName="WriteAllText">
      <MemberSignature Language="C#" Value="public static void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteAllText(string file, string text, bool append, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteAllText(System::String ^ file, System::String ^ text, bool append, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member WriteAllText : string * string * bool * System.Text.Encoding -&gt; unit" Usage="Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText (file, text, append, encoding)" />
      <MemberSignature Language="ILAsm" Value=".method public static void WriteAllText(string file, string text, bool append, class System.Text.Encoding encoding) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="append" Type="System.Boolean" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="fab50-1407">書き込み先のファイル。</span><span class="sxs-lookup"><span data-stu-id="fab50-1407">File to be written to.</span></span></param>
        <param name="text"><span data-ttu-id="fab50-1408">ファイルに書き込まれるテキスト。</span><span class="sxs-lookup"><span data-stu-id="fab50-1408">Text to be written to file.</span></span></param>
        <param name="append"><span data-ttu-id="fab50-1409">ファイルの内容を追記する場合は <see langword="True" />。ファイルの内容を上書きする場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="fab50-1409"><see langword="True" /> to append to the contents of the file; <see langword="False" /> to overwrite the contents of the file.</span></span></param>
        <param name="encoding"><span data-ttu-id="fab50-1410">ファイルへの書き込み時に使用するエンコーディングを指定します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1410">What encoding to use when writing to file.</span></span></param>
        <summary><span data-ttu-id="fab50-1411">ファイルにテキストを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1411">Writes text to a file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fab50-1412">指定したファイルが存在しない場合は、作成されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1412">If the specified file does not exist, it is created.</span></span>  
  
 <span data-ttu-id="fab50-1413">指定したエンコーディングがファイルの既存のエンコーディングと一致しない場合、指定されたコードは無視されます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1413">If the specified encoding does not match the existing encoding of the file, the specified coding is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fab50-1414">`WriteAllText` メソッドは、ファイルを開き、書き込んでから閉じます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1414">The `WriteAllText` method opens a file, writes to it, and then closes it.</span></span> <span data-ttu-id="fab50-1415">`WriteAllText` メソッドを使用するコードは、<xref:System.IO.StreamWriter> オブジェクトを使用するコードよりも簡単です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1415">Code that uses the `WriteAllText` method is simpler than code that uses a <xref:System.IO.StreamWriter> object.</span></span> <span data-ttu-id="fab50-1416">ただし、ループを使用してファイルに文字列を追加する場合は、ファイルを1回だけ開いて閉じる必要があるため、<xref:System.IO.StreamWriter> オブジェクトを使用するとパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1416">However, if you are adding strings to a file by using a loop, a <xref:System.IO.StreamWriter> object can provide better performance because you only have to open and close the file one time.</span></span> <span data-ttu-id="fab50-1417">詳細については、<xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="fab50-1417">For more information, see the <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A> method.</span></span>  
  
 <span data-ttu-id="fab50-1418">次の表に、`My.Computer.FileSystem.WriteAllText` メソッドに関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1418">The following table lists examples of tasks involving the `My.Computer.FileSystem.WriteAllText` method.</span></span>  
  
|<span data-ttu-id="fab50-1419">目的</span><span class="sxs-lookup"><span data-stu-id="fab50-1419">To</span></span>|<span data-ttu-id="fab50-1420">参照トピック</span><span class="sxs-lookup"><span data-stu-id="fab50-1420">See</span></span>|  
|-|-|  
|<span data-ttu-id="fab50-1421">テキストのファイルへの書き込み</span><span class="sxs-lookup"><span data-stu-id="fab50-1421">Write text to a file</span></span>|[<span data-ttu-id="fab50-1422">方法: Visual Basic 内のファイルにテキストを書き込む</span><span class="sxs-lookup"><span data-stu-id="fab50-1422">How to: Write Text to Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-write-text-to-files.md)|  
|<span data-ttu-id="fab50-1423">ファイルへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="fab50-1423">Append text to a file</span></span>|[<span data-ttu-id="fab50-1424">方法: Visual Basic でテキストファイルに追加する</span><span class="sxs-lookup"><span data-stu-id="fab50-1424">How to: Append to Text Files in Visual Basic</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-append-to-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="fab50-1425">この例では、`"This is new text to be added."` 行をファイル `Test.txt`に書き込み、ファイル内の既存のテキストを上書きします。</span><span class="sxs-lookup"><span data-stu-id="fab50-1425">This example writes the line `"This is new text to be added."` to the file `Test.txt`, overwriting any existing text in the file.</span></span>  
  
 [!code-vb[VbRefFile#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#21)]  
  
 <span data-ttu-id="fab50-1426">この例では、`Documents and Settings` フォルダー内のファイルの名前を `FileList.txt`に書き込み、それぞれの間にキャリッジリターンを挿入して読みやすくします。</span><span class="sxs-lookup"><span data-stu-id="fab50-1426">This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.</span></span>  
  
 [!code-vb[VbRefFile#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRefFile/VB/Class1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fab50-1427">パスが無効です。原因として、パスが長さが 0 の文字列であるか、パスに空白しか含まれていないか、パスに無効な文字が含まれているか、パスがデバイス パスである (\\\\.\\ で始まっている) か、またはパスがスラッシュで終わっていることが考えられます。</span><span class="sxs-lookup"><span data-stu-id="fab50-1427">The path is not valid for one of the following reasons: it is a zero-length string; it contains only white space; it contains invalid characters; or it is a device path (starts with \\\\.\\); it ends with a trailing slash.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fab50-1428"><paramref name="file" /> は <see langword="Nothing" /> です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1428"><paramref name="file" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="fab50-1429">ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1429">The file does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="fab50-1430">他のプロセスがファイルを使用しているか、I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="fab50-1430">The file is in use by another process, or an I/O error occurs.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="fab50-1431">パスがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="fab50-1431">The path exceeds the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fab50-1432">パス内のファイル名またはディレクトリ名にコロン (:) が含まれているか、形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="fab50-1432">A file or directory name in the path contains a colon (:) or is in an invalid format.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="fab50-1433">文字列をバッファーに書き込むための十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1433">There is not enough memory to write the string to buffer.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fab50-1434">ユーザーがパスを参照するのに必要なアクセス許可を保持していません。</span><span class="sxs-lookup"><span data-stu-id="fab50-1434">The user lacks necessary permissions to view the path.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="fab50-1435">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="fab50-1435">Controls the ability to access files and folders.</span></span> <span data-ttu-id="fab50-1436"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="fab50-1436">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
  </Members>
</Type>
