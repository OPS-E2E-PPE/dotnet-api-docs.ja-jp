<Type Name="NativeLibrary" FullName="System.Runtime.InteropServices.NativeLibrary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ceecf3add0ebb91f02a5fa6068b037080281b87" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78815878" /></Metadata><TypeSignature Language="C#" Value="public static class NativeLibrary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NativeLibrary extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.NativeLibrary" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeLibrary" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeLibrary abstract sealed" />
  <TypeSignature Language="F#" Value="type NativeLibrary = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bb819-101">ネイティブ ライブラリを管理するための API を提供します。</span><span class="sxs-lookup"><span data-stu-id="bb819-101">Provides APIs for managing native libraries.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public static void Free (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Free(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Free(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Free (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Free(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member Free : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.NativeLibrary.Free handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="bb819-102">解放されるネイティブ ライブラリ OS ハンドル。</span><span class="sxs-lookup"><span data-stu-id="bb819-102">The native library OS handle to be freed.</span></span></param>
        <summary><span data-ttu-id="bb819-103">指定した OS ハンドルで読み込まれたライブラリを解放します。または、入力ハンドルが <see cref="F:System.IntPtr.Zero" /> の場合は何も操作を行いません。</span><span class="sxs-lookup"><span data-stu-id="bb819-103">Frees a loaded library with the specified OS handle, or takes no action if the input handle is <see cref="F:System.IntPtr.Zero" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExport">
      <MemberSignature Language="C#" Value="public static IntPtr GetExport (IntPtr handle, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExport(native int handle, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.GetExport(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExport (handle As IntPtr, name As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExport(IntPtr handle, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetExport : nativeint * string -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.GetExport (handle, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="bb819-104">ネイティブ ライブラリ OS ハンドル。</span><span class="sxs-lookup"><span data-stu-id="bb819-104">The native library OS handle.</span></span></param>
        <param name="name"><span data-ttu-id="bb819-105">エクスポートされたシンボルの名前。</span><span class="sxs-lookup"><span data-stu-id="bb819-105">The name of the exported symbol.</span></span></param>
        <summary><span data-ttu-id="bb819-106">エクスポートされたシンボルのアドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="bb819-106">Gets the address of an exported symbol.</span></span></summary>
        <returns><span data-ttu-id="bb819-107">シンボルのアドレス。</span><span class="sxs-lookup"><span data-stu-id="bb819-107">The address of the symbol.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="bb819-108">これは OS 呼び出しを中心とした単純なラッパーであり、名前の変形は実行されません。</span><span class="sxs-lookup"><span data-stu-id="bb819-108">This is a simple wrapper around OS calls and does not perform any name mangling.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb819-109"><paramref name="handle" /> または <paramref name="name" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bb819-109"><paramref name="handle" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.EntryPointNotFoundException"><span data-ttu-id="bb819-110">シンボルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="bb819-110">The symbol is not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static IntPtr Load (string libraryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Load(string libraryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (libraryPath As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Load(System::String ^ libraryPath);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.Load libraryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="libraryPath"><span data-ttu-id="bb819-111">読み込まれるネイティブ ライブラリの名前。</span><span class="sxs-lookup"><span data-stu-id="bb819-111">The name of the native library to be loaded.</span></span></param>
        <summary><span data-ttu-id="bb819-112">OS ローダーをラップし、既定のフラグを使用するネイティブ ライブラリを読み込むための単純な API を提供します。</span><span class="sxs-lookup"><span data-stu-id="bb819-112">Provides a simple API for loading a native library that wraps the OS loader and uses default flags.</span></span></summary>
        <returns><span data-ttu-id="bb819-113">読み込まれたネイティブ ライブラリの OS ハンドル。</span><span class="sxs-lookup"><span data-stu-id="bb819-113">The OS handle for the loaded native library.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb819-114"><paramref name="libraryPath" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bb819-114"><paramref name="libraryPath" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.DllNotFoundException"><span data-ttu-id="bb819-115">ライブラリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="bb819-115">The library can't be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="bb819-116">ライブラリが無効です。</span><span class="sxs-lookup"><span data-stu-id="bb819-116">The library is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static IntPtr Load (string libraryName, System.Reflection.Assembly assembly, System.Runtime.InteropServices.DllImportSearchPath? searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Load(string libraryName, class System.Reflection.Assembly assembly, valuetype System.Nullable`1&lt;valuetype System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.Load(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (libraryName As String, assembly As Assembly, searchPath As Nullable(Of DllImportSearchPath)) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Load(System::String ^ libraryName, System::Reflection::Assembly ^ assembly, Nullable&lt;System::Runtime::InteropServices::DllImportSearchPath&gt; searchPath);" />
      <MemberSignature Language="F#" Value="static member Load : string * System.Reflection.Assembly * Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; -&gt; nativeint" Usage="System.Runtime.InteropServices.NativeLibrary.Load (libraryName, assembly, searchPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="searchPath" Type="System.Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt;" />
      </Parameters>
      <Docs>
        <param name="libraryName"><span data-ttu-id="bb819-117">読み込まれるネイティブ ライブラリの名前。</span><span class="sxs-lookup"><span data-stu-id="bb819-117">The name of the native library to be loaded.</span></span></param>
        <param name="assembly"><span data-ttu-id="bb819-118">ネイティブ ライブラリを読み込むアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="bb819-118">The assembly loading the native library.</span></span></param>
        <param name="searchPath"><span data-ttu-id="bb819-119">検索パス。</span><span class="sxs-lookup"><span data-stu-id="bb819-119">The search path.</span></span></param>
        <summary><span data-ttu-id="bb819-120">ネイティブ ライブラリを読み込むための高度な API を提供します。</span><span class="sxs-lookup"><span data-stu-id="bb819-120">Provides a high-level API for loading a native library.</span></span></summary>
        <returns><span data-ttu-id="bb819-121">読み込まれたライブラリの OS ハンドル。</span><span class="sxs-lookup"><span data-stu-id="bb819-121">The OS handle for the loaded library.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="bb819-122">ライブラリ名が指定されている場合、このメソッドは、呼び出し元アセンブリのランタイム構成、入力パラメーター、および属性に基づいて特定のパスを検索します。</span><span class="sxs-lookup"><span data-stu-id="bb819-122">Given a library name, this method searches specific paths based on the  runtime configuration, input parameters, and attributes of the calling assembly.</span></span> <span data-ttu-id="bb819-123">`searchPath` パラメーターが null 以外の場合は、この列挙体のフラグが使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb819-123">If the `searchPath` parameter is non-null, the flags in this enumeration are used.</span></span> <span data-ttu-id="bb819-124">それ以外の場合は、呼び出し元アセンブリの <xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute> によって指定されたフラグ (存在する場合) が使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb819-124">Otherwise, the flags specified by the <xref:System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute> on the calling assembly, if any are present, are used.</span></span> <span data-ttu-id="bb819-125">このメソッドは、ネイティブライブラリの解決のために次のマネージコールバックを呼び出しません。</span><span class="sxs-lookup"><span data-stu-id="bb819-125">This method does not invoke the following managed callbacks for native library resolution:</span></span> 

- <span data-ttu-id="bb819-126">アセンブリごとに登録されたコールバック。</span><span class="sxs-lookup"><span data-stu-id="bb819-126">The per-assembly registered callback.</span></span>
- <span data-ttu-id="bb819-127"><xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A?displayProperty=nameWithType> メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb819-127">The <xref:System.Runtime.Loader.AssemblyLoadContext.LoadUnmanagedDll%2A?displayProperty=nameWithType> method.</span></span>
- <span data-ttu-id="bb819-128"><xref:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll?displayProperty=nameWithType> イベントです。</span><span class="sxs-lookup"><span data-stu-id="bb819-128">The <xref:System.Runtime.Loader.AssemblyLoadContext.ResolvingUnmanagedDll?displayProperty=nameWithType> event.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb819-129"><paramref name="libraryName" /> または <paramref name="assembly" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bb819-129"><paramref name="libraryName" /> or <paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb819-130"><paramref name="assembly" /> が <see langword="RuntimeAssembly" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="bb819-130"><paramref name="assembly" /> is not a <see langword="RuntimeAssembly" />.</span></span></exception>
        <exception cref="T:System.DllNotFoundException"><span data-ttu-id="bb819-131">ライブラリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="bb819-131">The library can't be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="bb819-132">ライブラリが無効です。</span><span class="sxs-lookup"><span data-stu-id="bb819-132">The library is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetDllImportResolver">
      <MemberSignature Language="C#" Value="public static void SetDllImportResolver (System.Reflection.Assembly assembly, System.Runtime.InteropServices.DllImportResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDllImportResolver(class System.Reflection.Assembly assembly, class System.Runtime.InteropServices.DllImportResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver(System.Reflection.Assembly,System.Runtime.InteropServices.DllImportResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetDllImportResolver (assembly As Assembly, resolver As DllImportResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDllImportResolver(System::Reflection::Assembly ^ assembly, System::Runtime::InteropServices::DllImportResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="static member SetDllImportResolver : System.Reflection.Assembly * System.Runtime.InteropServices.DllImportResolver -&gt; unit" Usage="System.Runtime.InteropServices.NativeLibrary.SetDllImportResolver (assembly, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resolver" Type="System.Runtime.InteropServices.DllImportResolver" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="bb819-133">リゾルバーが登録されるアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="bb819-133">The assembly for which the resolver is registered.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb819-134">登録するリゾルバー コールバック。</span><span class="sxs-lookup"><span data-stu-id="bb819-134">The resolver callback to register.</span></span></param>
        <summary><span data-ttu-id="bb819-135">アセンブリからのネイティブ ライブラリのインポートを解決するためのコールバックを設定します。</span><span class="sxs-lookup"><span data-stu-id="bb819-135">Sets a callback for resolving native library imports from an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="bb819-136">このアセンブリによって開始されたネイティブライブラリの読み込みを解決するための最初の試行は、このアセンブリごとの競合回避モジュールです。</span><span class="sxs-lookup"><span data-stu-id="bb819-136">This per-assembly resolver is the first attempt to resolve native library loads initiated by this assembly.</span></span> 

<span data-ttu-id="bb819-137">アセンブリごとに登録できるリゾルバーは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="bb819-137">Only one resolver can be registered per assembly.</span></span> <span data-ttu-id="bb819-138">2つ目のリゾルバーを登録しようとすると、<xref:System.InvalidOperationException>で失敗します。</span><span class="sxs-lookup"><span data-stu-id="bb819-138">Trying to register a second resolver fails with an <xref:System.InvalidOperationException>.</span></span>

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb819-139"><paramref name="assembly" /> または paramref name="resolver" /&gt; は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bb819-139"><paramref name="assembly" /> or paramref name="resolver" /&gt; is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb819-140">リゾルバーはこのアセンブリに既に設定されています。</span><span class="sxs-lookup"><span data-stu-id="bb819-140">A resolver is already set for this assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetExport">
      <MemberSignature Language="C#" Value="public static bool TryGetExport (IntPtr handle, string name, out IntPtr address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetExport(native int handle, string name, [out] native int&amp; address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryGetExport(System.IntPtr,System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetExport (handle As IntPtr, name As String, ByRef address As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetExport(IntPtr handle, System::String ^ name, [Runtime::InteropServices::Out] IntPtr % address);" />
      <MemberSignature Language="F#" Value="static member TryGetExport : nativeint * string * nativeint -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryGetExport (handle, name, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="address" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="bb819-141">ネイティブ ライブラリ OS ハンドル。</span><span class="sxs-lookup"><span data-stu-id="bb819-141">The native library OS handle.</span></span></param>
        <param name="name"><span data-ttu-id="bb819-142">エクスポートされたシンボルの名前。</span><span class="sxs-lookup"><span data-stu-id="bb819-142">The name of the exported symbol.</span></span></param>
        <param name="address"><span data-ttu-id="bb819-143">メソッドが戻ると、シンボルのアドレスが含まれます (ある場合)。</span><span class="sxs-lookup"><span data-stu-id="bb819-143">When the method returns, contains the symbol address, if it exists.</span></span></param>
        <summary><span data-ttu-id="bb819-144">エクスポートされたシンボルのアドレスを取得し、メソッドの呼び出しが成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="bb819-144">Gets the address of an exported symbol and returns a value that indicates whether the method call succeeded.</span></span></summary>
        <returns><span data-ttu-id="bb819-145">メソッドが正常に戻った場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb819-145"><see langword="true" /> if the method returned successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb819-146"><paramref name="handle" /> または <paramref name="name" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bb819-146"><paramref name="handle" /> or <paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryLoad">
      <MemberSignature Language="C#" Value="public static bool TryLoad (string libraryPath, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoad(string libraryPath, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryLoad (libraryPath As String, ByRef handle As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryLoad(System::String ^ libraryPath, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="static member TryLoad : string * nativeint -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryLoad (libraryPath, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryPath" Type="System.String" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="libraryPath"><span data-ttu-id="bb819-147">読み込まれるネイティブ ライブラリの名前。</span><span class="sxs-lookup"><span data-stu-id="bb819-147">The name of the native library to be loaded.</span></span></param>
        <param name="handle"><span data-ttu-id="bb819-148">メソッドが戻るときの、読み込まれたネイティブ ライブラリの OS ハンドル。</span><span class="sxs-lookup"><span data-stu-id="bb819-148">When the method returns, the OS handle of the loaded native library.</span></span></param>
        <summary><span data-ttu-id="bb819-149">ネイティブ ライブラリを読み込むための単純な API を提供し、操作が成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="bb819-149">Provides a simple API for loading a native library and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="bb819-150">ネイティブ ライブラリが正常に読み込まれた場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb819-150"><see langword="true" /> if the native library was loaded successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb819-151"><paramref name="libraryPath" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bb819-151"><paramref name="libraryPath" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryLoad">
      <MemberSignature Language="C#" Value="public static bool TryLoad (string libraryName, System.Reflection.Assembly assembly, System.Runtime.InteropServices.DllImportSearchPath? searchPath, out IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryLoad(string libraryName, class System.Reflection.Assembly assembly, valuetype System.Nullable`1&lt;valuetype System.Runtime.InteropServices.DllImportSearchPath&gt; searchPath, [out] native int&amp; handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.NativeLibrary.TryLoad(System.String,System.Reflection.Assembly,System.Nullable{System.Runtime.InteropServices.DllImportSearchPath},System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryLoad (libraryName As String, assembly As Assembly, searchPath As Nullable(Of DllImportSearchPath), ByRef handle As IntPtr) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryLoad(System::String ^ libraryName, System::Reflection::Assembly ^ assembly, Nullable&lt;System::Runtime::InteropServices::DllImportSearchPath&gt; searchPath, [Runtime::InteropServices::Out] IntPtr % handle);" />
      <MemberSignature Language="F#" Value="static member TryLoad : string * System.Reflection.Assembly * Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt; * nativeint -&gt; bool" Usage="System.Runtime.InteropServices.NativeLibrary.TryLoad (libraryName, assembly, searchPath, handle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libraryName" Type="System.String" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="searchPath" Type="System.Nullable&lt;System.Runtime.InteropServices.DllImportSearchPath&gt;" />
        <Parameter Name="handle" Type="System.IntPtr" RefType="out" />
      </Parameters>
      <Docs>
        <param name="libraryName"><span data-ttu-id="bb819-152">読み込まれるネイティブ ライブラリの名前。</span><span class="sxs-lookup"><span data-stu-id="bb819-152">The name of the native library to be loaded.</span></span></param>
        <param name="assembly"><span data-ttu-id="bb819-153">ネイティブ ライブラリを読み込むアセンブリ。</span><span class="sxs-lookup"><span data-stu-id="bb819-153">The assembly loading the native library.</span></span></param>
        <param name="searchPath"><span data-ttu-id="bb819-154">検索パス。</span><span class="sxs-lookup"><span data-stu-id="bb819-154">The search path.</span></span></param>
        <param name="handle"><span data-ttu-id="bb819-155">メソッドが戻るときの、読み込まれたネイティブ ライブラリの OS ハンドル。</span><span class="sxs-lookup"><span data-stu-id="bb819-155">When the method returns, the OS handle of the loaded native library.</span></span></param>
        <summary><span data-ttu-id="bb819-156">ネイティブ ライブラリを読み込む高度な API を提供し、操作が成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="bb819-156">Provides a high-level API that loads a native library and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="bb819-157">読み込み操作が成功した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="bb819-157"><see langword="true" /> if the load operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="bb819-158"><paramref name="libraryPath" /> または <paramref name="assembly" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="bb819-158"><paramref name="libraryPath" /> or <paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bb819-159"><paramref name="assembly" /> が <see langword="RuntimeAssembly" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="bb819-159"><paramref name="assembly" /> is not a <see langword="RuntimeAssembly" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
