<Type Name="UCOMIStream" FullName="System.Runtime.InteropServices.UCOMIStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="896ea5c45a49be9e6a4a99f5b878e5e1034074b2" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73389827" /></Metadata><TypeSignature Language="C#" Value="public interface UCOMIStream" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIStream" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIStream" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIStream" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIStream" />
  <TypeSignature Language="F#" Value="type UCOMIStream = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("0000000c-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("0000000c-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IStream instead. https://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9c2b5-101">代わりに、<see cref="T:System.Runtime.InteropServices.ComTypes.IStream" /> を使用してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IStream" /> instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-102">詳細については、MSDN ライブラリの com サブフォルダーの `IStream` と `ISequentialStream` に関する既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-102">For more information, please see the existing documentation for `IStream` and `ISequentialStream` in the com subfolder of the MSDN library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out System.Runtime.InteropServices.UCOMIStream ppstm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clone([out] class System.Runtime.InteropServices.UCOMIStream&amp; ppstm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Clone(System.Runtime.InteropServices.UCOMIStream@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ppstm As UCOMIStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIStream ^ % ppstm);" />
      <MemberSignature Language="F#" Value="abstract member Clone : UCOMIStream -&gt; unit" Usage="uCOMIStream.Clone ppstm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppstm" Type="System.Runtime.InteropServices.UCOMIStream" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppstm"><span data-ttu-id="9c2b5-103">正常に返された場合は、新しいストリーム オブジェクトを格納します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-103">On successful return, contains the new stream object.</span></span></param>
        <summary><span data-ttu-id="9c2b5-104">元のストリームと同じバイトを参照する独自のシーク ポインターで、新しいストリーム オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-104">Creates a new stream object with its own seek pointer that references the same bytes as the original stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-105">詳細については、MSDN ライブラリの `IStream::Clone` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-105">For more information, please see the existing documentation for `IStream::Clone` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (int grfCommitFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(int32 grfCommitFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Commit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit (grfCommitFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(int grfCommitFlags);" />
      <MemberSignature Language="F#" Value="abstract member Commit : int -&gt; unit" Usage="uCOMIStream.Commit grfCommitFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfCommitFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="grfCommitFlags"><span data-ttu-id="9c2b5-106">ストリーム オブジェクトへの変更をコミットする方法を制御します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-106">Controls how the changes for the stream object are committed.</span></span></param>
        <summary><span data-ttu-id="9c2b5-107">トランザクション モードで開かれたストリーム オブジェクトに加えた変更が、親ストレージに反映されるようにします。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-107">Ensures that any changes made to a stream object open in transacted mode are reflected in the parent storage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-108">詳細については、MSDN ライブラリの `IStream::Commit` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-108">For more information, please see the existing documentation for `IStream::Commit` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Runtime.InteropServices.UCOMIStream pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Runtime.InteropServices.UCOMIStream pstm, int64 cb, native int pcbRead, native int pcbWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.CopyTo(System.Runtime.InteropServices.UCOMIStream,System.Int64,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (pstm As UCOMIStream, cb As Long, pcbRead As IntPtr, pcbWritten As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(System::Runtime::InteropServices::UCOMIStream ^ pstm, long cb, IntPtr pcbRead, IntPtr pcbWritten);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Runtime.InteropServices.UCOMIStream * int64 * nativeint * nativeint -&gt; unit" Usage="uCOMIStream.CopyTo (pstm, cb, pcbRead, pcbWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstm" Type="System.Runtime.InteropServices.UCOMIStream" />
        <Parameter Name="cb" Type="System.Int64" />
        <Parameter Name="pcbRead" Type="System.IntPtr" />
        <Parameter Name="pcbWritten" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pstm"><span data-ttu-id="9c2b5-109">コピー先ストリームへの参照。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-109">Reference to the destination stream.</span></span></param>
        <param name="cb"><span data-ttu-id="9c2b5-110">コピー元ストリームからコピーするバイト数。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-110">The number of bytes to copy from the source stream.</span></span></param>
        <param name="pcbRead"><span data-ttu-id="9c2b5-111">正常に返された場合は、コピー元から読み取られた実際のバイト数を格納します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-111">On successful return, contains the actual number of bytes read from the source.</span></span></param>
        <param name="pcbWritten"><span data-ttu-id="9c2b5-112">正常に返された場合は、コピー先に書き込まれた実際のバイト数を格納します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-112">On successful return, contains the actual number of bytes written to the destination.</span></span></param>
        <summary><span data-ttu-id="9c2b5-113">ストリームの現在のシーク ポインターから別のストリームの現在のシーク ポインターに指定したバイト数をコピーします。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-113">Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-114">詳細については、MSDN ライブラリの `IStream::CopyTo` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-114">For more information, please see the existing documentation for `IStream::CopyTo` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockRegion">
      <MemberSignature Language="C#" Value="public void LockRegion (long libOffset, long cb, int dwLockType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockRegion(int64 libOffset, int64 cb, int32 dwLockType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.LockRegion(System.Int64,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockRegion (libOffset As Long, cb As Long, dwLockType As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockRegion(long libOffset, long cb, int dwLockType);" />
      <MemberSignature Language="F#" Value="abstract member LockRegion : int64 * int64 * int -&gt; unit" Usage="uCOMIStream.LockRegion (libOffset, cb, dwLockType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libOffset" Type="System.Int64" />
        <Parameter Name="cb" Type="System.Int64" />
        <Parameter Name="dwLockType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="libOffset"><span data-ttu-id="9c2b5-115">範囲の先頭のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-115">The byte offset for the beginning of the range.</span></span></param>
        <param name="cb"><span data-ttu-id="9c2b5-116">制限する範囲のバイト単位の長さ。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-116">The length of the range, in bytes, to restrict.</span></span></param>
        <param name="dwLockType"><span data-ttu-id="9c2b5-117">範囲へのアクセスに対して要求する制限。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-117">The requested restrictions on accessing the range.</span></span></param>
        <summary><span data-ttu-id="9c2b5-118">ストリームの指定したバイト範囲へのアクセスを制限します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-118">Restricts access to a specified range of bytes in the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-119">詳細については、MSDN ライブラリの `IStream::LockRegion` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-119">For more information, please see the existing documentation for `IStream::LockRegion` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public void Read (byte[] pv, int cb, IntPtr pcbRead);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read([out] unsigned int8[] pv, int32 cb, native int pcbRead) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Read(System.Byte[],System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Read (pv As Byte(), cb As Integer, pcbRead As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Read(cli::array &lt;System::Byte&gt; ^ pv, int cb, IntPtr pcbRead);" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * nativeint -&gt; unit" Usage="uCOMIStream.Read (pv, cb, pcbRead)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.Byte[]" />
        <Parameter Name="cb" Type="System.Int32" />
        <Parameter Name="pcbRead" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv"><span data-ttu-id="9c2b5-120">正常に返された場合は、ストリームから読み取られたデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-120">On successful return, contains the data read frtom the stream.</span></span></param>
        <param name="cb"><span data-ttu-id="9c2b5-121">ストリーム オブジェクトから読み取るバイト数。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-121">The number of bytes to read from the stream object.</span></span></param>
        <param name="pcbRead"><span data-ttu-id="9c2b5-122">ストリーム オブジェクトから読み取られた実際のバイト数を受け取る <see langword="ULONG" /> 変数へのポインター。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-122">Pointer to a <see langword="ULONG" /> variable that receives the actual number of bytes read from the stream object.</span></span></param>
        <summary><span data-ttu-id="9c2b5-123">現在のシーク ポインターを開始点として、ストリーム オブジェクトからメモリに指定したバイト数を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-123">Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-124">詳細については、MSDN ライブラリの `ISequentialStream::Read` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-124">For more information, please see the existing documentation for `ISequentialStream::Read` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public void Revert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Revert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revert();" />
      <MemberSignature Language="F#" Value="abstract member Revert : unit -&gt; unit" Usage="uCOMIStream.Revert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9c2b5-125">最後の <see cref="M:System.Runtime.InteropServices.UCOMIStream.Commit(System.Int32)" /> 呼び出し以降に処理されたストリームに加えられたすべての変更を破棄します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-125">Discards all changes that have been made to a transacted stream since the last <see cref="M:System.Runtime.InteropServices.UCOMIStream.Commit(System.Int32)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-126">詳細については、MSDN ライブラリの `IStream::Revert` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-126">For more information, please see the existing documentation for `IStream::Revert` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (long dlibMove, int dwOrigin, IntPtr plibNewPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Seek(int64 dlibMove, int32 dwOrigin, native int plibNewPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Seek(System.Int64,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (dlibMove As Long, dwOrigin As Integer, plibNewPosition As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(long dlibMove, int dwOrigin, IntPtr plibNewPosition);" />
      <MemberSignature Language="F#" Value="abstract member Seek : int64 * int * nativeint -&gt; unit" Usage="uCOMIStream.Seek (dlibMove, dwOrigin, plibNewPosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dlibMove" Type="System.Int64" />
        <Parameter Name="dwOrigin" Type="System.Int32" />
        <Parameter Name="plibNewPosition" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dlibMove"><span data-ttu-id="9c2b5-127"><paramref name="dwOrigin" /> に追加する変位。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-127">Displacement to add to <paramref name="dwOrigin" />.</span></span></param>
        <param name="dwOrigin"><span data-ttu-id="9c2b5-128">シークの開始点を指定します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-128">Specifies the origin of the seek.</span></span> <span data-ttu-id="9c2b5-129">開始点は、ファイルの先頭、現在のシーク ポインター、またはファイルの末尾にできます。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-129">The origin can be the beginning of the file, the current seek pointer, or the end of the file.</span></span></param>
        <param name="plibNewPosition"><span data-ttu-id="9c2b5-130">正常に返された場合は、ストリームの先頭からのシーク ポインターのオフセットを格納します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-130">On successful return, contains the offset of the seek pointer from the beginning of the stream.</span></span></param>
        <summary><span data-ttu-id="9c2b5-131">ストリームの先頭、ストリームの末尾、または現在のシーク ポインターに対して相対的な新しい場所にシーク ポインターを移動します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-131">Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-132">詳細については、MSDN ライブラリの `IStream::Seek` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-132">For more information, please see the existing documentation for `IStream::Seek` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public void SetSize (long libNewSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSize(int64 libNewSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.SetSize(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSize (libNewSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSize(long libNewSize);" />
      <MemberSignature Language="F#" Value="abstract member SetSize : int64 -&gt; unit" Usage="uCOMIStream.SetSize libNewSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libNewSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="libNewSize"><span data-ttu-id="9c2b5-133">ストリームの新しいサイズをバイト数で指定します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-133">Specifies the new size of the stream as a number of bytes.</span></span></param>
        <summary><span data-ttu-id="9c2b5-134">ストリーム オブジェクトのサイズを変更します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-134">Changes the size of the stream object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-135">詳細については、MSDN ライブラリの `IStream::SetSize` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-135">For more information, please see the existing documentation for `IStream::SetSize` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stat">
      <MemberSignature Language="C#" Value="public void Stat (out System.Runtime.InteropServices.STATSTG pstatstg, int grfStatFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stat([out] valuetype System.Runtime.InteropServices.STATSTG&amp; pstatstg, int32 grfStatFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Stat(System.Runtime.InteropServices.STATSTG@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stat (ByRef pstatstg As STATSTG, grfStatFlag As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stat([Runtime::InteropServices::Out] System::Runtime::InteropServices::STATSTG % pstatstg, int grfStatFlag);" />
      <MemberSignature Language="F#" Value="abstract member Stat : STATSTG * int -&gt; unit" Usage="uCOMIStream.Stat (pstatstg, grfStatFlag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pstatstg" Type="System.Runtime.InteropServices.STATSTG" RefType="out" />
        <Parameter Name="grfStatFlag" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pstatstg"><span data-ttu-id="9c2b5-136">正常に返された場合は、ストリーム オブジェクトを記述している <see langword="STATSTG" /> 構造体を格納します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-136">On successful return, contains a <see langword="STATSTG" /> structure which describes this stream object.</span></span></param>
        <param name="grfStatFlag"><span data-ttu-id="9c2b5-137"><see langword="STATSTG" /> 構造体のメンバーのうち、このメソッドが返さないメンバーを指定することで、不要なメモリ割り当てが行われないようにします。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-137">Specifies some of the members in the <see langword="STATSTG" /> structure that this method does not return, thus saving some memory allocation operations.</span></span></param>
        <summary><span data-ttu-id="9c2b5-138">ストリームの <see cref="T:System.Runtime.InteropServices.STATSTG" /> 構造体を取得します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-138">Retrieves the <see cref="T:System.Runtime.InteropServices.STATSTG" /> structure for this stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-139">詳細については、MSDN ライブラリの `IStream::Stat` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-139">For more information, please see the existing documentation for `IStream::Stat` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockRegion">
      <MemberSignature Language="C#" Value="public void UnlockRegion (long libOffset, long cb, int dwLockType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockRegion(int64 libOffset, int64 cb, int32 dwLockType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.UnlockRegion(System.Int64,System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnlockRegion (libOffset As Long, cb As Long, dwLockType As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockRegion(long libOffset, long cb, int dwLockType);" />
      <MemberSignature Language="F#" Value="abstract member UnlockRegion : int64 * int64 * int -&gt; unit" Usage="uCOMIStream.UnlockRegion (libOffset, cb, dwLockType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="libOffset" Type="System.Int64" />
        <Parameter Name="cb" Type="System.Int64" />
        <Parameter Name="dwLockType" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="libOffset"><span data-ttu-id="9c2b5-140">範囲の先頭のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-140">The byte offset for the beginning of the range.</span></span></param>
        <param name="cb"><span data-ttu-id="9c2b5-141">制限する範囲のバイト単位の長さ。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-141">The length, in bytes, of the range to restrict.</span></span></param>
        <param name="dwLockType"><span data-ttu-id="9c2b5-142">以前にその範囲に与えたアクセス制限。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-142">The access restrictions previously placed on the range.</span></span></param>
        <summary><span data-ttu-id="9c2b5-143">以前に <see cref="M:System.Runtime.InteropServices.UCOMIStream.LockRegion(System.Int64,System.Int64,System.Int32)" /> で制限したバイト範囲へのアクセス制限を解除します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-143">Removes the access restriction on a range of bytes previously restricted with <see cref="M:System.Runtime.InteropServices.UCOMIStream.LockRegion(System.Int64,System.Int64,System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-144">詳細については、MSDN ライブラリの `IStream::UnlockRegion` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-144">For more information, please see the existing documentation for `IStream::UnlockRegion` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] pv, int cb, IntPtr pcbWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] pv, int32 cb, native int pcbWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIStream.Write(System.Byte[],System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (pv As Byte(), cb As Integer, pcbWritten As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ pv, int cb, IntPtr pcbWritten);" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * nativeint -&gt; unit" Usage="uCOMIStream.Write (pv, cb, pcbWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.Byte[]" />
        <Parameter Name="cb" Type="System.Int32" />
        <Parameter Name="pcbWritten" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv"><span data-ttu-id="9c2b5-145">ストリームを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-145">Buffer to write this stream to.</span></span></param>
        <param name="cb"><span data-ttu-id="9c2b5-146">ストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-146">The number of bytes to write into the stream.</span></span></param>
        <param name="pcbWritten"><span data-ttu-id="9c2b5-147">正常に返された場合は、ストリーム オブジェクトに書き込まれた実際のバイト数を格納します。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-147">On successful return, contains the actual number of bytes written to the stream object.</span></span> <span data-ttu-id="9c2b5-148">呼び出し元は、このポインターを <see langword="null" /> に設定できます。この場合、このメソッドは書き込まれた実際のバイト数を示しません。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-148">The caller can set this pointer to <see langword="null" />, in which case this method does not provide the actual number of bytes written.</span></span></param>
        <summary><span data-ttu-id="9c2b5-149">現在のシーク ポインターを開始点として、ストリーム オブジェクトに指定したバイト数だけ書き込みます。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-149">Writes a specified number of bytes into the stream object starting at the current seek pointer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c2b5-150">詳細については、MSDN ライブラリの `ISequentialStream::Write` の既存のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9c2b5-150">For more information, please see the existing documentation for `ISequentialStream::Write` in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
