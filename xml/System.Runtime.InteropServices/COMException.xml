<Type Name="COMException" FullName="System.Runtime.InteropServices.COMException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="205a39d6661f370e65b6bc51225ea73ef52e6dda" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75088019" /></Metadata><TypeSignature Language="C#" Value="public class COMException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit COMException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.COMException" />
  <TypeSignature Language="VB.NET" Value="Public Class COMException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class COMException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type COMException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b77a2-101">COM メソッドの呼び出しによって、認識されない HRESULT が返された場合にスローされる例外。</span><span class="sxs-lookup"><span data-stu-id="b77a2-101">The exception that is thrown when an unrecognized HRESULT is returned from a COM method call.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77a2-102">共通言語ランタイムは、既知の Hresult を .NET Framework 例外に変換します。これにより、COM オブジェクトは、有効なエラー情報をマネージクライアントに返すことができます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-102">The common language runtime transforms well-known HRESULTs to .NET Framework exceptions, enabling COM objects to return meaningful error information to managed clients.</span></span> <span data-ttu-id="b77a2-103">HRESULT と例外のマッピングも、特定の Hresult をアンマネージクライアントに返すことで、もう1つの方向で機能します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-103">The HRESULT to exception mapping also works in the other direction by returning specific HRESULTs to unmanaged clients.</span></span> <span data-ttu-id="b77a2-104">マッピングの詳細については、「[方法: hresult と例外をマップする](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b77a2-104">For mapping details, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="b77a2-105">ランタイムが不明な HRESULT (特定の対応する例外を持たない HRESULT) を検出すると、<xref:System.Runtime.InteropServices.COMException> クラスのインスタンスがスローされます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-105">When the runtime encounters an unfamiliar HRESULT (an HRESULT that lacks a specific, corresponding exception), it throws an instance of the <xref:System.Runtime.InteropServices.COMException> class.</span></span> <span data-ttu-id="b77a2-106">このすべての目的の例外は、任意の例外と同じメンバーを公開し、呼び出し先によって返される HRESULT を含むパブリック <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> プロパティを継承します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-106">This all-purpose exception exposes the same members as any exception, and inherits a public <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property that contains the HRESULT returned by the callee.</span></span> <span data-ttu-id="b77a2-107">ランタイムがエラーメッセージを利用できる場合 ( [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx)インターフェイスから取得された場合、または Visual Basic の `Err` オブジェクトまたはオペレーティングシステムから取得した場合) は、メッセージが呼び出し元に返されます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-107">If an error message is available to the runtime (obtained from the [IErrorInfo](https://msdn.microsoft.com/library/windows/desktop/ms723041\(v=vs.85\).aspx) interface or the `Err` object in Visual Basic, or in some cases from the operating system), the message is returned to the caller.</span></span> <span data-ttu-id="b77a2-108">ただし、COM コンポーネントの開発者がエラー メッセージを含めなかった場合、ランタイムは、メッセージ文字列の代わりに 8 桁の HRESULT を返します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-108">However, if the COM component developer fails to include an error message, the runtime returns the eight-digit HRESULT in place of a message string.</span></span> <span data-ttu-id="b77a2-109">HRESULT を指定すると、呼び出し元は一般的な例外の原因を特定できます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-109">Having an HRESULT allows the caller to determine the cause of the generic exception.</span></span>  
  
## <a name="handling-a-comexception-exception"></a><span data-ttu-id="b77a2-110">COMException 例外の処理</span><span class="sxs-lookup"><span data-stu-id="b77a2-110">Handling a COMException exception</span></span>  
 <span data-ttu-id="b77a2-111"><xref:System.Runtime.InteropServices.COMException> 例外のトラブルシューティングに関するいくつかの考慮事項を次に示します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-111">The following are some considerations for troubleshooting a <xref:System.Runtime.InteropServices.COMException> exception.</span></span>  
  
 <span data-ttu-id="b77a2-112"><xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> プロパティを確認する</span><span class="sxs-lookup"><span data-stu-id="b77a2-112">Check the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property</span></span>  
 <span data-ttu-id="b77a2-113">ランタイムが不明な HRESULT を検出し、<xref:System.Runtime.InteropServices.COMException> 例外をスローした場合、<xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> プロパティにはエラーメッセージが含まれているか、エラーメッセージが使用できない場合は、8桁の HRESULT 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-113">When the runtime encounters an unfamiliar HRESULT and throws a <xref:System.Runtime.InteropServices.COMException> exception,  the <xref:System.Runtime.InteropServices.ExternalException.ErrorCode%2A> property includes either the error message or, if an error message is unavailable, the eight-digit HRESULT value.</span></span>  <span data-ttu-id="b77a2-114">エラーメッセージまたは HRESULT 値は、例外の原因を特定するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-114">The error message or the HRESULT value can help you determine the cause of the exception.</span></span>  
  
 <span data-ttu-id="b77a2-115">HRESULT 値の一覧については、「[一般的な Hresult 値](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b77a2-115">For a list of HRESULT values, see [Common HRESULT Values](https://msdn.microsoft.com/library/windows/desktop/aa378137\(v=vs.85\).aspx).</span></span>  
  
 <span data-ttu-id="b77a2-116">遅延バインディングされた引数と Microsoft Office オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b77a2-116">Late-bound arguments and Microsoft Office objects</span></span>  
 <span data-ttu-id="b77a2-117">Microsoft Office オブジェクトのメソッドに遅延バインディング引数を渡すと、オブジェクトが COM オブジェクトの場合、<xref:System.Runtime.InteropServices.COMException> 例外がスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b77a2-117">When passing late-bound arguments to methods of Microsoft Office objects, a <xref:System.Runtime.InteropServices.COMException> exception may be thrown when the objects are COM objects.</span></span> <span data-ttu-id="b77a2-118">遅延バインダーは、そのようなメソッド呼び出しには `ByRef` パラメーターが関連し、受け渡すプロパティに `set` アクセサーがあるものと想定します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-118">The late binder assumes that such method calls involve a `ByRef` parameter and that the property you pass has a `set` accessor.</span></span> <span data-ttu-id="b77a2-119">プロパティがでない場合は、.NET Framework によって <xref:System.MissingMethodException> 例外 (`CORE_E_MISSINGMETHOD` HRESULT) が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-119">If the property does not, the .NET Framework generates a <xref:System.MissingMethodException> exception (with a `CORE_E_MISSINGMETHOD` HRESULT ).</span></span> <span data-ttu-id="b77a2-120">このような動作に対処するには、事前バインディングされたオブジェクトを使用するか、またはオブジェクトのプロパティの代わりに変数を渡します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-120">To work around this behavior, use early-bound objects or pass a variable instead of a property of the object.</span></span>  
  
 <span data-ttu-id="b77a2-121">Visual Studio とホストプロセス</span><span class="sxs-lookup"><span data-stu-id="b77a2-121">Visual Studio and the hosting process</span></span>  
 <span data-ttu-id="b77a2-122">COM は、Visual Studio と[ホストプロセス](https://msdn.microsoft.com/library/ms185331.aspx)間の通信に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-122">COM is used to communicate between Visual Studio and the [hosting process](https://msdn.microsoft.com/library/ms185331.aspx).</span></span> <span data-ttu-id="b77a2-123">コードを実行する前に使用されるため、 [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx)を呼び出すと、この例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-123">Because it is used before code runs, a call to [CoInitializeSecurity](https://msdn.microsoft.com/library/windows/desktop/ms693736\(v=vs.85\).aspx) causes this exception to be thrown.</span></span>  
  
 <span data-ttu-id="b77a2-124">場合によっては、管理者として Visual Studio を実行すると、問題が解決されることがあります。</span><span class="sxs-lookup"><span data-stu-id="b77a2-124">In some cases, running Visual Studio as Administrator may resolve the issue.</span></span> <span data-ttu-id="b77a2-125">[ホストプロセスを無効に](https://msdn.microsoft.com/library/ms185330.aspx)することもできます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-125">You can also [disable the hosting process](https://msdn.microsoft.com/library/ms185330.aspx).</span></span>  
  
## <a name="throwing-a-comexception-exception"></a><span data-ttu-id="b77a2-126">COMException 例外のスロー</span><span class="sxs-lookup"><span data-stu-id="b77a2-126">Throwing a COMException exception</span></span>  
 <span data-ttu-id="b77a2-127"><xref:System.Runtime.InteropServices.COMException> クラスを使用して、特定の Hresult をアンマネージクライアントに返すことができますが、一般的な例外を使用するよりも、特定の .NET Framework 例外をスローする方が適しています。</span><span class="sxs-lookup"><span data-stu-id="b77a2-127">Although you can use the <xref:System.Runtime.InteropServices.COMException> class to return specific HRESULTs to unmanaged clients, throwing a specific .NET Framework exception is better than using a generic exception.</span></span> <span data-ttu-id="b77a2-128">マネージクライアントおよびアンマネージクライアントが .NET Framework オブジェクトを使用できること、およびマネージ呼び出し元に HRESULT をスローすることは、例外をスローするよりもわかりやすくが低いことを考慮してください。</span><span class="sxs-lookup"><span data-stu-id="b77a2-128">Consider that managed clients as well as unmanaged clients can use your .NET Framework object, and throwing an HRESULT to a managed caller is less comprehensible than throwing an exception.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="b77a2-129">例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="b77a2-129">Handling and Throwing Exceptions</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b77a2-130"><see cref="T:System.Runtime.InteropServices.COMException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-130">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b77a2-131"><see cref="T:System.Runtime.InteropServices.COMException" /> クラスの新しいインスタンスを既定値で初期化します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-131">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77a2-132"><xref:System.Runtime.InteropServices.COMException> は <xref:System.Runtime.InteropServices.ExternalException> を継承します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-132"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="b77a2-133">次の表は、このコンストラクターが <xref:System.Exception> オブジェクトのプロパティをどのように設定するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="b77a2-133">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="b77a2-134">property</span><span class="sxs-lookup"><span data-stu-id="b77a2-134">Property</span></span>|<span data-ttu-id="b77a2-135">[値]</span><span class="sxs-lookup"><span data-stu-id="b77a2-135">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="b77a2-136">`null` で初期化します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-136">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="b77a2-137">ローカライズされたエラーメッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="b77a2-137">A localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b77a2-138">例外の理由を示すメッセージ。</span><span class="sxs-lookup"><span data-stu-id="b77a2-138">The message that indicates the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="b77a2-139">指定したメッセージを使用して、<see cref="T:System.Runtime.InteropServices.COMException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-139">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77a2-140"><xref:System.Runtime.InteropServices.COMException> は <xref:System.Runtime.InteropServices.ExternalException> を継承します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-140"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="b77a2-141">次の表は、このコンストラクターが <xref:System.Exception> オブジェクトのプロパティをどのように設定するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="b77a2-141">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="b77a2-142">property</span><span class="sxs-lookup"><span data-stu-id="b77a2-142">Property</span></span>|<span data-ttu-id="b77a2-143">[値]</span><span class="sxs-lookup"><span data-stu-id="b77a2-143">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected COMException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; COMException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="b77a2-144">シリアル化されたオブジェクト データを保持する <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b77a2-144">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="b77a2-145">転送元または転送先に関するコンテキスト情報を提供する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b77a2-145">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that supplies the contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="b77a2-146">シリアル化データから、<see cref="T:System.Runtime.InteropServices.COMException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-146">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class from serialization data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77a2-147">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b77a2-147">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="b77a2-148">詳細については、次を参照してください。 [XML および SOAP シリアル化](~/docs/standard/serialization/xml-and-soap-serialization.md)します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-148">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 <span data-ttu-id="b77a2-149"><xref:System.Runtime.InteropServices.COMException> は <xref:System.Runtime.InteropServices.ExternalException> を継承します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-149"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b77a2-150"><paramref name="info" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b77a2-150"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.InteropServices.ExternalException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string * Exception -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b77a2-151">例外の原因を説明するエラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="b77a2-151">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="b77a2-152">現在の例外の原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="b77a2-152">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="b77a2-153"><paramref name="inner" /> パラメーターが <see langword="null" /> でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-153">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="b77a2-154">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.Runtime.InteropServices.COMException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-154">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77a2-155">前の例外の直接の結果としてスローされる例外については、<xref:System.Exception.InnerException%2A> プロパティに、前の例外への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b77a2-155">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="b77a2-156"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-156">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="b77a2-157">次の表は、このコンストラクターが <xref:System.Exception> オブジェクトのプロパティをどのように設定するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="b77a2-157">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="b77a2-158">property</span><span class="sxs-lookup"><span data-stu-id="b77a2-158">Property</span></span>|<span data-ttu-id="b77a2-159">[値]</span><span class="sxs-lookup"><span data-stu-id="b77a2-159">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="b77a2-160">内部例外の参照。</span><span class="sxs-lookup"><span data-stu-id="b77a2-160">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="b77a2-161">エラー メッセージ文字列。</span><span class="sxs-lookup"><span data-stu-id="b77a2-161">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="b77a2-162">.NET での例外の処理とスロー</span><span class="sxs-lookup"><span data-stu-id="b77a2-162">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public COMException (string message, int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; COMException(System::String ^ message, int errorCode);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.COMException : string * int -&gt; System.Runtime.InteropServices.COMException" Usage="new System.Runtime.InteropServices.COMException (message, errorCode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="b77a2-163">例外が発生した理由を示すメッセージ。</span><span class="sxs-lookup"><span data-stu-id="b77a2-163">The message that indicates the reason the exception occurred.</span></span></param>
        <param name="errorCode"><span data-ttu-id="b77a2-164">この例外に関連付けられているエラー コード (HRESULT) 値です。</span><span class="sxs-lookup"><span data-stu-id="b77a2-164">The error code (HRESULT) value associated with this exception.</span></span></param>
        <summary><span data-ttu-id="b77a2-165">指定したメッセージとエラー コードを使用して、<see cref="T:System.Runtime.InteropServices.COMException" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-165">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.COMException" /> class with a specified message and error code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b77a2-166">この <xref:System.Runtime.InteropServices.COMException> コンストラクターは、エラーコードを使用してベースメッセージを設定します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-166">This <xref:System.Runtime.InteropServices.COMException> constructor sets the base message with the error code.</span></span>  
  
 <span data-ttu-id="b77a2-167"><xref:System.Runtime.InteropServices.COMException> は <xref:System.Runtime.InteropServices.ExternalException> を継承します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-167"><xref:System.Runtime.InteropServices.COMException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="b77a2-168">次の表は、このコンストラクターが <xref:System.Exception> オブジェクトのプロパティをどのように設定するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="b77a2-168">The following table shows how this constructor sets the properties of the <xref:System.Exception> object.</span></span>  
  
|<span data-ttu-id="b77a2-169">property</span><span class="sxs-lookup"><span data-stu-id="b77a2-169">Property</span></span>|<span data-ttu-id="b77a2-170">[値]</span><span class="sxs-lookup"><span data-stu-id="b77a2-170">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message`|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.COMException.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cOMException.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b77a2-171">例外の内容を文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="b77a2-171">Converts the contents of the exception to a string.</span></span></summary>
        <returns><span data-ttu-id="b77a2-172">例外の <see cref="P:System.Exception.HResult" />、<see cref="P:System.Exception.Message" />、<see cref="P:System.Exception.InnerException" />、<see cref="P:System.Exception.StackTrace" /> の各プロパティを含んでいる文字列。</span><span class="sxs-lookup"><span data-stu-id="b77a2-172">A string containing the <see cref="P:System.Exception.HResult" />, <see cref="P:System.Exception.Message" />, <see cref="P:System.Exception.InnerException" />, and <see cref="P:System.Exception.StackTrace" /> properties of the exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.HResult" />
        <altmember cref="P:System.Exception.Message" />
        <altmember cref="P:System.Exception.InnerException" />
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
  </Members>
</Type>
