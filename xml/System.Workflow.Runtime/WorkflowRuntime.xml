<Type Name="WorkflowRuntime" FullName="System.Workflow.Runtime.WorkflowRuntime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66f406f62fc43b68b0a8e0b9f82a6b8918269f6c" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73400634" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WorkflowRuntime extends System.Object implements class System.IDisposable, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowRuntime" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowRuntime&#xA;Implements IDisposable, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntime : IDisposable, IServiceProvider" />
  <TypeSignature Language="F#" Value="type WorkflowRuntime = class&#xA;    interface IServiceProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5350d-101">ワークフロー ランタイム エンジンがワークフローに提供する構成可能な実行環境を表します。</span><span class="sxs-lookup"><span data-stu-id="5350d-101">Represents the configurable execution environment provided by the workflow run-time engine for workflows.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="5350d-102"><xref:System.Workflow.Runtime.WorkflowRuntime> は、ホスト アプリケーションとサービスがワークフロー ランタイム エンジンを構成および制御するために必要とする機能、およびワークフロー ランタイム エンジンとそのワークフロー インスタンスの両方に対する変更の通知を受けるために必要とする機能を公開します。</span><span class="sxs-lookup"><span data-stu-id="5350d-102"><xref:System.Workflow.Runtime.WorkflowRuntime> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-103">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-103">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-104">ここでは、<xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> コンストラクター、および <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>、<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>、<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> メソッドの使用方法の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-104">It provides examples of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor and the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>, and <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> methods.</span></span> <span data-ttu-id="5350d-105">ワークフロー ホストで <xref:System.Workflow.Runtime.WorkflowInstance> メソッドを使用して <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> オブジェクトを作成する場合の推奨方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-105">The code also shows the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span> <span data-ttu-id="5350d-106">また、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>、および <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> イベントのエベント ハンドラーを設定する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-106">It also shows how to set event handlers for the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, and <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events.</span></span>  
  
 <span data-ttu-id="5350d-107">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkID=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-107">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="5350d-108">この型はスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="5350d-108">This type is thread safe.</span></span></threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5350d-109"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5350d-109">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5350d-110"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5350d-110">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-111"><xref:System.Workflow.Runtime.WorkflowRuntime> は既定のプロパティ値を使用して初期化され、既定のコア サービスを含んでいます。</span><span class="sxs-lookup"><span data-stu-id="5350d-111">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized with the default property values and contains the default core services.</span></span> <span data-ttu-id="5350d-112">ワークフロー ランタイム エンジンを追加構成する場合、<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> および <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> を使用してサービスを追加および削除できます。また、<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> を設定することができます。</span><span class="sxs-lookup"><span data-stu-id="5350d-112">To additionally configure the workflow run-time engine, you can add and remove services by using <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> and <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>, and you can set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>.</span></span> <span data-ttu-id="5350d-113"><xref:System.Workflow.Runtime.WorkflowRuntime> を構成した後、<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> を呼び出してワークフロー ランタイム エンジンとそのサービスを開始します。</span><span class="sxs-lookup"><span data-stu-id="5350d-113">After the <xref:System.Workflow.Runtime.WorkflowRuntime> is configured, call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> to start the workflow run-time engine and its services.</span></span>  
  
 <span data-ttu-id="5350d-114"><xref:System.Workflow.Runtime.WorkflowRuntime> クラスのインスタンスの初期プロパティ値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-114">The following table shows initial property values for an instance of <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
|<span data-ttu-id="5350d-115">プロパティ</span><span class="sxs-lookup"><span data-stu-id="5350d-115">Property</span></span>|<span data-ttu-id="5350d-116">初期値</span><span class="sxs-lookup"><span data-stu-id="5350d-116">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A>|<span data-ttu-id="5350d-117">"WorkflowRuntime"</span><span class="sxs-lookup"><span data-stu-id="5350d-117">"WorkflowRuntime"</span></span>|  
|<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>|`false`|  
  
 <span data-ttu-id="5350d-118">既定のコア サービスは、<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> および <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> です。</span><span class="sxs-lookup"><span data-stu-id="5350d-118">The default core services are <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-119">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-119">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-120">ここでは、<xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> コンストラクターを使用して <xref:System.Workflow.Runtime.WorkflowRuntime> のインスタンスを作成し、そのメソッドとイベントにアクセスする方法の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-120">It provides an example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> constructor to create an instance of a <xref:System.Workflow.Runtime.WorkflowRuntime> and access its methods and events.</span></span>  
  
 <span data-ttu-id="5350d-121">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkID=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-121">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (string configSectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configSectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configSectionName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::String ^ configSectionName);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.WorkflowRuntime : string -&gt; System.Workflow.Runtime.WorkflowRuntime" Usage="new System.Workflow.Runtime.WorkflowRuntime configSectionName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configSectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configSectionName"><span data-ttu-id="5350d-122">アプリケーション構成ファイル内の有効な <see langword="workflowSettings" /> セクションの名前。</span><span class="sxs-lookup"><span data-stu-id="5350d-122">The name of a valid <see langword="workflowSettings" /> section in the application configuration file.</span></span></param>
        <summary><span data-ttu-id="5350d-123">アプリケーション構成ファイル内の指定したセクションを使用して、<see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5350d-123">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the specified section of the application configuration file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-124"><xref:System.Workflow.Runtime.WorkflowRuntime> は、アプリケーション構成ファイル内の、`configSectionName` で指定したセクションでの設定に従って初期化されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-124">The <xref:System.Workflow.Runtime.WorkflowRuntime> is initialized according to the settings in the section specified by `configSectionName` in the application configuration file.</span></span> <span data-ttu-id="5350d-125">`configSectionName` は、構成ファイルの有効な `workflowSettings` セクションに対応している必要があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-125">`configSectionName` must correspond to a valid `workflowSettings` section of a configuration file.</span></span>  
  
 <span data-ttu-id="5350d-126">アプリケーション構成ファイルを使用してワークフローランタイムエンジンを構成すると、構成ファイルの `Services` セクションに記載されている型のクラスを読み込んでインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="5350d-126">When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the `Services` section of the configuration file.</span></span> <span data-ttu-id="5350d-127">これらのクラスを作成するときに、ワークフロー ランタイム エンジンは次のシグネチャのクラス コンストラクターを次の順に検索します。</span><span class="sxs-lookup"><span data-stu-id="5350d-127">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="5350d-128">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span><span class="sxs-lookup"><span data-stu-id="5350d-128">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="5350d-129">Service(WorkflowRuntime runtime)</span><span class="sxs-lookup"><span data-stu-id="5350d-129">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="5350d-130">Service(NameValueCollection parameters)</span><span class="sxs-lookup"><span data-stu-id="5350d-130">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="5350d-131">Service()</span><span class="sxs-lookup"><span data-stu-id="5350d-131">Service()</span></span>  
  
 <span data-ttu-id="5350d-132">構成ファイルから読み込まれるすべてのサービス クラスは、これらのコンストラクター シグネチャのうちの少なくとも 1 つを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-132">All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</span></span>  
  
 <span data-ttu-id="5350d-133">詳細については、「<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-133">For more information, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-134"><paramref name="configSectionName" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-134"><paramref name="configSectionName" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5350d-135">有効な <see langword="workflowSettings" /> セクションがアプリケーション構成ファイル内に見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="5350d-135">A valid <see langword="workflowSettings" /> section could not be found in the application configuration file.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-136">このアプリケーション ドメインの <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は既に存在します。</span><span class="sxs-lookup"><span data-stu-id="5350d-136">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowRuntime (System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.Runtime.Configuration.WorkflowRuntimeSection settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As WorkflowRuntimeSection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowRuntime(System::Workflow::Runtime::Configuration::WorkflowRuntimeSection ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Runtime.WorkflowRuntime : System.Workflow.Runtime.Configuration.WorkflowRuntimeSection -&gt; System.Workflow.Runtime.WorkflowRuntime" Usage="new System.Workflow.Runtime.WorkflowRuntime settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="5350d-137"><see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-137">A <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span></span></param>
        <summary><span data-ttu-id="5350d-138">指定した <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> での設定を使用して、<see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5350d-138">Initializes a new instance of the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> class by using the settings in the specified <see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-139">このコンストラクターは、アプリケーション構成ファイルを使用しないホストに、単一メソッド呼び出しを使用したワークフロー ランタイム エンジン構成機構を提供します。</span><span class="sxs-lookup"><span data-stu-id="5350d-139">This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</span></span> <span data-ttu-id="5350d-140">アプリケーション構成ファイルを使用しない理由はさまざまです。</span><span class="sxs-lookup"><span data-stu-id="5350d-140">There are many reasons for not using the application configuration file.</span></span> <span data-ttu-id="5350d-141">構成ファイルの使用が許可されない環境でホストが実行されることもあります。たとえば、セキュリティ上の理由から、アプリケーション構成ファイルからの読み取りが許可されない信頼される環境でホストが実行される場合です。</span><span class="sxs-lookup"><span data-stu-id="5350d-141">A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</span></span> <span data-ttu-id="5350d-142">また、ホストが独自の構成機構を使用することもあります。たとえば、ホストがワークフロー ランタイム エンジンの構成設定を SQL データベースに格納する場合です。</span><span class="sxs-lookup"><span data-stu-id="5350d-142">Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</span></span>  
  
 <span data-ttu-id="5350d-143">ワークフロー ランタイム エンジンは、<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType> に格納された型のクラスを読み込んでインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="5350d-143">The workflow run-time engine loads and instantiates classes of the types contained in <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5350d-144">これらのクラスを作成するときに、ワークフロー ランタイム エンジンは次のシグネチャのクラス コンストラクターを次の順に検索します。</span><span class="sxs-lookup"><span data-stu-id="5350d-144">When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</span></span>  
  
1.  <span data-ttu-id="5350d-145">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span><span class="sxs-lookup"><span data-stu-id="5350d-145">Service(WorkflowRuntime runtime, NameValueCollection parameters)</span></span>  
  
2.  <span data-ttu-id="5350d-146">Service(WorkflowRuntime runtime)</span><span class="sxs-lookup"><span data-stu-id="5350d-146">Service(WorkflowRuntime runtime)</span></span>  
  
3.  <span data-ttu-id="5350d-147">Service(NameValueCollection parameters)</span><span class="sxs-lookup"><span data-stu-id="5350d-147">Service(NameValueCollection parameters)</span></span>  
  
4.  <span data-ttu-id="5350d-148">Service()</span><span class="sxs-lookup"><span data-stu-id="5350d-148">Service()</span></span>  
  
 <span data-ttu-id="5350d-149">`settings` で指定されたすべてのサービス クラスは、これらのコンストラクター シグネチャのうちの少なくとも 1 つを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-149">All service classes that are specified in `settings` must implement at least one of these constructor signatures.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-150"><paramref name="settings" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-150"><paramref name="settings" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-151">このアプリケーション ドメインの <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は既に存在します。</span><span class="sxs-lookup"><span data-stu-id="5350d-151">A <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> already exists for this application domain.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.AddService : obj -&gt; unit" Usage="workflowRuntime.AddService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="5350d-152">追加するサービスを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5350d-152">An object that represents the service to add.</span></span></param>
        <summary><span data-ttu-id="5350d-153">指定したサービスをワークフロー ランタイム エンジンに追加します。</span><span class="sxs-lookup"><span data-stu-id="5350d-153">Adds the specified service to the workflow run-time engine.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-154">コア サービスを追加することによってワークフロー ランタイム エンジンを構成できます。</span><span class="sxs-lookup"><span data-stu-id="5350d-154">You can configure the workflow run-time engine by adding core services.</span></span> <span data-ttu-id="5350d-155">コア サービスは、サービス基本クラスである <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> クラス、および <xref:System.Workflow.Runtime.Tracking.TrackingService> クラスのいずれかから派生したサービスです。</span><span class="sxs-lookup"><span data-stu-id="5350d-155">Core services are those that derive from any of the following service base classes: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="5350d-156">コアサービスは、ワークフローランタイムエンジンが実行されていない場合にのみ追加できます。つまり、<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> が `false`場合はです。</span><span class="sxs-lookup"><span data-stu-id="5350d-156">Core services can only be added when the workflow run-time engine is not running; that is, when <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false`.</span></span> <span data-ttu-id="5350d-157"><xref:System.Workflow.Runtime.WorkflowRuntime> は、他のワークフロー、またはホストで実行されるアプリケーションが使用できる他のサービスの格納コンテナーとしても使用できます。</span><span class="sxs-lookup"><span data-stu-id="5350d-157">The <xref:System.Workflow.Runtime.WorkflowRuntime> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</span></span> <span data-ttu-id="5350d-158"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生した非コア サービスをワークフロー ランタイム エンジンの起動後に追加すると、<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> は、そのサービスによって実装された <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5350d-158">If you add a non-core service that derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class after the workflow run-time engine has been started, <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by that service.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5350d-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> には同じ <xref:System.Type> のサービスを複数、<xref:System.Workflow.Runtime.WorkflowRuntime> に追加できないという制限があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-159"><xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> enforces the restriction that no two services of the same <xref:System.Type> can be added to the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="5350d-160">ただし、同じ基本クラスから派生したサービスであれば、複数追加できます。</span><span class="sxs-lookup"><span data-stu-id="5350d-160">However, you can add multiple services that derive from the same base class.</span></span>  <span data-ttu-id="5350d-161"><xref:System.Workflow.Runtime.WorkflowRuntime> のサービス基本クラスである <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> クラス、および <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> クラスのそれぞれから派生できるサービスは、1 つだけです。</span><span class="sxs-lookup"><span data-stu-id="5350d-161">There can be only one service derived from each of the following service base classes in the <xref:System.Workflow.Runtime.WorkflowRuntime>: the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, and the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="5350d-162">これらのクラスのいずれかから派生した複数のサービス (たとえば 2 つの永続性サービス) を追加すると、<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> が <xref:System.InvalidOperationException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="5350d-162">If you add multiple services derived from one of these classes, for example two persistence services, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-163">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-163">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-164">ここでは、<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> メソッドを使用して、<xref:System.Workflow.Activities.ExternalDataExchangeService> と <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> をワークフロー ランタイム エンジンに追加する方法の例を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-164">It provides example of how to use the <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> method to add an <xref:System.Workflow.Activities.ExternalDataExchangeService> and <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> to the workflow run-time engine.</span></span>  
  
 <span data-ttu-id="5350d-165">このコード例は、「[ワークフローのキャンセル](https://go.microsoft.com/fwlink/?LinkId=157346)」サンプルに含まれています。</span><span class="sxs-lookup"><span data-stu-id="5350d-165">This code example is part of the [Cancelling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-166"><paramref name="service" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-166"><paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-167"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-167">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-168"><paramref name="service" /> がワークフロー ランタイム エンジンに既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-168"><paramref name="service" /> is already registered with the workflow run-time engine.</span></span>  
  
<span data-ttu-id="5350d-169">- または -</span><span class="sxs-lookup"><span data-stu-id="5350d-169">-or-</span></span> 
 <span data-ttu-id="5350d-170"><paramref name="service" /> はコア サービスであり、ワークフロー ランタイム エンジンは既に実行中 (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> が <see langword="true" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-170"><paramref name="service" /> is a core service and the workflow run-time engine is already running (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateWorkflow">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5350d-171">指定したパラメーターを使用して、ワークフロー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5350d-171">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-172">ワークフロー ランタイム エンジンが起動していない場合は、<xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> メソッドによって <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-172">If the workflow run-time engine has not been started, the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> methods call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="5350d-173">使用できる例外のリストについては、<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-173">See <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> for a list of possible exceptions.</span></span> <span data-ttu-id="5350d-174">ワークフロー インスタンスを作成したら、<xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> メソッドから返された <xref:System.Workflow.Runtime.WorkflowInstance> オブジェクトに対して <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> を呼び出して実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="5350d-174">After you create the workflow instance, call <xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType> on the <xref:System.Workflow.Runtime.WorkflowInstance> object returned by the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method to begin its execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow workflowType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="5350d-175">作成するワークフローの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-175">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <summary><span data-ttu-id="5350d-176">指定したワークフローの <see cref="T:System.Type" /> を使用して、新しいワークフロー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5350d-176">Creates a new workflow instance by using the specified workflow <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="5350d-177">作成されたワークフロー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5350d-177">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-178"><xref:System.Workflow.Runtime.WorkflowInstance> の作成前に、ワークフロー インスタンスの検証が実行されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-178">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="5350d-179">検証エラーが発生した場合は、<xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-179">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="5350d-180">これは単純なシナリオでは正しく動作しますが、サーバー環境では、ワークフローをアクティブにするたびにワークフローの再検証を実行すると、不要なオーバーヘッドが生じることがあります。</span><span class="sxs-lookup"><span data-stu-id="5350d-180">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="5350d-181">検証を無効にする方法の詳細については、「<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-181">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-182">次のコード例は、ワークフロー ホストで <xref:System.Workflow.Runtime.WorkflowInstance> メソッドを使用して <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> オブジェクトを作成するための推奨方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-182">The following code example demonstrates the recommended way to create a <xref:System.Workflow.Runtime.WorkflowInstance> object in a workflow host using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method.</span></span>  
  
 <span data-ttu-id="5350d-183">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkID=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-183">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-184"><paramref name="workflowType" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-184"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow workflowDefinitionReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="5350d-185">ワークフロー定義を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-185">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <summary><span data-ttu-id="5350d-186">指定した <see cref="T:System.Xml.XmlReader" /> を使用して、ワークフロー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5350d-186">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="5350d-187">作成されたワークフロー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5350d-187">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-188"><xref:System.Xml.XmlReader> によって参照される XAML ワークフロー定義ファイルからワークフロー インスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-188">The workflow instance is created from a XAML workflow definition file referenced by the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="5350d-189"><xref:System.Workflow.Runtime.WorkflowInstance> の作成前に、ワークフロー インスタンスの検証が実行されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-189">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="5350d-190">検証エラーが発生した場合は、<xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-190">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="5350d-191">これは単純なシナリオでは正しく動作しますが、サーバー環境では、ワークフローをアクティブにするたびにワークフローの再検証を実行すると、不要なオーバーヘッドが生じることがあります。</span><span class="sxs-lookup"><span data-stu-id="5350d-191">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="5350d-192">検証を無効にする方法の詳細については、「<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-192">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-193">XAML ベースのワークフロー定義を指定してワークフローを作成する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-193">The following example demonstrates how to create a workflow given a XAML-based workflow definition.</span></span>  
  
```  
static void Main(string[] args)  
{  
    using (WorkflowRuntime workflowRuntime = new WorkflowRuntime())  
    {  
        AutoResetEvent waitHandle = new AutoResetEvent(false);  
        workflowRuntime.WorkflowCompleted += delegate(object sender, WorkflowCompletedEventArgs e)  
        {  
            waitHandle.Set();  
        };  
        workflowRuntime.WorkflowTerminated += delegate(object sender, WorkflowTerminatedEventArgs e)  
        {  
            Console.WriteLine(e.Exception.Message);  
            waitHandle.Set();  
        };  
  
        TypeProvider typeProvider = new TypeProvider(null);  
        // Add referenced assemblies, if needed  
        // typeProvider.AddAssembly(...);  
        workflowRuntime.AddService(typeProvider);  
  
        using (XmlReader reader = XmlReader.Create("Workflow1.xoml"))  
        {  
            WorkflowInstance instance = workflowRuntime.CreateWorkflow(reader);  
            instance.Start();  
        }  
  
        waitHandle.WaitOne();  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-194"><paramref name="workflowDefinitionReader" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-194"><paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-195"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-195">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowType, namedArgumentValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="5350d-196">作成するワークフローの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-196">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="5350d-197">ワークフローの引数を表す文字列で指定されたオブジェクトの <see cref="T:System.Collections.Generic.Dictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-197">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by string that represents the arguments to the workflow.</span></span></param>
        <summary><span data-ttu-id="5350d-198">指定したワークフローの <see cref="T:System.Type" /> と、指定した <see cref="T:System.Collections.Generic.Dictionary`2" /> に格納されたワークフローの引数を使用して、ワークフロー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5350d-198">Creates a workflow instance by using the specified workflow <see cref="T:System.Type" /> and the arguments to the workflow contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="5350d-199">作成されたワークフロー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5350d-199">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-200"><xref:System.Workflow.Runtime.WorkflowInstance> の作成前に、ワークフロー インスタンスの検証が実行されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-200">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="5350d-201">検証エラーが発生した場合は、<xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-201">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="5350d-202">これは単純なシナリオでは正しく動作しますが、サーバー環境では、ワークフローをアクティブにするたびにワークフローの再検証を実行すると、不要なオーバーヘッドが生じることがあります。</span><span class="sxs-lookup"><span data-stu-id="5350d-202">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="5350d-203">検証を無効にする方法の詳細については、「<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-203">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="5350d-204">パラメーターを `CreateWorkflow`に渡す例については、「[パラメーターを使用したワークフローのサンプル](https://go.microsoft.com/fwlink/?LinkId=157403)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-204">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkId=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-205"><paramref name="workflowType" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-205"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (Type workflowType, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Type workflowType, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowType As Type, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(Type ^ workflowType, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : Type * System.Collections.Generic.Dictionary&lt;string, obj&gt; * Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowType, namedArgumentValues, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowType" Type="System.Type" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowType"><span data-ttu-id="5350d-206">作成するワークフローの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-206">The <see cref="T:System.Type" /> of the workflow to create.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="5350d-207">ワークフローの引数を表す文字列で指定されたオブジェクトの <see cref="T:System.Collections.Generic.Dictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-207">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <param name="instanceId"><span data-ttu-id="5350d-208">作成する特定の <see cref="T:System.Guid" /> の <see cref="T:System.Workflow.Runtime.WorkflowInstance" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-208">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span></span></param>
        <summary><span data-ttu-id="5350d-209">指定したパラメーターを使用して、ワークフロー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5350d-209">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="5350d-210">作成されたワークフロー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5350d-210">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-211"><xref:System.Workflow.Runtime.WorkflowInstance> の作成前に、ワークフロー インスタンスの検証が実行されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-211">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="5350d-212">検証エラーが発生した場合は、<xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-212">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="5350d-213">これは単純なシナリオでは正しく動作しますが、サーバー環境では、ワークフローをアクティブにするたびにワークフローの再検証を実行すると、不要なオーバーヘッドが生じることがあります。</span><span class="sxs-lookup"><span data-stu-id="5350d-213">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="5350d-214">検証を無効にする方法の詳細については、「<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-214">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="5350d-215">`instanceId` によって読み込まれた実行中のワークフローの <xref:System.Workflow.Runtime.WorkflowRuntime> は、一意でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="5350d-215">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="5350d-216">`instanceId` を渡してワークフローを作成し、実行中のワークフローでその `instanceId` が既に使用されている場合は、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-216">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="5350d-217">パラメーターを `CreateWorkflow`に渡す例については、「[パラメーターを使用したワークフローのサンプル](https://go.microsoft.com/fwlink/?LinkID=157403)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-217">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-218"><paramref name="workflowType" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-218"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object)) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader * System.Xml.XmlReader * System.Collections.Generic.Dictionary&lt;string, obj&gt; -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowDefinitionReader, rulesReader, namedArgumentValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="5350d-219">ワークフロー定義を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-219">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <param name="rulesReader"><span data-ttu-id="5350d-220"><see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-220">An <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="5350d-221">ワークフローの引数を表す文字列で指定されたオブジェクトの <see cref="T:System.Collections.Generic.Dictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-221">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <summary><span data-ttu-id="5350d-222">指定した <see cref="T:System.Xml.XmlReader" /> オブジェクトと、指定した <see cref="T:System.Collections.Generic.Dictionary`2" /> に格納された引数を使用して、ワークフロー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5350d-222">Creates a workflow instance by using the specified <see cref="T:System.Xml.XmlReader" /> objects and the arguments contained in the specified <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></summary>
        <returns><span data-ttu-id="5350d-223">作成されたワークフロー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5350d-223">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-224"><xref:System.Xml.XmlReader> によって参照されるワークフロー定義と、`namedArgumentValues` によって提供される引数から、ワークフロー インスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-224">The workflow instance is created from the workflow definition referenced by the <xref:System.Xml.XmlReader> and the arguments supplied by `namedArgumentValues`.</span></span>  
  
 <span data-ttu-id="5350d-225"><xref:System.Workflow.Runtime.WorkflowInstance> の作成前に、ワークフロー インスタンスの検証が実行されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-225">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="5350d-226">検証エラーが発生した場合は、<xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-226">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="5350d-227">これは単純なシナリオでは正しく動作しますが、サーバー環境では、ワークフローをアクティブにするたびにワークフローの再検証を実行すると、不要なオーバーヘッドが生じることがあります。</span><span class="sxs-lookup"><span data-stu-id="5350d-227">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="5350d-228">検証を無効にする方法の詳細については、「<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-228">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="5350d-229">パラメーターを `CreateWorkflow`に渡す例については、「[パラメーターを使用したワークフローのサンプル](https://go.microsoft.com/fwlink/?LinkID=157403)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-229">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="5350d-230">XML で定義されているルールの使用例については、「 [IfElse With Rules Sample](https://go.microsoft.com/fwlink/?LinkId=157404)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-230">For an example of using rules defined in XML, see [IfElse with Rules Sample](https://go.microsoft.com/fwlink/?LinkId=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-231"><paramref name="workflowDefinitionReader" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-231"><paramref name="workflowDefinitionReader" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-232"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-232">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance CreateWorkflow (System.Xml.XmlReader workflowDefinitionReader, System.Xml.XmlReader rulesReader, System.Collections.Generic.Dictionary&lt;string,object&gt; namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance CreateWorkflow(class System.Xml.XmlReader workflowDefinitionReader, class System.Xml.XmlReader rulesReader, class System.Collections.Generic.Dictionary`2&lt;string, object&gt; namedArgumentValues, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateWorkflow (workflowDefinitionReader As XmlReader, rulesReader As XmlReader, namedArgumentValues As Dictionary(Of String, Object), instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ CreateWorkflow(System::Xml::XmlReader ^ workflowDefinitionReader, System::Xml::XmlReader ^ rulesReader, System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ namedArgumentValues, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflow : System.Xml.XmlReader * System.Xml.XmlReader * System.Collections.Generic.Dictionary&lt;string, obj&gt; * Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.CreateWorkflow (workflowDefinitionReader, rulesReader, namedArgumentValues, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDefinitionReader" Type="System.Xml.XmlReader" />
        <Parameter Name="rulesReader" Type="System.Xml.XmlReader" />
        <Parameter Name="namedArgumentValues" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowDefinitionReader"><span data-ttu-id="5350d-233">ワークフロー定義を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-233">An <see cref="T:System.Xml.XmlReader" /> that contains the workflow definition.</span></span></param>
        <param name="rulesReader"><span data-ttu-id="5350d-234"><see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-234">An <see cref="T:System.Xml.XmlReader" />.</span></span></param>
        <param name="namedArgumentValues"><span data-ttu-id="5350d-235">ワークフローの引数を表す文字列で指定されたオブジェクトの <see cref="T:System.Collections.Generic.Dictionary`2" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-235">A <see cref="T:System.Collections.Generic.Dictionary`2" /> of objects keyed by a string that represents the arguments to the workflow.</span></span></param>
        <param name="instanceId"><span data-ttu-id="5350d-236">作成する特定の <see cref="T:System.Guid" /> の <see cref="T:System.Workflow.Runtime.WorkflowInstance" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-236">The <see cref="T:System.Guid" /> of the specific <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> to create.</span></span></param>
        <summary><span data-ttu-id="5350d-237">指定したパラメーターを使用して、ワークフロー インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="5350d-237">Creates a workflow instance by using the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="5350d-238">作成されたワークフロー インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5350d-238">The created workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-239"><xref:System.Workflow.Runtime.WorkflowInstance> の作成前に、ワークフロー インスタンスの検証が実行されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-239">Before the <xref:System.Workflow.Runtime.WorkflowInstance> is created, validation is executed on it.</span></span> <span data-ttu-id="5350d-240">検証エラーが発生した場合は、<xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-240">If any validation errors occur, the <xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException> is thrown.</span></span> <span data-ttu-id="5350d-241">これは単純なシナリオでは正しく動作しますが、サーバー環境では、ワークフローをアクティブにするたびにワークフローの再検証を実行すると、不要なオーバーヘッドが生じることがあります。</span><span class="sxs-lookup"><span data-stu-id="5350d-241">This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</span></span>  
  
 <span data-ttu-id="5350d-242">検証を無効にする方法の詳細については、「<xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-242">For more information about disabling validation, see <xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A>.</span></span>  
  
 <span data-ttu-id="5350d-243">`instanceId` によって読み込まれた実行中のワークフローの <xref:System.Workflow.Runtime.WorkflowRuntime> は、一意でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="5350d-243">The workflow `instanceId` for any running workflows loaded by the <xref:System.Workflow.Runtime.WorkflowRuntime> must be unique.</span></span> <span data-ttu-id="5350d-244">`instanceId` を渡してワークフローを作成し、実行中のワークフローでその `instanceId` が既に使用されている場合は、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-244">If you pass an `instanceId` to create a workflow and a running workflow is already using that `instanceId`, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 <span data-ttu-id="5350d-245">パラメーターを `CreateWorkflow`に渡す例については、「[パラメーターを使用したワークフローのサンプル](https://go.microsoft.com/fwlink/?LinkID=157403)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-245">For an example of passing in parameters to `CreateWorkflow`, see [Workflow with Parameters Sample](https://go.microsoft.com/fwlink/?LinkID=157403).</span></span>  
  
 <span data-ttu-id="5350d-246">XML で定義されているルールの使用例については、「 [IfElse With Rules Sample](https://go.microsoft.com/fwlink/?LinkID=157404)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-246">For an example of using rules defined in XML, see [IfElse with Rules Sample](https://go.microsoft.com/fwlink/?LinkID=157404).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-247"><paramref name="workflowType" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-247"><paramref name="workflowType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="workflowRuntime.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5350d-248"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> で使用したリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="5350d-248">Releases the resources used by the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-249"><xref:System.Workflow.Runtime.WorkflowRuntime> を正常にシャットダウンするには、<xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> を呼び出した後、<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> のみを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-249">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, you should only call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> after you have called <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span> <span data-ttu-id="5350d-250"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> メソッドのみを呼び出すことで、<xref:System.Workflow.Runtime.WorkflowRuntime> を使用できない状態にします。</span><span class="sxs-lookup"><span data-stu-id="5350d-250">This is because calling the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method alone leaves the <xref:System.Workflow.Runtime.WorkflowRuntime> in an unusable state.</span></span> <span data-ttu-id="5350d-251"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> により、開いているファイル ハンドルやデータベース接続などが閉じて、ランタイムが使用するリソースが解放されます。ただし、ワークフロー インスタンスのアンロード、サービスの停止、または <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> が実行するその他の処理は行われません。</span><span class="sxs-lookup"><span data-stu-id="5350d-251"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> does.</span></span>  
  
 <span data-ttu-id="5350d-252">したがって、<xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> を呼び出すのは、リソースがガベージ コレクターによって自動的に解放される前に、ホスト アプリケーションが <xref:System.Workflow.Runtime.WorkflowRuntime> が使用するリソースを解放する必要がある場合だけにしてください。</span><span class="sxs-lookup"><span data-stu-id="5350d-252"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> should be called only when the host application must free the resources used by the <xref:System.Workflow.Runtime.WorkflowRuntime> before they are automatically freed by the garbage collector.</span></span> <span data-ttu-id="5350d-253"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>に関する一般的な情報については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-253">For general information about <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-254"><xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> オブジェクトで <xref:System.Workflow.Runtime.WorkflowRuntime> を呼び出す方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-254">The following example demonstrates how to call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> on a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="5350d-255">この例では、アプリケーションのメイン フォームのための FormClosing イベント ハンドラーから <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> メソッドが呼び出されます。こうすることにより、アプリケーションがシャットダウンされるときに、ランタイムによって作成されたオブジェクトが適切にクリーンアップされるようになります。</span><span class="sxs-lookup"><span data-stu-id="5350d-255">In this sample, the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</span></span> <span data-ttu-id="5350d-256">このサンプルは、 [Speech アプリケーションのサンプル](https://go.microsoft.com/fwlink/?LinkId=157405)です。</span><span class="sxs-lookup"><span data-stu-id="5350d-256">This sample is from the [Speech Application Sample](https://go.microsoft.com/fwlink/?LinkId=157405).</span></span>  
  
 [!code-csharp[WF_Samples#108](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#108)]
 [!code-vb[WF_Samples#108](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;object&gt; GetAllServices (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;object&gt; GetAllServices(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices (serviceType As Type) As ReadOnlyCollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Object ^&gt; ^ GetAllServices(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="member this.GetAllServices : Type -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;obj&gt;" Usage="workflowRuntime.GetAllServices serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="5350d-257">返されるサービスが実装している必要がある <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-257">The <see cref="T:System.Type" /> that services must implement to be returned.</span></span></param>
        <summary><span data-ttu-id="5350d-258">ワークフロー ランタイム エンジンに追加されたサービスのうち、指定した <see cref="T:System.Type" /> を実装したサービスまたはそれから派生したサービスをすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="5350d-258">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="5350d-259">指定した <see cref="T:System.Type" /> を実装したサービスまたはそれから派生したサービス。</span><span class="sxs-lookup"><span data-stu-id="5350d-259">Services that implement or derive from the specified <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-260">空の <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> は、指定した <xref:System.Type> を実装したサービスまたはそれから派生したサービスはワークフロー ランタイム エンジンに追加されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-260">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services that implement or derive from the specified <xref:System.Type> have been added to the workflow run-time engine.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-261">指定した型のすべてのサービスを <xref:System.Workflow.Runtime.WorkflowRuntime> オブジェクトから取得する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-261">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#19](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#19)]
 [!code-vb[WF_Samples#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-262"><paramref name="serviceType" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-262"><paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-263"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-263">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllServices&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetAllServices&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetAllServices&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllServices(Of T) () As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetAllServices();" />
      <MemberSignature Language="F#" Value="member this.GetAllServices : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="workflowRuntime.GetAllServices " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="5350d-264">サービスの型。</span><span class="sxs-lookup"><span data-stu-id="5350d-264">The service type.</span></span></typeparam>
        <summary><span data-ttu-id="5350d-265">ワークフロー ランタイム エンジンに追加されたサービスのうち、指定したジェネリック型を実装したサービスまたはそれから派生したサービスをすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="5350d-265">Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="5350d-266">指定したジェネリック型を実装したサービスまたはそれから派生したサービス。</span><span class="sxs-lookup"><span data-stu-id="5350d-266">Services that implement or derive from the specified generic type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-267">空の <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> は、指定したジェネリック型を実装したサービスまたはそれから派生したサービスはワークフロー ランタイム エンジンに追加されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-267">An empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-268">指定した型のすべてのサービスを <xref:System.Workflow.Runtime.WorkflowRuntime> オブジェクトから取得する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-268">The following example demonstrates how to retrieve all services of a given type from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#6](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#6)]
 [!code-vb[WF_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-269"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-269">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedWorkflows">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.Runtime.WorkflowInstance&gt; GetLoadedWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedWorkflows () As ReadOnlyCollection(Of WorkflowInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::Runtime::WorkflowInstance ^&gt; ^ GetLoadedWorkflows();" />
      <MemberSignature Language="F#" Value="member this.GetLoadedWorkflows : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;" Usage="workflowRuntime.GetLoadedWorkflows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.Runtime.WorkflowInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5350d-270">メモリに現在読み込まれているすべてのワークフロー インスタンスを格納しているコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="5350d-270">Gets a collection that contains all the workflow instances currently loaded in memory.</span></span></summary>
        <returns><span data-ttu-id="5350d-271">メモリに現在読み込まれている各ワークフロー インスタンスの <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5350d-271">A <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> object for each workflow instance currently loaded in memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-272"><xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> とは異なり、このメソッドは、ランタイムが起動されていない場合は <xref:System.InvalidOperationException> をスローしません。</span><span class="sxs-lookup"><span data-stu-id="5350d-272">Note that, unlike <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A>, this method does not throw a <xref:System.InvalidOperationException> if the runtime is not started.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-273">読み込まれているワークフローのコレクションを <xref:System.Workflow.Runtime.WorkflowRuntime> オブジェクトから取得する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-273">The following example demonstrates how to retrieve a collection of loaded workflows from a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 [!code-csharp[WF_Samples#18](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#18)]
 [!code-vb[WF_Samples#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-274"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-274">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowRuntime.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="5350d-275">取得するサービスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-275">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="5350d-276">指定した <see cref="T:System.Type" /> のサービスをワークフロー ランタイム エンジンから取得します。</span><span class="sxs-lookup"><span data-stu-id="5350d-276">Retrieves a service of the specified <see cref="T:System.Type" /> from the workflow run-time engine.</span></span></summary>
        <returns><span data-ttu-id="5350d-277">指定した <see cref="T:System.Type" /> のサービス。</span><span class="sxs-lookup"><span data-stu-id="5350d-277">The service of the specified <see cref="T:System.Type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-278">指定した <xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> のサービスが複数存在する場合、<xref:System.InvalidOperationException> は <xref:System.Type> をスローします。</span><span class="sxs-lookup"><span data-stu-id="5350d-278"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified <xref:System.Type>.</span></span> <span data-ttu-id="5350d-279">したがって、指定した型のサービスが <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> に複数存在する可能性がある場合は、<xref:System.Workflow.Runtime.WorkflowRuntime> のオーバーロードされたメソッドの 1 つを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-279">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the specified type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="5350d-280">たとえば、ワークフロー ランタイム エンジンに複数の追跡サービスが設定されている場合、</span><span class="sxs-lookup"><span data-stu-id="5350d-280">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="5350d-281"><xref:System.Workflow.Runtime.Tracking.TrackingService> 基本クラスを指定して追跡サービスを要求すると、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-281">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-282"><paramref name="serviceType" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-282"><paramref name="serviceType" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-283"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> が既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-283">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-284"><paramref name="serviceType" /> 型のサービスが複数見つかりました。</span><span class="sxs-lookup"><span data-stu-id="5350d-284">More than one service of type <paramref name="serviceType" /> was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetService&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetService&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetService();" />
      <MemberSignature Language="F#" Value="member this.GetService : unit -&gt; 'T" Usage="workflowRuntime.GetService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="5350d-285">サービスの型。</span><span class="sxs-lookup"><span data-stu-id="5350d-285">The service type.</span></span></typeparam>
        <summary><span data-ttu-id="5350d-286">指定したジェネリック型のサービスをワークフロー ランタイム エンジンから取得します。</span><span class="sxs-lookup"><span data-stu-id="5350d-286">Retrieves a service of the specified generic type from the workflow run-time engine.</span></span></summary>
        <returns><span data-ttu-id="5350d-287">指定したジェネリック型の単一のサービス。</span><span class="sxs-lookup"><span data-stu-id="5350d-287">A single service of the specified generic type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-288">指定したジェネリック型のサービスが複数存在する場合、<xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> は <xref:System.InvalidOperationException> をスローします。</span><span class="sxs-lookup"><span data-stu-id="5350d-288"><xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A> throws an <xref:System.InvalidOperationException> if more than one service exists for the specified generic type.</span></span> <span data-ttu-id="5350d-289">したがって、ジェネリック型のサービスが <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> に複数存在する可能性がある場合は、<xref:System.Workflow.Runtime.WorkflowRuntime> のオーバーロードされたメソッドの 1 つを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-289">Therefore, you should use one of the overloaded methods of <xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A> if it is possible that multiple services of the generic type are present in the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="5350d-290">たとえば、ワークフロー ランタイム エンジンに複数の追跡サービスが設定されている場合、</span><span class="sxs-lookup"><span data-stu-id="5350d-290">For example, the workflow run-time engine may have multiple tracking services.</span></span> <span data-ttu-id="5350d-291"><xref:System.Workflow.Runtime.Tracking.TrackingService> 基本クラスを指定して追跡サービスを要求すると、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-291">If you request a tracking service by specifying the <xref:System.Workflow.Runtime.Tracking.TrackingService> base class, it is possible that an exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-292">次の例は、<xref:System.Workflow.Runtime.WorkflowRuntime> オブジェクトから単一サービス (この場合は <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> 型のサービス) を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-292">The following example demonstrates how to retrieve a single service from a <xref:System.Workflow.Runtime.WorkflowRuntime> object; in this case, a service of type <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</span></span> <span data-ttu-id="5350d-293">この例は、[ワークフロースレッド処理のサンプル](https://go.microsoft.com/fwlink/?LinkId=157350)です。</span><span class="sxs-lookup"><span data-stu-id="5350d-293">This example is from the [Workflow Threading Sample](https://go.microsoft.com/fwlink/?LinkId=157350).</span></span>  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-294"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-294">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> has already been disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-295">ジェネリック型のサービスが複数見つかりました。</span><span class="sxs-lookup"><span data-stu-id="5350d-295">More than one service of the generic type was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance GetWorkflow (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.Runtime.WorkflowInstance GetWorkflow(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWorkflow (instanceId As Guid) As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::Runtime::WorkflowInstance ^ GetWorkflow(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.GetWorkflow : Guid -&gt; System.Workflow.Runtime.WorkflowInstance" Usage="workflowRuntime.GetWorkflow instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="5350d-296">ワークフロー インスタンスの <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-296">The <see cref="T:System.Guid" /> of a workflow instance.</span></span></param>
        <summary><span data-ttu-id="5350d-297">指定した <see cref="T:System.Guid" /> を持つワークフロー インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="5350d-297">Retrieves the workflow instance that has the specified <see cref="T:System.Guid" />.</span></span></summary>
        <returns><span data-ttu-id="5350d-298">指定した <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> を持つ <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-298">The <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> that has the specified <see cref="T:System.Guid" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-299">`instanceId` によって指定されたワークフロー インスタンスが現在メモリ内にない場合、そのワークフロー インスタンスがメモリに読み込まれて実行がスケジュールされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-299">If `instanceId` specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</span></span> <span data-ttu-id="5350d-300">たとえば、ワークフロー インスタンスが中止された後、<xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> を呼び出してワークフロー インスタンスをメモリに再度読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="5350d-300">For example, after a workflow instance is aborted, you can call <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> to load the workflow instance back into memory.</span></span> <span data-ttu-id="5350d-301">この場合、永続性サービスによって、ワークフロー インスタンスの最後の永続化状態がメモリに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="5350d-301">In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-302">次のコード例は、`ReloadWorkflow` メソッドを呼び出す <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> メソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-302">The following code example demonstrates a `ReloadWorkflow` method that calls the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> method.</span></span> <span data-ttu-id="5350d-303">`ReloadWorkflow` メソッドは、`Runtime` クラスのすべてのメソッド、プロパティ、イベントにアクセスするための <xref:System.Workflow.Runtime.WorkflowRuntime> プロパティを持つ大きいクラスの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-303">The `ReloadWorkflow` method is part of a larger class that has a `Runtime` property to access all of the methods, properties, and events of the <xref:System.Workflow.Runtime.WorkflowRuntime> class.</span></span>  
  
 <span data-ttu-id="5350d-304">このコード例は、[カスタム永続性サービスのサンプル](https://go.microsoft.com/fwlink/?LinkId=157351)サンプルに含まれています。</span><span class="sxs-lookup"><span data-stu-id="5350d-304">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkId=157351) sample.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5350d-305">この例では、<xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> および <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> メソッドが共に、同じヘルパー メソッドを使用してワークフロー インスタンスをメモリに読み込むため、<xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> の呼び出しは冗長となります。</span><span class="sxs-lookup"><span data-stu-id="5350d-305">In the example, the call to <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> is redundant because both the <xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A> and <xref:System.Workflow.Runtime.WorkflowInstance.Load%2A> methods use the same internal helper method to load the workflow instance into memory.</span></span>  
  
 [!code-csharp[WF_Samples#265](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#265)]
 [!code-vb[WF_Samples#265](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#265)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-306">ワークフロー ランタイムが起動していません。</span><span class="sxs-lookup"><span data-stu-id="5350d-306">The workflow runtime is not started.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsStarted">
      <MemberSignature Language="C#" Value="public bool IsStarted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStarted" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStarted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStarted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStarted : bool" Usage="System.Workflow.Runtime.WorkflowRuntime.IsStarted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-307">ワークフロー ランタイム エンジンが起動されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="5350d-307">Gets a value that indicates whether the workflow run-time engine has been started.</span></span></summary>
        <value><span data-ttu-id="5350d-308">ワークフロー ランタイム エンジンが起動している場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5350d-308"><see langword="true" /> if the workflow run-time engine has been started; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5350d-309">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="5350d-309">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> は、ワークフロー ランタイム エンジンのサービスが実行中であることを示します。</span><span class="sxs-lookup"><span data-stu-id="5350d-310"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> indicates that the workflow run-time engine services are running.</span></span> <span data-ttu-id="5350d-311"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> は、ホストが <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>を呼び出すまで `false` ます。</span><span class="sxs-lookup"><span data-stu-id="5350d-311"><xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `false` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>.</span></span> <span data-ttu-id="5350d-312">ホストが `true` を呼び出すまで <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> のままです。</span><span class="sxs-lookup"><span data-stu-id="5350d-312">It remains `true` until the host calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5350d-313">実行中のワークフロー ランタイム エンジンにコア サービスを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="5350d-313">You cannot add core services to the workflow run-time engine while it is running.</span></span> <span data-ttu-id="5350d-314">コア サービスは、<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> クラス、<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> クラス、および <xref:System.Workflow.Runtime.Tracking.TrackingService> クラスから派生したサービスです。</span><span class="sxs-lookup"><span data-stu-id="5350d-314">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, and the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-315">次の例は、<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> オブジェクトの <xref:System.Workflow.Runtime.WorkflowRuntime> プロパティへのアクセス方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-315">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="5350d-316">この例では、ランタイムが起動されている場合はコンソールにメッセージが出力されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-316">In this example, if the runtime is started, a message is printed to the console.</span></span>  
  
 [!code-csharp[WF_Samples#21](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#21)]
 [!code-vb[WF_Samples#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Workflow.Runtime.WorkflowRuntime.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-317"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> に関連付けられた名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5350d-317">Gets or sets the name associated with the <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></summary>
        <value><span data-ttu-id="5350d-318">この <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> に関連付けられている名前。</span><span class="sxs-lookup"><span data-stu-id="5350d-318">The name associated with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-319">ワークフローランタイムエンジンの実行中に <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> を設定することはできません (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> は `true`)。</span><span class="sxs-lookup"><span data-stu-id="5350d-319">You cannot set <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-320">次の例は、<xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> オブジェクトの <xref:System.Workflow.Runtime.WorkflowRuntime> プロパティへのアクセス方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-320">The following example demonstrates how to access the <xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A> property of a <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span> <span data-ttu-id="5350d-321">この例では、ランタイムの名前が "Main Runtime" に設定されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-321">In this example, the name of the runtime is set to "Main Runtime".</span></span>  
  
 [!code-csharp[WF_Samples#20](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#20)]
 [!code-vb[WF_Samples#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-322">破棄されている <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> に <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> を設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="5350d-322">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> on a <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> that is disposed occurs.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-323">ワークフロー ランタイム エンジンの実行中に <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> を設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="5350d-323">An attempt to set <see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /> while the workflow run-time engine is running occurs.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveService">
      <MemberSignature Language="C#" Value="public void RemoveService (object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveService(object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveService (service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveService(System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.RemoveService : obj -&gt; unit" Usage="workflowRuntime.RemoveService service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="5350d-324">削除するサービスを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5350d-324">An object that represents the service to remove.</span></span></param>
        <summary><span data-ttu-id="5350d-325">指定したサービスをワークフロー ランタイム エンジンから削除します。</span><span class="sxs-lookup"><span data-stu-id="5350d-325">Removes the specified service from the workflow run-time engine.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-326">ワークフローランタイムエンジンの実行中にコアサービスを削除することはできません (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> は `true`)。</span><span class="sxs-lookup"><span data-stu-id="5350d-326">You cannot remove a core service while the workflow run-time engine is running (<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> is `true`).</span></span> <span data-ttu-id="5350d-327">コア サービスは、<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>クラス、または <xref:System.Workflow.Runtime.Tracking.TrackingService> クラスから派生したサービスです。</span><span class="sxs-lookup"><span data-stu-id="5350d-327">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="5350d-328">`service` が <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生している場合、<xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> は <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> によって実装された `service` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5350d-328">If `service` derives from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A> calls the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by `service`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-329">次の例では、<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> に <xref:System.Workflow.Runtime.WorkflowRuntime> が追加され、それが削除されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-329">In the following example, a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> is added and removed from the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span>  
  
 [!code-csharp[WF_Samples#16](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#16)]
 [!code-vb[WF_Samples#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5350d-330"><paramref name="service" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="5350d-330"><paramref name="service" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-331"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> が既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-331">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-332">ワークフロー ランタイム エンジンが起動されていて (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> が <see langword="true" />)、<paramref name="service" /> はコア サービスです。</span><span class="sxs-lookup"><span data-stu-id="5350d-332">The workflow run-time engine has started (<see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /> is <see langword="true" />) and <paramref name="service" /> is a core service.</span></span>  
  
<span data-ttu-id="5350d-333">- または -</span><span class="sxs-lookup"><span data-stu-id="5350d-333">-or-</span></span> 
 <span data-ttu-id="5350d-334"><paramref name="service" /> がワークフロー ランタイム エンジンに登録されていません。</span><span class="sxs-lookup"><span data-stu-id="5350d-334"><paramref name="service" /> is not registered with the workflow run-time engine.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServicesExceptionNotHandled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; ServicesExceptionNotHandled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServicesExceptionNotHandled As EventHandler(Of ServicesExceptionNotHandledEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::ServicesExceptionNotHandledEventArgs ^&gt; ^ ServicesExceptionNotHandled;" />
      <MemberSignature Language="F#" Value="member this.ServicesExceptionNotHandled : EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; " Usage="member this.ServicesExceptionNotHandled : System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event ServicesExceptionNotHandled As EventHandler(Of ServicesExceptionNotHandledEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.ServicesExceptionNotHandledEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-335"><see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> クラスから派生したサービスが <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /> を呼び出すと発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-335">Occurs when a service that is derived from the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> class calls <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-336"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生したサービスは、自身の実行中に処理できなかった例外が発生したことを <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> イベントのサブスクライバーに通知するために、<xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="5350d-336">A service that is derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class can call the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method to inform subscribers to the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event that an exception that it was unable to handle occurred during its execution.</span></span> <span data-ttu-id="5350d-337">回復機構を実装する目的で、このイベントに定期受信できます。</span><span class="sxs-lookup"><span data-stu-id="5350d-337">You can subscribe to this event to implement a recovery mechanism.</span></span>  
  
 <span data-ttu-id="5350d-338">このイベントは、ワークフロー インスタンスがワークフロー ランタイム エンジンによってまだ作成されていないときに例外が発生すると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-338">This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</span></span> <span data-ttu-id="5350d-339">このシナリオでは、例外が発生したことをホスト アプリケーションに通知する方法は、このイベントを発生させる以外にありません。</span><span class="sxs-lookup"><span data-stu-id="5350d-339">In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</span></span> <span data-ttu-id="5350d-340">ただし、ワークフロー ランタイム エンジンは、これを直接呼び出しません。</span><span class="sxs-lookup"><span data-stu-id="5350d-340">However, the workflow run-time engine does not call this directly.</span></span> <span data-ttu-id="5350d-341">代わりに、ワークフロー ランタイム エンジンは、例外をワークフロー インスタンスに配信します。インスタンスがない場合は、呼び出し元 (この場合は、実際にはこのイベントを発生させたサービス) にスローバックします。</span><span class="sxs-lookup"><span data-stu-id="5350d-341">Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</span></span> <span data-ttu-id="5350d-342">独自の永続性サービスまたはスケジューラ サービスを作成する場合は、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 基本メソッドを使用して自分でこのイベントを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-342">If you create your own persistence or scheduler service, you must implement this event yourself through the base <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> method.</span></span>  
  
 <span data-ttu-id="5350d-343"><xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> イベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> には、サービスを使用していたワークフロー インスタンスの <xref:System.Guid> と、処理できなかった <xref:System.Exception> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-343">For the <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Guid> of the workflow instance that was using the service and the <xref:System.Exception> that could not be handled.</span></span>  
  
 <span data-ttu-id="5350d-344">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-344">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-345">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-345">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-346">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> をイベント ハンドラーである `OnExceptionNotHandled` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-346">The code associates <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled> with an event handler, a method named `OnExceptionNotHandled`.</span></span>  
  
 <span data-ttu-id="5350d-347">このコード例は、[カスタム永続性サービスのサンプル](https://go.microsoft.com/fwlink/?LinkID=157351)の一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-347">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Started" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Started As EventHandler(Of WorkflowRuntimeEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Started;" />
      <MemberSignature Language="F#" Value="member this.Started : EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " Usage="member this.Started : System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of WorkflowRuntimeEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-348">ワークフロー ランタイム エンジンが起動すると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-348">Occurs when the workflow run-time engine is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-349"><xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> メソッドは、ワークフローランタイムエンジンのコアサービス構成を検証した後、<xref:System.Workflow.Runtime.WorkflowRuntime.Started> イベントを発生させ、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生した各サービスによって実装されている <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> メソッドを呼び出し、<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> をに設定しています。`true`。</span><span class="sxs-lookup"><span data-stu-id="5350d-349">The <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, and has set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `true`.</span></span> <span data-ttu-id="5350d-350"><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生した各サービスが開始される順序に関する保証はありません。また、ワークフロー ランタイム エンジンのこれらのサービスによっては、自身の開始タスクを完了するために、これらのサービスのうちの他のサービスが提供する機能に依存する場合があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-350">There is no guarantee about the order in which the services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</span></span> <span data-ttu-id="5350d-351">ワークフロー ランタイム エンジンのサービスは、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> イベントが発生したときにワークフロー ランタイム エンジンの他のサービスのサポートを必要とする最終的な開始タスクを実行するように <xref:System.Workflow.Runtime.WorkflowRuntime.Started> メソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="5350d-351">Workflow run-time engine services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event is raised.</span></span>  
  
 <span data-ttu-id="5350d-352">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-352">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-353">次の例では、<xref:System.Workflow.Runtime.WorkflowRuntime.Started> の <xref:System.Workflow.Runtime.WorkflowRuntime> イベントにイベント ハンドラーが追加されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-353">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="5350d-354">この例では、このハンドラーはコンソールに簡単なメッセージを出力する匿名メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5350d-354">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#15](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#15)]
 [!code-vb[WF_Samples#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRuntime">
      <MemberSignature Language="C#" Value="public void StartRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartRuntime();" />
      <MemberSignature Language="F#" Value="member this.StartRuntime : unit -&gt; unit" Usage="workflowRuntime.StartRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5350d-355">ワークフロー ランタイム エンジンとワークフロー ランタイム エンジンのサービスを開始します。</span><span class="sxs-lookup"><span data-stu-id="5350d-355">Starts the workflow run-time engine and the workflow run-time engine services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-356">このメソッドは、コア サービスの有効なセットが存在することを検証した後に、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生したサービスを開始します。</span><span class="sxs-lookup"><span data-stu-id="5350d-356">This method verifies that a valid set of core services exists and then starts any services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="5350d-357">次のコアサービスのうち1つだけを指定する必要があります。 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 基底クラスから派生したワークフロー `CommitWorkBatch` サービスと、<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 基本クラスから派生したスケジューラサービスです。</span><span class="sxs-lookup"><span data-stu-id="5350d-357">There must be one and only one of each of the following core services: a workflow `CommitWorkBatch` service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> base class and a scheduler service derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> base class.</span></span>  <span data-ttu-id="5350d-358">これらのコアサービスのいずれかまたは両方が存在しない場合は、ワークフローランタイムエンジンによって、適切な既定のサービスが提供されます。このサービスには、ワークフロー `CommitWorkBatch` サービスの <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> と scheduler サービスの <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> が含まれます。</span><span class="sxs-lookup"><span data-stu-id="5350d-358">If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService> for the workflow `CommitWorkBatch` service and <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> for the scheduler service.</span></span> <span data-ttu-id="5350d-359">永続性サービスはオプションですが、存在できる永続性サービスは 1 つまでです。</span><span class="sxs-lookup"><span data-stu-id="5350d-359">A persistence service is optional, but there can be at most only one persistence service present.</span></span> <span data-ttu-id="5350d-360">サービス構成を検証した後、<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> は、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> クラスから派生したすべてのサービスについて <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5350d-360">After it has validated the service configuration, <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> calls <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> on all of the services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="5350d-361">最後に、ワークフロー ランタイム エンジンは <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> を設定し、<xref:System.Workflow.Runtime.WorkflowRuntime.Started> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="5350d-361">Finally, the workflow run-time engine sets <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> and raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Started> event.</span></span>  
  
 <span data-ttu-id="5350d-362">ワークフロー ランタイム エンジンが起動した後は、コア サービスを追加することも削除することもできません。</span><span class="sxs-lookup"><span data-stu-id="5350d-362">You cannot add or remove core services after the workflow run-time engine is started.</span></span> <span data-ttu-id="5350d-363">コア サービスは、<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>クラス、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>クラス、または <xref:System.Workflow.Runtime.Tracking.TrackingService> クラスから派生したサービスです。</span><span class="sxs-lookup"><span data-stu-id="5350d-363">Core services are services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> class, the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class, or the <xref:System.Workflow.Runtime.Tracking.TrackingService> class.</span></span>  <span data-ttu-id="5350d-364">ワークフロー ランタイム エンジンの実行中に <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> を呼び出した場合、アクションは何も実行されません。</span><span class="sxs-lookup"><span data-stu-id="5350d-364">If you call <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> while the workflow run-time engine is running, no action is performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-365">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-365">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-366">このコードは、<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> が <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> インスタンスを作成した後に <xref:System.Workflow.Runtime.WorkflowRuntime> を呼び出してサービスをランタイムに追加し、その後 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5350d-366">The code calls the <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> after the <xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A> creates a <xref:System.Workflow.Runtime.WorkflowRuntime> instance and after it calls <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> to add services to the runtime.</span></span> <span data-ttu-id="5350d-367">他の処理が行われる前にも <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> を呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-367">It also calls <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> before any other processing occurs.</span></span>  
  
 <span data-ttu-id="5350d-368">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkId=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-368">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-369"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> は破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-369">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5350d-370">この <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> に登録されているサービス ワークフロー <see langword="CommitWorkBatch" /> サービスが複数あります。</span><span class="sxs-lookup"><span data-stu-id="5350d-370">There is more than one service workflow <see langword="CommitWorkBatch" /> service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span>  
  
<span data-ttu-id="5350d-371">- または -</span><span class="sxs-lookup"><span data-stu-id="5350d-371">-or-</span></span> 
<span data-ttu-id="5350d-372">この <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> に登録されているスケジューラ サービスが複数あります。</span><span class="sxs-lookup"><span data-stu-id="5350d-372">There is more than one scheduler service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span>  
  
<span data-ttu-id="5350d-373">- または -</span><span class="sxs-lookup"><span data-stu-id="5350d-373">-or-</span></span> 
<span data-ttu-id="5350d-374">この <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> に登録されている永続性サービスが複数あります。</span><span class="sxs-lookup"><span data-stu-id="5350d-374">There is more than one persistence service registered with this <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; Stopped" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Stopped As EventHandler(Of WorkflowRuntimeEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowRuntimeEventArgs ^&gt; ^ Stopped;" />
      <MemberSignature Language="F#" Value="member this.Stopped : EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " Usage="member this.Stopped : System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event Stopped As EventHandler(Of WorkflowRuntimeEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowRuntimeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-375">ワークフロー ランタイム エンジンが停止すると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-375">Occurs when the workflow run-time engine is stopped.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-376"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> メソッドは、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> クラスから派生したその各サービスによって実装された <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> メソッドを呼び出した後に、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="5350d-376">The <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> method raises the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event after it has invoked the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> method implemented by each of its services that derive from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class.</span></span>  <span data-ttu-id="5350d-377">ワークフロー ランタイム エンジンのこれらのサービスが停止する順序に関する保証はありません。また、これらのサービスによっては、他のサービスが依存する機能を、そのサービスが停止するまで保持しておくことが必要な場合があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-377">There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</span></span> <span data-ttu-id="5350d-378">そのようなサービスは、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> イベントが発生したときに残りのシャットダウン ロジックを実行するように <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> メソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="5350d-378">Such services can override the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType> method to perform any residual shutdown logic when the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event is raised.</span></span>  
  
 <span data-ttu-id="5350d-379">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-379">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-380">次の例では、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> の <xref:System.Workflow.Runtime.WorkflowRuntime> イベントにイベント ハンドラーが追加されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-380">In the following example, an event handler is added to the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event of the <xref:System.Workflow.Runtime.WorkflowRuntime>.</span></span> <span data-ttu-id="5350d-381">この例では、このハンドラーはコンソールに簡単なメッセージを出力する匿名メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5350d-381">In this example, the handler is an anonymous method that prints a simple message to the console.</span></span>  
  
 [!code-csharp[WF_Samples#14](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#14)]
 [!code-vb[WF_Samples#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopRuntime">
      <MemberSignature Language="C#" Value="public void StopRuntime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopRuntime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopRuntime ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopRuntime();" />
      <MemberSignature Language="F#" Value="member this.StopRuntime : unit -&gt; unit" Usage="workflowRuntime.StopRuntime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5350d-382">ワークフロー ランタイム エンジンとランタイム サービスを停止します。</span><span class="sxs-lookup"><span data-stu-id="5350d-382">Stops the workflow run-time engine and the run-time services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-383">このメソッドは、ワークフローランタイムエンジンが各ワークフローインスタンスをアンロードし、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> クラスから派生したすべてのサービスを停止し、<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> を `false`に設定し、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="5350d-383">This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> class, set <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> to `false`, and raise the <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> event.</span></span>  
  
 <span data-ttu-id="5350d-384"><xref:System.Workflow.Runtime.WorkflowRuntime> を正常にシャットダウンするには、<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> を呼び出す前に、<xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5350d-384">To shut down the <xref:System.Workflow.Runtime.WorkflowRuntime> gracefully, call <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before you call <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="5350d-385">詳細については、<xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-385">For more information, see the <xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-386">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-386">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-387"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> は、ランタイムに関連付けられた他の処理をホストがすべて完了した後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-387"><xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> is called after the host has completed all other processing associated with the runtime.</span></span>  
  
 <span data-ttu-id="5350d-388">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkId=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-388">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#259](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#259)]
 [!code-vb[WF_Samples#259](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#259)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="5350d-389"><see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> が既に破棄されています。</span><span class="sxs-lookup"><span data-stu-id="5350d-389">The <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> is already disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkflowAborted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowAborted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowAborted As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowAborted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowAborted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowAborted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowAborted As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-390">ワークフロー インスタンスが中止されると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-390">Occurs when a workflow instance is aborted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-391"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> が発生するタイミングは、ワークフロー インスタンスのすべての保留中作業がクリアされてからメモリ内のワークフロー インスタンスが無効化されるまでの間です。</span><span class="sxs-lookup"><span data-stu-id="5350d-391"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</span></span> <span data-ttu-id="5350d-392"><xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType> を呼び出すことによって、ワークフロー インスタンスを中止することができます。</span><span class="sxs-lookup"><span data-stu-id="5350d-392">You can abort a workflow instance by calling <xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5350d-393">このイベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> にはイベントに関連付けられている <xref:System.Workflow.Runtime.WorkflowInstance> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-393">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="5350d-394">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-394">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-395">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-395">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-396">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> をイベント ハンドラーである `OnWorkflowAborted` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-396">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted> with an event handler, a method named `OnWorkflowAborted`.</span></span>  
  
 <span data-ttu-id="5350d-397">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkID=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-397">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#141](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#141)]
 [!code-vb[WF_Samples#141](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#141)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; WorkflowCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowCompleted As EventHandler(Of WorkflowCompletedEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowCompletedEventArgs ^&gt; ^ WorkflowCompleted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowCompleted : EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; " Usage="member this.WorkflowCompleted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCompleted As EventHandler(Of WorkflowCompletedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-398">ワークフロー インスタンスが完了すると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-398">Occurs when a workflow instance has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-399"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> が発生するタイミングは、ワークフロー インスタンスが完了してからメモリ内のインスタンスが無効化されるまでの間です。</span><span class="sxs-lookup"><span data-stu-id="5350d-399"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> is raised after the workflow instance has completed but before the instance is invalidated in memory.</span></span>  
  
 <span data-ttu-id="5350d-400"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> イベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> には <xref:System.Workflow.Runtime.WorkflowInstance> とその出力パラメーターが格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-400">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and its output parameters.</span></span>  
  
 <span data-ttu-id="5350d-401">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-401">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-402">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-402">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-403">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> をイベント ハンドラーである `OnWorkflowCompleted` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-403">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="5350d-404">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkId=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-404">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkId=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowCreated As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowCreated;" />
      <MemberSignature Language="F#" Value="member this.WorkflowCreated : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowCreated : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowCreated As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-405">ワークフロー インスタンスが作成されると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-405">Occurs when a workflow instance is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-406">ワークフロー ランタイム エンジンが <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> イベントを発生させるタイミングは、ワークフロー インスタンスが完全に構築されてからアクティビティが処理され始めるまでの間です。</span><span class="sxs-lookup"><span data-stu-id="5350d-406">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> event after the workflow instance is completely constructed but before activities are processed.</span></span> <span data-ttu-id="5350d-407">このイベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> にはイベントに関連付けられている <xref:System.Workflow.Runtime.WorkflowInstance> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-407">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="5350d-408">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-408">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-409">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-409">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-410">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> をイベント ハンドラーである `OnWorkflowCreated` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-410">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated> with an event handler, a method named `OnWorkflowCreated`.</span></span>  
  
 <span data-ttu-id="5350d-411">このコード例は、[カスタム永続性サービスのサンプル](https://go.microsoft.com/fwlink/?LinkID=15735)の一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-411">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowIdled">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowIdled" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowIdled As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowIdled;" />
      <MemberSignature Language="F#" Value="member this.WorkflowIdled : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowIdled : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowIdled As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-412">ワークフロー インスタンスがアイドル状態になると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-412">Occurs when a workflow instance enters the idle state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-413">ワークフロー ランタイム エンジンは、ワークフロー インスタンスがアイドル状態になると <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> イベントを発生させます。たとえば、<xref:System.Workflow.Activities.DelayActivity> アクティビティが完了するのをワークフローが待機しているときです。</span><span class="sxs-lookup"><span data-stu-id="5350d-413">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <xref:System.Workflow.Activities.DelayActivity> activity to complete.</span></span>  
  
 <span data-ttu-id="5350d-414">このイベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> にはイベントに関連付けられている <xref:System.Workflow.Runtime.WorkflowInstance> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-414">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="5350d-415">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-415">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-416">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-416">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-417">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> をイベント ハンドラーである `OnWorkflowIdled` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-417">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled> with an event handler, a method named `OnWorkflowIdled`.</span></span>  
  
 <span data-ttu-id="5350d-418">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkID=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-418">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#258](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#258)]
 [!code-vb[WF_Samples#258](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#258)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowLoaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowLoaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowLoaded As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowLoaded;" />
      <MemberSignature Language="F#" Value="member this.WorkflowLoaded : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowLoaded : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowLoaded As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-419">ワークフロー インスタンスがメモリに読み込まれると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-419">Occurs when the workflow instance is loaded into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-420"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> が発生するタイミングは、永続性サービスがワークフロー インスタンスを復元し終えてからワークフロー ランタイム エンジンがアクティビティを実行し始めるまでの間です。</span><span class="sxs-lookup"><span data-stu-id="5350d-420"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</span></span>  
  
 <span data-ttu-id="5350d-421"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> イベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> にはイベントに関連付けられている <xref:System.Workflow.Runtime.WorkflowInstance> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-421">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="5350d-422">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-422">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-423">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-423">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-424">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> をイベント ハンドラーである `OnWorkflowLoad` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-424">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded> with an event handler, a method named `OnWorkflowLoad`.</span></span>  
  
 <span data-ttu-id="5350d-425">このコード例は、[カスタム永続性サービス](https://go.microsoft.com/fwlink/?LinkID=157351)のサンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-425">This code example is part of the [Custom Persistence Service](https://go.microsoft.com/fwlink/?LinkID=157351) sample.</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowPersisted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowPersisted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowPersisted As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowPersisted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowPersisted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowPersisted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowPersisted As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-426">ワークフロー インスタンスの状態が永続化されると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-426">Occurs when the state of a workflow instance is persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-427">ワークフロー インスタンスは、さまざまな理由で永続化される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5350d-427">The workflow instance can be persisted for many reasons.</span></span> <span data-ttu-id="5350d-428">たとえば、ホストがワークフロー インスタンスに対する <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> を呼び出した場合や、インスタンスがアイドル状態になったため、またはアトミックのスコープが完了したために、ワークフロー ランタイム エンジンがワークフロー インスタンスを永続化する場合です。</span><span class="sxs-lookup"><span data-stu-id="5350d-428">For example, the host can call <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</span></span> <span data-ttu-id="5350d-429"><xref:System.Workflow.Runtime.WorkflowRuntime> に永続性サービスが存在する場合、ランタイムはワークフロー インスタンスの状態がメモリに保存された後に <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> を発生させます。</span><span class="sxs-lookup"><span data-stu-id="5350d-429">If a persistence service is present in the <xref:System.Workflow.Runtime.WorkflowRuntime>, <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> is raised by the runtime after the state of the workflow instance is saved to memory.</span></span> <span data-ttu-id="5350d-430">永続性サービスが存在しない場合、イベントは発生しますが、インスタンスの状態は保存されません。</span><span class="sxs-lookup"><span data-stu-id="5350d-430">If a persistence service is not present, the event is still raised but the instance state is not saved.</span></span> <span data-ttu-id="5350d-431">ワークフロー インスタンスがアンロードされるために <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> イベントが発生する場合、このイベントの後に <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-431">If the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event occurs because the workflow instance is being unloaded, it is followed by a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
 <span data-ttu-id="5350d-432"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> イベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> にはイベントに関連付けられている <xref:System.Workflow.Runtime.WorkflowInstance> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-432">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="5350d-433">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-433">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-434">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-434">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-435">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> をイベント ハンドラーである `OnWorkflowPersisted` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-435">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> with an event handler, a method named `OnWorkflowPersisted`.</span></span>  
  
 <span data-ttu-id="5350d-436">このコード例は、[カスタム永続性サービスのサンプル](https://go.microsoft.com/fwlink/?LinkID=15735)の一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-436">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=15735).</span></span>  
  
 [!code-csharp[WF_Samples#279](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#279)]
 [!code-vb[WF_Samples#279](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#279)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowResumed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowResumed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowResumed As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowResumed;" />
      <MemberSignature Language="F#" Value="member this.WorkflowResumed : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowResumed : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowResumed As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-437">ワークフロー インスタンスの実行が中断後に再開されると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-437">Occurs when execution of a workflow instance is resumed following a suspension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-438">ワークフロー ランタイム エンジンは、ワークフロー インスタンスがスケジュールされる直前に <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="5350d-438">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event just before the workflow instance is scheduled.</span></span> <span data-ttu-id="5350d-439"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> イベントは通常、<xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType> の明示的呼び出しが理由で発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-439">The <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is usually raised because of an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5350d-440">ただし、ワークフロー ランタイム エンジンは、インスタンスを一時的に中断して、たとえばワークフロー変更を適用するなどの操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="5350d-440">However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</span></span> <span data-ttu-id="5350d-441">この場合、その操作後にランタイムがワークフロー インスタンスの実行を再開したときに <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-441">In this case, the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event is raised when the runtime resumes execution of the workflow instance following the operation.</span></span>  
  
 <span data-ttu-id="5350d-442"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> イベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> にはイベントに関連付けられている <xref:System.Workflow.Runtime.WorkflowInstance> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-442">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="5350d-443">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-443">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-444">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-444">The following code example demonstrates how you can use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-445">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> をイベント ハンドラーである `OnWorkflowResume` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-445">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed> with an event handler, a method named `OnWorkflowResume`.</span></span>  
  
 <span data-ttu-id="5350d-446">このコード例は、[中断と終了のサンプル](https://go.microsoft.com/fwlink/?LinkId=157402)に含まれています。</span><span class="sxs-lookup"><span data-stu-id="5350d-446">This code example is part of the [Suspend and Terminate Sample](https://go.microsoft.com/fwlink/?LinkId=157402).</span></span>  
  
 [!code-csharp[WF_Samples#171](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#171)]
 [!code-vb[WF_Samples#171](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowStarted" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowStarted As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowStarted;" />
      <MemberSignature Language="F#" Value="member this.WorkflowStarted : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowStarted : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowStarted As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-447">ワークフロー インスタンスが開始されると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-447">Occurs when a workflow instance has been started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-448">ワークフロー ランタイム エンジンは、ルート アクティビティの実行スケジュールによってワークフロー インスタンスが開始された後に <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="5350d-448">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> event after the workflow instance is started by scheduling the root activity for execution.</span></span> <span data-ttu-id="5350d-449">このイベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> にはイベントに関連付けられている <xref:System.Workflow.Runtime.WorkflowInstance> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-449">For this event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
 <span data-ttu-id="5350d-450">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-450">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-451">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-451">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-452">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> をイベント ハンドラーである `OnWorkflowStarted` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-452">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted> with an event handler, a method named `OnWorkflowStarted`.</span></span>  
  
 <span data-ttu-id="5350d-453">このコード例は、[ホスト通信サンプル](https://go.microsoft.com/fwlink/?LinkId=157406)の一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-453">This code example is part of the [Host Communication Sample](https://go.microsoft.com/fwlink/?LinkId=157406).</span></span>  
  
 [!code-csharp[WF_Samples#297](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets38.cs#297)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowSuspended">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; WorkflowSuspended" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowSuspended As EventHandler(Of WorkflowSuspendedEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowSuspendedEventArgs ^&gt; ^ WorkflowSuspended;" />
      <MemberSignature Language="F#" Value="member this.WorkflowSuspended : EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; " Usage="member this.WorkflowSuspended : System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowSuspended As EventHandler(Of WorkflowSuspendedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-454">ワークフロー インスタンスが中断されると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-454">Occurs when a workflow instance is suspended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-455">ワークフロー インスタンスは、ホストによる <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> メソッドの呼び出し、<xref:System.Workflow.ComponentModel.SuspendActivity> アクティビティ、またはワークフロー ランタイム エンジンによる暗黙的な操作によって中断します。</span><span class="sxs-lookup"><span data-stu-id="5350d-455">The workflow instance can be suspended by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A> method, by a <xref:System.Workflow.ComponentModel.SuspendActivity> activity, or implicitly by the workflow run-time engine.</span></span> <span data-ttu-id="5350d-456">たとえば、ワークフロー ランタイム エンジンは、インスタンスに動的変更を適用するときにインスタンスを一時的に中断します。</span><span class="sxs-lookup"><span data-stu-id="5350d-456">For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</span></span>  
  
 <span data-ttu-id="5350d-457"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> イベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> には、<xref:System.Workflow.Runtime.WorkflowInstance> と、インスタンスが中断した理由を示す文字列が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-457">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and a string that describes the reason the instance was suspended.</span></span>  
  
 <span data-ttu-id="5350d-458">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-458">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-459">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-459">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-460">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> をイベント ハンドラーである `OnWorkflowSuspended` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-460">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended> with an event handler, a method named `OnWorkflowSuspended`.</span></span>  
  
 <span data-ttu-id="5350d-461">このコード例は、[中断と終了のサンプル](https://go.microsoft.com/fwlink/?LinkID=157402)に含まれています。</span><span class="sxs-lookup"><span data-stu-id="5350d-461">This code example is part of the [Suspend and Terminate Sample](https://go.microsoft.com/fwlink/?LinkID=157402).</span></span>  
  
 [!code-csharp[WF_Samples#170](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#170)]
 [!code-vb[WF_Samples#170](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowTerminated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; WorkflowTerminated" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowTerminated As EventHandler(Of WorkflowTerminatedEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowTerminatedEventArgs ^&gt; ^ WorkflowTerminated;" />
      <MemberSignature Language="F#" Value="member this.WorkflowTerminated : EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; " Usage="member this.WorkflowTerminated : System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowTerminated As EventHandler(Of WorkflowTerminatedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-462">ワークフロー インスタンスが終了すると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-462">Occurs when a workflow instance is terminated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5350d-463">ワークフローは、ホストによる <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> メソッドの呼び出し、または <xref:System.Workflow.ComponentModel.TerminateActivity> アクティビティによって、あるいは未処理の例外が発生したときにワークフロー ランタイム エンジンによって終了します。</span><span class="sxs-lookup"><span data-stu-id="5350d-463">The workflow can be terminated by the host through a call to the <xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A> method, by a <xref:System.Workflow.ComponentModel.TerminateActivity> activity, or by the workflow run-time engine when an unhandled exception occurs.</span></span> <span data-ttu-id="5350d-464">ワークフロー ランタイム エンジンが <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> イベントを発生させるタイミングは、ワークフロー インスタンスが終了し、そのワークフロー インスタンスがメモリ内で無効化されるまでの間です。</span><span class="sxs-lookup"><span data-stu-id="5350d-464">The workflow run-time engine raises the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> event after the workflow instance is terminated, but before it is invalidated in memory.</span></span>  
  
 <span data-ttu-id="5350d-465"><xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> イベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> には、<xref:System.Workflow.Runtime.WorkflowInstance> と、インスタンスが終了した理由に関する情報 (<xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> プロパティ内) が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-465">For the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> and information about the reason the instance was terminated in the <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5350d-466">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-466">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5350d-467">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-467">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-468">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> をイベント ハンドラーである `OnWorkflowCompleted` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-468">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> with an event handler, a method named `OnWorkflowCompleted`.</span></span>  
  
 <span data-ttu-id="5350d-469">このコード例は、「[ワークフローの取り消し](https://go.microsoft.com/fwlink/?LinkID=157346)」サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-469">This code example is part of the [Canceling a Workflow](https://go.microsoft.com/fwlink/?LinkID=157346) sample.</span></span>  
  
 [!code-csharp[WF_Samples#260](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#260)]
 [!code-vb[WF_Samples#260](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#260)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowUnloaded">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Runtime.WorkflowEventArgs&gt; WorkflowUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WorkflowUnloaded As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Runtime::WorkflowEventArgs ^&gt; ^ WorkflowUnloaded;" />
      <MemberSignature Language="F#" Value="member this.WorkflowUnloaded : EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " Usage="member this.WorkflowUnloaded : System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event WorkflowUnloaded As EventHandler(Of WorkflowEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Runtime.WorkflowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5350d-470">ワークフロー インスタンスがメモリからアンロードされると発生します。</span><span class="sxs-lookup"><span data-stu-id="5350d-470">Occurs when the workflow instance is unloaded from memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="5350d-471">ワークフロー インスタンスは、<xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A> の明示的呼び出し、またはワークフロー ランタイム エンジンによる自身のセマンティクスに基づく暗黙的な操作によって、メモリからアンロードされます。</span><span class="sxs-lookup"><span data-stu-id="5350d-471">A workflow instance can be unloaded from memory by an explicit call to <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A>, or implicitly by the workflow run-time engine according to its own semantics.</span></span> <span data-ttu-id="5350d-472">たとえば、ワークフローランタイムエンジンは、インスタンスがアイドル状態になった場合にワークフローインスタンスをアンロードし、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> を `true`するための <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> をランタイムに追加します。</span><span class="sxs-lookup"><span data-stu-id="5350d-472">For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> added for which <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A> is `true`.</span></span>  
  
<span data-ttu-id="5350d-473">ワークフローランタイムエンジンは、ワークフローインスタンスの状態が正常に永続化された後、メモリ内のインスタンスが無効になる前に、`WorkflowUnloaded` イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="5350d-473">The workflow run-time engine raises the `WorkflowUnloaded` event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</span></span> <span data-ttu-id="5350d-474">したがって、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> イベントが <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> イベントより前に発生することになります。</span><span class="sxs-lookup"><span data-stu-id="5350d-474">Therefore, a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted> event precedes the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> event.</span></span>  
  
<span data-ttu-id="5350d-475">`WorkflowUnloaded` イベントでは、送信元に <xref:System.Workflow.Runtime.WorkflowRuntime> が含まれ、<xref:System.Workflow.Runtime.WorkflowEventArgs> にはイベントに関連付けられている <xref:System.Workflow.Runtime.WorkflowInstance> が格納されます。</span><span class="sxs-lookup"><span data-stu-id="5350d-475">For the `WorkflowUnloaded` event, the sender contains the <xref:System.Workflow.Runtime.WorkflowRuntime> and <xref:System.Workflow.Runtime.WorkflowEventArgs> contains the <xref:System.Workflow.Runtime.WorkflowInstance> associated with the event.</span></span>  
  
<span data-ttu-id="5350d-476">イベントの処理の詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5350d-476">For more information about handling events, see [Handling and raising events](~/docs/standard/events/index.md).</span></span>  
  
## Examples

<span data-ttu-id="5350d-477">次のコード例は、ワークフローのホストから <xref:System.Workflow.Runtime.WorkflowRuntime> の機能を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5350d-477">The following code example demonstrates how to use <xref:System.Workflow.Runtime.WorkflowRuntime> functionality from a workflow host.</span></span> <span data-ttu-id="5350d-478">このコードでは、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> をイベント ハンドラーである `OnWorkflowUnload` という名前のメソッドに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="5350d-478">The code associates the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded> with an event handler, a method named `OnWorkflowUnload`.</span></span>  
  
 <span data-ttu-id="5350d-479">このコード例は、[カスタム永続性サービスのサンプル](https://go.microsoft.com/fwlink/?LinkID=157351)の一部です。</span><span class="sxs-lookup"><span data-stu-id="5350d-479">This code example is part of the [Custom Persistence Service Sample](https://go.microsoft.com/fwlink/?LinkID=157351).</span></span>  
  
 [!code-csharp[WF_Samples#271](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#271)]
 [!code-vb[WF_Samples#271](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#271)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
