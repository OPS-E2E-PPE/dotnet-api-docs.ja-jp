<Type Name="NumberFormatInfo" FullName="System.Globalization.NumberFormatInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb234e44676f209552e05db22e91399e433a362c" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82312838" /></Metadata><TypeSignature Language="C#" Value="public sealed class NumberFormatInfo : IFormatProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.IFormatProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.NumberFormatInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumberFormatInfo&#xA;Implements IFormatProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumberFormatInfo sealed : IFormatProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type NumberFormatInfo = class&#xA;    interface IFormatProvider" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public sealed class NumberFormatInfo : ICloneable, IFormatProvider" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NumberFormatInfo&#xA;Implements ICloneable, IFormatProvider" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class NumberFormatInfo sealed : ICloneable, IFormatProvider" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type NumberFormatInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NumberFormatInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Globalization" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Globalization" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2659e-101">数値を書式設定および解析するためのカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="2659e-101">Provides culture-specific information for formatting and parsing numeric values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-102"><xref:System.Globalization.NumberFormatInfo> クラスには、数値を書式設定および解析するときに使用されるカルチャ固有の情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-102">The <xref:System.Globalization.NumberFormatInfo> class contains culture-specific information that is used when you format and parse numeric values.</span></span> <span data-ttu-id="2659e-103">この情報には、通貨記号、小数点の記号、桁区切り記号、および正符号と負符号の記号が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2659e-103">This information includes the currency symbol, the decimal symbol, the group separator symbol, and the symbols for positive and negative signs.</span></span>  
  
-   [<span data-ttu-id="2659e-104">NumberFormatInfo オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="2659e-104">Instantiating a NumberFormatInfo object</span></span>](#Instantiating)  
  
    -   [<span data-ttu-id="2659e-105">現在のカルチャの場合</span><span class="sxs-lookup"><span data-stu-id="2659e-105">For the current culture</span></span>](#Instantiating_Current)  
  
    -   [<span data-ttu-id="2659e-106">インバリアントカルチャの場合</span><span class="sxs-lookup"><span data-stu-id="2659e-106">For the invariant culture</span></span>](#Instantiating_Invariant)  
  
    -   [<span data-ttu-id="2659e-107">特定のカルチャの場合</span><span class="sxs-lookup"><span data-stu-id="2659e-107">For a specific culture</span></span>](#Instantiating_Specific)  
  
    -   [<span data-ttu-id="2659e-108">ニュートラルカルチャの場合</span><span class="sxs-lookup"><span data-stu-id="2659e-108">For a neutral culture</span></span>](#Instantiating_Neutral)  
  
-   [<span data-ttu-id="2659e-109">NumberFormatInfo と動的データ</span><span class="sxs-lookup"><span data-stu-id="2659e-109">NumberFormatInfo and dynamic data</span></span>](#dynamic)  
  
-   [<span data-ttu-id="2659e-110">IFormatProvider、NumberFormatInfo、および数値の書式設定</span><span class="sxs-lookup"><span data-stu-id="2659e-110">IFormatProvider, NumberFormatInfo, and numeric formatting</span></span>](#formatProvider)  
  
-   [<span data-ttu-id="2659e-111">書式指定文字列と NumberFormatInfo プロパティ</span><span class="sxs-lookup"><span data-stu-id="2659e-111">Format strings and NumberFormatInfo properties</span></span>](#properties)  
  
-   [<span data-ttu-id="2659e-112">NumberFormatInfo プロパティの変更</span><span class="sxs-lookup"><span data-stu-id="2659e-112">Modifying NumberFormatInfo properties</span></span>](#modifying)  
  
    -   [<span data-ttu-id="2659e-113">通貨記号とパターンの変更</span><span class="sxs-lookup"><span data-stu-id="2659e-113">Modifying the currency symbol and pattern</span></span>](#currency)  
  
    -   [<span data-ttu-id="2659e-114">National id 番号の書式設定</span><span class="sxs-lookup"><span data-stu-id="2659e-114">Formatting a national identification number</span></span>](#id)  
  
-   [<span data-ttu-id="2659e-115">数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="2659e-115">Parsing numeric strings</span></span>](#parsing)  
  
    -   [<span data-ttu-id="2659e-116">ユーザー文字列の解析</span><span class="sxs-lookup"><span data-stu-id="2659e-116">Parsing user strings</span></span>](#ParseUser)  
  
    -   [<span data-ttu-id="2659e-117">数値データのシリアル化と逆シリアル化</span><span class="sxs-lookup"><span data-stu-id="2659e-117">Serializing and deserializing numeric data</span></span>](#ParseSerial)  
  
<a name="Instantiating"></a>   
## <a name="instantiating-a-numberformatinfo-object"></a><span data-ttu-id="2659e-118">NumberFormatInfo オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="2659e-118">Instantiating a NumberFormatInfo object</span></span>  
 <span data-ttu-id="2659e-119">現在のカルチャ、インバリアントカルチャ、特定のカルチャ、またはニュートラルカルチャの書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトをインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-119">You can instantiate a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of the current culture, the invariant culture, a specific culture, or a neutral culture.</span></span>  
  
<a name="Instantiating_Current"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-current-culture"></a><span data-ttu-id="2659e-120">現在のカルチャの NumberFormatInfo オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="2659e-120">Instantiating a NumberFormatInfo object for the current culture</span></span>  
 <span data-ttu-id="2659e-121">次のいずれかの方法で、現在のスレッドカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトをインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-121">You can instantiate a <xref:System.Globalization.NumberFormatInfo> object for the current thread culture in any of the following ways.</span></span> <span data-ttu-id="2659e-122">どちらの場合も、返される <xref:System.Globalization.NumberFormatInfo> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-122">In each case, the returned <xref:System.Globalization.NumberFormatInfo> object is read-only.</span></span>  
  
-   <span data-ttu-id="2659e-123"><xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティから現在のスレッドカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを取得し、その <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> プロパティから <xref:System.Globalization.CultureInfo> オブジェクトを取得する。</span><span class="sxs-lookup"><span data-stu-id="2659e-123">By retrieving a <xref:System.Globalization.CultureInfo> object that represents the current thread culture from the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property, and retrieving the <xref:System.Globalization.CultureInfo> object from its <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2659e-124">`static` (`Shared` Visual Basic) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> プロパティによって返される <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得する。</span><span class="sxs-lookup"><span data-stu-id="2659e-124">By retrieving the <xref:System.Globalization.NumberFormatInfo> object returned by the `static` (`Shared` in Visual Basic) <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> property.</span></span>  
  
-   <span data-ttu-id="2659e-125">現在のカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを使用して <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> メソッドを呼び出す。</span><span class="sxs-lookup"><span data-stu-id="2659e-125">By calling the <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> method with a <xref:System.Globalization.CultureInfo> object that represents the current culture.</span></span>  
  
 <span data-ttu-id="2659e-126">次の例では、この3つの方法を使用して、現在のカルチャの書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="2659e-126">The following example uses these three ways to create <xref:System.Globalization.NumberFormatInfo> objects that represent the formatting conventions of the current culture.</span></span> <span data-ttu-id="2659e-127">また、<xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> プロパティの値を取得して、各オブジェクトが読み取り専用であることを示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-127">It also retrieves the value of the <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> property to illustrate that each object is read-only.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)]  
  
 <span data-ttu-id="2659e-128">次のいずれかの方法で、現在のスレッドカルチャの規則を表す書き込み可能 <xref:System.Globalization.NumberFormatInfo> オブジェクトを作成できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-128">You can create a writable <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current thread culture in any of the following ways:</span></span>  
  
-   <span data-ttu-id="2659e-129">前のコード例で示した方法で <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得し、返された <xref:System.Globalization.NumberFormatInfo> オブジェクトで <xref:System.Globalization.NumberFormatInfo.Clone%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2659e-129">By retrieving a <xref:System.Globalization.NumberFormatInfo> object in any of the ways illustrated in the previous code example, and calling the <xref:System.Globalization.NumberFormatInfo.Clone%2A> method on the returned <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="2659e-130">これにより、元の <xref:System.Globalization.NumberFormatInfo> オブジェクトのコピーが作成されます。ただし、<xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> プロパティは `false`。</span><span class="sxs-lookup"><span data-stu-id="2659e-130">This creates a copy of the original <xref:System.Globalization.NumberFormatInfo> object, except that its <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="2659e-131"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを作成し、その <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> プロパティを使用して <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得する。</span><span class="sxs-lookup"><span data-stu-id="2659e-131">By calling the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method to create a <xref:System.Globalization.CultureInfo> object that represents the current culture, and then using its <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> property to retrieve the <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 <span data-ttu-id="2659e-132">次の例では、<xref:System.Globalization.NumberFormatInfo> オブジェクトをインスタンス化するこれらの2つの方法を示し、<xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> プロパティの値を表示して、オブジェクトが読み取り専用ではないことを示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-132">The following example illustrates these two ways of instantiating a <xref:System.Globalization.NumberFormatInfo> object, and displays the value of its <xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A> property to illustrate that the object is not read-only.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)]  
  
 <span data-ttu-id="2659e-133">Windows オペレーティングシステムでは、ユーザーはコントロールパネルの **[地域と言語]** 項目を使用して、数値の書式設定および解析操作で使用される <xref:System.Globalization.NumberFormatInfo> のプロパティ値の一部をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="2659e-133">Note that the Windows operating system allows the user to override some of the <xref:System.Globalization.NumberFormatInfo> property values used in numeric formatting and parsing operations through the **Region and Language** item in Control Panel.</span></span> <span data-ttu-id="2659e-134">たとえば、カルチャが英語 (米国) のユーザーは、通貨値を既定の $1.1 ではなく1.1 米ドルとして表示することができます。</span><span class="sxs-lookup"><span data-stu-id="2659e-134">For example, a user whose culture is English (United States) might choose to display currency values as 1.1 USD instead of the default of $1.1.</span></span> <span data-ttu-id="2659e-135">前に説明した方法で取得した <xref:System.Globalization.NumberFormatInfo> オブジェクトは、これらのユーザーオーバーライドを反映しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-135">The <xref:System.Globalization.NumberFormatInfo> objects retrieved in the ways discussed previously all reflect these user overrides.</span></span> <span data-ttu-id="2659e-136">これが望ましくない場合は、<xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> コンストラクターを呼び出し、`useUserOverride` の引数に `false` の値を指定することによって、ユーザーのオーバーライドを反映しない <xref:System.Globalization.NumberFormatInfo> オブジェクト (読み取り専用ではなく読み取り/書き込みも) を作成できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-136">If this is undesirable, you can create a <xref:System.Globalization.NumberFormatInfo> object that does not reflect user overrides (and that is also read/write rather than read-only) by calling the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> constructor and supplying a value of `false` for the `useUserOverride` argument.</span></span> <span data-ttu-id="2659e-137">次の例では、現在のカルチャが英語 (米国) であり、通貨記号が既定値の $ から USD に変更されているシステムについて説明します。</span><span class="sxs-lookup"><span data-stu-id="2659e-137">The following example provides an illustration for a system whose current culture is English (United States) and whose currency symbol has been changed from the default of $ to USD.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)]  
  
 <span data-ttu-id="2659e-138"><xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> プロパティが `true`に設定されている場合、プロパティ <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>、<xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>、および <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> もユーザー設定から取得されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-138">If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> property is set to `true`, the properties <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>, <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType>, and <xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=nameWithType> are also retrieved from the user settings.</span></span> <span data-ttu-id="2659e-139">ユーザー設定が <xref:System.Globalization.CultureInfo> オブジェクトに関連付けられているカルチャと互換性がない場合 (たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> プロパティによって一覧表示されるカレンダーの1つではない場合)、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="2659e-139">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo> object (for example, if the selected calendar is not one of the calendars listed by the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property), the results of the methods and the values of the properties are undefined.</span></span>  
  
<a name="Instantiating_Invariant"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-the-invariant-culture"></a><span data-ttu-id="2659e-140">インバリアントカルチャの NumberFormatInfo オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="2659e-140">Instantiating a NumberFormatInfo object for the invariant culture</span></span>  
 <span data-ttu-id="2659e-141">インバリアントカルチャは、カルチャを認識しないカルチャを表します。</span><span class="sxs-lookup"><span data-stu-id="2659e-141">The invariant culture represents a culture that is culture-insensitive.</span></span> <span data-ttu-id="2659e-142">英語の言語に基づいていますが、特定の英語圏の国/地域にはありません。</span><span class="sxs-lookup"><span data-stu-id="2659e-142">It is based on the English language but not on any specific English-speaking country/region.</span></span> <span data-ttu-id="2659e-143">特定のカルチャのデータは動的にすることができ、新しいカルチャ規則やユーザー設定を反映するように変更できますが、インバリアントカルチャのデータは変更されません。</span><span class="sxs-lookup"><span data-stu-id="2659e-143">Although the data of specific cultures can be dynamic and can change to reflect new cultural conventions or user preferences, the data of the invariant culture does not change.</span></span> <span data-ttu-id="2659e-144">インバリアントカルチャの書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトは、結果の文字列がカルチャによって異なることがない書式設定操作に使用できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-144">A <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of the invariant culture can be used for formatting operations in which result strings should not vary by culture.</span></span>  
  
 <span data-ttu-id="2659e-145">インバリアントカルチャの書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトは、次の方法でインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-145">You can instantiate a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of the invariant culture in the following ways:</span></span>  
  
-   <span data-ttu-id="2659e-146"><xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> プロパティの値を取得する。</span><span class="sxs-lookup"><span data-stu-id="2659e-146">By retrieving the value of the <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> property.</span></span> <span data-ttu-id="2659e-147">返された <xref:System.Globalization.NumberFormatInfo> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-147">The returned  <xref:System.Globalization.NumberFormatInfo> object is read-only.</span></span>  
  
-   <span data-ttu-id="2659e-148"><xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.CultureInfo> オブジェクトから <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> プロパティの値を取得する。</span><span class="sxs-lookup"><span data-stu-id="2659e-148">By retrieving the value of the <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> property from the <xref:System.Globalization.CultureInfo> object that is returned by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2659e-149">返された <xref:System.Globalization.NumberFormatInfo> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-149">The returned <xref:System.Globalization.NumberFormatInfo> object is read-only.</span></span>  
  
-   <span data-ttu-id="2659e-150">パラメーターなしの <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> クラスコンストラクターを呼び出す。</span><span class="sxs-lookup"><span data-stu-id="2659e-150">By calling the parameterless <xref:System.Globalization.NumberFormatInfo.%23ctor%2A> class constructor.</span></span> <span data-ttu-id="2659e-151">返された <xref:System.Globalization.NumberFormatInfo> オブジェクトは読み取り/書き込み可能です。</span><span class="sxs-lookup"><span data-stu-id="2659e-151">The returned <xref:System.Globalization.NumberFormatInfo> object is read/write.</span></span>  
  
 <span data-ttu-id="2659e-152">次の例では、これらの各メソッドを使用して、インバリアントカルチャを表す <xref:System.Globalization.NumberFormatInfo> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="2659e-152">The following example uses each of these methods to instantiate a <xref:System.Globalization.NumberFormatInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="2659e-153">次に、オブジェクトが読み取り専用かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-153">It then indicates whether the object is read-only,</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)]  
  
<a name="Instantiating_Specific"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-specific-culture"></a><span data-ttu-id="2659e-154">特定のカルチャの NumberFormatInfo オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="2659e-154">Instantiating a NumberFormatInfo object for a specific culture</span></span>  
 <span data-ttu-id="2659e-155">特定のカルチャは、特定の国/地域で話される言語を表します。</span><span class="sxs-lookup"><span data-stu-id="2659e-155">A specific culture represents a language that is spoken in a particular country/region.</span></span> <span data-ttu-id="2659e-156">たとえば、en-us は、米国で話されている英語を表す特定のカルチャであり、en-us はカナダで話されている英語の言語を表す特定のカルチャです。</span><span class="sxs-lookup"><span data-stu-id="2659e-156">For example, en-US is a specific culture that represents the English language spoken in the United States, and en-CA is a specific culture that represents the English language spoken in Canada.</span></span> <span data-ttu-id="2659e-157">特定のカルチャの書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトは、次の方法でインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-157">You can instantiate a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of a specific culture in the following ways:</span></span>  
  
-   <span data-ttu-id="2659e-158"><xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> メソッドを呼び出し、返された <xref:System.Globalization.CultureInfo> オブジェクトの <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-158">By calling the <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=nameWithType> method and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="2659e-159">返された <xref:System.Globalization.NumberFormatInfo> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-159">The returned <xref:System.Globalization.NumberFormatInfo> object is read-only.</span></span>  
  
-   <span data-ttu-id="2659e-160">静的 <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> メソッドに取得する <xref:System.Globalization.NumberFormatInfo> オブジェクトを持つカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを渡す。</span><span class="sxs-lookup"><span data-stu-id="2659e-160">By passing a <xref:System.Globalization.CultureInfo> object that represents the culture whose <xref:System.Globalization.NumberFormatInfo> object you want to retrieve to the static <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> method.</span></span> <span data-ttu-id="2659e-161">返された <xref:System.Globalization.NumberFormatInfo> オブジェクトは読み取り/書き込み可能です。</span><span class="sxs-lookup"><span data-stu-id="2659e-161">The returned <xref:System.Globalization.NumberFormatInfo> object is read/write.</span></span>  
  
-   <span data-ttu-id="2659e-162"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> メソッドを呼び出し、返された <xref:System.Globalization.CultureInfo> オブジェクトの <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-162">By calling the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="2659e-163">返された <xref:System.Globalization.NumberFormatInfo> オブジェクトは読み取り/書き込み可能です。</span><span class="sxs-lookup"><span data-stu-id="2659e-163">The returned <xref:System.Globalization.NumberFormatInfo> object is read/write.</span></span>  
  
-   <span data-ttu-id="2659e-164"><xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> クラスコンストラクターの1つを呼び出し、返された <xref:System.Globalization.CultureInfo> オブジェクトの <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-164">By calling one of the <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType> class constructors and retrieving the value of the returned <xref:System.Globalization.CultureInfo> object's <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="2659e-165">返された <xref:System.Globalization.NumberFormatInfo> オブジェクトは読み取り/書き込み可能です。</span><span class="sxs-lookup"><span data-stu-id="2659e-165">The returned <xref:System.Globalization.NumberFormatInfo> object is read/write.</span></span>  
  
 <span data-ttu-id="2659e-166">次の例では、これらの4つの方法を使用して、インドネシア語 (インドネシア) カルチャの書式指定規則を反映する <xref:System.Globalization.NumberFormatInfo> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="2659e-166">The following example uses these four ways to create a <xref:System.Globalization.NumberFormatInfo> object that reflects the formatting conventions of the Indonesian (Indonesia) culture.</span></span> <span data-ttu-id="2659e-167">また、各オブジェクトが読み取り専用かどうかも示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-167">It also indicates whether each object is read-only.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)]  
  
<a name="Instantiating_Neutral"></a>   
## <a name="instantiating-a-numberformatinfo-object-for-a-neutral-culture"></a><span data-ttu-id="2659e-168">ニュートラルカルチャの NumberFormatInfo オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="2659e-168">Instantiating a NumberFormatInfo object for a neutral culture</span></span>  
 <span data-ttu-id="2659e-169">ニュートラルカルチャは、国/地域に依存しないカルチャまたは言語を表します。</span><span class="sxs-lookup"><span data-stu-id="2659e-169">A neutral culture represents a culture or language that is independent of a country/region.</span></span> <span data-ttu-id="2659e-170">通常は、1つまたは複数の特定のカルチャの親になります。</span><span class="sxs-lookup"><span data-stu-id="2659e-170">It is typically the parent of one or more specific cultures.</span></span> <span data-ttu-id="2659e-171">たとえば、fr は、フランス語と fr-fr カルチャの親のニュートラルカルチャです。</span><span class="sxs-lookup"><span data-stu-id="2659e-171">For example, fr is a neutral culture for the French language and the parent of the fr-FR culture.</span></span> <span data-ttu-id="2659e-172">特定のカルチャの書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトを作成するのと同じ方法で、ニュートラルカルチャの書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="2659e-172">You create a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of a neutral culture in the same way that you create a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of a specific culture.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2659e-173">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] 以前のバージョンでは、ニュートラルカルチャの書式指定規則を反映する <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得しようとすると、<xref:System.NotSupportedException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="2659e-173">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, trying to retrieve a <xref:System.Globalization.NumberFormatInfo> object that reflects the formatting conventions of a neutral culture throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 <span data-ttu-id="2659e-174">ただし、ニュートラルカルチャは特定の国/地域に依存しないため、カルチャ固有の書式情報がありません。</span><span class="sxs-lookup"><span data-stu-id="2659e-174">However, because it is independent of a specific country/region, a neutral culture lacks culture-specific formatting information.</span></span> <span data-ttu-id="2659e-175">.NET Framework は、<xref:System.Globalization.NumberFormatInfo> オブジェクトにジェネリック値を設定するのではなく、ニュートラルカルチャの子である特定のカルチャの書式指定規則を反映する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2659e-175">Rather than populating the <xref:System.Globalization.NumberFormatInfo> object with generic values, the .NET Framework returns a <xref:System.Globalization.NumberFormatInfo> object that reflects the formatting conventions of a specific culture that is a child of the neutral culture.</span></span> <span data-ttu-id="2659e-176">たとえば、ニュートラルカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトは en-us カルチャの書式指定規則を反映し、fr カルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトは fr-fr カルチャの書式指定規則を反映します。</span><span class="sxs-lookup"><span data-stu-id="2659e-176">For example, the <xref:System.Globalization.NumberFormatInfo> object for the neutral en culture reflects the formatting conventions of the en-US culture, and the <xref:System.Globalization.NumberFormatInfo> object for the fr culture reflects the formatting conventions of the fr-FR culture.</span></span>  
  
 <span data-ttu-id="2659e-177">次のようなコードを使用して、各ニュートラルカルチャが表す特定のカルチャの書式指定規則を決定できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-177">You can use code like the following to determine which specific culture's formatting conventions each neutral culture represents.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class.Instantiate#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)]  
  
<a name="dynamic"></a>   
## <a name="numberformatinfo-and-dynamic-data"></a><span data-ttu-id="2659e-178">NumberFormatInfo と動的データ</span><span class="sxs-lookup"><span data-stu-id="2659e-178">NumberFormatInfo and dynamic data</span></span>  
 <span data-ttu-id="2659e-179"><xref:System.Globalization.NumberFormatInfo> クラスによって提供される数値を書式設定するためのカルチャ固有のデータは、<xref:System.Globalization.CultureInfo> クラスによって提供されるカルチャデータと同様に動的になります。</span><span class="sxs-lookup"><span data-stu-id="2659e-179">The culture-specific data for formatting numeric values provided by the <xref:System.Globalization.NumberFormatInfo> class is dynamic, just like the cultural data provided by the <xref:System.Globalization.CultureInfo> class.</span></span> <span data-ttu-id="2659e-180">特定の <xref:System.Globalization.CultureInfo> オブジェクトに関連付けられている <xref:System.Globalization.NumberFormatInfo> オブジェクトの値の安定性については、想定しないでください。</span><span class="sxs-lookup"><span data-stu-id="2659e-180">You should not make any assumptions about the stability of values for <xref:System.Globalization.NumberFormatInfo> objects that are associated with particular <xref:System.Globalization.CultureInfo> objects.</span></span> <span data-ttu-id="2659e-181">インバリアントカルチャとそれに関連付けられた <xref:System.Globalization.NumberFormatInfo> オブジェクトによって提供されるデータのみが安定しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-181">Only the data provided by the invariant culture and its associated <xref:System.Globalization.NumberFormatInfo> object is stable.</span></span> <span data-ttu-id="2659e-182">その他のデータは、次の理由により、アプリケーションセッション間、または1つのセッション内でも変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-182">Other data can change between application sessions, or even within a single session, for the following reasons:</span></span>  
  
-   <span data-ttu-id="2659e-183">**システムの更新プログラム。**</span><span class="sxs-lookup"><span data-stu-id="2659e-183">**System updates.**</span></span> <span data-ttu-id="2659e-184">通貨記号や通貨の形式などのカルチャ設定は、時間の経過と共に変化します。</span><span class="sxs-lookup"><span data-stu-id="2659e-184">Cultural preferences such as the currency symbol or currency formats change over time.</span></span> <span data-ttu-id="2659e-185">この場合、Windows Update には、特定のカルチャの <xref:System.Globalization.NumberFormatInfo> プロパティ値への変更が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2659e-185">When this happens, Windows Update includes changes to the <xref:System.Globalization.NumberFormatInfo> property value for a particular culture.</span></span>  
  
-   <span data-ttu-id="2659e-186">**置換カルチャ。**</span><span class="sxs-lookup"><span data-stu-id="2659e-186">**Replacement cultures.**</span></span> <span data-ttu-id="2659e-187"><xref:System.Globalization.CultureAndRegionInfoBuilder> クラスを使用して、既存のカルチャのデータを置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="2659e-187">The <xref:System.Globalization.CultureAndRegionInfoBuilder> class can be used to replace the data of an existing culture.</span></span>  
  
-   <span data-ttu-id="2659e-188">**プロパティ値へのカスケード変更。**</span><span class="sxs-lookup"><span data-stu-id="2659e-188">**Cascading changes to property values.**</span></span> <span data-ttu-id="2659e-189">カルチャに関連する多数のプロパティが実行時に変更され、<xref:System.Globalization.NumberFormatInfo> データが変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-189">A number of culture-related properties can change at run time, which, in turn, causes <xref:System.Globalization.NumberFormatInfo> data to change.</span></span> <span data-ttu-id="2659e-190">たとえば、現在のカルチャは、プログラムによって、またはユーザーの操作によって変更できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-190">For example, the current culture can be changed either programmatically or through user action.</span></span> <span data-ttu-id="2659e-191">この場合、<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> プロパティによって返される <xref:System.Globalization.NumberFormatInfo> オブジェクトは、現在のカルチャに関連付けられているオブジェクトに変更されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-191">When this happens, the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> property changes to an object associated with the current culture.</span></span>  
  
-   <span data-ttu-id="2659e-192">**ユーザー設定。**</span><span class="sxs-lookup"><span data-stu-id="2659e-192">**User preferences.**</span></span> <span data-ttu-id="2659e-193">アプリケーションのユーザーは、コントロールパネルの [地域と言語のオプション] を使用して、現在のシステムのカルチャに関連付けられている値の一部をオーバーライドすることがあります。</span><span class="sxs-lookup"><span data-stu-id="2659e-193">Users of your application might override some of the values associated with the current system culture through the region and language options in Control Panel.</span></span> <span data-ttu-id="2659e-194">たとえば、ユーザーが別の通貨記号または別の小数点の記号を選択する場合があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-194">For example, users might choose a different currency symbol or a different decimal separator symbol.</span></span> <span data-ttu-id="2659e-195"><xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> プロパティが `true` (既定値) に設定されている場合、<xref:System.Globalization.NumberFormatInfo> オブジェクトのプロパティもユーザー設定から取得されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-195">If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=nameWithType> property is set to `true` (its default value), the properties of the <xref:System.Globalization.NumberFormatInfo> object are also retrieved from the user settings.</span></span>  
  
 <span data-ttu-id="2659e-196">.NET Framework 2.0 以降では、オブジェクトの作成時に、<xref:System.Globalization.NumberFormatInfo> オブジェクトのユーザーがオーバーライドできるすべてのプロパティが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-196">Starting with the .NET Framework 2.0, all user-overridable properties of a <xref:System.Globalization.NumberFormatInfo> object are initialized when the object is created.</span></span> <span data-ttu-id="2659e-197">オブジェクトの作成もユーザーの上書きプロセスもアトミックであり、オブジェクトの作成中に関連する値が変更される可能性があるため、不整合が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-197">There is still a possibility of inconsistency, because neither object creation nor the user override process is atomic, and the relevant values may change during object creation.</span></span> <span data-ttu-id="2659e-198">ただし、これらの不整合は非常にまれである必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-198">However, these inconsistencies should be extremely rare.</span></span>  
  
 <span data-ttu-id="2659e-199">現在のスレッドカルチャと同じカルチャを表す <xref:System.Globalization.NumberFormatInfo> オブジェクトにユーザーのオーバーライドを反映するかどうかを制御できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-199">You can control whether user overrides are reflected in <xref:System.Globalization.NumberFormatInfo> objects that represent the same culture as the current thread culture.</span></span> <span data-ttu-id="2659e-200">次の表に、<xref:System.Globalization.NumberFormatInfo> オブジェクトを取得する方法と、結果のオブジェクトにユーザーのオーバーライドが反映されるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-200">The following table lists the ways in which a <xref:System.Globalization.NumberFormatInfo> object can be retrieved and indicates whether the resulting object reflects user overrides.</span></span>  
  
|<span data-ttu-id="2659e-201">CultureInfo オブジェクトと NumberFormatInfo オブジェクトのソース</span><span class="sxs-lookup"><span data-stu-id="2659e-201">Source of CultureInfo and NumberFormatInfo object</span></span>|<span data-ttu-id="2659e-202">ユーザーのオーバーライドを反映します</span><span class="sxs-lookup"><span data-stu-id="2659e-202">Reflects user overrides</span></span>|  
|-------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="2659e-203">`CultureInfo.CurrentCulture.NumberFormat` プロパティ</span><span class="sxs-lookup"><span data-stu-id="2659e-203">`CultureInfo.CurrentCulture.NumberFormat` property</span></span>|<span data-ttu-id="2659e-204">はい</span><span class="sxs-lookup"><span data-stu-id="2659e-204">Yes</span></span>|  
|<span data-ttu-id="2659e-205"><xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> プロパティ</span><span class="sxs-lookup"><span data-stu-id="2659e-205"><xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property</span></span>|<span data-ttu-id="2659e-206">はい</span><span class="sxs-lookup"><span data-stu-id="2659e-206">Yes</span></span>|  
|<span data-ttu-id="2659e-207"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> メソッド</span><span class="sxs-lookup"><span data-stu-id="2659e-207"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=nameWithType> method</span></span>|<span data-ttu-id="2659e-208">はい</span><span class="sxs-lookup"><span data-stu-id="2659e-208">Yes</span></span>|  
|<span data-ttu-id="2659e-209"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> メソッド</span><span class="sxs-lookup"><span data-stu-id="2659e-209"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=nameWithType> method</span></span>|<span data-ttu-id="2659e-210">いいえ</span><span class="sxs-lookup"><span data-stu-id="2659e-210">No</span></span>|  
|<span data-ttu-id="2659e-211"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> コンストラクター</span><span class="sxs-lookup"><span data-stu-id="2659e-211"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor</span></span>|<span data-ttu-id="2659e-212">はい</span><span class="sxs-lookup"><span data-stu-id="2659e-212">Yes</span></span>|  
|<span data-ttu-id="2659e-213"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> コンストラクター</span><span class="sxs-lookup"><span data-stu-id="2659e-213"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> constructor</span></span>|<span data-ttu-id="2659e-214">`useUserOverride` パラメーターの値によって異なります</span><span class="sxs-lookup"><span data-stu-id="2659e-214">Depends on value of `useUserOverride` parameter</span></span>|  
  
 <span data-ttu-id="2659e-215">それ以外の理由がない限り、クライアントアプリケーションの <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用してユーザー入力の書式設定と解析を行ったり、数値データを表示したりする場合は、ユーザーの上書きを考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-215">Unless there is a compelling reason to do otherwise, you should respect user overrides when you use the <xref:System.Globalization.NumberFormatInfo> object in client applications to format and parse user input or to display numeric data.</span></span> <span data-ttu-id="2659e-216">サーバーアプリケーションや無人アプリケーションでは、ユーザーの上書きを尊重しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="2659e-216">For server applications or unattended applications, you should not respect user overrides.</span></span> <span data-ttu-id="2659e-217">ただし、<xref:System.Globalization.NumberFormatInfo> オブジェクトを明示的または暗黙的に使用して文字列形式で数値データを保持している場合は、インバリアントカルチャの書式指定規則を反映する <xref:System.Globalization.NumberFormatInfo> オブジェクトを使用するか、カルチャに関係なく使用するカスタム数値書式指定文字列を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-217">However, if you are using the <xref:System.Globalization.NumberFormatInfo> object either explicitly or implicitly to persist numeric data in string form, you should either use a <xref:System.Globalization.NumberFormatInfo> object that reflects the formatting conventions of the invariant culture, or you should specify a custom numeric format string that you use regardless of culture.</span></span>  
  
<a name="formatProvider"></a>   
## <a name="iformatprovider-numberformatinfo-and-numeric-formatting"></a><span data-ttu-id="2659e-218">IFormatProvider、NumberFormatInfo、および数値の書式設定</span><span class="sxs-lookup"><span data-stu-id="2659e-218">IFormatProvider, NumberFormatInfo, and numeric formatting</span></span>  
 <span data-ttu-id="2659e-219"><xref:System.Globalization.NumberFormatInfo> オブジェクトは、すべての数値書式指定操作で暗黙的または明示的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-219">A <xref:System.Globalization.NumberFormatInfo> object is used implicitly or explicitly in all numeric formatting operations.</span></span> <span data-ttu-id="2659e-220">これには、次のメソッドの呼び出しが含まれます。</span><span class="sxs-lookup"><span data-stu-id="2659e-220">These include calls to the following methods:</span></span>  
  
-   <span data-ttu-id="2659e-221"><xref:System.Int32.ToString%2A?displayProperty=nameWithType>、<xref:System.Double.ToString%2A?displayProperty=nameWithType>、<xref:System.Convert.ToString%28System.Int32%29?displayProperty=nameWithType>など、すべての数値書式指定メソッド。</span><span class="sxs-lookup"><span data-stu-id="2659e-221">All numeric formatting methods, such as <xref:System.Int32.ToString%2A?displayProperty=nameWithType>, <xref:System.Double.ToString%2A?displayProperty=nameWithType>, and <xref:System.Convert.ToString%28System.Int32%29?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="2659e-222"><xref:System.String.Format%2A?displayProperty=nameWithType>の主要な複合書式指定メソッド。</span><span class="sxs-lookup"><span data-stu-id="2659e-222">The major composite formatting method, <xref:System.String.Format%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="2659e-223"><xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> や <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>などの他の複合書式指定メソッド。</span><span class="sxs-lookup"><span data-stu-id="2659e-223">Other composite formatting methods, such as <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> and <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2659e-224">すべての数値書式指定操作では、<xref:System.IFormatProvider> の実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="2659e-224">All numeric formatting operations make use of an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="2659e-225"><xref:System.IFormatProvider> インターフェイスには、<xref:System.IFormatProvider.GetFormat%28System.Type%29>の1つのメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-225">The <xref:System.IFormatProvider> interface includes a single method, <xref:System.IFormatProvider.GetFormat%28System.Type%29>.</span></span> <span data-ttu-id="2659e-226">これは、書式設定情報を提供するために必要な型を表す <xref:System.Type> オブジェクトを渡すコールバックメソッドです。</span><span class="sxs-lookup"><span data-stu-id="2659e-226">This is a callback method that is passed a <xref:System.Type> object that represents the type needed to provide formatting information.</span></span> <span data-ttu-id="2659e-227">メソッドは、型のインスタンスを提供できない場合、その型のインスタンスまたは `null`を返す役割を担います。</span><span class="sxs-lookup"><span data-stu-id="2659e-227">The method is responsible for returning either an instance of that type or `null`, if it cannot provide an instance of the type.</span></span> <span data-ttu-id="2659e-228">.NET Framework には、数値の書式設定用に2つの <xref:System.IFormatProvider> 実装が用意されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-228">The .NET Framework provides two <xref:System.IFormatProvider> implementations for formatting numbers:</span></span>  
  
-   <span data-ttu-id="2659e-229">特定のカルチャ (または特定の国/地域の特定の言語) を表す <xref:System.Globalization.CultureInfo> クラス。</span><span class="sxs-lookup"><span data-stu-id="2659e-229">The <xref:System.Globalization.CultureInfo> class, which represents a specific culture (or a specific language in a specific country/region).</span></span> <span data-ttu-id="2659e-230">数値書式指定操作では、<xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> メソッドは <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> プロパティに関連付けられた <xref:System.Globalization.NumberFormatInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="2659e-230">In a numeric formatting operation, the <xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=nameWithType> method returns the <xref:System.Globalization.NumberFormatInfo> object associated with its <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2659e-231">関連付けられたカルチャの書式指定規則に関する情報を提供する <xref:System.Globalization.NumberFormatInfo> クラス。</span><span class="sxs-lookup"><span data-stu-id="2659e-231">The <xref:System.Globalization.NumberFormatInfo> class, which provides information about the formatting conventions of its associated culture.</span></span> <span data-ttu-id="2659e-232"><xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=nameWithType> メソッドは、それ自体のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="2659e-232">The <xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=nameWithType> method returns an instance of itself.</span></span>  
  
 <span data-ttu-id="2659e-233"><xref:System.IFormatProvider> 実装が書式指定メソッドに明示的に指定されていない場合は、現在のスレッドカルチャを表す <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティによって返される <xref:System.Globalization.CultureInfo> オブジェクトが使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-233">If an <xref:System.IFormatProvider> implementation is not provided to a formatting method explicitly, a <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property that represents the current thread culture is used.</span></span>  
  
 <span data-ttu-id="2659e-234">次の例は、カスタム <xref:System.IFormatProvider> の実装を定義することによって、書式設定操作の <xref:System.IFormatProvider> インターフェイスと <xref:System.Globalization.NumberFormatInfo> クラスの関係を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-234">The following example illustrates the relationship between the <xref:System.IFormatProvider> interface and the <xref:System.Globalization.NumberFormatInfo> class in formatting operations by defining a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="2659e-235"><xref:System.IFormatProvider.GetFormat%2A> メソッドは、書式設定操作によって要求されたオブジェクトの型名を表示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-235">Its <xref:System.IFormatProvider.GetFormat%2A> method displays the type name of the object requested by the formatting operation.</span></span> <span data-ttu-id="2659e-236">インターフェイスが <xref:System.Globalization.NumberFormatInfo> オブジェクトを要求している場合、このメソッドは、現在のスレッドカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを提供します。</span><span class="sxs-lookup"><span data-stu-id="2659e-236">If the interface is requesting a <xref:System.Globalization.NumberFormatInfo> object, this method provides the <xref:System.Globalization.NumberFormatInfo> object for the current thread culture.</span></span> <span data-ttu-id="2659e-237">この例の出力に示すように、<xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドは、書式設定情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクトを要求します。一方、<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> メソッドは <xref:System.Globalization.NumberFormatInfo> および <xref:System.Globalization.DateTimeFormatInfo> のオブジェクトだけでなく <xref:System.ICustomFormatter> の実装も要求します。</span><span class="sxs-lookup"><span data-stu-id="2659e-237">As the output from the example shows, the <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method requests a <xref:System.Globalization.NumberFormatInfo> object to provide formatting information, whereas the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method requests <xref:System.Globalization.NumberFormatInfo> and <xref:System.Globalization.DateTimeFormatInfo> objects as well as an <xref:System.ICustomFormatter> implementation.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)]  
  
 <span data-ttu-id="2659e-238">数値書式指定メソッドの呼び出しで <xref:System.IFormatProvider> 実装が明示的に指定されていない場合、メソッドは、現在のスレッドカルチャに対応する <xref:System.Globalization.NumberFormatInfo> オブジェクトを返す `CultureInfo.CurrentCulture.GetFormat` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2659e-238">If an <xref:System.IFormatProvider> implementation is not explicitly provided in a numeric formatting method call, the method calls the `CultureInfo.CurrentCulture.GetFormat` method, which returns the <xref:System.Globalization.NumberFormatInfo> object that corresponds to the current thread culture.</span></span>  
  
<a name="properties"></a>   
## <a name="format-strings-and-numberformatinfo-properties"></a><span data-ttu-id="2659e-239">書式指定文字列と NumberFormatInfo プロパティ</span><span class="sxs-lookup"><span data-stu-id="2659e-239">Format strings and NumberFormatInfo properties</span></span>  
 <span data-ttu-id="2659e-240">すべての書式設定操作では、標準またはカスタムの数値書式指定文字列のいずれかを使用して、数値から結果文字列を生成します。</span><span class="sxs-lookup"><span data-stu-id="2659e-240">Every formatting operation uses either a standard or a custom numeric format string to produce a result string from a number.</span></span> <span data-ttu-id="2659e-241">場合によっては、次の例に示すように、書式指定文字列を使用して結果文字列を生成することが明示的に行われます。</span><span class="sxs-lookup"><span data-stu-id="2659e-241">In some cases, the use of a format string to produce a result string is explicit, as in the following example.</span></span> <span data-ttu-id="2659e-242">このコードは、<xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出して、en-us カルチャの書式指定規則を使用して <xref:System.Decimal> 値をさまざまな文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="2659e-242">This code calls the <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to convert a <xref:System.Decimal> value to a number of different string representations by using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)]  
  
 <span data-ttu-id="2659e-243">それ以外の場合、書式指定文字列の使用は暗黙的です。</span><span class="sxs-lookup"><span data-stu-id="2659e-243">In other cases, the use of a format string is implicit.</span></span> <span data-ttu-id="2659e-244">たとえば、次のメソッドが既定またはパラメーターなしの <xref:System.Decimal.ToString?displayProperty=nameWithType> メソッドを呼び出すと、<xref:System.Decimal> インスタンスの値は、一般 ("G") 書式指定子と現在のカルチャの規則 (この場合は en-us カルチャ) を使用して書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-244">For example, in the following method calls to the default or parameterless <xref:System.Decimal.ToString?displayProperty=nameWithType> method, the value of the <xref:System.Decimal> instance is formatted by using the general ("G") format specifier and the conventions of the current culture, which in this case is the en-US culture.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)]  
  
 <span data-ttu-id="2659e-245">各標準の数値書式指定文字列では、1つまたは複数の <xref:System.Globalization.NumberFormatInfo> プロパティを使用して、結果文字列で使用するパターンまたは記号を決定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-245">Each standard numeric format string uses one or more <xref:System.Globalization.NumberFormatInfo> properties to determine the pattern or the symbols used in the result string.</span></span> <span data-ttu-id="2659e-246">同様に、"0" および "#" 以外のカスタム数値書式指定子は、<xref:System.Globalization.NumberFormatInfo> のプロパティで定義された結果文字列に記号を挿入します。</span><span class="sxs-lookup"><span data-stu-id="2659e-246">Similarly, each custom numeric format specifier except "0" and "#" insert symbols in the result string that are defined by <xref:System.Globalization.NumberFormatInfo> properties.</span></span> <span data-ttu-id="2659e-247">次の表に、標準およびカスタムの数値書式指定子とそれに関連付けられた <xref:System.Globalization.NumberFormatInfo> プロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-247">The following table lists the standard and custom numeric format specifiers and their associated <xref:System.Globalization.NumberFormatInfo> properties.</span></span>  <span data-ttu-id="2659e-248">特定のカルチャの結果文字列の外観を変更するには、「 [NumberFormatInfo プロパティの変更](#modifying)」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-248">To change the appearance of the result string for a particular culture, see the [Modifying NumberFormatInfo properties](#modifying) section.</span></span> <span data-ttu-id="2659e-249">これらの書式指定子の使用方法の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-249">For details about the use of these format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
|<span data-ttu-id="2659e-250">書式指定子</span><span class="sxs-lookup"><span data-stu-id="2659e-250">Format specifier</span></span>|<span data-ttu-id="2659e-251">関連付けられたプロパティ</span><span class="sxs-lookup"><span data-stu-id="2659e-251">Associated properties</span></span>|  
|----------------------|---------------------------|  
|<span data-ttu-id="2659e-252">"C" または "c" (通貨書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-252">"C" or "c" (currency format specifier)</span></span>|<span data-ttu-id="2659e-253"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>、既定の小数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-253"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A>, to define the default number of fractional digits.</span></span><br /><br /> <span data-ttu-id="2659e-254"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> (小数点の記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-254"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, to define the decimal separator symbol.</span></span><br /><br /> <span data-ttu-id="2659e-255"><xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>、グループまたは桁区切り記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-255"><xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, to define the group or thousands separator.</span></span><br /><br /> <span data-ttu-id="2659e-256"><xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>、整数グループのサイズを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-256"><xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A>, to define the sizes of integral groups.</span></span><br /><br /> <span data-ttu-id="2659e-257"><xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>、負の通貨値のパターンを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-257"><xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A>, to define the pattern of negative currency values.</span></span><br /><br /> <span data-ttu-id="2659e-258"><xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>、正の通貨の値のパターンを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-258"><xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>, to define the pattern of positive currency values.</span></span><br /><br /> <span data-ttu-id="2659e-259">通貨記号を定義する <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="2659e-259"><xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, to define the currency symbol.</span></span><br /><br /> <span data-ttu-id="2659e-260"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> (マイナス記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-260"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.</span></span>|  
|<span data-ttu-id="2659e-261">"D" または "d" (10 進書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-261">"D" or "d" (decimal format specifier)</span></span>|<span data-ttu-id="2659e-262"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> (マイナス記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-262"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.</span></span>|  
|<span data-ttu-id="2659e-263">"E" または "e" (指数または指数書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-263">"E" or "e" (exponential or scientific format specifier)</span></span>|<span data-ttu-id="2659e-264"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>、仮数と指数の負の記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-264"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol in the mantissa and exponent.</span></span><br /><br /> <span data-ttu-id="2659e-265"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> (小数点の記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-265"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.</span></span><br /><br /> <span data-ttu-id="2659e-266"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>、指数部に正符号記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-266"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, to define the positive sign symbol in the exponent.</span></span>|  
|<span data-ttu-id="2659e-267">"F" または "f" (固定小数点書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-267">"F" or "f" (fixed-point format specifier)</span></span>|<span data-ttu-id="2659e-268"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> (マイナス記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-268"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.</span></span><br /><br /> <span data-ttu-id="2659e-269"><xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>、既定の小数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-269"><xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, to define the default number of fractional digits.</span></span><br /><br /> <span data-ttu-id="2659e-270"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> (小数点の記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-270"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.</span></span>|  
|<span data-ttu-id="2659e-271">"G" または "g" (一般的な書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-271">"G" or "g" (general format specifier)</span></span>|<span data-ttu-id="2659e-272"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> (マイナス記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-272"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.</span></span><br /><br /> <span data-ttu-id="2659e-273"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> (小数点の記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-273"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.</span></span><br /><br /> <span data-ttu-id="2659e-274"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>、結果文字列の正符号記号を指数形式で定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-274"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, to define the positive sign symbol for result strings in exponential format.</span></span>|  
|<span data-ttu-id="2659e-275">"N" または "n" (数値書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-275">"N" or "n" (number format specifier)</span></span>|<span data-ttu-id="2659e-276"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> (マイナス記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-276"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.</span></span><br /><br /> <span data-ttu-id="2659e-277"><xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>、既定の小数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-277"><xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A>, to define the default number of fractional digits.</span></span><br /><br /> <span data-ttu-id="2659e-278"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> (小数点の記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-278"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.</span></span><br /><br /> <span data-ttu-id="2659e-279"><xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>、桁区切り記号 (千) を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-279"><xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, to define the group separator (thousands) symbol.</span></span><br /><br /> <span data-ttu-id="2659e-280"><xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>、グループ内の整数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-280"><xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A>, to define the number of integral digits in a group.</span></span><br /><br /> <span data-ttu-id="2659e-281"><xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>、負の値の形式を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-281"><xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A>, to define the format of negative values.</span></span>|  
|<span data-ttu-id="2659e-282">"P" または "p" (パーセント書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-282">"P" or "p" (percent format specifier)</span></span>|<span data-ttu-id="2659e-283"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> (マイナス記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-283"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.</span></span><br /><br /> <span data-ttu-id="2659e-284"><xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>、既定の小数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-284"><xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A>, to define the default number of fractional digits.</span></span><br /><br /> <span data-ttu-id="2659e-285"><xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> (小数点の記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-285"><xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>, to define the decimal separator symbol.</span></span><br /><br /> <span data-ttu-id="2659e-286"><xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>、桁区切り記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-286"><xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A>, to define the group separator symbol.</span></span><br /><br /> <span data-ttu-id="2659e-287"><xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>、グループ内の整数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-287"><xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A>, to define the number of integral digits in a group.</span></span><br /><br /> <span data-ttu-id="2659e-288"><xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>、負の値のパーセント記号と負の記号の位置を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-288"><xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A>, to define the placement of the percent symbol and the negative symbol for negative values.</span></span><br /><br /> <span data-ttu-id="2659e-289"><xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>、正の値のパーセント記号の位置を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-289"><xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A>, to define the placement of the percent symbol for positive values.</span></span><br /><br /> <span data-ttu-id="2659e-290">パーセント記号を定義する場合は <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="2659e-290"><xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, to define the percent symbol.</span></span>|  
|<span data-ttu-id="2659e-291">"R" または "r" (ラウンドトリップ書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-291">"R" or "r" (round-trip format specifier)</span></span>|<span data-ttu-id="2659e-292"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> (マイナス記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-292"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol.</span></span><br /><br /> <span data-ttu-id="2659e-293"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> (小数点の記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-293"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.</span></span><br /><br /> <span data-ttu-id="2659e-294">指数部に正符号記号を定義する場合は <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>。</span><span class="sxs-lookup"><span data-stu-id="2659e-294"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, to define the positive sign symbol in an exponent.</span></span>|  
|<span data-ttu-id="2659e-295">"X" または "x" (16 進書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-295">"X" or "x" (hexadecimal format specifier)</span></span>|<span data-ttu-id="2659e-296">[なし] :</span><span class="sxs-lookup"><span data-stu-id="2659e-296">None.</span></span>|  
|<span data-ttu-id="2659e-297">"."(小数点カスタム書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-297">"." (decimal point custom format specifier)</span></span>|<span data-ttu-id="2659e-298"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> (小数点の記号を定義します)。</span><span class="sxs-lookup"><span data-stu-id="2659e-298"><xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, to define the decimal separator symbol.</span></span>|  
|<span data-ttu-id="2659e-299">"," (桁区切り記号カスタム書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-299">"," (group separator custom format specifier)</span></span>|<span data-ttu-id="2659e-300"><xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>、桁区切り記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-300"><xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>, to define the group (thousands) separator symbol.</span></span>|  
|<span data-ttu-id="2659e-301">"%" (パーセントプレースホルダーカスタム書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-301">"%" (percentage placeholder custom format specifier)</span></span>|<span data-ttu-id="2659e-302">パーセント記号を定義する場合は <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="2659e-302"><xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, to define the percent symbol.</span></span>|  
|<span data-ttu-id="2659e-303">"‰" (per-mille プレースホルダーカスタム書式指定子ごと)</span><span class="sxs-lookup"><span data-stu-id="2659e-303">"‰" (per mille placeholder custom format specifier)</span></span>|<span data-ttu-id="2659e-304">per-mille シンボルごとに定義する <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="2659e-304"><xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A>, to define the per mille symbol.</span></span>|  
|<span data-ttu-id="2659e-305">"E" (指数表記のカスタム書式指定子)</span><span class="sxs-lookup"><span data-stu-id="2659e-305">"E" (exponential notation custom format specifier)</span></span>|<span data-ttu-id="2659e-306"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>、仮数と指数の負の記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-306"><xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, to define the negative sign symbol in the mantissa and exponent.</span></span><br /><br /> <span data-ttu-id="2659e-307"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>、指数部に正符号記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-307"><xref:System.Globalization.NumberFormatInfo.PositiveSign%2A>, to define the positive sign symbol in the exponent.</span></span>|  
  
 <span data-ttu-id="2659e-308"><xref:System.Globalization.NumberFormatInfo> クラスには、特定のカルチャで使用される10進数の基数を指定する <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> プロパティが含まれていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-308">Note that the <xref:System.Globalization.NumberFormatInfo> class includes a <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> property that specifies the base 10 digits used by a specific culture.</span></span> <span data-ttu-id="2659e-309">ただし、プロパティは、書式設定操作では使用されません。結果の文字列では、基本のラテン数字 0 (U + 0030 ~) から 9 (U + 0039) のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-309">However, the property is not used in formatting operations; only the Basic Latin digits 0 (U+0030) through 9 (U+0039) are used in the result string.</span></span> <span data-ttu-id="2659e-310">また、`NaN`、`PositiveInfinity`、および `NegativeInfinity`の <xref:System.Single> と <xref:System.Double> の値については、結果の文字列は、<xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>、<xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>、および <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> の各プロパティによって定義されたシンボルだけで構成されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-310">In addition, for <xref:System.Single> and <xref:System.Double> values of `NaN`, `PositiveInfinity`, and `NegativeInfinity`, the result string consists exclusively of the symbols defined by the <xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A>, <xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A>, and <xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A> properties, respectively.</span></span>  
  
<a name="modifying"></a>   
## <a name="modifying-numberformatinfo-properties"></a><span data-ttu-id="2659e-311">NumberFormatInfo プロパティの変更</span><span class="sxs-lookup"><span data-stu-id="2659e-311">Modifying NumberFormatInfo properties</span></span>  
 <span data-ttu-id="2659e-312"><xref:System.Globalization.NumberFormatInfo> オブジェクトのプロパティを変更して、数値書式設定操作で生成される結果文字列をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="2659e-312">You can modify the properties of a <xref:System.Globalization.NumberFormatInfo> object to customize the result string produced in a numeric formatting operation.</span></span> <span data-ttu-id="2659e-313">これを行うには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="2659e-313">To do this:</span></span>  
  
1.  <span data-ttu-id="2659e-314">書式指定規則を変更する <xref:System.Globalization.NumberFormatInfo> オブジェクトの読み取り/書き込みコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="2659e-314">Create a read/write copy of a <xref:System.Globalization.NumberFormatInfo> object whose formatting conventions you want to modify.</span></span> <span data-ttu-id="2659e-315">詳細については、「 [NumberFormatInfo オブジェクトのインスタンス](#Instantiating)化」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-315">For more information, see the [Instantiating a NumberFormatInfo object](#Instantiating) section.</span></span>  
  
2.  <span data-ttu-id="2659e-316">目的の結果文字列を生成するために使用されるプロパティを変更します。</span><span class="sxs-lookup"><span data-stu-id="2659e-316">Modify the property or properties that are used to produce the desired result string.</span></span> <span data-ttu-id="2659e-317">書式指定メソッドで <xref:System.Globalization.NumberFormatInfo> のプロパティを使用して結果文字列を定義する方法の詳細については、「[書式指定文字列と NumberFormatInfo プロパティ](#properties)」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-317">For information about how formatting methods use <xref:System.Globalization.NumberFormatInfo> properties to define result strings, see the [Format strings and NumberFormatInfo properties](#properties) section.</span></span>  
  
3.  <span data-ttu-id="2659e-318">カスタム <xref:System.Globalization.NumberFormatInfo> オブジェクトは、書式設定メソッドの呼び出しで <xref:System.IFormatProvider> 引数として使用します。</span><span class="sxs-lookup"><span data-stu-id="2659e-318">Use the custom <xref:System.Globalization.NumberFormatInfo> object as the <xref:System.IFormatProvider> argument in calls to formatting methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2659e-319">アプリケーションを起動するたびにカルチャのプロパティ値を動的に変更するのではなく、<xref:System.Globalization.CultureAndRegionInfoBuilder> クラスを使用して、カスタムカルチャ (一意の名前を持ち、既存のカルチャを補足するカルチャ)、または置換カルチャ (特定のカルチャの代わりに使用されるカルチャ) のいずれかを定義できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-319">Instead of dynamically modifying a culture's property values each time an application is started, you can use the <xref:System.Globalization.CultureAndRegionInfoBuilder> class to define either a custom culture (a culture that has a unique name and that supplements existing cultures) or a replacement culture (one that is used instead of a specific culture).</span></span>  
  
 <span data-ttu-id="2659e-320">次のセクションでは、例をいくつか紹介します。</span><span class="sxs-lookup"><span data-stu-id="2659e-320">The following sections provide some examples.</span></span>  
  
<a name="currency"></a>   
### <a name="modifying-the-currency-symbol-and-pattern"></a><span data-ttu-id="2659e-321">通貨記号とパターンの変更</span><span class="sxs-lookup"><span data-stu-id="2659e-321">Modifying the currency symbol and pattern</span></span>  
 <span data-ttu-id="2659e-322">次の例では、en-us カルチャの書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトを変更します。</span><span class="sxs-lookup"><span data-stu-id="2659e-322">The following example modifies a <xref:System.Globalization.NumberFormatInfo> object that represents the formatting conventions of the en-US culture.</span></span> <span data-ttu-id="2659e-323">これにより、ISO-4217 通貨記号が <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> プロパティに割り当てられ、通貨記号の後にスペースと数値が続く通貨値のパターンが定義されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-323">It assigns the ISO-4217 currency symbol to the <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> property and defines a pattern for currency values that consists of the currency symbol followed by a space and a numeric value.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)]  
  
<a name="id"></a>   
### <a name="formatting-a-national-identification-number"></a><span data-ttu-id="2659e-324">National id 番号の書式設定</span><span class="sxs-lookup"><span data-stu-id="2659e-324">Formatting a national identification number</span></span>  
 <span data-ttu-id="2659e-325">国識別番号の多くは、数字だけで構成されているため、<xref:System.Globalization.NumberFormatInfo> オブジェクトのプロパティを変更することで簡単に書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-325">Many national identification numbers consist exclusively of digits and so can easily be formatted by modifying the properties of a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="2659e-326">たとえば、米国の社会保障番号は、次のように9桁の数字で構成されています。 `XXX-XX-XXXX`。</span><span class="sxs-lookup"><span data-stu-id="2659e-326">For example, a social security number in the United States consists of 9 digits arranged as follows: `XXX-XX-XXXX`.</span></span> <span data-ttu-id="2659e-327">次の例では、社会保障番号が整数値として格納され、適切に書式設定されることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="2659e-327">The following example assumes that social security numbers are stored as integer values and formats them appropriately.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)]
 [!code-vb[System.Globalization.NumberFormatInfo.Customize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)]  
  
<a name="parsing"></a>   
## <a name="parsing-numeric-strings"></a><span data-ttu-id="2659e-328">数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="2659e-328">Parsing numeric strings</span></span>  
 <span data-ttu-id="2659e-329">解析では、数値の文字列形式を数値に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-329">Parsing involves converting the string representation of a number to a number.</span></span> <span data-ttu-id="2659e-330">.NET Framework の各数値型には、`Parse` と `TryParse`という2つのオーバーロードされた解析メソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-330">Each numeric type in the .NET Framework includes two overloaded parsing methods: `Parse` and `TryParse`.</span></span> <span data-ttu-id="2659e-331">`Parse` メソッドは、文字列を数値に変換し、変換に失敗した場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="2659e-331">The `Parse` method converts a string to a number and throws an exception if the conversion fails.</span></span> <span data-ttu-id="2659e-332">`TryParse` メソッドは、文字列を数値に変換し、その数値を `out` 引数に割り当て、変換に成功したかどうかを示す <xref:System.Boolean> 値を返します。</span><span class="sxs-lookup"><span data-stu-id="2659e-332">The `TryParse` method converts a string to a number, assigns the number to an `out` argument, and returns a <xref:System.Boolean> value that indicates whether the conversion succeeded.</span></span>  
  
 <span data-ttu-id="2659e-333">解析メソッドは、<xref:System.Globalization.NumberStyles> 列挙値を暗黙的または明示的に使用して、解析操作が成功する場合に文字列内に存在できるスタイル要素 (グループ区切り記号、小数点の区切り記号、通貨記号など) を決定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-333">The parsing methods implicitly or explicitly use a <xref:System.Globalization.NumberStyles> enumeration value to determine what style elements (such as group separators, a decimal separator, or a currency symbol) can be present in a string if the parsing operation is to succeed.</span></span> <span data-ttu-id="2659e-334">メソッド呼び出しで <xref:System.Globalization.NumberStyles> 値が指定されていない場合、既定値は、<xref:System.Globalization.NumberStyles.Float> および <xref:System.Globalization.NumberStyles.AllowThousands> フラグを含む <xref:System.Globalization.NumberStyles> 値です。これにより、解析された文字列には、グループシンボル、小数点の区切り記号、負の符号、および空白文字を含めることができます。または、指数表記で数値の文字列形式を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-334">If a <xref:System.Globalization.NumberStyles> value is not provided in the method call, the default is a <xref:System.Globalization.NumberStyles> value that includes the <xref:System.Globalization.NumberStyles.Float> and <xref:System.Globalization.NumberStyles.AllowThousands> flags, which specifies that the parsed string can include group symbols, a decimal separator, a negative sign, and white-space characters, or it can be the string representation of a number in exponential notation.</span></span>  
  
 <span data-ttu-id="2659e-335">また、解析メソッドは、解析対象の文字列で発生する可能性のある特定のシンボルとパターンを定義する <xref:System.Globalization.NumberFormatInfo> オブジェクトを暗黙的または明示的に使用します。</span><span class="sxs-lookup"><span data-stu-id="2659e-335">The parsing methods also implicitly or explicitly use a <xref:System.Globalization.NumberFormatInfo> object that defines the specific symbols and patterns that can occur in the string to be parsed.</span></span> <span data-ttu-id="2659e-336"><xref:System.Globalization.NumberFormatInfo> オブジェクトが指定されていない場合、既定値は現在のスレッドカルチャの <xref:System.Globalization.NumberFormatInfo> になります。</span><span class="sxs-lookup"><span data-stu-id="2659e-336">If a <xref:System.Globalization.NumberFormatInfo> object is not provided, the default is the <xref:System.Globalization.NumberFormatInfo> for the current thread culture.</span></span> <span data-ttu-id="2659e-337">解析の詳細については、<xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>、<xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>、<xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>、<xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>、<xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=nameWithType>、<xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=nameWithType>などの個々の解析方法に関する説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-337">For more information about parsing, see the individual parsing methods, such as <xref:System.Int16.Parse%28System.String%29?displayProperty=nameWithType>, <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>, <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>, <xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=nameWithType>, and <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2659e-338">次の例は、カルチャに依存した文字列解析の性質を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-338">The following example illustrates the culture-sensitive nature of parsing strings.</span></span> <span data-ttu-id="2659e-339">この例では、en-us、fr-fr、およびインバリアントカルチャの規則を使用して、桁区切り記号を含む文字列を解析しようとしています。</span><span class="sxs-lookup"><span data-stu-id="2659e-339">It tries to parse a string that include thousands separators by using the conventions of the en-US, fr-FR, and invariant cultures.</span></span> <span data-ttu-id="2659e-340">コンマが桁区切り記号として含まれ、ピリオドが小数点として含まれる文字列は、fr-fr カルチャでは解析できません。また、コンマを桁区切り記号として使用すると、en-us およびインバリアントカルチャでは解析に失敗します。</span><span class="sxs-lookup"><span data-stu-id="2659e-340">A string that includes the comma as a group separator and the period as a decimal separator fails to parse in the fr-FR culture, and a string with white space as a group separator and a comma as a decimal separator fails to parse in the en-US and invariant cultures.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)]  
  
 <span data-ttu-id="2659e-341">解析は通常、次の2つのコンテキストで行われます。</span><span class="sxs-lookup"><span data-stu-id="2659e-341">Parsing generally occurs in two contexts:</span></span>  
  
-   <span data-ttu-id="2659e-342">ユーザー入力を数値に変換するように設計された操作として。</span><span class="sxs-lookup"><span data-stu-id="2659e-342">As an operation that is designed to convert user input into a numeric value.</span></span>  
  
-   <span data-ttu-id="2659e-343">数値をラウンドトリップするように設計された操作として。つまり、以前に文字列としてシリアル化された数値を逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="2659e-343">As an operation that is designed to round-trip a numeric value; that is, to deserialize a numeric value that was previously serialized as a string.</span></span>  
  
 <span data-ttu-id="2659e-344">以下のセクションでは、これら2つの操作について詳しく説明します。</span><span class="sxs-lookup"><span data-stu-id="2659e-344">The following sections discuss these two operations in greater detail.</span></span>  
  
<a name="ParseUser"></a>   
### <a name="parsing-user-strings"></a><span data-ttu-id="2659e-345">ユーザー文字列の解析</span><span class="sxs-lookup"><span data-stu-id="2659e-345">Parsing user strings</span></span>  
 <span data-ttu-id="2659e-346">ユーザーによって入力された数値文字列を解析する場合は、ユーザーのカルチャ設定を反映する <xref:System.Globalization.NumberFormatInfo> オブジェクトを常にインスタンス化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-346">When you are parsing numeric strings input by the user, you should always instantiate a <xref:System.Globalization.NumberFormatInfo> object that reflects the user's cultural settings.</span></span> <span data-ttu-id="2659e-347">ユーザーのカスタマイズを反映する <xref:System.Globalization.NumberFormatInfo> オブジェクトをインスタンス化する方法の詳細については、「 [NumberFormatInfo and dynamic data](#dynamic) 」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-347">For information about how to instantiate a <xref:System.Globalization.NumberFormatInfo> object that reflects user customizations, see the [NumberFormatInfo and dynamic data](#dynamic) section.</span></span>  
  
 <span data-ttu-id="2659e-348">次の例は、ユーザーのカルチャ設定を反映する解析操作と、それ以外の設定を比較した場合の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-348">The following example illustrates the difference between a parsing operation that reflects user cultural settings and one that does not.</span></span> <span data-ttu-id="2659e-349">この場合、既定のシステムカルチャは en-us ですが、ユーザーは、"," を小数点記号として定義し、コントロールパネル、**地域と言語** の桁区切り記号として "." を定義しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-349">In this case, the default system culture is en-US, but the user has defined "," as the decimal symbol and "." as the group separator in Control Panel, **Region and Language**.</span></span> <span data-ttu-id="2659e-350">通常、これらのシンボルは既定の en-us カルチャでは逆になります。</span><span class="sxs-lookup"><span data-stu-id="2659e-350">Ordinarily, these symbols are reversed in the default en-US culture.</span></span> <span data-ttu-id="2659e-351">ユーザー設定を反映する文字列を入力したときに、ユーザー設定 (上書き) も反映する <xref:System.Globalization.NumberFormatInfo> オブジェクトによって文字列が解析されると、解析操作によって正しい結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-351">When the user enters a string that reflects user settings, and the string is parsed by a <xref:System.Globalization.NumberFormatInfo> object that also reflects user settings (overrides), the parsing operation returns a correct result.</span></span> <span data-ttu-id="2659e-352">ただし、標準の en-us カルチャ設定を反映する <xref:System.Globalization.NumberFormatInfo> オブジェクトによって文字列が解析された場合、グループの区切り記号のコンマ記号が間違っていて、正しくない結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-352">However, when the string is parsed by a <xref:System.Globalization.NumberFormatInfo> object that reflects standard en-US cultural settings, it mistakes the comma symbol for a group separator and returns an incorrect result.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)]  
  
<a name="ParseSerial"></a>   
### <a name="serializing-and-deserializing-numeric-data"></a><span data-ttu-id="2659e-353">数値データのシリアル化と逆シリアル化</span><span class="sxs-lookup"><span data-stu-id="2659e-353">Serializing and deserializing numeric data</span></span>  
 <span data-ttu-id="2659e-354">数値データを文字列形式でシリアル化し、後で逆シリアル化および解析する場合は、インバリアントカルチャの規則を使用して、文字列を生成および解析する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-354">When numeric data is serialized in string format and later deserialized and parsed, the strings should be generated and parsed by using the conventions of the invariant culture.</span></span> <span data-ttu-id="2659e-355">書式設定および解析操作には、特定のカルチャの規則が反映されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-355">The formatting and parsing operations should never reflect the conventions of a specific culture.</span></span> <span data-ttu-id="2659e-356">カルチャ固有の設定を使用する場合、データの移植性は厳密に制限されます。カルチャ固有の設定が、シリアル化されたスレッドと同じであるスレッドでのみ、正常に逆シリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-356">If culture-specific settings are used, the portability of the data is strictly limited; it can be successfully deserialized only on a thread whose culture-specific settings are identical to those of the thread on which it was serialized.</span></span> <span data-ttu-id="2659e-357">場合によっては、これは、シリアル化されたのと同じシステム上でデータを正常に逆シリアル化することもできないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="2659e-357">In some cases, this means that the data cannot even be successfully deserialized on the same system on which it was serialized.</span></span>  
  
 <span data-ttu-id="2659e-358">次の例は、この原則に違反した場合に発生する可能性があることを示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-358">The following example illustrates what can happen when this principle is violated.</span></span> <span data-ttu-id="2659e-359">現在のスレッドが en-us カルチャのカルチャ固有の設定を使用している場合、配列内の浮動小数点値は文字列に変換されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-359">Floating-point values in an array are converted to strings when the current thread uses the culture-specific settings of the en-US culture.</span></span> <span data-ttu-id="2659e-360">データは、en-us カルチャのカルチャ固有の設定を使用するスレッドによって解析されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-360">The data is then parsed by a thread that uses the culture-specific settings of the en-GB culture.</span></span> <span data-ttu-id="2659e-361">この場合、各解析操作は成功しますが、データのラウンドトリップが正常に行われず、データの破損が発生します。</span><span class="sxs-lookup"><span data-stu-id="2659e-361">In this case, although each parsing operation succeeds, the data does not round-trip successfully and data corruption occurs.</span></span> <span data-ttu-id="2659e-362">それ以外の場合は、解析操作が失敗し、<xref:System.FormatException> 例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-362">In other cases, a parsing operation could fail and a <xref:System.FormatException> exception could be thrown.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)]
 [!code-vb[System.Globalization.NumberFormatInfo.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)]  
  
   
  
## Examples  
 <span data-ttu-id="2659e-363">次の例は、対応する <xref:System.Globalization.CultureInfo> オブジェクトの <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得し、取得したオブジェクトを使用して、特定のカルチャの数値書式情報を照会する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-363">The following example shows how to retrieve a <xref:System.Globalization.NumberFormatInfo> object for a corresponding <xref:System.Globalization.CultureInfo> object, and use the retrieved object to query number formatting information for the particular culture.</span></span>  
  
 [!code-cpp[NumberFormatInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberFormatInfo/cpp/NumberFormatInfo.cpp#1)]
 [!code-csharp[NumberFormatInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberFormatInfo/CS/NumberFormatInfo.cs#1)]
 [!code-vb[NumberFormatInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberFormatInfo/vb/numberformatinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.IFormatProvider" />
    <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="2659e-364">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="2659e-364">Custom Numeric Format Strings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NumberFormatInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NumberFormatInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2659e-365">カルチャに依存しない (インバリアントな) <see cref="T:System.Globalization.NumberFormatInfo" /> クラスの新しい書き込み可能インスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2659e-365">Initializes a new writable instance of the <see cref="T:System.Globalization.NumberFormatInfo" /> class that is culture-independent (invariant).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-366">アプリケーションでユーザー定義の書式設定が必要な場合は、新しいインスタンスのプロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-366">The properties of the new instance can be modified if your application needs user-defined formatting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Clone() cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Clone();" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; obj" Usage="numberFormatInfo.Clone " FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="numberFormatInfo.Clone " FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2659e-367"><see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトのシャロー コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="2659e-367">Creates a shallow copy of the <see cref="T:System.Globalization.NumberFormatInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="2659e-368">元の <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトからコピーされた新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2659e-368">A new object copied from the original <see cref="T:System.Globalization.NumberFormatInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-369">元の <xref:System.Globalization.NumberFormatInfo> オブジェクトが読み取り専用の場合でも、複製は書き込み可能です。</span><span class="sxs-lookup"><span data-stu-id="2659e-369">The clone is writable even if the original <xref:System.Globalization.NumberFormatInfo> object is read-only.</span></span> <span data-ttu-id="2659e-370">そのため、複製のプロパティは、ユーザー定義のパターンで変更できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-370">Therefore, the properties of the clone can be modified with user-defined patterns.</span></span>  
  
 <span data-ttu-id="2659e-371">オブジェクトの簡易コピーは、オブジェクトのコピーにすぎません。</span><span class="sxs-lookup"><span data-stu-id="2659e-371">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="2659e-372">オブジェクトに他のオブジェクトへの参照が含まれている場合、シャローコピーは参照されるオブジェクトのコピーを作成しません。</span><span class="sxs-lookup"><span data-stu-id="2659e-372">If the object contains references to other objects, the shallow copy will not create copies of the referred objects.</span></span> <span data-ttu-id="2659e-373">代わりに、元のオブジェクトが参照されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-373">It will refer to the original objects instead.</span></span> <span data-ttu-id="2659e-374">一方、オブジェクトの詳細コピーでは、オブジェクトのコピーと、そのオブジェクトによって直接または間接的に参照されるすべてのもののコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-374">On the other hand, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="2659e-375"><xref:System.Globalization.NumberFormatInfo> オブジェクトの場合、すべてのインスタンスプロパティをコピーするには、簡易コピーで十分です。これは、オブジェクト参照を返すすべてのプロパティが `static` (Visual Basic で`Shared`) ためです。</span><span class="sxs-lookup"><span data-stu-id="2659e-375">In the case of a <xref:System.Globalization.NumberFormatInfo> object, a shallow copy is sufficient for copying all instance properties, because all properties that return object references are `static` (`Shared` in Visual Basic).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-376">次の例では、<xref:System.Globalization.NumberFormatInfo.Clone%2A> メソッドを使用して、現在のスレッドカルチャの数値書式指定規則を表す <xref:System.Globalization.NumberFormatInfo> オブジェクトの読み取り/書き込みコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="2659e-376">The following example uses the <xref:System.Globalization.NumberFormatInfo.Clone%2A> method to create a read/write copy of a <xref:System.Globalization.NumberFormatInfo> object that represents the numeric formatting conventions of the current thread culture.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalDigits">
      <MemberSignature Language="C#" Value="public int CurrencyDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-377">通貨の値で使用する小数点以下の桁数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-377">Gets or sets the number of decimal places to use in currency values.</span></span></summary>
        <value><span data-ttu-id="2659e-378">通貨の値で使用する小数点以下の桁数。</span><span class="sxs-lookup"><span data-stu-id="2659e-378">The number of decimal places to use in currency values.</span></span> <span data-ttu-id="2659e-379"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 2 です。</span><span class="sxs-lookup"><span data-stu-id="2659e-379">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-380"><xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> プロパティは、数値の書式設定操作で精度指定子を指定せずに、"C" 標準書式指定文字列と共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-380">The <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> property is used with the "C" standard format string without a precision specifier in numeric formatting operations.</span></span> <span data-ttu-id="2659e-381">小数点区切り文字の後に表示される既定の小数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-381">It defines the default number of fractional digits that appear after the decimal separator.</span></span> <span data-ttu-id="2659e-382">精度指定子が使用されている場合、この値はオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="2659e-382">This value is overridden if a precision specifier is used.</span></span> <span data-ttu-id="2659e-383">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-383">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-384">次の例は、<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-384">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A> property.</span></span>  
  
 [!code-cpp[CurrencyDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalDigits/CPP/currencydecimaldigits.cpp#1)]
 [!code-csharp[CurrencyDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalDigits/CS/currencydecimaldigits.cs#1)]
 [!code-vb[CurrencyDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalDigits/VB/currencydecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2659e-385">プロパティが、0 より小さい値か、99 より大きい値に設定されようとしています。</span><span class="sxs-lookup"><span data-stu-id="2659e-385">The property is being set to a value that is less than 0 or greater than 99.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-386">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-386">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyDecimalSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-387">通貨の値で桁区切り記号として使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-387">Gets or sets the string to use as the decimal separator in currency values.</span></span></summary>
        <value><span data-ttu-id="2659e-388">通貨の値で桁区切り記号として使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-388">The string to use as the decimal separator in currency values.</span></span> <span data-ttu-id="2659e-389"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "." です。</span><span class="sxs-lookup"><span data-stu-id="2659e-389">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is ".".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-390">このプロパティの初期値は、コントロールパネルの **[地域と言語]** 項目の設定から取得されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-390">The initial value of this property is derived from the settings in the **Region and Language** item in Control Panel.</span></span>  
  
 <span data-ttu-id="2659e-391">"C" 標準書式指定文字列と共に <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> プロパティを使用して、整数を小数部と区切る記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-391">The <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> property is used with the "C" standard format string to define the symbol that separates integral from fractional digits.</span></span> <span data-ttu-id="2659e-392">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-392">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-393">次の例は、<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-393">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A> property.</span></span>  
  
 [!code-cpp[CurrencyDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyDecimalSeparator/CPP/currencydecimalseparator.cpp#1)]
 [!code-csharp[CurrencyDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyDecimalSeparator/CS/currencydecimalseparator.cs#1)]
 [!code-vb[CurrencyDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyDecimalSeparator/VB/currencydecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-394">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-394">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-395">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-395">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2659e-396">プロパティが空の文字列に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-396">The property is being set to an empty string.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSeparator">
      <MemberSignature Language="C#" Value="public string CurrencyGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-397">通貨の値で小数点の左にある数字のグループを区切る文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-397">Gets or sets the string that separates groups of digits to the left of the decimal in currency values.</span></span></summary>
        <value><span data-ttu-id="2659e-398">通貨の値で小数点の左にある数字のグループを区切る文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-398">The string that separates groups of digits to the left of the decimal in currency values.</span></span> <span data-ttu-id="2659e-399"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "," です。</span><span class="sxs-lookup"><span data-stu-id="2659e-399">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is ",".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-400">このプロパティの初期値は、コントロールパネルの **[地域と言語**] 項目の設定から取得されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-400">The initial value of this property is derived from the settings in the **Regional and Language** item in Control Panel.</span></span>  
  
 <span data-ttu-id="2659e-401">"C" 標準書式指定文字列と共に <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> プロパティを使用して、整数の桁のグループを区切るシンボルを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-401">The <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> property is used with the "C" standard format string to define the symbol that separates groups of integral digits.</span></span> <span data-ttu-id="2659e-402">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-402">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-403">次の例は、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-403">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A> property.</span></span>  
  
 [!code-cpp[CurrencyGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSeparator/CPP/currencygroupseparator.cpp#1)]
 [!code-csharp[CurrencyGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSeparator/CS/currencygroupseparator.cs#1)]
 [!code-vb[CurrencyGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSeparator/VB/currencygroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-404">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-404">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-405">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-405">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyGroupSizes">
      <MemberSignature Language="C#" Value="public int[] CurrencyGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] CurrencyGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ CurrencyGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-406">通貨の値で小数点の左にある各グループの数字の数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-406">Gets or sets the number of digits in each group to the left of the decimal in currency values.</span></span></summary>
        <value><span data-ttu-id="2659e-407">通貨の値で小数点の左にある各グループの数字の数。</span><span class="sxs-lookup"><span data-stu-id="2659e-407">The number of digits in each group to the left of the decimal in currency values.</span></span> <span data-ttu-id="2659e-408"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 1 つだけの要素を持つ 1 次元配列であり、その要素は 3 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-408">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is a one-dimensional array with only one element, which is set to 3.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-409">"C" 標準書式指定文字列では、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> プロパティを使用して、整数グループに出現する桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-409">The <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> property is used with the "C" standard format string to define the number of digits that appear in integral groups.</span></span> <span data-ttu-id="2659e-410">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-410">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span> <span data-ttu-id="2659e-411">1次元配列のすべての要素は、1 ~ 9 の整数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-411">Every element in the one-dimensional array must be an integer from 1 through 9.</span></span> <span data-ttu-id="2659e-412">最後の要素には0を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-412">The last element can be 0.</span></span>  
  
 <span data-ttu-id="2659e-413">配列の最初の要素は、<xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>のすぐ左にある最下位の数字グループに含まれる要素の数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-413">The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>.</span></span> <span data-ttu-id="2659e-414">後続の各要素は、前のグループの左側にある次の重要な数字のグループを参照します。</span><span class="sxs-lookup"><span data-stu-id="2659e-414">Each subsequent element refers to the next significant group of digits to the left of the previous group.</span></span> <span data-ttu-id="2659e-415">配列の最後の要素が0でない場合、残りの数字は配列の最後の要素に基づいてグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-415">If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array.</span></span> <span data-ttu-id="2659e-416">最後の要素が0の場合、残りの桁はグループ化されません。</span><span class="sxs-lookup"><span data-stu-id="2659e-416">If the last element is 0, the remaining digits are not grouped.</span></span>  
  
 <span data-ttu-id="2659e-417">たとえば、配列に {3, 4, 5} が含まれている場合、数字は "$ 55, 55555, 55555, 55555, 4444, 333.00" のようにグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-417">For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to "$55,55555,55555,55555,4444,333.00".</span></span> <span data-ttu-id="2659e-418">配列に {3, 4, 0} が含まれている場合、数字は "$ 55555555555555555, 4444, 333.00" のようにグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-418">If the array contains { 3, 4, 0 }, the digits are grouped similar to "$55555555555555555,4444,333.00".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-419">次の例は、<xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-419">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A> property.</span></span>  
  
 [!code-cpp[CurrencyGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/CurrencyGroupSizes/CPP/currencygroupsizes.cpp#1)]
 [!code-csharp[CurrencyGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/CurrencyGroupSizes/CS/currencygroupsizes.cs#1)]
 [!code-vb[CurrencyGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CurrencyGroupSizes/VB/currencygroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-420">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-420">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2659e-421">プロパティが設定され、配列には 0 より小さいか、9 よりも大きいエントリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-421">The property is being set and the array contains an entry that is less than 0 or greater than 9.</span></span>  
  
 <span data-ttu-id="2659e-422">または</span><span class="sxs-lookup"><span data-stu-id="2659e-422">-or-</span></span>  
  
 <span data-ttu-id="2659e-423">プロパティが設定され、配列には 0 に設定されているエントリ (最後のエントリ以外) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-423">The property is being set and the array contains an entry, other than the last entry, that is set to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-424">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-424">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyNegativePattern">
      <MemberSignature Language="C#" Value="public int CurrencyNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-425">負の通貨値の形式パターンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-425">Gets or sets the format pattern for negative currency values.</span></span></summary>
        <value><span data-ttu-id="2659e-426">負の通貨値の形式パターン。</span><span class="sxs-lookup"><span data-stu-id="2659e-426">The format pattern for negative currency values.</span></span> <span data-ttu-id="2659e-427"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 0 で、"($n)" を表します。"$" は <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> で、<paramref name="n" /> は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-427">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is 0, which represents "($n)", where "$" is the <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> and <paramref name="n" /> is a number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-428"><xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> プロパティは、負の通貨値のパターンを定義するために "C" 標準書式指定文字列と共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-428">The <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> property is used with the "C" standard format string to define the pattern of negative currency values.</span></span> <span data-ttu-id="2659e-429">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-429">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span> <span data-ttu-id="2659e-430">このプロパティには、次の表のいずれかの値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-430">This property has one of the values in the following table.</span></span> <span data-ttu-id="2659e-431">記号 "$" は <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>、記号 "-" は <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>、`n` は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-431">The symbol "$" is the <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A>, the symbol "-" is the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, and `n` is a number.</span></span>  
  
|<span data-ttu-id="2659e-432">値</span><span class="sxs-lookup"><span data-stu-id="2659e-432">Value</span></span>|<span data-ttu-id="2659e-433">関連付けられたパターン</span><span class="sxs-lookup"><span data-stu-id="2659e-433">Associated pattern</span></span>|  
|-----------|------------------------|  
|<span data-ttu-id="2659e-434">0</span><span class="sxs-lookup"><span data-stu-id="2659e-434">0</span></span>|<span data-ttu-id="2659e-435">($n)</span><span class="sxs-lookup"><span data-stu-id="2659e-435">($n)</span></span>|  
|<span data-ttu-id="2659e-436">1</span><span class="sxs-lookup"><span data-stu-id="2659e-436">1</span></span>|<span data-ttu-id="2659e-437">-$n</span><span class="sxs-lookup"><span data-stu-id="2659e-437">-$n</span></span>|  
|<span data-ttu-id="2659e-438">2</span><span class="sxs-lookup"><span data-stu-id="2659e-438">2</span></span>|<span data-ttu-id="2659e-439">$-n</span><span class="sxs-lookup"><span data-stu-id="2659e-439">$-n</span></span>|  
|<span data-ttu-id="2659e-440">3</span><span class="sxs-lookup"><span data-stu-id="2659e-440">3</span></span>|<span data-ttu-id="2659e-441">$n-</span><span class="sxs-lookup"><span data-stu-id="2659e-441">$n-</span></span>|  
|<span data-ttu-id="2659e-442">4</span><span class="sxs-lookup"><span data-stu-id="2659e-442">4</span></span>|<span data-ttu-id="2659e-443">(n $)</span><span class="sxs-lookup"><span data-stu-id="2659e-443">(n$)</span></span>|  
|<span data-ttu-id="2659e-444">5</span><span class="sxs-lookup"><span data-stu-id="2659e-444">5</span></span>|<span data-ttu-id="2659e-445">-n$</span><span class="sxs-lookup"><span data-stu-id="2659e-445">-n$</span></span>|  
|<span data-ttu-id="2659e-446">6</span><span class="sxs-lookup"><span data-stu-id="2659e-446">6</span></span>|<span data-ttu-id="2659e-447">n-$</span><span class="sxs-lookup"><span data-stu-id="2659e-447">n-$</span></span>|  
|<span data-ttu-id="2659e-448">7</span><span class="sxs-lookup"><span data-stu-id="2659e-448">7</span></span>|<span data-ttu-id="2659e-449">n $-</span><span class="sxs-lookup"><span data-stu-id="2659e-449">n$-</span></span>|  
|<span data-ttu-id="2659e-450">8</span><span class="sxs-lookup"><span data-stu-id="2659e-450">8</span></span>|<span data-ttu-id="2659e-451">-n $</span><span class="sxs-lookup"><span data-stu-id="2659e-451">-n $</span></span>|  
|<span data-ttu-id="2659e-452">9</span><span class="sxs-lookup"><span data-stu-id="2659e-452">9</span></span>|<span data-ttu-id="2659e-453">-$ n</span><span class="sxs-lookup"><span data-stu-id="2659e-453">-$ n</span></span>|  
|<span data-ttu-id="2659e-454">10</span><span class="sxs-lookup"><span data-stu-id="2659e-454">10</span></span>|<span data-ttu-id="2659e-455">n $-</span><span class="sxs-lookup"><span data-stu-id="2659e-455">n $-</span></span>|  
|<span data-ttu-id="2659e-456">11</span><span class="sxs-lookup"><span data-stu-id="2659e-456">11</span></span>|<span data-ttu-id="2659e-457">$ n-</span><span class="sxs-lookup"><span data-stu-id="2659e-457">$ n-</span></span>|  
|<span data-ttu-id="2659e-458">12</span><span class="sxs-lookup"><span data-stu-id="2659e-458">12</span></span>|<span data-ttu-id="2659e-459">$ -n</span><span class="sxs-lookup"><span data-stu-id="2659e-459">$ -n</span></span>|  
|<span data-ttu-id="2659e-460">13</span><span class="sxs-lookup"><span data-stu-id="2659e-460">13</span></span>|<span data-ttu-id="2659e-461">n-$</span><span class="sxs-lookup"><span data-stu-id="2659e-461">n- $</span></span>|  
|<span data-ttu-id="2659e-462">14</span><span class="sxs-lookup"><span data-stu-id="2659e-462">14</span></span>|<span data-ttu-id="2659e-463">($ n)</span><span class="sxs-lookup"><span data-stu-id="2659e-463">($ n)</span></span>|  
|<span data-ttu-id="2659e-464">15</span><span class="sxs-lookup"><span data-stu-id="2659e-464">15</span></span>|<span data-ttu-id="2659e-465">(n $)</span><span class="sxs-lookup"><span data-stu-id="2659e-465">(n $)</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="2659e-466">次の例は、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> プロパティで負の通貨値の形式を定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-466">The following example shows how the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> property defines the format of negative currency values.</span></span>  <span data-ttu-id="2659e-467">ホストコンピューターに定義されている特定のカルチャをすべて取得し、各カルチャの <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> プロパティ値、関連付けられているパターン、通貨値として書式設定された数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-467">It retrieves all the specific cultures that are defined on the host computer and displays each culture's <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> property value, its associated pattern, and a number formatted as a currency value.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/cs/currencynegativepattern1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencyNegativePattern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencynegativepattern/vb/currencynegativepattern1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2659e-468">プロパティが 0 より小さい値か、15 より大きい値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-468">The property is being set to a value that is less than 0 or greater than 15.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-469">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-469">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyPositivePattern">
      <MemberSignature Language="C#" Value="public int CurrencyPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencyPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-470">通貨の正の値の形式パターンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-470">Gets or sets the format pattern for positive currency values.</span></span></summary>
        <value><span data-ttu-id="2659e-471">通貨の正の値の形式パターン。</span><span class="sxs-lookup"><span data-stu-id="2659e-471">The format pattern for positive currency values.</span></span> <span data-ttu-id="2659e-472"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 0 で、"$n" を表します。"$" は <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> で、<paramref name="n" /> は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-472">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is 0, which represents "$n", where "$" is the <see cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" /> and <paramref name="n" /> is a number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-473"><xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> プロパティは、正の通貨値のパターンを定義するために "C" 標準書式指定文字列と共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-473">The <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property is used with the "C" standard format string to define pattern of positive currency values.</span></span> <span data-ttu-id="2659e-474">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-474">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span> <span data-ttu-id="2659e-475">このプロパティには、次の表のいずれかの値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-475">This property has one of the values in the following table.</span></span> <span data-ttu-id="2659e-476">記号 "$" は <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> で、`n` は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-476">The symbol "$" is the <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> and `n` is a number.</span></span>  
  
|<span data-ttu-id="2659e-477">値</span><span class="sxs-lookup"><span data-stu-id="2659e-477">Value</span></span>|<span data-ttu-id="2659e-478">関連付けられたパターン</span><span class="sxs-lookup"><span data-stu-id="2659e-478">Associated pattern</span></span>|  
|-----------|------------------------|  
|<span data-ttu-id="2659e-479">0</span><span class="sxs-lookup"><span data-stu-id="2659e-479">0</span></span>|<span data-ttu-id="2659e-480">$n</span><span class="sxs-lookup"><span data-stu-id="2659e-480">$n</span></span>|  
|<span data-ttu-id="2659e-481">1</span><span class="sxs-lookup"><span data-stu-id="2659e-481">1</span></span>|<span data-ttu-id="2659e-482">n$</span><span class="sxs-lookup"><span data-stu-id="2659e-482">n$</span></span>|  
|<span data-ttu-id="2659e-483">2</span><span class="sxs-lookup"><span data-stu-id="2659e-483">2</span></span>|<span data-ttu-id="2659e-484">$ n</span><span class="sxs-lookup"><span data-stu-id="2659e-484">$ n</span></span>|  
|<span data-ttu-id="2659e-485">3</span><span class="sxs-lookup"><span data-stu-id="2659e-485">3</span></span>|<span data-ttu-id="2659e-486">n $</span><span class="sxs-lookup"><span data-stu-id="2659e-486">n $</span></span>|  
  
 <span data-ttu-id="2659e-487">このパターンでは、正符号はサポートされていないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-487">Note that the pattern does not support a positive sign.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2659e-488">プロパティが 0 より小さい値か、または 3 より大きい値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-488">The property is being set to a value that is less than 0 or greater than 3.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-489">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-489">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public string CurrencySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-490">通貨記号として使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-490">Gets or sets the string to use as the currency symbol.</span></span></summary>
        <value><span data-ttu-id="2659e-491">通貨記号として使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-491">The string to use as the currency symbol.</span></span> <span data-ttu-id="2659e-492"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "¤" です。</span><span class="sxs-lookup"><span data-stu-id="2659e-492">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is "¤".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-493">数値が "C"[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)で書式設定されている場合は、<xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> プロパティに割り当てられた文字列が結果文字列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="2659e-493">The string assigned to the <xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A> property is included in the result string when a numeric value is formatted with the "C" [standard numeric format string](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-494">次の例では、現在のカルチャの通貨記号を表示し、"C" 標準の数値書式指定文字列を使用して通貨値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-494">The following example displays the currency symbol for the current culture and uses the "C" standard numeric format string to format a currency value.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/cs/currencysymbolex1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrencySymbol#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currencysymbol/vb/currencysymbolex1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-495">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-495">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-496">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-496">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo CurrentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo CurrentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ CurrentInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.CurrentInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-497">現在のカルチャに基づいて値を形式指定する読み取り専用 <see cref="T:System.Globalization.NumberFormatInfo" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-497">Gets a read-only <see cref="T:System.Globalization.NumberFormatInfo" /> that formats values based on the current culture.</span></span></summary>
        <value><span data-ttu-id="2659e-498">現在のスレッドのカルチャに基づく読み取り専用 <see cref="T:System.Globalization.NumberFormatInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2659e-498">A read-only <see cref="T:System.Globalization.NumberFormatInfo" /> based on the culture of the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-499"><xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> プロパティから <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得することは、`CultureInfo.CurrentCulture.NumberFormat` プロパティから <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得することと同じです。</span><span class="sxs-lookup"><span data-stu-id="2659e-499">Retrieving a <xref:System.Globalization.NumberFormatInfo> object from the <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> property is equivalent to retrieving a <xref:System.Globalization.NumberFormatInfo> object from the `CultureInfo.CurrentCulture.NumberFormat` property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-500">次の例は、<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> プロパティと `CultureInfo.CurrentCulture.NumberFormat` プロパティによって返されるオブジェクトが同一であることを示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-500">The following example shows that the objects returned by the <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> and   `CultureInfo.CurrentCulture.NumberFormat` properties are identical.</span></span> <span data-ttu-id="2659e-501">次に、リフレクションを使用して、現在のカルチャが en-us であるシステムの <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> プロパティによって返された <xref:System.Globalization.NumberFormatInfo> オブジェクトのプロパティ値を表示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-501">It then uses reflection to display the property values of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A> property on a system whose current culture is en-US.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/cs/currentinfo1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.CurrentInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.currentinfo/vb/currentinfo1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DigitSubstitution">
      <MemberSignature Language="C#" Value="public System.Globalization.DigitShapes DigitSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.DigitShapes DigitSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property DigitSubstitution As DigitShapes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::DigitShapes DigitSubstitution { System::Globalization::DigitShapes get(); void set(System::Globalization::DigitShapes value); };" />
      <MemberSignature Language="F#" Value="member this.DigitSubstitution : System.Globalization.DigitShapes with get, set" Usage="System.Globalization.NumberFormatInfo.DigitSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DigitShapes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-502">グラフィカル ユーザー インターフェイスが数字の形状を表示する方法を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-502">Gets or sets a value that specifies how the graphical user interface displays the shape of a digit.</span></span></summary>
        <value><span data-ttu-id="2659e-503">カルチャ固有の数字形状を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="2659e-503">One of the enumeration values that specifies the culture-specific digit shape.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="2659e-504"><xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> プロパティは、将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-504">The <xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A> property is reserved for future use.</span></span> <span data-ttu-id="2659e-505">現在、このメソッドは、現在の <xref:System.Globalization.NumberFormatInfo> オブジェクトの解析操作または書式設定操作では使用されません。</span><span class="sxs-lookup"><span data-stu-id="2659e-505">Currently, it is not used in either parsing or formatting operations for the current <xref:System.Globalization.NumberFormatInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-506">現在の <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-506">The current <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2659e-507">セット操作の値が正しい <see cref="T:System.Globalization.DigitShapes" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="2659e-507">The value in a set operation is not a valid <see cref="T:System.Globalization.DigitShapes" /> value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="numberFormatInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><span data-ttu-id="2659e-508">要求される形式指定サービスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="2659e-508">The <see cref="T:System.Type" /> of the required formatting service.</span></span></param>
        <summary><span data-ttu-id="2659e-509">数値形式指定サービスを提供する指定した型のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-509">Gets an object of the specified type that provides a number formatting service.</span></span></summary>
        <returns><span data-ttu-id="2659e-510"><see cref="T:System.Globalization.NumberFormatInfo" /> が現在の <paramref name="formatType" /> の型と同じ場合は、現在の <see cref="T:System.Globalization.NumberFormatInfo" />。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2659e-510">The current <see cref="T:System.Globalization.NumberFormatInfo" />, if <paramref name="formatType" /> is the same as the type of the current <see cref="T:System.Globalization.NumberFormatInfo" />; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-511">基本データ型でサポートされている `Format(String, IFormatProvider)` メソッドは、現在の <xref:System.Globalization.NumberFormatInfo> が <xref:System.IFormatProvider> パラメーターとして渡されたときに、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2659e-511">The `Format(String, IFormatProvider)` methods supported by the base data types invoke this method when the current <xref:System.Globalization.NumberFormatInfo> is passed as the <xref:System.IFormatProvider> parameter.</span></span> <span data-ttu-id="2659e-512">このメソッドは、<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> を実装します。</span><span class="sxs-lookup"><span data-stu-id="2659e-512">This method implements <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo GetInstance (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo GetInstance(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (formatProvider As IFormatProvider) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ GetInstance(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="static member GetInstance : IFormatProvider -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.GetInstance formatProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider"><span data-ttu-id="2659e-513"><see cref="T:System.IFormatProvider" /> を取得するために使用する <see cref="T:System.Globalization.NumberFormatInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2659e-513">The <see cref="T:System.IFormatProvider" /> used to get the <see cref="T:System.Globalization.NumberFormatInfo" />.</span></span>  
  
<span data-ttu-id="2659e-514">または</span><span class="sxs-lookup"><span data-stu-id="2659e-514">-or-</span></span> 
 <span data-ttu-id="2659e-515"><see langword="null" /> を取得する <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2659e-515"><see langword="null" /> to get <see cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />.</span></span></param>
        <summary><span data-ttu-id="2659e-516">指定された <see cref="T:System.Globalization.NumberFormatInfo" /> に関連付けられている <see cref="T:System.IFormatProvider" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-516">Gets the <see cref="T:System.Globalization.NumberFormatInfo" /> associated with the specified <see cref="T:System.IFormatProvider" />.</span></span></summary>
        <returns><span data-ttu-id="2659e-517">指定した <see cref="T:System.Globalization.NumberFormatInfo" /> に関連付けられている <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="2659e-517">The <see cref="T:System.Globalization.NumberFormatInfo" /> associated with the specified <see cref="T:System.IFormatProvider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-518">このメソッドでは、型パラメーターとして <xref:System.Globalization.NumberFormatInfo> を使用して `formatProvider` の <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="2659e-518">This method uses the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method of `formatProvider` using <xref:System.Globalization.NumberFormatInfo> as the Type parameter.</span></span> <span data-ttu-id="2659e-519">`formatProvider` が `null` 場合、または <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> が `null`を返す場合、このメソッドは <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>を返します。</span><span class="sxs-lookup"><span data-stu-id="2659e-519">If `formatProvider` is `null` or if <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> returns `null`, this method returns <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="2659e-520">アプリケーションは、次のいずれかの方法を使用して、特定のカルチャの <xref:System.Globalization.NumberFormatInfo> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-520">Your application gets a <xref:System.Globalization.NumberFormatInfo> object for a specific culture using one of the following methods:</span></span>  
  
-   <span data-ttu-id="2659e-521"><xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="2659e-521">Through the <xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="2659e-522"><xref:System.Globalization.NumberFormatInfo.GetInstance%2A> メソッドを使用します。 `provider` は <xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="2659e-522">Through the <xref:System.Globalization.NumberFormatInfo.GetInstance%2A> method where `provider` is a <xref:System.Globalization.CultureInfo>.</span></span>  
  
 <span data-ttu-id="2659e-523"><xref:System.Globalization.NumberFormatInfo> オブジェクトは、ニュートラルカルチャではなく、特定のカルチャに対してのみ作成されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-523">A <xref:System.Globalization.NumberFormatInfo> object is created only for the invariant culture or for specific cultures, not for neutral cultures.</span></span> <span data-ttu-id="2659e-524">インバリアントカルチャ、特定のカルチャ、およびニュートラルカルチャの詳細については、<xref:System.Globalization.CultureInfo> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-524">For more information about the invariant culture, specific cultures, and neutral cultures, see the <xref:System.Globalization.CultureInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvariantInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo InvariantInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.NumberFormatInfo InvariantInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantInfo As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::NumberFormatInfo ^ InvariantInfo { System::Globalization::NumberFormatInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantInfo : System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.InvariantInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-525">カルチャに依存しない (インバリアントな) 読み取り専用 <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-525">Gets a read-only <see cref="T:System.Globalization.NumberFormatInfo" /> object that is culture-independent (invariant).</span></span></summary>
        <value><span data-ttu-id="2659e-526">カルチャに依存しない (インバリアントな) 読み取り専用オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2659e-526">A read-only  object that is culture-independent (invariant).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-527">現在のカルチャに関係なく、このプロパティによって返されるこの <xref:System.Globalization.NumberFormatInfo> オブジェクトは変更されません。</span><span class="sxs-lookup"><span data-stu-id="2659e-527">This <xref:System.Globalization.NumberFormatInfo> object returned by this property does not change, regardless of the current culture.</span></span> <span data-ttu-id="2659e-528">これは、英語の言語に関連付けられているが国/地域に関連付けられていないカルチャであるインバリアントカルチャの書式指定規則を表します。</span><span class="sxs-lookup"><span data-stu-id="2659e-528">It represents the formatting conventions of the invariant culture, which is a culture associated with the English language but not with any country/region.</span></span> <span data-ttu-id="2659e-529">インバリアントカルチャは、カルチャに依存しない書式設定操作や、複数のカルチャにわたる表示に適した結果文字列を生成する書式指定操作で使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-529">The invariant culture is used in formatting operations that are culture-independent or that produce result strings suitable for display across multiple cultures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-530">次の例では、<xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>の既定のプロパティ値を表示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-530">The following example displays the default property values of the <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A>.</span></span>  
  
 [!code-cpp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CPP/invariantinfo.cpp#1)]
 [!code-csharp[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/CS/invariantinfo.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.InvariantInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.NumberFormatInfo.InvariantInfo/VB/invariantinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.NumberFormatInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-531">この <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2659e-531">Gets a value that indicates whether this <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="2659e-532"><see langword="true" /> が読み取り専用である場合は <see cref="T:System.Globalization.NumberFormatInfo" />、読み取り専用ではない場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="2659e-532"><see langword="true" /> if the <see cref="T:System.Globalization.NumberFormatInfo" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-533">読み取り専用 <xref:System.Globalization.NumberFormatInfo> のプロパティへの割り当てを実行しようとすると、<xref:System.InvalidOperationException>が発生します。</span><span class="sxs-lookup"><span data-stu-id="2659e-533">Attempting to perform an assignment to a property of a read-only <xref:System.Globalization.NumberFormatInfo> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="2659e-534">次の例に示すように、<xref:System.Globalization.NumberFormatInfo.Clone%2A> メソッドを呼び出して、読み取り専用のオブジェクトから読み取り/書き込み <xref:System.Globalization.NumberFormatInfo> オブジェクトを作成できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-534">You can call the <xref:System.Globalization.NumberFormatInfo.Clone%2A> method to create a read/write <xref:System.Globalization.NumberFormatInfo> object from a read-only object, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.IsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      </Docs>
    </Member>
    <Member MemberName="NaNSymbol">
      <MemberSignature Language="C#" Value="public string NaNSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NaNSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NaNSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NaNSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NaNSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NaNSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-535">IEEE NaN (非数) 値を表す文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-535">Gets or sets the string that represents the IEEE NaN (not a number) value.</span></span></summary>
        <value><span data-ttu-id="2659e-536">IEEE NaN (非数) 値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-536">The string that represents the IEEE NaN (not a number) value.</span></span> <span data-ttu-id="2659e-537"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "NaN" です。</span><span class="sxs-lookup"><span data-stu-id="2659e-537">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is "NaN".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-538">NaN 値の詳細については、「<xref:System.Double>」または「<xref:System.Single>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-538">For more information on NaN values, see <xref:System.Double> or <xref:System.Single>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-539">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-539">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-540">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-540">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      </Docs>
    </Member>
    <Member MemberName="NativeDigits">
      <MemberSignature Language="C#" Value="public string[] NativeDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] NativeDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NativeDigits As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ NativeDigits { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NativeDigits : string[] with get, set" Usage="System.Globalization.NumberFormatInfo.NativeDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-541">西洋数字 0 ～ 9 に等しいネイティブ数字の文字列配列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-541">Gets or sets a string array of native digits equivalent to the Western digits 0 through 9.</span></span></summary>
        <value><span data-ttu-id="2659e-542">西洋数字 0 ～ 9 に等しいネイティブ数字を含む文字列配列。</span><span class="sxs-lookup"><span data-stu-id="2659e-542">A string array that contains the native equivalent of the Western digits 0 through 9.</span></span> <span data-ttu-id="2659e-543">既定値は "0"、"1"、"2"、"3"、"4"、"5"、"6"、"7"、"8"、"9" を要素に持つ配列です。</span><span class="sxs-lookup"><span data-stu-id="2659e-543">The default is an array having the elements "0", "1", "2", "3", "4", "5", "6", "7", "8", and "9".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="2659e-544"><xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> プロパティによって指定された文字セットは、解析または書式設定操作には影響しません。</span><span class="sxs-lookup"><span data-stu-id="2659e-544">The character set that is specified by the <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> property has no effect on parsing or formatting operations.</span></span> <span data-ttu-id="2659e-545">数値または日付と時刻の値を書式設定または解析する場合は、基本ラテン数字 0 (U + 0030 ~) から 9 (U + 0039) のみが使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-545">Only the Basic Latin digits 0 (U+0030) through 9 (U+0039) are used when formatting or parsing numeric values or date and time values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-546"><xref:System.Globalization.NumberFormatInfo.NativeDigits%2A>プロパティの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-546">The following example demonstrates the <xref:System.Globalization.NumberFormatInfo.NativeDigits%2A> property.</span></span>  
  
 [!code-cpp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cpp/nd.cpp#1)]
 [!code-csharp[sys.glob.NFI.nativeDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/cs/nd.cs#1)]
 [!code-vb[sys.glob.NFI.nativeDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.NFI.nativeDigits/vb/nd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-547">現在の <see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-547">The current <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-548">設定操作の値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2659e-548">In a set operation, the value is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2659e-549">または</span><span class="sxs-lookup"><span data-stu-id="2659e-549">-or-</span></span> 
<span data-ttu-id="2659e-550">設定操作で、値配列の要素が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2659e-550">In a set operation, an element of the value array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2659e-551">設定操作で値配列に 10 個の要素がありません。</span><span class="sxs-lookup"><span data-stu-id="2659e-551">In a set operation, the value array does not contain 10 elements.</span></span>  
  
<span data-ttu-id="2659e-552">または</span><span class="sxs-lookup"><span data-stu-id="2659e-552">-or-</span></span> 
<span data-ttu-id="2659e-553">設定操作で、値配列の要素に、1 つの <see cref="T:System.Char" /> オブジェクトも、サロゲート ペアを構成する <see cref="T:System.Char" /> オブジェクトのペアも含まれていません。</span><span class="sxs-lookup"><span data-stu-id="2659e-553">In a set operation, an element of the value array does not contain either a single <see cref="T:System.Char" /> object or a pair of <see cref="T:System.Char" /> objects that comprise a surrogate pair.</span></span>  
  
<span data-ttu-id="2659e-554">または</span><span class="sxs-lookup"><span data-stu-id="2659e-554">-or-</span></span> 
<span data-ttu-id="2659e-555">設定操作で、値配列の要素が [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)で定義された数字ではありません。</span><span class="sxs-lookup"><span data-stu-id="2659e-555">In a set operation, an element of the value array is not a number digit as defined by the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span> <span data-ttu-id="2659e-556">つまり、配列要素中の数字は Unicode <see langword="Number, Decimal Digit" /> (Nd) General Category 値を持ちません。</span><span class="sxs-lookup"><span data-stu-id="2659e-556">That is, the digit in the array element does not have the Unicode <see langword="Number, Decimal Digit" /> (Nd) General Category value.</span></span>  
  
<span data-ttu-id="2659e-557">または</span><span class="sxs-lookup"><span data-stu-id="2659e-557">-or-</span></span> 
<span data-ttu-id="2659e-558">設定操作で、値配列内の要素の数値は配列内の要素の位置に対応していません。</span><span class="sxs-lookup"><span data-stu-id="2659e-558">In a set operation, the numeric value of an element in the value array does not correspond to the element's position in the array.</span></span> <span data-ttu-id="2659e-559">つまり、配列の 1 番目であるインデックス 0 の要素の数値が 0 でなく、インデックス 1 の要素の数値が 1 でありません。</span><span class="sxs-lookup"><span data-stu-id="2659e-559">That is, the element at index 0, which is the first element of the array, does not have a numeric value of 0, or the element at index 1 does not have a numeric value of 1.</span></span></exception>
        <altmember cref="T:System.Globalization.DigitShapes" />
      </Docs>
    </Member>
    <Member MemberName="NegativeInfinitySymbol">
      <MemberSignature Language="C#" Value="public string NegativeInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-560">負の無限大を表す文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-560">Gets or sets the string that represents negative infinity.</span></span></summary>
        <value><span data-ttu-id="2659e-561">負の無限大を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-561">The string that represents negative infinity.</span></span> <span data-ttu-id="2659e-562"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "-Infinity" です。</span><span class="sxs-lookup"><span data-stu-id="2659e-562">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is "-Infinity".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-563">負の無限大の詳細については、「<xref:System.Double>」または「<xref:System.Single>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-563">For more information on negative infinity, see <xref:System.Double> or <xref:System.Single>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-564">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-564">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-565">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-565">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="NegativeSign">
      <MemberSignature Language="C#" Value="public string NegativeSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NegativeSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberSignature Language="VB.NET" Value="Public Property NegativeSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NegativeSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NegativeSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.NegativeSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-566">関連付けられた数値が負であることを示す文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-566">Gets or sets the string that denotes that the associated number is negative.</span></span></summary>
        <value><span data-ttu-id="2659e-567">関連付けられた数値が負であることを示す文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-567">The string that denotes that the associated number is negative.</span></span> <span data-ttu-id="2659e-568"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "-" です。</span><span class="sxs-lookup"><span data-stu-id="2659e-568">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is "-".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-569">このプロパティは、書式設定と解析の両方の操作で使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-569">This property is used in both formatting and parsing operations.</span></span> <span data-ttu-id="2659e-570">書式設定操作での使用方法の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-570">For more information on its use in formatting operations, see the [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md) topics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-571">次の例では、インバリアントカルチャを表す読み取り/書き込み <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化し、その <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> プロパティに先頭線文字 (U + 203E) を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="2659e-571">The following example instantiates a read-write <xref:System.Globalization.CultureInfo> object that represents the invariant culture and assigns the OVERLINE character (U+203E) to its <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> property.</span></span> <span data-ttu-id="2659e-572">次に、この <xref:System.Globalization.CultureInfo> オブジェクトを使用して、負の浮動小数点数の配列を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-572">It then uses this <xref:System.Globalization.CultureInfo> object to format an array of negative floating-point numbers.</span></span>  
  
 [!code-csharp[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/cs/negativesign1.cs#1)]
 [!code-vb[System.Globalization.NumberFormatInfo.NegativeSign#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.negativesign/vb/negativesign1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-573">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-573">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-574">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-574">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalDigits">
      <MemberSignature Language="C#" Value="public int NumberDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-575">数値で使用する小数点以下の桁数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-575">Gets or sets the number of decimal places to use in numeric values.</span></span></summary>
        <value><span data-ttu-id="2659e-576">数値で使用する小数点以下の桁数。</span><span class="sxs-lookup"><span data-stu-id="2659e-576">The number of decimal places to use in numeric values.</span></span> <span data-ttu-id="2659e-577"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 2 です。</span><span class="sxs-lookup"><span data-stu-id="2659e-577">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-578"><xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> プロパティは、数値の書式設定操作で精度指定子が指定されていない "F" および "N" 標準書式指定文字列と共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-578">The <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> property is used with the "F" and "N" standard format strings without a precision specifier in numeric formatting operations.</span></span> <span data-ttu-id="2659e-579">小数点区切り文字の後に表示される既定の小数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-579">It defines the default number of fractional digits that appear after the decimal separator.</span></span> <span data-ttu-id="2659e-580">精度指定子が使用されている場合、この値はオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="2659e-580">This value is overridden if a precision specifier is used.</span></span> <span data-ttu-id="2659e-581">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-581">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-582">次の例は、<xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-582">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A> property.</span></span>  
  
 [!code-cpp[NumberDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalDigits/CPP/numberdecimaldigits.cpp#1)]
 [!code-csharp[NumberDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalDigits/CS/numberdecimaldigits.cs#1)]
 [!code-vb[NumberDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalDigits/VB/numberdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2659e-583">プロパティが、0 より小さい値か、99 より大きい値に設定されようとしています。</span><span class="sxs-lookup"><span data-stu-id="2659e-583">The property is being set to a value that is less than 0 or greater than 99.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-584">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-584">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="NumberDecimalSeparator">
      <MemberSignature Language="C#" Value="public string NumberDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-585">数値で桁区切り記号として使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-585">Gets or sets the string to use as the decimal separator in numeric values.</span></span></summary>
        <value><span data-ttu-id="2659e-586">数値で桁区切り記号として使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-586">The string to use as the decimal separator in numeric values.</span></span> <span data-ttu-id="2659e-587"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "." です。</span><span class="sxs-lookup"><span data-stu-id="2659e-587">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is ".".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-588">"E"、"F"、"G"、"N"、"R" の標準書式指定文字列と共に <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> プロパティを使用して、小数部から整数を区切るシンボルを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-588">The <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> property is used with the "E", "F", "G", "N", and "R" standard format strings to define the symbol that separates integral from fractional digits.</span></span> <span data-ttu-id="2659e-589">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-589">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
 <span data-ttu-id="2659e-590">このプロパティの初期値は、コントロールパネルの **[地域と言語]** 項目の設定から取得されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-590">The initial value of this property is derived from the settings in the **Region and Language** item in Control Panel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-591">次の例は、<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-591">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A> property.</span></span>  
  
 [!code-cpp[NumberDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberDecimalSeparator/CPP/numberdecimalseparator.cpp#1)]
 [!code-csharp[NumberDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberDecimalSeparator/CS/numberdecimalseparator.cs#1)]
 [!code-vb[NumberDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberDecimalSeparator/VB/numberdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-592">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-592">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-593">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-593">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2659e-594">プロパティが空の文字列に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-594">The property is being set to an empty string.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSeparator">
      <MemberSignature Language="C#" Value="public string NumberGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NumberGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NumberGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-595">数値で小数点の左にある数字のグループを区切る文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-595">Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.</span></span></summary>
        <value><span data-ttu-id="2659e-596">数値で小数点の左にある数字のグループを区切る文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-596">The string that separates groups of digits to the left of the decimal in numeric values.</span></span> <span data-ttu-id="2659e-597"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "," です。</span><span class="sxs-lookup"><span data-stu-id="2659e-597">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is ",".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-598">"N" 標準書式指定文字列と共に <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> プロパティを使用して、整数の桁のグループを区切るシンボルを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-598">The <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> property is used with the "N" standard format string to define the symbol that separates groups of integral digits.</span></span> <span data-ttu-id="2659e-599">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-599">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
 <span data-ttu-id="2659e-600">このプロパティの初期値は、コントロールパネルの **[地域と言語]** 項目の設定から取得されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-600">The initial value of this property is derived from the settings in the **Region and Language** item in Control Panel.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-601">次の例は、<xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-601">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A> property.</span></span>  
  
 [!code-cpp[NumberGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSeparator/CPP/numbergroupseparator.cpp#1)]
 [!code-csharp[NumberGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSeparator/CS/numbergroupseparator.cs#1)]
 [!code-vb[NumberGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSeparator/VB/numbergroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-602">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-602">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-603">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-603">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="NumberGroupSizes">
      <MemberSignature Language="C#" Value="public int[] NumberGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] NumberGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ NumberGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-604">数値で小数点の左にある各グループの数字の数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-604">Gets or sets the number of digits in each group to the left of the decimal in numeric values.</span></span></summary>
        <value><span data-ttu-id="2659e-605">数値で小数点の左にある各グループの数字の数。</span><span class="sxs-lookup"><span data-stu-id="2659e-605">The number of digits in each group to the left of the decimal in numeric values.</span></span> <span data-ttu-id="2659e-606"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 1 つだけの要素を持つ 1 次元配列であり、その要素は 3 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-606">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is a one-dimensional array with only one element, which is set to 3.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-607"><xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> プロパティの値は、"N" を使用して書式設定された数値の結果に影響します。</span><span class="sxs-lookup"><span data-stu-id="2659e-607">The value of the <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> property affects the result of number values that are formatted by using the "N" .</span></span> <span data-ttu-id="2659e-608">カスタム数値書式指定文字列またはその他の標準の数値書式指定文字列が使用されている場合、<xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> プロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-608">If a custom numeric format string or other standard numeric format strings are used, the value of the <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> property is ignored.</span></span>  
  
 <span data-ttu-id="2659e-609">1次元配列のすべての要素は、1 ~ 9 の整数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-609">Every element in the one-dimensional array must be an integer from 1 through 9.</span></span> <span data-ttu-id="2659e-610">最後の要素には0を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-610">The last element can be 0.</span></span>  
  
 <span data-ttu-id="2659e-611">配列の最初の要素は、<xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>のすぐ左にある最下位の数字グループに含まれる要素の数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-611">The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>.</span></span> <span data-ttu-id="2659e-612">後続の各要素は、前のグループの左側にある次の重要な数字のグループを参照します。</span><span class="sxs-lookup"><span data-stu-id="2659e-612">Each subsequent element refers to the next significant group of digits to the left of the previous group.</span></span> <span data-ttu-id="2659e-613">配列の最後の要素が0でない場合、残りの数字は配列の最後の要素に基づいてグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-613">If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array.</span></span> <span data-ttu-id="2659e-614">最後の要素が0の場合、残りの桁はグループ化されません。</span><span class="sxs-lookup"><span data-stu-id="2659e-614">If the last element is 0, the remaining digits are not grouped.</span></span>  
  
 <span data-ttu-id="2659e-615">たとえば、配列に {3, 4, 5} が含まれている場合、数字は "55, 55555, 55555, 55555, 4444, 333.00" のようにグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-615">For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to "55,55555,55555,55555,4444,333.00".</span></span> <span data-ttu-id="2659e-616">配列に {3, 4, 0} が含まれている場合、数字は "55555555555555555, 4444, 333.00" のようにグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-616">If the array contains { 3, 4, 0 }, the digits are grouped similar to "55555555555555555,4444,333.00".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-617">次の例は、<xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-617">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> property.</span></span>  
  
 [!code-cpp[NumberGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/NumberGroupSizes/CPP/numbergroupsizes.cpp#1)]
 [!code-csharp[NumberGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/NumberGroupSizes/CS/numbergroupsizes.cs#1)]
 [!code-vb[NumberGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/NumberGroupSizes/VB/numbergroupsizes.vb#1)]  
  
 <span data-ttu-id="2659e-618">次の例では、異なる <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> 配列を使用して値を出力します。</span><span class="sxs-lookup"><span data-stu-id="2659e-618">The following example prints a value using different <xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A> arrays.</span></span>  
  
 [!code-cpp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberGroupSizes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberGroupSizes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-619">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-619">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2659e-620">プロパティが設定され、配列には 0 より小さいか、9 よりも大きいエントリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-620">The property is being set and the array contains an entry that is less than 0 or greater than 9.</span></span>  
  
 <span data-ttu-id="2659e-621">または</span><span class="sxs-lookup"><span data-stu-id="2659e-621">-or-</span></span>  
  
 <span data-ttu-id="2659e-622">プロパティが設定され、配列には 0 に設定されているエントリ (最後のエントリ以外) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-622">The property is being set and the array contains an entry, other than the last entry, that is set to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-623">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-623">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="NumberNegativePattern">
      <MemberSignature Language="C#" Value="public int NumberNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property NumberNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NumberNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NumberNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-624">負の数値の形式パターンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-624">Gets or sets the format pattern for negative numeric values.</span></span></summary>
        <value><span data-ttu-id="2659e-625">負の数値の形式パターン。</span><span class="sxs-lookup"><span data-stu-id="2659e-625">The format pattern for negative numeric values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-626"><xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> プロパティは、標準の数値書式指定文字列 "N" で書式設定された負の値の形式を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-626">The <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> property defines the format of negative values formatted with the "N" standard numeric format string.</span></span> <span data-ttu-id="2659e-627">このプロパティには、次の表のいずれかの値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-627">This property has one of the values in the following table.</span></span> <span data-ttu-id="2659e-628">記号 "-" は <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> で、`n` は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-628">The symbol "-" is the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A> and `n` is a number.</span></span>  
  
|<span data-ttu-id="2659e-629">値</span><span class="sxs-lookup"><span data-stu-id="2659e-629">Value</span></span>|<span data-ttu-id="2659e-630">関連付けられたパターン</span><span class="sxs-lookup"><span data-stu-id="2659e-630">Associated pattern</span></span>|  
|-----------|------------------------|  
|<span data-ttu-id="2659e-631">0</span><span class="sxs-lookup"><span data-stu-id="2659e-631">0</span></span>|<span data-ttu-id="2659e-632">(n)</span><span class="sxs-lookup"><span data-stu-id="2659e-632">(n)</span></span>|  
|<span data-ttu-id="2659e-633">1</span><span class="sxs-lookup"><span data-stu-id="2659e-633">1</span></span>|<span data-ttu-id="2659e-634">-n</span><span class="sxs-lookup"><span data-stu-id="2659e-634">-n</span></span>|  
|<span data-ttu-id="2659e-635">2</span><span class="sxs-lookup"><span data-stu-id="2659e-635">2</span></span>|<span data-ttu-id="2659e-636">-n</span><span class="sxs-lookup"><span data-stu-id="2659e-636">- n</span></span>|  
|<span data-ttu-id="2659e-637">3</span><span class="sxs-lookup"><span data-stu-id="2659e-637">3</span></span>|<span data-ttu-id="2659e-638">n-</span><span class="sxs-lookup"><span data-stu-id="2659e-638">n-</span></span>|  
|<span data-ttu-id="2659e-639">4</span><span class="sxs-lookup"><span data-stu-id="2659e-639">4</span></span>|<span data-ttu-id="2659e-640">n -</span><span class="sxs-lookup"><span data-stu-id="2659e-640">n -</span></span>|  
  
 <span data-ttu-id="2659e-641"><xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> プロパティによって返されるインバリアントカルチャの既定値は1で、"-n" を表します。 *n*は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-641">The default value for the invariant culture returned by the <xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A> property is 1, which represents "-n", where *n* is a number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-642">次の例では、さまざまな <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> パターンを使用して値を表示します。</span><span class="sxs-lookup"><span data-stu-id="2659e-642">The following example displays a value using different <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A> patterns.</span></span>  
  
 [!code-cpp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/CS/source.cs#1)]
 [!code-vb[Classic NumberFormatInfo.NumberNegativePattern Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NumberFormatInfo.NumberNegativePattern Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2659e-643">プロパティが、0 より小さい値か、4 より大きい値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-643">The property is being set to a value that is less than 0 or greater than 4.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-644">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-644">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalDigits">
      <MemberSignature Language="C#" Value="public int PercentDecimalDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentDecimalDigits" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentDecimalDigits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalDigits : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-645">パーセント値で使用する小数点以下の桁数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-645">Gets or sets the number of decimal places to use in percent values.</span></span></summary>
        <value><span data-ttu-id="2659e-646">パーセント値で使用する小数点以下の桁数。</span><span class="sxs-lookup"><span data-stu-id="2659e-646">The number of decimal places to use in percent values.</span></span> <span data-ttu-id="2659e-647"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 2 です。</span><span class="sxs-lookup"><span data-stu-id="2659e-647">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-648"><xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> プロパティは、数値の書式設定操作で精度指定子が指定されていない "P" 標準書式指定文字列と共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-648">The <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> property is used with the "P" standard format string without a precision specifier in numeric formatting operations.</span></span> <span data-ttu-id="2659e-649">小数点区切り文字の後に表示される既定の小数部の桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-649">It defines the default number of fractional digits that appear after the decimal separator.</span></span> <span data-ttu-id="2659e-650">精度指定子が使用されている場合、この値はオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="2659e-650">This value is overridden if a precision specifier is used.</span></span> <span data-ttu-id="2659e-651">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-651">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-652">次の例は、<xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-652">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A> property.</span></span>  
  
 [!code-cpp[PercentDecimalDigits#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalDigits/CPP/percentdecimaldigits.cpp#1)]
 [!code-csharp[PercentDecimalDigits#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalDigits/CS/percentdecimaldigits.cs#1)]
 [!code-vb[PercentDecimalDigits#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalDigits/VB/percentdecimaldigits.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2659e-653">プロパティが、0 より小さい値か、99 より大きい値に設定されようとしています。</span><span class="sxs-lookup"><span data-stu-id="2659e-653">The property is being set to a value that is less than 0 or greater than 99.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-654">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-654">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalDigits" />
      </Docs>
    </Member>
    <Member MemberName="PercentDecimalSeparator">
      <MemberSignature Language="C#" Value="public string PercentDecimalSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentDecimalSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentDecimalSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentDecimalSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentDecimalSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-655">パーセント値で桁区切り記号として使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-655">Gets or sets the string to use as the decimal separator in percent values.</span></span></summary>
        <value><span data-ttu-id="2659e-656">パーセント値で桁区切り記号として使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-656">The string to use as the decimal separator in percent values.</span></span> <span data-ttu-id="2659e-657"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "." です。</span><span class="sxs-lookup"><span data-stu-id="2659e-657">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is ".".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-658">"P" 標準書式指定文字列と共に <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> プロパティを使用して、整数を小数部と区切る記号を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-658">The <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> property is used with the "P" standard format string to define the symbol that separates integral from fractional digits.</span></span> <span data-ttu-id="2659e-659">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-659">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-660">次の例は、<xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-660">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A> property.</span></span>  
  
 [!code-cpp[PercentDecimalSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentDecimalSeparator/CPP/percentdecimalseparator.cpp#1)]
 [!code-csharp[PercentDecimalSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentDecimalSeparator/CS/percentdecimalseparator.cs#1)]
 [!code-vb[PercentDecimalSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentDecimalSeparator/VB/percentdecimalseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-661">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-661">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-662">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-662">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2659e-663">プロパティが空の文字列に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-663">The property is being set to an empty string.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSeparator">
      <MemberSignature Language="C#" Value="public string PercentGroupSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentGroupSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSeparator As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentGroupSeparator { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSeparator : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-664">パーセント値で小数点の左にある数字のグループを区切る文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-664">Gets or sets the string that separates groups of digits to the left of the decimal in percent values.</span></span></summary>
        <value><span data-ttu-id="2659e-665">パーセント値で小数点の左にある数字のグループを区切る文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-665">The string that separates groups of digits to the left of the decimal in percent values.</span></span> <span data-ttu-id="2659e-666"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "," です。</span><span class="sxs-lookup"><span data-stu-id="2659e-666">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is ",".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-667">"P" 標準書式指定文字列と共に <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> プロパティを使用して、整数のグループを分離するシンボルを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-667">The <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> property is used with the "P" standard format string to define the symbol that separates groups of integers.</span></span> <span data-ttu-id="2659e-668">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-668">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-669">次の例は、<xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-669">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A> property.</span></span>  
  
 [!code-cpp[PercentGroupSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSeparator/CPP/percentgroupseparator.cpp#1)]
 [!code-csharp[PercentGroupSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSeparator/CS/percentgroupseparator.cs#1)]
 [!code-vb[PercentGroupSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSeparator/VB/percentgroupseparator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-670">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-670">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-671">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-671">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
      </Docs>
    </Member>
    <Member MemberName="PercentGroupSizes">
      <MemberSignature Language="C#" Value="public int[] PercentGroupSizes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] PercentGroupSizes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentGroupSizes As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ PercentGroupSizes { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentGroupSizes : int[] with get, set" Usage="System.Globalization.NumberFormatInfo.PercentGroupSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-672">パーセント値で小数点の左にある各グループの数字の数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-672">Gets or sets the number of digits in each group to the left of the decimal in percent values.</span></span></summary>
        <value><span data-ttu-id="2659e-673">パーセント値で小数点の左にある各グループの数字の数。</span><span class="sxs-lookup"><span data-stu-id="2659e-673">The number of digits in each group to the left of the decimal in percent values.</span></span> <span data-ttu-id="2659e-674"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 1 つだけの要素を持つ 1 次元配列であり、その要素は 3 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-674">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is a one-dimensional array with only one element, which is set to 3.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-675"><xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> プロパティは、"P" 標準書式指定文字列と共に使用して、整数グループに出現する桁数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-675">The <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> property is used with the "P" standard format string to define the number of digits that appear in integral groups.</span></span> <span data-ttu-id="2659e-676">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-676">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span> <span data-ttu-id="2659e-677">1次元配列のすべての要素は、1 ~ 9 の整数である必要があります。</span><span class="sxs-lookup"><span data-stu-id="2659e-677">Every element in the one-dimensional array must be an integer from 1 through 9.</span></span> <span data-ttu-id="2659e-678">最後の要素には0を指定できます。</span><span class="sxs-lookup"><span data-stu-id="2659e-678">The last element can be 0.</span></span>  
  
 <span data-ttu-id="2659e-679">配列の最初の要素は、<xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>のすぐ左にある最下位の数字グループに含まれる要素の数を定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-679">The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A>.</span></span> <span data-ttu-id="2659e-680">後続の各要素は、前のグループの左側にある次の重要な数字のグループを参照します。</span><span class="sxs-lookup"><span data-stu-id="2659e-680">Each subsequent element refers to the next significant group of digits to the left of the previous group.</span></span> <span data-ttu-id="2659e-681">配列の最後の要素が0でない場合、残りの数字は配列の最後の要素に基づいてグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-681">If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array.</span></span> <span data-ttu-id="2659e-682">最後の要素が0の場合、残りの桁はグループ化されません。</span><span class="sxs-lookup"><span data-stu-id="2659e-682">If the last element is 0, the remaining digits are not grouped.</span></span>  
  
 <span data-ttu-id="2659e-683">たとえば、配列に {3, 4, 5} が含まれている場合、数字は "55, 55555, 55555, 55555, 4444, 333.00%" のようにグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-683">For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to "55,55555,55555,55555,4444,333.00%".</span></span> <span data-ttu-id="2659e-684">配列に {3, 4, 0} が含まれている場合、数字は "55555555555555555, 4444, 333.00%" のようにグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-684">If the array contains { 3, 4, 0 }, the digits are grouped similar to "55555555555555555,4444,333.00%".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2659e-685">次の例は、<xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> プロパティを変更した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="2659e-685">The following example demonstrates the effect of changing the <xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A> property.</span></span>  
  
 [!code-cpp[PercentGroupSizes#1](~/samples/snippets/cpp/VS_Snippets_CLR/PercentGroupSizes/CPP/percentgroupsizes.cpp#1)]
 [!code-csharp[PercentGroupSizes#1](~/samples/snippets/csharp/VS_Snippets_CLR/PercentGroupSizes/CS/percentgroupsizes.cs#1)]
 [!code-vb[PercentGroupSizes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PercentGroupSizes/VB/percentgroupsizes.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-686">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-686">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2659e-687">プロパティが設定され、配列には 0 より小さいか、9 よりも大きいエントリが含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-687">The property is being set and the array contains an entry that is less than 0 or greater than 9.</span></span>  
  
 <span data-ttu-id="2659e-688">または</span><span class="sxs-lookup"><span data-stu-id="2659e-688">-or-</span></span>  
  
 <span data-ttu-id="2659e-689">プロパティが設定され、配列には 0 に設定されているエントリ (最後のエントリ以外) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-689">The property is being set and the array contains an entry, other than the last entry, that is set to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-690">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-690">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberGroupSizes" />
      </Docs>
    </Member>
    <Member MemberName="PercentNegativePattern">
      <MemberSignature Language="C#" Value="public int PercentNegativePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentNegativePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentNegativePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentNegativePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentNegativePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentNegativePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-691">負のパーセント値の形式パターンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-691">Gets or sets the format pattern for negative percent values.</span></span></summary>
        <value><span data-ttu-id="2659e-692">負のパーセント値の形式パターン。</span><span class="sxs-lookup"><span data-stu-id="2659e-692">The format pattern for negative percent values.</span></span> <span data-ttu-id="2659e-693"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 0 で、"-n %" を表します。"%" は <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> で、<paramref name="n" /> は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-693">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is 0, which represents "-n %", where "%" is the <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> and <paramref name="n" /> is a number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-694"><xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> プロパティは、"P" 標準書式指定文字列と共に使用して、負のパーセント値のパターンを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-694">The <xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A> property is used with the "P" standard format string to define the pattern of negative percentage values.</span></span> <span data-ttu-id="2659e-695">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-695">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span> <span data-ttu-id="2659e-696">このプロパティには、次の表のいずれかの値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-696">This property has one of the values in the following table.</span></span> <span data-ttu-id="2659e-697">シンボル "%" は <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>、記号 "-" は <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>で、`n` は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-697">The symbol "%" is the <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A>, the symbol "-" is the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A>, and `n` is a number.</span></span> <span data-ttu-id="2659e-698">値3-11 は .NET Framework 2.0 で導入されたものであり、以前のバージョンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="2659e-698">Values 3-11 were introduced in the .NET Framework 2.0 and cannot be used in earlier versions.</span></span>  
  
|<span data-ttu-id="2659e-699">値</span><span class="sxs-lookup"><span data-stu-id="2659e-699">Value</span></span>|<span data-ttu-id="2659e-700">関連付けられたパターン</span><span class="sxs-lookup"><span data-stu-id="2659e-700">Associated pattern</span></span>|  
|-----------|------------------------|  
|<span data-ttu-id="2659e-701">0</span><span class="sxs-lookup"><span data-stu-id="2659e-701">0</span></span>|<span data-ttu-id="2659e-702">非該当</span><span class="sxs-lookup"><span data-stu-id="2659e-702">-n %</span></span>|  
|<span data-ttu-id="2659e-703">1</span><span class="sxs-lookup"><span data-stu-id="2659e-703">1</span></span>|<span data-ttu-id="2659e-704">-n%</span><span class="sxs-lookup"><span data-stu-id="2659e-704">-n%</span></span>|  
|<span data-ttu-id="2659e-705">2</span><span class="sxs-lookup"><span data-stu-id="2659e-705">2</span></span>|<span data-ttu-id="2659e-706">-%n</span><span class="sxs-lookup"><span data-stu-id="2659e-706">-%n</span></span>|  
|<span data-ttu-id="2659e-707">3</span><span class="sxs-lookup"><span data-stu-id="2659e-707">3</span></span>|<span data-ttu-id="2659e-708">%-n</span><span class="sxs-lookup"><span data-stu-id="2659e-708">%-n</span></span>|  
|<span data-ttu-id="2659e-709">4</span><span class="sxs-lookup"><span data-stu-id="2659e-709">4</span></span>|<span data-ttu-id="2659e-710">%n-</span><span class="sxs-lookup"><span data-stu-id="2659e-710">%n-</span></span>|  
|<span data-ttu-id="2659e-711">5</span><span class="sxs-lookup"><span data-stu-id="2659e-711">5</span></span>|<span data-ttu-id="2659e-712">n-%</span><span class="sxs-lookup"><span data-stu-id="2659e-712">n-%</span></span>|  
|<span data-ttu-id="2659e-713">6</span><span class="sxs-lookup"><span data-stu-id="2659e-713">6</span></span>|<span data-ttu-id="2659e-714">n%-</span><span class="sxs-lookup"><span data-stu-id="2659e-714">n%-</span></span>|  
|<span data-ttu-id="2659e-715">7</span><span class="sxs-lookup"><span data-stu-id="2659e-715">7</span></span>|<span data-ttu-id="2659e-716">-% n</span><span class="sxs-lookup"><span data-stu-id="2659e-716">-% n</span></span>|  
|<span data-ttu-id="2659e-717">8</span><span class="sxs-lookup"><span data-stu-id="2659e-717">8</span></span>|<span data-ttu-id="2659e-718">n%-</span><span class="sxs-lookup"><span data-stu-id="2659e-718">n %-</span></span>|  
|<span data-ttu-id="2659e-719">9</span><span class="sxs-lookup"><span data-stu-id="2659e-719">9</span></span>|<span data-ttu-id="2659e-720">非該当</span><span class="sxs-lookup"><span data-stu-id="2659e-720">% n-</span></span>|  
|<span data-ttu-id="2659e-721">10</span><span class="sxs-lookup"><span data-stu-id="2659e-721">10</span></span>|<span data-ttu-id="2659e-722">%-n</span><span class="sxs-lookup"><span data-stu-id="2659e-722">% -n</span></span>|  
|<span data-ttu-id="2659e-723">11</span><span class="sxs-lookup"><span data-stu-id="2659e-723">11</span></span>|<span data-ttu-id="2659e-724">n-%</span><span class="sxs-lookup"><span data-stu-id="2659e-724">n- %</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2659e-725">プロパティが 0 より小さい値か、または 11 より大きい値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-725">The property is being set to a value that is less than 0 or greater than 11.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-726">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-726">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NumberNegativePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentPositivePattern">
      <MemberSignature Language="C#" Value="public int PercentPositivePattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PercentPositivePattern" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentPositivePattern As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PercentPositivePattern { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PercentPositivePattern : int with get, set" Usage="System.Globalization.NumberFormatInfo.PercentPositivePattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-727">正のパーセント値の形式パターンを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-727">Gets or sets the format pattern for positive percent values.</span></span></summary>
        <value><span data-ttu-id="2659e-728">正のパーセント値の形式パターン。</span><span class="sxs-lookup"><span data-stu-id="2659e-728">The format pattern for positive percent values.</span></span> <span data-ttu-id="2659e-729"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は 0 で、"n %" を表します。"%" は <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> で、<paramref name="n" /> は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-729">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is 0, which represents "n %", where "%" is the <see cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" /> and <paramref name="n" /> is a number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-730"><xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> プロパティは、"P" 標準書式指定文字列と共に使用して、正のパーセント値のパターンを定義します。</span><span class="sxs-lookup"><span data-stu-id="2659e-730">The <xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A> property is used with the "P" standard format string to define pattern of positive percentage values.</span></span> <span data-ttu-id="2659e-731">詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-731">For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span> <span data-ttu-id="2659e-732">このプロパティには、次の表のいずれかの値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2659e-732">This property has one of the values in the following table.</span></span> <span data-ttu-id="2659e-733">シンボル "%" は <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> で、`n` は数値です。</span><span class="sxs-lookup"><span data-stu-id="2659e-733">The symbol "%" is the <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> and `n` is a number.</span></span>  
  
|<span data-ttu-id="2659e-734">値</span><span class="sxs-lookup"><span data-stu-id="2659e-734">Value</span></span>|<span data-ttu-id="2659e-735">関連付けられたパターン</span><span class="sxs-lookup"><span data-stu-id="2659e-735">Associated pattern</span></span>|  
|-----------|------------------------|  
|<span data-ttu-id="2659e-736">0</span><span class="sxs-lookup"><span data-stu-id="2659e-736">0</span></span>|<span data-ttu-id="2659e-737">非該当</span><span class="sxs-lookup"><span data-stu-id="2659e-737">n %</span></span>|  
|<span data-ttu-id="2659e-738">1</span><span class="sxs-lookup"><span data-stu-id="2659e-738">1</span></span>|<span data-ttu-id="2659e-739">n%</span><span class="sxs-lookup"><span data-stu-id="2659e-739">n%</span></span>|  
|<span data-ttu-id="2659e-740">2</span><span class="sxs-lookup"><span data-stu-id="2659e-740">2</span></span>|<span data-ttu-id="2659e-741">% n</span><span class="sxs-lookup"><span data-stu-id="2659e-741">%n</span></span>|  
|<span data-ttu-id="2659e-742">3</span><span class="sxs-lookup"><span data-stu-id="2659e-742">3</span></span>|<span data-ttu-id="2659e-743">% n</span><span class="sxs-lookup"><span data-stu-id="2659e-743">% n</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2659e-744">プロパティが 0 より小さい値か、または 3 より大きい値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-744">The property is being set to a value that is less than 0 or greater than 3.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-745">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-745">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencyPositivePattern" />
      </Docs>
    </Member>
    <Member MemberName="PercentSymbol">
      <MemberSignature Language="C#" Value="public string PercentSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PercentSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PercentSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PercentSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PercentSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PercentSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-746">パーセント記号として使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-746">Gets or sets the string to use as the percent symbol.</span></span></summary>
        <value><span data-ttu-id="2659e-747">パーセント記号として使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-747">The string to use as the percent symbol.</span></span> <span data-ttu-id="2659e-748"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "%" です。</span><span class="sxs-lookup"><span data-stu-id="2659e-748">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is "%".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-749">数値が "P" で書式設定されている場合、または書式指定文字列に "%" が含まれている場合は、<xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> プロパティに割り当てられた文字列が結果文字列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="2659e-749">The string assigned to the <xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A> property is included in the result string when a numeric value is formatted with the "P"  or with a format string that includes the "%" .</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-750">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-750">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-751">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-751">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalDigits" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentGroupSizes" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentNegativePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentPositivePattern" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PerMilleSymbol">
      <MemberSignature Language="C#" Value="public string PerMilleSymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PerMilleSymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PerMilleSymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PerMilleSymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PerMilleSymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PerMilleSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-752">パーミル記号として使用する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-752">Gets or sets the string to use as the per mille symbol.</span></span></summary>
        <value><span data-ttu-id="2659e-753">パーミル記号として使用する文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-753">The string to use as the per mille symbol.</span></span> <span data-ttu-id="2659e-754"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "‰" です。これは Unicode 文字の U+2030 です。</span><span class="sxs-lookup"><span data-stu-id="2659e-754">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is "‰", which is the Unicode character U+2030.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-755">数値が "‰" を含む書式指定文字列で書式設定されている場合、<xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> プロパティに割り当てられた文字列が結果文字列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="2659e-755">The string assigned to the <xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A> property is included in the result string when a numeric value is formatted with a format string that includes the "‰" .</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-756">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-756">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-757">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-757">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrencySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.PercentSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveInfinitySymbol">
      <MemberSignature Language="C#" Value="public string PositiveInfinitySymbol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveInfinitySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveInfinitySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveInfinitySymbol { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveInfinitySymbol : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveInfinitySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-758">正の無限大を表す文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-758">Gets or sets the string that represents positive infinity.</span></span></summary>
        <value><span data-ttu-id="2659e-759">正の無限大を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-759">The string that represents positive infinity.</span></span> <span data-ttu-id="2659e-760"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "Infinity" です。</span><span class="sxs-lookup"><span data-stu-id="2659e-760">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is "Infinity".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-761">正の無限大の詳細については、「<xref:System.Double>」または「<xref:System.Single>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2659e-761">For more information on positive infinity, see <xref:System.Double> or <xref:System.Single>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-762">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="2659e-762">The property is being set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-763">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-763">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.NaNSymbol" />
      </Docs>
    </Member>
    <Member MemberName="PositiveSign">
      <MemberSignature Language="C#" Value="public string PositiveSign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositiveSign" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberSignature Language="VB.NET" Value="Public Property PositiveSign As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositiveSign { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PositiveSign : string with get, set" Usage="System.Globalization.NumberFormatInfo.PositiveSign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2659e-764">関連付けられた数値が正であることを示す文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="2659e-764">Gets or sets the string that denotes that the associated number is positive.</span></span></summary>
        <value><span data-ttu-id="2659e-765">関連付けられた数値が正であることを示す文字列。</span><span class="sxs-lookup"><span data-stu-id="2659e-765">The string that denotes that the associated number is positive.</span></span> <span data-ttu-id="2659e-766"><see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> の既定値は "+" です。</span><span class="sxs-lookup"><span data-stu-id="2659e-766">The default for <see cref="P:System.Globalization.NumberFormatInfo.InvariantInfo" /> is "+".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-767">このプロパティは、書式設定ではなく、数値文字列の解析にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="2659e-767">This property is used only for parsing numeric strings, not for formatting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-768">設定操作で、割り当てられる値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2659e-768">In a set operation, the value to be assigned is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2659e-769">このプロパティが設定されていますが、<see cref="T:System.Globalization.NumberFormatInfo" /> オブジェクトは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="2659e-769">The property is being set and the <see cref="T:System.Globalization.NumberFormatInfo" /> object is read-only.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.NegativeSign" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.NumberFormatInfo ReadOnly (System.Globalization.NumberFormatInfo nfi);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.NumberFormatInfo ReadOnly(class System.Globalization.NumberFormatInfo nfi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (nfi As NumberFormatInfo) As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::NumberFormatInfo ^ ReadOnly(System::Globalization::NumberFormatInfo ^ nfi);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.NumberFormatInfo -&gt; System.Globalization.NumberFormatInfo" Usage="System.Globalization.NumberFormatInfo.ReadOnly nfi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nfi" Type="System.Globalization.NumberFormatInfo" />
      </Parameters>
      <Docs>
        <param name="nfi"><span data-ttu-id="2659e-770">ラップする <see cref="T:System.Globalization.NumberFormatInfo" />。</span><span class="sxs-lookup"><span data-stu-id="2659e-770">The <see cref="T:System.Globalization.NumberFormatInfo" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="2659e-771">読み取り専用 <see cref="T:System.Globalization.NumberFormatInfo" /> ラッパーを返します。</span><span class="sxs-lookup"><span data-stu-id="2659e-771">Returns a read-only <see cref="T:System.Globalization.NumberFormatInfo" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="2659e-772"><see cref="T:System.Globalization.NumberFormatInfo" /> をラップする読み取り専用の <paramref name="nfi" /> ラッパー。</span><span class="sxs-lookup"><span data-stu-id="2659e-772">A read-only <see cref="T:System.Globalization.NumberFormatInfo" /> wrapper around <paramref name="nfi" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2659e-773">このラッパーは、`nfi`の変更を防止します。</span><span class="sxs-lookup"><span data-stu-id="2659e-773">This wrapper prevents any modifications to `nfi`.</span></span>  
  
 <span data-ttu-id="2659e-774">読み取り専用 <xref:System.Globalization.NumberFormatInfo> のプロパティへの割り当てを実行しようとすると、<xref:System.InvalidOperationException>が発生します。</span><span class="sxs-lookup"><span data-stu-id="2659e-774">Attempting to perform an assignment to a property of a read-only <xref:System.Globalization.NumberFormatInfo> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2659e-775"><paramref name="nfi" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2659e-775"><paramref name="nfi" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.NumberFormatInfo.IsReadOnly" />
      </Docs>
    </Member>
  </Members>
</Type>
