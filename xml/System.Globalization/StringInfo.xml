<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35d02a1c5068ae1e4b60a30c30a54a73edb3759a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78824783" /></Metadata><TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringInfo extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Globalization" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b5d6b-101">文字列をテキスト要素に分割し、そのテキスト要素を反復処理する機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-101">Provides functionality to split a string into text elements and to iterate through those text elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="b5d6b-102">.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-102">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="b5d6b-103">テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-103">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="b5d6b-104">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-104">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="b5d6b-105">Unicode 規格では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-105">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="b5d6b-106">サロゲートペアは、基本文字または組み合わせ文字を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-106">A surrogate pair can represent a base character or a combining character.</span></span>  
  
<span data-ttu-id="b5d6b-107"><xref:System.Globalization.StringInfo> クラスを使用すると、個別の <xref:System.Char> オブジェクトではなく、一連のテキスト要素として文字列を操作できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-107">The <xref:System.Globalization.StringInfo> class enables you to work with a string as a series of textual elements rather than individual <xref:System.Char> objects.</span></span>  
  
<span data-ttu-id="b5d6b-108">指定した文字列を表す <xref:System.Globalization.StringInfo> オブジェクトをインスタンス化するには、次のいずれかの操作を行います。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-108">To instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string, you can do either of the following:</span></span>  
 
- <span data-ttu-id="b5d6b-109"><xref:System.Globalization.StringInfo.%23ctor%28System.String%29> コンストラクターを呼び出し、<xref:System.Globalization.StringInfo> オブジェクトが引数として表す文字列を渡します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-109">Call the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor and pass it the string that the <xref:System.Globalization.StringInfo> object is to represent as an argument.</span></span>  
  
- <span data-ttu-id="b5d6b-110">既定の <xref:System.Globalization.StringInfo.%23ctor> コンストラクターを呼び出し、<xref:System.Globalization.StringInfo> オブジェクトが表す文字列を <xref:System.Globalization.StringInfo.String%2A> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-110">Call the default <xref:System.Globalization.StringInfo.%23ctor> constructor, and assign the string that the <xref:System.Globalization.StringInfo> object is to represent to the <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  
  
 <span data-ttu-id="b5d6b-111">文字列内の個々のテキスト要素を操作するには、次の2つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-111">You can work with the individual text elements in a string in two ways:</span></span>  
  
- <span data-ttu-id="b5d6b-112">各テキスト要素を列挙する。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-112">By enumerating each text element.</span></span> <span data-ttu-id="b5d6b-113">これを行うには、<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドを呼び出し、メソッドが `false`を返すまで、返された <xref:System.Globalization.TextElementEnumerator> オブジェクトに対して <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> メソッドを繰り返し呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-113">To do this, you call the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method, and then repeatedly call the <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> method on the returned <xref:System.Globalization.TextElementEnumerator> object until the method returns `false`.</span></span>  
  
- <span data-ttu-id="b5d6b-114"><xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドを呼び出して、各テキスト要素の開始インデックスを含む配列を取得する。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-114">By calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method to retrieve an array that contains the starting index of each text element.</span></span> <span data-ttu-id="b5d6b-115">これらのインデックスを <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> メソッドに渡すことによって、個々のテキスト要素を取得できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-115">You can then retrieve individual text elements by passing these indexes to the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method.</span></span>  
  
<span data-ttu-id="b5d6b-116">次の例は、文字列内のテキスト要素を操作する両方の方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-116">The following example illustrates both ways of working with the text elements in a string.</span></span> <span data-ttu-id="b5d6b-117">次の2つの文字列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-117">It creates two strings:</span></span>  
  
- <span data-ttu-id="b5d6b-118">`strCombining`、複数の <xref:System.Char> オブジェクトを持つ3つのテキスト要素を含むアラビア文字の文字列です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-118">`strCombining`, which is a string of Arabic characters that includes three text elements with multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="b5d6b-119">最初のテキスト要素は、基本文字のアラビア文字の ALEF (U +-627) の後に、アラビア語の KASRA (u +-655) とアラビア語 (u + 0650) を続けたものです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-119">The first text element is the base character ARABIC LETTER ALEF (U+-627) followed by ARABIC HAMZA BELOW (U+-655) and ARABIC KASRA (U+0650).</span></span> <span data-ttu-id="b5d6b-120">2番目のテキスト要素は、アラビア文字のへー (U + 0647) の後にアラビア語 FATHA (U +-64E) が続きます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-120">The second text element is ARABIC LETTER HEH (U+0647) followed by ARABIC FATHA (U+-64E).</span></span> <span data-ttu-id="b5d6b-121">3番目のテキスト要素は、アラビア文字バー (U + 0628) の後にアラビア語 DAMMATAN (U + 064C) が続きます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-121">The third text element is ARABIC LETTER BEH (U+0628) followed by ARABIC DAMMATAN (U+064C).</span></span>  
  
- <span data-ttu-id="b5d6b-122">`strSurrogates`、3つのサロゲートペア (ギリシャ語 ACROPHONIC 5 才能 (U + 10148)、補助表意文字平面からの u + 20026、プライベートユーザー領域からの U + F1001) を含む文字列です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-122">`strSurrogates`, which is a string that includes three surrogate pairs: GREEK ACROPHONIC FIVE TALENTS (U+10148) from the Supplementary Multilingual Plane, U+20026 from the Supplementary Ideographic Plane, and U+F1001 from the private user area.</span></span> <span data-ttu-id="b5d6b-123">各文字の UTF-16 エンコーディングは、上位サロゲートと下位サロゲートで構成されるサロゲートペアです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-123">The UTF-16 encoding of each character is a surrogate pair that consists of a high surrogate followed by a low surrogate.</span></span>  
  
<span data-ttu-id="b5d6b-124">各文字列は、<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドによって1回、次に <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドによって解析されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-124">Each string is parsed once by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method and then by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span> <span data-ttu-id="b5d6b-125">どちらのメソッドも、2つの文字列のテキスト要素を正しく解析し、解析操作の結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-125">Both methods correctly parse the text elements in the two strings and display the results of the parsing operation.</span></span>  
  
[!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
[!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
## Examples  

<span data-ttu-id="b5d6b-126">この例では、<xref:System.Globalization.StringInfo> クラスの <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> および <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドを使用して、サロゲート文字と組み合わせ文字を含む文字列を操作します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-126">This example uses the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> and <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> methods of the <xref:System.Globalization.StringInfo> class to manipulate a string that contains surrogate and combining characters.</span></span>  
  
[!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
[!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
[!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  

 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="b5d6b-127">内部的には、<see cref="T:System.Globalization.StringInfo" /> クラスのメソッドは、<see cref="T:System.Globalization.CharUnicodeInfo" /> クラスのメソッドを呼び出して、文字カテゴリを決定します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-127">Internally, the methods of the <see cref="T:System.Globalization.StringInfo" /> class call the methods of the <see cref="T:System.Globalization.CharUnicodeInfo" /> class to determine character categories.</span></span> <span data-ttu-id="b5d6b-128">.NET Framework 4.6.2 以降では、文字分類は[Unicode 標準バージョン 8.0.0](https://unicode.org/versions/Unicode8.0.0)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-128">Starting with the .NET Framework 4.6.2, character classification is based on [The Unicode Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0).</span></span> <span data-ttu-id="b5d6b-129">.NET Framework 4 ~ .NET Framework 4.6.1 では、 [Unicode 標準バージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-129">For the .NET Framework 4 through the .NET Framework 4.6.1, it is based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span> <span data-ttu-id="b5d6b-130">.NET Core では、 [Unicode 標準バージョン 8.0.0](https://unicode.org/versions/Unicode8.0.0)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-130">In .NET Core, it is based on [The Unicode Standard, Version 8.0.0](https://unicode.org/versions/Unicode8.0.0).</span></span></para></block>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921"><span data-ttu-id="b5d6b-131">Windows オペレーティングシステムの重みテーブルの並べ替え</span><span class="sxs-lookup"><span data-stu-id="b5d6b-131">Sorting Weight Tables for Windows operating systems</span></span></related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt"><span data-ttu-id="b5d6b-132">Linux および macOS 用の既定の Unicode 照合順序要素の表</span><span class="sxs-lookup"><span data-stu-id="b5d6b-132">Default Unicode Collation Element Table, for Linux and macOS</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5d6b-133"><see cref="T:System.Globalization.StringInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-133">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5d6b-134"><see cref="T:System.Globalization.StringInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-134">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-135">新しい <xref:System.Globalization.StringInfo> オブジェクトの値は、空の文字列 ("") に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-135">The value of the new <xref:System.Globalization.StringInfo> object is initialized to the empty string ("").</span></span> <span data-ttu-id="b5d6b-136"><xref:System.Globalization.StringInfo.String%2A> プロパティを使用して、別の文字列を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-136">You can assign another string to it by using the <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  <span data-ttu-id="b5d6b-137">また、<xref:System.Globalization.StringInfo.%23ctor%28System.String%29> コンストラクターを呼び出すことによって、指定した文字列を表す <xref:System.Globalization.StringInfo> オブジェクトを1回の手順でインスタンス化することもできます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-137">You can also instantiate a <xref:System.Globalization.StringInfo> object that represents a specified string in a single step by calling the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b5d6b-138">この <see cref="T:System.Globalization.StringInfo" /> オブジェクトを初期化する文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-138">A string to initialize this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="b5d6b-139"><see cref="T:System.Globalization.StringInfo" /> クラスの新しいインスタンスを指定された文字列に初期化します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-139">Initializes a new instance of the <see cref="T:System.Globalization.StringInfo" /> class to a specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-140">このコンストラクターは、オブジェクトの <xref:System.Globalization.StringInfo.String%2A> プロパティに value 引数を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-140">This constructor assigns the value argument to the object's <xref:System.Globalization.StringInfo.String%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5d6b-141"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-141"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b5d6b-142">オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-142">An object.</span></span></param>
        <summary><span data-ttu-id="b5d6b-143">現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトが指定されたオブジェクトと等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-143">Indicates whether the current <see cref="T:System.Globalization.StringInfo" /> object is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-144"><see langword="true" /> パラメーターが <paramref name="value" /> オブジェクトであり、<see cref="T:System.Globalization.StringInfo" /> プロパティがこの <see cref="P:System.Globalization.StringInfo.String" /> オブジェクトの <see cref="P:System.Globalization.StringInfo.String" /> プロパティと等しい場合は <see cref="T:System.Globalization.StringInfo" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-144"><see langword="true" /> if the <paramref name="value" /> parameter is a <see cref="T:System.Globalization.StringInfo" /> object and its <see cref="P:System.Globalization.StringInfo.String" /> property equals the <see cref="P:System.Globalization.StringInfo.String" /> property of this <see cref="T:System.Globalization.StringInfo" /> object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b5d6b-145">現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値のハッシュ コードを計算します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-145">Calculates a hash code for the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-146">この <see cref="T:System.Globalization.StringInfo" /> オブジェクトの文字列値に基づく 32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-146">A 32-bit signed integer hash code based on the string value of this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-147"><xref:System.Globalization.StringInfo.GetHashCode%2A> の動作は、実装によって異なります。これは、共通言語ランタイムのあるバージョンから別のバージョンに変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-147">The behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another.</span></span> <span data-ttu-id="b5d6b-148">これは、<xref:System.Globalization.StringInfo.GetHashCode%2A>のパフォーマンスを向上させるために発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-148">This might happen to improve the performance of <xref:System.Globalization.StringInfo.GetHashCode%2A>.</span></span> <span data-ttu-id="b5d6b-149"><xref:System.Globalization.StringInfo.GetHashCode%2A> 定数の動作を作成するには、アプリケーションで <xref:System.Globalization.StringInfo.GetHashCode%2A> のランタイム実装をオーバーライドしても変更されないとわかっている実装でオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-149">To make the behavior of <xref:System.Globalization.StringInfo.GetHashCode%2A> constant, the application should override the runtime implementation of <xref:System.Globalization.StringInfo.GetHashCode%2A> with an implementation known to never change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5d6b-150">指定した文字列の最初のテキスト要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-150">Gets the first text element in a specified string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="b5d6b-151">テキスト要素の取得元の文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-151">The string from which to get the text element.</span></span></param>
        <summary><span data-ttu-id="b5d6b-152">指定した文字列の最初のテキスト要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-152">Gets the first text element in a specified string.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-153">指定した文字列の最初のテキスト要素を格納している文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-153">A string containing the first text element in the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
<span data-ttu-id="b5d6b-154">.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-154">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="b5d6b-155">テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-155">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="b5d6b-156">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-156">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="b5d6b-157">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-157">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="b5d6b-158">サロゲートペアは、基本文字または組み合わせ文字を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-158">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="b5d6b-159">このメソッドは、最初のテキスト要素のみを返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-159">This method only returns the first text element.</span></span> <span data-ttu-id="b5d6b-160">文字列のテキスト要素を反復処理するには、アプリケーションで <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドによって生成される <xref:System.Globalization.TextElementEnumerator> オブジェクトを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-160">To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> object generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5d6b-161"><paramref name="str" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-161"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="b5d6b-162">テキスト要素の取得元の文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-162">The string from which to get the text element.</span></span></param>
        <param name="index"><span data-ttu-id="b5d6b-163">テキスト要素が開始する位置の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-163">The zero-based index at which the text element starts.</span></span></param>
        <summary><span data-ttu-id="b5d6b-164">指定した文字列の指定したインデックスにあるテキスト要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-164">Gets the text element at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-165">指定した文字列の指定したインデックスにあるテキスト要素を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-165">A string containing the text element at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
<span data-ttu-id="b5d6b-166">.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-166">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="b5d6b-167">テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-167">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="b5d6b-168">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-168">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="b5d6b-169">Unicode 規格では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-169">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="b5d6b-170">サロゲートペアは、基本文字または組み合わせ文字を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-170">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="b5d6b-171">このメソッドは、指定したインデックスから始まる部分文字列の最初のテキスト要素のみを返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-171">This method only returns the first text element of the substring that starts at the specified index.</span></span> <span data-ttu-id="b5d6b-172">文字列のテキスト要素を反復処理するには、アプリケーションで <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドによって生成された <xref:System.Globalization.TextElementEnumerator> を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-172">To iterate through the text elements of the string, the application should use the <xref:System.Globalization.TextElementEnumerator> generated by the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5d6b-173"><paramref name="str" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-173"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b5d6b-174"><paramref name="index" /> は <paramref name="str" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-174"><paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</span></span></exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5d6b-175">文字列のテキスト要素を反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-175">Returns an enumerator that iterates through the text elements of a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="b5d6b-176">反復処理対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-176">The string to iterate through.</span></span></param>
        <summary><span data-ttu-id="b5d6b-177">文字列全体のテキスト要素を反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-177">Returns an enumerator that iterates through the text elements of the entire string.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-178">文字列全体の <see cref="T:System.Globalization.TextElementEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-178">A <see cref="T:System.Globalization.TextElementEnumerator" /> for the entire string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-179">.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-179">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="b5d6b-180">テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-180">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="b5d6b-181">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-181">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="b5d6b-182">Unicode 規格では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-182">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="b5d6b-183">サロゲートペアは、基本文字または組み合わせ文字を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-183">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="b5d6b-184">Text 要素列挙子は、文字列内のデータを読み取るためにのみ使用されます。基になる文字列を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-184">The text element enumerator is used only to read data in the string; it cannot modify the underlying string.</span></span> <span data-ttu-id="b5d6b-185">列挙子には、文字列への排他アクセス権はありません。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-185">The enumerator does not have exclusive access to the string.</span></span>  
  
 <span data-ttu-id="b5d6b-186">列挙子は、文字列の最初のテキスト要素の前、または文字列内の最後のテキスト要素の後に配置されている場合、無効な状態になります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-186">The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.</span></span> <span data-ttu-id="b5d6b-187">列挙子が無効な状態にある場合、<xref:System.Globalization.TextElementEnumerator.Current%2A> を呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-187">When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="b5d6b-188">最初に、列挙子は文字列の最初のテキスト要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-188">Initially, the enumerator is positioned before the first text element in the string.</span></span> <span data-ttu-id="b5d6b-189">また、<xref:System.Globalization.TextElementEnumerator.Reset%2A> メソッドは、列挙子を最初の位置に戻します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-189"><xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="b5d6b-190">したがって、列挙子が作成された後、または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出された後に、<xref:System.Globalization.TextElementEnumerator.Current%2A>の値を読み取る前に、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> を呼び出して、列挙子を文字列の最初のテキスト要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-190">Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="b5d6b-191"><xref:System.Globalization.TextElementEnumerator.Current%2A> は、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-191"><xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="b5d6b-192">文字列の末尾が渡されると、列挙子は無効な状態に戻り、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> を呼び出すと `false`が返されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-192">After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b5d6b-193">前回 <xref:System.Globalization.TextElementEnumerator.Current%2A> を呼び出して <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> が返された後に `false` を呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-193">Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5d6b-194">次の例では、<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-194">The following example demonstrates calling the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> method.</span></span> <span data-ttu-id="b5d6b-195">この例は、<xref:System.Globalization.StringInfo> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-195">This example is part of a larger example provided for the <xref:System.Globalization.StringInfo> class.</span></span>  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5d6b-196"><paramref name="str" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-196"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="b5d6b-197">反復処理対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-197">The string to iterate through.</span></span></param>
        <param name="index"><span data-ttu-id="b5d6b-198">反復処理を開始する位置の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-198">The zero-based index at which to start iterating.</span></span></param>
        <summary><span data-ttu-id="b5d6b-199">指定したインデックスから開始する文字列のテキスト要素を反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-199">Returns an enumerator that iterates through the text elements of the string, starting at the specified index.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-200"><see cref="T:System.Globalization.TextElementEnumerator" /> から開始する文字列の <paramref name="index" />。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-200">A <see cref="T:System.Globalization.TextElementEnumerator" /> for the string starting at <paramref name="index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-201">.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-201">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="b5d6b-202">テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-202">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="b5d6b-203">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-203">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="b5d6b-204">Unicode 規格では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-204">The Unicode Standard defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="b5d6b-205">サロゲートペアは、基本文字または組み合わせ文字を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-205">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="b5d6b-206">Text 要素列挙子は、文字列内のデータを読み取るためにのみ使用されます。基になる文字列を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-206">The text element enumerator is used only to read data in the string; it cannot modify the underlying string.</span></span> <span data-ttu-id="b5d6b-207">列挙子には、文字列への排他アクセス権はありません。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-207">The enumerator does not have exclusive access to the string.</span></span>  
  
 <span data-ttu-id="b5d6b-208">列挙子は、文字列の最初のテキスト要素の前、または文字列内の最後のテキスト要素の後に配置されている場合、無効な状態になります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-208">The enumerator is in an invalid state if it is positioned before the first text element in the string or after the last text element in the string.</span></span> <span data-ttu-id="b5d6b-209">列挙子が無効な状態にある場合、<xref:System.Globalization.TextElementEnumerator.Current%2A> を呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-209">When the enumerator is in an invalid state, calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception.</span></span>  
  
 <span data-ttu-id="b5d6b-210">最初に、列挙子は文字列の最初のテキスト要素の前に配置されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-210">Initially, the enumerator is positioned before the first text element in the string.</span></span> <span data-ttu-id="b5d6b-211">また、<xref:System.Globalization.TextElementEnumerator.Reset%2A> メソッドは、列挙子を最初の位置に戻します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-211"><xref:System.Globalization.TextElementEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="b5d6b-212">したがって、列挙子が作成された後、または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出された後に、<xref:System.Globalization.TextElementEnumerator.Current%2A>の値を読み取る前に、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> を呼び出して、列挙子を文字列の最初のテキスト要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-212">Therefore, after an enumerator is created or after <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called, <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> must be called to advance the enumerator to the first text element of the string before reading the value of <xref:System.Globalization.TextElementEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="b5d6b-213"><xref:System.Globalization.TextElementEnumerator.Current%2A> は、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-213"><xref:System.Globalization.TextElementEnumerator.Current%2A> returns the same object until either <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> or <xref:System.Globalization.TextElementEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="b5d6b-214">文字列の末尾が渡されると、列挙子は無効な状態に戻り、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> を呼び出すと `false`が返されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-214">After the end of the string is passed, the enumerator is again in an invalid state and calling <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b5d6b-215">前回 <xref:System.Globalization.TextElementEnumerator.Current%2A> を呼び出して <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> が返された後に `false` を呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-215">Calling <xref:System.Globalization.TextElementEnumerator.Current%2A> throws an exception if the last call to <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> returned `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5d6b-216"><paramref name="str" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-216"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b5d6b-217"><paramref name="index" /> は <paramref name="str" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-217"><paramref name="index" /> is outside the range of valid indexes for <paramref name="str" />.</span></span></exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5d6b-218">現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクト内のテキスト要素数を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-218">Gets the number of text elements in the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="b5d6b-219">この <see cref="T:System.Globalization.StringInfo" /> オブジェクトの、基本文字、サロゲート ペア、結合文字シーケンスの数。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-219">The number of base characters, surrogate pairs, and combining character sequences in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="b5d6b-220">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-220">The string to search.</span></span></param>
        <summary><span data-ttu-id="b5d6b-221">指定した文字列の各基本文字、上位サロゲート、または制御文字のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-221">Returns the indexes of each base character, high surrogate, or control character within the specified string.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-222">指定した文字列の各基本文字、上位サロゲート、または制御文字の、0 から始まるインデックス番号を格納している整数の配列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-222">An array of integers that contains the zero-based indexes of each base character, high surrogate, or control character within the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-223">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-223">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a surrogate pair as a coded character representation for a single abstract character that consists of a sequence of two code units, where the first unit of the pair is a high surrogate and the second is a low surrogate.</span></span> <span data-ttu-id="b5d6b-224">上位サロゲートは、u + D800 から U + DBFF の範囲の Unicode コードポイントであり、下位サロゲートは u + DC00 から U + DFFF の範囲の Unicode コードポイントです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-224">A high surrogate is a Unicode code point in the range U+D800 through U+DBFF and a low surrogate is a Unicode code point in the range U+DC00 through U+DFFF.</span></span>  
  
 <span data-ttu-id="b5d6b-225">制御文字は、Unicode 値が U + 007F、または u + 0000 から U + 001F または U + 0080 から U + 009F までの範囲内にある文字です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-225">A control character is a character for which the Unicode value is U+007F or in the range U+0000 through U+001F or U+0080 through U+009F.</span></span>  
  
 <span data-ttu-id="b5d6b-226">.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-226">.NET defines a text element as a unit of text that is displayed as a single character, that is, a grapheme.</span></span> <span data-ttu-id="b5d6b-227">テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-227">A text element can be a base character, a surrogate pair, or a combining character sequence.</span></span> <span data-ttu-id="b5d6b-228">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-228">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a combining character sequence as a combination of a base character and one or more combining characters.</span></span> <span data-ttu-id="b5d6b-229">サロゲートペアは、基本文字または組み合わせ文字を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-229">A surrogate pair can represent a base character or a combining character.</span></span>  
  
 <span data-ttu-id="b5d6b-230">結合文字シーケンスが無効な場合は、そのシーケンス内のすべての結合文字も返されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-230">If a combining character sequence is invalid, every combining character in that sequence is also returned.</span></span>  
  
 <span data-ttu-id="b5d6b-231">結果として得られる配列内の各インデックスは、テキスト要素の先頭、つまり基本文字または上位サロゲートのインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-231">Each index in the resulting array is the beginning of a text element, that is, the index of the base character or the high surrogate.</span></span>  
  
 <span data-ttu-id="b5d6b-232">各要素の長さは、連続したインデックスの差として簡単に計算できます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-232">The length of each element is easily computed as the difference between successive indexes.</span></span> <span data-ttu-id="b5d6b-233">配列の長さは、常に文字列の長さ以下になります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-233">The length of the array will always be less than or equal to the length of the string.</span></span> <span data-ttu-id="b5d6b-234">たとえば、文字列 "\u4f00\u302a\ud800\udc00\u4f01" が指定されている場合、このメソッドはインデックス0、2、および4を返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-234">For example, given the string "\u4f00\u302a\ud800\udc00\u4f01", this method returns the indexes 0, 2, and 4.</span></span>  
  
## <a name="equivalent-members"></a><span data-ttu-id="b5d6b-235">同等のメンバー</span><span class="sxs-lookup"><span data-stu-id="b5d6b-235">Equivalent Members</span></span>  
 <span data-ttu-id="b5d6b-236">.NET Framework のバージョン2.0 以降では、<xref:System.Globalization.StringInfo.SubstringByTextElements%2A> メソッドと <xref:System.Globalization.StringInfo.LengthInTextElements%2A> プロパティによって、<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドによって提供される機能の使いやすい実装が提供されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-236">Starting in version 2.0 of the .NET Framework, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method and <xref:System.Globalization.StringInfo.LengthInTextElements%2A> property provide an easy to use implementation of the functionality offered by the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5d6b-237">次の例では、<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-237">The following example demonstrates calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> method.</span></span> <span data-ttu-id="b5d6b-238">このコード例は、<xref:System.Globalization.StringInfo> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-238">This code example is part of a larger example provided for the <xref:System.Globalization.StringInfo> class.</span></span>  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5d6b-239"><paramref name="str" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-239"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5d6b-240">現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-240">Gets or sets the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="b5d6b-241">現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値である文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-241">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-242"><xref:System.Globalization.StringInfo> オブジェクトがインスタンス化されると、その <xref:System.Globalization.StringInfo.String%2A> プロパティは次のいずれかの値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-242">When a <xref:System.Globalization.StringInfo> object is instantiated, its <xref:System.Globalization.StringInfo.String%2A> property is set to one of the following values:</span></span>  
  
-   <span data-ttu-id="b5d6b-243">既定の <xref:System.Globalization.StringInfo.%23ctor> が呼び出された場合は <xref:System.String.Empty?displayProperty=nameWithType> します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-243"><xref:System.String.Empty?displayProperty=nameWithType> if the default  <xref:System.Globalization.StringInfo.%23ctor> is called.</span></span> <span data-ttu-id="b5d6b-244">次に、<xref:System.Globalization.StringInfo.String%2A> プロパティを使用して、この <xref:System.Globalization.StringInfo> オブジェクトによって指定された文字列を割り当てる必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-244">You should then use the <xref:System.Globalization.StringInfo.String%2A> property to assign the string that this <xref:System.Globalization.StringInfo> object rperesents.</span></span>  
  
-   <span data-ttu-id="b5d6b-245"><xref:System.Globalization.StringInfo.%23ctor%28System.String%29> コンストラクターに `value` 引数として指定された文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-245">The string supplied as the `value` argument to the <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5d6b-246">設定操作の値が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-246">The value in a set operation is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5d6b-247">現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトからテキスト要素の部分文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-247">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="startingTextElement"><span data-ttu-id="b5d6b-248">この <see cref="T:System.Globalization.StringInfo" /> オブジェクトのテキスト要素の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-248">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></param>
        <summary><span data-ttu-id="b5d6b-249">指定されたテキスト要素から最後のテキスト要素までの範囲内で、現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトからテキスト要素の部分文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-249">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the last text element.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-250"><see cref="T:System.Globalization.StringInfo" /> パラメーターで指定されたテキスト要素インデックスから、このオブジェクトの最後のテキスト要素までの範囲内にある、この <paramref name="startingTextElement" /> オブジェクトのテキスト要素の部分文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-250">A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object, starting from the text element index specified by the <paramref name="startingTextElement" /> parameter and continuing through the last text element in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-251">0 ~ 4 のインデックスが作成された5つのテキスト要素で構成される文字列を考えてみます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-251">Consider a string that consists of five text elements, indexed from 0 through 4.</span></span> <span data-ttu-id="b5d6b-252">`startingTextElement` パラメーターが1の場合、<xref:System.Globalization.StringInfo.SubstringByTextElements%2A> メソッドは、インデックスが1、2、3、および4のテキスト要素で構成される部分文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-252">If the `startingTextElement` parameter is 1, the  <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, 3, and 4.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b5d6b-253"><paramref name="startingTextElement" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-253"><paramref name="startingTextElement" /> is less than zero.</span></span>  
  
<span data-ttu-id="b5d6b-254">または</span><span class="sxs-lookup"><span data-stu-id="b5d6b-254">-or-</span></span> 
<span data-ttu-id="b5d6b-255">現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値である文字列は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-255">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="startingTextElement"><span data-ttu-id="b5d6b-256">この <see cref="T:System.Globalization.StringInfo" /> オブジェクトのテキスト要素の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-256">The zero-based index of a text element in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></param>
        <param name="lengthInTextElements"><span data-ttu-id="b5d6b-257">取得するテキスト要素の数。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-257">The number of text elements to retrieve.</span></span></param>
        <summary><span data-ttu-id="b5d6b-258">指定されたテキスト要素から指定された数のテキスト要素までの範囲内で、現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトからテキスト要素の部分文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-258">Retrieves a substring of text elements from the current <see cref="T:System.Globalization.StringInfo" /> object starting from a specified text element and continuing through the specified number of text elements.</span></span></summary>
        <returns><span data-ttu-id="b5d6b-259">この <see cref="T:System.Globalization.StringInfo" /> オブジェクト内のテキスト要素の部分文字列。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-259">A substring of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span> <span data-ttu-id="b5d6b-260">部分文字列は、<paramref name="lengthInTextElements" /> パラメーターで指定された数のテキスト要素で構成され、<paramref name="startingTextElement" /> パラメーターで指定されたテキスト要素インデックスから開始します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-260">The substring consists of the number of text elements specified by the <paramref name="lengthInTextElements" /> parameter and starts from the text element index specified by the <paramref name="startingTextElement" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5d6b-261">0 ~ 4 のインデックスが作成された5つのテキスト要素で構成される文字列を考えてみます。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-261">Consider a string that consists of five text elements, indexed from 0 through 4.</span></span> <span data-ttu-id="b5d6b-262">`startingTextElement` パラメーターが1で、`lengthInTextElements` パラメーターが3の場合、<xref:System.Globalization.StringInfo.SubstringByTextElements%2A> メソッドは、インデックスが1、2、および3であるテキスト要素で構成される部分文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-262">If the `startingTextElement` parameter is 1 and the `lengthInTextElements` parameter is 3, the <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> method returns a substring that consists of the text elements for which the indexes are 1, 2, and 3.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b5d6b-263"><paramref name="startingTextElement" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-263"><paramref name="startingTextElement" /> is less than zero.</span></span>  
  
<span data-ttu-id="b5d6b-264">または</span><span class="sxs-lookup"><span data-stu-id="b5d6b-264">-or-</span></span> 
 <span data-ttu-id="b5d6b-265"><paramref name="startingTextElement" /> は、現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値である文字列の長さ以上です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-265"><paramref name="startingTextElement" /> is greater than or equal to the length of the string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object.</span></span>  
  
<span data-ttu-id="b5d6b-266">または</span><span class="sxs-lookup"><span data-stu-id="b5d6b-266">-or-</span></span> 
 <span data-ttu-id="b5d6b-267"><paramref name="lengthInTextElements" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-267"><paramref name="lengthInTextElements" /> is less than zero.</span></span>  
  
<span data-ttu-id="b5d6b-268">または</span><span class="sxs-lookup"><span data-stu-id="b5d6b-268">-or-</span></span> 
<span data-ttu-id="b5d6b-269">現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値である文字列は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-269">The string that is the value of the current <see cref="T:System.Globalization.StringInfo" /> object is the empty string ("").</span></span>  
  
<span data-ttu-id="b5d6b-270">または</span><span class="sxs-lookup"><span data-stu-id="b5d6b-270">-or-</span></span> 
 <span data-ttu-id="b5d6b-271"><paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> は、この <see cref="T:System.Globalization.StringInfo" /> オブジェクト内のテキスト要素の数より大きいインデックスを指定します。</span><span class="sxs-lookup"><span data-stu-id="b5d6b-271"><paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> specify an index that is greater than the number of text elements in this <see cref="T:System.Globalization.StringInfo" /> object.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
