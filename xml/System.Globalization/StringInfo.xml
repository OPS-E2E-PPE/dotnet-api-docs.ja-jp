<Type Name="StringInfo" FullName="System.Globalization.StringInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b56e618054a62690076cddd8fee2d83c09a367f" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75133532" /></Metadata><TypeSignature Language="C#" Value="public class StringInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.StringInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class StringInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringInfo" />
  <TypeSignature Language="F#" Value="type StringInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>文字列をテキスト要素に分割し、そのテキスト要素を反復処理する機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。 テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。 [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。 Unicode 規格では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。 サロゲートペアは、基本文字または組み合わせ文字を表すことができます。  
  
<xref:System.Globalization.StringInfo> クラスを使用すると、個別の <xref:System.Char> オブジェクトではなく、一連のテキスト要素として文字列を操作できます。  
  
指定した文字列を表す <xref:System.Globalization.StringInfo> オブジェクトをインスタンス化するには、次のいずれかの操作を行います。  
 
- <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> コンストラクターを呼び出し、<xref:System.Globalization.StringInfo> オブジェクトが引数として表す文字列を渡します。  
  
- 既定の <xref:System.Globalization.StringInfo.%23ctor> コンストラクターを呼び出し、<xref:System.Globalization.StringInfo> オブジェクトが表す文字列を <xref:System.Globalization.StringInfo.String%2A> プロパティに割り当てます。  
  
 文字列内の個々のテキスト要素を操作するには、次の2つの方法があります。  
  
- 各テキスト要素を列挙する。 これを行うには、<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドを呼び出し、メソッドが `false`を返すまで、返された <xref:System.Globalization.TextElementEnumerator> オブジェクトに対して <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> メソッドを繰り返し呼び出します。  
  
- <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドを呼び出して、各テキスト要素の開始インデックスを含む配列を取得する。 これらのインデックスを <xref:System.Globalization.StringInfo.SubstringByTextElements%2A> メソッドに渡すことによって、個々のテキスト要素を取得できます。  
  
次の例は、文字列内のテキスト要素を操作する両方の方法を示しています。 次の2つの文字列が作成されます。  
  
- `strCombining`、複数の <xref:System.Char> オブジェクトを持つ3つのテキスト要素を含むアラビア文字の文字列です。 最初のテキスト要素は、基本文字のアラビア文字の ALEF (U +-627) の後に、アラビア語の KASRA (u +-655) とアラビア語 (u + 0650) を続けたものです。 2番目のテキスト要素は、アラビア文字のへー (U + 0647) の後にアラビア語 FATHA (U +-64E) が続きます。 3番目のテキスト要素は、アラビア文字バー (U + 0628) の後にアラビア語 DAMMATAN (U + 064C) が続きます。  
  
- `strSurrogates`、3つのサロゲートペア (ギリシャ語 ACROPHONIC 5 才能 (U + 10148)、補助表意文字平面からの u + 20026、プライベートユーザー領域からの U + F1001) を含む文字列です。 各文字の UTF-16 エンコーディングは、上位サロゲートと下位サロゲートで構成されるサロゲートペアです。  
  
各文字列は、<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドによって1回、次に <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドによって解析されます。 どちらのメソッドも、2つの文字列のテキスト要素を正しく解析し、解析操作の結果を表示します。  
  
[!code-csharp[System.Globalization.StringInfo.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.stringinfo.class/cs/indexing1.cs#1)]
[!code-vb[System.Globalization.StringInfo.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.stringinfo.class/vb/indexing1.vb#1)]  
  
## Examples  

この例では、<xref:System.Globalization.StringInfo> クラスの <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> および <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドを使用して、サロゲート文字と組み合わせ文字を含む文字列を操作します。  
  
[!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
[!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
[!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  

 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para>内部的には、<see cref="T:System.Globalization.StringInfo" /> クラスのメソッドは、<see cref="T:System.Globalization.CharUnicodeInfo" /> クラスのメソッドを呼び出して、文字カテゴリを決定します。 .NET Framework 4.6.2 以降では、文字分類は[Unicode 標準バージョン 8.0.0](https://unicode.org/versions/Unicode8.0.0)に基づいています。 .NET Framework 4 ~ .NET Framework 4.6.1 では、 [Unicode 標準バージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)に基づいています。 .NET Core では、 [Unicode 標準バージョン 8.0.0](https://unicode.org/versions/Unicode8.0.0)に基づいています。</para></block>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921">Windows オペレーティングシステムの重みテーブルの並べ替え</related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt">Linux および macOS 用の既定の Unicode 照合順序要素の表</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Globalization.StringInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Globalization.StringInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しい <xref:System.Globalization.StringInfo> オブジェクトの値は、空の文字列 ("") に初期化されます。 <xref:System.Globalization.StringInfo.String%2A> プロパティを使用して、別の文字列を割り当てることができます。  また、<xref:System.Globalization.StringInfo.%23ctor%28System.String%29> コンストラクターを呼び出すことによって、指定した文字列を表す <xref:System.Globalization.StringInfo> オブジェクトを1回の手順でインスタンス化することもできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringInfo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringInfo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Globalization.StringInfo : string -&gt; System.Globalization.StringInfo" Usage="new System.Globalization.StringInfo value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">この <see cref="T:System.Globalization.StringInfo" /> オブジェクトを初期化する文字列。</param>
        <summary><see cref="T:System.Globalization.StringInfo" /> クラスの新しいインスタンスを指定した文字列に初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、オブジェクトの <xref:System.Globalization.StringInfo.String%2A> プロパティに value 引数を割り当てます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stringInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">オブジェクト。</param>
        <summary>現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトが指定されたオブジェクトと等しいかどうかを示します。</summary>
        <returns><see langword="true" /> パラメーターが <paramref name="value" /> オブジェクトであり、<see cref="T:System.Globalization.StringInfo" /> プロパティがこの <see cref="P:System.Globalization.StringInfo.String" /> オブジェクトの <see cref="P:System.Globalization.StringInfo.String" /> プロパティと等しい場合は <see cref="T:System.Globalization.StringInfo" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stringInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値のハッシュ コードを計算します。</summary>
        <returns>この <see cref="T:System.Globalization.StringInfo" /> オブジェクトの文字列値に基づく 32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.StringInfo.GetHashCode%2A> の動作は、実装によって異なります。これは、共通言語ランタイムのあるバージョンから別のバージョンに変更される可能性があります。 これは、<xref:System.Globalization.StringInfo.GetHashCode%2A>のパフォーマンスを向上させるために発生する可能性があります。 <xref:System.Globalization.StringInfo.GetHashCode%2A> 定数の動作を作成するには、アプリケーションで <xref:System.Globalization.StringInfo.GetHashCode%2A> のランタイム実装をオーバーライドしても変更されないとわかっている実装でオーバーライドする必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextTextElement">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した文字列の最初のテキスト要素を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">テキスト要素の取得元の文字列。</param>
        <summary>指定した文字列の最初のテキスト要素を取得します。</summary>
        <returns>指定した文字列の最初のテキスト要素を格納している文字列を取得します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 
.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。 テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。 [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。 [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。 サロゲートペアは、基本文字または組み合わせ文字を表すことができます。  
  
 このメソッドは、最初のテキスト要素のみを返します。 文字列のテキスト要素を反復処理するには、アプリケーションで <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドによって生成される <xref:System.Globalization.TextElementEnumerator> オブジェクトを使用する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNextTextElement">
      <MemberSignature Language="C#" Value="public static string GetNextTextElement (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetNextTextElement(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNextTextElement (str As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetNextTextElement(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetNextTextElement : string * int -&gt; string" Usage="System.Globalization.StringInfo.GetNextTextElement (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">テキスト要素の取得元の文字列。</param>
        <param name="index">テキスト要素が開始する位置の、0 から始まるインデックス番号。</param>
        <summary>指定した文字列の指定したインデックスにあるテキスト要素を取得します。</summary>
        <returns>指定した文字列の指定したインデックスにあるテキスト要素を格納している文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks
 
.NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。 テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。 [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。 Unicode 規格では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。 サロゲートペアは、基本文字または組み合わせ文字を表すことができます。  
  
 このメソッドは、指定したインデックスから始まる部分文字列の最初のテキスト要素のみを返します。 文字列のテキスト要素を反復処理するには、アプリケーションで <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドによって生成された <xref:System.Globalization.TextElementEnumerator> を使用する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> は <paramref name="str" /> の有効なインデックスの範囲外です。</exception>
        <altmember cref="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
        <altmember cref="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextElementEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>文字列のテキスト要素を反復処理する列挙子を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">反復処理対象の文字列。</param>
        <summary>文字列全体のテキスト要素を反復処理する列挙子を返します。</summary>
        <returns>文字列全体の <see cref="T:System.Globalization.TextElementEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。 テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。 [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。 Unicode 規格では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。 サロゲートペアは、基本文字または組み合わせ文字を表すことができます。  
  
 Text 要素列挙子は、文字列内のデータを読み取るためにのみ使用されます。基になる文字列を変更することはできません。 列挙子には、文字列への排他アクセス権はありません。  
  
 列挙子は、文字列の最初のテキスト要素の前、または文字列内の最後のテキスト要素の後に配置されている場合、無効な状態になります。 列挙子が無効な状態にある場合、<xref:System.Globalization.TextElementEnumerator.Current%2A> を呼び出すと例外がスローされます。  
  
 最初に、列挙子は文字列の最初のテキスト要素の前に配置されます。 <xref:System.Globalization.TextElementEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。 したがって、列挙子が作成された後、または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出された後に、<xref:System.Globalization.TextElementEnumerator.Current%2A>の値を読み取る前に、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> を呼び出して、列挙子を文字列の最初のテキスト要素に進める必要があります。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> は、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。  
  
 文字列の末尾が渡されると、列挙子は無効な状態に戻り、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> を呼び出すと `false`が返されます。 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> への最後の呼び出しで `false`が返された場合、<xref:System.Globalization.TextElementEnumerator.Current%2A> を呼び出すと例外がスローされます。  
  
   
  
## Examples  
 次の例では、<xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A> メソッドを呼び出す方法を示しています。 この例は、<xref:System.Globalization.StringInfo> クラス用に用意されている大規模な例の一部です。  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElementEnumerator">
      <MemberSignature Language="C#" Value="public static System.Globalization.TextElementEnumerator GetTextElementEnumerator (string str, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.TextElementEnumerator GetTextElementEnumerator(string str, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextElementEnumerator (str As String, index As Integer) As TextElementEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::TextElementEnumerator ^ GetTextElementEnumerator(System::String ^ str, int index);" />
      <MemberSignature Language="F#" Value="static member GetTextElementEnumerator : string * int -&gt; System.Globalization.TextElementEnumerator" Usage="System.Globalization.StringInfo.GetTextElementEnumerator (str, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.TextElementEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="str">反復処理対象の文字列。</param>
        <param name="index">反復処理を開始する位置の、0 から始まるインデックス番号。</param>
        <summary>指定したインデックスから開始する文字列のテキスト要素を反復処理する列挙子を返します。</summary>
        <returns><see cref="T:System.Globalization.TextElementEnumerator" /> から開始する文字列の <paramref name="index" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。 テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。 [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。 Unicode 規格では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。 サロゲートペアは、基本文字または組み合わせ文字を表すことができます。  
  
 Text 要素列挙子は、文字列内のデータを読み取るためにのみ使用されます。基になる文字列を変更することはできません。 列挙子には、文字列への排他アクセス権はありません。  
  
 列挙子は、文字列の最初のテキスト要素の前、または文字列内の最後のテキスト要素の後に配置されている場合、無効な状態になります。 列挙子が無効な状態にある場合、<xref:System.Globalization.TextElementEnumerator.Current%2A> を呼び出すと例外がスローされます。  
  
 最初に、列挙子は文字列の最初のテキスト要素の前に配置されます。 <xref:System.Globalization.TextElementEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。 したがって、列挙子が作成された後、または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出された後に、<xref:System.Globalization.TextElementEnumerator.Current%2A>の値を読み取る前に、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> を呼び出して、列挙子を文字列の最初のテキスト要素に進める必要があります。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> は、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。  
  
 文字列の末尾が渡されると、列挙子は無効な状態に戻り、<xref:System.Globalization.TextElementEnumerator.MoveNext%2A> を呼び出すと `false`が返されます。 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> への最後の呼び出しで `false`が返された場合、<xref:System.Globalization.TextElementEnumerator.Current%2A> を呼び出すと例外がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> は <paramref name="str" /> の有効なインデックスの範囲外です。</exception>
        <altmember cref="T:System.Globalization.TextElementEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="LengthInTextElements">
      <MemberSignature Language="C#" Value="public int LengthInTextElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LengthInTextElements" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.LengthInTextElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LengthInTextElements As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LengthInTextElements { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LengthInTextElements : int" Usage="System.Globalization.StringInfo.LengthInTextElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクト内のテキスト要素数を取得します。</summary>
        <value>この <see cref="T:System.Globalization.StringInfo" /> オブジェクトの、基本文字、サロゲート ペア、結合文字シーケンスの数。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseCombiningCharacters">
      <MemberSignature Language="C#" Value="public static int[] ParseCombiningCharacters (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] ParseCombiningCharacters(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseCombiningCharacters (str As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ ParseCombiningCharacters(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member ParseCombiningCharacters : string -&gt; int[]" Usage="System.Globalization.StringInfo.ParseCombiningCharacters str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">検索対象の文字列。</param>
        <summary>指定した文字列の各基本文字、上位サロゲート、または制御文字のインデックスを返します。</summary>
        <returns>指定した文字列の各基本文字、上位サロゲート、または制御文字の、0 から始まるインデックス番号を格納している整数の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、2つのコード単位のシーケンスで構成される単一の抽象文字のコード化された文字表現としてサロゲートペアを定義します。ペアの最初の単位は上位サロゲート、2番目は下位サロゲートです。 上位サロゲートは、u + D800 から U + DBFF の範囲の Unicode コードポイントであり、下位サロゲートは u + DC00 から U + DFFF の範囲の Unicode コードポイントです。  
  
 制御文字は、Unicode 値が U + 007F、または u + 0000 から U + 001F または U + 0080 から U + 009F までの範囲内にある文字です。  
  
 .NET では、テキスト要素を1つの文字 (書記素) として表示されるテキストの単位として定義します。 テキスト要素には、基本文字、サロゲートペア、または組み合わせ文字シーケンスを指定できます。 [Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、基本文字と1つ以上の組み合わせ文字の組み合わせとして、組み合わせ文字シーケンスを定義します。 サロゲートペアは、基本文字または組み合わせ文字を表すことができます。  
  
 結合文字シーケンスが無効な場合は、そのシーケンス内のすべての結合文字も返されます。  
  
 結果として得られる配列内の各インデックスは、テキスト要素の先頭、つまり基本文字または上位サロゲートのインデックスです。  
  
 各要素の長さは、連続したインデックスの差として簡単に計算できます。 配列の長さは、常に文字列の長さ以下になります。 たとえば、文字列 "\u4f00\u302a\ud800\udc00\u4f01" が指定されている場合、このメソッドはインデックス0、2、および4を返します。  
  
## <a name="equivalent-members"></a>同等のメンバー  
 .NET Framework のバージョン2.0 以降では、<xref:System.Globalization.StringInfo.SubstringByTextElements%2A> メソッドと <xref:System.Globalization.StringInfo.LengthInTextElements%2A> プロパティによって、<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドによって提供される機能の使いやすい実装が提供されます。  
  
   
  
## Examples  
 次の例では、<xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A> メソッドを呼び出す方法を示しています。 このコード例は、<xref:System.Globalization.StringInfo> クラス用に用意されている大規模な例の一部です。  
  
 [!code-cpp[stringinfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringInfo/cpp/StringInfo.cpp#1)]
 [!code-csharp[stringinfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringInfo/CS/StringInfo.cs#1)]
 [!code-vb[stringinfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringInfo/vb/stringinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="str" /> は <see langword="null" /> です。</exception>
        <altmember cref="Overload:System.Globalization.StringInfo.SubstringByTextElements" />
        <altmember cref="P:System.Globalization.StringInfo.LengthInTextElements" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public string String { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string String" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.StringInfo.String" />
      <MemberSignature Language="VB.NET" Value="Public Property String As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ String { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.String : string with get, set" Usage="System.Globalization.StringInfo.String" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値を取得または設定します。</summary>
        <value>現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値である文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.StringInfo> オブジェクトがインスタンス化されると、その <xref:System.Globalization.StringInfo.String%2A> プロパティは次のいずれかの値に設定されます。  
  
-   既定の <xref:System.Globalization.StringInfo.%23ctor> が呼び出された場合は <xref:System.String.Empty?displayProperty=nameWithType> します。 次に、<xref:System.Globalization.StringInfo.String%2A> プロパティを使用して、この <xref:System.Globalization.StringInfo> オブジェクトによって指定された文字列を割り当てる必要があります。  
  
-   <xref:System.Globalization.StringInfo.%23ctor%28System.String%29> コンストラクターに `value` 引数として指定された文字列。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定操作の値が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SubstringByTextElements">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトからテキスト要素の部分文字列を取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int -&gt; string" Usage="stringInfo.SubstringByTextElements startingTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">この <see cref="T:System.Globalization.StringInfo" /> オブジェクトのテキスト要素の 0 から始まるインデックス。</param>
        <summary>指定されたテキスト要素から最後のテキスト要素までの範囲内で、現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトからテキスト要素の部分文字列を取得します。</summary>
        <returns><see cref="T:System.Globalization.StringInfo" /> パラメーターで指定されたテキスト要素インデックスから、このオブジェクトの最後のテキスト要素までの範囲内にある、この <paramref name="startingTextElement" /> オブジェクトのテキスト要素の部分文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 0 ~ 4 のインデックスが作成された5つのテキスト要素で構成される文字列を考えてみます。 `startingTextElement` パラメーターが1の場合、<xref:System.Globalization.StringInfo.SubstringByTextElements%2A> メソッドは、インデックスが1、2、3、および4のテキスト要素で構成される部分文字列を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startingTextElement" /> が 0 未満です。  
  
または 
現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値である文字列は、空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SubstringByTextElements">
      <MemberSignature Language="C#" Value="public string SubstringByTextElements (int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubstringByTextElements(int32 startingTextElement, int32 lengthInTextElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubstringByTextElements (startingTextElement As Integer, lengthInTextElements As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ SubstringByTextElements(int startingTextElement, int lengthInTextElements);" />
      <MemberSignature Language="F#" Value="member this.SubstringByTextElements : int * int -&gt; string" Usage="stringInfo.SubstringByTextElements (startingTextElement, lengthInTextElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingTextElement" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="lengthInTextElements" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="startingTextElement">この <see cref="T:System.Globalization.StringInfo" /> オブジェクトのテキスト要素の 0 から始まるインデックス。</param>
        <param name="lengthInTextElements">取得するテキスト要素の数。</param>
        <summary>指定されたテキスト要素から指定された数のテキスト要素までの範囲内で、現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトからテキスト要素の部分文字列を取得します。</summary>
        <returns>この <see cref="T:System.Globalization.StringInfo" /> オブジェクト内のテキスト要素の部分文字列。 部分文字列は、<paramref name="lengthInTextElements" /> パラメーターで指定された数のテキスト要素で構成され、<paramref name="startingTextElement" /> パラメーターで指定されたテキスト要素インデックスから開始します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 0 ~ 4 のインデックスが作成された5つのテキスト要素で構成される文字列を考えてみます。 `startingTextElement` パラメーターが1で、`lengthInTextElements` パラメーターが3の場合、<xref:System.Globalization.StringInfo.SubstringByTextElements%2A> メソッドは、インデックスが1、2、および3であるテキスト要素で構成される部分文字列を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startingTextElement" /> が 0 未満です。  
  
または 
 <paramref name="startingTextElement" /> は、現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値である文字列の長さ以上です。  
  
または 
 <paramref name="lengthInTextElements" /> が 0 未満です。  
  
または 
現在の <see cref="T:System.Globalization.StringInfo" /> オブジェクトの値である文字列は、空の文字列 ("") です。  
  
または 
 <paramref name="startingTextElement" /> + <paramref name="lengthInTextElements" /> は、この <see cref="T:System.Globalization.StringInfo" /> オブジェクト内のテキスト要素の数より大きいインデックスを指定します。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
