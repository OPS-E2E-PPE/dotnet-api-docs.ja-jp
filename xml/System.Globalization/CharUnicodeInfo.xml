<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a87c8a952535547238fa2dc11d5898218b80d7c" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82492524" /></Metadata><TypeSignature Language="C#" Value="public static class CharUnicodeInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CharUnicodeInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo abstract sealed" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type CharUnicodeInfo = class" />
  <TypeSignature Language="C#" Value="public sealed class CharUnicodeInfo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CharUnicodeInfo extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CharUnicodeInfo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharUnicodeInfo sealed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed CharUnicodeInfo extends System.Object" FrameworkAlternate="netframework-4.0" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Globalization" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Globalization" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2929e-101">Unicode 文字に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-101">Retrieves information about a Unicode character.</span></span> <span data-ttu-id="2929e-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="2929e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-103">[Unicode 規格](https://go.microsoft.com/fwlink/?linkid=37123)では、多くの unicode 文字カテゴリが定義されています。</span><span class="sxs-lookup"><span data-stu-id="2929e-103">The [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123) defines a number of Unicode character categories.</span></span> <span data-ttu-id="2929e-104">たとえば、文字は、大文字、小文字、10進数字、文字番号、段落区切り記号、算術記号、または通貨記号として分類されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-104">For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="2929e-105">アプリケーションでは、文字カテゴリを使用して、正規表現を使用した部分文字列の解析や抽出など、文字列ベースの操作を制御できます。</span><span class="sxs-lookup"><span data-stu-id="2929e-105">Your application can use the character category to govern string-based operations, such as parsing or extracting substring with regular expressions.</span></span> <span data-ttu-id="2929e-106"><xref:System.Globalization.UnicodeCategory> 列挙体は、使用可能な文字カテゴリを定義します。</span><span class="sxs-lookup"><span data-stu-id="2929e-106">The <xref:System.Globalization.UnicodeCategory> enumeration defines the possible character categories.</span></span>  
  
 <span data-ttu-id="2929e-107"><xref:System.Globalization.CharUnicodeInfo> クラスを使用して、特定の文字の <xref:System.Globalization.UnicodeCategory> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-107">You use the <xref:System.Globalization.CharUnicodeInfo> class to obtain the <xref:System.Globalization.UnicodeCategory> value for a specific character.</span></span> <span data-ttu-id="2929e-108"><xref:System.Globalization.CharUnicodeInfo> クラスは、次の Unicode 文字値を返すメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="2929e-108">The <xref:System.Globalization.CharUnicodeInfo> class defines methods that return the following Unicode character values:</span></span>  
  
-   <span data-ttu-id="2929e-109">文字またはサロゲートペアが属する特定のカテゴリ。</span><span class="sxs-lookup"><span data-stu-id="2929e-109">The specific category to which a character or surrogate pair belongs.</span></span> <span data-ttu-id="2929e-110">返される値は、<xref:System.Globalization.UnicodeCategory> 列挙体のメンバーです。</span><span class="sxs-lookup"><span data-stu-id="2929e-110">The value returned is a member of the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span>  
  
-   <span data-ttu-id="2929e-111">数値。</span><span class="sxs-lookup"><span data-stu-id="2929e-111">Numeric value.</span></span> <span data-ttu-id="2929e-112">分数、添字、上付き文字、ローマ数字、通貨分子、encircled 番号、スクリプト固有の数字など、数字にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-112">Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>  
  
-   <span data-ttu-id="2929e-113">桁の値。</span><span class="sxs-lookup"><span data-stu-id="2929e-113">Digit value.</span></span> <span data-ttu-id="2929e-114">番号付けシステムの整数を表すために、他の数字と組み合わせて使用できる数字に適用されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-114">Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system.</span></span>  
  
-   <span data-ttu-id="2929e-115">10進数の値。</span><span class="sxs-lookup"><span data-stu-id="2929e-115">Decimal digit value.</span></span> <span data-ttu-id="2929e-116">10進数 (基数 10) システムの10進数を表す文字にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-116">Applies only to characters that represent decimal digits in the decimal (base 10) system.</span></span> <span data-ttu-id="2929e-117">10進数の数字は、0 ~ 9 の10桁の数字にすることができます。</span><span class="sxs-lookup"><span data-stu-id="2929e-117">A decimal digit can be one of ten digits, from zero through nine.</span></span> <span data-ttu-id="2929e-118">これらの文字は <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> カテゴリのメンバーです。</span><span class="sxs-lookup"><span data-stu-id="2929e-118">These characters are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>  
  
 <span data-ttu-id="2929e-119">さらに、<xref:System.Globalization.CharUnicodeInfo> クラスは、文字分類に依存する他の多くの .NET Framework 型およびメソッドによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-119">In addition, the <xref:System.Globalization.CharUnicodeInfo> class is used internally by a number of other .NET Framework types and methods that rely on character classification.</span></span> <span data-ttu-id="2929e-120">チェックの内容は次のとおりです</span><span class="sxs-lookup"><span data-stu-id="2929e-120">These include:</span></span>  
  
-   <span data-ttu-id="2929e-121"><xref:System.Globalization.StringInfo> クラス。文字列内の単一の文字ではなく、テキスト要素を操作します。</span><span class="sxs-lookup"><span data-stu-id="2929e-121">The <xref:System.Globalization.StringInfo> class, which works with textual elements instead of single characters in a string.</span></span>  
  
-   <span data-ttu-id="2929e-122">文字またはサロゲートペアが属するカテゴリを決定する <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> メソッドのオーバーロード。</span><span class="sxs-lookup"><span data-stu-id="2929e-122">The overloads of the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method, which determine the category to which a character or surrogate pair belongs.</span></span>  
  
-   <span data-ttu-id="2929e-123"><xref:System.Text.RegularExpressions.Regex>によって認識される[文字クラス](~/docs/standard/base-types/character-classes-in-regular-expressions.md)は、.NET Framework の正規表現エンジンです。</span><span class="sxs-lookup"><span data-stu-id="2929e-123">The [character classes](~/docs/standard/base-types/character-classes-in-regular-expressions.md) recognized by <xref:System.Text.RegularExpressions.Regex>, the .NET Framework's regular expression engine.</span></span>  
  
 <span data-ttu-id="2929e-124">アプリケーションでこのクラスを使用する場合は、<xref:System.Char> 型を使用する際のプログラミング上の考慮事項に注意してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-124">When using this class in your applications, keep in mind the following programming considerations for using the <xref:System.Char> type.</span></span> <span data-ttu-id="2929e-125">型を使用することは困難であり、通常は言語のコンテンツを表すために文字列を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="2929e-125">The type can be difficult to use, and strings are generally preferable for representing linguistic content.</span></span>  
  
-   <span data-ttu-id="2929e-126"><xref:System.Char> オブジェクトは、常に1つの文字に対応するとは限りません。</span><span class="sxs-lookup"><span data-stu-id="2929e-126">A <xref:System.Char> object does not always correspond to a single character.</span></span> <span data-ttu-id="2929e-127"><xref:System.Char> 型は1つの16ビット値を表しますが、一部の文字 (書記素クラスター、サロゲートペアなど) は2つ以上の UTF-16 コード単位で構成されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-127">Although the <xref:System.Char> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units.</span></span> <span data-ttu-id="2929e-128">詳細については、<xref:System.String> クラスの「Char オブジェクトと Unicode 文字」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-128">For more information, see "Char Objects and Unicode Characters" in the <xref:System.String> class.</span></span>  
  
-   <span data-ttu-id="2929e-129">"文字" の概念も柔軟です。</span><span class="sxs-lookup"><span data-stu-id="2929e-129">The notion of a "character" is also flexible.</span></span> <span data-ttu-id="2929e-130">文字はグリフと見なされることがよくありますが、多くのグリフには複数のコードポイントが必要です。</span><span class="sxs-lookup"><span data-stu-id="2929e-130">A character is often thought of as a glyph, but many glyphs require multiple code points.</span></span> <span data-ttu-id="2929e-131">たとえば、äは、2つのコードポイント ("a" + U + 0308 の組み合わせ、ウムラウト)、または単一のコードポイント ("ä" または U + 00A4) で表すことができます。</span><span class="sxs-lookup"><span data-stu-id="2929e-131">For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4).</span></span> <span data-ttu-id="2929e-132">言語によっては、複数のコードポイントを必要とする文字、文字、グリフが多数ある場合があります。これにより、言語のコンテンツ表現が混乱する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2929e-132">Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation.</span></span> <span data-ttu-id="2929e-133">たとえば、ΰ (U + 03B0、ギリシャ文字ウプシロンと tonytika、tonos) がありますが、それに相当する資本文字はありません。</span><span class="sxs-lookup"><span data-stu-id="2929e-133">For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter.</span></span> <span data-ttu-id="2929e-134">このような値を Uppercasing は、単に元の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-134">Uppercasing such a value simply retrieves the original value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2929e-135">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-135">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="2929e-136">認識される文字と、それらが属する特定のカテゴリは Unicode 規格によって定義され、Unicode 標準のあるバージョンから別のバージョンに変更できます。</span><span class="sxs-lookup"><span data-stu-id="2929e-136">Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another.</span></span> <span data-ttu-id="2929e-137">.NET Framework の特定のバージョンの文字の分類は、.NET Framework が実行されている基になるオペレーティングシステムに関係なく、Unicode 標準の1つのバージョンに基づいています。</span><span class="sxs-lookup"><span data-stu-id="2929e-137">Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running.</span></span> <span data-ttu-id="2929e-138">次の表は、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降の .NET Framework バージョンと、文字の分類に使用される Unicode 標準のバージョンを示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-138">The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="2929e-139">.NET Framework のバージョン</span><span class="sxs-lookup"><span data-stu-id="2929e-139">.NET Framework version</span></span> 
 </term><description> <span data-ttu-id="2929e-140">Unicode 標準のバージョン</span><span class="sxs-lookup"><span data-stu-id="2929e-140">Version of the Unicode Standard</span></span> 
 </description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  
  
 </term><description> <span data-ttu-id="2929e-141">[Unicode Standard バージョン 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="2929e-141">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]  
  
 </term><description> <span data-ttu-id="2929e-142">[Unicode Standard バージョン 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="2929e-142">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]  
  
 </term><description> <span data-ttu-id="2929e-143">[Unicode Standard バージョン 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="2929e-143">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]  
  
 </term><description> <span data-ttu-id="2929e-144">[Unicode Standard バージョン 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="2929e-144">[The Unicode Standard, Version 5.0.0](https://www.unicode.org/versions/Unicode5.0.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]  
  
 </term><description> <span data-ttu-id="2929e-145">[Unicode Standard バージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="2929e-145">[The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]  
  
 </term><description> <span data-ttu-id="2929e-146">[Unicode Standard バージョン 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="2929e-146">[The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)  
  
 </span></span></description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]  
  
 </term><description> <span data-ttu-id="2929e-147">[Unicode Standard バージョン 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)  
  
 </span><span class="sxs-lookup"><span data-stu-id="2929e-147">[The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)  
  
 </span></span></description></item></list>  

 <span data-ttu-id="2929e-148">Unicode 標準の各バージョンには、以前のバージョン以降の Unicode 文字データベースへの変更に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="2929e-148">Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version.</span></span> <span data-ttu-id="2929e-149">Unicode 文字データベースは、文字を分類するために <see cref="T:System.Globalization.CharUnicodeInfo" /> クラスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-149">The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</span></span></para></block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2929e-150">数値の Unicode 文字の 10 進値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-150">Gets the decimal digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="2929e-151">10 進値を取得する対象の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="2929e-151">The Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="2929e-152">指定した数字の 10 進値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-152">Gets the decimal digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="2929e-153">指定した数字の 10 進値。</span><span class="sxs-lookup"><span data-stu-id="2929e-153">The decimal digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="2929e-154">または</span><span class="sxs-lookup"><span data-stu-id="2929e-154">-or-</span></span>  
  
 <span data-ttu-id="2929e-155">指定した文字が 10 進数でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="2929e-155">-1, if the specified character is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-156">このメソッドは、10進数を表す文字を等価の整数値に変換します。</span><span class="sxs-lookup"><span data-stu-id="2929e-156">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="2929e-157">10進数は <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> カテゴリの文字で、10進数の10桁の数字を表すことができます (10 進数は 0 ~ 9)。</span><span class="sxs-lookup"><span data-stu-id="2929e-157">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="2929e-158">U + 0030 ~ (DIGIT 0) から U + 0039 (数字 9) などの文字が含まれます。 u + 0660 (アラビア語-インド数字ゼロ) から U + 0669 (アラビア語-インド数字 9)、u + 07C0 (NKO DIGIT 0) から U + 07C0 (NKO DIGIT 9)、u + 1040 (ミャンマー数字ゼロ) から U + 1049 (ミャンマー数字 9)。</span><span class="sxs-lookup"><span data-stu-id="2929e-158">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="2929e-159">Unicode 文字の詳細については、「 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-159">For more information about Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2929e-160">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-160">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDecimalDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDecimalDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDecimalDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDecimalDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2929e-161">10 進値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="2929e-161">The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value.</span></span></param>
        <param name="index"><span data-ttu-id="2929e-162">10 進値を取得する対象の Unicode 文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="2929e-162">The index of the Unicode character for which to get the decimal digit value.</span></span></param>
        <summary><span data-ttu-id="2929e-163">指定した文字列の指定したインデックス位置にある数字の 10 進値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-163">Gets the decimal digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="2929e-164">指定した文字列の指定したインデックス位置にある数字の 10 進値。</span><span class="sxs-lookup"><span data-stu-id="2929e-164">The decimal digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="2929e-165">または</span><span class="sxs-lookup"><span data-stu-id="2929e-165">-or-</span></span>  
  
 <span data-ttu-id="2929e-166">指定した文字列の指定したインデックス位置にある文字が 10 進数でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="2929e-166">-1, if the character at the specified index of the specified string is not a decimal digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-167">このメソッドは、10進数を表す文字を等価の整数値に変換します。</span><span class="sxs-lookup"><span data-stu-id="2929e-167">This method converts characters that represent decimal digits to their equivalent integral values.</span></span> <span data-ttu-id="2929e-168">10進数は <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> カテゴリの文字で、10進数の10桁の数字を表すことができます (10 進数は 0 ~ 9)。</span><span class="sxs-lookup"><span data-stu-id="2929e-168">Decimal digits are characters in the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine.</span></span> <span data-ttu-id="2929e-169">U + 0030 ~ (DIGIT 0) から U + 0039 (数字 9) などの文字が含まれます。 u + 0660 (アラビア語-インド数字ゼロ) から U + 0669 (アラビア語-インド数字 9)、u + 07C0 (NKO DIGIT 0) から U + 07C0 (NKO DIGIT 9)、u + 1040 (ミャンマー数字ゼロ) から U + 1049 (ミャンマー数字 9)。</span><span class="sxs-lookup"><span data-stu-id="2929e-169">It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE).</span></span>  
  
 <span data-ttu-id="2929e-170">Unicode 文字の詳細については、「 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-170">For more information about Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2929e-171">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-171">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2929e-172"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2929e-172"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2929e-173"><paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="2929e-173"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2929e-174">数値の Unicode 文字の桁の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-174">Gets the digit value of a numeric Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (ch As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : char -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="2929e-175">桁の値を取得する対象の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="2929e-175">The Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="2929e-176">指定した数字の桁の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-176">Gets the digit value of the specified numeric character.</span></span></summary>
        <returns><span data-ttu-id="2929e-177">指定した数字の桁の値。</span><span class="sxs-lookup"><span data-stu-id="2929e-177">The digit value of the specified numeric character.</span></span>  
  
 <span data-ttu-id="2929e-178">または</span><span class="sxs-lookup"><span data-stu-id="2929e-178">-or-</span></span>  
  
 <span data-ttu-id="2929e-179">指定した文字が桁でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="2929e-179">-1, if the specified character is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-180">Digit value は、数字として使用できる数字にのみ適用されるプロパティです。</span><span class="sxs-lookup"><span data-stu-id="2929e-180">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="2929e-181">数字は、番号付けシステムの整数を表すために他の数字と組み合わせることができる数字です。</span><span class="sxs-lookup"><span data-stu-id="2929e-181">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="2929e-182">Unicode 文字の詳細については、「 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-182">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2929e-183">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-183">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDigitValue (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDigitValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetDigitValue : string * int -&gt; int" Usage="System.Globalization.CharUnicodeInfo.GetDigitValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2929e-184">桁の値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="2929e-184">The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value.</span></span></param>
        <param name="index"><span data-ttu-id="2929e-185">桁の値を取得する対象の Unicode 文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="2929e-185">The index of the Unicode character for which to get the digit value.</span></span></param>
        <summary><span data-ttu-id="2929e-186">指定した文字列の指定したインデックス位置にある数字の桁の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-186">Gets the digit value of the numeric character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="2929e-187">指定した文字列の指定したインデックス位置にある数字の桁の値。</span><span class="sxs-lookup"><span data-stu-id="2929e-187">The digit value of the numeric character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="2929e-188">または</span><span class="sxs-lookup"><span data-stu-id="2929e-188">-or-</span></span>  
  
 <span data-ttu-id="2929e-189">指定した文字列の指定したインデックス位置にある文字が桁でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="2929e-189">-1, if the character at the specified index of the specified string is not a digit.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-190">Digit value は、数字として使用できる数字にのみ適用されるプロパティです。</span><span class="sxs-lookup"><span data-stu-id="2929e-190">Digit value is a property that applies only to numeric characters that can be used as digits.</span></span> <span data-ttu-id="2929e-191">数字は、番号付けシステムの整数を表すために他の数字と組み合わせることができる数字です。</span><span class="sxs-lookup"><span data-stu-id="2929e-191">A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</span></span>  
  
 <span data-ttu-id="2929e-192">Unicode 文字の詳細については、「 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-192">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2929e-193">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-193">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2929e-194"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2929e-194"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2929e-195"><paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="2929e-195"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2929e-196">Unicode 文字に関連付けられている数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-196">Gets the numeric value associated with a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (ch As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char ch);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="2929e-197">数値を取得する対象の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="2929e-197">The Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="2929e-198">指定した文字に関連付けられている数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-198">Gets the numeric value associated with the specified character.</span></span></summary>
        <returns><span data-ttu-id="2929e-199">指定した文字に関連付けられている数値。</span><span class="sxs-lookup"><span data-stu-id="2929e-199">The numeric value associated with the specified character.</span></span>  
  
 <span data-ttu-id="2929e-200">または</span><span class="sxs-lookup"><span data-stu-id="2929e-200">-or-</span></span>  
  
 <span data-ttu-id="2929e-201">指定した文字が数字でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="2929e-201">-1, if the specified character is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-202">数値は、分数、添字、上付き文字、ローマ数字、通貨分子、encircled 番号、スクリプト固有の数字など、数字のみに適用される Unicode 文字プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2929e-202">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="2929e-203">Unicode 文字の詳細については、「 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-203">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="2929e-204"><xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> メソッドは、`ch` が1つの言語に対応し、その文字が10進数に変換できるかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="2929e-204">The <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method assumes that `ch` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="2929e-205">ただし、Unicode 規格の一部の数値は、サロゲートペアを形成する2つの <xref:System.Char> オブジェクトによって表されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-205">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="2929e-206">たとえば、Aegean ナンバリングシステムは、コードポイント U + 10107 から U + 10133 で構成されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-206">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="2929e-207">次の例では、<xref:System.Char.ConvertFromUtf32%2A> メソッドを使用して、AEGEAN NUMBER ONE を表す文字列をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="2929e-207">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="2929e-208">この例の出力結果が示すように、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> メソッドは、この文字の上位サロゲートまたは下位サロゲートのいずれかが渡された場合に-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="2929e-208">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="2929e-209">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-209">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.Globalization.CharUnicodeInfo.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2929e-210">数値を取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="2929e-210">The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value.</span></span></param>
        <param name="index"><span data-ttu-id="2929e-211">数値を取得する対象の Unicode 文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="2929e-211">The index of the Unicode character for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="2929e-212">指定した文字列の指定したインデックス位置にある文字に関連付けられている数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-212">Gets the numeric value associated with the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="2929e-213">指定した文字列の指定したインデックス位置にある文字に関連付けられている数値。</span><span class="sxs-lookup"><span data-stu-id="2929e-213">The numeric value associated with the character at the specified index of the specified string.</span></span>  
  
 <span data-ttu-id="2929e-214">または</span><span class="sxs-lookup"><span data-stu-id="2929e-214">-or-</span></span>  
  
 <span data-ttu-id="2929e-215">指定した文字列の指定したインデックス位置にある文字が数字でない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="2929e-215">-1, if the character at the specified index of the specified string is not a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-216">数値は、分数、添字、上付き文字、ローマ数字、通貨分子、encircled 番号、スクリプト固有の数字など、数字のみに適用される Unicode 文字プロパティです。</span><span class="sxs-lookup"><span data-stu-id="2929e-216">Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span> <span data-ttu-id="2929e-217">Unicode 文字の詳細については、「 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-217">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="2929e-218">`index` 位置にある <xref:System.Char> オブジェクトが有効なサロゲートペアの最初の文字である場合、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> メソッドは、サロゲートペアが数字を形成するかどうかを判断し、存在する場合は数値を返します。</span><span class="sxs-lookup"><span data-stu-id="2929e-218">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value.</span></span> <span data-ttu-id="2929e-219">たとえば、Aegean ナンバリングシステムは、コードポイント U + 10107 から U + 10133 で構成されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-219">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="2929e-220">次の例では、<xref:System.Char.ConvertFromUtf32%2A> メソッドを使用して、各 Aegean 番号を表す文字列をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="2929e-220">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="2929e-221">この例の出力が示すように、Aegean number の上位サロゲートが渡された場合、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> メソッドは正しい数値を返します。</span><span class="sxs-lookup"><span data-stu-id="2929e-221">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="2929e-222">ただし、下位サロゲートを渡すと、下位サロゲートのみが分離され、-1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-222">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="2929e-223">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-223">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2929e-224"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2929e-224"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2929e-225"><paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="2929e-225"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2929e-226">Unicode 文字の Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-226">Gets the Unicode category of a Unicode character.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (ch As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char ch);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="2929e-227">Unicode カテゴリを取得する対象の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="2929e-227">The Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="2929e-228">指定した文字の Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-228">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="2929e-229">指定した文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</span><span class="sxs-lookup"><span data-stu-id="2929e-229">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-230">Unicode 文字は、カテゴリに分類されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-230">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="2929e-231">文字のカテゴリは、そのプロパティの1つです。</span><span class="sxs-lookup"><span data-stu-id="2929e-231">A character's category is one of its properties.</span></span> <span data-ttu-id="2929e-232">たとえば、文字には、大文字、小文字、10進数字、文字番号、コネクタの句読点、数学記号、通貨記号などがあります。</span><span class="sxs-lookup"><span data-stu-id="2929e-232">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="2929e-233"><xref:System.Globalization.UnicodeCategory> クラスは、Unicode 文字のカテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="2929e-233">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="2929e-234">Unicode 文字の詳細については、「 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-234">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="2929e-235"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> メソッドは、`ch` が1つの言語に対応し、そのカテゴリを返すことを前提としています。</span><span class="sxs-lookup"><span data-stu-id="2929e-235">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> method assumes that `ch` corresponds to a single linguistic character and returns its category.</span></span> <span data-ttu-id="2929e-236">これは、サロゲートペアの場合、サロゲートが属するカテゴリではなく <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> を返すことを意味します。</span><span class="sxs-lookup"><span data-stu-id="2929e-236">This means that, for surrogate pairs, it returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> instead of the category to which the surrogate belongs.</span></span> <span data-ttu-id="2929e-237">たとえば、Ugaritic のアルファベットは、コードポイント U + 10380 を U + 1039F に占有します。</span><span class="sxs-lookup"><span data-stu-id="2929e-237">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="2929e-238">次の例では、<xref:System.Char.ConvertFromUtf32%2A> メソッドを使用して、Ugaritic アルファベットの最初の文字である UGARITIC 文字 ALPA (U + 10380) を表す文字列をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="2929e-238">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="2929e-239">この例の出力が示すように、<xref:System.Char.IsNumber%28System.Char%29> メソッドは、この文字の上位サロゲートまたは下位サロゲートのいずれかが渡された場合に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="2929e-239">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either the high surrogate or the low surrogate of this character.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 <span data-ttu-id="2929e-240">注意 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>は特定の文字がパラメーターとして渡されると、<xref:System.Globalization.UnicodeCategory>メソッドと常に同じ<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>値を返すとは限りません。</span><span class="sxs-lookup"><span data-stu-id="2929e-240">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="2929e-241"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは現在のバージョンの Unicode 標準を反映するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="2929e-241">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="2929e-242">これに対し、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは通常、現在のバージョンの Unicode 標準を反映しますが、以前のバージョンの標準に基づく文字のカテゴリまたは、旧バージョンとの互換性を維持するために現在の標準とは異なるカテゴリを返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="2929e-242">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2929e-243">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-243">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_Char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (int codePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(int32 codePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (codePoint As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(int codePoint);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory codePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codePoint" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="codePoint"><span data-ttu-id="2929e-244">Unicode 文字の 32 ビットのコード ポイント値を表す数値。</span><span class="sxs-lookup"><span data-stu-id="2929e-244">A number representing the 32-bit code point value of the Unicode character.</span></span></param>
        <summary><span data-ttu-id="2929e-245">指定した文字の Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-245">Gets the Unicode category of the specified character.</span></span></summary>
        <returns><span data-ttu-id="2929e-246">指定した文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</span><span class="sxs-lookup"><span data-stu-id="2929e-246">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.Globalization.CharUnicodeInfo.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="2929e-247">Unicode カテゴリを取得する対象の Unicode 文字を含む <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="2929e-247">The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category.</span></span></param>
        <param name="index"><span data-ttu-id="2929e-248">Unicode カテゴリを取得する対象の Unicode 文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="2929e-248">The index of the Unicode character for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="2929e-249">指定した文字列の指定したインデックス位置にある文字の Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="2929e-249">Gets the Unicode category of the character at the specified index of the specified string.</span></span></summary>
        <returns><span data-ttu-id="2929e-250">指定した文字列の指定したインデックス位置にある文字のカテゴリを示す <see cref="T:System.Globalization.UnicodeCategory" /> 値。</span><span class="sxs-lookup"><span data-stu-id="2929e-250">A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2929e-251">Unicode 文字は、カテゴリに分類されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-251">The Unicode characters are divided into categories.</span></span> <span data-ttu-id="2929e-252">文字のカテゴリは、そのプロパティの1つです。</span><span class="sxs-lookup"><span data-stu-id="2929e-252">A character's category is one of its properties.</span></span> <span data-ttu-id="2929e-253">たとえば、文字には、大文字、小文字、10進数字、文字番号、コネクタの句読点、数学記号、通貨記号などがあります。</span><span class="sxs-lookup"><span data-stu-id="2929e-253">For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol.</span></span> <span data-ttu-id="2929e-254"><xref:System.Globalization.UnicodeCategory> クラスは、Unicode 文字のカテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="2929e-254">The <xref:System.Globalization.UnicodeCategory> class returns the category of a Unicode character.</span></span> <span data-ttu-id="2929e-255">Unicode 文字の詳細については、「 [Unicode 標準](https://go.microsoft.com/fwlink/?linkid=37123)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-255">For more information on Unicode characters, see the [Unicode Standard](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>  
  
 <span data-ttu-id="2929e-256">`index` 位置にある <xref:System.Char> オブジェクトが有効なサロゲートペアの最初の文字である場合、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> メソッドは <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>を返す代わりに、サロゲートペアの Unicode カテゴリを返します。</span><span class="sxs-lookup"><span data-stu-id="2929e-256">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns the Unicode category of the surrogate pair instead of returning <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2929e-257">たとえば、Ugaritic のアルファベットは、コードポイント U + 10380 を U + 1039F に占有します。</span><span class="sxs-lookup"><span data-stu-id="2929e-257">For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F.</span></span> <span data-ttu-id="2929e-258">次の例では、<xref:System.Char.ConvertFromUtf32%2A> メソッドを使用して、Ugaritic アルファベットの最初の文字である UGARITIC 文字 ALPA (U + 10380) を表す文字列をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="2929e-258">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet.</span></span> <span data-ttu-id="2929e-259">この例の出力が示すように、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> メソッドは、サロゲートペアを考慮していることを示す、この文字の上位サロゲートが渡された場合に <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> を返します。</span><span class="sxs-lookup"><span data-stu-id="2929e-259">As the output from the example shows, the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> method returns <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair.</span></span> <span data-ttu-id="2929e-260">ただし、下位サロゲートが渡された場合は、下位サロゲートのみが分離され、<xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>が返されます。</span><span class="sxs-lookup"><span data-stu-id="2929e-260">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 <span data-ttu-id="2929e-261"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> メソッドは、特定の文字をパラメーターとして渡したときに、必ずしも <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> メソッドと同じ <xref:System.Globalization.UnicodeCategory> 値を返さないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="2929e-261">Note that <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method when passed a particular character as a parameter.</span></span> <span data-ttu-id="2929e-262"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは現在のバージョンの Unicode 標準を反映するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="2929e-262">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="2929e-263">これに対し、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType>メソッドは通常、現在のバージョンの Unicode 標準を反映しますが、以前のバージョンの標準に基づく文字のカテゴリまたは、旧バージョンとの互換性を維持するために現在の標準とは異なるカテゴリを返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="2929e-263">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2929e-264">次のコード例は、さまざまな種類の文字について、各メソッドによって返される値を示しています。</span><span class="sxs-lookup"><span data-stu-id="2929e-264">The following code example shows the values returned by each method for different types of characters.</span></span>  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo_String#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2929e-265"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="2929e-265"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2929e-266"><paramref name="index" /> が <paramref name="s" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="2929e-266"><paramref name="index" /> is outside the range of valid indexes in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
  </Members>
</Type>
