<Type Name="CultureInfo" FullName="System.Globalization.CultureInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="66d17a65769d9b9fe55ef934db19d0f4b4adbda8" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77225952" /></Metadata><TypeSignature Language="C#" Value="public class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit CultureInfo extends System.Object implements class System.ICloneable, class System.IFormatProvider" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CultureInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CultureInfo&#xA;Implements ICloneable, IFormatProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CultureInfo : ICloneable, IFormatProvider" />
  <TypeSignature Language="F#" Value="type CultureInfo = class&#xA;    interface ICloneable&#xA;    interface IFormatProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormatProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e93bb-101">特定のカルチャ (アンマネージ コードの開発では "*ロケール*" と呼ばれます) に関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-101">Provides information about a specific culture (called a *locale* for unmanaged code development).</span></span> <span data-ttu-id="e93bb-102">この情報には、カルチャの名前、表記体系、使用する暦、文字列の並べ替え順序、および日付と数値の書式が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-102">The information includes the names for the culture, the writing system, the calendar used, the sort order of strings, and formatting for dates and numbers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-103"><xref:System.Globalization.CultureInfo> クラスは、特定のカルチャに関連付けられた言語、サブ言語、国/地域、暦、規則などのカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-103">The <xref:System.Globalization.CultureInfo> class provides culture-specific information, such as the language, sublanguage, country/region, calendar, and conventions associated with a particular culture.</span></span> <span data-ttu-id="e93bb-104">このクラスは、<xref:System.Globalization.DateTimeFormatInfo>、<xref:System.Globalization.NumberFormatInfo>、<xref:System.Globalization.CompareInfo>、および <xref:System.Globalization.TextInfo> オブジェクトのカルチャ固有のインスタンスへのアクセスも提供します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-104">This class also provides access to culture-specific instances of the <xref:System.Globalization.DateTimeFormatInfo>, <xref:System.Globalization.NumberFormatInfo>, <xref:System.Globalization.CompareInfo>, and <xref:System.Globalization.TextInfo> objects.</span></span> <span data-ttu-id="e93bb-105">これらのオブジェクトには、大文字と小文字の区別、日付と数値の書式設定、文字列の比較など、カルチャ固有の操作に必要な情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-105">These objects contain the information required for culture-specific operations, such as casing, formatting dates and numbers, and comparing strings.</span></span> <span data-ttu-id="e93bb-106"><xref:System.Globalization.CultureInfo> クラスは、<xref:System.String>、<xref:System.DateTime>、<xref:System.DateTimeOffset>、数値型など、カルチャ固有のデータを書式設定、解析、または操作するクラスによって直接的または間接的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-106">The <xref:System.Globalization.CultureInfo> class is used either directly or indirectly by classes that format, parse, or manipulate culture-specific data, such as <xref:System.String>, <xref:System.DateTime>, <xref:System.DateTimeOffset>, and the numeric types.</span></span>  
  
 <span data-ttu-id="e93bb-107">このセクションの内容</span><span class="sxs-lookup"><span data-stu-id="e93bb-107">In this section:</span></span>  
  
 <span data-ttu-id="e93bb-108">[カルチャ名と識別子](#CultureNames) </span><span class="sxs-lookup"><span data-stu-id="e93bb-108">[Culture names and identifiers](#CultureNames) </span></span>  
 <span data-ttu-id="e93bb-109">[インバリアント、ニュートラル、および特定のカルチャ](#Invariant) </span><span class="sxs-lookup"><span data-stu-id="e93bb-109">[Invariant, neutral, and specific cultures](#Invariant) </span></span>  
 <span data-ttu-id="e93bb-110">[カスタムカルチャ](#Custom) </span><span class="sxs-lookup"><span data-stu-id="e93bb-110">[Custom cultures](#Custom) </span></span>  
 <span data-ttu-id="e93bb-111">[動的なカルチャデータ](#Dynamic) </span><span class="sxs-lookup"><span data-stu-id="e93bb-111">[Dynamic culture data](#Dynamic) </span></span>  
 <span data-ttu-id="e93bb-112">[CultureInfo と文化のデータ](#cultureinfo-and-cultural-data)[現在のカルチャと現在の UI カルチャ](#Current) </span><span class="sxs-lookup"><span data-stu-id="e93bb-112">[CultureInfo and cultural data](#cultureinfo-and-cultural-data) [The current culture and current UI culture](#Current) </span></span>  
 <span data-ttu-id="e93bb-113">[すべてのカルチャの取得](#GetAll) </span><span class="sxs-lookup"><span data-stu-id="e93bb-113">[Getting all cultures](#GetAll) </span></span>  
 <span data-ttu-id="e93bb-114">[カルチャとスレッド](#Threads) </span><span class="sxs-lookup"><span data-stu-id="e93bb-114">[Culture and threads](#Threads) </span></span>  
 <span data-ttu-id="e93bb-115">[カルチャおよびアプリケーションドメイン](#AppDomain) </span><span class="sxs-lookup"><span data-stu-id="e93bb-115">[Culture and application domains](#AppDomain) </span></span>  
 <span data-ttu-id="e93bb-116">[カルチャおよびタスクベースの非同期操作](#Async) </span><span class="sxs-lookup"><span data-stu-id="e93bb-116">[Culture and task-based asynchronous operations](#Async) </span></span>  
 <span data-ttu-id="e93bb-117">[CultureInfo オブジェクトのシリアル化](#Serialization) </span><span class="sxs-lookup"><span data-stu-id="e93bb-117">[CultureInfo object serialization](#Serialization) </span></span>  
 <span data-ttu-id="e93bb-118">[コントロールパネルのオーバーライド](#CPanel) </span><span class="sxs-lookup"><span data-stu-id="e93bb-118">[Control Panel overrides](#CPanel) </span></span>  
 <span data-ttu-id="e93bb-119">[代替並べ替え順序](#AlternateSort) </span><span class="sxs-lookup"><span data-stu-id="e93bb-119">[Alternate sort orders](#AlternateSort) </span></span>  
 [<span data-ttu-id="e93bb-120">カルチャと Windows アプリ</span><span class="sxs-lookup"><span data-stu-id="e93bb-120">Culture and Windows apps</span></span>](#Windows)  

<a name="CultureNames"></a>   
## <a name="culture-names-and-identifiers"></a><span data-ttu-id="e93bb-121">カルチャ名と識別子</span><span class="sxs-lookup"><span data-stu-id="e93bb-121">Culture names and identifiers</span></span>  
 <span data-ttu-id="e93bb-122"><xref:System.Globalization.CultureInfo> クラスは、RFC 4646 に基づいて、カルチャごとに一意の名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-122">The <xref:System.Globalization.CultureInfo> class specifies a unique name for each culture, based on RFC 4646.</span></span> <span data-ttu-id="e93bb-123">名前は、言語に関連付けられた ISO 639 2 文字の小文字カルチャコードと、国または地域に関連付けられている ISO 3166 2 文字の大文字サブカルチャコードを組み合わせたものです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-123">The name is a combination of an ISO 639 two-letter lowercase culture code associated with a language and an ISO 3166 two-letter uppercase subculture code associated with a country or region.</span></span> <span data-ttu-id="e93bb-124">さらに、[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 以降を対象とし、Windows 10 以降で実行されているアプリでは、有効な BCP-47 言語タグに対応するカルチャ名がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-124">In addition, for apps that target [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] or later and are running under Windows 10 or later, culture names that correspond to valid BCP-47 language tags are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-125">カルチャ名がクラスコンストラクターまたは <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> や <xref:System.Globalization.CultureInfo>などのメソッドに渡される場合、その大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-125">When a culture name is passed to a class constructor or a method such as <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> or <xref:System.Globalization.CultureInfo>, its case is not significant.</span></span>  
  
 <span data-ttu-id="e93bb-126">RFC 4646 に基づくカルチャ名の形式は*languagecode2*>-*country/regioncode2*です。ここで、 *languagecode2*は2文字の言語コード、 *country/regioncode2*は2文字のサブカルチャコードです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-126">The format for the culture name based on RFC 4646 is *languagecode2*>-*country/regioncode2*, where *languagecode2* is the two-letter language code and *country/regioncode2* is the two-letter subculture code.</span></span> <span data-ttu-id="e93bb-127">例には、日本語 (日本) の場合の ja-JP と英語 (米国) の場合の en-US が含まれています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-127">Examples include ja-JP for Japanese (Japan) and en-US for English (United States).</span></span> <span data-ttu-id="e93bb-128">2 文字の言語コードが使用できない場合は、ISO 639-2 から派生した 3 文字のコードが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-128">In cases where a two-letter language code is not available, a three-letter code derived from ISO 639-2 is used.</span></span>  
  
 <span data-ttu-id="e93bb-129">カルチャ名によっては、ISO 15924 スクリプトも指定されていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-129">Note that some culture names also specify an ISO 15924 script.</span></span> <span data-ttu-id="e93bb-130">たとえば、Cyrl はキリルスクリプトを指定し、Latn は Latin スクリプトを指定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-130">For example, Cyrl specifies the Cyrillic script and Latn specifies the Latin script.</span></span> <span data-ttu-id="e93bb-131">スクリプトを含むカルチャ名は、pattern *languagecode2*-*scripttag*-*country/regioncode2*というパターンを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-131">A culture name that includes a script uses the pattern *languagecode2*-*scripttag*-*country/regioncode2*.</span></span> <span data-ttu-id="e93bb-132">この種類のカルチャ名の例として、uz-Cyrl-UZ (ウズベク語 (キリル、ウズベキスタン)) があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-132">An example of this type of culture name is uz-Cyrl-UZ for Uzbek (Cyrillic, Uzbekistan).</span></span> <span data-ttu-id="e93bb-133">Windows Vista より前の Windows オペレーティングシステムでは、スクリプトを含むカルチャ名は、 *languagecode2*-*country/regioncode2*-*scripttag*というパターンを使用します。たとえば、ウズベク語 (キリル、ウズベキスタン) には uz-uz-Cyrl のようになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-133">On Windows operating systems before Windows Vista, a culture name that includes a script uses the pattern *languagecode2*-*country/regioncode2*-*scripttag*, for example, uz-UZ-Cyrl for Uzbek (Cyrillic, Uzbekistan).</span></span>  
  
 <span data-ttu-id="e93bb-134">ニュートラルカルチャは、2文字の小文字の言語コードによってのみ指定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-134">A neutral culture is specified by only the two-letter lowercase language code.</span></span> <span data-ttu-id="e93bb-135">たとえば、fr はフランス語のニュートラルカルチャを指定し、de はドイツ語のニュートラルカルチャを指定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-135">For example, fr specifies the neutral culture for French, and de specifies the neutral culture for German.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-136">この規則に矛盾する2つのカルチャ名があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-136">There are two culture names that contradict this rule.</span></span> <span data-ttu-id="e93bb-137">カルチャ中国語 (簡体字)、zh-tw Hans、および繁体字中国語 (繁体字) は、ニュートラルカルチャです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-137">The cultures Chinese (Simplified), named zh-Hans, and Chinese (Traditional), named zh-Hant, are neutral cultures.</span></span> <span data-ttu-id="e93bb-138">カルチャ名は現在の標準を表し、古い名前 zh-tw と zh-tw を使用する理由がない限り、使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-138">The culture names represent the current standard and should be used unless you have a reason for using the older names zh-CHS and zh-CHT.</span></span>  
  
 <span data-ttu-id="e93bb-139">カルチャ識別子は、標準の国際数字の省略形であり、インストールされているカルチャの1つを一意に識別するために必要なコンポーネントを備えています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-139">A culture identifier is a standard international numeric abbreviation and has the components necessary to uniquely identify one of the installed cultures.</span></span> <span data-ttu-id="e93bb-140">アプリケーションでは、定義済みのカルチャ識別子を使用することも、カスタム識別子を定義することもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-140">Your application can use predefined culture identifiers or define custom identifiers.</span></span>  
  
 <span data-ttu-id="e93bb-141">特定の定義済みカルチャ名と識別子は、このクラスおよび <xref:System.Globalization?displayProperty=nameWithType> 名前空間のその他のクラスによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-141">Certain predefined culture names and identifiers are used by this and other classes in the <xref:System.Globalization?displayProperty=nameWithType> namespace.</span></span> <span data-ttu-id="e93bb-142">Windows システムの詳細なカルチャ情報については、 [windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-142">For detailed culture information for Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-143">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-143">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span>  
  
 <span data-ttu-id="e93bb-144">カルチャ名と識別子は、特定のコンピューターで検出できるカルチャのサブセットのみを表すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-144">Remember that the culture names and identifiers represent only a subset of cultures that can be found on a particular computer.</span></span> <span data-ttu-id="e93bb-145">Windows のバージョンまたはサービスパックは、使用可能なカルチャを変更できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-145">Windows versions or service packs can change the available cultures.</span></span> <span data-ttu-id="e93bb-146">アプリケーションでは、<xref:System.Globalization.CultureAndRegionInfoBuilder> クラスを使用してカスタムカルチャを追加します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-146">Applications add custom cultures using the <xref:System.Globalization.CultureAndRegionInfoBuilder> class.</span></span> <span data-ttu-id="e93bb-147">ユーザーは、Microsoft Locale Builder ツールを使用して、独自のカスタムカルチャを追加します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-147">Users add their own custom cultures using the Microsoft Locale Builder tool.</span></span> <span data-ttu-id="e93bb-148">Microsoft Locale Builder は、`CultureAndRegionInfoBuilder` クラスを使用してマネージコードで記述されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-148">Microsoft Locale Builder is written in managed code using the `CultureAndRegionInfoBuilder` class.</span></span>  
  
 <span data-ttu-id="e93bb-149">いくつかの異なる名前は、特に次のクラスメンバーに関連付けられた名前というカルチャに密接に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-149">Several distinct names are closely associated with a culture, notably the names associated with the following class members:</span></span>  
  
-   <xref:System.Globalization.CultureInfo.ToString%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>  
  
-   <xref:System.Globalization.CompareInfo.Name%2A?displayProperty=nameWithType>  
  
<a name="Invariant"></a>   
## <a name="invariant-neutral-and-specific-cultures"></a><span data-ttu-id="e93bb-150">インバリアント、ニュートラル、および特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="e93bb-150">Invariant, neutral, and specific cultures</span></span>  
 <span data-ttu-id="e93bb-151">カルチャは、通常、インバリアントカルチャ、ニュートラルカルチャ、および特定のカルチャという3つのセットにグループ化されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-151">The cultures are generally grouped into three sets: invariant cultures, neutral cultures, and specific cultures.</span></span>  
  
 <span data-ttu-id="e93bb-152">インバリアントカルチャは、カルチャに依存しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-152">An invariant culture is culture-insensitive.</span></span> <span data-ttu-id="e93bb-153">アプリケーションで、空の文字列 ("") またはその識別子を使用して、名前でインバリアントカルチャを指定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-153">Your application specifies the invariant culture by name using an empty string ("") or by its identifier.</span></span> <span data-ttu-id="e93bb-154"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> は、インバリアントカルチャのインスタンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-154"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> defines an instance of the invariant culture.</span></span> <span data-ttu-id="e93bb-155">英語と関連付けられていますが、国/地域には関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-155">It is associated with the English language but not with any country/region.</span></span> <span data-ttu-id="e93bb-156">これは、カルチャを必要とする `Globalization` 名前空間のほとんどすべてのメソッドで使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-156">It is used in almost any method in the `Globalization` namespace that requires a culture.</span></span>  
  
 <span data-ttu-id="e93bb-157">ニュートラルカルチャは、言語に関連付けられているが、国/地域に関連付けられていないカルチャです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-157">A neutral culture is a culture that is associated with a language but not with a country/region.</span></span> <span data-ttu-id="e93bb-158">特定のカルチャとは、言語および国/地域に関連付けられているカルチャです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-158">A specific culture is a culture that is associated with a language and a country/region.</span></span> <span data-ttu-id="e93bb-159">たとえば、fr はフランス語のカルチャのニュートラル名で、fr-fr は特定のフランス語 (フランス) カルチャの名前です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-159">For example, fr is the neutral name for the French culture, and fr-FR is the name of the specific French (France) culture.</span></span> <span data-ttu-id="e93bb-160">中国語 (簡体字) と繁体字中国語は、ニュートラルカルチャとも見なされることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-160">Note that Chinese (Simplified) and Chinese (Traditional) are also considered neutral cultures.</span></span>  
  
 <span data-ttu-id="e93bb-161">ニュートラルカルチャの <xref:System.Globalization.CompareInfo> クラスのインスタンスを作成することはお勧めしません。含まれるデータは任意です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-161">Creating an instance of a <xref:System.Globalization.CompareInfo> class for a neutral culture is not recommended because the data it contains is arbitrary.</span></span> <span data-ttu-id="e93bb-162">データの表示と並べ替えを行うには、言語と地域の両方を指定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-162">To display and sort data, specify both the language and region.</span></span> <span data-ttu-id="e93bb-163">また、ニュートラルカルチャ用に作成された <xref:System.Globalization.CompareInfo> オブジェクトの <xref:System.Globalization.CompareInfo.Name%2A> プロパティは、国のみを返し、地域は含まれません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-163">Additionally, the <xref:System.Globalization.CompareInfo.Name%2A> property of a <xref:System.Globalization.CompareInfo> object created for a neutral culture returns only the country and does not include the region.</span></span>  
  
 <span data-ttu-id="e93bb-164">定義されたカルチャには、特定のカルチャの親がニュートラルカルチャであり、ニュートラルカルチャの親がインバリアントカルチャである階層があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-164">The defined cultures have a hierarchy in which the parent of a specific culture is a neutral culture and the parent of a neutral culture is the invariant culture.</span></span> <span data-ttu-id="e93bb-165"><xref:System.Globalization.CultureInfo.Parent%2A> プロパティには、特定のカルチャに関連付けられているニュートラルカルチャが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-165">The <xref:System.Globalization.CultureInfo.Parent%2A> property contains the neutral culture associated with a specific culture.</span></span> <span data-ttu-id="e93bb-166">カスタムカルチャでは、このパターンに準拠して <xref:System.Globalization.CultureInfo.Parent%2A> プロパティを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-166">Custom cultures should define the <xref:System.Globalization.CultureInfo.Parent%2A> property in conformance with this pattern.</span></span>  
  
 <span data-ttu-id="e93bb-167">特定のカルチャのリソースがオペレーティングシステムで使用できない場合は、関連付けられているニュートラルカルチャのリソースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-167">If the resources for a specific culture are not available in the operating system, the resources for the associated neutral culture are used.</span></span> <span data-ttu-id="e93bb-168">ニュートラルカルチャのリソースが使用できない場合は、メインアセンブリに埋め込まれているリソースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-168">If the resources for the neutral culture are not available, the resources embedded in the main assembly are used.</span></span> <span data-ttu-id="e93bb-169">リソースフォールバックプロセスの詳細については、「[リソースのパッケージ化と配置](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-169">For more information on the resource fallback process, see [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
 <span data-ttu-id="e93bb-170">Windows API のロケールの一覧は、.NET Framework でサポートされているカルチャの一覧とは若干異なります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-170">The list of locales in the Windows API is slightly different from the list of cultures supported by the .NET Framework.</span></span> <span data-ttu-id="e93bb-171">たとえば、p/invoke メカニズムを使用して Windows との相互運用性が必要な場合、アプリケーションでは、オペレーティングシステムに対して定義されている特定のカルチャを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-171">If interoperability with Windows is required, for example, through the p/invoke mechanism, the application should use a specific culture that is defined for the operating system.</span></span> <span data-ttu-id="e93bb-172">特定のカルチャを使用すると、同等の Windows ロケールとの一貫性が確保されます。これは、<xref:System.Globalization.CultureInfo.LCID%2A>と同じロケール識別子で識別されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-172">Use of the specific culture ensures consistency with the equivalent Windows locale, which is identified with a locale identifier that is the same as <xref:System.Globalization.CultureInfo.LCID%2A>.</span></span>  
  
 <span data-ttu-id="e93bb-173"><xref:System.Globalization.DateTimeFormatInfo> または <xref:System.Globalization.NumberFormatInfo> は、ニュートラルカルチャではなく、特定のカルチャに対してのみ作成できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-173">A <xref:System.Globalization.DateTimeFormatInfo> or a <xref:System.Globalization.NumberFormatInfo> can be created only for the invariant culture or for specific cultures, not for neutral cultures.</span></span>  
  
 <span data-ttu-id="e93bb-174"><xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> が <xref:System.Globalization.TaiwanCalendar> で、<xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> が zh-tw に設定されていない場合、<xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>、<xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>、および <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType> は空の文字列 ("") を返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-174">If <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> is the <xref:System.Globalization.TaiwanCalendar> but the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> is not set to zh-TW, then <xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=nameWithType>, <xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=nameWithType>, and <xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=nameWithType> return an empty string ("").</span></span>  
  
<a name="Custom"></a>   
## <a name="custom-cultures"></a><span data-ttu-id="e93bb-175">カスタムカルチャ</span><span class="sxs-lookup"><span data-stu-id="e93bb-175">Custom cultures</span></span>  
 <span data-ttu-id="e93bb-176">Windows オペレーティングシステムと .NET Framework によってサポートされる定義済みのカルチャに加えて、.NET Framework は次の3種類のカスタムカルチャをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-176">In addition to the predefined cultures supported by the Windows operating system and the .NET Framework, the .NET Framework supports three types of custom cultures:</span></span>  
  
-   <span data-ttu-id="e93bb-177">Windows または .NET Framework で使用できるカルチャを補完する新しいカルチャ。</span><span class="sxs-lookup"><span data-stu-id="e93bb-177">New cultures that supplement the cultures available in Windows or the .NET Framework.</span></span> <span data-ttu-id="e93bb-178">たとえば、アプリケーションでは、システム上の fj-fj (または Fijan (フィジー)) カルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトをインストールできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-178">For example, an application could install a <xref:System.Globalization.CultureInfo> object that represents the fj-FJ (or Fijan (Fiji)) culture on a system.</span></span>  
  
-   <span data-ttu-id="e93bb-179">Windows および .NET Framework でサポートされる標準カルチャのプロパティとは異なるプロパティを持つ置換カルチャ。</span><span class="sxs-lookup"><span data-stu-id="e93bb-179">Replacement cultures whose properties are different from the properties of the standard cultures supported by Windows and the .NET Framework.</span></span>  
  
-   <span data-ttu-id="e93bb-180">ユーザーがオーバーライドする標準カルチャ。</span><span class="sxs-lookup"><span data-stu-id="e93bb-180">Standard cultures with user overrides.</span></span> <span data-ttu-id="e93bb-181">ユーザーは、**コントロールパネル**の **[地域と言語]** アプリケーションを使用して、既存のカルチャのプロパティ値をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-181">The user can use the **Region and Language** application in **Control Panel** to customize an existing culture's property values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-182"><xref:System.Globalization.CultureAndRegionInfoBuilder> クラスを使用して、既存のカルチャを補完または置換するカスタムカルチャを定義、保存、および登録できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-182">You can use the <xref:System.Globalization.CultureAndRegionInfoBuilder> class to define, save, and register custom cultures that either supplement or replace existing cultures.</span></span> <span data-ttu-id="e93bb-183"><xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType> メソッドは、ターゲットシステムにカスタムカルチャをインストールするために使用できるロケールデータマークアップ言語 (LDML) ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-183">The <xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=nameWithType> method creates a Locale Data Markup Language (LDML) file that can be used to install a custom culture on target systems.</span></span> <span data-ttu-id="e93bb-184"><xref:System.Globalization.CultureAndRegionInfoBuilder> クラスを使用して新しいまたは置換カルチャを作成する方法の詳細な手順については、<xref:System.Globalization.CultureAndRegionInfoBuilder> クラスのトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-184">For step-by step information on using the <xref:System.Globalization.CultureAndRegionInfoBuilder> class to create a new or replacement culture, see the <xref:System.Globalization.CultureAndRegionInfoBuilder> class topic.</span></span>  
  
 <span data-ttu-id="e93bb-185">.NET Framework ではカスタムカルチャがサポートされるため、カルチャ固有のデータを使用する場合は、次の点を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-185">Because the .NET Framework supports custom cultures, you should consider the following when working with culture-specific data:</span></span>  
  
-   <span data-ttu-id="e93bb-186">カスタムカルチャは、定義済みのカルチャの範囲を超える値を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-186">Custom cultures can have values that exceed the ranges of the predefined cultures.</span></span> <span data-ttu-id="e93bb-187">たとえば、一部のカルチャでは、月の名前が異常に長い、予期しない日付または時刻の形式、またはその他の特殊なデータがあります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-187">For example, some cultures have unusually long month names, unexpected date or time formats, or other unusual data.</span></span>  
  
-   <span data-ttu-id="e93bb-188">カルチャ固有のデータをユーザーインターフェイスに表示する場合は、ユーザーのカスタマイズを尊重する必要があります。たとえば、ユーザーが24時間制または yyyyMMdd 日付形式を使用する場合があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-188">When you display culture-specific data in the user interface, you should respect the user's customizations; for example, the user might want a 24-hour clock or a yyyyMMdd date format.</span></span>  
  
-   <span data-ttu-id="e93bb-189">カスタムカルチャは既定値をオーバーライドすることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-189">Remember that custom cultures override default values.</span></span> <span data-ttu-id="e93bb-190">したがって、カルチャデータを安定させることはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-190">Therefore, you cannot consider culture data to be stable.</span></span> <span data-ttu-id="e93bb-191">将来、国名、数字と日付の形式、およびスペルが変わる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-191">Country names, number and date formats, and spellings may change in the future.</span></span> <span data-ttu-id="e93bb-192">日付や時刻の文字列など、カルチャに依存するデータをシリアル化して、日付と時刻の解析関数に渡す場合は、インバリアントカルチャまたは特定のを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-192">If you want to serialize culture-sensitive data such as date and time strings to be passed to the date and time parsing functions, you should use the invariant culture or a specific .</span></span>  
  
 <span data-ttu-id="e93bb-193">システムにインストールされているカスタムカルチャの <xref:System.Globalization.CultureInfo.CultureTypes%2A> プロパティ値には、<xref:System.Globalization.CultureTypes?displayProperty=nameWithType> フラグが含まれ、カスタムカルチャには `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 または 4096) の <xref:System.Globalization.CultureInfo.LCID%2A> プロパティ値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-193">The <xref:System.Globalization.CultureInfo.CultureTypes%2A> property value of custom cultures installed on a system includes the <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> flag, and custom cultures are assigned an <xref:System.Globalization.CultureInfo.LCID%2A> property value of `LOCALE_CUSTOM_UNSPECIFIED` (0x1000, or 4096).</span></span> <span data-ttu-id="e93bb-194">Windows 10 以降では、この値は、完全なカルチャデータを持たないシステム定義のカルチャにも割り当てられることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-194">Note that, starting with Windows 10, this value is also assigned to system-defined cultures that lack complete cultural data.</span></span>  

## <a name="cultureinfo-and-cultural-data"></a><span data-ttu-id="e93bb-195">CultureInfo と文化のデータ</span><span class="sxs-lookup"><span data-stu-id="e93bb-195">CultureInfo and cultural data</span></span>

<span data-ttu-id="e93bb-196">.NET は、実装、プラットフォーム、およびバージョンに応じて、さまざまなソースからカルチャデータを派生させることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-196">.NET derives its cultural data from a one of a variety of sources, depending on implementation, platform, and version:</span></span>

- <span data-ttu-id="e93bb-197">.NET Framework 3.5 以前のバージョンでは、カルチャデータは、Windows オペレーティングシステムと .NET Framework の両方によって提供されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-197">In .NET Framework 3.5 and earlier versions, cultural data is provided by both the Windows operating system and the .NET Framework.</span></span>

- <span data-ttu-id="e93bb-198">.NET Framework 4 以降のバージョンでは、カルチャデータは Windows オペレーティングシステムによって提供されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-198">In .NET Framework 4 and later versions, cultural data is provided by the Windows operating system.</span></span>

- <span data-ttu-id="e93bb-199">Windows で実行されている .NET Core のすべてのバージョンでは、Windows オペレーティングシステムによってカルチャデータが提供されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-199">In all versions of .NET Core running on Windows, cultural data is provided by the Windows operating system.</span></span>

- <span data-ttu-id="e93bb-200">Unix プラットフォームで実行されている .NET Core のすべてのバージョンでは、 [International Components For Unicode (ICU) ライブラリ](http://site.icu-project.org/)によってカルチャデータが提供されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-200">In all versions of .NET Core running on Unix platforms, cultural data is provided by the [International Components for Unicode (ICU) Library](http://site.icu-project.org/).</span></span> <span data-ttu-id="e93bb-201">ICU ライブラリの特定のバージョンは、個々のオペレーティングシステムによって異なります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-201">The specific version of the ICU Library depends on the individual operating system.</span></span>

<span data-ttu-id="e93bb-202">このため、特定の .NET 実装、プラットフォーム、またはバージョンで使用できるカルチャは、別の .NET 実装、プラットフォーム、またはバージョンでは使用できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-202">Because of this, a culture available on a particular .NET implementation, platform, or version may not be available on a different .NET implementation, platform, or version.</span></span>

<span data-ttu-id="e93bb-203">一部の `CultureInfo` オブジェクトは、基になるプラットフォームによって異なります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-203">Some `CultureInfo` objects differ depending on the underlying platform.</span></span> <span data-ttu-id="e93bb-204">特に、"zh-tw"、または中国語 (簡体字、中国) と zh-tw、または中国語 (繁体字、台湾) は、Windows システムでは使用できますが、Unix システムではエイリアス化されたカルチャです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-204">In particular, "zh-CN", or Chinese (Simplified, China) and zh-TW, or Chinese (Traditional, Taiwan), are available cultures on Windows systems, but they are aliased cultures on Unix systems.</span></span> <span data-ttu-id="e93bb-205">"zh-tw" は "zh-tw" カルチャのエイリアスであり、"zh-tw-TW" は "zh-tw-Zh-hant" カルチャのエイリアスとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-205">"zh-CN" is an alias for the "zh-Hans-CN" culture, and "zh-TW" is an alias for the "zh-Hant-TW" culture.</span></span> <span data-ttu-id="e93bb-206">エイリアス化されたカルチャは、<xref:System.Globalization.CultureInfo.GetCultures%2A> メソッドの呼び出しによって返されることはなく、Windows の対応するカルチャとは異なる <xref:System.Globalization.CultureInfo.Parent> カルチャを含む異なるプロパティ値を持つ場合があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-206">Aliased cultures are not returned by calls to the <xref:System.Globalization.CultureInfo.GetCultures%2A> method and may have different property values, including different <xref:System.Globalization.CultureInfo.Parent> cultures, than their Windows counterparts.</span></span> <span data-ttu-id="e93bb-207">Zh-tw と zh-tw のカルチャでは、次のような違いがあります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-207">For the zh-CN and zh-TW cultures, these differenes include the following:</span></span>

- <span data-ttu-id="e93bb-208">Windows システムでは、"zh-tw" カルチャの親カルチャは "zh-tw-Hans" であり、"zh-tw" カルチャの親カルチャは "zh-tw-Zh-hant" です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-208">On Windows systems, the parent culture of the "zh-CN" culture is "zh-Hans", and the parent culture of the "zh-TW" culture is "zh-Hant".</span></span> <span data-ttu-id="e93bb-209">これらのカルチャの親カルチャは、両方とも "zh-tw" です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-209">The parent culture of both these cultures is "zh".</span></span> <span data-ttu-id="e93bb-210">Unix システムでは、両方のカルチャの親は "zh-tw" です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-210">On Unix systems, the parents of both cultures are "zh".</span></span> <span data-ttu-id="e93bb-211">これは、"zh-tw" または "zh-tw" カルチャのカルチャ固有のリソースを提供しないが、ニュートラルな "zh-tw-Hans" または "zh-tw" カルチャのリソースを提供する場合、アプリケーションは、ニュートラルカルチャのリソースを Windows に読み込みますが、Unix 上には読み込まないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-211">This means that, if you don't provide culture-specific resources for the "zh-CN" or "zh-TW" cultures but do provide a resources for the neutral "zh-Hans" or "zh-Hant" culture, your application will load the resources for the neutral culture on Windows but not on Unix.</span></span> <span data-ttu-id="e93bb-212">Unix システムでは、スレッドの <xref:System.Globalization.CultureInfo.CurrentUICulture> を "zh-tw-Hans" または "zh-tw-Zh-hant" に明示的に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-212">On Unix systems, you must explicitly set the thread's <xref:System.Globalization.CultureInfo.CurrentUICulture> to either "zh-Hans" or "zh-Hant".</span></span> 

- <span data-ttu-id="e93bb-213">Windows システムでは、"zh-tw" カルチャを表すインスタンスで <xref:System.Globalization.CultureInfo.Equals%2A?displayProperty=nameWithType> を呼び出し、それに "zh-tw-Hans" インスタンスを渡すと、`true`が返されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-213">On Windows systems, calling <xref:System.Globalization.CultureInfo.Equals%2A?displayProperty=nameWithType> on an instance that represents the "zh-CN" culture and passing it a "zh-Hans-CN" instance returns `true`.</span></span> <span data-ttu-id="e93bb-214">Unix システムでは、メソッドの呼び出しによって `false`が返されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-214">On Unix systems, the method call returns `false`.</span></span> <span data-ttu-id="e93bb-215">この動作は、"zh-tw" <xref:System.Globalization.CultureInfo> インスタンスで <xref:System.Globalization.CultureInfo.Equals%2A> を呼び出し、それに "zh-tw-Zh-hant" インスタンスを渡す場合にも当てはまります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-215">This behavior also applies to calling <xref:System.Globalization.CultureInfo.Equals%2A> on a "zh-TW" <xref:System.Globalization.CultureInfo> instance and passing it a "zh-Hant-Tw" instance.</span></span>

<a name="Dynamic"></a>   
## <a name="dynamic-culture-data"></a><span data-ttu-id="e93bb-216">動的なカルチャデータ</span><span class="sxs-lookup"><span data-stu-id="e93bb-216">Dynamic culture data</span></span>  
 <span data-ttu-id="e93bb-217">インバリアントカルチャを除き、カルチャデータは動的です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-217">Except for the invariant culture, culture data is dynamic.</span></span> <span data-ttu-id="e93bb-218">これは、定義済みのカルチャに対しても当てはまります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-218">This is true even for the predefined cultures.</span></span> <span data-ttu-id="e93bb-219">たとえば、国または地域で新しい通貨を採用したり、単語のスペルを変更したり、優先する暦を変更したり、カルチャの定義を変更してこれを追跡したりします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-219">For example, countries or regions adopt new currencies, change their spellings of words, or change their preferred calendar, and culture definitions change to track this.</span></span>  <span data-ttu-id="e93bb-220">カスタムカルチャは予告なしに変更される可能性があり、特定のカルチャはカスタムの置換カルチャによってオーバーライドされることがあります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-220">Custom cultures are subject to change without notice, and any specific culture might be overridden by a custom replacement culture.</span></span> <span data-ttu-id="e93bb-221">また、以下で説明するように、個々のユーザーはカルチャ設定をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-221">Also, as discussed below, an individual user can override cultural preferences.</span></span> <span data-ttu-id="e93bb-222">アプリケーションでは、常に実行時にカルチャデータを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-222">Applications should always obtain culture data at run time.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e93bb-223">データを保存する場合は、アプリケーションでインバリアントカルチャ、バイナリ形式、または特定のカルチャに依存しない形式を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-223">When saving data, your application should use the invariant culture, a binary format, or a specific culture-independent format.</span></span> <span data-ttu-id="e93bb-224">インバリアントカルチャ以外の特定のカルチャに関連付けられている現在の値に従って保存されたデータは読み取り不能になるか、またはそのカルチャが変更された場合に意味が変化する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-224">Data saved according to the current values associated with a particular culture, other than the invariant culture, might become unreadable or might change in meaning if that culture changes.</span></span>  
  
<a name="Current"></a>   
## <a name="the-current-culture-and-current-ui-culture"></a><span data-ttu-id="e93bb-225">現在のカルチャと現在の UI カルチャ</span><span class="sxs-lookup"><span data-stu-id="e93bb-225">The current culture and current UI culture</span></span>  
 <span data-ttu-id="e93bb-226">.NET アプリケーションのすべてのスレッドには、現在のカルチャと現在の UI カルチャがあります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-226">Every thread in a .NET application has a current culture and a current UI culture.</span></span> <span data-ttu-id="e93bb-227">現在のカルチャでは、日付、時刻、数値、通貨値の書式指定規則、テキストの並べ替え順序、大文字小文字の規則、および文字列を比較する方法が決定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-227">The current culture determines the formatting conventions for dates, times, numbers, and currency values, the sort order of text, casing conventions, and the ways in which strings are compared.</span></span> <span data-ttu-id="e93bb-228">現在の UI カルチャは、実行時にカルチャ固有のリソースを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-228">The current UI culture is used to retrieve culture-specific resources at runtime.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-229">現在の UI カルチャと現在の UI カルチャがスレッドごとにどのように決定されるかについては、「[カルチャとスレッド](#Threads)」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-229">For information on how the current and current UI culture is determined on a per-thread basis, see the  [Culture and threads](#Threads) section.</span></span> <span data-ttu-id="e93bb-230">新しいアプリケーションドメインで実行されるスレッドと、アプリケーションドメインの境界を越えるスレッドで現在および現在の UI カルチャがどのように決定されるかについては、「[カルチャとアプリケーションドメイン](#AppDomain)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-230">For information on how the current and current UI culture is determined on threads executing in a new application domain, and on threads that cross application domain boundaries, see the [Culture and application domains](#AppDomain) section.</span></span> <span data-ttu-id="e93bb-231">タスクベースの非同期操作を実行するスレッドで現在のと現在のがどのように決定されるかについては、「[カルチャとタスクベースの非同期操作](#Async)」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-231">For information on how the current  and current is determined on  threads performing task-based asynchronous operations, see the [Culture and task-based asynchronous operations](#Async) section.</span></span>  
  
 <span data-ttu-id="e93bb-232">現在のカルチャの詳細については、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-232">For more detailed information on the current culture, see the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property topic.</span></span> <span data-ttu-id="e93bb-233">現在の UI カルチャの詳細については、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティに関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-233">For more detailed information on the current UI culture, see the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property topic.</span></span>  
  
### <a name="retrieving-the-current-and-current-ui-cultures"></a><span data-ttu-id="e93bb-234">現在の UI カルチャと現在の UI カルチャを取得する</span><span class="sxs-lookup"><span data-stu-id="e93bb-234">Retrieving the current and current UI cultures</span></span>  
 <span data-ttu-id="e93bb-235">現在のカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトは、次の2つの方法のいずれかで取得できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-235">You can get a <xref:System.Globalization.CultureInfo> object that represents the current culture in either of two ways:</span></span>  
  
-   <span data-ttu-id="e93bb-236"><xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティの値を取得する。</span><span class="sxs-lookup"><span data-stu-id="e93bb-236">By retrieving the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="e93bb-237">[Thread](<xref:System.Threading.Thread.CurrentCulture>)プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-237">By retrieving the value of the [Thread.CurrentThread.CurrentCulture](<xref:System.Threading.Thread.CurrentCulture>) property.</span></span>  
  
 <span data-ttu-id="e93bb-238">次の例では、両方のプロパティ値を取得し、それらが等しいと表示されるように比較し、現在のカルチャの名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-238">The following example retrieves both property values, compares them to show that they are equal, and displays the name of the current culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Current1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Current1.vb#1)]  
  
 <span data-ttu-id="e93bb-239">現在の UI カルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトは、次の2つの方法のいずれかで取得できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-239">You can get a <xref:System.Globalization.CultureInfo> object that represents the current UI culture in either of two ways:</span></span>  
  
-   <span data-ttu-id="e93bb-240"><xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティの値を取得する。</span><span class="sxs-lookup"><span data-stu-id="e93bb-240">By retrieving the value of the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="e93bb-241">[CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>)プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-241">By retrieving the value of the [Thread.CurrentThread.CurrentUICulture](<xref:System.Threading.Thread.CurrentUICulture>) property.</span></span>  
  
 <span data-ttu-id="e93bb-242">次の例では、両方のプロパティ値を取得し、それらが等しいと表示されるように比較し、現在の UI カルチャの名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-242">The following example retrieves both property values, compares them to show that they are equal, and displays the name of the current UI culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/CurrentUI1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/CurrentUI1.vb#2)]  
  
### <a name="setting-the-current-and-current-ui-cultures"></a><span data-ttu-id="e93bb-243">現在の UI カルチャと現在の UI カルチャの設定</span><span class="sxs-lookup"><span data-stu-id="e93bb-243">Setting the current and current UI cultures</span></span>  
 <span data-ttu-id="e93bb-244">スレッドのカルチャと UI カルチャを変更するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-244">To change the culture and UI culture of a thread, do the following:</span></span>  
  
1.  <span data-ttu-id="e93bb-245"><xref:System.Globalization.CultureInfo> クラスコンストラクターを呼び出し、カルチャの名前を渡すことによって、そのカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-245">Instantiate a <xref:System.Globalization.CultureInfo> object that represents that culture by calling a <xref:System.Globalization.CultureInfo> class constructor and passing it the name of the culture.</span></span> <span data-ttu-id="e93bb-246"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> コンストラクターは、新しいカルチャが現在の Windows カルチャと同じである場合に、ユーザーオーバーライドを反映する <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-246">The <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor instantiates a  <xref:System.Globalization.CultureInfo> object that reflects user overrides if the new culture is the same as the current Windows culture.</span></span>   <span data-ttu-id="e93bb-247"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> コンストラクターを使用すると、新しいカルチャが現在の Windows カルチャと同じ場合に、新しくインスタンス化された <xref:System.Globalization.CultureInfo> オブジェクトにユーザーオーバーライドを反映するかどうかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-247">The <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor allows you to specify whether the newly instantiated <xref:System.Globalization.CultureInfo> object reflects user overrides if the new culture is the same as the current Windows culture.</span></span>  
  
2.  <span data-ttu-id="e93bb-248"><xref:System.Globalization.CultureInfo> オブジェクトを .NET Core の <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> または <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティに割り当てるか、4.6 以降のバージョンを .NET Framework します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-248">Assign the <xref:System.Globalization.CultureInfo> object to the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> or <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property on .NET Core and .NET Framework 4.6 and later versions.</span></span> <span data-ttu-id="e93bb-249">(.NET Framework 4.5.2 以前のバージョンでは、`CultureInfo` オブジェクトを <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> または <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティに割り当てます)。</span><span class="sxs-lookup"><span data-stu-id="e93bb-249">(On .NET Framework 4.5.2 and earlier versions, youc an assign the `CultureInfo` object to the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> or <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property.)</span></span>   
  
 <span data-ttu-id="e93bb-250">次の例では、現在のカルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-250">The following example retrieves the current culture.</span></span> <span data-ttu-id="e93bb-251">フランス語 (フランス) カルチャ以外の場合は、現在のカルチャをフランス語 (フランス) に変更します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-251">If it is anything other than the French (France) culture, it changes the current culture to French (France).</span></span> <span data-ttu-id="e93bb-252">それ以外の場合は、現在のカルチャをフランス語 (ルクセンブルク) に変更します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-252">Otherwise, it changes the current culture to French (Luxembourg).</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 <span data-ttu-id="e93bb-253">次の例では、現在のカルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-253">The following example retrieves the current culture.</span></span> <span data-ttu-id="e93bb-254">他のスロベニア語 (スロベニア) カルチャである場合は、現在のカルチャをスロベニア語 (スロベニア) に変更します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-254">If it is anything other the Slovenian (Slovenia) culture, it changes the current culture to Slovenian (Slovenia).</span></span> <span data-ttu-id="e93bb-255">それ以外の場合は、現在のカルチャをクロアチア語 (クロアチア) に変更します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-255">Otherwise, it changes the current culture to Croatian (Croatia).</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/ChangeUI1.cs#4)]
 [!code-vb[System.Globalization.CultureInfo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/ChangeUI1.vb#4)]  
  
<a name="GetAll"></a>   
## <a name="getting-all-cultures"></a><span data-ttu-id="e93bb-256">すべてのカルチャを取得する</span><span class="sxs-lookup"><span data-stu-id="e93bb-256">Getting all cultures</span></span>  
 <span data-ttu-id="e93bb-257"><xref:System.Globalization.CultureInfo.GetCultures%2A> メソッドを呼び出すことにより、カルチャの配列固有のカテゴリ、またはローカルコンピューターで使用可能なすべてのカルチャの配列を取得できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-257">You can retrieve an array specific categories of cultures or of all the cultures available on the local computer by calling the <xref:System.Globalization.CultureInfo.GetCultures%2A> method.</span></span> <span data-ttu-id="e93bb-258">たとえば、カスタムカルチャ、特定のカルチャ、またはニュートラルカルチャを単独で、または組み合わせて取得できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-258">For example, you can retrieve custom cultures, specific cultures, or neutral cultures either alone or in combination.</span></span>  
  
 <span data-ttu-id="e93bb-259">次の例では、<xref:System.Globalization.CultureInfo.GetCultures%2A> メソッドを2回呼び出します。最初に、<xref:System.Globalization.CultureTypes?displayProperty=nameWithType> 列挙体メンバーを使用してすべてのカスタムカルチャを取得し、次に <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> 列挙体メンバーを使用してすべての置換カルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-259">The following example calls the <xref:System.Globalization.CultureInfo.GetCultures%2A> method twice, first with the <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> enumeration member to retrieve all custom cultures, and then with the <xref:System.Globalization.CultureTypes?displayProperty=nameWithType> enumeration member to retrieve all replacement cultures.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/GetCultures1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/GetCultures1.vb#5)]  
  
<a name="Threads"></a>   
## <a name="culture-and-threads"></a><span data-ttu-id="e93bb-260">カルチャとスレッド</span><span class="sxs-lookup"><span data-stu-id="e93bb-260">Culture and threads</span></span>  
 <span data-ttu-id="e93bb-261">新しいアプリケーションスレッドが開始されると、現在のカルチャと現在の UI カルチャは、現在のシステムカルチャによって定義され、現在のスレッドカルチャによっては定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-261">When a new application thread is started, its current culture and current UI culture are defined by the current system culture, and not by the current thread culture.</span></span> <span data-ttu-id="e93bb-262">この違いを次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-262">The following example illustrates the difference.</span></span> <span data-ttu-id="e93bb-263">現在のカルチャと、アプリケーションスレッドの現在の UI カルチャをフランス語 (フランス) カルチャ (fr-fr) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-263">It sets the current culture and current UI culture of an application thread to the French (France) culture (fr-FR).</span></span> <span data-ttu-id="e93bb-264">現在のカルチャが既に fr-fr の場合、この例では英語 (米国) カルチャ (en-us) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-264">If the current culture is already fr-FR, the example sets it to the English (United States) culture (en-US).</span></span> <span data-ttu-id="e93bb-265">通貨値として3つの乱数が表示され、新しいスレッドが作成されます。これにより、3つの乱数が通貨値として表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-265">It displays three random numbers as currency values and then creates a new thread, which, in turn, displays three more random numbers as currency values.</span></span> <span data-ttu-id="e93bb-266">ただし、この例の出力に示されているように、新しいスレッドによって表示される通貨値には、メインアプリケーションスレッドからの出力とは異なり、フランス語 (フランス) カルチャの書式指定規則が反映されていません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-266">But as the output from the example shows, the currency values displayed by the new thread do not reflect the formatting conventions of the French (France) culture, unlike the output from the main application thread.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/defaultthread1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/defaultthread1.vb#1)]  
  
 <span data-ttu-id="e93bb-267">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]前の .NET Framework のバージョンでは、メインアプリケーションスレッドが他のすべてのワーカースレッドと同じカルチャを共有するための最も一般的な方法は、アプリケーション全体のカルチャの名前か、アプリケーション全体のカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを <xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType> デリゲートに渡すことです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-267">In versions of the .NET Framework before the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the most common way to ensure that the main application thread shares the same culture with all other worker threads is to pass either the name of the application-wide culture or a <xref:System.Globalization.CultureInfo> object that represents the application-wide culture to a <xref:System.Threading.ParameterizedThreadStart?displayProperty=nameWithType> delegate.</span></span> <span data-ttu-id="e93bb-268">次の例では、この方法を使用して、2つのスレッドによって表示される通貨値が、同じカルチャの書式指定規則を反映するようにしています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-268">The following example uses this approach to ensure that the currency values displayed by two threads reflect the formatting conventions of the same culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/perthread1.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/perthread1.vb#2)]  
  
 <span data-ttu-id="e93bb-269">スレッドプールのスレッドのカルチャと UI カルチャは、<xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> メソッドを呼び出すことによって同様の方法で設定できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-269">You can set the culture and UI culture of thread pool threads in a similar manner by calling the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e93bb-270">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]以降では、そのカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> および <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティに割り当てることにより、アプリケーションドメイン内のすべてのスレッドのカルチャと UI カルチャをより直接的に設定できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-270">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can set the culture and UI culture of all threads in an application domain more directly by assigning a <xref:System.Globalization.CultureInfo> object that represents that culture to the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties.</span></span> <span data-ttu-id="e93bb-271">次の例では、これらのプロパティを使用して、既定のアプリケーションドメイン内のすべてのスレッドが同じカルチャを共有するようにしています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-271">The following example uses these properties to ensure that all threads in the default application domain share the same culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/setthreads1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Thread#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/setthreads1.vb#3)]  
  
> [!WARNING]
>  <span data-ttu-id="e93bb-272"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティと <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティは静的メンバーですが、既定のカルチャと既定の UI カルチャは、これらのプロパティ値が設定された時点で最新のアプリケーションドメインに対してのみ定義されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-272">Although the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties are static members, they define the default culture and default UI culture only for the application domain that is current at the time these property values are set.</span></span> <span data-ttu-id="e93bb-273">詳細については、次の「[カルチャとアプリケーションドメイン](#AppDomain)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-273">For more information, see the next section, [Culture and application domains](#AppDomain).</span></span>  
  
 <span data-ttu-id="e93bb-274"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> と <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> のプロパティに値を割り当てると、アプリケーションドメイン内のスレッドのカルチャと UI カルチャも、カルチャが明示的に割り当てられていない場合は変更されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-274">When you assign values to the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties, the culture and UI culture of the threads in the application domain also change if they have not explicitly been assigned a culture.</span></span> <span data-ttu-id="e93bb-275">ただし、これらのスレッドは、現在のアプリケーションドメインでの実行中にのみ、新しいカルチャ設定を反映します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-275">However, these threads reflect the new culture settings only while they execute in the current application domain.</span></span> <span data-ttu-id="e93bb-276">これらのスレッドが別のアプリケーションドメインで実行される場合、そのカルチャは、そのアプリケーションドメインに対して定義されている既定のカルチャになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-276">If these threads execute in another application domain, their culture becomes the default culture defined for that application domain.</span></span> <span data-ttu-id="e93bb-277">そのため、常にメインアプリケーションスレッドのカルチャを設定することをお勧めします。これは、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> と <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティに依存せずに変更することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-277">As a result, we recommend that you always set the culture of the main application thread, and not rely on the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties to change it.</span></span>  
  
<a name="AppDomain"></a>   
## <a name="culture-and-application-domains"></a><span data-ttu-id="e93bb-278">カルチャとアプリケーションドメイン</span><span class="sxs-lookup"><span data-stu-id="e93bb-278">Culture and application domains</span></span>  
 <span data-ttu-id="e93bb-279"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> と <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> は、プロパティ値が設定または取得されたときに現在のアプリケーションドメインに対してのみ既定のカルチャを明示的に定義する静的プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-279"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> are static properties that explicitly define a default culture only for the application domain that is current when the property value is set or retrieved.</span></span> <span data-ttu-id="e93bb-280">次の例では、既定のカルチャと既定の UI カルチャを既定のアプリケーションドメインのフランス語 (フランス) に設定し、<xref:System.AppDomainSetup> クラスと <xref:System.AppDomainInitializer> デリゲートを使用して、新しいアプリケーションドメインの既定のカルチャと UI カルチャをロシア語 (ロシア) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-280">The following example sets the default culture and default UI culture in the default application domain to French (France), and then uses the <xref:System.AppDomainSetup> class and the <xref:System.AppDomainInitializer> delegate to set the default culture and UI culture in a new application domain to Russian (Russia).</span></span> <span data-ttu-id="e93bb-281">次に、1つのスレッドが各アプリケーションドメインで2つのメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-281">A single thread then executes two methods in each application domain.</span></span> <span data-ttu-id="e93bb-282">スレッドのカルチャと UI カルチャが明示的に設定されていないことに注意してください。これらは、スレッドが実行されているアプリケーションドメインの既定のカルチャおよび UI カルチャから派生します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-282">Note that the thread's culture and UI culture are not explicitly set; they are derived from the default culture and UI culture of the application domain in which the thread is executing.</span></span> <span data-ttu-id="e93bb-283">また、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティと <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティは、メソッド呼び出しが行われたときに現在のアプリケーションドメインの既定の <xref:System.Globalization.CultureInfo> 値を返すことにも注意してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-283">Note also that the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties return the default <xref:System.Globalization.CultureInfo> values of the application domain that is current when the method call is made.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/cs/appdomainex1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.AppDomain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/vb/appdomainex1.vb#1)]  
  
 <span data-ttu-id="e93bb-284">カルチャとアプリケーションドメインの詳細については、「[アプリケーション](~/docs/framework/app-domains/application-domains.md)ドメイン」トピックの「アプリケーションドメインとスレッド」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-284">For more information about cultures and application domains, see the "Application Domains and Threads" section in the [Application Domains](~/docs/framework/app-domains/application-domains.md) topic.</span></span>  
  
<a name="Async"></a>   
## <a name="culture-and-task-based-asynchronous-operations"></a><span data-ttu-id="e93bb-285">カルチャとタスクベースの非同期操作</span><span class="sxs-lookup"><span data-stu-id="e93bb-285">Culture and task-based asynchronous operations</span></span>  
 <span data-ttu-id="e93bb-286">[タスクベースの非同期プログラミングパターン](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md)では、<xref:System.Threading.Tasks.Task> オブジェクトと <xref:System.Threading.Tasks.Task%601> オブジェクトを使用して、スレッドプールのスレッドでデリゲートを非同期的に実行します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-286">The [task-based asynchronous programming pattern](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md) uses <xref:System.Threading.Tasks.Task> and <xref:System.Threading.Tasks.Task%601> objects to asynchronously execute delegates on thread pool threads.</span></span> <span data-ttu-id="e93bb-287">特定のタスクが実行される特定のスレッドは事前にわからないが、実行時にのみ決定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-287">The specific thread on which a particular task runs is not known in advance, but is determined only at runtime.</span></span>  
  
 <span data-ttu-id="e93bb-288">[!INCLUDE[net_v46](~/includes/net-v46-md.md)] 以降のバージョンを対象とするアプリの場合、カルチャは非同期操作のコンテキストの一部になります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-288">For apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or later versions, culture is part of an asynchronous operation's context.</span></span> <span data-ttu-id="e93bb-289">つまり、[!INCLUDE[net_v46](~/includes/net-v46-md.md)]を対象とするアプリから、既定では、非同期操作は、起動元のスレッドの <xref:System.Globalization.CultureInfo.CurrentCulture%2A> と <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティの値を継承します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-289">In other words, starting with apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], asynchronous operations by default inherit the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties of the thread from which they are launched.</span></span> <span data-ttu-id="e93bb-290">現在のカルチャまたは現在の UI カルチャがシステムカルチャと異なる場合、現在のカルチャはスレッド境界を越えて、非同期操作を実行しているスレッドプールスレッドの現在のカルチャになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-290">If the current culture or current UI culture differs from the system culture, the current culture crosses thread boundaries and becomes the current culture of the thread pool thread that is executing an asynchronous operation.</span></span>  
  
 <span data-ttu-id="e93bb-291">簡単な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-291">The following example provides a simple illustration.</span></span> <span data-ttu-id="e93bb-292"><xref:System.Runtime.Versioning.TargetFrameworkAttribute> 属性を使用して、[!INCLUDE[net_v46](~/includes/net-v46-md.md)]をターゲットにします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-292">It uses the <xref:System.Runtime.Versioning.TargetFrameworkAttribute> attribute to target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)].</span></span> <span data-ttu-id="e93bb-293">この例では、通貨値として書式設定された数値を返す <xref:System.Func%601> デリゲート `formatDelegate`を定義しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-293">The example defines a <xref:System.Func%601> delegate, `formatDelegate`, that returns some numbers formatted as currency values.</span></span> <span data-ttu-id="e93bb-294">この例では、現在のシステムカルチャをフランス語 (フランス) に変更するか、フランス語 (フランス) が既に現在のカルチャである場合は英語 (米国) に変更します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-294">The example changes the current system culture to either French (France) or, if French (France) is already the current culture, English (United States).</span></span> <span data-ttu-id="e93bb-295">次のようになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-295">It then:</span></span>  
  
-   <span data-ttu-id="e93bb-296">メインアプリスレッドで同期的に実行されるように、デリゲートを直接呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-296">Invokes the delegate directly so that it runs synchronously on the main app thread.</span></span>  
  
-   <span data-ttu-id="e93bb-297">スレッドプールのスレッドでデリゲートを非同期的に実行するタスクを作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-297">Creates a task that executes the delegate asynchronously on a thread pool thread.</span></span>  
  
-   <span data-ttu-id="e93bb-298"><xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType> メソッドを呼び出すことによって、メインアプリスレッド上でデリゲートを同期的に実行するタスクを作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-298">Creates a task that executes the delegate synchronously on the main app thread by calling the <xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="e93bb-299">この例の出力に示すように、現在のカルチャがフランス語 (フランス) に変更されると、タスクが非同期に呼び出されるスレッドの現在のカルチャが、非同期操作の現在のカルチャになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-299">As the output from the example shows, when the current culture is changed to French (France), the current culture of the thread from which tasks are invoked asynchronously becomes the current culture for that asynchronous operation.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture1.vb#1)]  
  
 <span data-ttu-id="e93bb-300">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]より前のバージョンの .NET Framework を対象とするアプリ、または特定のバージョンの .NET Framework を対象としないアプリの場合、呼び出し元スレッドのカルチャは、タスクのコンテキストの一部ではありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-300">For apps that target versions of the .NET Framework prior to the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], or for apps that do not target a particular version of the .NET Framework, the culture of the calling thread is not part of a task's context.</span></span> <span data-ttu-id="e93bb-301">代わりに、1つのが明示的に定義されている場合を除き、既定では、新しいスレッドのカルチャはシステムカルチャになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-301">Instead, unless one is explicitly defined, the culture of new threads by default is the system culture.</span></span> <span data-ttu-id="e93bb-302">次の例は、前の例と同じですが、<xref:System.Runtime.Versioning.TargetFrameworkAttribute> 属性がない点が異なります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-302">The following example, which is identical to the previous example except that it lacks the <xref:System.Runtime.Versioning.TargetFrameworkAttribute> attribute, illustrates this.</span></span> <span data-ttu-id="e93bb-303">実行例が英語 (米国) であるシステムのシステムカルチャは、スレッドプールのスレッドで非同期的に実行されるタスクのカルチャであり、fr-fr ではなく en-us です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-303">Because the system culture of the system on which the example executed was English (United States), the culture of the task that executes asynchronously on a thread pool thread is en-US rather than fr-FR.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture2.vb#2)]  
  
 <span data-ttu-id="e93bb-304">[!INCLUDE[net_v45](~/includes/net-v45-md.md)] 以降、[!INCLUDE[net_v46](~/includes/net-v46-md.md)]より前のバージョンの .NET Framework を対象とするアプリでは、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> および <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> のプロパティを使用して、スレッドプールのスレッドで実行される非同期タスクで、呼び出し元のスレッドのカルチャが使用されるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-304">For apps that target versions of the .NET Framework from the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] and later but prior to the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], you can use the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties to ensure that the culture of the calling thread is used in asynchronous tasks that execute on thread pool threads.</span></span> <span data-ttu-id="e93bb-305">次の例は前の例と同じですが、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティを使用して、スレッドプールのスレッドがメインアプリのスレッドと同じカルチャを持つことを確認します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-305">The following example is identical to the previous example, except that it uses the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property to ensure that thread pool threads have the same culture as the main app thread.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture3.cs#3)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture3.vb#3)]  
  
 <span data-ttu-id="e93bb-306"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> と <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> はアプリごとのドメインプロパティです。つまり、特定のアプリケーションドメインでカルチャが明示的に割り当てられていないすべてのスレッドの既定のカルチャを設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-306"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> are per-app domain properties; that is, they establish a default culture for all threads not explicitly assigned a culture in a specific application domain.</span></span> <span data-ttu-id="e93bb-307">ただし、[!INCLUDE[net_v46](~/includes/net-v46-md.md)] 以降を対象とするアプリでは、タスクがアプリケーションドメインの境界を越えている場合でも、呼び出し元のスレッドのカルチャは非同期タスクのコンテキストの一部として残ります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-307">However, for apps that target the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or later, the culture of the calling thread remains part of an asynchronous task's context even if the task crosses app domain boundaries.</span></span>  
  
 <span data-ttu-id="e93bb-308">次の例は、タスクが実行されているメソッドがアプリケーションドメインの境界を越えている場合でも、呼び出し元のスレッドのカルチャがタスクベースの非同期操作の現在のカルチャを維持していることを示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-308">The following example shows that the calling thread's culture remains the current culture of a task-based asynchronous operation even if the method that the task is executing crosses application domain boundaries.</span></span> <span data-ttu-id="e93bb-309">このクラスは、1から1000の間のランダムな倍精度浮動小数点数を通貨値として返す1つのメソッド `GetFormattedNumber`を持つ `DataRetriever`クラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-309">It defines a class, `DataRetriever`, with a single method, `GetFormattedNumber`, that returns a random double-precision floating-point number between 1 and 1,000 formatted as a currency value.</span></span> <span data-ttu-id="e93bb-310">最初のタスクは、単に `DataRetriever` インスタンスをインスタンス化し、その `GetFormattedNumber` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-310">A first task is run that simply instantiates a `DataRetriever` instance and calls its `GetFormattedNumber` method.</span></span> <span data-ttu-id="e93bb-311">2番目のタスクは、現在のアプリケーションドメインを報告し、新しいアプリケーションドメインを作成し、新しいアプリケーションドメインで `DataRetriever` インスタンスをインスタンス化し、その `GetFormattedNumber` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-311">A second task reports its current application domain, creates a new application domain, instantiates a `DataRetriever` instance in the new application domain, and calls its `GetFormattedNumber` method.</span></span> <span data-ttu-id="e93bb-312">この例の出力に示されているように、現在のカルチャは、呼び出し元のスレッド、最初のタスク、および2番目のタスクがメインアプリケーションドメインと2番目のアプリケーションドメインで実行されているときの両方で同じままです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-312">As the output from the example shows, the current culture has remained the same in the calling thread, the first task, and the second task both when it was executing in the main application domain and the second application domain.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture4.cs#4)]
 [!code-vb[System.Globalization.CultureInfo.Class.Async#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture4.vb#4)]  
  
<a name="Serialization"></a>  
## <a name="cultureinfo-object-serialization"></a><span data-ttu-id="e93bb-313">CultureInfo オブジェクトのシリアル化</span><span class="sxs-lookup"><span data-stu-id="e93bb-313">CultureInfo object serialization</span></span>  
 <span data-ttu-id="e93bb-314"><xref:System.Globalization.CultureInfo> オブジェクトがシリアル化されると、実際に格納されるものはすべて <xref:System.Globalization.CultureInfo.Name%2A> と <xref:System.Globalization.CultureInfo.UseUserOverride%2A>になります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-314">When a <xref:System.Globalization.CultureInfo> object is serialized, all that is actually stored is <xref:System.Globalization.CultureInfo.Name%2A> and <xref:System.Globalization.CultureInfo.UseUserOverride%2A>.</span></span> <span data-ttu-id="e93bb-315">この <xref:System.Globalization.CultureInfo.Name%2A> が同じ意味を持つ環境でのみ、正常にシリアル化解除されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-315">It is successfully de-serialized only in an environment where that <xref:System.Globalization.CultureInfo.Name%2A> has the same meaning.</span></span> <span data-ttu-id="e93bb-316">次の3つの例では、これが常にそうであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-316">The following three examples show why this is not always the case:</span></span>  
  
- <span data-ttu-id="e93bb-317"><xref:System.Globalization.CultureInfo.CultureTypes%2A> プロパティの値が <xref:System.Globalization.CultureTypes.InstalledWin32Cultures?displayProperty=nameWithType>であり、そのカルチャが特定のバージョンの Windows オペレーティングシステムで初めて導入された場合は、以前のバージョンの Windows で逆シリアル化することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-317">If the <xref:System.Globalization.CultureInfo.CultureTypes%2A> property value is <xref:System.Globalization.CultureTypes.InstalledWin32Cultures?displayProperty=nameWithType>, and if that culture was first introduced in a particular version of the Windows operating system, it is not possible to deserialize it on an earlier version of Windows.</span></span> <span data-ttu-id="e93bb-318">たとえば、カルチャが Windows 10 で導入された場合、Windows 8 で逆シリアル化することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-318">For example, if a culture was introduced in Windows 10, it cannot be deserialized on Windows 8.</span></span>  
  
-   <span data-ttu-id="e93bb-319"><xref:System.Globalization.CultureInfo.CultureTypes%2A> 値が <xref:System.Globalization.CultureTypes.UserCustomCulture?displayProperty=nameWithType>であり、シリアル化が解除されているコンピューターにこのユーザーカスタムカルチャがインストールされていない場合、逆シリアル化することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-319">If the <xref:System.Globalization.CultureInfo.CultureTypes%2A> value is <xref:System.Globalization.CultureTypes.UserCustomCulture?displayProperty=nameWithType>, and the computer on which it is de-serialized does not have this user custom culture installed, it is not possible to deserialize it.</span></span>  
  
-   <span data-ttu-id="e93bb-320"><xref:System.Globalization.CultureInfo.CultureTypes%2A> 値が <xref:System.Globalization.CultureTypes.ReplacementCultures?displayProperty=nameWithType>であり、シリアル化解除されるコンピューターにこの置換カルチャがない場合は、同じ名前にシリアル化解除されますが、同じ特性のすべてには逆シリアル化されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-320">If the <xref:System.Globalization.CultureInfo.CultureTypes%2A> value is <xref:System.Globalization.CultureTypes.ReplacementCultures?displayProperty=nameWithType>, and the computer on which it is de-serialized does not have this replacement culture, it de-serializes to the same name, but not all of the same characteristics.</span></span> <span data-ttu-id="e93bb-321">たとえば、en-us がコンピューター A の置換カルチャであり、コンピューター B 上にはありません。このカルチャを参照する <xref:System.Globalization.CultureInfo> オブジェクトがコンピューター A でシリアル化され、コンピューター B で逆シリアル化される場合、カルチャのカスタム特性は一切送信されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-321">For example, if en-US is a replacement culture on computer A, but not on computer B, and if a <xref:System.Globalization.CultureInfo> object referring to this culture is serialized on computer A and de-serialized on computer B, then none of the custom characteristics of the culture are transmitted.</span></span> <span data-ttu-id="e93bb-322">カルチャは正常に逆シリアル化されますが、意味は異なります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-322">The culture deserializes successfully, but with a different meaning.</span></span>  
  
<a name="CPanel"></a>   
## <a name="control-panel-overrides"></a><span data-ttu-id="e93bb-323">コントロールパネルの上書き</span><span class="sxs-lookup"><span data-stu-id="e93bb-323">Control Panel overrides</span></span>  
 <span data-ttu-id="e93bb-324">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-324">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-325">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-325">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span> <span data-ttu-id="e93bb-326">一般に、アプリケーションはこれらのユーザーのオーバーライドを優先する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-326">In general, your applications should honor these user overrides.</span></span>  
  
 <span data-ttu-id="e93bb-327"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`、指定されたカルチャが Windows の現在のカルチャに一致する場合、<xref:System.Globalization.CultureInfo> は、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定や、<xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティなど、これらのオーバーライドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-327">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-328">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-328">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
<a name="AlternateSort"></a>   
## <a name="alternate-sort-orders"></a><span data-ttu-id="e93bb-329">代替の並べ替え順序</span><span class="sxs-lookup"><span data-stu-id="e93bb-329">Alternate sort orders</span></span>  
 <span data-ttu-id="e93bb-330">一部のカルチャでは、複数の並べ替え順序がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-330">Some cultures support more than one sort order.</span></span> <span data-ttu-id="e93bb-331">例 :</span><span class="sxs-lookup"><span data-stu-id="e93bb-331">For example:</span></span>  
  
-   <span data-ttu-id="e93bb-332">スペイン語 (スペイン) カルチャには、既定の国際並べ替え順序と従来の並べ替え順序という2つの並べ替え順があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-332">The Spanish (Spain) culture has two sort orders: the default international sort order, and the traditional sort order.</span></span> <span data-ttu-id="e93bb-333">Es カルチャ名を使用して <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化すると、国際並べ替え順が使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-333">When you instantiate a <xref:System.Globalization.CultureInfo> object with the es-ES culture name, the international sort order is used.</span></span> <span data-ttu-id="e93bb-334">Tradnl カルチャ名を使用して <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化すると、従来の並べ替え順序が使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-334">When you instantiate a <xref:System.Globalization.CultureInfo> object with the es-ES-tradnl culture name, the traditional sort order is used.</span></span>  
  
-   <span data-ttu-id="e93bb-335">Zh-tw (中国語 (簡体字、PRC)) カルチャでは、発音 (既定) とストローク数の2つの並べ替え順がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-335">The zh-CN (Chinese (Simplified, PRC)) culture supports two sort orders:  by pronunciation (the default) and by stroke count.</span></span> <span data-ttu-id="e93bb-336">Zh-tw-CN カルチャ名を使用して <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化すると、既定の並べ替え順序が使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-336">When you instantiate a <xref:System.Globalization.CultureInfo> object with the zh-CN culture name, the default sort order is used.</span></span> <span data-ttu-id="e93bb-337">0x00020804 のローカル識別子を使用して <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化すると、文字列はストローク数で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-337">When you instantiate a <xref:System.Globalization.CultureInfo> object with a local identifier of 0x00020804, strings are sorted by stroke count.</span></span>  
  
 <span data-ttu-id="e93bb-338">代替の並べ替え順序をサポートするカルチャと、各カルチャの既定の並べ替え順序および代替の並べ替え順序の識別子を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-338">The following table lists the cultures that support alternate sort orders and the identifiers for the default and alternate sort orders.</span></span>  
  
|<span data-ttu-id="e93bb-339">カルチャ名</span><span class="sxs-lookup"><span data-stu-id="e93bb-339">Culture name</span></span>|<span data-ttu-id="e93bb-340">カルチャ</span><span class="sxs-lookup"><span data-stu-id="e93bb-340">Culture</span></span>|<span data-ttu-id="e93bb-341">既定の並べ替え名と識別子</span><span class="sxs-lookup"><span data-stu-id="e93bb-341">Default sort name and identifier</span></span>|<span data-ttu-id="e93bb-342">代替の並べ替え名と識別子</span><span class="sxs-lookup"><span data-stu-id="e93bb-342">Alternate sort name and identifier</span></span>|  
|------------------|-------------|--------------------------------------|----------------------------------------|  
|<span data-ttu-id="e93bb-343">es-ES</span><span class="sxs-lookup"><span data-stu-id="e93bb-343">es-ES</span></span>|<span data-ttu-id="e93bb-344">スペイン語 (スペイン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-344">Spanish (Spain)</span></span>|<span data-ttu-id="e93bb-345">International: 0x00000C0A</span><span class="sxs-lookup"><span data-stu-id="e93bb-345">International: 0x00000C0A</span></span>|<span data-ttu-id="e93bb-346">Traditional: 0x0000040A</span><span class="sxs-lookup"><span data-stu-id="e93bb-346">Traditional: 0x0000040A</span></span>|  
|<span data-ttu-id="e93bb-347">zh-TW</span><span class="sxs-lookup"><span data-stu-id="e93bb-347">zh-TW</span></span>|<span data-ttu-id="e93bb-348">中国語 (台湾)</span><span class="sxs-lookup"><span data-stu-id="e93bb-348">Chinese (Taiwan)</span></span>|<span data-ttu-id="e93bb-349">Stroke Count: 0x00000404</span><span class="sxs-lookup"><span data-stu-id="e93bb-349">Stroke Count: 0x00000404</span></span>|<span data-ttu-id="e93bb-350">Bopomofo: 0x00030404</span><span class="sxs-lookup"><span data-stu-id="e93bb-350">Bopomofo: 0x00030404</span></span>|  
|<span data-ttu-id="e93bb-351">zh-CN</span><span class="sxs-lookup"><span data-stu-id="e93bb-351">zh-CN</span></span>|<span data-ttu-id="e93bb-352">中国語 (中国)</span><span class="sxs-lookup"><span data-stu-id="e93bb-352">Chinese (PRC)</span></span>|<span data-ttu-id="e93bb-353">Pronunciation: 0x00000804</span><span class="sxs-lookup"><span data-stu-id="e93bb-353">Pronunciation: 0x00000804</span></span>|<span data-ttu-id="e93bb-354">Stroke Count: 0x00020804</span><span class="sxs-lookup"><span data-stu-id="e93bb-354">Stroke Count: 0x00020804</span></span>|  
|<span data-ttu-id="e93bb-355">zh-HK</span><span class="sxs-lookup"><span data-stu-id="e93bb-355">zh-HK</span></span>|<span data-ttu-id="e93bb-356">中国語 (香港特別行政区)</span><span class="sxs-lookup"><span data-stu-id="e93bb-356">Chinese (Hong Kong SAR)</span></span>|<span data-ttu-id="e93bb-357">Stroke Count: 0x00000c04</span><span class="sxs-lookup"><span data-stu-id="e93bb-357">Stroke Count: 0x00000c04</span></span>|<span data-ttu-id="e93bb-358">Stroke Count: 0x00020c04</span><span class="sxs-lookup"><span data-stu-id="e93bb-358">Stroke Count: 0x00020c04</span></span>|  
|<span data-ttu-id="e93bb-359">zh-SG</span><span class="sxs-lookup"><span data-stu-id="e93bb-359">zh-SG</span></span>|<span data-ttu-id="e93bb-360">中国語 (シンガポール)</span><span class="sxs-lookup"><span data-stu-id="e93bb-360">Chinese (Singapore)</span></span>|<span data-ttu-id="e93bb-361">Pronunciation: 0x00001004</span><span class="sxs-lookup"><span data-stu-id="e93bb-361">Pronunciation: 0x00001004</span></span>|<span data-ttu-id="e93bb-362">Stroke Count: 0x00021004</span><span class="sxs-lookup"><span data-stu-id="e93bb-362">Stroke Count: 0x00021004</span></span>|  
|<span data-ttu-id="e93bb-363">zh-MO</span><span class="sxs-lookup"><span data-stu-id="e93bb-363">zh-MO</span></span>|<span data-ttu-id="e93bb-364">中国語 (マカオ)</span><span class="sxs-lookup"><span data-stu-id="e93bb-364">Chinese (Macao SAR)</span></span>|<span data-ttu-id="e93bb-365">Pronunciation: 0x00001404</span><span class="sxs-lookup"><span data-stu-id="e93bb-365">Pronunciation: 0x00001404</span></span>|<span data-ttu-id="e93bb-366">Stroke Count: 0x00021404</span><span class="sxs-lookup"><span data-stu-id="e93bb-366">Stroke Count: 0x00021404</span></span>|  
|<span data-ttu-id="e93bb-367">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-367">ja-JP</span></span>|<span data-ttu-id="e93bb-368">日本語 (日本)</span><span class="sxs-lookup"><span data-stu-id="e93bb-368">Japanese (Japan)</span></span>|<span data-ttu-id="e93bb-369">Default: 0x00000411</span><span class="sxs-lookup"><span data-stu-id="e93bb-369">Default: 0x00000411</span></span>|<span data-ttu-id="e93bb-370">Unicode: 0x00010411</span><span class="sxs-lookup"><span data-stu-id="e93bb-370">Unicode: 0x00010411</span></span>|  
|<span data-ttu-id="e93bb-371">ko-KR</span><span class="sxs-lookup"><span data-stu-id="e93bb-371">ko-KR</span></span>|<span data-ttu-id="e93bb-372">韓国語 (韓国)</span><span class="sxs-lookup"><span data-stu-id="e93bb-372">Korean (Korea)</span></span>|<span data-ttu-id="e93bb-373">Default: 0x00000412</span><span class="sxs-lookup"><span data-stu-id="e93bb-373">Default: 0x00000412</span></span>|<span data-ttu-id="e93bb-374">Korean Xwansung - Unicode: 0x00010412</span><span class="sxs-lookup"><span data-stu-id="e93bb-374">Korean Xwansung - Unicode: 0x00010412</span></span>|  
|<span data-ttu-id="e93bb-375">de-DE</span><span class="sxs-lookup"><span data-stu-id="e93bb-375">de-DE</span></span>|<span data-ttu-id="e93bb-376">ドイツ語 (ドイツ)</span><span class="sxs-lookup"><span data-stu-id="e93bb-376">German (Germany)</span></span>|<span data-ttu-id="e93bb-377">Dictionary: 0x00000407</span><span class="sxs-lookup"><span data-stu-id="e93bb-377">Dictionary: 0x00000407</span></span>|<span data-ttu-id="e93bb-378">Phone Book Sort DIN: 0x00010407</span><span class="sxs-lookup"><span data-stu-id="e93bb-378">Phone Book Sort DIN: 0x00010407</span></span>|  
|<span data-ttu-id="e93bb-379">hu-HU</span><span class="sxs-lookup"><span data-stu-id="e93bb-379">hu-HU</span></span>|<span data-ttu-id="e93bb-380">ハンガリー語 (ハンガリー)</span><span class="sxs-lookup"><span data-stu-id="e93bb-380">Hungarian (Hungary)</span></span>|<span data-ttu-id="e93bb-381">Default: 0x0000040e</span><span class="sxs-lookup"><span data-stu-id="e93bb-381">Default: 0x0000040e</span></span>|<span data-ttu-id="e93bb-382">Technical Sort: 0x0001040e</span><span class="sxs-lookup"><span data-stu-id="e93bb-382">Technical Sort: 0x0001040e</span></span>|  
|<span data-ttu-id="e93bb-383">ka-GE</span><span class="sxs-lookup"><span data-stu-id="e93bb-383">ka-GE</span></span>|<span data-ttu-id="e93bb-384">グルジア語 (グルジア共和国)</span><span class="sxs-lookup"><span data-stu-id="e93bb-384">Georgian (Georgia)</span></span>|<span data-ttu-id="e93bb-385">Traditional: 0x00000437</span><span class="sxs-lookup"><span data-stu-id="e93bb-385">Traditional: 0x00000437</span></span>|<span data-ttu-id="e93bb-386">Modern Sort: 0x00010437</span><span class="sxs-lookup"><span data-stu-id="e93bb-386">Modern Sort: 0x00010437</span></span>|  
  
<a name="Windows"></a>   
## <a name="the-current-culture-and-uwp-apps"></a><span data-ttu-id="e93bb-387">現在のカルチャと UWP アプリ</span><span class="sxs-lookup"><span data-stu-id="e93bb-387">The current culture and UWP apps</span></span>  
 <span data-ttu-id="e93bb-388">ユニバーサル Windows プラットフォーム (UWP) アプリでは、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> と <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> のプロパティは、.NET Framework や .NET Core アプリの場合と同様に、読み取り/書き込みが可能です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-388">In Universal Windows Platform (UWP) apps, the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties are read-write, just as they are in .NET Framework and .NET Core apps.</span></span> <span data-ttu-id="e93bb-389">ただし、UWP アプリでは1つのカルチャが認識されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-389">However, UWP apps recognize a single culture.</span></span> <span data-ttu-id="e93bb-390"><xref:System.Globalization.CultureInfo.CurrentCulture%2A> と <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> の各プロパティは、 [Windows の ApplicationModel. .resources](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) ..........</span><span class="sxs-lookup"><span data-stu-id="e93bb-390">The <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties map to the first value in the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) collection.</span></span>  

<span data-ttu-id="e93bb-391">.NET Framework と .NET Core アプリでは、現在のカルチャはスレッドごとの設定であり、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティと <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティには、現在のスレッドのカルチャと UI カルチャのみが反映されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-391">In .NET Framework and .NET Core apps, the current culture is a per-thread setting, and the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties reflect the culture and UI culture of the current thread only.</span></span> <span data-ttu-id="e93bb-392">UWP アプリでは、現在のカルチャは、グローバル設定である、 [Windows の ApplicationModel. .resources](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) ............ .resources コレクションにマップされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-392">In UWP apps, the current culture maps to the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) collection, which is a global setting.</span></span> <span data-ttu-id="e93bb-393"><xref:System.Globalization.CultureInfo.CurrentCulture%2A> または <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティを設定すると、アプリ全体のカルチャが変更されます。カルチャは、スレッド単位で設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-393">Setting the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> or <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property changes the culture of the entire app; culture cannot be set on a per-thread basis.</span></span>
  
## Examples  
 <span data-ttu-id="e93bb-394">次の例では、国際並べ替えを使用してスペイン語 (スペイン) 用の <xref:System.Globalization.CultureInfo> オブジェクトを作成し、従来の並べ替えを使用して別の <xref:System.Globalization.CultureInfo> オブジェクトを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-394">The following example shows how to create a <xref:System.Globalization.CultureInfo> object for Spanish (Spain) with the international sort and another <xref:System.Globalization.CultureInfo> object with the traditional sort.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
    <altmember cref="T:System.Globalization.RegionInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e93bb-395"><see cref="T:System.Globalization.CultureInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-395">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="e93bb-396">定義済みの <see cref="T:System.Globalization.CultureInfo" /> 識別子、既存の <see cref="P:System.Globalization.CultureInfo.LCID" /> オブジェクトの <see cref="T:System.Globalization.CultureInfo" /> プロパティ、または Windows 専用カルチャ識別子。</span><span class="sxs-lookup"><span data-stu-id="e93bb-396">A predefined <see cref="T:System.Globalization.CultureInfo" /> identifier, <see cref="P:System.Globalization.CultureInfo.LCID" /> property of an existing <see cref="T:System.Globalization.CultureInfo" /> object, or Windows-only culture identifier.</span></span></param>
        <summary><span data-ttu-id="e93bb-397">カルチャ識別子によって指定するカルチャに基づいて、<see cref="T:System.Globalization.CultureInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-397">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class based on the culture specified by the culture identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="e93bb-398">Windows システムで使用できるカルチャの定義済みカルチャ識別子は、 [windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列に一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-398">Predefined culture identifiers for cultures available on Windows system are listed in the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-399">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-399">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span>

 <span data-ttu-id="e93bb-400">ほとんどの場合、`culture` パラメーターは、対応する各国語サポート (NLS) のロケール識別子にマップされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-400">In most cases, the `culture` parameter is mapped to the corresponding National Language Support (NLS) locale identifier.</span></span> <span data-ttu-id="e93bb-401">`culture` パラメーターの値が、新しい <xref:System.Globalization.CultureInfo>の <xref:System.Globalization.CultureInfo.LCID%2A> プロパティの値になります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-401">The value of the `culture` parameter becomes the value of the <xref:System.Globalization.CultureInfo.LCID%2A> property of the new <xref:System.Globalization.CultureInfo>.</span></span>  
  
 <span data-ttu-id="e93bb-402">ロケール名は Lcid に適しているため、ロケール名のコンストラクター <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>を呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-402">We recommend that you call the locale name constructor <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, because locale names are preferable to LCIDs.</span></span> <span data-ttu-id="e93bb-403">カスタムロケールの場合は、ロケール名が必要です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-403">For custom locales, a locale name is required.</span></span>  
  
 <span data-ttu-id="e93bb-404">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-404">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-405">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-405">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span> <span data-ttu-id="e93bb-406">指定したカルチャ識別子が現在の Windows カルチャのカルチャ識別子と一致する場合、このコンストラクターは、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定、<xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティによって返される <xref:System.Globalization.NumberFormatInfo> インスタンスのプロパティなど、これらのオーバーライドを使用する <xref:System.Globalization.CultureInfo> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-406">If the specified culture identifier matches the culture identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> that uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-407">ユーザー設定が <xref:System.Globalization.CultureInfo> に関連付けられているカルチャと互換性がない場合 (たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>ではない場合)、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-407">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo> (for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>) the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="e93bb-408">指定したカルチャ識別子が現在の Windows カルチャの識別子と一致しない場合、このコンストラクターは、指定されたカルチャの既定値を使用する <xref:System.Globalization.CultureInfo> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-408">If the specified culture identifier does not match the identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> that uses the default values for the specified culture.</span></span>  
  
 <span data-ttu-id="e93bb-409"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> プロパティは、常に `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-409">The <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property is always set to `true`.</span></span>  
  
 <span data-ttu-id="e93bb-410">たとえば、アラビア語 (サウジアラビア) が現在の Windows カルチャであり、ユーザーが calendar をイスラム暦からグレゴリオ暦に変更したとします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-410">For example, suppose that Arabic (Saudi Arabia) is the current Windows culture and the user has changed the calendar from Hijri to Gregorian.</span></span>  
  
-   <span data-ttu-id="e93bb-411">`CultureInfo("0x0401")` (カルチャ名 ar-SA) では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.GregorianCalendar> (ユーザー設定) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-411">With `CultureInfo("0x0401")` (culture name ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.GregorianCalendar> (which is the user setting) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="e93bb-412">`CultureInfo("0x041E")` (カルチャ名は th) の場合、<xref:System.Globalization.CultureInfo.Calendar%2A> は <xref:System.Globalization.ThaiBuddhistCalendar> (th の既定の暦) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> は `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-412">With `CultureInfo("0x041E")` (culture name th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="e93bb-413">ユーロを使用するカルチャの場合、.NET Framework と Windows XP では、既定の通貨がユーロとして設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-413">For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</span></span> <span data-ttu-id="e93bb-414">ただし、以前のバージョンの Windows では、</span><span class="sxs-lookup"><span data-stu-id="e93bb-414">However, older versions of Windows do not.</span></span> <span data-ttu-id="e93bb-415">このため、以前のバージョンの Windows のユーザーがコントロールパネルの [地域と言語のオプション] で通貨の設定を変更していない場合、通貨が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-415">Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</span></span> <span data-ttu-id="e93bb-416">通貨に .NET Framework 既定の設定を使用するには、アプリケーションで `useUserOverride` パラメーターを受け取り、それを `false`に設定する <xref:System.Globalization.CultureInfo> コンストラクターのオーバーロードを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-416">To use the .NET Framework default setting for the currency, the application should use a <xref:System.Globalization.CultureInfo> constructor overload that accepts a `useUserOverride` parameter and set it to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-417">旧バージョンとの互換性のために、0x0004 または0x7c04 の `culture` パラメーターを使用して構築されたカルチャは、それぞれ zh-tw または zh-tw-CHT の <xref:System.Globalization.CultureInfo.Name%2A> プロパティを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-417">For backwards compatibility, a culture constructed using a `culture` parameter of 0x0004 or 0x7c04 will have a <xref:System.Globalization.CultureInfo.Name%2A> property of zh-CHS or zh-CHT, respectively.</span></span> <span data-ttu-id="e93bb-418">代わりに、古い名前を使用する理由がない限り、zh-tw-Hans または zh-tw の現在の標準カルチャ名を使用してカルチャを構築することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-418">You should instead prefer to construct the culture using the current standard culture names of zh-Hans or zh-Hant, unless you have a reason for using the older names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e93bb-419"><paramref name="culture" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-419"><paramref name="culture" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-420"><paramref name="culture" /> が正しいカルチャ識別子ではありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-420"><paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="e93bb-421">詳細については、「呼び出し時の注意」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-421">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-422">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="culture" /> が有効なカルチャ識別子でない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-422">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="e93bb-423">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このコンストラクターは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-423">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this constructor throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="e93bb-424">Windows 7 以降で [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降で実行されるアプリ以降では、このメソッドは、id がオペレーティングシステムから <paramref name="culture" /> ている <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得しようとします。オペレーティングシステムがそのカルチャをサポートしていない場合、メソッドは <see cref="T:System.Globalization.CultureNotFoundException" /> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-424">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="culture" /> from the operating system; if the operating system does not support that culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e93bb-425">定義済みの <see cref="T:System.Globalization.CultureInfo" /> 名、既存の <see cref="P:System.Globalization.CultureInfo.Name" /> の <see cref="T:System.Globalization.CultureInfo" />、または Windows 専用カルチャ名。</span><span class="sxs-lookup"><span data-stu-id="e93bb-425">A predefined <see cref="T:System.Globalization.CultureInfo" /> name, <see cref="P:System.Globalization.CultureInfo.Name" /> of an existing <see cref="T:System.Globalization.CultureInfo" />, or Windows-only culture name.</span></span> <span data-ttu-id="e93bb-426"><paramref name="name" /> では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-426"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="e93bb-427">名前で指定するカルチャに基づいて、<see cref="T:System.Globalization.CultureInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-427">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class based on the culture specified by name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="e93bb-428">Windows システム上の定義済みカルチャ名の一覧については、 [windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-428">For a list of predefined culture names on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-429">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-429">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="e93bb-430">さらに、Windows 10 以降では、`name` 有効な BCP-47 言語タグを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-430">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
 <span data-ttu-id="e93bb-431">`name` が <xref:System.String.Empty?displayProperty=nameWithType>の場合、コンストラクターはインバリアントカルチャのインスタンスを作成します。これは、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティの値を取得することと同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-431">If `name` is <xref:System.String.Empty?displayProperty=nameWithType>, the constructor creates an instance of the invariant culture; this is equivalent to retrieving the value of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="e93bb-432">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-432">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-433">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-433">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span> <span data-ttu-id="e93bb-434">`name` に関連付けられているカルチャ識別子が現在の Windows カルチャのカルチャ識別子と一致する場合、このコンストラクターは、これらのオーバーライドを使用する <xref:System.Globalization.CultureInfo> オブジェクトを作成します。これには、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定、および <xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-434">If the culture identifier associated with `name` matches the culture identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> object that uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-435">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-435">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="e93bb-436">`name` に関連付けられているカルチャ識別子が現在の Windows カルチャのカルチャ識別子と一致しない場合、このコンストラクターは、指定されたカルチャの既定値を使用する <xref:System.Globalization.CultureInfo> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-436">If the culture identifier associated with `name` does not match the culture identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> object that uses the default values for the specified culture.</span></span>  
  
 <span data-ttu-id="e93bb-437"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> プロパティは、常に `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-437">The <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property is always set to `true`.</span></span>  
  
 <span data-ttu-id="e93bb-438">たとえば、アラビア語 (サウジアラビア) が Windows の現在のカルチャであり、ユーザーがカレンダーをイスラム暦からグレゴリオ暦に変更したとします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-438">For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user changed the calendar from Hijri to Gregorian.</span></span>  
  
-   <span data-ttu-id="e93bb-439">`CultureInfo("ar-SA")`では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.GregorianCalendar> (ユーザー設定) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-439">With `CultureInfo("ar-SA")`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.GregorianCalendar> (which is the user setting) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="e93bb-440">`CultureInfo("th-TH")`では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.ThaiBuddhistCalendar> (th の既定の暦) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-440">With `CultureInfo("th-TH")`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="e93bb-441">新しい <xref:System.Globalization.CultureInfo> の <xref:System.Globalization.CultureInfo.LCID%2A> プロパティは、指定された名前に関連付けられているカルチャ識別子に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-441">The <xref:System.Globalization.CultureInfo.LCID%2A> property of the new <xref:System.Globalization.CultureInfo> is set to the culture identifier associated with the specified name.</span></span>  
  
 <span data-ttu-id="e93bb-442">ユーロを使用するカルチャの場合、.NET Framework と Windows XP では、既定の通貨がユーロとして設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-442">For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</span></span> <span data-ttu-id="e93bb-443">ただし、以前のバージョンの Windows では、これは実行されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-443">However, older versions of Windows do not do this.</span></span> <span data-ttu-id="e93bb-444">このため、以前のバージョンの Windows のユーザーがコントロールパネルの [地域と言語のオプション] で通貨の設定を変更していない場合、通貨が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-444">Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</span></span> <span data-ttu-id="e93bb-445">通貨に .NET Framework 既定の設定を使用するには、アプリケーションで `useUserOverride` パラメーターを受け取り、それを `false`に設定する <xref:System.Globalization.CultureInfo> コンストラクターのオーバーロードを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-445">To use the .NET Framework default setting for the currency, the application should use a <xref:System.Globalization.CultureInfo> constructor overload that accepts a `useUserOverride` parameter and set it to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-446">次の例では、現在のカルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-446">The following example retrieves the current culture.</span></span> <span data-ttu-id="e93bb-447">フランス語 (フランス) カルチャ以外のものである場合は、<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> コンストラクターを呼び出して、フランス語 (フランス) カルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化し、現在のスレッドカルチャにします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-447">If it is anything other than the French (France) culture, it calls the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor to instantiate a <xref:System.Globalization.CultureInfo> object that represents the French (France) culture and makes it the current thread culture.</span></span> <span data-ttu-id="e93bb-448">それ以外の場合は、フランス語 (ルクセンブルク) カルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化し、それを現在のカルチャにします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-448">Otherwise, it instantiates a <xref:System.Globalization.CultureInfo> object that represents the French (Luxembourg) culture and makes it the current culture.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)]
 [!code-vb[System.Globalization.CultureInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-449"><paramref name="name" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-449"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-450"><paramref name="name" /> が有効なカルチャ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-450"><paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="e93bb-451">詳細については、「呼び出し時の注意」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-451">For more information, see the Notes to Callers section.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-452">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="name" /> が有効なカルチャ名ではない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-452">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="e93bb-453">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このコンストラクターは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-453">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this constructor throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="e93bb-454">Windows 7 以降で [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降で実行されるアプリ以降では、このメソッドは、id がオペレーティングシステムから <paramref name="name" /> ている <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得しようとします。オペレーティングシステムがそのカルチャをサポートしていない場合、<paramref name="name" /> が補助カルチャまたは置換カルチャの名前でない場合、メソッドは <see cref="T:System.Globalization.CultureNotFoundException" /> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-454">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (int culture, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As Integer, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(int culture, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : int * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (culture, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="e93bb-455">定義済みの <see cref="T:System.Globalization.CultureInfo" /> 識別子、既存の <see cref="P:System.Globalization.CultureInfo.LCID" /> オブジェクトの <see cref="T:System.Globalization.CultureInfo" /> プロパティ、または Windows 専用カルチャ識別子。</span><span class="sxs-lookup"><span data-stu-id="e93bb-455">A predefined <see cref="T:System.Globalization.CultureInfo" /> identifier, <see cref="P:System.Globalization.CultureInfo.LCID" /> property of an existing <see cref="T:System.Globalization.CultureInfo" /> object, or Windows-only culture identifier.</span></span></param>
        <param name="useUserOverride"><span data-ttu-id="e93bb-456">ユーザーが選択したカルチャ設定 (<see langword="true" />) または既定のカルチャ設定 (<see langword="false" />) のいずれを使用するかを示すブール値。</span><span class="sxs-lookup"><span data-stu-id="e93bb-456">A Boolean that denotes whether to use the user-selected culture settings (<see langword="true" />) or the default culture settings (<see langword="false" />).</span></span></param>
        <summary><span data-ttu-id="e93bb-457">カルチャ識別子で指定したカルチャと、システムからユーザーが選択したカルチャを使用するかどうかを指定するブール値に基づいて、<see cref="T:System.Globalization.CultureInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-457">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class based on the culture specified by the culture identifier and on the Boolean that specifies whether to use the user-selected culture settings from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="e93bb-458">Windows システムで使用できる定義済みカルチャ識別子は、 [windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列に一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-458">Predefined culture identifiers available on Windows systems are listed in the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-459">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-459">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span>

 <span data-ttu-id="e93bb-460">ほとんどの場合、`culture` パラメーターは、対応する各国語サポート (NLS) のロケール識別子にマップされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-460">In most cases, the `culture` parameter is mapped to the corresponding National Language Support (NLS) locale identifier.</span></span> <span data-ttu-id="e93bb-461">`culture` パラメーターの値が、新しい <xref:System.Globalization.CultureInfo>の <xref:System.Globalization.CultureInfo.LCID%2A> プロパティの値になります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-461">The value of the `culture` parameter becomes the value of the <xref:System.Globalization.CultureInfo.LCID%2A> property of the new <xref:System.Globalization.CultureInfo>.</span></span>  
  
 <span data-ttu-id="e93bb-462">ロケール名は Lcid に適しているため、ロケール名のコンストラクター <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>を呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-462">We recommend that you call the locale name constructor <xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=nameWithType>, because locale names are preferable to LCIDs.</span></span> <span data-ttu-id="e93bb-463">カスタムロケールの場合は、ロケール名が必要です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-463">For custom locales, a locale name is required.</span></span>  
  
 <span data-ttu-id="e93bb-464">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-464">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-465">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-465">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="e93bb-466">通常、アプリケーションはユーザーの上書きを許可しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-466">Applications should typically not disallow user overrides.</span></span> <span data-ttu-id="e93bb-467">上書きを禁止することで、データの安定性が保証されないことに注意してください。ブログの入力[カルチャデータは、安定しているとは見なされません (インバリアントを除く)](https://go.microsoft.com/fwlink/?LinkId=156850)。</span><span class="sxs-lookup"><span data-stu-id="e93bb-467">Note that disallowing overrides does not itself guarantee data stability; see the blog entry [Culture data shouldn't be considered stable (except for Invariant)](https://go.microsoft.com/fwlink/?LinkId=156850).</span></span>  
  
 <span data-ttu-id="e93bb-468"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> プロパティが `true` に設定されていて、指定されたカルチャ識別子が現在の Windows カルチャの識別子と一致する場合、このコンストラクターは、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定や、<xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティなど、これらのオーバーライドを使用する <xref:System.Globalization.CultureInfo> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-468">If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property is set to `true` and the specified culture identifier matches the identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> that uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-469">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-469">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="e93bb-470">それ以外の場合、このコンストラクターは、指定されたカルチャの既定値を使用する <xref:System.Globalization.CultureInfo> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-470">Otherwise, this constructor creates a <xref:System.Globalization.CultureInfo> that uses the default values for the specified culture.</span></span>  
  
 <span data-ttu-id="e93bb-471">`useUserOverride` パラメーターの値が <xref:System.Globalization.CultureInfo.UseUserOverride%2A> プロパティの値になります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-471">The value of the `useUserOverride` parameter becomes the value of the <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property.</span></span>  
  
 <span data-ttu-id="e93bb-472">たとえば、アラビア語 (サウジアラビア) が Windows の現在のカルチャであり、ユーザーが calendar をイスラム暦からグレゴリオ暦に変更したとします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-472">For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user has changed the calendar from Hijri to Gregorian.</span></span>  
  
-   <span data-ttu-id="e93bb-473">`CultureInfo("0x0401", true)` (カルチャ名 ar-SA) では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.GregorianCalendar> (ユーザー設定) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-473">With `CultureInfo("0x0401", true)` (culture name ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.GregorianCalendar> (which is the user setting) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="e93bb-474">`CultureInfo("0x0401", false)` (カルチャ名 ar) では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.HijriCalendar> (ar の既定の暦) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-474">With `CultureInfo("0x0401", false)` (culture name ar-SA), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.HijriCalendar> (which is the default calendar for ar-SA) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="e93bb-475">`CultureInfo("0x041E", true)` (カルチャ名は th) の場合、<xref:System.Globalization.CultureInfo.Calendar%2A> は <xref:System.Globalization.ThaiBuddhistCalendar> (th の既定の暦) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> は `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-475">With `CultureInfo("0x041E", true)` (culture name th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="e93bb-476">`CultureInfo("0x041E", false)` (カルチャ名は th) の場合、<xref:System.Globalization.CultureInfo.Calendar%2A> は <xref:System.Globalization.ThaiBuddhistCalendar> (th の既定の暦) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> は `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-476">With `CultureInfo("0x041E", false)` (culture name th-TH), <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="e93bb-477">ユーロを使用するカルチャの場合、.NET Framework と Windows XP では、既定の通貨がユーロとして設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-477">For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</span></span> <span data-ttu-id="e93bb-478">ただし、以前のバージョンの Windows では、</span><span class="sxs-lookup"><span data-stu-id="e93bb-478">However, older versions of Windows do not.</span></span> <span data-ttu-id="e93bb-479">このため、以前のバージョンの Windows のユーザーがコントロールパネルの [地域と言語のオプション] で通貨の設定を変更していない場合、通貨が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-479">Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</span></span> <span data-ttu-id="e93bb-480">通貨に .NET Framework 既定の設定を使用するには、アプリケーションで `useUserOverride` パラメーターを `false`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-480">To use the .NET Framework default setting for the currency, the application should set the `useUserOverride` parameter to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-481">旧バージョンとの互換性のために、0x0004 または0x7c04 の `culture` パラメーターを使用して構築されたカルチャは、それぞれ zh-tw または zh-tw-CHT の <xref:System.Globalization.CultureInfo.Name%2A> プロパティを持ちます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-481">For backwards compatibility, a culture constructed using a `culture` parameter of 0x0004 or 0x7c04 will have a <xref:System.Globalization.CultureInfo.Name%2A> property of zh-CHS or zh-CHT, respectively.</span></span> <span data-ttu-id="e93bb-482">代わりに、古い名前を使用する理由がない限り、zh-tw-Hans または zh-tw の現在の標準カルチャ名を使用してカルチャを構築することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-482">You should instead prefer to construct the culture using the current standard culture names of zh-Hans or zh-Hant, unless you have a reason for using the older names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e93bb-483"><paramref name="culture" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-483"><paramref name="culture" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-484"><paramref name="culture" /> が正しいカルチャ識別子ではありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-484"><paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="e93bb-485">詳細については、「呼び出し時の注意」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-485">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-486">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="culture" /> が有効なカルチャ識別子でない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-486">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="e93bb-487">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このコンストラクターは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-487">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this constructor throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="e93bb-488">Windows 7 以降で [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降で実行されるアプリ以降では、このメソッドは、id がオペレーティングシステムから <paramref name="culture" /> ている <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得しようとします。オペレーティングシステムがそのカルチャをサポートしていない場合、メソッドは <see cref="T:System.Globalization.CultureNotFoundException" /> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-488">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="culture" /> from the operating system; if the operating system does not support that culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CultureInfo (string name, bool useUserOverride);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, bool useUserOverride) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, useUserOverride As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CultureInfo(System::String ^ name, bool useUserOverride);" />
      <MemberSignature Language="F#" Value="new System.Globalization.CultureInfo : string * bool -&gt; System.Globalization.CultureInfo" Usage="new System.Globalization.CultureInfo (name, useUserOverride)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="useUserOverride" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e93bb-489">定義済みの <see cref="T:System.Globalization.CultureInfo" /> 名、既存の <see cref="P:System.Globalization.CultureInfo.Name" /> の <see cref="T:System.Globalization.CultureInfo" />、または Windows 専用カルチャ名。</span><span class="sxs-lookup"><span data-stu-id="e93bb-489">A predefined <see cref="T:System.Globalization.CultureInfo" /> name, <see cref="P:System.Globalization.CultureInfo.Name" /> of an existing <see cref="T:System.Globalization.CultureInfo" />, or Windows-only culture name.</span></span> <span data-ttu-id="e93bb-490"><paramref name="name" /> では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-490"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <param name="useUserOverride"><span data-ttu-id="e93bb-491">ユーザーが選択したカルチャ設定 (<see langword="true" />) または既定のカルチャ設定 (<see langword="false" />) のいずれを使用するかを示すブール値。</span><span class="sxs-lookup"><span data-stu-id="e93bb-491">A Boolean that denotes whether to use the user-selected culture settings (<see langword="true" />) or the default culture settings (<see langword="false" />).</span></span></param>
        <summary><span data-ttu-id="e93bb-492">名前で指定したカルチャと、システムからユーザーが選択したカルチャ設定を使用するかどうかを指定するブール値に基づいて、<see cref="T:System.Globalization.CultureInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-492">Initializes a new instance of the <see cref="T:System.Globalization.CultureInfo" /> class based on the culture specified by name and on the Boolean that specifies whether to use the user-selected culture settings from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="e93bb-493">定義済みカルチャ名の一覧については、 [Windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-493">For a list of predefined culture names, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-494">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-494">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="e93bb-495">さらに、Windows 10 以降では、`name` 有効な BCP-47 言語タグを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-495">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
<span data-ttu-id="e93bb-496">`name` が <xref:System.String.Empty?displayProperty=nameWithType>の場合、コンストラクターはインバリアントカルチャのインスタンスを作成します。これは、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティの値を取得することと同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-496">If `name` is <xref:System.String.Empty?displayProperty=nameWithType>, the constructor creates an instance of the invariant culture; this is equivalent to retrieving the value of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 <span data-ttu-id="e93bb-497">ユーザーは、コントロールパネルの [地域と言語のオプション] で、現在の Windows カルチャに関連付けられている値の一部を上書きすることもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-497">The user might choose to override some of the values associated with the current Windows culture through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-498">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-498">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="e93bb-499">通常、アプリケーションはユーザーの上書きを許可しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-499">Applications should typically not disallow user overrides.</span></span> <span data-ttu-id="e93bb-500">上書きを禁止することで、データの安定性が保証されないことに注意してください。ブログの入力[カルチャデータは、安定しているとは見なされません (インバリアントを除く)](https://go.microsoft.com/fwlink/?LinkId=156850)。</span><span class="sxs-lookup"><span data-stu-id="e93bb-500">Note that disallowing overrides does not itself guarantee data stability; see the blog entry [Culture data shouldn't be considered stable (except for Invariant)](https://go.microsoft.com/fwlink/?LinkId=156850).</span></span>  
  
 <span data-ttu-id="e93bb-501"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> プロパティが `true` に設定されていて、指定されたカルチャ名に関連付けられているカルチャ識別子が現在の Windows カルチャのカルチャ識別子と一致する場合、このコンストラクターは、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定、<xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティなど、これらのオーバーライドを使用する <xref:System.Globalization.CultureInfo> を</span><span class="sxs-lookup"><span data-stu-id="e93bb-501">If the <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property is set to `true` and the culture identifier associated with the specified culture name matches the culture identifier of the current Windows culture, this constructor creates a <xref:System.Globalization.CultureInfo> that uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-502">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-502">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="e93bb-503">それ以外の場合、このコンストラクターは、指定されたカルチャの既定値を使用する <xref:System.Globalization.CultureInfo> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-503">Otherwise, this constructor creates a <xref:System.Globalization.CultureInfo> that uses the default values for the specified culture.</span></span>  
  
 <span data-ttu-id="e93bb-504">`useUserOverride` パラメーターの値が <xref:System.Globalization.CultureInfo.UseUserOverride%2A> プロパティの値になります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-504">The value of the `useUserOverride` parameter becomes the value of the <xref:System.Globalization.CultureInfo.UseUserOverride%2A> property.</span></span>  
  
 <span data-ttu-id="e93bb-505">たとえば、アラビア語 (サウジアラビア) が Windows の現在のカルチャであり、ユーザーがカレンダーをイスラム暦からグレゴリオ暦に変更したとします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-505">For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user changed the calendar from Hijri to Gregorian.</span></span>  
  
-   <span data-ttu-id="e93bb-506">`CultureInfo("ar-SA", true)`では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.GregorianCalendar> (ユーザー設定) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-506">With `CultureInfo("ar-SA", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.GregorianCalendar> (which is the user setting) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="e93bb-507">`CultureInfo("ar-SA", false)`では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.HijriCalendar> (ar の既定の暦) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-507">With `CultureInfo("ar-SA", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.HijriCalendar> (which is the default calendar for ar-SA) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `false`.</span></span>  
  
-   <span data-ttu-id="e93bb-508">`CultureInfo("th-TH", true)`では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.ThaiBuddhistCalendar> (th の既定の暦) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-508">With `CultureInfo("th-TH", true)`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `true`.</span></span>  
  
-   <span data-ttu-id="e93bb-509">`CultureInfo("th-TH", false)`では、<xref:System.Globalization.CultureInfo.Calendar%2A> が <xref:System.Globalization.ThaiBuddhistCalendar> (th の既定の暦) に設定され、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-509">With `CultureInfo("th-TH", false)`, <xref:System.Globalization.CultureInfo.Calendar%2A> is set to <xref:System.Globalization.ThaiBuddhistCalendar> (which is the default calendar for th-TH) and <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is set to `false`.</span></span>  
  
 <span data-ttu-id="e93bb-510">新しい <xref:System.Globalization.CultureInfo> の <xref:System.Globalization.CultureInfo.LCID%2A> プロパティは、指定された名前に関連付けられているカルチャ識別子に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-510">The <xref:System.Globalization.CultureInfo.LCID%2A> property of the new <xref:System.Globalization.CultureInfo> is set to the culture identifier associated with the specified name.</span></span>  
  
 <span data-ttu-id="e93bb-511">ユーロを使用するカルチャの場合、.NET Framework と Windows XP では、既定の通貨がユーロとして設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-511">For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</span></span> <span data-ttu-id="e93bb-512">ただし、以前のバージョンの Windows では、これは実行されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-512">However, older versions of Windows do not do this.</span></span> <span data-ttu-id="e93bb-513">このため、以前のバージョンの Windows のユーザーがコントロールパネルの [地域と言語のオプション] で通貨の設定を変更していない場合、通貨が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-513">Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</span></span> <span data-ttu-id="e93bb-514">通貨に .NET Framework 既定の設定を使用するには、アプリケーションで `useUserOverride` パラメーターを `false`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-514">To use the .NET Framework default setting for the currency, the application should set the `useUserOverride` parameter to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-515"><paramref name="name" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-515"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-516"><paramref name="name" /> が有効なカルチャ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-516"><paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="e93bb-517">詳細については、「呼び出し時の注意」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-517">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-518">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="name" /> が有効なカルチャ名ではない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-518">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="e93bb-519">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このコンストラクターは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-519">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this constructor throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="e93bb-520">Windows 7 以降で [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降で実行されるアプリ以降では、このメソッドは、id がオペレーティングシステムから <paramref name="name" /> ている <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得しようとします。オペレーティングシステムがそのカルチャをサポートしていない場合、<paramref name="name" /> が補助カルチャまたは置換カルチャの名前でない場合、メソッドは <see cref="T:System.Globalization.CultureNotFoundException" /> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-520">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="P:System.Globalization.CultureInfo.UseUserOverride" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar Calendar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::Calendar ^ Calendar { System::Globalization::Calendar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : System.Globalization.Calendar" Usage="System.Globalization.CultureInfo.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-521">カルチャで使用する既定の暦を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-521">Gets the default calendar used by the culture.</span></span></summary>
        <value><span data-ttu-id="e93bb-522">カルチャで使用する既定の暦を表す <see cref="T:System.Globalization.Calendar" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-522">A <see cref="T:System.Globalization.Calendar" /> that represents the default calendar used by the culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-523">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-523">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-524">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-524">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="e93bb-525"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`、指定されたカルチャが Windows の現在のカルチャに一致する場合、<xref:System.Globalization.CultureInfo> は、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定や、<xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティなど、これらのオーバーライドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-525">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-526">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-526">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="e93bb-527">したがって、<xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`場合、このプロパティの値は、カルチャで使用される既定の暦とは異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-527">Therefore, if <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true`, the value of this property might be different from the default calendar used by the culture.</span></span>  
  
 <span data-ttu-id="e93bb-528">アプリケーションは、<xref:System.Globalization.DateTimeFormatInfo> クラスのインスタンスである <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>の <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> プロパティを設定することによって、現在の <xref:System.Globalization.CultureInfo> によって使用されるカレンダーを変更します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-528">Your application changes the calendar used by the current <xref:System.Globalization.CultureInfo> by setting the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, which is an instance of the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span> <span data-ttu-id="e93bb-529">新しい予定表は、<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>に一覧表示されている予定表のいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-529">The new calendar must be one of the calendars listed in <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>.</span></span> <span data-ttu-id="e93bb-530"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> には、その <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>に関連付けられた日付と時刻の書式をカスタマイズするその他のプロパティも含まれています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-530"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> also includes other properties that customize the date and time formatting associated with that <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="ClearCachedData">
      <MemberSignature Language="C#" Value="public void ClearCachedData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCachedData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ClearCachedData" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearCachedData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearCachedData();" />
      <MemberSignature Language="F#" Value="member this.ClearCachedData : unit -&gt; unit" Usage="cultureInfo.ClearCachedData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e93bb-531">キャッシュされたカルチャ関連情報を更新します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-531">Refreshes cached culture-related information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-532">既定のカルチャや形式のパターンなどの情報は、初めて要求されたときにキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-532">Information, such as the default culture and format patterns, is cached the first time it is requested.</span></span> <span data-ttu-id="e93bb-533">この情報は、<xref:System.AppDomain>の有効期間中に変更される可能性があります。たとえば、ユーザーがコントロールパネルの [地域と言語のオプション] の部分を変更した場合などです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-533">That information can change during the life of the <xref:System.AppDomain>, for example, when the user modifies the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-534">ただし、<xref:System.Globalization.CultureInfo> クラスは、システム設定の変更を自動的に検出しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-534">However, the <xref:System.Globalization.CultureInfo> class does not automatically detect changes in the system settings.</span></span>  
  
 <span data-ttu-id="e93bb-535"><xref:System.Globalization.CultureInfo.ClearCachedData%2A> メソッドは <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> によって作成された <xref:System.Globalization.CultureInfo> オブジェクトのキャッシュをクリアし、現在のシステム設定に基づいて、<xref:System.Globalization.CultureInfo.CurrentCulture%2A>、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A>、および <xref:System.Globalization.RegionInfo.CurrentRegion%2A> の各プロパティの情報を更新します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-535">The <xref:System.Globalization.CultureInfo.ClearCachedData%2A> method clears the cache of <xref:System.Globalization.CultureInfo> objects created by <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> and refreshes the information in the <xref:System.Globalization.CultureInfo.CurrentCulture%2A>, <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>, and <xref:System.Globalization.RegionInfo.CurrentRegion%2A> properties, based on the current system settings.</span></span>  
  
 <span data-ttu-id="e93bb-536"><xref:System.Globalization.CultureInfo.ClearCachedData%2A> メソッドは、既存のスレッドの <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> プロパティの情報を更新しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-536">The <xref:System.Globalization.CultureInfo.ClearCachedData%2A> method does not refresh the information in the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> property for existing threads.</span></span> <span data-ttu-id="e93bb-537">ただし、今後のスレッドには、新しい <xref:System.Globalization.CultureInfo> のプロパティ値が追加されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-537">However, future threads will have any new <xref:System.Globalization.CultureInfo> property values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="cultureInfo.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e93bb-538">現在の <see cref="T:System.Globalization.CultureInfo" /> のコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-538">Creates a copy of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <returns><span data-ttu-id="e93bb-539">現在の <see cref="T:System.Globalization.CultureInfo" /> のコピー。</span><span class="sxs-lookup"><span data-stu-id="e93bb-539">A copy of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-540">元の <xref:System.Globalization.CultureInfo> が読み取り専用の場合でも、複製は書き込み可能です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-540">The clone is writable even if the original <xref:System.Globalization.CultureInfo> is read-only.</span></span> <span data-ttu-id="e93bb-541">そのため、複製のプロパティは変更できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-541">Therefore, the properties of the clone can be modified.</span></span>  
  
 <span data-ttu-id="e93bb-542">オブジェクトの簡易コピーは、オブジェクトのコピーにすぎません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-542">A shallow copy of an object is a copy of the object only.</span></span> <span data-ttu-id="e93bb-543">オブジェクトに他のオブジェクトへの参照が含まれている場合、シャローコピーは参照されるオブジェクトのコピーを作成しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-543">If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</span></span> <span data-ttu-id="e93bb-544">代わりに、元のオブジェクトを参照します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-544">It refers to the original objects instead.</span></span> <span data-ttu-id="e93bb-545">これに対し、オブジェクトの詳細コピーでは、オブジェクトのコピーと、そのオブジェクトによって直接または間接的に参照されるすべてのもののコピーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-545">In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span>  
  
 <span data-ttu-id="e93bb-546"><xref:System.Globalization.CultureInfo.Clone%2A> メソッドは、強化された簡易コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-546">The <xref:System.Globalization.CultureInfo.Clone%2A> method creates an enhanced shallow copy.</span></span> <span data-ttu-id="e93bb-547"><xref:System.Globalization.CultureInfo.NumberFormat%2A>、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>、<xref:System.Globalization.CultureInfo.TextInfo%2A>、および <xref:System.Globalization.CultureInfo.Calendar%2A> プロパティによって返されるオブジェクトもコピーされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-547">The objects returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.TextInfo%2A>, and <xref:System.Globalization.CultureInfo.Calendar%2A> properties are also copied.</span></span> <span data-ttu-id="e93bb-548">その結果、複製された <xref:System.Globalization.CultureInfo> オブジェクトは、元の <xref:System.Globalization.CultureInfo> オブジェクトに影響を与えることなく、コピーされたプロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-548">Consequently, the cloned <xref:System.Globalization.CultureInfo> object can modify its copied properties without affecting the original <xref:System.Globalization.CultureInfo> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-549">次のコード例は、<xref:System.Globalization.CultureInfo>に関連付けられている <xref:System.Globalization.DateTimeFormatInfo> と <xref:System.Globalization.NumberFormatInfo> インスタンスも複製することを示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-549">The following code example shows that CultureInfo.Clone also clones the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CompareInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CompareInfo CompareInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CompareInfo CompareInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CompareInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CompareInfo As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CompareInfo ^ CompareInfo { System::Globalization::CompareInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompareInfo : System.Globalization.CompareInfo" Usage="System.Globalization.CultureInfo.CompareInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-550">カルチャの文字列を比較する方法を定義する <see cref="T:System.Globalization.CompareInfo" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-550">Gets the <see cref="T:System.Globalization.CompareInfo" /> that defines how to compare strings for the culture.</span></span></summary>
        <value><span data-ttu-id="e93bb-551">カルチャの文字列を比較する方法を定義する <see cref="T:System.Globalization.CompareInfo" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-551">The <see cref="T:System.Globalization.CompareInfo" /> that defines how to compare strings for the culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-552"><xref:System.Globalization.CultureInfo.CompareInfo%2A> プロパティは、カルチャに依存した並べ替えおよび文字列比較操作で使用されるカルチャ固有の情報を提供する <xref:System.Globalization.CompareInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-552">The <xref:System.Globalization.CultureInfo.CompareInfo%2A> property returns a <xref:System.Globalization.CompareInfo> object that provides culture-specific information used in culture-sensitive sorting and string comparison operations.</span></span>  
  
 <span data-ttu-id="e93bb-553">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-553">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-554">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-554">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="e93bb-555"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`、指定されたカルチャが Windows の現在のカルチャに一致する場合、<xref:System.Globalization.CultureInfo> は、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定や、<xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティなど、これらのオーバーライドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-555">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-556">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-556">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-557">次のコード例は、国際並べ替えを使用してスペイン語 (スペイン) 用の <xref:System.Globalization.CultureInfo> を作成し、従来の並べ替えで別の <xref:System.Globalization.CultureInfo> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-557">The following code example shows how to create a <xref:System.Globalization.CultureInfo> for Spanish (Spain) with the international sort and another <xref:System.Globalization.CultureInfo> with the traditional sort.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CompareInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateSpecificCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CreateSpecificCulture (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo CreateSpecificCulture(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpecificCulture (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ CreateSpecificCulture(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member CreateSpecificCulture : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CreateSpecificCulture name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e93bb-558">定義済みの <see cref="T:System.Globalization.CultureInfo" /> の名前または既存の <see cref="T:System.Globalization.CultureInfo" /> オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="e93bb-558">A predefined <see cref="T:System.Globalization.CultureInfo" /> name or the name of an existing <see cref="T:System.Globalization.CultureInfo" /> object.</span></span> <span data-ttu-id="e93bb-559"><paramref name="name" /> では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-559"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="e93bb-560">指定した名前に関連付けられている特定のカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-560">Creates a <see cref="T:System.Globalization.CultureInfo" /> that represents the specific culture that is associated with the specified name.</span></span></summary>
        <returns><span data-ttu-id="e93bb-561">次のものを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e93bb-561">A <see cref="T:System.Globalization.CultureInfo" /> object that represents:</span></span> 
<span data-ttu-id="e93bb-562">インバリアント カルチャ (<paramref name="name" /> が空の文字列 ("") の場合)。</span><span class="sxs-lookup"><span data-stu-id="e93bb-562">The invariant culture, if <paramref name="name" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="e93bb-563">または</span><span class="sxs-lookup"><span data-stu-id="e93bb-563">-or-</span></span> 
<span data-ttu-id="e93bb-564"><paramref name="name" /> に関連付けられた特定のカルチャ (<paramref name="name" /> がニュートラル カルチャの場合)。</span><span class="sxs-lookup"><span data-stu-id="e93bb-564">The specific culture associated with <paramref name="name" />, if <paramref name="name" /> is a neutral culture.</span></span>  
  
<span data-ttu-id="e93bb-565">または</span><span class="sxs-lookup"><span data-stu-id="e93bb-565">-or-</span></span> 
<span data-ttu-id="e93bb-566"><paramref name="name" /> で指定されたカルチャ (<paramref name="name" /> が既に特定のカルチャの場合)。</span><span class="sxs-lookup"><span data-stu-id="e93bb-566">The culture specified by <paramref name="name" />, if <paramref name="name" /> is already a specific culture.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-567"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> メソッドは、<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> コンストラクターへの呼び出しをラップします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-567">The <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> method wraps a call to the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="e93bb-568">Windows システム上の定義済みカルチャ名の一覧については、 [windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-568">For a list of predefined culture names on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-569">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-569">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="e93bb-570">さらに、Windows 10 以降では、`name` 有効な BCP-47 言語タグを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-570">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
 <span data-ttu-id="e93bb-571">カルチャは、インバリアントカルチャ、ニュートラルカルチャ、および特定のカルチャの3つのセットにグループ化されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-571">Cultures are grouped into three sets: the invariant culture, the neutral cultures, and the specific cultures.</span></span> <span data-ttu-id="e93bb-572">詳細については、<xref:System.Globalization.CultureInfo> クラスの説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-572">For more information, see the description of the <xref:System.Globalization.CultureInfo> class.</span></span>  
  
 <span data-ttu-id="e93bb-573">このメソッドによって返された特定のカルチャのカルチャ識別子が現在の Windows カルチャのカルチャ識別子と一致する場合、このメソッドは、Windows カルチャオーバーライドを使用する <xref:System.Globalization.CultureInfo> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-573">If the culture identifier of the specific culture returned by this method matches the culture identifier of the current Windows culture, this method creates a <xref:System.Globalization.CultureInfo> object that uses the Windows culture overrides.</span></span> <span data-ttu-id="e93bb-574">オーバーライドには、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> オブジェクトのプロパティと、<xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティによって返される <xref:System.Globalization.NumberFormatInfo> オブジェクトのプロパティのユーザー設定が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-574">The overrides include user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property and the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-575">ユーザーオーバーライドではなく既定のカルチャ設定を使用して <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化するには、`useUserOverride` 引数に `false` 値を指定して <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> コンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-575">To instantiate a <xref:System.Globalization.CultureInfo> object that with default culture settings rather than user overrides, call the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor with a value of `false` for the `useUserOverride` argument.</span></span>  
  
 <span data-ttu-id="e93bb-576"><xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> メソッド名には "特定" という用語が含まれていますが、カルチャデータは、バージョン間で変更することも、カスタムカルチャによって変更することも、ユーザーのオーバーライドによって変更することもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-576">Although the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> method name includes the term "Specific", remember that culture data can change between versions, or due to custom cultures, or because of user overrides.</span></span> <span data-ttu-id="e93bb-577">データを保存するには、インバリアントカルチャまたはバイナリまたは固定フォームを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-577">Use the invariant culture or binary or fixed forms for saving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-578">次の例では、<xref:System.Globalization.CultureInfo.GetCultures%2A> メソッドからニュートラルカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトの配列を取得し、配列を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-578">The following example retrieves an array of <xref:System.Globalization.CultureInfo> objects that represent neutral cultures from the <xref:System.Globalization.CultureInfo.GetCultures%2A> method and sorts the array.</span></span> <span data-ttu-id="e93bb-579">配列内の要素を反復処理すると、各ニュートラルカルチャの名前が <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> メソッドに渡され、メソッドによって返された特定のカルチャの名前が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-579">When it iterates the elements in the array, it passes the name of each neutral culture to the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> method and displays the name of the specific culture returned by the method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-580">この例では、zh-tw および zh-tw-CHT カルチャ名を使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-580">The example uses the zh-CHS and zh-CHT culture names.</span></span> <span data-ttu-id="e93bb-581">ただし、Windows Vista 以降を対象とするアプリケーションでは、zh-hant の代わりに zh-tw と zh-tw-zh-tw の代わりに zh-tw-Hans を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-581">However, applications that target Windows Vista and later should use zh-Hans instead of zh-CHS and zh-Hant instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-582">zh-tw-Hans と zh-tw は、現在の標準を表し、古い名前を使用する理由がない限り、使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-582">zh-Hans and zh-Hant represent the current standard and should be used unless you have a reason for using the older names.</span></span>  
>   
>  <span data-ttu-id="e93bb-583">また、この例の結果は、中国語 (繁体字) のニュートラルカルチャ (zh-tw、zh-tw、または zh-tw) の入力が zh-hant を返す、台湾の Windows のインストールで異なる場合があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-583">Note also that the results of the example may differ on an installation of Taiwanese Windows, where the input of a Chinese (Traditional) neutral culture (zh, zh-CHT, or zh-Hant) will return zh-TW.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/CS/createspecificculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.CreateSpecificCulture2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CreateSpecificCulture2/VB/createspecificculture2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-584"><paramref name="name" /> が有効なカルチャ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-584"><paramref name="name" /> is not a valid culture name.</span></span>  
  
<span data-ttu-id="e93bb-585">または</span><span class="sxs-lookup"><span data-stu-id="e93bb-585">-or-</span></span> 
<span data-ttu-id="e93bb-586"><paramref name="name" /> で指定されたカルチャには、関連付けられている特定のカルチャがありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-586">The culture specified by <paramref name="name" /> does not have a specific culture associated with it.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="e93bb-587"><paramref name="name" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-587"><paramref name="name" /> is null.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-588">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="name" /> が有効なカルチャ名ではない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-588">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="e93bb-589">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このメソッドは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-589">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span></para></block>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="CultureTypes">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureTypes CultureTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CultureTypes CultureTypes" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CultureTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CultureTypes As CultureTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureTypes CultureTypes { System::Globalization::CultureTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.CultureTypes : System.Globalization.CultureTypes" Usage="System.Globalization.CultureInfo.CultureTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-590">現在の <see cref="T:System.Globalization.CultureInfo" /> オブジェクトに関するカルチャ タイプを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-590">Gets the culture types that pertain to the current <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="e93bb-591">1 つ以上の <see cref="T:System.Globalization.CultureTypes" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="e93bb-591">A bitwise combination of one or more <see cref="T:System.Globalization.CultureTypes" /> values.</span></span> <span data-ttu-id="e93bb-592">既定値はありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-592">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e93bb-593">次の例は、<xref:System.Globalization.CultureTypes> 列挙型と <xref:System.Globalization.CultureInfo.CultureTypes%2A> プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-593">The following example demonstrates the <xref:System.Globalization.CultureTypes> enumeration and the <xref:System.Globalization.CultureInfo.CultureTypes%2A> property.</span></span>  
  
 [!code-csharp[system.globalization.cultureTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureTypes/cs/ct.cs#1)]
 [!code-vb[system.globalization.cultureTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureTypes/vb/ct.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="CurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentCulture As CultureInfo" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentCulture" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentCulture { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentCulture As CultureInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentCulture { System::Globalization::CultureInfo ^ get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.CurrentCulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CurrentCulture" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-594">現在のスレッドで使用するカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-594">Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture used by the current thread.</span></span></summary>
        <value><span data-ttu-id="e93bb-595">現在のスレッドで使用するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e93bb-595">An object that represents the culture used by the current thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-596">このプロパティとそれに関連付けられたオブジェクトによって返される <xref:System.Globalization.CultureInfo> オブジェクトは、日付、時刻、数値、通貨値、テキストの並べ替え順序、大文字小文字の表記規則、および文字列比較の既定の形式を決定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-596">The <xref:System.Globalization.CultureInfo> object that is returned by this property and its associated objects determine the default format for dates, times, numbers, currency values, the sorting order of text, casing conventions, and string comparisons.</span></span>  
  
 <span data-ttu-id="e93bb-597">現在のカルチャは、実行中のスレッドのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-597">The current culture is a property of the executing thread.</span></span> <span data-ttu-id="e93bb-598"><xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティの値を取得することは、`Thread.CurrentThread.CurrentCulture` プロパティによって返される <xref:System.Globalization.CultureInfo> オブジェクトを取得するのと同等の機能です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-598">Retrieving the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property is a more performant equivalent of retrieving the <xref:System.Globalization.CultureInfo> object returned by the `Thread.CurrentThread.CurrentCulture` property.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="e93bb-599">.NET Framework 4.5.2 以前のバージョンでは、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティは読み取り専用です。 つまり、プロパティ値を取得することはできますが、設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-599">In the .NET Framework 4.5.2 and earlier versions, the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property is read-only;  that is, you can retrieve the property value, but you cannot set it.</span></span> <span data-ttu-id="e93bb-600">現在のカルチャを変更するには、新しいカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを `Thread.CurrentThread.CurrentCulture` プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-600">To change the current culture, you assign the <xref:System.Globalization.CultureInfo> object that represents the new culture to the `Thread.CurrentThread.CurrentCulture` property.</span></span> <span data-ttu-id="e93bb-601">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]以降では、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティは読み取り/書き込み可能です。プロパティの値は、設定と取得の両方を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-601">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property is read-write; you can both set and retrieve the property's value.</span></span> <span data-ttu-id="e93bb-602">新しいカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトにプロパティ値を設定した場合、`Thread.CurrentThread.CurrentCulture` プロパティの値も変更されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-602">If you do set the property value to a <xref:System.Globalization.CultureInfo> object that represents a new culture, the value of the `Thread.CurrentThread.CurrentCulture` property also changes.</span></span>  
  
 <span data-ttu-id="e93bb-603">このセクションの内容</span><span class="sxs-lookup"><span data-stu-id="e93bb-603">In this section:</span></span>  
  
 <span data-ttu-id="e93bb-604">[スレッドのカルチャを決定する方法](#ThreadCulture) </span><span class="sxs-lookup"><span data-stu-id="e93bb-604">[How a Thread's Culture Is Determined](#ThreadCulture) </span></span>  
 <span data-ttu-id="e93bb-605">[現在のカルチャ  を取得する](#Getting)</span><span class="sxs-lookup"><span data-stu-id="e93bb-605">[Getting the Current Culture](#Getting) </span></span>  
 <span data-ttu-id="e93bb-606">[CurrentCulture プロパティを明示的に設定する](#ExplicitSetting) </span><span class="sxs-lookup"><span data-stu-id="e93bb-606">[Explicitly Setting the CurrentCulture Property](#ExplicitSetting) </span></span>  
 <span data-ttu-id="e93bb-607">[現在のカルチャとユーザーのオーバーライド](#Overrides) </span><span class="sxs-lookup"><span data-stu-id="e93bb-607">[The Current Culture and User Overrides](#Overrides) </span></span>  
 [<span data-ttu-id="e93bb-608">カルチャと Windows アプリ</span><span class="sxs-lookup"><span data-stu-id="e93bb-608">Culture and Windows Apps</span></span>](#WindowsAndCurr)  
  
<a name="ThreadCulture"></a>   
## <a name="how-a-threads-culture-is-determined"></a><span data-ttu-id="e93bb-609">スレッドのカルチャを決定する方法</span><span class="sxs-lookup"><span data-stu-id="e93bb-609">How a Thread's Culture Is Determined</span></span>  
 <span data-ttu-id="e93bb-610">スレッドが開始されると、そのカルチャは最初に次のように決定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-610">When a thread is started, its culture is initially determined as follows:</span></span>  
  
-   <span data-ttu-id="e93bb-611">スレッドが実行されているアプリケーションドメインの <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティによって指定されたカルチャを取得する。プロパティ値が `null`ない場合は。</span><span class="sxs-lookup"><span data-stu-id="e93bb-611">By retrieving the culture that is specified by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property in the application domain in which the thread is executing, if the property value is not `null`.</span></span>  
  
-   <span data-ttu-id="e93bb-612">スレッドがタスクベースの非同期操作を実行していて、アプリが [!INCLUDE[net_v46](~/includes/net-v46-md.md)] またはそれ以降のバージョンの .NET Framework を対象とするスレッドプールスレッドである場合、そのカルチャは呼び出し元スレッドのカルチャによって決まります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-612">If the thread is a thread pool thread that is executing a task-based asynchronous operation and the app targets the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or a later version of the .NET Framework, its culture is determined by the culture of the calling thread.</span></span>  <span data-ttu-id="e93bb-613">次の例では、現在のカルチャをポルトガル語 (ブラジル) に変更し、6つのタスクを開始します。各タスクでは、スレッド ID、タスク ID、および現在のカルチャが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-613">The following example changes the current culture to Portuguese (Brazil) and launches six tasks, each of which displays its thread ID, its task ID, and its current culture.</span></span> <span data-ttu-id="e93bb-614">各タスク (およびスレッド) は、呼び出し元のスレッドのカルチャを継承しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-614">Each of the tasks (and the threads) has inherited the culture of the calling thread.</span></span>  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentCulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Async1.vb#14)]  
  
     <span data-ttu-id="e93bb-615">詳細については、「<xref:System.Globalization.CultureInfo>」トピックの「カルチャとタスクベースの非同期操作」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-615">For more information, see the "Culture and task-based asynchronous operations" section in the <xref:System.Globalization.CultureInfo> topic.</span></span>  
  
-   <span data-ttu-id="e93bb-616">Windows `GetUserDefaultLocaleName` 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-616">By calling the Windows `GetUserDefaultLocaleName` function.</span></span>  
  
 <span data-ttu-id="e93bb-617">システムでインストールされているカルチャまたはユーザーの優先カルチャとは異なる特定のカルチャを設定した場合、アプリケーションが複数のスレッドを開始すると、スレッドが実行されているアプリケーションドメインの <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティにカルチャを割り当てない限り、これらのスレッドの現在のカルチャが `GetUserDefaultLocaleName` 関数によって返されるカルチャになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-617">Note that if you set a specific culture that is different from the system-installed culture or the user's preferred culture, and your application starts multiple threads, the current culture of those threads will be the culture that is returned by the `GetUserDefaultLocaleName` function, unless you assign a culture to the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property in the application domain in which the thread is executing.</span></span>  
  
 <span data-ttu-id="e93bb-618">スレッドのカルチャを決定する方法の詳細については、<xref:System.Globalization.CultureInfo> リファレンスページの「カルチャとスレッド」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-618">For more information about how the culture of a thread is determined, see the "Culture and threads" section in the <xref:System.Globalization.CultureInfo> reference page.</span></span>  
  
<a name="Getting"></a>   
## <a name="getting-the-current-culture"></a><span data-ttu-id="e93bb-619">現在のカルチャを取得する</span><span class="sxs-lookup"><span data-stu-id="e93bb-619">Getting the Current Culture</span></span>  
 <span data-ttu-id="e93bb-620"><xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティはスレッドごとの設定です。つまり、各スレッドは独自のカルチャを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-620">The <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property is a per-thread setting; that is, each thread can have its own culture.</span></span> <span data-ttu-id="e93bb-621">次の例に示すように、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティの値を取得することにより、現在のスレッドのカルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-621">You get the culture of the current thread by retrieving the value of the   <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Get1.vb#5)]  
  
 <span data-ttu-id="e93bb-622"><xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> プロパティから、現在のスレッドのカルチャの値を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-622">You can also retrieve the value of the current thread's culture from the <xref:System.Threading.Thread.CurrentThread%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="ExplicitSetting"></a>   
## <a name="explicitly-setting-the-currentculture-property"></a><span data-ttu-id="e93bb-623">CurrentCulture プロパティの明示的な設定</span><span class="sxs-lookup"><span data-stu-id="e93bb-623">Explicitly Setting the CurrentCulture Property</span></span>  
 <span data-ttu-id="e93bb-624">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]では、既存のスレッドで使用されるカルチャを変更するには、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティを新しいカルチャに設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-624">Staring with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], to change the culture that is used by an existing thread, you set the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to the new culture.</span></span> <span data-ttu-id="e93bb-625">この方法でスレッドのカルチャを明示的に変更した場合、スレッドがアプリケーションドメインの境界を越えても、その変更は保持されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-625">If you explicitly change a thread's culture in this way, that change persists if the thread crosses application domain boundaries.</span></span> <span data-ttu-id="e93bb-626">次の例では、現在のスレッドカルチャをオランダ語 (オランダ) に変更します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-626">The following example changes the current thread culture to Dutch (Netherlands).</span></span> <span data-ttu-id="e93bb-627">また、現在のスレッドがアプリケーションドメインの境界を越えたときに、現在のカルチャが変更されていることも示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-627">It also shows that, when the current thread crosses application domain boundaries, its current culture remains changed.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/changeculture11.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/changeculture11.vb#11)]  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-628"><xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティを使用してカルチャを変更するには、<xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> 値が設定された <xref:System.Security.Permissions.SecurityPermission> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-628">Changing the culture by using the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property requires a <xref:System.Security.Permissions.SecurityPermission> permission with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> value set.</span></span> <span data-ttu-id="e93bb-629">スレッドに関連付けられているセキュリティ状態により、スレッドの操作は危険です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-629">Manipulating threads is dangerous because of the security state associated with threads.</span></span> <span data-ttu-id="e93bb-630">したがって、このアクセス許可は、信頼できるコードにのみ付与し、その後必要な場合にのみ指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-630">Therefore, this permission should be given only to trustworthy code, and then only as necessary.</span></span> <span data-ttu-id="e93bb-631">スレッドカルチャは、信頼度の低いコードでは変更できません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-631">You cannot change thread culture in semi-trusted code.</span></span>  
  
 <span data-ttu-id="e93bb-632">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]以降では、現在のスレッドカルチャを、特定のカルチャ (フランス語 (カナダ) など) またはニュートラルカルチャ (フランス語など) に明示的に変更できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-632">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], you can explicitly change the current thread culture to either a specific culture (such as French (Canada)) or a neutral culture (such as French).</span></span> <span data-ttu-id="e93bb-633"><xref:System.Globalization.CultureInfo> オブジェクトがニュートラルカルチャを表す場合、<xref:System.Globalization.CultureInfo.Calendar%2A>、<xref:System.Globalization.CultureInfo.CompareInfo%2A>、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>、<xref:System.Globalization.CultureInfo.NumberFormat%2A>、<xref:System.Globalization.CultureInfo.TextInfo%2A> などの <xref:System.Globalization.CultureInfo> プロパティの値は、ニュートラルカルチャに関連付けられている特定のカルチャを反映します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-633">When a <xref:System.Globalization.CultureInfo> object represents a neutral culture, the values of <xref:System.Globalization.CultureInfo> properties such as <xref:System.Globalization.CultureInfo.Calendar%2A>, <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, <xref:System.Globalization.CultureInfo.NumberFormat%2A>, and <xref:System.Globalization.CultureInfo.TextInfo%2A> reflect the specific culture that is associated with the neutral culture.</span></span> <span data-ttu-id="e93bb-634">たとえば、英語のニュートラルカルチャの主要なカルチャは英語 (米国) です。ドイツ語カルチャの主要なカルチャはドイツ語 (ドイツ) です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-634">For example, the dominant culture for the English neutral culture is English (United States); the dominant culture for the German culture is German (Germany).</span></span> <span data-ttu-id="e93bb-635">次の例は、現在のカルチャが特定のカルチャ、フランス語 (カナダ)、およびニュートラルカルチャであるフランス語に設定されている場合の書式設定の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-635">The following example illustrates the difference in formatting when the current culture is set to a specific culture, French (Canada), and a neutral culture, French.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/specific12.cs#12)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/specific12.vb#12)]  
  
 <span data-ttu-id="e93bb-636">また、次の例に示すように、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティを <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> プロパティと共に使用して、ASP.NET アプリケーションの <xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティをユーザーの優先カルチャに設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-636">You can also use the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property along with the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to set the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property of an ASP.NET application to the user's preferred culture, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/aspculture13.cs#13)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/aspculture13.vb#13)]  
  
<a name="Overrides"></a>   
## <a name="the-current-culture-and-user-overrides"></a><span data-ttu-id="e93bb-637">現在のカルチャとユーザーオーバーライド</span><span class="sxs-lookup"><span data-stu-id="e93bb-637">The Current Culture and User Overrides</span></span>  
 <span data-ttu-id="e93bb-638">Windows では、ユーザーはコントロールパネルの **[地域と言語のオプション]** を使用して、<xref:System.Globalization.CultureInfo> オブジェクトとそれに関連付けられているオブジェクトの標準プロパティ値を上書きできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-638">Windows allows users to override the standard property values of the <xref:System.Globalization.CultureInfo> object and its associated objects by using **Regional and Language Options** in Control Panel.</span></span> <span data-ttu-id="e93bb-639"><xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティによって返される <xref:System.Globalization.CultureInfo> オブジェクトは、次の場合にこれらのユーザーオーバーライドを反映します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-639">The <xref:System.Globalization.CultureInfo> object returned by the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property reflects these user overrides in the following cases:</span></span>  
  
-   <span data-ttu-id="e93bb-640">現在のスレッドカルチャが Windows `GetUserDefaultLocaleName` 関数によって暗黙的に設定されている場合は。</span><span class="sxs-lookup"><span data-stu-id="e93bb-640">If the current thread culture is set implicitly by the Windows `GetUserDefaultLocaleName` function.</span></span>  
  
-   <span data-ttu-id="e93bb-641"><xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティによって定義されている現在のスレッドカルチャが、現在の Windows システムカルチャに対応する場合は。</span><span class="sxs-lookup"><span data-stu-id="e93bb-641">If the current thread culture defined by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property corresponds to the current Windows system culture.</span></span>  
  
-   <span data-ttu-id="e93bb-642">現在のスレッドカルチャが <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> メソッドによって返されたカルチャに明示的に設定されていて、そのカルチャが現在の Windows システムカルチャに対応している場合は。</span><span class="sxs-lookup"><span data-stu-id="e93bb-642">If the current thread culture is set explicitly to a culture returned by the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> method, and that culture corresponds to the current Windows system culture.</span></span>  
  
-   <span data-ttu-id="e93bb-643">現在のスレッドカルチャが <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> コンストラクターによってインスタンス化されたカルチャに明示的に設定されていて、そのカルチャが現在の Windows システムカルチャに対応している場合は。</span><span class="sxs-lookup"><span data-stu-id="e93bb-643">If the current thread culture is set explicitly to a culture instantiated by the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> constructor, and that culture corresponds to the current Windows system culture.</span></span>  
  
 <span data-ttu-id="e93bb-644">場合によっては、特にサーバーアプリケーションでは、ユーザーの上書きを反映する <xref:System.Globalization.CultureInfo> オブジェクトに現在のカルチャを設定することが望ましくない場合があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-644">In some cases, particularly for server applications, setting the current culture to a <xref:System.Globalization.CultureInfo> object that reflects user overrides may be undesirable.</span></span> <span data-ttu-id="e93bb-645">代わりに、現在のスレッドカルチャを、次の方法でユーザーのオーバーライドを反映しない <xref:System.Globalization.CultureInfo> オブジェクトに設定できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-645">Instead, you can set the current thread culture to a <xref:System.Globalization.CultureInfo> object that does not reflect user overrides in the following ways:</span></span>  
  
-   <span data-ttu-id="e93bb-646">`useUserOverride` 引数の値 `false` を指定して <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> コンストラクターを呼び出す。</span><span class="sxs-lookup"><span data-stu-id="e93bb-646">By calling the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor with a value of `false` for the `useUserOverride` argument.</span></span>  
  
-   <span data-ttu-id="e93bb-647"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A> メソッドを呼び出すことにより、キャッシュされた読み取り専用の <xref:System.Globalization.CultureInfo> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-647">By calling the <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> method, which returns a cached, read-only <xref:System.Globalization.CultureInfo> object.</span></span>  
  
<a name="WindowsAndCurr"></a>   
## <a name="the-current-culture-and-uwp-apps"></a><span data-ttu-id="e93bb-648">現在のカルチャと UWP アプリ</span><span class="sxs-lookup"><span data-stu-id="e93bb-648">The current culture and UWP apps</span></span>  
 <span data-ttu-id="e93bb-649">ユニバーサル Windows プラットフォーム (UWP) アプリでは、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティは、.NET Framework や .NET Core アプリと同様に、読み取り/書き込みが可能です。このメソッドを使用して、現在のカルチャを取得し、設定することができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-649">In Universal Windows Platform (UWP) apps, the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property is read-write, just as it is in .NET Framework and .NET Core apps; you can use it both to get and to set the current culture.</span></span> <span data-ttu-id="e93bb-650">ただし、UWP アプリでは、現在のカルチャと現在の UI カルチャを区別しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-650">However, UWP apps do not distinguish between the current culture and the current UI culture.</span></span> <span data-ttu-id="e93bb-651"><xref:System.Globalization.CultureInfo.CurrentCulture%2A> と <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> の各プロパティは、 [Windows の ApplicationModel. .resources](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) ..........</span><span class="sxs-lookup"><span data-stu-id="e93bb-651">The <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties map to the first value in the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) collection.</span></span>  

<span data-ttu-id="e93bb-652">.NET Framework と .NET Core アプリでは、現在のカルチャはスレッドごとの設定であり、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティは現在のスレッドのカルチャのみを反映します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-652">In .NET Framework and .NET Core apps, the current culture is a per-thread setting, and the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property reflects the culture of the current thread only.</span></span> <span data-ttu-id="e93bb-653">UWP アプリでは、現在のカルチャは、グローバル設定である、 [Windows の ApplicationModel. .resources](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_)プロパティにマップされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-653">In UWP apps, the current culture maps to the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) property, which is a global setting.</span></span> <span data-ttu-id="e93bb-654"><xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティを設定すると、アプリ全体のカルチャが変更されます。カルチャは、スレッド単位で設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-654">Setting the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property changes the culture of the entire app; culture cannot be set on a per-thread basis.</span></span>
  
## Examples  
 <span data-ttu-id="e93bb-655">次の例は、現在のスレッドの <xref:System.Globalization.CultureInfo.CurrentCulture%2A> と <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> を変更する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-655">The following example demonstrates how to change the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> of the current thread.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-656">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-656">The property is set to <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="T:System.Security.Permissions.SecurityPermission" />
        <altmember cref="T:System.Security.Permissions.SecurityPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; set; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo CurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.CurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CurrentUICulture As CultureInfo" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.CurrentUICulture" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo CurrentUICulture { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentUICulture As CultureInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ CurrentUICulture { System::Globalization::CultureInfo ^ get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberSignature Language="F#" Value="member this.CurrentUICulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.CurrentUICulture" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-1.0;netstandard-1.1;netstandard-1.2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-657">実行時にカルチャ固有のリソースを参照するためにリソース マネージャーによって使用される現在のユーザー インターフェイスのカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-657">Gets or sets the <see cref="T:System.Globalization.CultureInfo" /> object that represents the current user interface culture used by the Resource Manager to look up culture-specific resources at run time.</span></span></summary>
        <value><span data-ttu-id="e93bb-658">実行時にカルチャ固有のリソースを検索するためにリソース マネージャーで使用されるカルチャ。</span><span class="sxs-lookup"><span data-stu-id="e93bb-658">The culture used by the Resource Manager to look up culture-specific resources at run time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-659">現在の UI カルチャは、スレッドごとのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-659">The current UI culture is a per-thread property.</span></span> <span data-ttu-id="e93bb-660">つまり、各スレッドには、独自の現在の UI カルチャがあります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-660">That is, each thread has its own current UI culture.</span></span> <span data-ttu-id="e93bb-661">このプロパティは、[!INCLUDE[net_v46](~/includes/net-v46-md.md)]から開始し、`System.Threading.Thread.CurrentThread.CurrentUICulture` プロパティに割り当てられた <xref:System.Globalization.CultureInfo> オブジェクトを設定することと同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-661">This property is equivalent to retrieving or, starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], setting the <xref:System.Globalization.CultureInfo> object assigned to the  `System.Threading.Thread.CurrentThread.CurrentUICulture` property.</span></span> <span data-ttu-id="e93bb-662">スレッドが開始されると、その UI カルチャは最初に次のように決定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-662">When a thread is started, its UI culture is initially determined as follows:</span></span>  
  
-   <span data-ttu-id="e93bb-663">スレッドが実行されているアプリケーションドメインの <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティによって指定されたカルチャを取得する。プロパティ値が `null`ない場合は。</span><span class="sxs-lookup"><span data-stu-id="e93bb-663">By retrieving the culture that is specified by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property in the application domain in which the thread is executing, if the property value is not `null`.</span></span>  
  
-   <span data-ttu-id="e93bb-664">スレッドがタスクベースの非同期操作を実行していて、アプリが [!INCLUDE[net_v46](~/includes/net-v46-md.md)] またはそれ以降のバージョンの .NET Framework を対象とするスレッドプールスレッドである場合、UI カルチャは呼び出し元スレッドの UI カルチャによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-664">If the thread is a thread pool thread that is executing a task-based asynchronous operation and the app targets the [!INCLUDE[net_v46](~/includes/net-v46-md.md)] or a later version of the .NET Framework, its UI culture is determined by the UI culture of the calling thread.</span></span>  <span data-ttu-id="e93bb-665">次の例では、現在の UI カルチャをポルトガル語 (ブラジル) に変更し、6つのタスクを開始します。各タスクでは、スレッド ID、タスク ID、および現在の UI カルチャが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-665">The following example changes the current UI culture to Portuguese (Brazil) and launches six tasks, each of which displays its thread ID, its task ID, and its current UI culture.</span></span> <span data-ttu-id="e93bb-666">各タスク (およびスレッド) は、呼び出し元のスレッドの UI カルチャを継承しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-666">Each of the tasks (and the threads) has inherited the UI culture of the calling thread.</span></span>  
  
     [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Async1.cs#14)]
     [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Async1.vb#14)]  
  
     <span data-ttu-id="e93bb-667">詳細については、「<xref:System.Globalization.CultureInfo>」トピックの「カルチャとタスクベースの非同期操作」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-667">For more information, see the "Culture and task-based asynchronous operations" section in the <xref:System.Globalization.CultureInfo> topic.</span></span>  
  
-   <span data-ttu-id="e93bb-668">Windows `GetUserDefaultUILanguage` 関数を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-668">By calling the Windows `GetUserDefaultUILanguage` function.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-669">[!INCLUDE[Compact](~/includes/compact-md.md)]では、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-669">In the [!INCLUDE[Compact](~/includes/compact-md.md)], the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property is read-only.</span></span> <span data-ttu-id="e93bb-670">現在の UI カルチャはシステムの地域設定によって決定されるため、プログラムで変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-670">The current UI culture is determined by the system's regional settings and cannot be changed programmatically.</span></span>  
  
 <span data-ttu-id="e93bb-671">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]以降では、スレッドで使用されるユーザーインターフェイスのカルチャを変更するには、<xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティを新しいカルチャに設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-671">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], to change the user interface culture used by a thread, set the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property to the new culture.</span></span> <span data-ttu-id="e93bb-672">この方法でスレッドの UI カルチャを明示的に変更した場合、スレッドがアプリケーションドメインの境界を越えても、その変更は保持されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-672">If you explicitly change a thread's UI culture in this way, that change persists if the thread crosses application domain boundaries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-673">.NET Framework 4.5.2 以前のバージョンでは、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティは読み取り専用です。 つまり、プロパティ値を取得することはできますが、設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-673">In the .NET Framework 4.5.2 and earlier versions, the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property is read-only;  that is, you can retrieve the property value, but you cannot set it.</span></span> <span data-ttu-id="e93bb-674">現在の UI カルチャを変更するには、新しい UI カルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを `Thread.CurrentThread.CurrentUICulture` プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-674">To change the current UI culture, you assign the <xref:System.Globalization.CultureInfo> object that represents the new UI culture to the `Thread.CurrentThread.CurrentUICulture` property.</span></span> <span data-ttu-id="e93bb-675">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]以降では、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティは読み取り/書き込み可能です。プロパティの値は、設定と取得の両方を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-675">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property is read-write; you can both set and retrieve the property's value.</span></span> <span data-ttu-id="e93bb-676">新しいカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトにプロパティ値を設定した場合、`Thread.CurrentThread.CurrentCulture` プロパティの値も変更されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-676">If you do set the property value to a <xref:System.Globalization.CultureInfo> object that represents a new culture, the value of the `Thread.CurrentThread.CurrentCulture` property also changes.</span></span>  
  
 <span data-ttu-id="e93bb-677">このセクションの内容</span><span class="sxs-lookup"><span data-stu-id="e93bb-677">In this section:</span></span>  
  
 <span data-ttu-id="e93bb-678">[現在の UI カルチャ  を取得する](#Getting)</span><span class="sxs-lookup"><span data-stu-id="e93bb-678">[Getting the Current UI Culture](#Getting) </span></span>  
 <span data-ttu-id="e93bb-679">[現在の UI カルチャを明示的に設定する](#Explicit) </span><span class="sxs-lookup"><span data-stu-id="e93bb-679">[Explicitly Setting the Current UI Culture](#Explicit) </span></span>  
 <span data-ttu-id="e93bb-680">[現在の UI カルチャを暗黙的に設定する](#Implicit) </span><span class="sxs-lookup"><span data-stu-id="e93bb-680">[Implicitly Setting the Current UI Culture](#Implicit) </span></span>  
 <span data-ttu-id="e93bb-681">[セキュリティに関する考慮事項](#Security) </span><span class="sxs-lookup"><span data-stu-id="e93bb-681">[Security Considerations](#Security) </span></span>  
 [<span data-ttu-id="e93bb-682">現在の UI カルチャと Windows アプリ</span><span class="sxs-lookup"><span data-stu-id="e93bb-682">The Current UI Culture and Windows apps</span></span>](#WindowsAndCurrUI)  
  
<a name="Getting"></a>   
## <a name="getting-the-current-ui-culture"></a><span data-ttu-id="e93bb-683">現在の UI カルチャを取得する</span><span class="sxs-lookup"><span data-stu-id="e93bb-683">Getting the Current UI Culture</span></span>  
 <span data-ttu-id="e93bb-684"><xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティはスレッドごとの設定です。つまり、各スレッドは独自の UI カルチャを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-684">The <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property is a per-thread setting; that is, each thread can have its own UI culture.</span></span> <span data-ttu-id="e93bb-685">次の例に示すように、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティの値を取得することにより、現在のスレッドの UI カルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-685">You get the UI culture of the current thread by retrieving the value of the   <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Get1.cs#5)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Get1.vb#5)]  
  
 <span data-ttu-id="e93bb-686"><xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティから、現在のスレッドの UI カルチャの値を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-686">You can also retrieve the value of the current thread's UI culture from the <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="Explicit"></a>   
## <a name="explicitly-setting-the-current-ui-culture"></a><span data-ttu-id="e93bb-687">現在の UI カルチャを明示的に設定する</span><span class="sxs-lookup"><span data-stu-id="e93bb-687">Explicitly Setting the Current UI Culture</span></span>  
 <span data-ttu-id="e93bb-688">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]以降では、新しいカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトを <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティに割り当てることにより、現在の UI カルチャを変更できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-688">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], you can change the current UI culture by assigning a <xref:System.Globalization.CultureInfo> object that represents the new culture to the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e93bb-689">現在の UI カルチャは、特定のカルチャ (en-us や de など) に設定することも、ニュートラルカルチャ (en や de など) に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-689">The current UI culture can be set to either a specific culture (such as en-US or de-DE) or to a neutral culture (such as en or de).</span></span> <span data-ttu-id="e93bb-690">次の例では、現在の UI カルチャを fr-fr またはフランス語 (フランス) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-690">The following example sets the current UI culture to fr-FR or French (France).</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/currentuiculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.CurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/currentuiculture1.vb#1)]  
  
 <span data-ttu-id="e93bb-691">マルチスレッドアプリケーションでは、そのカルチャを表す <xref:System.Globalization.CultureInfo> オブジェクトをスレッドの <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> プロパティに割り当てることにより、任意のスレッドの UI カルチャを明示的に設定できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-691">In a multithreaded application, you can explicitly set the UI culture of any thread by assigning a <xref:System.Globalization.CultureInfo> object that represents that culture to the thread's <xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e93bb-692">カルチャを設定するスレッドが現在のスレッドである場合は、新しいカルチャを <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-692">If the thread whose culture you want to set is the current thread, you can assign the new culture to the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e93bb-693">スレッドの UI カルチャが明示的に設定されている場合、そのスレッドは、アプリケーションドメインの境界を越えて別のアプリケーションドメインでコードを実行する場合でも、同じカルチャを保持します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-693">When the UI culture of a thread is set explicitly, that thread retains the same culture even if it crosses application domain boundaries and executes code in another application domain.</span></span>  
  
<a name="Implicit"></a>   
## <a name="implicitly-setting-the-current-ui-culture"></a><span data-ttu-id="e93bb-694">現在の UI カルチャを暗黙的に設定する</span><span class="sxs-lookup"><span data-stu-id="e93bb-694">Implicitly Setting the Current UI Culture</span></span>  
 <span data-ttu-id="e93bb-695">メインアプリケーションスレッドを含むスレッドが最初に作成されるとき、既定では、現在の UI カルチャは次のように設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-695">When a thread, including the main application thread, is first created, by default its current UI culture is set as follows:</span></span>  
  
-   <span data-ttu-id="e93bb-696">プロパティ値が `null`ない場合に、現在のアプリケーションドメインの <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティによって定義されたカルチャを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-696">By using the culture defined by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property for the current application domain if the  property value is not `null`.</span></span>  
  
-   <span data-ttu-id="e93bb-697">システムの既定のカルチャを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-697">By using the system's default culture.</span></span> <span data-ttu-id="e93bb-698">Windows オペレーティングシステムを使用するシステムでは、共通言語ランタイムが Windows `GetUserDefaultUILanguage` 関数を呼び出して、現在の UI カルチャを設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-698">On systems that use the Windows operating system, the common language runtime calls the Windows `GetUserDefaultUILanguage` function to set the current  UI culture.</span></span> <span data-ttu-id="e93bb-699">`GetUserDefaultUILanguage` は、ユーザーによって設定された既定の UI カルチャを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-699">`GetUserDefaultUILanguage` returns the default UI culture set by the user.</span></span> <span data-ttu-id="e93bb-700">ユーザーが既定の UI 言語を設定していない場合は、システムに最初にインストールされたカルチャが返されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-700">If the user has not set a default UI language, it returns the culture originally installed on the system.</span></span>  
  
 <span data-ttu-id="e93bb-701">スレッドがアプリケーションの境界を越えて、別のアプリケーションドメインでコードを実行する場合、そのカルチャは、新しく作成されたスレッドと同じ方法で決定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-701">If the thread crosses application boundaries and executes code in another application domain, its culture is determined in the same way as that of a newly created thread.</span></span>  
  
 <span data-ttu-id="e93bb-702">システムでインストールされている UI カルチャまたはユーザーの優先 UI カルチャとは異なる特定の UI カルチャを設定し、アプリケーションが複数のスレッドを開始した場合は、スレッドが実行されているアプリケーションドメインの <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティにカルチャを割り当てない限り、これらのスレッドの現在の UI カルチャが `GetUserDefaultUILanguage` 関数によって返されるカルチャになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-702">Note that if you set a specific UI culture that is different from the system-installed UI culture or the user's preferred UI culture, and your application starts multiple threads, the current UI culture of those threads will be the culture returned by the `GetUserDefaultUILanguage` function, unless you assign a culture to the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property in the application domain in which the thread is executing.</span></span>  
  
<a name="Security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="e93bb-703">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="e93bb-703">Security Considerations</span></span>  
 <span data-ttu-id="e93bb-704">現在のスレッドのカルチャを変更するには、<xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> 値が設定された <xref:System.Security.Permissions.SecurityPermission> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-704">Changing the culture of the current thread requires a <xref:System.Security.Permissions.SecurityPermission> permission with the <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> value set.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e93bb-705">スレッドに関連付けられているセキュリティ状態により、スレッドの操作は危険です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-705">Manipulating threads is dangerous because of the security state associated with threads.</span></span> <span data-ttu-id="e93bb-706">したがって、このアクセス許可は、信頼できるコードにのみ付与し、その後必要な場合にのみ指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-706">Therefore, this permission should be given only to trustworthy code, and then only as necessary.</span></span> <span data-ttu-id="e93bb-707">スレッドカルチャは、信頼度の低いコードでは変更できません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-707">You cannot change thread culture in semi-trusted code.</span></span>  
  
<a name="WindowsAndCurrUI"></a>   
## <a name="the-current-ui-culture-and-uwp-apps"></a><span data-ttu-id="e93bb-708">現在の UI カルチャと UWP アプリ</span><span class="sxs-lookup"><span data-stu-id="e93bb-708">The current UI culture and UWP apps</span></span>  
 
<span data-ttu-id="e93bb-709">ユニバーサル Windows プラットフォーム (UWP) アプリでは、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティは、.NET Framework や .NET Core アプリと同様に、読み取り/書き込みが可能です。このメソッドを使用して、現在のカルチャを取得し、設定することができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-709">In Universal Windows Platform (UWP) apps, the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property is read-write, just as it is in .NET Framework and .NET Core apps; you can use it both to get and to set the current culture.</span></span> <span data-ttu-id="e93bb-710">ただし、UWP アプリでは、現在のカルチャと現在の UI カルチャを区別しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-710">However, UWP apps do not distinguish between the current culture and the current UI culture.</span></span> <span data-ttu-id="e93bb-711"><xref:System.Globalization.CultureInfo.CurrentCulture%2A> と <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> の各プロパティは、 [Windows の ApplicationModel. .resources](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) ..........</span><span class="sxs-lookup"><span data-stu-id="e93bb-711">The <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> properties map to the first value in the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) collection.</span></span>

<span data-ttu-id="e93bb-712">.NET Framework と .NET Core アプリでは、現在の UI カルチャはスレッドごとの設定であり、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティは現在のスレッドの UI カルチャのみを反映します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-712">In .NET Framework and .NET Core apps, the current UI culture is a per-thread setting, and the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property reflects the UI culture of the current thread only.</span></span> <span data-ttu-id="e93bb-713">UWP アプリでは、現在のカルチャは、グローバル設定である、 [Windows の ApplicationModel. .resources](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_)プロパティにマップされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-713">In UWP apps, the current culture maps to the [Windows.ApplicationModel.Resources.Core.ResourceManager.DefaultContext.Languages](https://docs.microsoft.com/uwp/api/windows.applicationmodel.resources.core.resourcecontext#properties_) property, which is a global setting.</span></span> <span data-ttu-id="e93bb-714"><xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティを設定すると、アプリ全体のカルチャが変更されます。カルチャは、スレッド単位で設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-714">Setting the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property changes the culture of the entire app; culture cannot be set on a per-thread basis.</span></span>    
  
## Examples  
 <span data-ttu-id="e93bb-715">次のコード例は、現在のスレッドの <xref:System.Globalization.CultureInfo.CurrentCulture%2A> と <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> を変更する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-715">The following code example demonstrates how to change the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> of the current thread.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CPP/currentculture.cpp#11)]
 [!code-csharp[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/CS/currentculture.cs#11)]
 [!code-vb[System.Globalization.CultureInfo.CurrentCulture2#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.CurrentCulture2/VB/currentculture.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-716">プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-716">The property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e93bb-717">プロパティが、リソース ファイルの検索に使用できないカルチャ名に設定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-717">The property is set to a culture name that cannot be used to locate a resource file.</span></span> <span data-ttu-id="e93bb-718">リソース ファイル名に使用できるのは、文字、数字、ハイフン、またはアンダースコアのみです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-718">Resource filenames can include only letters, numbers, hyphens, or underscores.</span></span></exception>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.DateTimeFormatInfo DateTimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.DateTimeFormatInfo DateTimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DateTimeFormat As DateTimeFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::DateTimeFormatInfo ^ DateTimeFormat { System::Globalization::DateTimeFormatInfo ^ get(); void set(System::Globalization::DateTimeFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeFormat : System.Globalization.DateTimeFormatInfo with get, set" Usage="System.Globalization.CultureInfo.DateTimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.DateTimeFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-719">カルチャに対応する、日時の表示形式を定義する <see cref="T:System.Globalization.DateTimeFormatInfo" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-719">Gets or sets a <see cref="T:System.Globalization.DateTimeFormatInfo" /> that defines the culturally appropriate format of displaying dates and times.</span></span></summary>
        <value><span data-ttu-id="e93bb-720">カルチャに対応する、日時の表示形式を定義する <see cref="T:System.Globalization.DateTimeFormatInfo" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-720">A <see cref="T:System.Globalization.DateTimeFormatInfo" /> that defines the culturally appropriate format of displaying dates and times.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a><span data-ttu-id="e93bb-721">オーバーライド</span><span class="sxs-lookup"><span data-stu-id="e93bb-721">Overrides</span></span>  
 <span data-ttu-id="e93bb-722">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-722">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-723">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-723">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="e93bb-724"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`、指定されたカルチャが Windows の現在のカルチャに一致する場合、<xref:System.Globalization.CultureInfo> は、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定や、<xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティなど、これらのオーバーライドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-724">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-725">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-725">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="e93bb-726">アプリケーションがプロパティにアクセスするまで、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティと <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティの値は計算されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-726">The value of the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property and the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property is not calculated until your application accesses the property.</span></span> <span data-ttu-id="e93bb-727">アプリケーションの実行中にユーザーが現在のカルチャを新しいカルチャに変更でき、アプリケーションが <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> または <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティにアクセスする場合、アプリケーションは元のカルチャのオーバーライドではなく、新しいカルチャの既定値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-727">If the user can change the current culture to a new culture while the application is running and then the application accesses the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> or <xref:System.Globalization.CultureInfo.NumberFormat%2A> property, the application retrieves the defaults for the new culture instead of the overrides for the original culture.</span></span> <span data-ttu-id="e93bb-728">元の現在のカルチャのオーバーライドを保持するには、現在のカルチャを変更する前に、アプリケーションが <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> および <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティにアクセスする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-728">To preserve the overrides for the original current culture, the application should access the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> and <xref:System.Globalization.CultureInfo.NumberFormat%2A> properties before changing the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-729">次のコード例は、<xref:System.Globalization.CultureInfo>に関連付けられている <xref:System.Globalization.DateTimeFormatInfo> と <xref:System.Globalization.NumberFormatInfo> インスタンスも複製することを示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-729">The following code example shows that CultureInfo.Clone also clones the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-730">プロパティが null に設定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-730">The property is set to null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e93bb-731"><see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> プロパティまたは <see cref="T:System.Globalization.DateTimeFormatInfo" /> プロパティのいずれかが設定され、<see cref="T:System.Globalization.CultureInfo" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-731">The <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property or any of the <see cref="T:System.Globalization.DateTimeFormatInfo" /> properties is set, and the <see cref="T:System.Globalization.CultureInfo" /> is read-only.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-732"><see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> が <see cref="T:System.Globalization.TaiwanCalendar" /> で、<see cref="P:System.Threading.Thread.CurrentCulture" /> が zh-tw という名前の中国語 (台湾) に設定されていない場合、<see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />、<see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />、および <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> は空の文字列 ("") を返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-732">If <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> is the <see cref="T:System.Globalization.TaiwanCalendar" /> but the <see cref="P:System.Threading.Thread.CurrentCulture" /> is not set to Chinese (Taiwan), named zh-TW, then <see cref="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName" />, <see cref="M:System.Globalization.DateTimeFormatInfo.GetEraName(System.Int32)" />, and <see cref="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName(System.Int32)" /> return an empty string ("").</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentCulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-733">現在のアプリケーション ドメインのスレッドの既定のカルチャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-733">Gets or sets the default culture for threads in the current application domain.</span></span></summary>
        <value><span data-ttu-id="e93bb-734">現在のアプリケーション ドメインのスレッドの既定のカルチャ、または現在のシステム カルチャがアプリケーション ドメインの既定のスレッド カルチャの場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-734">The default culture for threads in the current application domain, or <see langword="null" /> if the current system culture is the default thread culture in the application domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-735">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以前のバージョンでは、既定で、すべてのスレッドのカルチャが Windows システムカルチャに設定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-735">In the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and previous versions, by default, the culture of all threads is set to the Windows system culture.</span></span> <span data-ttu-id="e93bb-736">現在のカルチャが既定のシステムカルチャと異なるアプリケーションの場合、この動作は望ましくないことがあります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-736">For applications whose current culture differs from the default system culture, this behavior is often undesirable.</span></span> <span data-ttu-id="e93bb-737">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]では、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティを使用して、アプリケーションドメイン内のすべてのスレッドの既定のカルチャをアプリケーションで定義できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-737">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property enables an application to define the default culture of all threads in an application domain.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e93bb-738">アプリケーションドメインでを実行している既存のスレッドのカルチャを明示的に設定していない場合は、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティを設定すると、これらのスレッドのカルチャも変更されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-738">If you have not explicitly set the culture of any existing threads executing in an application domain, setting the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property also changes the culture of these threads.</span></span> <span data-ttu-id="e93bb-739">ただし、これらのスレッドが別のアプリケーションドメインで実行される場合、そのカルチャは、そのアプリケーションドメインの <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティによって定義されます。既定値が定義されていない場合は、既定のシステムカルチャによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-739">However, if these threads execute in another application domain, their culture is defined by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property in that application domain or, if no default value is defined, by the default system culture.</span></span> <span data-ttu-id="e93bb-740">このため、メインアプリケーションスレッドのカルチャを常に明示的に設定し、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティに依存せずにメインアプリケーションスレッドのカルチャを定義することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-740">Because of this, we recommend that you always explicitly set the culture of your main application thread, and not rely on the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property to define the culture of the main application thread.</span></span>  
  
 <span data-ttu-id="e93bb-741">明示的に設定されている場合を除き、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティの値は `null`であり、明示的なカルチャが割り当てられていないアプリケーションドメイン内のスレッドのカルチャは、既定の Windows システムカルチャによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-741">Unless it is set explicitly, the value of the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> property is `null`, and the culture of threads in an application domain that have not been assigned an explicit culture is defined by the default Windows system culture.</span></span>  
  
 <span data-ttu-id="e93bb-742">カルチャ、スレッド、およびアプリケーションドメインの詳細については、<xref:System.Globalization.CultureInfo> リファレンスページの「カルチャとスレッド」および「カルチャおよびアプリケーションドメイン」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-742">For more information about cultures, threads, and application domains, see the "Culture and threads" and "Culture and application domains" sections in the <xref:System.Globalization.CultureInfo> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-743">次の例は、新しいスレッドの現在のカルチャを定義する際の .NET Framework の既定の動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-743">The following example illustrates the default behavior of the .NET Framework in defining the current culture of a new thread.</span></span> <span data-ttu-id="e93bb-744">この例では、起動時に、既定のシステムカルチャが既にフランス語 (フランス) の場合を除き、すべてのシステムで現在のカルチャと現在の UI カルチャをフランス語 (フランス) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-744">At startup, the example sets the current culture and the current UI culture to French (France) on all systems except those on which the default system culture is already French (France).</span></span> <span data-ttu-id="e93bb-745">既定のシステムカルチャが既にフランス語 (フランス) の場合、コードは現在のカルチャと現在の UI カルチャを英語 (米国) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-745">If the default system culture is already French (France), the code sets the current culture and the current UI culture to English (United States).</span></span> <span data-ttu-id="e93bb-746">次に、`DisplayRandomNumbers` ルーチンを呼び出します。このルーチンは、3つの乱数を生成し、通貨値として表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-746">It then calls the `DisplayRandomNumbers` routine, which generates three random numbers and displays them as currency values.</span></span> <span data-ttu-id="e93bb-747">次に、新しいスレッドを作成します。これにより、`DisplayRandomNumbers` ルーチンも実行されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-747">Next, it creates a new thread, which also executes the `DisplayRandomNumbers` routine.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture1.vb#1)]  
  
 <span data-ttu-id="e93bb-748">この例の出力に示すように、システムカルチャが英語 (米国) であるコンピューターでこの例を実行すると、メインスレッドはフランス語 (フランス) カルチャの書式指定規則を使用して通貨値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-748">As the output from the example shows, when the example is run on a computer whose system culture is English (United States), the main thread displays its currency values using the formatting conventions of the French (France) culture.</span></span> <span data-ttu-id="e93bb-749">ただし、ワーカースレッドのカルチャは、アプリケーションの現在のカルチャではなく、現在の Windows システムカルチャから派生しているため、作業スレッドは英語 (米国) カルチャの書式指定規則を使用して通貨値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-749">However, because the worker thread's culture is derived from the current Windows system culture rather than the application's current culture, the work thread displays its currency values using the formatting conventions of the English (United States) culture.</span></span>  
  
 <span data-ttu-id="e93bb-750">次の例では、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティと <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティを使用して、新しいアプリケーションスレッドの現在のカルチャと現在の UI カルチャを定義します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-750">The following example uses the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties  to define the current culture and current UI culture of a new application thread.</span></span> <span data-ttu-id="e93bb-751">この例では、起動時に、既定のシステムカルチャが既にフランス語 (フランス) の場合を除き、すべてのシステムで現在のカルチャと現在の UI カルチャをフランス語 (フランス) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-751">At startup, the example sets the current culture and the current UI culture to French (France) on all systems except those on which the default system culture is already French (France).</span></span> <span data-ttu-id="e93bb-752">既定のシステムカルチャが既にフランス語 (フランス) である場合は、現在のカルチャと現在の UI カルチャが英語 (米国) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-752">If the default system culture is already French (France), it sets the current culture and the current UI culture to English (United States).</span></span> <span data-ttu-id="e93bb-753">次に、`DisplayRandomNumbers` ルーチンを呼び出します。このルーチンは、3つの乱数を生成し、通貨値として表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-753">It then calls the `DisplayRandomNumbers` routine, which generates three random numbers and displays them as currency values.</span></span> <span data-ttu-id="e93bb-754">次に、新しいスレッドを作成します。これにより、`DisplayRandomNumbers` ルーチンも実行されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-754">Next, it creates a new thread, which also executes the `DisplayRandomNumbers` routine.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/cs/defaultculture2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentCulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentculture/vb/defaultculture2.vb#2)]  
  
 <span data-ttu-id="e93bb-755">この例の出力に示すように、システムカルチャが英語 (米国) であるコンピューターでこの例を実行すると、メインスレッドとワーカースレッドの両方でフランス語 (フランス) カルチャの書式指定規則を使用して通貨値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-755">As the output from the example shows, when the example is run on a computer whose system culture is English (United States), both the main thread and the worker thread display their currency values using the formatting conventions of the French (France) culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      </Docs>
    </Member>
    <Member MemberName="DefaultThreadCurrentUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo DefaultThreadCurrentUICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo DefaultThreadCurrentUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultThreadCurrentUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ DefaultThreadCurrentUICulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultThreadCurrentUICulture : System.Globalization.CultureInfo with get, set" Usage="System.Globalization.CultureInfo.DefaultThreadCurrentUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-756">現在のアプリケーション ドメイン内のスレッドの既定 UI カルチャを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-756">Gets or sets the default UI culture for threads in the current application domain.</span></span></summary>
        <value><span data-ttu-id="e93bb-757">現在のアプリケーション ドメイン内のスレッドの既定 UI カルチャ、または現在のシステム UI カルチャがアプリケーション ドメイン内の既定スレッド UI カルチャである場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-757">The default UI culture for threads in the current application domain, or <see langword="null" /> if the current system UI culture is the default thread UI culture in the application domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-758">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以前のバージョンでは、既定で、すべてのスレッドの UI カルチャが Windows システムのカルチャに設定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-758">In the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and previous versions, by default, the UI culture of all threads is set to the Windows system culture.</span></span> <span data-ttu-id="e93bb-759">現在の UI カルチャが既定のシステムカルチャと異なるアプリケーションの場合、この動作は望ましくないことがあります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-759">For applications whose current UI culture differs from the default system culture, this behavior is often undesirable.</span></span> <span data-ttu-id="e93bb-760">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]では、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティを使用して、アプリケーションドメイン内のすべてのスレッドの既定の UI カルチャを定義できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-760">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property lets you define the default UI culture of all threads in an application domain.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e93bb-761">アプリケーションドメインで実行されている既存のスレッドの UI カルチャを明示的に設定していない場合は、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティを設定すると、これらのスレッドのカルチャも変更されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-761">If you have not explicitly set the UI culture of any existing threads executing in an application domain, setting the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property also changes the culture of these threads.</span></span> <span data-ttu-id="e93bb-762">ただし、これらのスレッドが別のアプリケーションドメインで実行される場合、そのカルチャは、そのアプリケーションドメインの <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティによって定義されます。既定値が定義されていない場合は、既定のシステムカルチャによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-762">However, if these threads execute in another application domain, their culture is defined by the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property in that application domain or, if no default value is defined, by the default system culture.</span></span> <span data-ttu-id="e93bb-763">このため、メインアプリケーションスレッドのカルチャは常に明示的に設定することをお勧めします。また、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティに依存せずに、メインアプリケーションスレッドのカルチャを定義することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-763">Because of this, we recommend that you always explicitly set the culture of your main application thread and do not rely on the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property to define the culture of the main application thread.</span></span>  
  
 <span data-ttu-id="e93bb-764">明示的に設定されていない限り、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティの値は `null`、明示的なカルチャが割り当てられていないアプリケーションドメイン内のすべてのスレッドの現在のカルチャは、既定の Windows システムカルチャによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-764">Unless it is set explicitly, the value of the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> property is `null`, and the current culture of all threads in an application domain that have not been assigned an explicit culture is defined by the default Windows system culture.</span></span>  
  
 <span data-ttu-id="e93bb-765">カルチャ、スレッド、およびアプリケーションドメインの詳細については、<xref:System.Globalization.CultureInfo> リファレンスページの「カルチャとスレッド」および「カルチャおよびアプリケーションドメイン」のセクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-765">For more information about cultures, threads, and application domains, see the "Culture and threads" and "Culture and application domains" sections in the <xref:System.Globalization.CultureInfo> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-766">次の例は、新しいスレッドの現在のカルチャを定義する際の .NET Framework の既定の動作を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-766">The following example illustrates the default behavior of the .NET Framework in defining the current culture of a new thread.</span></span> <span data-ttu-id="e93bb-767">英語とロシア語の言語リソースが使用されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-767">It uses English and Russian language resources.</span></span> <span data-ttu-id="e93bb-768">GreetingStrings という名前のテキストファイルには、英語の言語リソースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-768">The following text file named GreetingStrings.txt contains the English language resources:</span></span>  
  
```  
greeting =Hello again!  
newGreeting=Hello!  
```  
  
 <span data-ttu-id="e93bb-769">次のコマンドを使用して[リソースファイルジェネレーター](~/docs/framework/tools/resgen-exe-resource-file-generator.md)を使用することにより、GreetingStrings という名前のバイナリファイルにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-769">It is compiled to a binary .resources file named GreetingStrings.resources by using the [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) with the following command.</span></span>  
  
```console  
resgen greetingstrings.txt  
```  
  
 <span data-ttu-id="e93bb-770">GreetingStrings.ru という名前のテキストファイルには、ロシア語の言語リソースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-770">The following text file named GreetingStrings.ru-RU.txt contains the Russian language resources:</span></span>  
  
```  
greeting=Еще раз привет!  
newGreeting=Привет!  
```  
  
 <span data-ttu-id="e93bb-771">次のコマンドを使用して、[リソースファイルジェネレーター](~/docs/framework/tools/resgen-exe-resource-file-generator.md)を使用して GreetingStrings.ru という名前のバイナリ .resources ファイルにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-771">It is compiled to a binary .resources file named GreetingStrings.ru-RU.resources by using the [Resource File Generator](~/docs/framework/tools/resgen-exe-resource-file-generator.md) with the following command.</span></span>  
  
```console  
resgen greetingstrings.ru-RU.txt  
```  
  
 <span data-ttu-id="e93bb-772">次に示すアプリケーションコードは、Example1 または Example1.cs という名前のファイルに格納されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-772">The application code, which is shown below, resides in a file named Example1.vb or Example1.cs.</span></span> <span data-ttu-id="e93bb-773">これは、Visual Basic コンパイラに対して次のコマンドを使用して、実行可能ファイルにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-773">It is compiled to an executable by using the following command for the Visual Basic compiler:</span></span>  
  
```console  
vbc Example1.vb /resource:GreetingStrings.resources  
```  
  
 <span data-ttu-id="e93bb-774">C#コンパイラの場合、コマンドは次のようになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-774">For the C# compiler, the command is similar:</span></span>  
  
```console  
csc /resource:GreetingStrings.resources Example1.cs  
```  
  
 <span data-ttu-id="e93bb-775">これにより、フォールバックカルチャのリソースと共に、例の実行可能コードを含むアセンブリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-775">This creates an assembly that includes the example's executable code along with the resources for its fallback culture.</span></span> <span data-ttu-id="e93bb-776">また、次のコマンドを使用して、[アセンブリリンカー](~/docs/framework/tools/al-exe-assembly-linker.md)を使用してロシア語 (ロシア) カルチャ用のリソースファイルを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-776">You can also use the [Assembly Linker](~/docs/framework/tools/al-exe-assembly-linker.md) to create the resource file for the Russian (Russia) culture with the following command:</span></span>  
  
```console  
>al /embed:greetingstrings.ru-RU.resources /c:ru-RU /template:example1.exe /out:ru-RU\Example1.resources.dll  
```  
  
 <span data-ttu-id="e93bb-777">この例では、起動時に、既定のシステムカルチャが既にロシア語 (ロシア) である場合を除き、すべてのシステムで現在のカルチャと現在の UI カルチャをロシア語 (ロシア) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-777">At startup, the example sets the current culture and the current UI culture to Russian (Russia) on all systems except those on which the default system culture is already Russian (Russia).</span></span> <span data-ttu-id="e93bb-778">既定のシステムカルチャが既にロシア語 (ロシア) の場合、コードは現在のカルチャと現在の UI カルチャを英語 (米国) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-778">If the default system culture is already Russian (Russia), the code sets the current culture and the current UI culture to English (United States).</span></span> <span data-ttu-id="e93bb-779">次に、`ShowGreeting` ルーチンを呼び出します。これにより、最初に呼び出されたときに単純な文字列が表示され、後続のメソッド呼び出しでは少し異なる文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-779">It then calls the `ShowGreeting` routine, which displays a simple string the first time it is called and a slightly different string on subsequent method calls.</span></span> <span data-ttu-id="e93bb-780">次に、新しいスレッドを作成します。これにより、`ShowGreeting` ルーチンも実行されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-780">Next, it creates a new thread, which also executes the `ShowGreeting` routine.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example1.vb#1)]  
  
 <span data-ttu-id="e93bb-781">この例の出力に示すように、システムカルチャが英語 (米国) であるコンピューターでこの例を実行すると、メインスレッドはロシア語の初期文字列を表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-781">As the output from the example shows, when the example is run on a computer whose system culture is English (United States), the main thread displays its initial string in Russian.</span></span> <span data-ttu-id="e93bb-782">ただし、ワーカースレッドのカルチャは、アプリケーションの現在のカルチャではなく、現在の Windows システムカルチャから派生しているので、ワーカースレッドはその文字列を英語で表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-782">However, because the worker thread's culture is derived from the current Windows system culture rather than the application's current culture, the worker thread displays its string in English.</span></span>  
  
 <span data-ttu-id="e93bb-783">次の例では、<xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> プロパティと <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> プロパティを使用して、新しいアプリケーションスレッドの現在のカルチャと現在の UI カルチャを定義します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-783">The following example uses the <xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A> and <xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A> properties  to define the current culture and current UI culture of a new application thread.</span></span>  
  
 <span data-ttu-id="e93bb-784">この例では、前の例と同じリソースファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-784">The example uses the same resources files as the previous example.</span></span> <span data-ttu-id="e93bb-785">コンパイルして、ローカライズされたロシア語の言語リソースをサテライトアセンブリに埋め込むためのコマンドも同じですが、実行可能アセンブリの名前が変更される点が異なります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-785">The commands to compile and to embed the localized Russian language resources into a satellite assembly are also identical, except that the name of the executable assembly changes.</span></span>  
  
 <span data-ttu-id="e93bb-786">この例では、起動時に、既定のシステムカルチャが既にロシア語 (ロシア) である場合を除き、すべてのシステムで現在のカルチャと現在の UI カルチャをロシア語 (ロシア) に設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-786">At startup, the example sets the current culture and the current UI culture to Russian (Russia) on all systems except those on which the default system culture is already Russian (Russia).</span></span> <span data-ttu-id="e93bb-787">既定のシステムカルチャが既にロシア語 (ロシア) である場合は、現在のカルチャと現在の UI カルチャが英語 (米国) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-787">If the default system culture is already Russian (Russia), it sets the current culture and the current UI culture to English (United States).</span></span> <span data-ttu-id="e93bb-788">次に、`ShowGreeting` ルーチンを呼び出します。これにより、最初に呼び出されたときに単純な文字列が表示され、後続のメソッド呼び出しでは少し異なる文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-788">It then calls the `ShowGreeting` routine, which displays a simple string the first time it is called and a slightly different string on subsequent method calls.</span></span> <span data-ttu-id="e93bb-789">次に、新しいスレッドを作成します。これにより、`ShowGreeting` ルーチンも実行されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-789">Next, it creates a new thread, which also executes the `ShowGreeting` routine.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/cs/example2.cs#2)]
 [!code-vb[System.Globalization.CultureInfo.DefaultThreadCurrentUICulture#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.defaultthreadcurrentuiculture/vb/example2.vb#2)]  
  
 <span data-ttu-id="e93bb-790">この例の出力に示すように、システムカルチャが英語 (米国) であるコンピューターでこの例を実行すると、メインスレッドとワーカースレッドの両方で、ロシア語の言語で文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-790">As the output from the example shows, when the example is run on a computer whose system culture is English (United States), both the main thread and the worker thread display their strings in the Russian language.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e93bb-791">設定操作で、<see cref="P:System.Globalization.CultureInfo.Name" /> プロパティ値が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-791">In a set operation, the <see cref="P:System.Globalization.CultureInfo.Name" /> property value is invalid.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.DefaultThreadCurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Globalization.CultureInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-792">完全にローカライズされたカルチャ名を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-792">Gets the full localized culture name.</span></span></summary>
        <value><span data-ttu-id="e93bb-793">完全にローカライズされた *languagefull* [*country/regionfull*] という形式のカルチャ名。 *languagefull* は言語の完全名であり、 *country/regionfull* は国/地域の完全名です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-793">The full localized culture name in the format *languagefull* [*country/regionfull*], where *languagefull* is the full name of the language and *country/regionfull* is the full name of the country/region.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-794">このプロパティは、<xref:System.Globalization.CultureInfo> オブジェクトのローカライズされた名前を表します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-794">This property represents the localized name of the <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 <span data-ttu-id="e93bb-795">カルチャ名は、スクリプトまたは書式設定の規則によって異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-795">Culture names may vary due to scripting or formatting conventions.</span></span> <span data-ttu-id="e93bb-796">表示には返された名前を使用する必要があり、解析を試行することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-796">You should use the returned name for display, and not attempt to parse it.</span></span>  
  
 <span data-ttu-id="e93bb-797"><xref:System.Globalization.CultureAndRegionInfoBuilder> クラスによってカスタムカルチャが作成される場合、<xref:System.Globalization.CultureInfo.DisplayName%2A> プロパティは <xref:System.Globalization.CultureInfo.NativeName%2A> プロパティの値に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-797">If a custom culture is created by means of the <xref:System.Globalization.CultureAndRegionInfoBuilder> class, the <xref:System.Globalization.CultureInfo.DisplayName%2A> property is initialized to the value of the <xref:System.Globalization.CultureInfo.NativeName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-798">次のコード例では、ニュートラルカルチャのいくつかのプロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-798">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-799">この例では、zh-tw と zh-tw のカルチャをそれぞれ0x0004 および0x7C04 カルチャ識別子と共に表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-799">The example displays the zh-CHS and zh-CHT cultures with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="e93bb-800">ただし、Windows Vista アプリケーションでは、zh-hant の代わりに zh-tw と zh-tw Zh-tw 名の代わりに zh-tw-Hans 名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-800">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-801">Zh-tw と zh-tw の Hans は、現在の標準を表します。古い名前を使用する理由がない限り、この名前を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-801">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.EnglishName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnglishName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnglishName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnglishName : string" Usage="System.Globalization.CultureInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-802">英語で表した "*languagefull* [*country/regionfull*]" という形式のカルチャ名を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-802">Gets the culture name in the format *languagefull* [*country/regionfull*] in English.</span></span></summary>
        <value><span data-ttu-id="e93bb-803">英語で表した *languagefull* [*country/regionfull*] という形式のカルチャ名。 *languagefull* は言語の完全名であり、 *country/regionfull* は国/地域の完全名です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-803">The culture name in the format *languagefull* [*country/regionfull*] in English, where *languagefull* is the full name of the language and *country/regionfull* is the full name of the country/region.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-804">たとえば、特定のカルチャ名 en-us の <xref:System.Globalization.CultureInfo.EnglishName%2A> は、"English (米国)" です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-804">For example, the <xref:System.Globalization.CultureInfo.EnglishName%2A> for the specific culture name en-US is "English (United States)".</span></span>  
  
 <span data-ttu-id="e93bb-805">.NET Framework の言語バージョンに関係なく、このプロパティの値は同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-805">The value of this property is the same, regardless of the language version of the .NET Framework.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-806">次のコード例では、ニュートラルカルチャのいくつかのプロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-806">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-807">この例では、zh-CHS および zh-CHT の古いカルチャ名を、カルチャ識別子としてそれぞれ 0x0004 と 0x7C04 を使用して表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-807">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="e93bb-808">ただし、Windows Vista アプリケーションでは、zh-hant の代わりに zh-tw と zh-tw Zh-tw 名の代わりに zh-tw-Hans 名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-808">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-809">Zh-tw と zh-tw の Hans は、現在の標準を表します。古い名前を使用する理由がない限り、この名前を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-809">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cultureInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e93bb-810">現在の <see cref="T:System.Globalization.CultureInfo" /> と比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e93bb-810">The object to compare with the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></param>
        <summary><span data-ttu-id="e93bb-811">指定したオブジェクトが現在の <see cref="T:System.Globalization.CultureInfo" /> と同じカルチャかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-811">Determines whether the specified object is the same culture as the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <returns><span data-ttu-id="e93bb-812"><see langword="true" /> が現在の <paramref name="value" /> と同じカルチャの場合は <see cref="T:System.Globalization.CultureInfo" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-812"><see langword="true" /> if <paramref name="value" /> is the same culture as the current <see cref="T:System.Globalization.CultureInfo" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-813">このメソッドは、<xref:System.Object.Equals%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-813">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e93bb-814">2つの <xref:System.Globalization.CultureInfo> オブジェクトは、<xref:System.Globalization.CultureInfo.Name%2A> と <xref:System.Globalization.CultureInfo.CompareInfo%2A> プロパティが等しい場合に等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-814">Two <xref:System.Globalization.CultureInfo> objects are considered equal if their <xref:System.Globalization.CultureInfo.Name%2A> and <xref:System.Globalization.CultureInfo.CompareInfo%2A> properties are equal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetConsoleFallbackUICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetConsoleFallbackUICulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetConsoleFallbackUICulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetConsoleFallbackUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConsoleFallbackUICulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetConsoleFallbackUICulture();" />
      <MemberSignature Language="F#" Value="member this.GetConsoleFallbackUICulture : unit -&gt; System.Globalization.CultureInfo" Usage="cultureInfo.GetConsoleFallbackUICulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e93bb-815">グラフィック ユーザー インターフェイスの既定のカルチャが不適切な場合、コンソール アプリケーションに適した代替のユーザー インターフェイス カルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-815">Gets an alternate user interface culture suitable for console applications when the default graphic user interface culture is unsuitable.</span></span></summary>
        <returns><span data-ttu-id="e93bb-816">コンソール上のテキストの読み取りおよび表示に使用する代替カルチャ。</span><span class="sxs-lookup"><span data-stu-id="e93bb-816">An alternate culture that is used to read and display text on the console.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-817">アラビア語、ヘブライ語、ウルドゥ語、およびシリア文字などの言語は、双方向テキストに基づいています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-817">Languages such as Arabic, Hebrew, Urdu, and Syriac are based on bidirectional text.</span></span> <span data-ttu-id="e93bb-818">グラフィカルユーザーインターフェイスを備えた Windows アプリケーションでは、双方向言語がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-818">Windows applications, which have a graphical user interface, support bidirectional languages.</span></span> <span data-ttu-id="e93bb-819">ただし、オペレーティングシステムコンソールのテキストユーザーインターフェイスを使用するコンソールアプリケーションでは、双方向サポートは提供されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-819">However, console applications, which employ the text user interface of the operating system console, do not provide bidirectional support.</span></span> <span data-ttu-id="e93bb-820">このため、コンソールアプリケーションをアラビア語またはヘブライ語にローカライズすると、アプリケーションでコンソール画面に読み取り不可能なテキストが表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-820">Therefore, if you localize a console application to Arabic or Hebrew, your application displays unreadable text on the console screen.</span></span>  
  
 <span data-ttu-id="e93bb-821">ユーザーインターフェイスカルチャは、ユーザーの入力と出力をサポートするためにアプリケーションが必要とするリソースを指定します。既定では、オペレーティングシステムのカルチャと同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-821">The user interface culture specifies the resources an application needs to support user input and output, and by default is the same as the operating system culture.</span></span> <span data-ttu-id="e93bb-822">たとえば、<xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> プロパティはアラビア語のオペレーティングシステムのアラビア語のカルチャを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-822">For example, the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=nameWithType> property returns an Arabic culture for an Arabic operating system.</span></span> <span data-ttu-id="e93bb-823"><xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> メソッドを使用して、コンソールアプリケーションのユーザーインターフェイスに適したカルチャを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-823">Use the <xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A> method to retrieve a culture suitable for a console application user interface.</span></span> <span data-ttu-id="e93bb-824">アプリケーションは、フォールバックユーザーインターフェイスカルチャを取得した後、現在のスレッドの現在のユーザーインターフェイスカルチャにカルチャを割り当てる必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-824">After your application retrieves the fallback user interface culture, it should assign the culture to the current user interface culture of the current thread.</span></span> <span data-ttu-id="e93bb-825">詳細については、「<xref:System.Globalization.CultureInfo.CurrentUICulture%2A> プロパティ」の「現在の UI カルチャを明示的に設定する」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-825">For more information, see the "Explicitly Setting the Current UI Culture" section of the <xref:System.Globalization.CultureInfo.CurrentUICulture%2A> property.</span></span>  
  
 <span data-ttu-id="e93bb-826">次に示すのは、定義済みのカルチャ名とは異なるフォールバックユーザーインターフェイスカルチャ名を持つ定義済みカルチャです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-826">The following are predefined cultures that have a different fallback user interface culture name from the predefined culture name.</span></span>  
  
|<span data-ttu-id="e93bb-827">定義済みカルチャ</span><span class="sxs-lookup"><span data-stu-id="e93bb-827">Predefined culture</span></span>|<span data-ttu-id="e93bb-828">カルチャ名</span><span class="sxs-lookup"><span data-stu-id="e93bb-828">Culture name</span></span>|<span data-ttu-id="e93bb-829">フォールバックユーザーインターフェイスのカルチャ名</span><span class="sxs-lookup"><span data-stu-id="e93bb-829">Fallback user interface culture name</span></span>|  
|------------------------|------------------|------------------------------------------|  
|<span data-ttu-id="e93bb-830">アムハラ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-830">Amharic</span></span>|<span data-ttu-id="e93bb-831">使い慣れ</span><span class="sxs-lookup"><span data-stu-id="e93bb-831">am</span></span>|<span data-ttu-id="e93bb-832">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-832">en-US</span></span>|  
|<span data-ttu-id="e93bb-833">アムハラ語 (エチオピア)</span><span class="sxs-lookup"><span data-stu-id="e93bb-833">Amharic (Ethiopia)</span></span>|<span data-ttu-id="e93bb-834">am-ET</span><span class="sxs-lookup"><span data-stu-id="e93bb-834">am-ET</span></span>|<span data-ttu-id="e93bb-835">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-835">en-US</span></span>|  
|<span data-ttu-id="e93bb-836">(ニュートラルアラビア語)</span><span class="sxs-lookup"><span data-stu-id="e93bb-836">(neutral Arabic)</span></span>|<span data-ttu-id="e93bb-837">ar</span><span class="sxs-lookup"><span data-stu-id="e93bb-837">ar</span></span>|<span data-ttu-id="e93bb-838">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-838">en-US</span></span>|  
|<span data-ttu-id="e93bb-839">アラビア語 (U.A.E.)</span><span class="sxs-lookup"><span data-stu-id="e93bb-839">Arabic (U.A.E.)</span></span>|<span data-ttu-id="e93bb-840">ar-AE</span><span class="sxs-lookup"><span data-stu-id="e93bb-840">ar-AE</span></span>|<span data-ttu-id="e93bb-841">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-841">en-US</span></span>|  
|<span data-ttu-id="e93bb-842">アラビア語 (バーレーン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-842">Arabic (Bahrain)</span></span>|<span data-ttu-id="e93bb-843">ar-BH</span><span class="sxs-lookup"><span data-stu-id="e93bb-843">ar-BH</span></span>|<span data-ttu-id="e93bb-844">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-844">en-US</span></span>|  
|<span data-ttu-id="e93bb-845">アラビア語 (アルジェリア)</span><span class="sxs-lookup"><span data-stu-id="e93bb-845">Arabic (Algeria)</span></span>|<span data-ttu-id="e93bb-846">ar-DZ</span><span class="sxs-lookup"><span data-stu-id="e93bb-846">ar-DZ</span></span>|<span data-ttu-id="e93bb-847">fr-FR</span><span class="sxs-lookup"><span data-stu-id="e93bb-847">fr-FR</span></span>|  
|<span data-ttu-id="e93bb-848">アラビア語 (エジプト)</span><span class="sxs-lookup"><span data-stu-id="e93bb-848">Arabic (Egypt)</span></span>|<span data-ttu-id="e93bb-849">ar-EG</span><span class="sxs-lookup"><span data-stu-id="e93bb-849">ar-EG</span></span>|<span data-ttu-id="e93bb-850">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-850">en-US</span></span>|  
|<span data-ttu-id="e93bb-851">アラビア語 (イラク)</span><span class="sxs-lookup"><span data-stu-id="e93bb-851">Arabic (Iraq)</span></span>|<span data-ttu-id="e93bb-852">ar-IQ</span><span class="sxs-lookup"><span data-stu-id="e93bb-852">ar-IQ</span></span>|<span data-ttu-id="e93bb-853">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-853">en-US</span></span>|  
|<span data-ttu-id="e93bb-854">アラビア語 (ヨルダン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-854">Arabic (Jordan)</span></span>|<span data-ttu-id="e93bb-855">ar-JO</span><span class="sxs-lookup"><span data-stu-id="e93bb-855">ar-JO</span></span>|<span data-ttu-id="e93bb-856">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-856">en-US</span></span>|  
|<span data-ttu-id="e93bb-857">アラビア語 (クウェート)</span><span class="sxs-lookup"><span data-stu-id="e93bb-857">Arabic (Kuwait)</span></span>|<span data-ttu-id="e93bb-858">ar-KW</span><span class="sxs-lookup"><span data-stu-id="e93bb-858">ar-KW</span></span>|<span data-ttu-id="e93bb-859">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-859">en-US</span></span>|  
|<span data-ttu-id="e93bb-860">アラビア語 (レバノン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-860">Arabic (Lebanon)</span></span>|<span data-ttu-id="e93bb-861">ar-LB</span><span class="sxs-lookup"><span data-stu-id="e93bb-861">ar-LB</span></span>|<span data-ttu-id="e93bb-862">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-862">en-US</span></span>|  
|<span data-ttu-id="e93bb-863">アラビア語 (リビア)</span><span class="sxs-lookup"><span data-stu-id="e93bb-863">Arabic (Libya)</span></span>|<span data-ttu-id="e93bb-864">ar-(& a)</span><span class="sxs-lookup"><span data-stu-id="e93bb-864">ar-LY</span></span>|<span data-ttu-id="e93bb-865">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-865">en-US</span></span>|  
|<span data-ttu-id="e93bb-866">アラビア語 (モロッコ)</span><span class="sxs-lookup"><span data-stu-id="e93bb-866">Arabic (Morocco)</span></span>|<span data-ttu-id="e93bb-867">ar-MA</span><span class="sxs-lookup"><span data-stu-id="e93bb-867">ar-MA</span></span>|<span data-ttu-id="e93bb-868">fr-FR</span><span class="sxs-lookup"><span data-stu-id="e93bb-868">fr-FR</span></span>|  
|<span data-ttu-id="e93bb-869">アラビア語 (オマーン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-869">Arabic (Oman)</span></span>|<span data-ttu-id="e93bb-870">ar-OM</span><span class="sxs-lookup"><span data-stu-id="e93bb-870">ar-OM</span></span>|<span data-ttu-id="e93bb-871">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-871">en-US</span></span>|  
|<span data-ttu-id="e93bb-872">アラビア語 (カタール)</span><span class="sxs-lookup"><span data-stu-id="e93bb-872">Arabic (Qatar)</span></span>|<span data-ttu-id="e93bb-873">ar-QA</span><span class="sxs-lookup"><span data-stu-id="e93bb-873">ar-QA</span></span>|<span data-ttu-id="e93bb-874">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-874">en-US</span></span>|  
|<span data-ttu-id="e93bb-875">アラビア語 (サウジアラビア)</span><span class="sxs-lookup"><span data-stu-id="e93bb-875">Arabic (Saudi Arabia)</span></span>|<span data-ttu-id="e93bb-876">ar-SA</span><span class="sxs-lookup"><span data-stu-id="e93bb-876">ar-SA</span></span>|<span data-ttu-id="e93bb-877">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-877">en-US</span></span>|  
|<span data-ttu-id="e93bb-878">アラビア語 (シリア)</span><span class="sxs-lookup"><span data-stu-id="e93bb-878">Arabic (Syria)</span></span>|<span data-ttu-id="e93bb-879">ar-SY</span><span class="sxs-lookup"><span data-stu-id="e93bb-879">ar-SY</span></span>|<span data-ttu-id="e93bb-880">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-880">en-US</span></span>|  
|<span data-ttu-id="e93bb-881">アラビア語 (チュニジア)</span><span class="sxs-lookup"><span data-stu-id="e93bb-881">Arabic (Tunisia)</span></span>|<span data-ttu-id="e93bb-882">ar-TN</span><span class="sxs-lookup"><span data-stu-id="e93bb-882">ar-TN</span></span>|<span data-ttu-id="e93bb-883">fr-FR</span><span class="sxs-lookup"><span data-stu-id="e93bb-883">fr-FR</span></span>|  
|<span data-ttu-id="e93bb-884">アラビア語 (イエメン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-884">Arabic (Yemen)</span></span>|<span data-ttu-id="e93bb-885">ar</span><span class="sxs-lookup"><span data-stu-id="e93bb-885">ar-YE</span></span>|<span data-ttu-id="e93bb-886">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-886">en-US</span></span>|  
|<span data-ttu-id="e93bb-887">アッサム語</span><span class="sxs-lookup"><span data-stu-id="e93bb-887">Assamese</span></span>|<span data-ttu-id="e93bb-888">as</span><span class="sxs-lookup"><span data-stu-id="e93bb-888">as</span></span>|<span data-ttu-id="e93bb-889">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-889">en-US</span></span>|  
|<span data-ttu-id="e93bb-890">アッサム語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-890">Assamese (India)</span></span>|<span data-ttu-id="e93bb-891">as-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-891">as-IN</span></span>|<span data-ttu-id="e93bb-892">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-892">en-US</span></span>|  
|<span data-ttu-id="e93bb-893">ベンガル語</span><span class="sxs-lookup"><span data-stu-id="e93bb-893">Bangla</span></span>|<span data-ttu-id="e93bb-894">bn</span><span class="sxs-lookup"><span data-stu-id="e93bb-894">bn</span></span>|<span data-ttu-id="e93bb-895">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-895">en-US</span></span>|  
|<span data-ttu-id="e93bb-896">ベンガル語 (バングラデシュ)</span><span class="sxs-lookup"><span data-stu-id="e93bb-896">Bangla (Bangladesh)</span></span>|<span data-ttu-id="e93bb-897">bn-BD</span><span class="sxs-lookup"><span data-stu-id="e93bb-897">bn-BD</span></span>|<span data-ttu-id="e93bb-898">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-898">en-US</span></span>|  
|<span data-ttu-id="e93bb-899">ベンガル語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-899">Bangla (India)</span></span>|<span data-ttu-id="e93bb-900">bn-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-900">bn-IN</span></span>|<span data-ttu-id="e93bb-901">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-901">en-US</span></span>|  
|<span data-ttu-id="e93bb-902">チベット語</span><span class="sxs-lookup"><span data-stu-id="e93bb-902">Tibetan</span></span>|<span data-ttu-id="e93bb-903">bo</span><span class="sxs-lookup"><span data-stu-id="e93bb-903">bo</span></span>|<span data-ttu-id="e93bb-904">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-904">en-US</span></span>|  
|<span data-ttu-id="e93bb-905">チベット語 (PRC)</span><span class="sxs-lookup"><span data-stu-id="e93bb-905">Tibetan (PRC)</span></span>|<span data-ttu-id="e93bb-906">bo-CN</span><span class="sxs-lookup"><span data-stu-id="e93bb-906">bo-CN</span></span>|<span data-ttu-id="e93bb-907">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-907">en-US</span></span>|  
|<span data-ttu-id="e93bb-908">ディベヒ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-908">Divehi</span></span>|<span data-ttu-id="e93bb-909">dv</span><span class="sxs-lookup"><span data-stu-id="e93bb-909">dv</span></span>|<span data-ttu-id="e93bb-910">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-910">en-US</span></span>|  
|<span data-ttu-id="e93bb-911">ディベヒ語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-911">Divehi (India)</span></span>|<span data-ttu-id="e93bb-912">dv-MV</span><span class="sxs-lookup"><span data-stu-id="e93bb-912">dv-MV</span></span>|<span data-ttu-id="e93bb-913">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-913">en-US</span></span>|  
|<span data-ttu-id="e93bb-914">ペルシャ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-914">Persian</span></span>|<span data-ttu-id="e93bb-915">fa</span><span class="sxs-lookup"><span data-stu-id="e93bb-915">fa</span></span>|<span data-ttu-id="e93bb-916">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-916">en-US</span></span>|  
|<span data-ttu-id="e93bb-917">ペルシア語 (イラン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-917">Persian (Iran)</span></span>|<span data-ttu-id="e93bb-918">fa-IR</span><span class="sxs-lookup"><span data-stu-id="e93bb-918">fa-IR</span></span>|<span data-ttu-id="e93bb-919">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-919">en-US</span></span>|  
|<span data-ttu-id="e93bb-920">グジャラート語</span><span class="sxs-lookup"><span data-stu-id="e93bb-920">Gujarati</span></span>|<span data-ttu-id="e93bb-921">gu</span><span class="sxs-lookup"><span data-stu-id="e93bb-921">gu</span></span>|<span data-ttu-id="e93bb-922">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-922">en-US</span></span>|  
|<span data-ttu-id="e93bb-923">グジャラート語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-923">Gujarati (India)</span></span>|<span data-ttu-id="e93bb-924">gu-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-924">gu-IN</span></span>|<span data-ttu-id="e93bb-925">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-925">en-US</span></span>|  
|<span data-ttu-id="e93bb-926">ヘブライ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-926">Hebrew</span></span>|<span data-ttu-id="e93bb-927">he</span><span class="sxs-lookup"><span data-stu-id="e93bb-927">he</span></span>|<span data-ttu-id="e93bb-928">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-928">en-US</span></span>|  
|<span data-ttu-id="e93bb-929">ヘブライ語 (イスラエル)</span><span class="sxs-lookup"><span data-stu-id="e93bb-929">Hebrew (Israel)</span></span>|<span data-ttu-id="e93bb-930">he-IL</span><span class="sxs-lookup"><span data-stu-id="e93bb-930">he-IL</span></span>|<span data-ttu-id="e93bb-931">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-931">en-US</span></span>|  
|<span data-ttu-id="e93bb-932">ヒンディー語</span><span class="sxs-lookup"><span data-stu-id="e93bb-932">Hindi</span></span>|<span data-ttu-id="e93bb-933">hi</span><span class="sxs-lookup"><span data-stu-id="e93bb-933">hi</span></span>|<span data-ttu-id="e93bb-934">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-934">en-US</span></span>|  
|<span data-ttu-id="e93bb-935">ヒンディー語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-935">Hindi (India)</span></span>|<span data-ttu-id="e93bb-936">hi-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-936">hi-IN</span></span>|<span data-ttu-id="e93bb-937">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-937">en-US</span></span>|  
|<span data-ttu-id="e93bb-938">イ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-938">Yi</span></span>|<span data-ttu-id="e93bb-939">2</span><span class="sxs-lookup"><span data-stu-id="e93bb-939">ii</span></span>|<span data-ttu-id="e93bb-940">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-940">en-US</span></span>|  
|<span data-ttu-id="e93bb-941">イ語 (PRC)</span><span class="sxs-lookup"><span data-stu-id="e93bb-941">Yi (PRC)</span></span>|<span data-ttu-id="e93bb-942">ii-CN</span><span class="sxs-lookup"><span data-stu-id="e93bb-942">ii-CN</span></span>|<span data-ttu-id="e93bb-943">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-943">en-US</span></span>|  
|<span data-ttu-id="e93bb-944">Inukitut 音節</span><span class="sxs-lookup"><span data-stu-id="e93bb-944">Inukitut Syllabics</span></span>|<span data-ttu-id="e93bb-945">iu</span><span class="sxs-lookup"><span data-stu-id="e93bb-945">iu-Cans</span></span>|<span data-ttu-id="e93bb-946">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-946">en-US</span></span>|  
|<span data-ttu-id="e93bb-947">Inukitut 音節文字 (カナダ)</span><span class="sxs-lookup"><span data-stu-id="e93bb-947">Inukitut Syllabics (Canada)</span></span>|<span data-ttu-id="e93bb-948">iu</span><span class="sxs-lookup"><span data-stu-id="e93bb-948">iu-Cans-CA</span></span>|<span data-ttu-id="e93bb-949">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-949">en-US</span></span>|  
|<span data-ttu-id="e93bb-950">クメール語</span><span class="sxs-lookup"><span data-stu-id="e93bb-950">Khmer</span></span>|<span data-ttu-id="e93bb-951">km</span><span class="sxs-lookup"><span data-stu-id="e93bb-951">km</span></span>|<span data-ttu-id="e93bb-952">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-952">en-US</span></span>|  
|<span data-ttu-id="e93bb-953">クメール語 (カンボジア)</span><span class="sxs-lookup"><span data-stu-id="e93bb-953">Khmer (Cambodia)</span></span>|<span data-ttu-id="e93bb-954">km-KH</span><span class="sxs-lookup"><span data-stu-id="e93bb-954">km-KH</span></span>|<span data-ttu-id="e93bb-955">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-955">en-US</span></span>|  
|<span data-ttu-id="e93bb-956">カンナダ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-956">Kannada</span></span>|<span data-ttu-id="e93bb-957">kn</span><span class="sxs-lookup"><span data-stu-id="e93bb-957">kn</span></span>|<span data-ttu-id="e93bb-958">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-958">en-US</span></span>|  
|<span data-ttu-id="e93bb-959">カンナダ語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-959">Kannada (India)</span></span>|<span data-ttu-id="e93bb-960">kn-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-960">kn-IN</span></span>|<span data-ttu-id="e93bb-961">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-961">en-US</span></span>|  
|<span data-ttu-id="e93bb-962">コーンクニー語</span><span class="sxs-lookup"><span data-stu-id="e93bb-962">Konkani</span></span>|<span data-ttu-id="e93bb-963">kok</span><span class="sxs-lookup"><span data-stu-id="e93bb-963">kok</span></span>|<span data-ttu-id="e93bb-964">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-964">en-US</span></span>|  
|<span data-ttu-id="e93bb-965">コーンクニー語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-965">Konkani (India)</span></span>|<span data-ttu-id="e93bb-966">kok-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-966">kok-IN</span></span>|<span data-ttu-id="e93bb-967">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-967">en-US</span></span>|  
|<span data-ttu-id="e93bb-968">ラオス語</span><span class="sxs-lookup"><span data-stu-id="e93bb-968">Lao</span></span>|<span data-ttu-id="e93bb-969">lo</span><span class="sxs-lookup"><span data-stu-id="e93bb-969">lo</span></span>|<span data-ttu-id="e93bb-970">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-970">en-US</span></span>|  
|<span data-ttu-id="e93bb-971">ラオス語 (ラオス人民ラオス)</span><span class="sxs-lookup"><span data-stu-id="e93bb-971">Lao (Lao P.D.R.)</span></span>|<span data-ttu-id="e93bb-972">lo-LA</span><span class="sxs-lookup"><span data-stu-id="e93bb-972">lo-LA</span></span>|<span data-ttu-id="e93bb-973">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-973">en-US</span></span>|  
|<span data-ttu-id="e93bb-974">マラヤーラム語</span><span class="sxs-lookup"><span data-stu-id="e93bb-974">Malayalam</span></span>|<span data-ttu-id="e93bb-975">ml</span><span class="sxs-lookup"><span data-stu-id="e93bb-975">ml</span></span>|<span data-ttu-id="e93bb-976">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-976">en-US</span></span>|  
|<span data-ttu-id="e93bb-977">マラヤーラム語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-977">Malayalam (India)</span></span>|<span data-ttu-id="e93bb-978">ml-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-978">ml-IN</span></span>|<span data-ttu-id="e93bb-979">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-979">en-US</span></span>|  
|<span data-ttu-id="e93bb-980">モホーク</span><span class="sxs-lookup"><span data-stu-id="e93bb-980">Mohawk</span></span>|<span data-ttu-id="e93bb-981">moh</span><span class="sxs-lookup"><span data-stu-id="e93bb-981">moh</span></span>|<span data-ttu-id="e93bb-982">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-982">en-US</span></span>|  
|<span data-ttu-id="e93bb-983">モホーク語 (カナダ)</span><span class="sxs-lookup"><span data-stu-id="e93bb-983">Mohawk (Canada)</span></span>|<span data-ttu-id="e93bb-984">moh-CA</span><span class="sxs-lookup"><span data-stu-id="e93bb-984">moh-CA</span></span>|<span data-ttu-id="e93bb-985">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-985">en-US</span></span>|  
|<span data-ttu-id="e93bb-986">マラーティー語</span><span class="sxs-lookup"><span data-stu-id="e93bb-986">Marathi</span></span>|<span data-ttu-id="e93bb-987">mr</span><span class="sxs-lookup"><span data-stu-id="e93bb-987">mr</span></span>|<span data-ttu-id="e93bb-988">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-988">en-US</span></span>|  
|<span data-ttu-id="e93bb-989">マラーティー語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-989">Marathi (India)</span></span>|<span data-ttu-id="e93bb-990">mr-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-990">mr-IN</span></span>|<span data-ttu-id="e93bb-991">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-991">en-US</span></span>|  
|<span data-ttu-id="e93bb-992">ネパール語</span><span class="sxs-lookup"><span data-stu-id="e93bb-992">Nepali</span></span>|<span data-ttu-id="e93bb-993">ne</span><span class="sxs-lookup"><span data-stu-id="e93bb-993">ne</span></span>|<span data-ttu-id="e93bb-994">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-994">en-US</span></span>|  
|<span data-ttu-id="e93bb-995">ネパール語 (ネパール)</span><span class="sxs-lookup"><span data-stu-id="e93bb-995">Nepali (Nepal)</span></span>|<span data-ttu-id="e93bb-996">ne-NP</span><span class="sxs-lookup"><span data-stu-id="e93bb-996">ne-NP</span></span>|<span data-ttu-id="e93bb-997">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-997">en-US</span></span>|  
|<span data-ttu-id="e93bb-998">ノルウェー語</span><span class="sxs-lookup"><span data-stu-id="e93bb-998">Norwegian</span></span>|<span data-ttu-id="e93bb-999">no</span><span class="sxs-lookup"><span data-stu-id="e93bb-999">no</span></span>|<span data-ttu-id="e93bb-1000">nb-NO</span><span class="sxs-lookup"><span data-stu-id="e93bb-1000">nb-NO</span></span>|  
|<span data-ttu-id="e93bb-1001">Odiya</span><span class="sxs-lookup"><span data-stu-id="e93bb-1001">Odiya</span></span>|<span data-ttu-id="e93bb-1002">or</span><span class="sxs-lookup"><span data-stu-id="e93bb-1002">or</span></span>|<span data-ttu-id="e93bb-1003">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1003">en-US</span></span>|  
|<span data-ttu-id="e93bb-1004">Odiya (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1004">Odiya (India)</span></span>|<span data-ttu-id="e93bb-1005">or-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-1005">or-IN</span></span>|<span data-ttu-id="e93bb-1006">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1006">en-US</span></span>|  
|<span data-ttu-id="e93bb-1007">パンジャーブ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1007">Punjabi</span></span>|<span data-ttu-id="e93bb-1008">pa</span><span class="sxs-lookup"><span data-stu-id="e93bb-1008">pa</span></span>|<span data-ttu-id="e93bb-1009">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1009">en-US</span></span>|  
|<span data-ttu-id="e93bb-1010">パンジャーブ語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1010">Punjabi (India)</span></span>|<span data-ttu-id="e93bb-1011">pa-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-1011">pa-IN</span></span>|<span data-ttu-id="e93bb-1012">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1012">en-US</span></span>|  
|<span data-ttu-id="e93bb-1013">ダリー語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1013">Dari</span></span>|<span data-ttu-id="e93bb-1014">pr</span><span class="sxs-lookup"><span data-stu-id="e93bb-1014">prs</span></span>|<span data-ttu-id="e93bb-1015">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1015">en-US</span></span>|  
|<span data-ttu-id="e93bb-1016">ダリー語 (アフガニスタン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1016">Dari (Afghanistan)</span></span>|<span data-ttu-id="e93bb-1017">pr-AF</span><span class="sxs-lookup"><span data-stu-id="e93bb-1017">prs-AF</span></span>|<span data-ttu-id="e93bb-1018">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1018">en-US</span></span>|  
|<span data-ttu-id="e93bb-1019">パシュトウ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1019">Pashto</span></span>|<span data-ttu-id="e93bb-1020">ps</span><span class="sxs-lookup"><span data-stu-id="e93bb-1020">ps</span></span>|<span data-ttu-id="e93bb-1021">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1021">en-US</span></span>|  
|<span data-ttu-id="e93bb-1022">パシュトゥー語 (アフガニスタン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1022">Pashto (Afghanistan)</span></span>|<span data-ttu-id="e93bb-1023">ps-AF</span><span class="sxs-lookup"><span data-stu-id="e93bb-1023">ps-AF</span></span>|<span data-ttu-id="e93bb-1024">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1024">en-US</span></span>|  
|<span data-ttu-id="e93bb-1025">サンスクリット語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1025">Sanskrit</span></span>|<span data-ttu-id="e93bb-1026">sa</span><span class="sxs-lookup"><span data-stu-id="e93bb-1026">sa</span></span>|<span data-ttu-id="e93bb-1027">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1027">en-US</span></span>|  
|<span data-ttu-id="e93bb-1028">サンスクリット語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1028">Sanskrit (India)</span></span>|<span data-ttu-id="e93bb-1029">sa-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-1029">sa-IN</span></span>|<span data-ttu-id="e93bb-1030">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1030">en-US</span></span>|  
|<span data-ttu-id="e93bb-1031">シンハラ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1031">Sinhala</span></span>|<span data-ttu-id="e93bb-1032">si</span><span class="sxs-lookup"><span data-stu-id="e93bb-1032">si</span></span>|<span data-ttu-id="e93bb-1033">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1033">en-US</span></span>|  
|<span data-ttu-id="e93bb-1034">シンハラ語 (スリランカ)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1034">Sinhala (Sri Lanka)</span></span>|<span data-ttu-id="e93bb-1035">si-LK</span><span class="sxs-lookup"><span data-stu-id="e93bb-1035">si-LK</span></span>|<span data-ttu-id="e93bb-1036">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1036">en-US</span></span>|  
|<span data-ttu-id="e93bb-1037">シリア語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1037">Syriac</span></span>|<span data-ttu-id="e93bb-1038">syr</span><span class="sxs-lookup"><span data-stu-id="e93bb-1038">syr</span></span>|<span data-ttu-id="e93bb-1039">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1039">en-US</span></span>|  
|<span data-ttu-id="e93bb-1040">シリア語 (シリア)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1040">Syriac (Syria)</span></span>|<span data-ttu-id="e93bb-1041">syr-SY</span><span class="sxs-lookup"><span data-stu-id="e93bb-1041">syr-SY</span></span>|<span data-ttu-id="e93bb-1042">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1042">en-US</span></span>|  
|<span data-ttu-id="e93bb-1043">タミル語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1043">Tamil</span></span>|<span data-ttu-id="e93bb-1044">ta</span><span class="sxs-lookup"><span data-stu-id="e93bb-1044">ta</span></span>|<span data-ttu-id="e93bb-1045">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1045">en-US</span></span>|  
|<span data-ttu-id="e93bb-1046">タミール語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1046">Tamil (India)</span></span>|<span data-ttu-id="e93bb-1047">ta-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-1047">ta-IN</span></span>|<span data-ttu-id="e93bb-1048">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1048">en-US</span></span>|  
|<span data-ttu-id="e93bb-1049">テルグ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1049">Telugu</span></span>|<span data-ttu-id="e93bb-1050">te</span><span class="sxs-lookup"><span data-stu-id="e93bb-1050">te</span></span>|<span data-ttu-id="e93bb-1051">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1051">en-US</span></span>|  
|<span data-ttu-id="e93bb-1052">テルグ語 (インド)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1052">Telugu (India)</span></span>|<span data-ttu-id="e93bb-1053">te-IN</span><span class="sxs-lookup"><span data-stu-id="e93bb-1053">te-IN</span></span>|<span data-ttu-id="e93bb-1054">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1054">en-US</span></span>|  
|<span data-ttu-id="e93bb-1055">Thai</span><span class="sxs-lookup"><span data-stu-id="e93bb-1055">Thai</span></span>|<span data-ttu-id="e93bb-1056">台目の</span><span class="sxs-lookup"><span data-stu-id="e93bb-1056">th</span></span>|<span data-ttu-id="e93bb-1057">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1057">en-US</span></span>|  
|<span data-ttu-id="e93bb-1058">タイ語 (タイ)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1058">Thai (Thailand)</span></span>|<span data-ttu-id="e93bb-1059">th-Th</span><span class="sxs-lookup"><span data-stu-id="e93bb-1059">th-Th</span></span>|<span data-ttu-id="e93bb-1060">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1060">en-US</span></span>|  
|<span data-ttu-id="e93bb-1061">ウイグル語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1061">Uighur</span></span>|<span data-ttu-id="e93bb-1062">ug</span><span class="sxs-lookup"><span data-stu-id="e93bb-1062">ug</span></span>|<span data-ttu-id="e93bb-1063">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1063">en-US</span></span>|  
|<span data-ttu-id="e93bb-1064">ウイグル語 (PRC)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1064">Uighur (PRC)</span></span>|<span data-ttu-id="e93bb-1065">ug-CN</span><span class="sxs-lookup"><span data-stu-id="e93bb-1065">ug-CN</span></span>|<span data-ttu-id="e93bb-1066">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1066">en-US</span></span>|  
|<span data-ttu-id="e93bb-1067">ウルドゥ語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1067">Urdu</span></span>|<span data-ttu-id="e93bb-1068">あなたの</span><span class="sxs-lookup"><span data-stu-id="e93bb-1068">ur</span></span>|<span data-ttu-id="e93bb-1069">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1069">en-US</span></span>|  
|<span data-ttu-id="e93bb-1070">ウルドゥー語 (パキスタン)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1070">Urdu (Pakistan)</span></span>|<span data-ttu-id="e93bb-1071">ur-PK</span><span class="sxs-lookup"><span data-stu-id="e93bb-1071">ur-PK</span></span>|<span data-ttu-id="e93bb-1072">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1072">en-US</span></span>|  
|<span data-ttu-id="e93bb-1073">ベトナム語</span><span class="sxs-lookup"><span data-stu-id="e93bb-1073">Vietnamese</span></span>|<span data-ttu-id="e93bb-1074">vi</span><span class="sxs-lookup"><span data-stu-id="e93bb-1074">vi</span></span>|<span data-ttu-id="e93bb-1075">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1075">en-US</span></span>|  
|<span data-ttu-id="e93bb-1076">ベトナム語 (ベトナム)</span><span class="sxs-lookup"><span data-stu-id="e93bb-1076">Vietnamese (Vietnam)</span></span>|<span data-ttu-id="e93bb-1077">vi-VN</span><span class="sxs-lookup"><span data-stu-id="e93bb-1077">vi-VN</span></span>|<span data-ttu-id="e93bb-1078">ja-JP</span><span class="sxs-lookup"><span data-stu-id="e93bb-1078">en-US</span></span>|  
  
 <span data-ttu-id="e93bb-1079">アプリケーションでは、<xref:System.Globalization.CultureAndRegionInfoBuilder> を使用してカルチャの代替を作成できます。また、そのカルチャには、選択したコンソールフォールバックカルチャを設定できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1079">Your application can use <xref:System.Globalization.CultureAndRegionInfoBuilder> to create a replacement for a culture, and that culture can have a console fallback culture of your choosing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1080">次のコード例では、カルチャオブジェクトに関連付けられているフォールバックユーザーインターフェイスカルチャを表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1080">The following code example displays the fallback user interface culture associated with a culture object.</span></span>  
  
 [!code-cpp[sys.glob.ci.getCFUIC#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/cpp/cfuic.cpp#1)]
 [!code-csharp[sys.glob.ci.getCFUIC#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.ci.getCFUIC/CS/cfuic.cs#1)]
 [!code-vb[sys.glob.ci.getCFUIC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.ci.getCFUIC/VB/cfuic.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCultureInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e93bb-1081">カルチャのキャッシュされた読み取り専用インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1081">Retrieves a cached, read-only instance of a culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (culture As Integer) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : int -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="e93bb-1082">ロケール識別子 (LCID)。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1082">A locale identifier (LCID).</span></span></param>
        <summary><span data-ttu-id="e93bb-1083">指定されたカルチャ識別子を使用して、カルチャのキャッシュされた読み取り専用インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1083">Retrieves a cached, read-only instance of a culture by using the specified culture identifier.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1084">読み取り専用の <see cref="T:System.Globalization.CultureInfo" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1084">A read-only <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1085">Lcid ではなくロケール名を使用する必要があるため、このメソッド (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>) の文字列オーバーロードを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1085">We recommend that you use the string overload of this method (<xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29>), because locale names should be used instead of LCIDs.</span></span> <span data-ttu-id="e93bb-1086">カスタムロケールの場合は、ロケール名が必要です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1086">For custom locales, the locale name is required.</span></span>  
  
 <span data-ttu-id="e93bb-1087">`culture` が現在のカルチャのロケール識別子である場合、返された <xref:System.Globalization.CultureInfo> オブジェクトには、ユーザーのオーバーライドは反映されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1087">If `culture` is the locale identifier of the current culture, the returned <xref:System.Globalization.CultureInfo> object does not reflect any user overrides.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e93bb-1088"><paramref name="culture" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1088"><paramref name="culture" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-1089"><paramref name="culture" /> はサポートされていないカルチャを指定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1089"><paramref name="culture" /> specifies a culture that is not supported.</span></span> <span data-ttu-id="e93bb-1090">詳細については、「呼び出し時の注意」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1090">See the Notes to Caller section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-1091">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="culture" /> が有効なカルチャ識別子でない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1091">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="culture" /> is not a valid culture identifier.</span></span> <span data-ttu-id="e93bb-1092">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このメソッドは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1092">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="e93bb-1093">Windows 7 以降で [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降で実行されるアプリ以降では、このメソッドは、id がオペレーティングシステムから <paramref name="culture" /> ている <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得しようとします。オペレーティングシステムがそのカルチャをサポートしていない場合、メソッドは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1093">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="culture" /> from the operating system; if the operating system does not support that culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.LCID" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e93bb-1094">カルチャの名前。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1094">The name of a culture.</span></span> <span data-ttu-id="e93bb-1095"><paramref name="name" /> では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1095"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="e93bb-1096">指定されたカルチャ名を使用して、カルチャのキャッシュされた読み取り専用インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1096">Retrieves a cached, read-only instance of a culture using the specified culture name.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1097">読み取り専用の <see cref="T:System.Globalization.CultureInfo" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1097">A read-only <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="e93bb-1098">Windows システム上の定義済みカルチャ名の一覧については、 [windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1098">For a list of predefined culture names on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-1099">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1099">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="e93bb-1100">さらに、Windows 10 以降では、`name` 有効な BCP-47 言語タグを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1100">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
 <span data-ttu-id="e93bb-1101"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A> メソッドは、キャッシュされた読み取り専用の <xref:System.Globalization.CultureInfo> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1101">The <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> method retrieves a cached, read-only <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="e93bb-1102"><xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> コンストラクターへの対応する呼び出しよりもパフォーマンスが優れています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1102">It offers better performance than a corresponding call to the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="e93bb-1103">`name` が現在のカルチャの名前である場合、返された <xref:System.Globalization.CultureInfo> オブジェクトには、ユーザーのオーバーライドは反映されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1103">If `name` is the name of the current culture, the returned <xref:System.Globalization.CultureInfo> object does not reflect any user overrides.</span></span> <span data-ttu-id="e93bb-1104">これにより、システム上に実際のユーザーアカウントを持たず、複数のカルチャを効率的に読み込む必要があるサーバーアプリケーションやツールに適した方法になります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1104">This makes the method suitable for server applications or tools that do not have a real user account on the system and that need to load multiple cultures efficiently.</span></span>  
  
 <span data-ttu-id="e93bb-1105">`name` が <xref:System.String.Empty?displayProperty=nameWithType>の場合、メソッドはインバリアントカルチャを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1105">If `name` is <xref:System.String.Empty?displayProperty=nameWithType>, the method returns the invariant culture.</span></span> <span data-ttu-id="e93bb-1106">これは、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティの値を取得することと同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1106">This is equivalent to retrieving the value of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-1107"><paramref name="name" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1107"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-1108"><paramref name="name" /> はサポートされていないカルチャを指定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1108"><paramref name="name" /> specifies a culture that is not supported.</span></span> <span data-ttu-id="e93bb-1109">詳細については、「呼び出し時の注意」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1109">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-1110">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="name" /> が有効なカルチャ名ではない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1110">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> is not a valid culture name.</span></span> <span data-ttu-id="e93bb-1111">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このメソッドは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1111">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="e93bb-1112">Windows 7 以降で [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降で実行されるアプリ以降では、このメソッドは、id がオペレーティングシステムから <paramref name="name" /> ている <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得しようとします。オペレーティングシステムがそのカルチャをサポートしていない場合、<paramref name="name" /> が補助カルチャまたは置換カルチャの名前でない場合、メソッドは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1112">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfo (string name, string altName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfo(string name, string altName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfo(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfo (name As String, altName As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfo(System::String ^ name, System::String ^ altName);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfo : string * string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfo (name, altName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="altName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e93bb-1113">カルチャの名前。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1113">The name of a culture.</span></span> <span data-ttu-id="e93bb-1114"><paramref name="name" /> では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1114"><paramref name="name" /> is not case-sensitive.</span></span></param>
        <param name="altName"><span data-ttu-id="e93bb-1115"><see cref="T:System.Globalization.TextInfo" /> の初期化に使用される <see cref="T:System.Globalization.CompareInfo" /> オブジェクトおよび <paramref name="name" /> オブジェクトを提供するカルチャの名前。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1115">The name of a culture that supplies the <see cref="T:System.Globalization.TextInfo" /> and <see cref="T:System.Globalization.CompareInfo" /> objects used to initialize <paramref name="name" />.</span></span> <span data-ttu-id="e93bb-1116"><paramref name="altName" /> では、大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1116"><paramref name="altName" /> is not case-sensitive.</span></span></param>
        <summary><span data-ttu-id="e93bb-1117">カルチャのキャッシュされた読み取り専用インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1117">Retrieves a cached, read-only instance of a culture.</span></span> <span data-ttu-id="e93bb-1118">パラメーターは、別のカルチャで指定された <see cref="T:System.Globalization.TextInfo" /> オブジェクトおよび <see cref="T:System.Globalization.CompareInfo" /> オブジェクトで初期化されたカルチャを指定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1118">Parameters specify a culture that is initialized with the <see cref="T:System.Globalization.TextInfo" /> and <see cref="T:System.Globalization.CompareInfo" /> objects specified by another culture.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1119">読み取り専用の <see cref="T:System.Globalization.CultureInfo" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1119">A read-only <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1120">Windows システム上の定義済みカルチャ名の一覧については、 [windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1120">For a list of predefined culture names on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-1121">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1121">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="e93bb-1122">さらに、Windows 10 以降では、`name` 有効な BCP-47 言語タグを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1122">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span>  
  
 <span data-ttu-id="e93bb-1123"><xref:System.Globalization.CultureInfo.GetCultureInfo%2A> メソッドは、キャッシュされた読み取り専用の <xref:System.Globalization.CultureInfo> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1123">The <xref:System.Globalization.CultureInfo.GetCultureInfo%2A> method obtains a cached, read-only <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="e93bb-1124"><xref:System.Globalization.CultureInfo.%23ctor%2A> コンストラクターへの対応する呼び出しよりもパフォーマンスが優れています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1124">It offers better performance than a corresponding call to a <xref:System.Globalization.CultureInfo.%23ctor%2A> constructor.</span></span> <span data-ttu-id="e93bb-1125">メソッドは、`name` パラメーターで指定したものと似たカルチャを作成するために使用されますが、並べ替えや大文字と小文字の規則は異なります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1125">The method is used to create a culture similar to that specified by the `name` parameter, but with different sorting and casing rules.</span></span>  
  
 <span data-ttu-id="e93bb-1126">`name` または `altName` が現在のカルチャの名前である場合、返されるオブジェクトにはユーザーのオーバーライドは反映されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1126">If `name` or `altName` is the name of the current culture, the returned objects do not reflect any user overrides.</span></span> <span data-ttu-id="e93bb-1127">`name` が <xref:System.String.Empty?displayProperty=nameWithType>の場合、メソッドはインバリアントカルチャを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1127">If `name` is <xref:System.String.Empty?displayProperty=nameWithType>, the method returns the invariant culture.</span></span> <span data-ttu-id="e93bb-1128">これは、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティの値を取得することと同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1128">This is equivalent to retrieving the value of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property.</span></span> <span data-ttu-id="e93bb-1129">`altName` が <xref:System.String.Empty?displayProperty=nameWithType>の場合、メソッドは、インバリアントカルチャによって指定された書記体系と比較規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1129">If `altName` is <xref:System.String.Empty?displayProperty=nameWithType>, the method uses the writing system and comparison rules specified by the invariant culture.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-1130"><paramref name="name" /> または <paramref name="altName" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1130"><paramref name="name" /> or <paramref name="altName" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-1131"><paramref name="name" /> または <paramref name="altName" /> が、サポートされていないカルチャを指定しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1131"><paramref name="name" /> or <paramref name="altName" /> specifies a culture that is not supported.</span></span> <span data-ttu-id="e93bb-1132">詳細については、「呼び出し時の注意」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1132">See the Notes to Callers section for more information.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-1133">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="name" /> または <paramref name="altName" /> が有効なカルチャ名ではない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1133">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> or <paramref name="altName" /> is not a valid culture name.</span></span> <span data-ttu-id="e93bb-1134">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このメソッドは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1134">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span> <span data-ttu-id="e93bb-1135">Windows 7 以降で [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降で実行されるアプリ以降では、このメソッドは、id がオペレーティングシステムから <paramref name="name" /> ている <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得しようとします。オペレーティングシステムがそのカルチャをサポートしていない場合、<paramref name="name" /> が補助カルチャまたは置換カルチャの名前でない場合、メソッドは <see cref="T:System.Globalization.CultureNotFoundException" /> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1135">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span> <span data-ttu-id="e93bb-1136">Windows 7 以降で [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 以降で実行されるアプリ以降では、このメソッドは、id がオペレーティングシステムから <paramref name="name" /> ている <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得しようとします。オペレーティングシステムがそのカルチャをサポートしていない場合、<paramref name="name" /> が補助カルチャまたは置換カルチャの名前でない場合、メソッドは <see cref="T:System.Globalization.CultureNotFoundException" /> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1136">Starting with apps that run under the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] or later on Windows 7 or later, the method attempts to retrieve a <see cref="T:System.Globalization.CultureInfo" /> object whose identifier is <paramref name="name" /> from the operating system; if the operating system does not support that culture, and if <paramref name="name" /> is not the name of a supplementary or replacement culture, the method throws a <see cref="T:System.Globalization.CultureNotFoundException" /> exception.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultureInfoByIetfLanguageTag">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo GetCultureInfoByIetfLanguageTag(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultureInfoByIetfLanguageTag (name As String) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ GetCultureInfoByIetfLanguageTag(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCultureInfoByIetfLanguageTag : string -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e93bb-1137">RFC 4646 標準で指定された言語の名前。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1137">The name of a language as specified by the RFC 4646 standard.</span></span></param>
        <summary><span data-ttu-id="e93bb-1138">非推奨。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1138">Deprecated.</span></span> <span data-ttu-id="e93bb-1139">指定された RFC 4646 言語タグで示される言語特性を持つ、読み取り専用 <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1139">Retrieves a read-only <see cref="T:System.Globalization.CultureInfo" /> object having linguistic characteristics that are identified by the specified RFC 4646 language tag.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1140">読み取り専用の <see cref="T:System.Globalization.CultureInfo" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1140">A read-only <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1141">このメソッドと <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> プロパティは非推奨とされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1141">This method and the <xref:System.Globalization.CultureInfo.IetfLanguageTag%2A> property are deprecated.</span></span> <span data-ttu-id="e93bb-1142">アプリケーションでは、これらの要素を使用する代わりに、新しい <xref:System.Globalization.CultureInfo> オブジェクトを使用し、<xref:System.Globalization.CultureInfo.Name%2A> プロパティを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1142">Instead of using these elements, the application should use a new <xref:System.Globalization.CultureInfo> object and calls to the <xref:System.Globalization.CultureInfo.Name%2A> property.</span></span> <span data-ttu-id="e93bb-1143">IETF タグと名前は同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1143">IETF tags and names are identical.</span></span>  
  
 <span data-ttu-id="e93bb-1144">インターネット技術標準化委員会 (IETF) によって管理されている RFC 4646 標準では、IETF 言語タグが定義されています。 IETF 言語タグは、言語を識別するための統一的な手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1144">The RFC 4646 standard that is maintained by the Internet Engineering Task Force (IETF) defines an IETF language tag, which provides a uniform means of identifying a language.</span></span> <span data-ttu-id="e93bb-1145">IETF 言語タグの形式は、<xref:System.Globalization.CultureInfo.Name%2A> プロパティによって返されるカルチャ名と同じですが、カルチャを一意に識別しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1145">The format of an IETF language tag is the same as the culture name returned by the <xref:System.Globalization.CultureInfo.Name%2A> property, but does not identify a culture uniquely.</span></span> <span data-ttu-id="e93bb-1146">カルチャによって言語特性が同一である場合、同じ IETF 言語タグが共有されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1146">Different cultures share the same IETF language tag if those cultures have identical linguistic characteristics.</span></span> <span data-ttu-id="e93bb-1147">カルチャの言語特性は、<xref:System.Globalization.CultureInfo> オブジェクトに関連付けられている <xref:System.Globalization.TextInfo> オブジェクトに格納されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1147">The linguistic characteristics of a culture are contained in the <xref:System.Globalization.TextInfo> object associated with a <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 <span data-ttu-id="e93bb-1148">IETF 言語タグは、必須言語識別子、オプションのスクリプト識別子、およびオプションの地域 id で構成されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1148">An IETF language tag consists of a mandatory language identifier, an optional script identifier, and an optional region identifier.</span></span>  
  
 <span data-ttu-id="e93bb-1149">アプリケーションでは、取得したカルチャを使用して、スペルチェックや文法チェッカーの管理など、言語固有のタスクを制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1149">Your applications should use the retrieved culture to control language-specific tasks, such as managing a spelling or grammar checker.</span></span> <span data-ttu-id="e93bb-1150">アプリケーションでは、取得したカルチャを使用して、テキストの並べ替え、時刻や日付の書式設定など、カルチャ固有のタスクを制御することはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1150">Applications should not use the retrieved culture to control culture-specific tasks, such as sorting text or formatting times and dates.</span></span>  
  
 <span data-ttu-id="e93bb-1151">詳細については、 [https://go.microsoft.com/fwlink/?LinkId=100231](https://go.microsoft.com/fwlink/?LinkId=100231)の RFC 4646、「言語を識別するためのタグ」、および最新のドラフト標準の Draft-phillips-langtags-05 を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1151">For more information, see RFC 4646, "Tags for Identifying Languages," and the most recent draft standard, Draft-phillips-langtags-05.txt, at [https://go.microsoft.com/fwlink/?LinkId=100231](https://go.microsoft.com/fwlink/?LinkId=100231).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-1152"><paramref name="name" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1152"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.Globalization.CultureNotFoundException"><span data-ttu-id="e93bb-1153"><paramref name="name" /> は、サポートされているカルチャに対応していません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1153"><paramref name="name" /> does not correspond to a supported culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="e93bb-1154">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以前のバージョンでは、<paramref name="name" /> がサポートされているカルチャの名前に対応していない場合、<see cref="T:System.ArgumentException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1154">The [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] and earlier versions throw an <see cref="T:System.ArgumentException" /> if <paramref name="name" /> does not correspond to the name of a supported culture.</span></span> <span data-ttu-id="e93bb-1155">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、このメソッドは <see cref="T:System.Globalization.CultureNotFoundException" />をスローします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1155">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this method throws a <see cref="T:System.Globalization.CultureNotFoundException" />.</span></span></para></block>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
        <altmember cref="M:System.Globalization.CultureInfo.ClearCachedData" />
      </Docs>
    </Member>
    <Member MemberName="GetCultures">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo[] GetCultures (System.Globalization.CultureTypes types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo[] GetCultures(valuetype System.Globalization.CultureTypes types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCultures (types As CultureTypes) As CultureInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Globalization::CultureInfo ^&gt; ^ GetCultures(System::Globalization::CultureTypes types);" />
      <MemberSignature Language="F#" Value="static member GetCultures : System.Globalization.CultureTypes -&gt; System.Globalization.CultureInfo[]" Usage="System.Globalization.CultureInfo.GetCultures types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Globalization.CultureTypes" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="e93bb-1156">取得するカルチャへのフィルターとして使用する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1156">A bitwise combination of the enumeration values that filter the cultures to retrieve.</span></span></param>
        <summary><span data-ttu-id="e93bb-1157">サポートされているカルチャを、指定した <see cref="T:System.Globalization.CultureTypes" /> パラメーターでフィルター処理した結果のリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1157">Gets the list of supported cultures filtered by the specified <see cref="T:System.Globalization.CultureTypes" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1158"><paramref name="types" /> パラメーターで指定されたカルチャを格納する配列。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1158">An array that contains the cultures specified by the <paramref name="types" /> parameter.</span></span> <span data-ttu-id="e93bb-1159">カルチャの配列が並べ替えられていません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1159">The array of cultures is unsorted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1160"><xref:System.Globalization.CultureInfo.GetCultures%2A> メソッドは、`types` パラメーターを次の値に設定して、最も一般的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1160">The <xref:System.Globalization.CultureInfo.GetCultures%2A> method is most commonly called with the `types` parameter set to the following values:</span></span>  
  
-   <span data-ttu-id="e93bb-1161"><xref:System.Globalization.CultureTypes.SpecificCultures>。これにより、すべての特定のカルチャが返されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1161"><xref:System.Globalization.CultureTypes.SpecificCultures>, which returns all specific cultures.</span></span>  
  
-   <span data-ttu-id="e93bb-1162"><xref:System.Globalization.CultureTypes.NeutralCultures>。すべてのニュートラルカルチャとインバリアントカルチャを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1162"><xref:System.Globalization.CultureTypes.NeutralCultures>, which returns all neutral cultures and the invariant culture.</span></span>  
  
-   <span data-ttu-id="e93bb-1163"><xref:System.Globalization.CultureTypes.AllCultures>は、すべてのニュートラルカルチャと特定のカルチャ、Windows システムにインストールされているカルチャ、ユーザーが作成したカスタムカルチャを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1163"><xref:System.Globalization.CultureTypes.AllCultures>, which returns all neutral and specific cultures, cultures installed in the Windows system, and custom cultures created by the user.</span></span>  
  
-   <span data-ttu-id="e93bb-1164"><xref:System.Globalization.CultureTypes.UserCustomCulture>。 <xref:System.Globalization.CultureAndRegionInfoBuilder> クラスによって登録されているものなど、すべてのカスタムカルチャを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1164"><xref:System.Globalization.CultureTypes.UserCustomCulture>, which returns all custom cultures, such as those registered by the <xref:System.Globalization.CultureAndRegionInfoBuilder> class.</span></span> <span data-ttu-id="e93bb-1165">Windows 10 より前のバージョンの Windows では、<xref:System.Globalization.CultureTypes.UserCustomCulture> 値はすべてのユーザー定義のカスタムカルチャに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1165">In versions of Windows before Windows 10, the <xref:System.Globalization.CultureTypes.UserCustomCulture> value applies to all user-defined custom cultures.</span></span> <span data-ttu-id="e93bb-1166">Windows 10 以降では、完全なカルチャデータを持たず、<xref:System.Globalization.CultureInfo.LCID%2A> プロパティ値によって示される一意のローカル識別子を持たないシステムカルチャに適用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1166">Starting with Windows 10, it applies to system cultures that lack complete cultural data and that do not have a unique local identifier, as indicated by the <xref:System.Globalization.CultureInfo.LCID%2A> property value.</span></span> <span data-ttu-id="e93bb-1167">その結果、次のようなコードでは、Windows 10 と以前のバージョンの Windows で実行すると、異なる結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1167">As a result, code such as the following will return different results when run on Windows 10 and on an earlier version of Windows.</span></span>  
  
     [!code-csharp[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures3.cs#2)]
     [!code-vb[System.Globalization.CultureInfo.GetCultures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures3.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1168">次のコード例では、ニュートラルカルチャのいくつかのプロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1168">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1169">この例では、zh-tw と zh-tw のカルチャをそれぞれ0x0004 および0x7C04 カルチャ識別子と共に表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1169">The example displays the zh-CHS and zh-CHT cultures with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="e93bb-1170">ただし、Windows Vista アプリケーションでは、zh-hant の代わりに zh-tw と zh-tw Zh-tw 名の代わりに zh-tw-Hans 名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1170">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-1171">Zh-tw と zh-tw の Hans は、現在の標準を表します。古い名前を使用する理由がない限り、この名前を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1171">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e93bb-1172"><paramref name="types" /> で指定されている <see cref="T:System.Globalization.CultureTypes" /> 値の組み合わせが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1172"><paramref name="types" /> specifies an invalid combination of <see cref="T:System.Globalization.CultureTypes" /> values.</span></span></exception>
        <altmember cref="T:System.Globalization.CultureTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFormat">
      <MemberSignature Language="C#" Value="public virtual object GetFormat (Type formatType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFormat(class System.Type formatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFormat (formatType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetFormat(Type ^ formatType);" />
      <MemberSignature Language="F#" Value="abstract member GetFormat : Type -&gt; obj&#xA;override this.GetFormat : Type -&gt; obj" Usage="cultureInfo.GetFormat formatType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormatProvider.GetFormat(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="formatType"><span data-ttu-id="e93bb-1173">書式指定オブジェクトを取得する <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1173">The <see cref="T:System.Type" /> for which to get a formatting object.</span></span> <span data-ttu-id="e93bb-1174">このメソッドは、<see cref="T:System.Globalization.NumberFormatInfo" /> 型と <see cref="T:System.Globalization.DateTimeFormatInfo" /> 型だけをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1174">This method only supports the <see cref="T:System.Globalization.NumberFormatInfo" /> and <see cref="T:System.Globalization.DateTimeFormatInfo" /> types.</span></span></param>
        <summary><span data-ttu-id="e93bb-1175">指定した型に書式指定する方法を定義するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1175">Gets an object that defines how to format the specified type.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1176"><see cref="P:System.Globalization.CultureInfo.NumberFormat" /> プロパティの値。<see cref="T:System.Globalization.NumberFormatInfo" /> が <see cref="T:System.Globalization.CultureInfo" /> クラスの <paramref name="formatType" /> オブジェクトの場合は、現在の <see cref="T:System.Type" /> の既定の数値書式情報が格納された <see cref="T:System.Globalization.NumberFormatInfo" /> です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1176">The value of the <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> property, which is a <see cref="T:System.Globalization.NumberFormatInfo" /> containing the default number format information for the current <see cref="T:System.Globalization.CultureInfo" />, if <paramref name="formatType" /> is the <see cref="T:System.Type" /> object for the <see cref="T:System.Globalization.NumberFormatInfo" /> class.</span></span>  
  
<span data-ttu-id="e93bb-1177">または</span><span class="sxs-lookup"><span data-stu-id="e93bb-1177">-or-</span></span> 
<span data-ttu-id="e93bb-1178"><see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> プロパティの値。<see cref="T:System.Globalization.DateTimeFormatInfo" /> が <see cref="T:System.Globalization.CultureInfo" /> クラスの <paramref name="formatType" /> オブジェクトの場合は、現在の <see cref="T:System.Type" /> の既定の日付および時刻の形式に関する情報が格納された <see cref="T:System.Globalization.DateTimeFormatInfo" /> です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1178">The value of the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property, which is a <see cref="T:System.Globalization.DateTimeFormatInfo" /> containing the default date and time format information for the current <see cref="T:System.Globalization.CultureInfo" />, if <paramref name="formatType" /> is the <see cref="T:System.Type" /> object for the <see cref="T:System.Globalization.DateTimeFormatInfo" /> class.</span></span>  
  
<span data-ttu-id="e93bb-1179">または</span><span class="sxs-lookup"><span data-stu-id="e93bb-1179">-or-</span></span> 
<span data-ttu-id="e93bb-1180"><paramref name="formatType" /> がその他のオブジェクトである場合は null。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1180">null, if <paramref name="formatType" /> is any other object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1181"><xref:System.Globalization.CultureInfo.GetFormat%2A> は、<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> を実装します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1181"><xref:System.Globalization.CultureInfo.GetFormat%2A> implements <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e93bb-1182">`NumberFormatInfo` は、基本データ型の書式指定メソッドと組み合わせて使用されるカルチャ固有の数値書式を提供します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1182">`NumberFormatInfo` provides the culture-specific numeric format used in conjunction with the Format methods in the base data types.</span></span> <span data-ttu-id="e93bb-1183">`DateTimeFormatInfo` は、特定のカルチャに対して日付と時刻の値を書式設定する方法を制御します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1183">`DateTimeFormatInfo` controls how the date and time values are formatted for a specific culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.NumberFormat" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cultureInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e93bb-1184">現在の <see cref="T:System.Globalization.CultureInfo" /> のハッシュ関数として機能します。ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1184">Serves as a hash function for the current <see cref="T:System.Globalization.CultureInfo" />, suitable for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1185">現在の <see cref="T:System.Globalization.CultureInfo" /> のハッシュ コードです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1185">A hash code for the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1186">このメソッドは、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1186">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e93bb-1187">このメソッドは、<xref:System.Globalization.CultureInfo.Equals%2A> メソッドによって等しいと評価された 2 つのオブジェクトに対して同じハッシュ コードを生成します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1187">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.CultureInfo.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CultureInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string" Usage="System.Globalization.CultureInfo.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1188">非推奨。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1188">Deprecated.</span></span> <span data-ttu-id="e93bb-1189">言語の RFC 4646 標準 ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1189">Gets the RFC 4646 standard identification for a language.</span></span></summary>
        <value><span data-ttu-id="e93bb-1190">言語の RFC 4646 標準 ID を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1190">A string that is the RFC 4646 standard identification for a language.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1191">このプロパティと <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> メソッドは非推奨とされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1191">This property and the <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> method are deprecated.</span></span> <span data-ttu-id="e93bb-1192">代わりに、<xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> プロパティを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1192">Instead, you should use a the <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e93bb-1193">IETF タグと名前は同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1193">IETF tags and names are identical.</span></span>  
  
 <span data-ttu-id="e93bb-1194">インターネット技術標準化委員会 (IETF) によって管理されている RFC 4646 標準では、IETF 言語タグが定義されています。 IETF 言語タグは、言語を識別するための統一的な手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1194">The RFC 4646 standard that is maintained by the Internet Engineering Task Force (IETF) defines an IETF language tag, which provides a uniform means of identifying a language.</span></span> <span data-ttu-id="e93bb-1195">IETF 言語タグの形式は、<xref:System.Globalization.CultureInfo.Name%2A> プロパティによって返されるカルチャ名に似ていますが、カルチャを一意に識別しません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1195">The format of an IETF language tag is similar to the culture name returned by the <xref:System.Globalization.CultureInfo.Name%2A> property, but does not identify a culture uniquely.</span></span> <span data-ttu-id="e93bb-1196">つまり、カルチャによって言語特性が同一である場合、異なるカルチャは同じ IETF 言語タグを共有します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1196">That is, different cultures share the same IETF language tag if those cultures have identical linguistic characteristics.</span></span> <span data-ttu-id="e93bb-1197">カルチャの言語特性は、<xref:System.Globalization.CultureInfo> オブジェクトに関連付けられている <xref:System.Globalization.TextInfo> オブジェクトに格納されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1197">The linguistic characteristics of a culture are contained in the <xref:System.Globalization.TextInfo> object associated with a <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 <span data-ttu-id="e93bb-1198">IETF 言語タグは、必須言語識別子、オプションのスクリプト識別子、およびオプションの地域 id で構成されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1198">An IETF language tag consists of a mandatory language identifier, an optional script identifier, and an optional region identifier.</span></span>  
  
 <span data-ttu-id="e93bb-1199">詳細については、 [RFC 5646 の「言語を識別するためのタグ」](https://go.microsoft.com/fwlink/?LinkId=230876)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1199">For more information, see [RFC 5646, "Tags for Identifying Languages](https://go.microsoft.com/fwlink/?LinkId=230876).</span></span> <span data-ttu-id="e93bb-1200">サブタグの一覧については、 [IANA 言語サブタグレジストリ](https://go.microsoft.com/fwlink/?LinkId=230877)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1200">For a list of subtags, see [The IANA Language Subtag Registry](https://go.microsoft.com/fwlink/?LinkId=230877).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.TextInfo" />
        <altmember cref="T:System.Globalization.CultureAndRegionInfoBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InstalledUICulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InstalledUICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InstalledUICulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InstalledUICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InstalledUICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstalledUICulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InstalledUICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1201">オペレーティング システムと共にインストールされたカルチャを表す <see cref="T:System.Globalization.CultureInfo" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1201">Gets the <see cref="T:System.Globalization.CultureInfo" /> that represents the culture installed with the operating system.</span></span></summary>
        <value><span data-ttu-id="e93bb-1202">オペレーティング システムと共にインストールされたカルチャを表す <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1202">The <see cref="T:System.Globalization.CultureInfo" /> that represents the culture installed with the operating system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1203">日本語版の Windows など、ローカライズされたオペレーティングシステムでは、このプロパティはオペレーティングシステムのカルチャを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1203">In a localized operating system, such as a Japanese edition of Windows, this property returns the culture of the operating system.</span></span> <span data-ttu-id="e93bb-1204">このプロパティは、Windows API の `GetSystemDefaultUILanguage` に相当します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1204">This property is the equivalent of `GetSystemDefaultUILanguage` in the Windows API.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Resources.ResourceManager" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
      </Docs>
    </Member>
    <Member MemberName="InvariantCulture">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo InvariantCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.CultureInfo InvariantCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.InvariantCulture" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InvariantCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Globalization::CultureInfo ^ InvariantCulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InvariantCulture : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.InvariantCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1205">カルチャに依存しない (インバリアントな) <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1205">Gets the <see cref="T:System.Globalization.CultureInfo" /> object that is culture-independent (invariant).</span></span></summary>
        <value><span data-ttu-id="e93bb-1206">カルチャに依存しない (インバリアントな) オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1206">The object that is culture-independent (invariant).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1207">インバリアントカルチャは、カルチャに依存しません。英語と関連付けられていますが、国/地域には関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1207">The invariant culture is culture-insensitive; it is associated with the English language but not with any country/region.</span></span> <span data-ttu-id="e93bb-1208">インバリアントカルチャを名前で指定するには、<xref:System.Globalization.CultureInfo> のインスタンス化メソッドの呼び出しで空の文字列 ("") を使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1208">You specify the invariant culture by name by using an empty string ("") in the call to a <xref:System.Globalization.CultureInfo> instantiation method.</span></span> <span data-ttu-id="e93bb-1209"><xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> は、インバリアントカルチャのインスタンスも取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1209"><xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> also retrieves an instance of the invariant culture.</span></span> <span data-ttu-id="e93bb-1210">カルチャを必要とする <xref:System.Globalization> 名前空間のほとんどすべてのメソッドで使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1210">It can be used in almost any method in the <xref:System.Globalization> namespace that requires a culture.</span></span> <span data-ttu-id="e93bb-1211"><xref:System.Globalization.CultureInfo.CompareInfo%2A>、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>、<xref:System.Globalization.CultureInfo.NumberFormat%2A> などのプロパティによって返されるオブジェクトには、インバリアントカルチャの文字列比較と書式指定規則も反映されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1211">The objects returned by properties such as <xref:System.Globalization.CultureInfo.CompareInfo%2A>, <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, and <xref:System.Globalization.CultureInfo.NumberFormat%2A> also reflect the string comparison and formatting conventions of the invariant culture.</span></span>  
  
 <span data-ttu-id="e93bb-1212">カルチャに依存するデータは、ユーザーのカスタマイズ、または .NET Framework またはオペレーティングシステムの更新によって変更される可能性があるため、インバリアントカルチャデータは時間の経過と共に安定しており、インストールされているカルチャをまたいで、ユーザーがカスタマイズすることはできません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1212">Unlike culture-sensitive data, which is subject to change by user customization or by updates to the .NET Framework or the operating system, invariant culture data is stable over time and across installed cultures and cannot be customized by users.</span></span> <span data-ttu-id="e93bb-1213">これにより、書式設定されたデータを保持する書式設定や解析操作や、データを表示する必要がある並べ替え操作や順序付け操作など、カルチャに依存しない結果を必要とする操作には、インバリアントカルチャが特に便利になります。カルチャに関係なく、順序を固定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1213">This makes the invariant culture particularly useful for operations that require culture-independent results, such as formatting and parsing operations that persist formatted data, or sorting and ordering operations that require that data be displayed in a fixed order regardless of culture.</span></span>  
  
## <a name="string-operations"></a><span data-ttu-id="e93bb-1214">文字列操作</span><span class="sxs-lookup"><span data-stu-id="e93bb-1214">String Operations</span></span>  
 <span data-ttu-id="e93bb-1215">カルチャに依存した文字列操作には、現在のスレッドカルチャの規則の影響を受けず、カルチャ間で一貫性があるカルチャに依存したカルチャを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1215">You can use the invariant culture for culture-sensitive string operations that are not affected by the conventions of the current thread culture and that are consistent across cultures.</span></span> <span data-ttu-id="e93bb-1216">たとえば、並べ替えられたデータを固定された順序で表示したり、現在のスレッドカルチャに関係なく、大文字と小文字の規則の標準セットを文字列に適用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1216">For example, you may want sorted data to appear in a fixed order or apply a standard set of casing conventions to strings regardless of the current thread culture.</span></span> <span data-ttu-id="e93bb-1217">これを行うには、<xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29> や <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>など、<xref:System.Globalization.CultureInfo> パラメーターを持つメソッドに <xref:System.Globalization.CultureInfo.InvariantCulture%2A> オブジェクトを渡します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1217">To do this, you pass the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> object to a method that has a <xref:System.Globalization.CultureInfo> parameter, such as <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29> and <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29>.</span></span>  
  
## <a name="persisting-data"></a><span data-ttu-id="e93bb-1218">データの保持</span><span class="sxs-lookup"><span data-stu-id="e93bb-1218">Persisting Data</span></span>  
 <span data-ttu-id="e93bb-1219"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティは、カルチャに依存しない形式でデータを保持するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1219">The <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property can be used to persist data in a culture-independent format.</span></span> <span data-ttu-id="e93bb-1220">これは、変更されず、カルチャ間でデータをシリアル化および逆シリアル化するために使用できる既知の形式を提供します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1220">This provides a known format that does not change and that can be used to serialize and deserialize data across cultures.</span></span> <span data-ttu-id="e93bb-1221">データを逆シリアル化した後は、現在のユーザーのカルチャ規則に基づいて適切に書式設定できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1221">After the data is deserialized, it can be formatted appropriately based on the cultural conventions of the current user.</span></span>  
  
 <span data-ttu-id="e93bb-1222">たとえば、日付と時刻のデータを文字列形式で保持する場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> オブジェクトを <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> または <xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドに渡して文字列を作成できます。また、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> オブジェクトを <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> または <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> メソッドに渡して、文字列を日付と時刻の値に変換することができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1222">For example, if you choose to persist date and time data in string form, you can pass the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> object to the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to create the string, and you can pass the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> object to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> or <xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method to convert the string back to a date and time value.</span></span> <span data-ttu-id="e93bb-1223">この手法により、データが異なるカルチャのユーザーによって読み取られたり、書き込まれたりした場合に、基になる日付と時刻の値が変更されることがなくなります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1223">This technique ensures that the underlying date and time values do not change when the data is read or written by users from different cultures.</span></span>  
  
 <span data-ttu-id="e93bb-1224">次の例では、インバリアントカルチャを使用して、<xref:System.DateTime> 値を文字列として保持します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1224">The following example uses the invariant culture to persist a <xref:System.DateTime> value as a string.</span></span> <span data-ttu-id="e93bb-1225">次に、文字列を解析し、フランス語 (フランス) カルチャおよびドイツ語 (ドイツ) カルチャの書式指定規則を使用してその値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1225">It then parses the string and displays its value by using the formatting conventions of the French (France) and German (Germany) cultures.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/cs/persist1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.InvariantCulture#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/vb/persist1.vb#1)]  
  
## <a name="security-decisions"></a><span data-ttu-id="e93bb-1226">セキュリティの決定</span><span class="sxs-lookup"><span data-stu-id="e93bb-1226">Security Decisions</span></span>  
 <span data-ttu-id="e93bb-1227">文字列比較またはケースの変更の結果に基づいてセキュリティの決定 (システムリソースへのアクセスを許可するかどうかなど) を行う場合は、インバリアントカルチャを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1227">If you are making a security decision (such as whether to allow access to a system resource) based on the result of a string comparison or a case change, you should not use the invariant culture.</span></span> <span data-ttu-id="e93bb-1228">代わりに、<xref:System.StringComparison> パラメーターを含み、<xref:System.StringComparison.Ordinal?displayProperty=nameWithType> または <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> を引数として指定するメソッドを呼び出して、大文字と小文字を区別するか、大文字と小文字を区別しない序数の比較を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1228">Instead, you should perform a case-sensitive or case-insensitive ordinal comparison by calling a method that includes a <xref:System.StringComparison> parameter and supplying either <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> as an argument.</span></span> <span data-ttu-id="e93bb-1229">カルチャに依存した文字列操作を実行するコードは、現在のカルチャが変更された場合、またはコードを実行しているコンピューターのカルチャが、コードのテストに使用されるカルチャと異なる場合に、セキュリティ上の脆弱性を引き起こす可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1229">Code that performs culture-sensitive string operations can cause security vulnerabilities if the current culture is changed or if the culture on the computer that is running the code differs from the culture that is used to test the code.</span></span> <span data-ttu-id="e93bb-1230">これに対して、序数に基づく比較は、比較対象の文字のバイナリ値だけに依存します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1230">In contrast, an ordinal comparison depends solely on the binary value of the compared characters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.Parent" />
        <altmember cref="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsNeutralCulture">
      <MemberSignature Language="C#" Value="public virtual bool IsNeutralCulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNeutralCulture" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsNeutralCulture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsNeutralCulture { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNeutralCulture : bool" Usage="System.Globalization.CultureInfo.IsNeutralCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1231">現在の <see cref="T:System.Globalization.CultureInfo" /> がニュートラル カルチャを表しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1231">Gets a value indicating whether the current <see cref="T:System.Globalization.CultureInfo" /> represents a neutral culture.</span></span></summary>
        <value><span data-ttu-id="e93bb-1232">現在の <see langword="true" /> がニュートラル カルチャを表している場合は <see cref="T:System.Globalization.CultureInfo" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1232"><see langword="true" /> if the current <see cref="T:System.Globalization.CultureInfo" /> represents a neutral culture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1233">ニュートラルカルチャは、言語に関連付けられているが、国や地域に関連付けられていないカルチャです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1233">A neutral culture is a culture that is associated with a language but not with a country or region.</span></span> <span data-ttu-id="e93bb-1234">これは、言語と国または地域の両方に関連付けられているカルチャである、特定のカルチャとは異なります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1234">It differs from a specific culture, which is a culture that is associated with both a language and a country or region.</span></span> <span data-ttu-id="e93bb-1235">たとえば、fr はニュートラルフランス語カルチャの名前、fr-fr はフランスのフランス語カルチャの名前です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1235">For example, fr is the name for the neutral French culture, while fr-FR is the name for the French culture in France.</span></span>  
  
 <span data-ttu-id="e93bb-1236">このプロパティが `false`を返す場合、カルチャは特定のカルチャまたはインバリアントカルチャになります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1236">If this property returns `false`, the culture is either a specific culture or the invariant culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1237">次のコード例では、中国語を使用するカルチャがニュートラルカルチャであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1237">The following code example determines which cultures using the Chinese language are neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1238">この例では、zh-CHS および zh-CHT の古いカルチャ名を、カルチャ識別子としてそれぞれ 0x0004 と 0x7C04 を使用して表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1238">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="e93bb-1239">ただし、Windows Vista アプリケーションでは、zh-hant の代わりに zh-tw と zh-tw Zh-tw 名の代わりに zh-tw-Hans 名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1239">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-1240">Zh-tw と zh-tw の Hans は、現在の標準を表します。古い名前を使用する理由がない限り、この名前を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1240">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CPP/neutralculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/CS/neutralculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.IsNeutralCulture2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.IsNeutralCulture2/VB/neutralculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Globalization.CultureInfo.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1241">現在の <see cref="T:System.Globalization.CultureInfo" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1241">Gets a value indicating whether the current <see cref="T:System.Globalization.CultureInfo" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="e93bb-1242">現在の <see langword="true" /> が読み取り専用の場合は <see cref="T:System.Globalization.CultureInfo" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1242"><see langword="true" /> if the current <see cref="T:System.Globalization.CultureInfo" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e93bb-1243">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1243">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1244"><xref:System.Globalization.CultureInfo> が読み取り専用の場合、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> インスタンスと <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスも読み取り専用になります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1244">If the <xref:System.Globalization.CultureInfo> is read-only, the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> and <xref:System.Globalization.CultureInfo.NumberFormat%2A> instances are also read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1245">次のコード例は、<xref:System.Globalization.CultureInfo.IsReadOnly%2A> が <xref:System.Globalization.CultureInfo>に関連付けられている <xref:System.Globalization.DateTimeFormatInfo> と <xref:System.Globalization.NumberFormatInfo> インスタンスを保護するのにも役立つことを示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1245">The following code example shows that <xref:System.Globalization.CultureInfo.IsReadOnly%2A> also helps protect the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardLayoutId">
      <MemberSignature Language="C#" Value="public virtual int KeyboardLayoutId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyboardLayoutId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyboardLayoutId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyboardLayoutId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardLayoutId : int" Usage="System.Globalization.CultureInfo.KeyboardLayoutId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1246">アクティブな入力ロケール識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1246">Gets the active input locale identifier.</span></span></summary>
        <value><span data-ttu-id="e93bb-1247">入力ロケール識別子を指定する 32 ビットの符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1247">A 32-bit signed number that specifies an input locale identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1248">入力ロケール識別子は、以前はキーボードレイアウトと呼ばれていました。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1248">The input locale identifier was formerly called the keyboard layout.</span></span> <span data-ttu-id="e93bb-1249">入力ロケール識別子は、音声からテキストへの変換、入力方式エディター (IME)、またはその他の入力形式を示すことができるため、キーボードレイアウトよりも広範な概念です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1249">An input locale identifier is a broader concept than a keyboard layout since it can also indicate a speech-to-text converter, an Input Method Editor (IME), or any other form of input.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public virtual int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CultureInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1250">現在の <see cref="T:System.Globalization.CultureInfo" /> のカルチャ識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1250">Gets the culture identifier for the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <value><span data-ttu-id="e93bb-1251">現在の <see cref="T:System.Globalization.CultureInfo" /> のカルチャ識別子。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1251">The culture identifier for the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1252">ほとんどの場合、カルチャ識別子は対応する NLS ロケール識別子にマップされます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1252">In most cases, the culture identifier is mapped to the corresponding NLS locale identifier.</span></span>  
  
 <span data-ttu-id="e93bb-1253">Windows 10 より前のバージョンの Windows では、ロケール識別子 `LOCALE_CUSTOM_UNSPECIFIED` (0x1000 または 4096) が、ユーザーによって作成されたカスタムカルチャに割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1253">In versions of Windows prior to Windows 10, the locale identifier `LOCALE_CUSTOM_UNSPECIFIED` (0x1000, or 4096) is assigned to custom cultures created by the user.</span></span> <span data-ttu-id="e93bb-1254">Windows 10 以降では、一意のロケール識別子を持たず、システムによって提供される完全なデータを持たないカルチャに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1254">Starting with Windows 10, it is assigned to any culture that does not have a unique locale identifier and does not have complete system-provided data.</span></span> <span data-ttu-id="e93bb-1255">その結果、カルチャを反復処理し、<xref:System.Globalization.CultureInfo.LCID%2A> 値 `LOCALE_CUSTOM_UNSPECIFIED` を持つコードを取得するコードは、Windows 10 で実行された場合、<xref:System.Globalization.CultureInfo> オブジェクトのより大きなサブセットを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1255">As a result, code that iterates cultures and retrieves those with an <xref:System.Globalization.CultureInfo.LCID%2A> value of `LOCALE_CUSTOM_UNSPECIFIED` returns a larger subset of <xref:System.Globalization.CultureInfo> objects if run under Windows 10.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1256">次のコード例は、国際並べ替え順序を使用してスペイン語 (スペイン) 用の <xref:System.Globalization.CultureInfo> を作成する方法と、従来の並べ替え順序を持つ別の <xref:System.Globalization.CultureInfo> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1256">The following code example shows how to create a <xref:System.Globalization.CultureInfo> for Spanish (Spain) with the international sort order and another <xref:System.Globalization.CultureInfo> with the traditional sort order.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CultureInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1257">*languagecode2*-*country/regioncode2* という形式のカルチャ名を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1257">Gets the culture name in the format *languagecode2*-*country/regioncode2*.</span></span></summary>
        <value><span data-ttu-id="e93bb-1258">現在の <see cref="T:System.Globalization.CultureInfo" /> がカルチャに依存している場合は、 *languagecode2*-*country/regioncode2*という形式のカルチャ名。または、インバリアントカルチャの場合は空の文字列。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1258">The culture name in the format *languagecode2*-*country/regioncode2*, if the current <see cref="T:System.Globalization.CultureInfo" /> is culture-dependent; or an empty string, if it's an invariant culture.</span></span> <span data-ttu-id="e93bb-1259">*languagecode2* は、ISO 639-1 に基づく小文字の 2 文字コードです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1259">*languagecode2* is a lowercase two-letter code derived from ISO 639-1.</span></span> <span data-ttu-id="e93bb-1260">*country/regioncode2* は、ISO 3166 から派生したもので、通常は 2 文字の英語大文字で構成されます (BCP-47 の言語タグ)。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1260">*country/regioncode2* is derived from ISO 3166 and usually consists of two uppercase letters, or a BCP-47 language tag.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="e93bb-1261">Windows システムで <xref:System.Globalization.CultureInfo.Name%2A> プロパティが返すことのできる定義済みカルチャ名と識別子の一覧については、 [windows でサポートされる言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の「**言語タグ**」列を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1261">For a list of predefined culture names and identifiers that the <xref:System.Globalization.CultureInfo.Name%2A> property can return on Windows systems, see the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-1262">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1262">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span> <span data-ttu-id="e93bb-1263">さらに、Windows 10 以降では、`name` 有効な BCP-47 言語タグを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1263">In addition, starting with Windows 10, `name` can be any valid BCP-47 language tag.</span></span> <span data-ttu-id="e93bb-1264">カルチャ名は変更される可能性があり、カスタムカルチャの名前を反映することもできます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1264">Note that culture names are subject to change, and that they also can reflect the names of custom cultures.</span></span>  
  
 <span data-ttu-id="e93bb-1265"><xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> プロパティは、<xref:System.Globalization.CultureInfo> クラスのトピックに記載されている名前付け基準に従います。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1265">The <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType> property follows the naming standards provided in the <xref:System.Globalization.CultureInfo> class topic.</span></span> <span data-ttu-id="e93bb-1266">代替の並べ替え順序を指定しないカルチャ名の短い形式を返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1266">It returns the short form of the culture name that excludes any indication of an alternate sort order.</span></span> <span data-ttu-id="e93bb-1267">たとえば、文字列 "de DE_phoneb" を使用して <xref:System.Globalization.CultureInfo> オブジェクトをインスタンス化し、代替の並べ替え順序を反映する場合、<xref:System.Globalization.CultureInfo.Name%2A> プロパティは "de DE" を返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1267">For example, if you instantiate a <xref:System.Globalization.CultureInfo> object by using the string "de-DE_phoneb" to reflect an alternate sort order, the <xref:System.Globalization.CultureInfo.Name%2A> property returns "de-DE".</span></span>  
  
 <span data-ttu-id="e93bb-1268">カルチャの完全な名前を取得するには、<xref:System.Globalization.CultureInfo.DisplayName%2A>、<xref:System.Globalization.CultureInfo.EnglishName%2A>、または <xref:System.Globalization.CultureInfo.NativeName%2A> プロパティを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1268">To get the full name of the culture, you should use the <xref:System.Globalization.CultureInfo.DisplayName%2A>, <xref:System.Globalization.CultureInfo.EnglishName%2A>, or <xref:System.Globalization.CultureInfo.NativeName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1269">次のコード例では、ニュートラルカルチャのいくつかのプロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1269">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1270">この例では、zh-CHS および zh-CHT の古いカルチャ名を、カルチャ識別子としてそれぞれ 0x0004 と 0x7C04 を使用して表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1270">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="e93bb-1271">ただし、Windows Vista アプリケーションでは、zh-hant の代わりに zh-tw と zh-tw Zh-tw 名の代わりに zh-tw-Hans 名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1271">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-1272">Zh-tw と zh-tw の Hans は、現在の標準を表します。古い名前を使用する理由がない限り、この名前を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1272">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NativeName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NativeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NativeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeName : string" Usage="System.Globalization.CultureInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1273">カルチャの表示設定である、言語、国/地域、およびオプションのスクリプトで構成されるカルチャ名を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1273">Gets the culture name, consisting of the language, the country/region, and the optional script, that the culture is set to display.</span></span></summary>
        <value><span data-ttu-id="e93bb-1274">カルチャ名。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1274">The culture name.</span></span> <span data-ttu-id="e93bb-1275">言語の完全名、国/地域の完全名、およびオプションのスクリプトで構成されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1275">consisting of the full name of the language, the full name of the country/region, and the optional script.</span></span> <span data-ttu-id="e93bb-1276">形式については、<see cref="T:System.Globalization.CultureInfo" /> クラスの説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1276">The format is discussed in the description of the <see cref="T:System.Globalization.CultureInfo" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1277">.NET Framework の言語バージョンに関係なく、このプロパティの値は同じです。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1277">The value of this property is the same, regardless of the language version of the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="NumberFormat">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.NumberFormatInfo NumberFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.NumberFormatInfo NumberFormat" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.NumberFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NumberFormat As NumberFormatInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::NumberFormatInfo ^ NumberFormat { System::Globalization::NumberFormatInfo ^ get(); void set(System::Globalization::NumberFormatInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NumberFormat : System.Globalization.NumberFormatInfo with get, set" Usage="System.Globalization.CultureInfo.NumberFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.NumberFormatInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1278">数値、通貨、割合を表示する、カルチャに対応する書式を定義する <see cref="T:System.Globalization.NumberFormatInfo" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1278">Gets or sets a <see cref="T:System.Globalization.NumberFormatInfo" /> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</span></span></summary>
        <value><span data-ttu-id="e93bb-1279">数値、通貨、および割合を表示する、カルチャに対応する書式を定義する <see cref="T:System.Globalization.NumberFormatInfo" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1279">A <see cref="T:System.Globalization.NumberFormatInfo" /> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="overrides"></a><span data-ttu-id="e93bb-1280">オーバーライド</span><span class="sxs-lookup"><span data-stu-id="e93bb-1280">Overrides</span></span>  
 <span data-ttu-id="e93bb-1281">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1281">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-1282">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1282">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="e93bb-1283"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`、指定されたカルチャが Windows の現在のカルチャに一致する場合、<xref:System.Globalization.CultureInfo> は、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定や、<xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティなど、これらのオーバーライドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1283">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-1284">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1284">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="e93bb-1285"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティと <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティの値は、ユーザーがプロパティにアクセスするまで計算されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1285">The values of the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property and the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property are not calculated until the user accesses the property.</span></span> <span data-ttu-id="e93bb-1286">アプリケーションの実行中に、ユーザーがコントロールパネルを使用して現在のカルチャを新しいカルチャに変更し、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> または <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティにアクセスする場合、アプリケーションは新しいカルチャの既定値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1286">If the user uses the Control Panel to change the current culture to a new culture while the application is running and then accesses the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> or <xref:System.Globalization.CultureInfo.NumberFormat%2A> property, the application retrieves the defaults for the new culture.</span></span> <span data-ttu-id="e93bb-1287">元のカルチャのオーバーライドではありません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1287">not the overrides for the original culture.</span></span> <span data-ttu-id="e93bb-1288">元の現在のカルチャのオーバーライドを保持するには、現在のカルチャを変更する前に、アプリケーションが <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> および <xref:System.Globalization.CultureInfo.NumberFormat%2A> プロパティにアクセスする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1288">To preserve the overrides for the original current culture, the application should access the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> and <xref:System.Globalization.CultureInfo.NumberFormat%2A> properties before changing the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1289">次のコード例は、<xref:System.Globalization.CultureInfo>に関連付けられている <xref:System.Globalization.DateTimeFormatInfo> と <xref:System.Globalization.NumberFormatInfo> インスタンスも複製することを示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1289">The following code example shows that CultureInfo.Clone also clones the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CPP/yslin_cultureinfo_clone.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/CS/yslin_cultureinfo_clone.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Clone/VB/yslin_cultureinfo_clone.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-1290">プロパティが null に設定されています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1290">The property is set to null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e93bb-1291"><see cref="P:System.Globalization.CultureInfo.NumberFormat" /> プロパティまたは <see cref="T:System.Globalization.NumberFormatInfo" /> プロパティのいずれかが設定され、<see cref="T:System.Globalization.CultureInfo" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1291">The <see cref="P:System.Globalization.CultureInfo.NumberFormat" /> property or any of the <see cref="T:System.Globalization.NumberFormatInfo" /> properties is set, and the <see cref="T:System.Globalization.CultureInfo" /> is read-only.</span></span></exception>
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="M:System.Globalization.CultureInfo.GetFormat(System.Type)" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
      </Docs>
    </Member>
    <Member MemberName="OptionalCalendars">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.Calendar[] OptionalCalendars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.Calendar[] OptionalCalendars" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OptionalCalendars As Calendar()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Globalization::Calendar ^&gt; ^ OptionalCalendars { cli::array &lt;System::Globalization::Calendar ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OptionalCalendars : System.Globalization.Calendar[]" Usage="System.Globalization.CultureInfo.OptionalCalendars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.Calendar[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1292">カルチャで使用できる暦の一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1292">Gets the list of calendars that can be used by the culture.</span></span></summary>
        <value><span data-ttu-id="e93bb-1293">現在の <see cref="T:System.Globalization.Calendar" /> が表すカルチャで使用できる暦を表す <see cref="T:System.Globalization.CultureInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1293">An array of type <see cref="T:System.Globalization.Calendar" /> that represents the calendars that can be used by the culture represented by the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1294">アプリケーションは、<xref:System.Globalization.DateTimeFormatInfo> クラスのインスタンスである <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>の <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> プロパティを設定することによって、現在の <xref:System.Globalization.CultureInfo> によって使用されるカレンダーを変更します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1294">Your application changes the calendar used by the current <xref:System.Globalization.CultureInfo> by setting the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A>, which is an instance of the <xref:System.Globalization.DateTimeFormatInfo> class.</span></span> <span data-ttu-id="e93bb-1295">新しい予定表は、<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>に一覧表示されている予定表のいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1295">The new calendar must be one of the calendars listed in <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>.</span></span> <span data-ttu-id="e93bb-1296"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> には、その <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>に関連付けられた日付と時刻の書式をカスタマイズするその他のプロパティも含まれています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1296"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A> also includes other properties that customize the date and time formatting associated with that <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1297">次のコード例は、カルチャでサポートされている <xref:System.Globalization.GregorianCalendar> のバージョンを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1297">The following code example demonstrates how to determine the <xref:System.Globalization.GregorianCalendar> versions supported by the culture.</span></span>  
  
 [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CPP/gregoriancalendartypes.cpp#1)]
 [!code-csharp[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/CS/gregoriancalendartypes.cs#1)]
 [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.GregorianCalendarTypes/VB/gregoriancalendartypes.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.CultureInfo Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Parent" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Parent As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::CultureInfo ^ Parent { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1298">現在の <see cref="T:System.Globalization.CultureInfo" /> の親カルチャを表す <see cref="T:System.Globalization.CultureInfo" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1298">Gets the <see cref="T:System.Globalization.CultureInfo" /> that represents the parent culture of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <value><span data-ttu-id="e93bb-1299">現在の <see cref="T:System.Globalization.CultureInfo" /> の親カルチャを表す <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1299">The <see cref="T:System.Globalization.CultureInfo" /> that represents the parent culture of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1300">カルチャには、特定のカルチャの親がニュートラルカルチャであり、ニュートラルカルチャの親が <xref:System.Globalization.CultureInfo.InvariantCulture%2A>であり、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> の親がインバリアントカルチャである階層があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1300">The cultures have a hierarchy in which the parent of a specific culture is a neutral culture, the parent of a neutral culture is the <xref:System.Globalization.CultureInfo.InvariantCulture%2A>, and the parent of the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> is the invariant culture itself.</span></span> <span data-ttu-id="e93bb-1301">親カルチャには、その子に共通する情報のセットのみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1301">The parent culture encompasses only the set of information that is common among its children.</span></span>  
  
 <span data-ttu-id="e93bb-1302">特定のカルチャのリソースがシステムで使用できない場合は、ニュートラルカルチャのリソースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1302">If the resources for the specific culture are not available in the system, the resources for the neutral culture are used.</span></span> <span data-ttu-id="e93bb-1303">ニュートラルカルチャのリソースが使用できない場合は、メインアセンブリに埋め込まれているリソースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1303">If the resources for the neutral culture are not available, the resources embedded in the main assembly are used.</span></span> <span data-ttu-id="e93bb-1304">リソースフォールバックプロセスの詳細については、「[リソースのパッケージ化と配置](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1304">For more information on the resource fallback process, see [Packaging and Deploying Resources](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1305">次のコード例では、中国語言語を使用して、特定のカルチャの親カルチャを決定します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1305">The following code example determines the parent culture of each specific culture using the Chinese language.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1306">この例では、zh-CHS および zh-CHT の古いカルチャ名を、カルチャ識別子としてそれぞれ 0x0004 と 0x7C04 を使用して表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1306">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="e93bb-1307">ただし、Windows Vista アプリケーションでは、zh-hant の代わりに zh-tw と zh-tw Zh-tw 名の代わりに zh-tw-Hans 名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1307">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-1308">Zh-tw と zh-tw の Hans は、現在の標準を表します。古い名前を使用する理由がない限り、この名前を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1308">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CPP/parentculture.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/CS/parentculture.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.Parent#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.Parent/VB/parentculture.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Globalization.CultureInfo.#ctor" />
        <altmember cref="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InstalledUICulture" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Globalization.CultureInfo ReadOnly (System.Globalization.CultureInfo ci);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CultureInfo ReadOnly(class System.Globalization.CultureInfo ci) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (ci As CultureInfo) As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CultureInfo ^ ReadOnly(System::Globalization::CultureInfo ^ ci);" />
      <MemberSignature Language="F#" Value="static member ReadOnly : System.Globalization.CultureInfo -&gt; System.Globalization.CultureInfo" Usage="System.Globalization.CultureInfo.ReadOnly ci" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="ci"><span data-ttu-id="e93bb-1309">ラップする <see cref="T:System.Globalization.CultureInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1309">The <see cref="T:System.Globalization.CultureInfo" /> object to wrap.</span></span></param>
        <summary><span data-ttu-id="e93bb-1310">指定した <see cref="T:System.Globalization.CultureInfo" /> オブジェクトをラップする読み取り専用のラッパーを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1310">Returns a read-only wrapper around the specified <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1311"><see cref="T:System.Globalization.CultureInfo" /> をラップする読み取り専用の <paramref name="ci" /> ラッパー。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1311">A read-only <see cref="T:System.Globalization.CultureInfo" /> wrapper around <paramref name="ci" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1312">このラッパーは、`ci`、または `ci`によって返されるオブジェクトに対する変更を防止します。<xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span><span class="sxs-lookup"><span data-stu-id="e93bb-1312">This wrapper prevents any modifications to `ci`, or the objects returned by the `ci`.<xref:System.Globalization.CultureInfo.DateTimeFormat%2A></span></span> <span data-ttu-id="e93bb-1313">および `ci`ます。<xref:System.Globalization.CultureInfo.NumberFormat%2A></span><span class="sxs-lookup"><span data-stu-id="e93bb-1313">and `ci`.<xref:System.Globalization.CultureInfo.NumberFormat%2A></span></span> <span data-ttu-id="e93bb-1314">属性.</span><span class="sxs-lookup"><span data-stu-id="e93bb-1314">properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1315">次の例は、<xref:System.Globalization.CultureInfo.ReadOnly%2A> メソッドを使用して、<xref:System.Globalization.CultureInfo>に関連付けられた <xref:System.Globalization.DateTimeFormatInfo> と <xref:System.Globalization.NumberFormatInfo> インスタンスを保護する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1315">The following example shows that the <xref:System.Globalization.CultureInfo.ReadOnly%2A> method helps protect the <xref:System.Globalization.DateTimeFormatInfo> and <xref:System.Globalization.NumberFormatInfo> instances associated with the <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CPP/yslin_cultureinfo_readonly.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/CS/yslin_cultureinfo_readonly.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.ReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.ReadOnly/VB/yslin_cultureinfo_readonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e93bb-1316"><paramref name="ci" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1316"><paramref name="ci" /> is null.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="TextInfo">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.TextInfo TextInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.TextInfo TextInfo" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TextInfo As TextInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Globalization::TextInfo ^ TextInfo { System::Globalization::TextInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TextInfo : System.Globalization.TextInfo" Usage="System.Globalization.CultureInfo.TextInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.TextInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1317">カルチャに関連付けられている書記体系を定義する <see cref="T:System.Globalization.TextInfo" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1317">Gets the <see cref="T:System.Globalization.TextInfo" /> that defines the writing system associated with the culture.</span></span></summary>
        <value><span data-ttu-id="e93bb-1318">カルチャに関連付けられている書記体系を定義する <see cref="T:System.Globalization.TextInfo" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1318">The <see cref="T:System.Globalization.TextInfo" /> that defines the writing system associated with the culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1319"><xref:System.Globalization.CultureInfo.TextInfo%2A> プロパティは、文字列のカルチャ固有の大文字と小文字の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1319">The <xref:System.Globalization.CultureInfo.TextInfo%2A> property provides culture-specific casing information for strings.</span></span> <span data-ttu-id="e93bb-1320">カルチャを認識しない大文字小文字の区別を行うには、アプリケーションで <xref:System.Globalization.CultureInfo.InvariantCulture%2A>の <xref:System.Globalization.CultureInfo.TextInfo%2A> プロパティを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1320">To perform culture-insensitive casing, the application should use the <xref:System.Globalization.CultureInfo.TextInfo%2A> property of <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1321">次のコード例は、国際並べ替え順序を使用してスペイン語 (スペイン) 用の <xref:System.Globalization.CultureInfo> を作成する方法と、従来の並べ替え順序を持つ別の <xref:System.Globalization.CultureInfo> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1321">The following code example shows how to create a <xref:System.Globalization.CultureInfo> for Spanish (Spain) with the international sort order and another <xref:System.Globalization.CultureInfo> with the traditional sort order.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CPP/spanishspain.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo_esES#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/CS/spanishspain.cs#1)]
 [!code-vb[System.Globalization.CultureInfo_esES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo_esES/VB/spanishspain.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.TextInfo" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1322">現在の <see cref="T:System.Globalization.CultureInfo" /> の言語に対する ISO 639-2 の 3 桁の文字コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1322">Gets the ISO 639-2 three-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <value><span data-ttu-id="e93bb-1323">現在の <see cref="T:System.Globalization.CultureInfo" /> の言語に対する ISO 639-2 の 3 桁文字コード。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1323">The ISO 639-2 three-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1324">たとえば、英語の3文字の省略形は "eng" です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1324">For example, the three-letter abbreviation for English is "eng".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1325">プロセス間で通信を行う場合やデータを保持する場合は、通常、完全な <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1325">When communicating between processes or persisting data it is usually better to use the full <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e93bb-1326">言語のみを使用すると、コンテキストとデータが失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1326">Using just the language can lose context and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1327">次のコード例では、ニュートラルカルチャのいくつかのプロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1327">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1328">この例では、zh-CHS および zh-CHT の古いカルチャ名を、カルチャ識別子としてそれぞれ 0x0004 と 0x7C04 を使用して表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1328">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="e93bb-1329">ただし、Windows Vista アプリケーションでは、zh-hant の代わりに zh-tw と zh-tw Zh-tw 名の代わりに zh-tw-Hans 名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1329">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-1330">Zh-tw と zh-tw の Hans は、現在の標準を表します。古い名前を使用する理由がない限り、この名前を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1330">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsLanguageName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ThreeLetterWindowsLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ThreeLetterWindowsLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreeLetterWindowsLanguageName : string" Usage="System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1331">Windows API の定義に従って、言語に対する 3 文字コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1331">Gets the three-letter code for the language as defined in the Windows API.</span></span></summary>
        <value><span data-ttu-id="e93bb-1332">Windows API で定義されている言語に対する 3 文字のコード。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1332">The three-letter code for the language as defined in the Windows API.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1333">このプロパティは、LOCALE_SABBREVLANGNAME 値と `GetLocaleInfo` Windows API メソッドと同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1333">This property returns the same value as the Windows API method `GetLocaleInfo` with the LOCALE_SABBREVLANGNAME value.</span></span> <span data-ttu-id="e93bb-1334">たとえば、Windows API で定義されているように、英語 (米国) の3文字のコードは "enu" です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1334">For example, the three-letter code for English (United States) as defined in the Windows API is "enu".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1335">プロセス間で通信を行う場合やデータを保持する場合は、通常、完全な <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1335">When communicating between processes or persisting data it is usually better to use the full <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e93bb-1336">言語のみを使用すると、コンテキストとデータが失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1336">Using just the language can lose context and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1337">次のコード例では、ニュートラルカルチャのいくつかのプロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1337">The following code example displays several properties of the neutral cultures.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1338">この例では、zh-CHS および zh-CHT の古いカルチャ名を、カルチャ識別子としてそれぞれ 0x0004 と 0x7C04 を使用して表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1338">The example displays the older zh-CHS and zh-CHT culture names with the 0x0004 and 0x7C04 culture identifiers, respectively.</span></span> <span data-ttu-id="e93bb-1339">ただし、Windows Vista アプリケーションでは、zh-hant の代わりに zh-tw と zh-tw Zh-tw 名の代わりに zh-tw-Hans 名を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1339">However, your Windows Vista applications should use the zh-Hans name instead of zh-CHS and the zh-Hant name instead of zh-CHT.</span></span> <span data-ttu-id="e93bb-1340">Zh-tw と zh-tw の Hans は、現在の標準を表します。古い名前を使用する理由がない限り、この名前を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1340">The zh-Hans and zh-Hant names represent the current standard, and should be used unless you have a reason for using the older names.</span></span>  
  
 [!code-cpp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CPP/getcultures.cpp#1)]
 [!code-csharp[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.GetCultures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CultureInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="cultureInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e93bb-1341"><see cref="T:System.Globalization.CultureInfo" />languagecode2\**-country/regioncode2* という形式で、現在の \* の名前を格納している文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1341">Returns a string containing the name of the current <see cref="T:System.Globalization.CultureInfo" /> in the format *languagecode2*-*country/regioncode2*.</span></span></summary>
        <returns><span data-ttu-id="e93bb-1342">現在の <see cref="T:System.Globalization.CultureInfo" /> の名前を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1342">A string containing the name of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1343">このメソッドは、<xref:System.Object.ToString%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1343">This method overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e93bb-1344">このメソッドは、<xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> または <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> コンストラクター、または <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> または <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29> メソッドに渡されるカルチャ名の正規化されたバージョンを返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1344">It returns a normalized version of the culture name that is passed to the <xref:System.Globalization.CultureInfo.%23ctor%28System.String%29> or <xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29> constructor or to the <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> or <xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29> method.</span></span> <span data-ttu-id="e93bb-1345">*Languagecode2*の文字を小文字に変換し、必要に応じて*country/regioncode2*の文字を大文字に変換することによって、結果の文字列を正規化します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1345">It normalizes the result string by converting characters in *languagecode2* to lowercase and converting characters in *country/regioncode2* to uppercase if necessary.</span></span>  
  
 <span data-ttu-id="e93bb-1346">Windows システム上の定義済みカルチャ名は、 [windows でサポートされている言語/地域名の一覧](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c)の **[言語タグ]** 列に一覧表示されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1346">Predefined culture names on Windows systems are listed in the **Language tag** column in the [list of language/region names supported by Windows](https://docs.microsoft.com/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c).</span></span> <span data-ttu-id="e93bb-1347">カルチャ名は、[BCP 47](https://tools.ietf.org/html/bcp47) によって定義されている標準に準拠します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1347">Culture names follow the standard defined by [BCP 47](https://tools.ietf.org/html/bcp47).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISOLanguageName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISOLanguageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISOLanguageName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TwoLetterISOLanguageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TwoLetterISOLanguageName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TwoLetterISOLanguageName : string" Usage="System.Globalization.CultureInfo.TwoLetterISOLanguageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1348">現在の <see cref="T:System.Globalization.CultureInfo" /> の言語に対する ISO 639-1 の 2 桁の文字コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1348">Gets the ISO 639-1 two-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></summary>
        <value><span data-ttu-id="e93bb-1349">現在の <see cref="T:System.Globalization.CultureInfo" /> の言語に対する ISO 639-1 の 2 桁文字コード。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1349">The ISO 639-1 two-letter code for the language of the current <see cref="T:System.Globalization.CultureInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1350">たとえば、英語の2文字の省略形は "en" です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1350">For example, the two-letter abbreviation for English is "en".</span></span> <span data-ttu-id="e93bb-1351">インバリアントカルチャの <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> プロパティ値は "iv" です。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1351">The <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> property value for the invariant culture is "iv".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e93bb-1352">プロセス間で通信を行う場合やデータを保持する場合は、通常、完全な <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1352">When communicating between processes or persisting data it is usually better to use the full <xref:System.Globalization.CultureInfo.Name%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="e93bb-1353">言語のみを使用すると、コンテキストとデータが失われる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1353">Using just the language can lose context and data.</span></span>  
  
 <span data-ttu-id="e93bb-1354">ISO 639-1 で特定のカルチャに対して2文字の言語コードが定義されていない場合、<xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> プロパティは、3つ以上の文字で構成される文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1354">If ISO 639-1 does not define a two-letter language code for a particular culture, the <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> property returns a string that consists of three or more letters.</span></span> <span data-ttu-id="e93bb-1355">詳細については、例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1355">For more information, see the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e93bb-1356">次の例では、<xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> プロパティが2文字の言語コードで構成されていないカルチャを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1356">The following example lists the cultures whose <xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A> property does not consist of a two-letter language code.</span></span>  
  
 [!code-csharp[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/cs/twoletterisolanguagename1.cs#1)]
 [!code-vb[System.Globalization.CultureInfo.TwoLetterISOLanguageName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.twoletterisolanguagename/vb/twoletterisolanguagename1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.Name" />
        <altmember cref="P:System.Globalization.CultureInfo.DisplayName" />
        <altmember cref="P:System.Globalization.CultureInfo.NativeName" />
        <altmember cref="P:System.Globalization.CultureInfo.EnglishName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName" />
        <altmember cref="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName" />
      </Docs>
    </Member>
    <Member MemberName="UseUserOverride">
      <MemberSignature Language="C#" Value="public bool UseUserOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseUserOverride" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CultureInfo.UseUserOverride" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseUserOverride As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseUserOverride { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseUserOverride : bool" Usage="System.Globalization.CultureInfo.UseUserOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e93bb-1357">現在の <see cref="T:System.Globalization.CultureInfo" /> オブジェクトでユーザーが選択したカルチャ設定を使用するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1357">Gets a value indicating whether the current <see cref="T:System.Globalization.CultureInfo" /> object uses the user-selected culture settings.</span></span></summary>
        <value><span data-ttu-id="e93bb-1358">現在の <see langword="true" /> でユーザーが選択したカルチャ設定を使用する場合は <see cref="T:System.Globalization.CultureInfo" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1358"><see langword="true" /> if the current <see cref="T:System.Globalization.CultureInfo" /> uses the user-selected culture settings; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e93bb-1359">ユーザーは、コントロールパネルの [地域と言語のオプション] の部分を使用して、Windows の現在のカルチャに関連付けられている値の一部を上書きすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1359">The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</span></span> <span data-ttu-id="e93bb-1360">たとえば、ユーザーは、日付を別の形式で表示したり、カルチャに既定以外の通貨を使用したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1360">For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</span></span>  
  
 <span data-ttu-id="e93bb-1361"><xref:System.Globalization.CultureInfo.UseUserOverride%2A> が `true`、指定されたカルチャが Windows の現在のカルチャに一致する場合、<xref:System.Globalization.CultureInfo> は、<xref:System.Globalization.CultureInfo.DateTimeFormat%2A> プロパティによって返される <xref:System.Globalization.DateTimeFormatInfo> インスタンスのプロパティのユーザー設定や、<xref:System.Globalization.NumberFormatInfo> プロパティによって返される <xref:System.Globalization.CultureInfo.NumberFormat%2A> インスタンスのプロパティなど、これらのオーバーライドを使用します。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1361">If <xref:System.Globalization.CultureInfo.UseUserOverride%2A> is `true` and the specified culture matches the current culture of Windows, the <xref:System.Globalization.CultureInfo> uses those overrides, including user settings for the properties of the <xref:System.Globalization.DateTimeFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property, and the properties of the <xref:System.Globalization.NumberFormatInfo> instance returned by the <xref:System.Globalization.CultureInfo.NumberFormat%2A> property.</span></span> <span data-ttu-id="e93bb-1362">ユーザー設定が <xref:System.Globalization.CultureInfo>に関連付けられているカルチャと互換性がない場合、たとえば、選択したカレンダーが <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>でない場合、メソッドの結果とプロパティの値は定義されません。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1362">If the user settings are incompatible with the culture associated with the <xref:System.Globalization.CultureInfo>, for example, if the selected calendar is not one of the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>, the results of the methods and the values of the properties are undefined.</span></span>  
  
 <span data-ttu-id="e93bb-1363">このプロパティは、<xref:System.Globalization.CultureInfo> が作成されるときに設定されます。</span><span class="sxs-lookup"><span data-stu-id="e93bb-1363">This property is set when the <xref:System.Globalization.CultureInfo> is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
