<Type Name="IdnMapping" FullName="System.Globalization.IdnMapping">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79d0c828e380e67101b98197432dc83cc0f93cbf" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83543593" /></Metadata><TypeSignature Language="C#" Value="public sealed class IdnMapping" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IdnMapping extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.IdnMapping" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IdnMapping" />
  <TypeSignature Language="C++ CLI" Value="public ref class IdnMapping sealed" />
  <TypeSignature Language="F#" Value="type IdnMapping = class" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Globalization.Extensions" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6c9ae-101">インターネット ドメイン名の非 ASCII 文字の使用をサポートします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-101">Supports the use of non-ASCII characters for Internet domain names.</span></span> <span data-ttu-id="6c9ae-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-103">インターネットドメイン名は、ドメイン名ラベルと呼ばれる1つ以上の部分で構成され、ラベル区切り記号で区切られます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-103">An Internet domain name consists of one or more parts, called domain name labels, separated by label separators.</span></span> <span data-ttu-id="6c9ae-104">たとえば、ドメイン名 "www.proseware.com" は、ピリオドで区切られたラベル "www"、""、および "com" で構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-104">For example, the domain name "www.proseware.com" consists of the labels, "www", "proseware", and "com", separated by periods.</span></span> <span data-ttu-id="6c9ae-105">標準ドメイン名は、U + 0021 から U + 007E までの、US-ASCII (または基本的なラテン) 文字範囲内の指定された文字で構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-105">Standard domain names consist of designated characters in the US-ASCII (or Basic Latin) character range, from U+0021 to U+007E.</span></span> <span data-ttu-id="6c9ae-106">Us-ascii 文字セットを使用しないカルチャでのインターネットの使用を容易にするために、us-ascii 文字の範囲外の Unicode 文字のインクルードをサポートするために、アプリケーションの国際化ドメイン名 (IDNA) 標準が2003で採用されています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-106">To facilitate Internet usage in cultures that do not use the US-ASCII character set, the Internationalizing Domain Names in Applications (IDNA) standard was adopted in 2003 to support the inclusion of Unicode characters outside the US-ASCII character range.</span></span> <span data-ttu-id="6c9ae-107">ただし、ネームサーバーとドメイン名解決は、引き続き US-ASCII 文字範囲内の文字に依存します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-107">However, name servers and domain name resolution continue to rely on characters within the US-ASCII character range.</span></span>  
  
 <span data-ttu-id="6c9ae-108">IDNA メカニズムでは、Punycode を使用して、US-ASCII 文字範囲外の Unicode 文字を含む国際化ドメイン名を、ドメインネームシステムでサポートされている US-ASCII 文字範囲にマップします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-108">The IDNA mechanism uses Punycode to map an internationalized domain name that contains Unicode characters outside the US-ASCII character range to the US-ASCII character range supported by the domain name system.</span></span> <span data-ttu-id="6c9ae-109">IDNA メカニズムは、インターネットを介して送信されるデータではなく、ドメイン名の変換にのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-109">The IDNA mechanism is used to convert only domain names, not data transmitted over the Internet.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6c9ae-110">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]では、<xref:System.Globalization.IdnMapping> クラスは、使用しているオペレーティングシステムに応じて、IDNA 標準のさまざまなバージョンをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-110">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.Globalization.IdnMapping> class supports different versions of the IDNA standard, depending on the operating system in use:</span></span>  
>   
> - <span data-ttu-id="6c9ae-111">[!INCLUDE[win8](~/includes/win8-md.md)]で実行した場合、 [RFC 5891: 「アプリケーションでの国際化ドメイン名 (idna): プロトコル」](https://go.microsoft.com/fwlink/?LinkId=231875)に記載されている2008バージョンの idna 標準がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-111">When run on [!INCLUDE[win8](~/includes/win8-md.md)], it supports the 2008 version of the IDNA standard outlined by [RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol](https://go.microsoft.com/fwlink/?LinkId=231875).</span></span>
> - <span data-ttu-id="6c9ae-112">以前のバージョンの Windows オペレーティングシステムで実行されている場合、RFC 3490 によって概要が示されている標準の2003バージョン[(IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110)がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-112">When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by [RFC 3490: Internationalizing Domain Names in Applications (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).</span></span>
>   
>  <span data-ttu-id="6c9ae-113">これらの基準が特定の文字セットを処理する方法の違いについては、「 [Unicode Technical Standard #46: IDNA 互換性処理](https://go.microsoft.com/fwlink/?LinkId=232459)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-113">See [Unicode Technical Standard #46: IDNA Compatibility Processing](https://go.microsoft.com/fwlink/?LinkId=232459) for the differences in the way these standards handle particular sets of characters.</span></span>  
  
 <span data-ttu-id="6c9ae-114"><xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> メソッドは、ドメイン名を正規化し、正規化された名前を、us-ascii コードポイント範囲 (U + 0020 から U + 007E) の表示可能な Unicode 文字で構成される表現に変換し、各ラベルに ASCII 互換エンコード (ACE) プレフィックス ("xn") を付加します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-114">The <xref:System.Globalization.IdnMapping.GetAscii%2A?displayProperty=nameWithType> method normalizes a domain name, converts the normalized name to a representation that consists of displayable Unicode characters in the US-ASCII code point range (U+0020 to U+007E), and prepends an ASCII-compatible encoding (ACE) prefix ("xn--") to each label.</span></span> <span data-ttu-id="6c9ae-115"><xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType> メソッドは、<xref:System.Globalization.IdnMapping.GetAscii%2A> メソッドによって変換されたドメイン名ラベルを復元します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-115">The <xref:System.Globalization.IdnMapping.GetUnicode%2A?displayProperty=nameWithType> method restores the domain name labels converted by the <xref:System.Globalization.IdnMapping.GetAscii%2A> method.</span></span>  
  
 <span data-ttu-id="6c9ae-116">変換する文字列にラベルの区切り文字 (U + 3002)、全角 FULL STOP (U + FF0E)、および半角表意文字の完全停止 (U + FF61) が含まれている場合は、<xref:System.Globalization.IdnMapping.GetAscii%2A> メソッドによって、それらの区切り記号が完全停止 (ピリオド、U + 002E) に変換されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-116">If the string to be converted includes the label separator characters IDEOGRAPHIC FULL STOP (U+3002), FULLWIDTH FULL STOP (U+FF0E), and HALFWIDTH IDEOGRAPHIC FULL STOP (U+FF61), the <xref:System.Globalization.IdnMapping.GetAscii%2A> method converts them to the label separator FULL STOP (period, U+002E).</span></span> <span data-ttu-id="6c9ae-117">ただし、<xref:System.Globalization.IdnMapping.GetUnicode%2A> メソッドでは、元のラベル区切り文字は復元されません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-117">The <xref:System.Globalization.IdnMapping.GetUnicode%2A> method, however, does not restore the original label separator character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c9ae-118">次の例では、<xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> メソッドを使用して、国際化ドメイン名の配列を Punycode に変換します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-118">The following example uses the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> method to convert an array of internationalized domain names to Punycode.</span></span> <span data-ttu-id="6c9ae-119"><xref:System.Globalization.IdnMapping.GetUnicode%2A> メソッドは、Punycode のドメイン名を元のドメイン名に戻しますが、元のラベルの区切り記号は標準のラベルの区切り記号に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-119">The <xref:System.Globalization.IdnMapping.GetUnicode%2A> method then converts the Punycode domain name back to the original domain name, but replaces the original label separators with the standard label separator.</span></span>  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="6c9ae-120"><see cref="T:System.Globalization.IdnMapping" /> のすべてのパブリックメソッドはスレッドセーフであり、<see cref="T:System.Globalization.IdnMapping" /> インスタンスのプロパティも同時に設定されていない限り、複数のスレッドから同時に使用することができます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-120">All public methods of <see cref="T:System.Globalization.IdnMapping" /> are thread-safe and may be used concurrently from multiple threads, as long as the <see cref="T:System.Globalization.IdnMapping" /> instance's properties are not also set concurrently.</span></span></threadsafe>
    <altmember cref="Overload:System.String.Normalize" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IdnMapping();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6c9ae-121"><see cref="T:System.Globalization.IdnMapping" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-121">Initializes a new instance of the <see cref="T:System.Globalization.IdnMapping" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-122"><xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> プロパティと <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> プロパティは `false`に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-122">The <xref:System.Globalization.IdnMapping.AllowUnassigned%2A?displayProperty=nameWithType> and <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A?displayProperty=nameWithType> properties are initialized to `false`.</span></span> <span data-ttu-id="6c9ae-123">A-Z、0-9、ハイフン (-) 文字 (U + 002D)、ピリオド (.) 文字以外の ASCII 文字の小さなサブセットは、ドメイン名で使用できますが、割り当てられていない Unicode コードポイントは使用できません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-123">A small subset of ASCII characters other than A-Z, 0-9, the hyphen (-) character (U+002D), and the period (.) character are permitted in domain names, but unassigned Unicode code points are not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnassigned">
      <MemberSignature Language="C#" Value="public bool AllowUnassigned { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnassigned" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowUnassigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnassigned { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowUnassigned : bool with get, set" Usage="System.Globalization.IdnMapping.AllowUnassigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ae-124">未割り当ての Unicode コード ポイントが現在の <see cref="T:System.Globalization.IdnMapping" /> オブジェクトのメンバーによって実行される操作内で使用されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-124">Gets or sets a value that indicates whether unassigned Unicode code points are used in operations performed by members of the current <see cref="T:System.Globalization.IdnMapping" /> object.</span></span></summary>
        <value><span data-ttu-id="6c9ae-125">未割り当てのコード ポイントが操作内で使用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-125"><see langword="true" /> if unassigned code points are used in operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-126">登録されたドメイン名に未割り当てのコードポイントを含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-126">A registered domain name cannot contain unassigned code points.</span></span> <span data-ttu-id="6c9ae-127">その結果、<xref:System.Globalization.IdnMapping.AllowUnassigned%2A> プロパティの既定値は `false`になります。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-127">Consequently, the default value of the <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> property is `false`.</span></span> <span data-ttu-id="6c9ae-128">IDNA 仕様では、一致しないコードポイントだけが、一致する文字列 (ドメイン名の参照) に対するクエリでのみ許可されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-128">The IDNA specification permits unassigned code points only in queries for matching strings (that is, in domain name lookup).</span></span> <span data-ttu-id="6c9ae-129">ドメイン名に割り当てられていないコードポイントの使用の詳細については、 [rfc 3454 の「国際化文字列の準備 (stringprep)」](https://go.microsoft.com/fwlink/?LinkId=231873)および[rfc 5891 の「アプリケーションでの国際化ドメイン名 (idna): Protocol」](https://go.microsoft.com/fwlink/?LinkId=231875)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-129">For more information about the use of unassigned code points in domain names, see [RFC 3454, "Preparation of Internationalized Strings (stringprep)"](https://go.microsoft.com/fwlink/?LinkId=231873) and [RFC 5891, "Internationalized Domain Names in Applications (IDNA): Protocol"](https://go.microsoft.com/fwlink/?LinkId=231875).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6c9ae-130"><xref:System.Globalization.IdnMapping.AllowUnassigned%2A> プロパティが `false`の場合、プロパティに関連付けられている動作は、基になるオペレーティングシステムによって異なります。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-130">If the <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> property is `false`, the behavior associated with the property depends on the underlying operating system.</span></span> <span data-ttu-id="6c9ae-131">[!INCLUDE[win8](~/includes/win8-md.md)]では、<xref:System.Globalization.IdnMapping> クラスは、Unicode 6.0 標準に基づく IDNA 2008 に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-131">On [!INCLUDE[win8](~/includes/win8-md.md)], the <xref:System.Globalization.IdnMapping> class conforms to IDNA 2008, which is based on the Unicode 6.0 standard.</span></span> <span data-ttu-id="6c9ae-132">以前のバージョンの Windows では、<xref:System.Globalization.IdnMapping> クラスは、Unicode 3 に基づく IDNA 2003 をベースにしています。*x*。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-132">On previous versions of Windows, the <xref:System.Globalization.IdnMapping> class is based on IDNA 2003, which is based on Unicode 3.*x*.</span></span> <span data-ttu-id="6c9ae-133">IDNA 2003 で割り当てが解除されたコードポイントには、IDNA 2008 でサポートされている文字が割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-133">Some code points that were unassigned in IDNA 2003 have been assigned characters and are supported in IDNA 2008.</span></span> <span data-ttu-id="6c9ae-134">たとえば、U + 0221 は Unicode 4.0 で導入されました。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-134">For example, U+0221 was introduced in Unicode 4.0.</span></span> <span data-ttu-id="6c9ae-135">[!INCLUDE[win8](~/includes/win8-md.md)]では、"xn — 6la" としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-135">On [!INCLUDE[win8](~/includes/win8-md.md)], it is encoded as "xn—6la".</span></span> <span data-ttu-id="6c9ae-136">以前のバージョンの Windows では、<xref:System.ArgumentException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-136">On previous versions of Windows, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="idnMapping.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="6c9ae-137">現在のオブジェクトと比較する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-137">The object to compare to the current object.</span></span></param>
        <summary><span data-ttu-id="6c9ae-138">指定したオブジェクトが現在の <see cref="T:System.Globalization.IdnMapping" /> オブジェクトと等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-138">Indicates whether a specified object and the current <see cref="T:System.Globalization.IdnMapping" /> object are equal.</span></span></summary>
        <returns><span data-ttu-id="6c9ae-139"><paramref name="obj" /> パラメーターにより指定されたオブジェクトが <see cref="T:System.Globalization.IdnMapping" /> から派生していて、その <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> と <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> プロパティが等しく、オブジェクトが指定されている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-139"><see langword="true" /> if the object specified by the <paramref name="obj" /> parameter is derived from <see cref="T:System.Globalization.IdnMapping" /> and its <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAscii">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6c9ae-140">US-ASCII 文字の範囲外の Unicode 文字を含むドメイン名ラベルの文字列を、US-ASCII 文字範囲 (U+0020 から U+007E) の表示可能な Unicode 文字から構成される文字列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-140">Encodes a string of domain name labels that include Unicode characters outside the US-ASCII character range to a string of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E).</span></span> <span data-ttu-id="6c9ae-141">文字列は IDNA 標準に従って書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-141">The string is formatted according to the IDNA standard.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string -&gt; string" Usage="idnMapping.GetAscii unicode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unicode"><span data-ttu-id="6c9ae-142">ラベル区切り記号で区切られた 1 つまたは複数のドメイン名ラベルから構成される、変換対象の入力文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-142">The string to convert, which consists of one or more domain name labels delimited with label separators.</span></span></param>
        <summary><span data-ttu-id="6c9ae-143">Unicode 文字から構成されるドメイン名ラベルの文字列を、US-ASCII 文字範囲の表示可能な Unicode 文字から構成される文字列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-143">Encodes a string of domain name labels that consist of Unicode characters to a string of displayable Unicode characters in the US-ASCII character range.</span></span> <span data-ttu-id="6c9ae-144">文字列は IDNA 標準に従って書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-144">The string is formatted according to the IDNA standard.</span></span></summary>
        <returns><span data-ttu-id="6c9ae-145"><paramref name="unicode" /> パラメーターによって指定された文字列に対応する、US-ASCII 文字範囲 (U+0020 から U+007E) の表示可能な Unicode 文字から構成され、IDNA 標準に従って書式化された文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-145">The equivalent of the string specified by the <paramref name="unicode" /> parameter, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-146">`unicode` パラメーターは、有効な Unicode 文字で構成される1つ以上のラベルの文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-146">The `unicode` parameter specifies a string of one or more labels that consist of valid Unicode characters.</span></span> <span data-ttu-id="6c9ae-147">ラベルは、ラベル区切り記号で区切られます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-147">The labels are separated by label separators.</span></span> <span data-ttu-id="6c9ae-148">`unicode` パラメーターは、ラベルの区切り記号で始めることはできませんが、含めることができます。また、必要に応じて区切り記号で終了することもできます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-148">The `unicode` parameter cannot begin with a label separator, but it can include and optionally end with a separator.</span></span> <span data-ttu-id="6c9ae-149">ラベルの区切り記号は、FULL STOP (period, U + 002E)、表意文字 FULL STOP (U + 3002)、全角 FULL STOP (U + FF0E)、および半角表意文字の完全停止 (U + FF61) です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-149">The label separators are FULL STOP (period, U+002E), IDEOGRAPHIC FULL STOP (U+3002), FULLWIDTH FULL STOP (U+FF0E), and HALFWIDTH IDEOGRAPHIC FULL STOP (U+FF61).</span></span> <span data-ttu-id="6c9ae-150">たとえば、ドメイン名 "www.adatum.com" は、ピリオドで区切られたラベル "www"、"adatum"、および "com" で構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-150">For example, the domain name "www.adatum.com" consists of the labels, "www", "adatum", and "com", separated by periods.</span></span>  
  
 <span data-ttu-id="6c9ae-151">ラベルには、次の文字を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-151">A label cannot contain any of the following characters:</span></span>  
  
-   <span data-ttu-id="6c9ae-152">U + 0001 から U + 001F までの Unicode 制御文字と U + 007F。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-152">Unicode control characters from U+0001 through U+001F, and U+007F.</span></span>  
  
-   <span data-ttu-id="6c9ae-153"><xref:System.Globalization.IdnMapping.AllowUnassigned%2A> プロパティの値が `false`場合は、未割り当ての Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-153">Unassigned Unicode characters, if the value of the <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="6c9ae-154">0020プロパティ <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> の値が `true`場合は、スペース (U +)、感嘆符 (U + 0021)、およびローライン (U + 005F です) 文字など、US-ASCII 文字範囲の標準以外の文字です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-154">Non-standard characters in the US-ASCII character range, such as the SPACE (U+0020), EXCLAMATION MARK (U+0021), and LOW LINE (U+005F) characters, if the value of the <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> property is `true`.</span></span>  
  
-   <span data-ttu-id="6c9ae-155">IDNA 標準の特定のバージョンで禁止されている文字。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-155">Characters that are prohibited by a specific version of the IDNA standard.</span></span> <span data-ttu-id="6c9ae-156">禁止されている文字の詳細については、「Rfc 3454: IDNA 2003 の[国際化文字列の準備 ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) 」および「rfc 5982: idna 2008 用[のアプリケーションの Unicode コードポイントと国際化ドメイン名](https://go.microsoft.com/fwlink/?LinkId=231877)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-156">For more information about prohibited characters, see [RFC 3454: Preparation of Internationalized Strings ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) for IDNA 2003, and [RFC 5982: The Unicode Code Points and Internationalized Domain Names for Applications](https://go.microsoft.com/fwlink/?LinkId=231877) for IDNA 2008.</span></span>  
  
 <span data-ttu-id="6c9ae-157"><xref:System.Globalization.IdnMapping.GetAscii%2A> メソッドは、すべてのラベルの区切り記号を完全停止 (ピリオド、U + 002E) に変換します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-157">The <xref:System.Globalization.IdnMapping.GetAscii%2A> method converts all label separators to FULL STOP (period, U+002E).</span></span>  
  
 <span data-ttu-id="6c9ae-158">`unicode` に US-ASCII 文字範囲以外の文字が含まれておらず、us-ascii 文字範囲内の文字が禁止されている場合、メソッドは `unicode` を変更せずに返します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-158">If `unicode` contains no characters outside the US-ASCII character range and no characters within the US-ASCII character range are prohibited, the method returns `unicode` unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c9ae-159">次の例では、<xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> メソッドを使用して、国際化ドメイン名の配列を Punycode に変換します。これは、US-ASCII 文字範囲の文字で構成されるエンコードされた等価です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-159">The following example uses the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> method to convert an array of internationalized domain names to Punycode, which is an encoded equivalent that consists of characters in the US-ASCII character range.</span></span> <span data-ttu-id="6c9ae-160"><xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> メソッドは、Punycode のドメイン名を元のドメイン名に戻しますが、元のラベルの区切り記号は標準のラベル区切り記号に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-160">The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.</span></span>  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c9ae-161"><paramref name="unicode" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-161"><paramref name="unicode" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c9ae-162"><paramref name="unicode" /> は、<see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> プロパティ、<see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> プロパティ、IDNA 標準に対して無効です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-162"><paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="6c9ae-163">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]では、<see cref="T:System.Globalization.IdnMapping" /> クラスは、使用しているオペレーティングシステムに応じて、IDNA 標準のさまざまなバージョンをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-163">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <see cref="T:System.Globalization.IdnMapping" /> class supports different versions of the IDNA standard, depending on the operating system in use:</span></span> 
<span data-ttu-id="6c9ae-164">-[!INCLUDE[win8](~/includes/win8-md.md)]で実行される場合、 [RFC 5891: 国際化ドメイン名 In Applications (idna): プロトコル](https://go.microsoft.com/fwlink/?LinkId=231875)によって概説された2008バージョンの idna 標準がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-164">-   When run on [!INCLUDE[win8](~/includes/win8-md.md)], it supports the 2008 version of the IDNA standard outlined by [RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol](https://go.microsoft.com/fwlink/?LinkId=231875).</span></span>  
  
<span data-ttu-id="6c9ae-165">-以前のバージョンの Windows オペレーティングシステムで実行されている場合、RFC 3490 によって説明されている標準の2003バージョン[(IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110)がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-165">-   When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by [RFC 3490: Internationalizing Domain Names in Applications (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).</span></span>  
  
<span data-ttu-id="6c9ae-166">これらの基準が特定の文字セットを処理する方法の違いについては、「 [Unicode Technical Standard #46: IDNA 互換性処理](https://go.microsoft.com/fwlink/?LinkId=232459)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-166">See [Unicode Technical Standard #46: IDNA Compatibility Processing](https://go.microsoft.com/fwlink/?LinkId=232459) for the differences in the way these standards handle particular sets of characters.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode"><span data-ttu-id="6c9ae-167">ラベル区切り記号で区切られた 1 つまたは複数のドメイン名ラベルから構成される、変換対象の入力文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-167">The string to convert, which consists of one or more domain name labels delimited with label separators.</span></span></param>
        <param name="index"><span data-ttu-id="6c9ae-168">変換する部分文字列の始まりを指定する <paramref name="unicode" /> への 0 から始まるオフセット。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-168">A zero-based offset into <paramref name="unicode" /> that specifies the start of the substring to convert.</span></span> <span data-ttu-id="6c9ae-169">変換演算は、<paramref name="unicode" /> 文字列の終わりまで続行されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-169">The conversion operation continues to the end of the <paramref name="unicode" /> string.</span></span></param>
        <summary><span data-ttu-id="6c9ae-170">US-ASCII 文字範囲外の Unicode 文字を含むドメイン名ラベルの部分文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-170">Encodes a substring of domain name labels that include Unicode characters outside the US-ASCII character range.</span></span> <span data-ttu-id="6c9ae-171">部分文字列は US-ASCII 文字範囲の表示可能な Unicode 文字の文字列に変換され、IDNA 基準に従って書式化されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-171">The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.</span></span></summary>
        <returns><span data-ttu-id="6c9ae-172"><paramref name="unicode" /> パラメーターと <paramref name="index" /> パラメーターによって指定された部分文字列に対応する、US-ASCII 文字範囲 (U+0020 から U+007E) の表示可能な Unicode 文字から構成され、IDNA 標準に従って書式化された部分文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-172">The equivalent of the substring specified by the <paramref name="unicode" /> and <paramref name="index" /> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-173">`unicode` パラメーターと `index` パラメーターは、有効な Unicode 文字で構成される1つ以上のラベルを含む部分文字列を定義します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-173">The `unicode` and `index` parameters define a substring with one or more labels that consist of valid Unicode characters.</span></span> <span data-ttu-id="6c9ae-174">ラベルは、ラベル区切り記号で区切られます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-174">The labels are separated by label separators.</span></span> <span data-ttu-id="6c9ae-175">部分文字列の最初の文字は、ラベルの区切り記号で始めることはできませんが、含めることができ、必要に応じて区切り記号で終了することもできます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-175">The first character of the substring cannot begin with a label separator, but it can include and optionally end with a separator.</span></span> <span data-ttu-id="6c9ae-176">ラベルの区切り記号は、FULL STOP (period, U + 002E)、表意文字 FULL STOP (U + 3002)、全角 FULL STOP (U + FF0E)、および半角表意文字の完全停止 (U + FF61) です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-176">The label separators are FULL STOP (period, U+002E), IDEOGRAPHIC FULL STOP (U+3002), FULLWIDTH FULL STOP (U+FF0E), and HALFWIDTH IDEOGRAPHIC FULL STOP (U+FF61).</span></span> <span data-ttu-id="6c9ae-177">たとえば、ドメイン名 "www.adatum.com" は、ピリオドで区切られたラベル "www"、"adatum"、および "com" で構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-177">For example, the domain name "www.adatum.com" consists of the labels, "www", "adatum", and "com", separated by periods.</span></span>  
  
 <span data-ttu-id="6c9ae-178">ラベルには、次の文字を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-178">A label cannot contain any of the following characters:</span></span>  
  
-   <span data-ttu-id="6c9ae-179">U + 0001 から U + 001F までの Unicode 制御文字と U + 007F。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-179">Unicode control characters from U+0001 through U+001F, and U+007F.</span></span>  
  
-   <span data-ttu-id="6c9ae-180">未割り当ての Unicode 文字 (<xref:System.Globalization.IdnMapping.AllowUnassigned%2A> プロパティの値によって異なります)。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-180">Unassigned Unicode characters, depending on the value of the <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> property.</span></span>  
  
-   <span data-ttu-id="6c9ae-181"><xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> プロパティの値に応じて、空白文字 (U + 0020)、感嘆符 (U + 0021)、およびローライン (U + 005F です) 文字などの、US-ASCII 文字範囲の非標準文字。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-181">Non-standard characters in the US-ASCII character range, such as the SPACE (U+0020), EXCLAMATION MARK (U+0021), and LOW LINE (U+005F) characters, depending on the value of the <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> property.</span></span>  
  
-   <span data-ttu-id="6c9ae-182">IDNA 標準の特定のバージョンで禁止されている文字。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-182">Characters that are prohibited by a specific version of the IDNA standard.</span></span> <span data-ttu-id="6c9ae-183">禁止されている文字の詳細については、「Rfc 3454: IDNA 2003 の[国際化文字列の準備 ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) 」および「rfc 5982: idna 2008 用[のアプリケーションの Unicode コードポイントと国際化ドメイン名](https://go.microsoft.com/fwlink/?LinkId=231877)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-183">For more information about prohibited characters, see [RFC 3454: Preparation of Internationalized Strings ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) for IDNA 2003, and [RFC 5982: The Unicode Code Points and Internationalized Domain Names for Applications](https://go.microsoft.com/fwlink/?LinkId=231877) for IDNA 2008.</span></span>  
  
 <span data-ttu-id="6c9ae-184"><xref:System.Globalization.IdnMapping.GetAscii%2A> メソッドは、すべてのラベルの区切り記号を完全停止 (ピリオド、U + 002E) に変換します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-184">The <xref:System.Globalization.IdnMapping.GetAscii%2A> method converts all label separators to FULL STOP (period, U+002E).</span></span>  
  
 <span data-ttu-id="6c9ae-185">`unicode` に US-ASCII 文字範囲以外の文字が含まれておらず、us-ascii 文字範囲内の文字が禁止されている場合、メソッドは `unicode` を変更せずに返します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-185">If `unicode` contains no characters outside the US-ASCII character range and no characters within the US-ASCII character range are prohibited, the method returns `unicode` unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c9ae-186">次の例では、電子メールアドレスからローカル部分と @ 文字を削除し、生成されたドメイン名を <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> メソッドに渡して、Punycode ドメイン名を作成します。これは、US-ASCII 文字範囲の文字で構成されるエンコードされた等価です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-186">The following example removes the local part and the @ character from an email address, and passes the resulting domain name to the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> method to create a Punycode domain name, which is an encoded equivalent that consists of characters in the US-ASCII character range.</span></span> <span data-ttu-id="6c9ae-187"><xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> メソッドは、Punycode のドメイン名を元のドメイン名に戻しますが、元のラベルの区切り記号は標準のラベル区切り記号に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-187">The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.</span></span>  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1a.cs#2)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c9ae-188"><paramref name="unicode" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-188"><paramref name="unicode" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6c9ae-189"><paramref name="index" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-189"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="6c9ae-190">または</span><span class="sxs-lookup"><span data-stu-id="6c9ae-190">-or-</span></span> 
 <span data-ttu-id="6c9ae-191"><paramref name="index" /> が <paramref name="unicode" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-191"><paramref name="index" /> is greater than the length of <paramref name="unicode" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c9ae-192"><paramref name="unicode" /> は、<see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> プロパティ、<see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> プロパティ、IDNA 標準に対して無効です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-192"><paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="6c9ae-193">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]では、<see cref="T:System.Globalization.IdnMapping" /> クラスは、使用しているオペレーティングシステムに応じて、IDNA 標準のさまざまなバージョンをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-193">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <see cref="T:System.Globalization.IdnMapping" /> class supports different versions of the IDNA standard, depending on the operating system in use:</span></span> 
<span data-ttu-id="6c9ae-194">-[!INCLUDE[win8](~/includes/win8-md.md)]で実行される場合、 [RFC 5891: 国際化ドメイン名 In Applications (idna): プロトコル](https://go.microsoft.com/fwlink/?LinkId=231875)によって概説された2008バージョンの idna 標準がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-194">-   When run on [!INCLUDE[win8](~/includes/win8-md.md)], it supports the 2008 version of the IDNA standard outlined by [RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol](https://go.microsoft.com/fwlink/?LinkId=231875).</span></span>  
  
<span data-ttu-id="6c9ae-195">-以前のバージョンの Windows オペレーティングシステムで実行されている場合、RFC 3490 によって説明されている標準の2003バージョン[(IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110)がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-195">-   When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by [RFC 3490: Internationalizing Domain Names in Applications (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).</span></span>  
  
<span data-ttu-id="6c9ae-196">これらの基準が特定の文字セットを処理する方法の違いについては、「 [Unicode Technical Standard #46: IDNA 互換性処理](https://go.microsoft.com/fwlink/?LinkId=232459)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-196">See [Unicode Technical Standard #46: IDNA Compatibility Processing](https://go.microsoft.com/fwlink/?LinkId=232459) for the differences in the way these standards handle particular sets of characters.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAscii">
      <MemberSignature Language="C#" Value="public string GetAscii (string unicode, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAscii(string unicode, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAscii (unicode As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAscii(System::String ^ unicode, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetAscii : string * int * int -&gt; string" Usage="idnMapping.GetAscii (unicode, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unicode" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unicode"><span data-ttu-id="6c9ae-197">ラベル区切り記号で区切られた 1 つまたは複数のドメイン名ラベルから構成される、変換対象の入力文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-197">The string to convert, which consists of one or more domain name labels delimited with label separators.</span></span></param>
        <param name="index"><span data-ttu-id="6c9ae-198">部分文字列の始まりを指定する <paramref name="unicode" /> への 0 から始まるオフセット。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-198">A zero-based offset into <paramref name="unicode" /> that specifies the start of the substring.</span></span></param>
        <param name="count"><span data-ttu-id="6c9ae-199"><paramref name="index" /> 文字列の <paramref name="unicode" /> で指定された位置から始まる部分文字列内の変換対象の文字の数。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-199">The number of characters to convert in the substring that starts at the position specified by  <paramref name="index" /> in the <paramref name="unicode" /> string.</span></span></param>
        <summary><span data-ttu-id="6c9ae-200">US-ASCII 文字範囲外の Unicode 文字を含むドメイン名ラベルの部分文字列の指定した文字数をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-200">Encodes the specified number of characters in a  substring of domain name labels that include Unicode characters outside the US-ASCII character range.</span></span> <span data-ttu-id="6c9ae-201">部分文字列は US-ASCII 文字範囲の表示可能な Unicode 文字の文字列に変換され、IDNA 基準に従って書式化されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-201">The substring is converted to a string of displayable Unicode characters in the US-ASCII character range and is formatted according to the IDNA standard.</span></span></summary>
        <returns><span data-ttu-id="6c9ae-202"><paramref name="unicode" /> パラメーター、<paramref name="index" /> パラメーター、<paramref name="count" /> パラメーターによって指定された部分文字列に対応する、US-ASCII 文字範囲 (U+0020 から U+007E) の表示可能な Unicode 文字から構成され、IDNA 標準に従って書式化された部分文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-202">The equivalent of the substring specified by the <paramref name="unicode" />, <paramref name="index" />, and <paramref name="count" /> parameters, consisting of displayable Unicode characters in the US-ASCII character range (U+0020 to U+007E) and formatted according to the IDNA standard.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-203">`Unicode`、`index`、および `count` パラメーターは、有効な Unicode 文字で構成される1つ以上のラベルを含む部分文字列を定義します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-203">The `Unicode`, `index`, and `count` parameters define a substring with one or more labels that consist of valid Unicode characters.</span></span> <span data-ttu-id="6c9ae-204">ラベルは、ラベル区切り記号で区切られます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-204">The labels are separated by label separators.</span></span> <span data-ttu-id="6c9ae-205">部分文字列の最初の文字は、ラベルの区切り記号で始めることはできませんが、含めることができ、必要に応じて区切り記号で終了することもできます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-205">The first character of the substring cannot begin with a label separator, but it can include and optionally end with a separator.</span></span> <span data-ttu-id="6c9ae-206">ラベルの区切り記号は、FULL STOP (period, U + 002E)、表意文字 FULL STOP (U + 3002)、全角 FULL STOP (U + FF0E)、および半角表意文字の完全停止 (U + FF61) です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-206">The label separators are FULL STOP (period, U+002E), IDEOGRAPHIC FULL STOP (U+3002), FULLWIDTH FULL STOP (U+FF0E), and HALFWIDTH IDEOGRAPHIC FULL STOP (U+FF61).</span></span> <span data-ttu-id="6c9ae-207">たとえば、ドメイン名 "www.adatum.com" は、ピリオドで区切られたラベル "www"、"adatum"、および "com" で構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-207">For example, the domain name "www.adatum.com" consists of the labels, "www", "adatum", and "com", separated by periods.</span></span>  
  
 <span data-ttu-id="6c9ae-208">ラベルには、次の文字を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-208">A label cannot contain any of the following characters:</span></span>  
  
-   <span data-ttu-id="6c9ae-209">U + 0001 から U + 001F までの Unicode 制御文字と U + 007F。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-209">Unicode control characters from U+0001 through U+001F, and U+007F.</span></span>  
  
-   <span data-ttu-id="6c9ae-210">未割り当ての Unicode 文字 (<xref:System.Globalization.IdnMapping.AllowUnassigned%2A> プロパティの値によって異なります)。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-210">Unassigned Unicode characters, depending on the value of the <xref:System.Globalization.IdnMapping.AllowUnassigned%2A> property.</span></span>  
  
-   <span data-ttu-id="6c9ae-211"><xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> プロパティの値に応じて、空白文字 (U + 0020)、感嘆符 (U + 0021)、およびローライン (U + 005F です) 文字などの、US-ASCII 文字範囲の非標準文字。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-211">Non-standard characters in the US-ASCII character range, such as the SPACE (U+0020), EXCLAMATION MARK (U+0021), and LOW LINE (U+005F) characters, depending on the value of the <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> property.</span></span>  
  
-   <span data-ttu-id="6c9ae-212">IDNA 標準の特定のバージョンで禁止されている文字。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-212">Characters that are prohibited by a specific version of the IDNA standard.</span></span> <span data-ttu-id="6c9ae-213">禁止されている文字の詳細については、「Rfc 3454: IDNA 2003 の[国際化文字列の準備 ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) 」および「rfc 5982: idna 2008 用[のアプリケーションの Unicode コードポイントと国際化ドメイン名](https://go.microsoft.com/fwlink/?LinkId=231877)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-213">For more information about prohibited characters, see [RFC 3454: Preparation of Internationalized Strings ("stringprep")](https://go.microsoft.com/fwlink/?LinkId=231873) for IDNA 2003, and [RFC 5982: The Unicode Code Points and Internationalized Domain Names for Applications](https://go.microsoft.com/fwlink/?LinkId=231877) for IDNA 2008.</span></span>  
  
 <span data-ttu-id="6c9ae-214"><xref:System.Globalization.IdnMapping.GetAscii%2A> メソッドは、すべてのラベルの区切り記号を完全停止 (ピリオド、U + 002E) に変換します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-214">The <xref:System.Globalization.IdnMapping.GetAscii%2A> method converts all label separators to FULL STOP (period, U+002E).</span></span> <span data-ttu-id="6c9ae-215">部分文字列に US-ASCII 文字範囲以外の文字が含まれておらず、US-ASCII 文字範囲内の文字が禁止されている場合、メソッドは部分文字列を変更せずに返します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-215">If the substring contains no characters outside the US-ASCII character range, and no characters within the US-ASCII character range are prohibited, the method returns the substring unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c9ae-216">次の例では、<xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> メソッドを使用して、国際化ドメイン名を IDNA 標準に準拠したドメイン名に変換します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-216">The following example uses the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> method to convert an internationalized domain name to a domain name that complies with the IDNA standard.</span></span> <span data-ttu-id="6c9ae-217"><xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> メソッドは、標準化されたドメイン名を元のドメイン名に戻しますが、元のラベルの区切り記号は標準のラベル区切り記号に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-217">The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the standardized domain name back into the original domain name, but replaces the original label separators with the standard label separator.</span></span>  
  
 [!code-csharp[IdnMapping.GetX#1](~/samples/snippets/csharp/VS_Snippets_CLR/IdnMapping.GetX/CS/getx.cs#1)]
 [!code-vb[IdnMapping.GetX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IdnMapping.GetX/VB/getx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c9ae-218"><paramref name="unicode" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-218"><paramref name="unicode" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6c9ae-219"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-219"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="6c9ae-220">または</span><span class="sxs-lookup"><span data-stu-id="6c9ae-220">-or-</span></span> 
 <span data-ttu-id="6c9ae-221"><paramref name="index" /> が <paramref name="unicode" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-221"><paramref name="index" /> is greater than the length of <paramref name="unicode" />.</span></span>  
  
<span data-ttu-id="6c9ae-222">または</span><span class="sxs-lookup"><span data-stu-id="6c9ae-222">-or-</span></span> 
 <span data-ttu-id="6c9ae-223"><paramref name="index" /> が、<paramref name="unicode" /> から <paramref name="count" /> を引いた長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-223"><paramref name="index" /> is greater than the length of <paramref name="unicode" /> minus <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c9ae-224"><paramref name="unicode" /> は、<see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> プロパティ、<see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> プロパティ、IDNA 標準に対して無効です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-224"><paramref name="unicode" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="6c9ae-225">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]では、<see cref="T:System.Globalization.IdnMapping" /> クラスは、使用しているオペレーティングシステムに応じて、IDNA 標準のさまざまなバージョンをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-225">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <see cref="T:System.Globalization.IdnMapping" /> class supports different versions of the IDNA standard, depending on the operating system in use:</span></span> 
<span data-ttu-id="6c9ae-226">-[!INCLUDE[win8](~/includes/win8-md.md)]で実行される場合、 [RFC 5891: 国際化ドメイン名 In Applications (idna): プロトコル](https://go.microsoft.com/fwlink/?LinkId=231875)によって概説された2008バージョンの idna 標準がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-226">-   When run on [!INCLUDE[win8](~/includes/win8-md.md)], it supports the 2008 version of the IDNA standard outlined by [RFC 5891: Internationalized Domain Names in Applications (IDNA): Protocol](https://go.microsoft.com/fwlink/?LinkId=231875).</span></span>  
  
<span data-ttu-id="6c9ae-227">-以前のバージョンの Windows オペレーティングシステムで実行されている場合、RFC 3490 によって説明されている標準の2003バージョン[(IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110)がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-227">-   When run on earlier versions of the Windows operating system, it supports the 2003 version of the standard outlined by [RFC 3490: Internationalizing Domain Names in Applications (IDNA)](https://go.microsoft.com/fwlink/?LinkId=158110).</span></span>  
  
<span data-ttu-id="6c9ae-228">これらの基準が特定の文字セットを処理する方法の違いについては、「 [Unicode Technical Standard #46: IDNA 互換性処理](https://go.microsoft.com/fwlink/?LinkId=232459)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-228">See [Unicode Technical Standard #46: IDNA Compatibility Processing](https://go.microsoft.com/fwlink/?LinkId=232459) for the differences in the way these standards handle particular sets of characters.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="idnMapping.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6c9ae-229">この <see cref="T:System.Globalization.IdnMapping" /> オブジェクトのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-229">Returns a hash code for this <see cref="T:System.Globalization.IdnMapping" /> object.</span></span></summary>
        <returns><span data-ttu-id="6c9ae-230"><see cref="T:System.Globalization.IdnMapping" /> オブジェクトのプロパティから派生した 4 つの 32 ビット符号付き定数の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-230">One of four 32-bit signed constants derived from the properties of an <see cref="T:System.Globalization.IdnMapping" /> object.</span></span>  <span data-ttu-id="6c9ae-231">戻り値は特別な意味を持たず、ハッシュ コード アルゴリズムでの使用に適しません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-231">The return value has no special meaning and is not suitable for use in a hash code algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-232">アプリケーションで意味のあるハッシュコードアルゴリズムを実装する必要がある場合は、<xref:System.Globalization.IdnMapping.GetHashCode%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-232">Override the <xref:System.Globalization.IdnMapping.GetHashCode%2A> method if your application needs to implement a meaningful hash code algorithm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c9ae-233">次の例では、1つの文字列にスペースで区切られた複数の電子メールアドレスを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-233">The following example assumes that a single string can contain multiple email addresses separated by spaces.</span></span> <span data-ttu-id="6c9ae-234">各電子メールアドレスからローカル部分と @ 文字を削除し、結果として得られたドメイン名を <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> または <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> メソッドに渡して、Punycode ドメイン名を作成します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-234">It removes the local part and the @ character from each email address, and passes the resulting domain name to the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%29> or <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29> method to create a Punycode domain name.</span></span> <span data-ttu-id="6c9ae-235"><xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> メソッドは、Punycode ドメイン名を元のドメイン名に戻します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-235">The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%2CSystem.Int32%2CSystem.Int32%29> method then converts the Punycode domain name back into the original domain name.</span></span>  
  
 [!code-csharp[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/cs/conversion1b.cs#3)]
 [!code-vb[System.Globalization.IdnMapping.GetAscii#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.getascii/vb/conversion1b.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6c9ae-236">IDNA 標準に従ってエンコードされた 1 つ以上のドメイン名ラベルを Unicode 文字の文字列にデコードします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-236">Decodes one or more domain name labels encoded according to the IDNA standard to a string of Unicode characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string -&gt; string" Usage="idnMapping.GetUnicode ascii" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ascii"><span data-ttu-id="6c9ae-237">デコード対象となる文字列は、IDNA 標準に従ってエンコードされた US-ASCII 文字範囲 (U+0020 から U+007E) の 1 つまたは複数のラベルから構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-237">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</span></span></param>
        <summary><span data-ttu-id="6c9ae-238">IDNA 標準に従ってエンコードされた 1 つ以上のドメイン名ラベルの文字列を Unicode 文字の文字列にデコードします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-238">Decodes a string of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="6c9ae-239"><paramref name="ascii" /> パラメーターで指定された IDNA 部分文字列に対応する Unicode 文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-239">The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-240">ドメイン名、ラベル、およびラベルの区切り記号の詳細については、<xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> メソッドの解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-240">For more information about domain names, labels, and label separators, see the remarks for the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c9ae-241">次の例では、<xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> メソッドを使用して、国際化ドメイン名の配列を Punycode に変換します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-241">The following example uses the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> method to convert an array of internationalized domain names to Punycode.</span></span> <span data-ttu-id="6c9ae-242"><xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> メソッドは、Punycode のドメイン名を元のドメイン名に戻しますが、元のラベルの区切り記号は標準のラベル区切り記号に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-242">The <xref:System.Globalization.IdnMapping.GetUnicode%28System.String%29> method then converts the Punycode domain name back into the original domain name, but replaces the original label separators with the standard label separator.</span></span>  
  
 [!code-csharp[System.Globalization.IdnMapping.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.class/cs/conversion1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.class/vb/conversion1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c9ae-243"><paramref name="ascii" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-243"><paramref name="ascii" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c9ae-244"><paramref name="ascii" /> は、<see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> プロパティ、<see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> プロパティ、IDNA 標準に対して無効です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-244"><paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii"><span data-ttu-id="6c9ae-245">デコード対象となる文字列は、IDNA 標準に従ってエンコードされた US-ASCII 文字範囲 (U+0020 から U+007E) の 1 つまたは複数のラベルから構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-245">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</span></span></param>
        <param name="index"><span data-ttu-id="6c9ae-246">デコードする部分文字列の始まりを指定する <paramref name="ascii" /> への 0 から始まるオフセット。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-246">A zero-based offset into <paramref name="ascii" /> that specifies the start of the substring to decode.</span></span> <span data-ttu-id="6c9ae-247">デコード演算は、<paramref name="ascii" /> 文字列の終わりまで続行されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-247">The decoding operation continues to the end of the <paramref name="ascii" /> string.</span></span></param>
        <summary><span data-ttu-id="6c9ae-248">IDNA 標準に従ってエンコードされた 1 つ以上のドメイン名ラベルの部分文字列を Unicode 文字の文字列にデコードします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-248">Decodes a substring of one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="6c9ae-249"><paramref name="ascii" /> パラメーターおよび <paramref name="index" /> パラメーターで指定された IDNA 部分文字列に対応する Unicode 文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-249">The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" /> and <paramref name="index" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-250">ドメイン名、ラベル、およびラベルの区切り記号の詳細については、<xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> メソッドの解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-250">For more information about domain names, labels, and label separators, see the remarks for the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c9ae-251"><paramref name="ascii" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-251"><paramref name="ascii" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6c9ae-252"><paramref name="index" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-252"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="6c9ae-253">または</span><span class="sxs-lookup"><span data-stu-id="6c9ae-253">-or-</span></span> 
 <span data-ttu-id="6c9ae-254"><paramref name="index" /> が <paramref name="ascii" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-254"><paramref name="index" /> is greater than the length of <paramref name="ascii" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c9ae-255"><paramref name="ascii" /> は、<see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> プロパティ、<see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> プロパティ、IDNA 標準に対して無効です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-255"><paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicode">
      <MemberSignature Language="C#" Value="public string GetUnicode (string ascii, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUnicode(string ascii, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUnicode (ascii As String, index As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetUnicode(System::String ^ ascii, int index, int count);" />
      <MemberSignature Language="F#" Value="member this.GetUnicode : string * int * int -&gt; string" Usage="idnMapping.GetUnicode (ascii, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ascii" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ascii"><span data-ttu-id="6c9ae-256">デコード対象となる文字列は、IDNA 標準に従ってエンコードされた US-ASCII 文字範囲 (U+0020 から U+007E) の 1 つまたは複数のラベルから構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-256">The string to decode, which consists of one or more labels in the US-ASCII character range (U+0020 to U+007E) encoded according to the IDNA standard.</span></span></param>
        <param name="index"><span data-ttu-id="6c9ae-257">部分文字列の始まりを指定する <paramref name="ascii" /> への 0 から始まるオフセット。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-257">A zero-based offset into <paramref name="ascii" /> that specifies the start of the substring.</span></span></param>
        <param name="count"><span data-ttu-id="6c9ae-258"><paramref name="ascii" /> 文字列の <paramref name="index" /> で指定された位置から始まる部分文字列内の変換対象の文字の数。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-258">The number of characters to convert in the substring that starts at the position specified by <paramref name="index" /> in the <paramref name="ascii" /> string.</span></span></param>
        <summary><span data-ttu-id="6c9ae-259">IDNA 標準に従ってエンコードされた 1 つまたは複数のドメイン名ラベルの指定した長さの部分文字列を Unicode 文字の文字列にデコードします。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-259">Decodes a substring of a specified length that contains one or more domain name labels, encoded according to the IDNA standard, to a string of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="6c9ae-260"><paramref name="ascii" /> パラメーター、<paramref name="index" /> パラメーター、<paramref name="count" /> パラメーターで指定された IDNA 部分文字列に対応する Unicode 文字列。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-260">The Unicode equivalent of the IDNA substring specified by the <paramref name="ascii" />, <paramref name="index" />, and <paramref name="count" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-261">ドメイン名、ラベル、およびラベルの区切り記号の詳細については、<xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> メソッドの解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-261">For more information about domain names, labels, and label separators, see the remarks for the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6c9ae-262"><paramref name="ascii" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-262"><paramref name="ascii" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="6c9ae-263"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-263"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="6c9ae-264">または</span><span class="sxs-lookup"><span data-stu-id="6c9ae-264">-or-</span></span> 
 <span data-ttu-id="6c9ae-265"><paramref name="index" /> が <paramref name="ascii" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-265"><paramref name="index" /> is greater than the length of <paramref name="ascii" />.</span></span>  
  
<span data-ttu-id="6c9ae-266">または</span><span class="sxs-lookup"><span data-stu-id="6c9ae-266">-or-</span></span> 
 <span data-ttu-id="6c9ae-267"><paramref name="index" /> が、<paramref name="ascii" /> から <paramref name="count" /> を引いた長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-267"><paramref name="index" /> is greater than the length of <paramref name="ascii" /> minus <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6c9ae-268"><paramref name="ascii" /> は、<see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> プロパティ、<see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> プロパティ、IDNA 標準に対して無効です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-268"><paramref name="ascii" /> is invalid based on the <see cref="P:System.Globalization.IdnMapping.AllowUnassigned" /> and <see cref="P:System.Globalization.IdnMapping.UseStd3AsciiRules" /> properties, and the IDNA standard.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseStd3AsciiRules">
      <MemberSignature Language="C#" Value="public bool UseStd3AsciiRules { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseStd3AsciiRules" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberSignature Language="VB.NET" Value="Public Property UseStd3AsciiRules As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseStd3AsciiRules { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseStd3AsciiRules : bool with get, set" Usage="System.Globalization.IdnMapping.UseStd3AsciiRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6c9ae-269">標準または非標準の名前付け規則が、現在の <see cref="T:System.Globalization.IdnMapping" /> オブジェクトのメンバーによって実行される操作内で使用されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-269">Gets or sets a value that indicates whether standard or relaxed naming conventions are used in operations performed by members of the current <see cref="T:System.Globalization.IdnMapping" /> object.</span></span></summary>
        <value><span data-ttu-id="6c9ae-270">標準の名前付け規則が操作内で使用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-270"><see langword="true" /> if standard naming conventions are used in operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c9ae-271">標準の名前付け規則に従うドメイン名は、US-ASCII 文字範囲内の特定の文字のサブセットで構成されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-271">Domain names that follow standard naming rules consist of a specific subset of characters in the US-ASCII character range.</span></span> <span data-ttu-id="6c9ae-272">文字は A ~ Z の文字、0 ~ 9 の数字、ハイフン (-) 文字 (U + 002D)、ピリオド (.) 文字です。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-272">The characters are the letters A through Z, the digits 0 through 9, the hyphen (-) character (U+002D), and the period (.) character.</span></span> <span data-ttu-id="6c9ae-273">文字の大文字と小文字は区別されません。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-273">The case of the characters is not significant.</span></span> <span data-ttu-id="6c9ae-274">厳密でない名前付け規則を使用すると、スペース文字 (U + 0020)、感嘆符 (U + 0021)、およびアンダースコア (U + 005F です) を含む、より広い範囲の ASCII 文字を使用できます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-274">Relaxed naming conventions allow the use of a broader range of ASCII characters, including the space character (U+0020), the exclamation point character (U+0021), and the underbar character (U+005F).</span></span> <span data-ttu-id="6c9ae-275"><xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> が `true`場合、<xref:System.Globalization.IdnMapping.GetAscii%2A> メソッドによって返されたラベルには、標準文字のみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-275">If <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> is `true`, only standard characters can appear in a label returned by the <xref:System.Globalization.IdnMapping.GetAscii%2A> method.</span></span>  
  
 <span data-ttu-id="6c9ae-276">既定では、<xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> プロパティの値は `false`であり、ASCII 文字の拡張されたサブセットはラベルで許可されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-276">By default, the value of the <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> property is `false`, and an expanded subset of ASCII characters is permitted in a label.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6c9ae-277"><xref:System.Globalization.IdnMapping> クラスは、<xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> プロパティの設定に関係なく、nondisplayable 文字 U + 0000 ~ U + 001F を使用し、ドメイン名ラベルに U + 007F を使用することを禁止します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-277">The <xref:System.Globalization.IdnMapping> class prohibits the use of the nondisplayable characters U+0000 through U+001F, and U+007F in domain name labels regardless of the setting of the <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> property.</span></span> <span data-ttu-id="6c9ae-278">この禁止により、名前のスプーフィングなどのセキュリティ攻撃のリスクが軽減されます。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-278">This prohibition reduces the risk of security attacks such as name spoofing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c9ae-279">次の例では、U + 0000 から U + 007F の ASCII 範囲の文字を含む Url を生成し、2つの <xref:System.Globalization.IdnMapping> オブジェクトの <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-279">The following example generates URLs that contain characters in the ASCII range from U+0000 to U+007F and passes them to the <xref:System.Globalization.IdnMapping.GetAscii%28System.String%29> method of two <xref:System.Globalization.IdnMapping> objects.</span></span> <span data-ttu-id="6c9ae-280">一方のオブジェクトの <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> プロパティは `true`に設定され、もう一方のオブジェクトでは `false`に設定されています。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-280">One object has its <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> property set to `true`, and the other object has it set to `false`.</span></span> <span data-ttu-id="6c9ae-281">出力には、<xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> プロパティが `true` ときに無効な文字が表示されますが、`false`ときに有効になります。</span><span class="sxs-lookup"><span data-stu-id="6c9ae-281">The output displays the characters that are invalid when the <xref:System.Globalization.IdnMapping.UseStd3AsciiRules%2A> property is `true` but valid when it is `false`.</span></span>  
  
 [!code-csharp[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/cs/usestd3asciirules1.cs#1)]
 [!code-vb[System.Globalization.IdnMapping.UseStd3AsciiRules#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.idnmapping.usestd3asciirules/vb/usestd3asciirules1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
