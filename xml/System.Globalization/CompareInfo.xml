<Type Name="CompareInfo" FullName="System.Globalization.CompareInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b99d2d08b086d754f0ffbd51581669097c9c461" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75133896" /></Metadata><TypeSignature Language="C#" Value="public class CompareInfo : System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CompareInfo extends System.Object implements class System.Runtime.Serialization.IDeserializationCallback" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CompareInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareInfo&#xA;Implements IDeserializationCallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareInfo : System::Runtime::Serialization::IDeserializationCallback" />
  <TypeSignature Language="F#" Value="type CompareInfo = class&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b2214-101">カルチャごとに異なる文字列比較を行うための一連のメソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="b2214-101">Implements a set of methods for culture-sensitive string comparisons.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-102">データの比較と並べ替えの規則は、カルチャによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b2214-102">Conventions for comparing and sorting data vary from culture to culture.</span></span> <span data-ttu-id="b2214-103">たとえば、並べ替え順序は、ふりがなまたは文字の視覚的表現に基づいている場合があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-103">For example, sort order may be based on phonetics or on the visual representation of characters.</span></span> <span data-ttu-id="b2214-104">東アジア圏の言語では、文字が表意文字の画数と部首によって並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="b2214-104">In East Asian languages, characters are sorted by the stroke and radical of ideographs.</span></span> <span data-ttu-id="b2214-105">また、並べ替えは、言語やカルチャで使用されているアルファベットの順序によっても異なります。</span><span class="sxs-lookup"><span data-stu-id="b2214-105">Sorting also depends on the order languages and cultures use for the alphabet.</span></span> <span data-ttu-id="b2214-106">たとえば、デンマーク語の文字 "Æ" は、アルファベットでは "Z" の後に位置します。</span><span class="sxs-lookup"><span data-stu-id="b2214-106">For example, the Danish language has an "Æ" character that it sorts after "Z" in the alphabet.</span></span> <span data-ttu-id="b2214-107">また、比較では大文字と小文字を区別するか、大文字と小文字を区別しないことがあります。また、大文字と小文字の規則はカルチャによって異なる</span><span class="sxs-lookup"><span data-stu-id="b2214-107">In addition, comparisons may be case-sensitive or case-insensitive, and casing rules may also differ by culture.</span></span> <span data-ttu-id="b2214-108"><xref:System.Globalization.CompareInfo> クラスは、このカルチャに依存した文字列比較データを維持し、カルチャに依存した文字列操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-108">The <xref:System.Globalization.CompareInfo> class is responsible for maintaining this culture-sensitive string comparison data and for performing culture-sensitive string operations.</span></span>

 <span data-ttu-id="b2214-109">通常、<xref:System.Globalization.CompareInfo> オブジェクトを直接インスタンス化する必要はありません。これは、<xref:System.String.Compare%2A?displayProperty=nameWithType> メソッドの呼び出しを含む、すべての序数以外の文字列比較操作によって暗黙的に使用されるためです。</span><span class="sxs-lookup"><span data-stu-id="b2214-109">Typically, you do not have to instantiate a <xref:System.Globalization.CompareInfo> object directly, because one is used implicitly by all non-ordinal string comparison operations, including calls to the <xref:System.String.Compare%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b2214-110">ただし、<xref:System.Globalization.CompareInfo> オブジェクトを取得する場合は、次のいずれかの方法で実行できます。</span><span class="sxs-lookup"><span data-stu-id="b2214-110">However, if you do want to retrieve a <xref:System.Globalization.CompareInfo> object, you can do it in one of these ways:</span></span>

-   <span data-ttu-id="b2214-111">特定のカルチャの <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> プロパティの値を取得する。</span><span class="sxs-lookup"><span data-stu-id="b2214-111">By retrieving the value of the <xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=nameWithType> property for a particular culture.</span></span>

-   <span data-ttu-id="b2214-112">カルチャ名を使用して静的 <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> メソッドを呼び出す。</span><span class="sxs-lookup"><span data-stu-id="b2214-112">By calling the static <xref:System.Globalization.CompareInfo.GetCompareInfo%2A> method with a culture name.</span></span> <span data-ttu-id="b2214-113">これにより、<xref:System.Globalization.CompareInfo> オブジェクトへの遅延バインディングアクセスが可能になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-113">This allows for late-bound access to a <xref:System.Globalization.CompareInfo> object.</span></span>

## <a name="ignored-search-values"></a><span data-ttu-id="b2214-114">無視された検索値</span><span class="sxs-lookup"><span data-stu-id="b2214-114">Ignored search values</span></span>
 <span data-ttu-id="b2214-115">文字セットには無視できる文字が含まれています。これらの文字は、言語またはカルチャに依存した比較を実行する際には考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-115">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-116"><xref:System.Globalization.CompareInfo.IndexOf%2A> や <xref:System.Globalization.CompareInfo.LastIndexOf%2A> などの比較メソッドでは、カルチャに依存した比較を実行するときに、このような文字は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-116">Comparison methods such as <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> do not consider such characters when they perform a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-117">無視する文字は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="b2214-117">Ignorable characters include:</span></span>

-   <span data-ttu-id="b2214-118"><xref:System.String.Empty?displayProperty=nameWithType> で初期化します。</span><span class="sxs-lookup"><span data-stu-id="b2214-118"><xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b2214-119">カルチャに依存した比較メソッドは、検索対象の文字列の先頭 (インデックスゼロ) に空の文字列を常に検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-119">Culture-sensitive comparison methods will always find an empty string at the beginning (index zero) of the string being searched.</span></span>

-   <span data-ttu-id="b2214-120">比較オプションにより、操作では考慮されないコードポイントを含む文字で構成される文字または文字列。特に、<xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> オプションと <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> オプションでは、記号と非スペーシング組み合わせ文字を無視する検索が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-120">A character or string consisting of characters with code points that are not considered in the operation because of comparison options, In particular, the  <xref:System.Globalization.CompareOptions.IgnoreNonSpace?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.IgnoreSymbols?displayProperty=nameWithType> options produce searches in which symbols and nonspacing combining characters are ignored.</span></span>

-   <span data-ttu-id="b2214-121">言語的な意味を持たないコードポイントを含む文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-121">A string with code points that have no linguistic significance.</span></span> <span data-ttu-id="b2214-122">たとえば、カルチャに依存した文字列比較では、ソフトハイフン (U + 00AD) は常に無視されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-122">For example, a soft hyphen (U+00AD) is always ignored in a culture-sensitive string comparison.</span></span>

## <a name="security-considerations"></a><span data-ttu-id="b2214-123">セキュリティに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="b2214-123">Security considerations</span></span>
 <span data-ttu-id="b2214-124">セキュリティの決定が文字列の比較またはケースの変更に依存している場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティを使用して、オペレーティングシステムのカルチャ設定に関係なく、動作が一貫していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-124">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent, regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-125">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを使用して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-125">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-126">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-126">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-127">次の例は、<xref:System.Globalization.CultureInfo> オブジェクトに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクトが文字列比較にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="b2214-127">The following example shows how the <xref:System.Globalization.CompareInfo> object associated with a <xref:System.Globalization.CultureInfo> object affects string comparison.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://www.microsoft.com/download/details.aspx?id=10921"><span data-ttu-id="b2214-128">Windows オペレーティングシステムの重みテーブルの並べ替え</span><span class="sxs-lookup"><span data-stu-id="b2214-128">Sorting Weight Tables for Windows operating systems</span></span></related>
    <related type="ExternalDocumentation" href="https://www.unicode.org/Public/UCA/latest/allkeys.txt"><span data-ttu-id="b2214-129">Linux および macOS 用の既定の Unicode 照合順序要素の表</span><span class="sxs-lookup"><span data-stu-id="b2214-129">Default Unicode Collation Element Table, for Linux and macOS</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-130">2 つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-130">Compares two strings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string -&gt; int&#xA;override this.Compare : string * string -&gt; int" Usage="compareInfo.Compare (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="b2214-131">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-131">The first string to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="b2214-132">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-132">The second string to compare.</span></span></param>
        <summary><span data-ttu-id="b2214-133">2 つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-133">Compares two strings.</span></span></summary>
        <returns><span data-ttu-id="b2214-134">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b2214-134">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="b2214-135">[値]</span><span class="sxs-lookup"><span data-stu-id="b2214-135">Value</span></span>

 </term><description> <span data-ttu-id="b2214-136">条件</span><span class="sxs-lookup"><span data-stu-id="b2214-136">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="b2214-137">ゼロ</span><span class="sxs-lookup"><span data-stu-id="b2214-137">zero</span></span>

 </term><description> <span data-ttu-id="b2214-138">2 つの文字列は等価。</span><span class="sxs-lookup"><span data-stu-id="b2214-138">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-139">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b2214-139">less than zero</span></span>

 </term><description><span data-ttu-id="b2214-140"><paramref name="string1" /> は <paramref name="string2" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="b2214-140"><paramref name="string1" /> is less than <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-141">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b2214-141">greater than zero</span></span>

 </term><description><span data-ttu-id="b2214-142"><paramref name="string1" /> が <paramref name="string2" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="b2214-142"><paramref name="string1" /> is greater than <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-143">既定では、比較は <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>を使用して実行されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-143">By default, the comparison is performed by using <xref:System.Globalization.CompareOptions.None?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b2214-144">セキュリティの決定が文字列の比較またはケースの変更に依存している場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティを使用して、オペレーティングシステムのカルチャ設定に関係なく、動作が一貫していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-144">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-145">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-145">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-146">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-146">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-147">次の例では、異なる <xref:System.Globalization.CompareInfo> オブジェクトを使用して、2つの文字列の部分を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-147">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="b2214-148">国際並べ替えを使用してスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-148"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="b2214-149">従来の並べ替えでスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-149"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="b2214-150"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> に関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-150"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 <span data-ttu-id="b2214-151">次の例では、<xref:System.Globalization.CompareInfo.Compare%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b2214-151">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-152">文字セットには無視できる文字が含まれています。これらの文字は、言語またはカルチャに依存した比較を実行する際には考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-152">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-153"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> メソッドでは、カルチャに依存した比較を実行するときに、このような文字は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-153">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-154">たとえば、次の例に示すように、カルチャに依存した "animal" と "ani-------------------------" を使用すると、2つの文字列が等価であることが示されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-154">For instance, a culture-sensitive comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent, as the following example shows.</span></span>

<span data-ttu-id="b2214-155">[! コード-vb[システム. Compareinfo 比較 # 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="b2214-155">[!code-vb[System.Globalization.CompareInfo.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.compare/vb/compare1.vb#1)]</span></span>

<span data-ttu-id="b2214-156">文字列比較で無視できる文字を認識するには、<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> メソッドを呼び出し、<paramref name="options" /> パラメーターに <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> のいずれかの値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-156">To recognize ignorable characters in a string comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, string string2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, string string2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, string2 As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, System::String ^ string2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, string2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="b2214-157">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-157">The first string to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="b2214-158">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-158">The second string to compare.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-159"><paramref name="string1" /> と <paramref name="string2" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-159">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="b2214-160"><paramref name="options" /> は、それ自体で使用する列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />、<see cref="F:System.Globalization.CompareOptions.StringSort" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-160"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="b2214-161">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、2 つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-161">Compares two strings using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-162">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b2214-162">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="b2214-163">[値]</span><span class="sxs-lookup"><span data-stu-id="b2214-163">Value</span></span>

 </term><description> <span data-ttu-id="b2214-164">条件</span><span class="sxs-lookup"><span data-stu-id="b2214-164">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="b2214-165">ゼロ</span><span class="sxs-lookup"><span data-stu-id="b2214-165">zero</span></span>

 </term><description> <span data-ttu-id="b2214-166">2 つの文字列は等価。</span><span class="sxs-lookup"><span data-stu-id="b2214-166">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-167">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b2214-167">less than zero</span></span>

 </term><description><span data-ttu-id="b2214-168"><paramref name="string1" /> は <paramref name="string2" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="b2214-168"><paramref name="string1" /> is less than <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-169">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b2214-169">greater than zero</span></span>

 </term><description><span data-ttu-id="b2214-170"><paramref name="string1" /> が <paramref name="string2" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="b2214-170"><paramref name="string1" /> is greater than <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-171">セキュリティの決定が文字列の比較またはケースの変更に依存している場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティを使用して、オペレーティングシステムのカルチャ設定に関係なく、動作が一貫していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-171">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-172">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-172">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-173">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-173">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-174">次の例では、異なる <xref:System.Globalization.CompareOptions> 設定を使用して2つの文字列を比較しています。</span><span class="sxs-lookup"><span data-stu-id="b2214-174">The following example compares two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CPP/comparestrstropt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/CS/comparestrstropt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStrOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStrOpt/VB/comparestrstropt.vb#1)]

 <span data-ttu-id="b2214-175">次の例では、<xref:System.Globalization.CompareInfo.Compare%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b2214-175">The following example demonstrates calling the <xref:System.Globalization.CompareInfo.Compare%2A> method.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-176"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-176"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-177">文字セットには無視できる文字が含まれています。これらの文字は、言語またはカルチャに依存した比較を実行する際には考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-177">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-178"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> メソッドでは、カルチャに依存した比較を実行するときに、このような文字は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-178">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.String,System.Globalization.CompareOptions)" /> method does not consider such characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-179">比較で無視できる文字を認識するには、<paramref name="options" /> パラメーターの値として <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-179">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int -&gt; int&#xA;override this.Compare : string * int * string * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="b2214-180">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-180">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="b2214-181"><paramref name="string1" /> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-181">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="string2"><span data-ttu-id="b2214-182">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-182">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="b2214-183"><paramref name="string2" /> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-183">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <summary><span data-ttu-id="b2214-184">文字列の末尾部分と別の文字列の末尾部分とを比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-184">Compares the end section of a string with the end section of another string.</span></span></summary>
        <returns><span data-ttu-id="b2214-185">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b2214-185">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="b2214-186">[値]</span><span class="sxs-lookup"><span data-stu-id="b2214-186">Value</span></span>

 </term><description> <span data-ttu-id="b2214-187">条件</span><span class="sxs-lookup"><span data-stu-id="b2214-187">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="b2214-188">ゼロ</span><span class="sxs-lookup"><span data-stu-id="b2214-188">zero</span></span>

 </term><description> <span data-ttu-id="b2214-189">2 つの文字列は等価。</span><span class="sxs-lookup"><span data-stu-id="b2214-189">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-190">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b2214-190">less than zero</span></span>

 </term><description> <span data-ttu-id="b2214-191"><paramref name="string1" /> の指定部分は <paramref name="string2" /> の指定部分より小さい。</span><span class="sxs-lookup"><span data-stu-id="b2214-191">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-192">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b2214-192">greater than zero</span></span>

 </term><description> <span data-ttu-id="b2214-193"><paramref name="string1" /> の指定部分は <paramref name="string2" /> の指定部分より大きい。</span><span class="sxs-lookup"><span data-stu-id="b2214-193">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-194">セキュリティの決定が文字列の比較またはケースの変更に依存している場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティを使用して、オペレーティングシステムのカルチャ設定に関係なく、動作が一貫していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-194">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-195">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-195">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-196">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-196">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-197">次の例では、異なる <xref:System.Globalization.CompareInfo> オブジェクトを使用して、2つの文字列の部分を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-197">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="b2214-198">国際並べ替えを使用してスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-198"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="b2214-199">従来の並べ替えでスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-199"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="b2214-200"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> に関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-200"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CPP/comparestrintstrint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/CS/comparestrintstrint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrInt/VB/comparestrintstrint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-201"><paramref name="offset1" /> または <paramref name="offset2" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-201"><paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span></span>

<span data-ttu-id="b2214-202">または</span><span class="sxs-lookup"><span data-stu-id="b2214-202">-or-</span></span>

 <span data-ttu-id="b2214-203"><paramref name="offset1" /> が <paramref name="string1" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="b2214-203"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>

<span data-ttu-id="b2214-204">または</span><span class="sxs-lookup"><span data-stu-id="b2214-204">-or-</span></span>

 <span data-ttu-id="b2214-205"><paramref name="offset2" /> が <paramref name="string2" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="b2214-205"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-206">文字セットには無視できる文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-206">Character sets include ignorable characters.</span></span> <span data-ttu-id="b2214-207"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> メソッドは、言語またはカルチャに依存した比較を実行するときに、これらの文字を考慮しません。</span><span class="sxs-lookup"><span data-stu-id="b2214-207">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-208">比較で無視できる文字を認識するには、<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> メソッドを呼び出し、<paramref name="options" /> パラメーターに <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-208">To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, string string2, int offset2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, string string2, int32 offset2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, string2 As String, offset2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, System::String ^ string2, int offset2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, string2, offset2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="b2214-209">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-209">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="b2214-210"><paramref name="string1" /> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-210">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="string2"><span data-ttu-id="b2214-211">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-211">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="b2214-212"><paramref name="string2" /> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-212">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-213"><paramref name="string1" /> と <paramref name="string2" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-213">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="b2214-214"><paramref name="options" /> は、それ自体で使用する列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />、<see cref="F:System.Globalization.CompareOptions.StringSort" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-214"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="b2214-215">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、文字列の末尾部分と別の文字列の末尾部分とを比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-215">Compares the end section of a string with the end section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-216">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b2214-216">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="b2214-217">[値]</span><span class="sxs-lookup"><span data-stu-id="b2214-217">Value</span></span>

 </term><description> <span data-ttu-id="b2214-218">条件</span><span class="sxs-lookup"><span data-stu-id="b2214-218">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="b2214-219">ゼロ</span><span class="sxs-lookup"><span data-stu-id="b2214-219">zero</span></span>

 </term><description> <span data-ttu-id="b2214-220">2 つの文字列は等価。</span><span class="sxs-lookup"><span data-stu-id="b2214-220">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-221">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b2214-221">less than zero</span></span>

 </term><description> <span data-ttu-id="b2214-222"><paramref name="string1" /> の指定部分は <paramref name="string2" /> の指定部分より小さい。</span><span class="sxs-lookup"><span data-stu-id="b2214-222">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-223">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b2214-223">greater than zero</span></span>

 </term><description> <span data-ttu-id="b2214-224"><paramref name="string1" /> の指定部分は <paramref name="string2" /> の指定部分より大きい。</span><span class="sxs-lookup"><span data-stu-id="b2214-224">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-225">セキュリティの決定が文字列の比較またはケースの変更に依存している場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティを使用して、オペレーティングシステムのカルチャ設定に関係なく、動作が一貫していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-225">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-226">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-226">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-227">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-227">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-228">次の例では、異なる <xref:System.Globalization.CompareOptions> 設定を使用して2つの文字列の部分を比較しています。</span><span class="sxs-lookup"><span data-stu-id="b2214-228">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CPP/comparestrintstrintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/CS/comparestrintstrintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntStrIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntStrIntOpt/VB/comparestrintstrintopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-229"><paramref name="offset1" /> または <paramref name="offset2" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-229"><paramref name="offset1" /> or <paramref name="offset2" /> is less than zero.</span></span>

<span data-ttu-id="b2214-230">または</span><span class="sxs-lookup"><span data-stu-id="b2214-230">-or-</span></span>

 <span data-ttu-id="b2214-231"><paramref name="offset1" /> が <paramref name="string1" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="b2214-231"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>

<span data-ttu-id="b2214-232">または</span><span class="sxs-lookup"><span data-stu-id="b2214-232">-or-</span></span>

 <span data-ttu-id="b2214-233"><paramref name="offset2" /> が <paramref name="string2" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="b2214-233"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-234"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-234"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-235">文字セットには無視できる文字が含まれています。これらの文字は、言語またはカルチャに依存した比較を実行する際には考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-235">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-236"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> メソッドでは、カルチャに依存した比較を実行するときに、このような文字は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-236">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.String,System.Int32,System.Globalization.CompareOptions)" /> method does not consider such characters when performing a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-237">比較で無視できる文字を認識するには、<paramref name="options" /> パラメーターの値として <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-237">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int -&gt; int&#xA;override this.Compare : string * int * int * string * int * int -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="b2214-238">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-238">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="b2214-239"><paramref name="string1" /> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-239">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="length1"><span data-ttu-id="b2214-240">比較対象の <paramref name="string1" /> に含まれる連続する文字の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-240">The number of consecutive characters in <paramref name="string1" /> to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="b2214-241">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-241">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="b2214-242"><paramref name="string2" /> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-242">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="length2"><span data-ttu-id="b2214-243">比較対象の <paramref name="string2" /> に含まれる連続する文字の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-243">The number of consecutive characters in <paramref name="string2" /> to compare.</span></span></param>
        <summary><span data-ttu-id="b2214-244">文字列のセクションと別の文字列のセクションとを比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-244">Compares a section of one string with a section of another string.</span></span></summary>
        <returns><span data-ttu-id="b2214-245">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b2214-245">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="b2214-246">[値]</span><span class="sxs-lookup"><span data-stu-id="b2214-246">Value</span></span>

 </term><description> <span data-ttu-id="b2214-247">条件</span><span class="sxs-lookup"><span data-stu-id="b2214-247">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="b2214-248">ゼロ</span><span class="sxs-lookup"><span data-stu-id="b2214-248">zero</span></span>

 </term><description> <span data-ttu-id="b2214-249">2 つの文字列は等価。</span><span class="sxs-lookup"><span data-stu-id="b2214-249">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-250">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b2214-250">less than zero</span></span>

 </term><description> <span data-ttu-id="b2214-251"><paramref name="string1" /> の指定部分は <paramref name="string2" /> の指定部分より小さい。</span><span class="sxs-lookup"><span data-stu-id="b2214-251">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-252">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b2214-252">greater than zero</span></span>

 </term><description> <span data-ttu-id="b2214-253"><paramref name="string1" /> の指定部分は <paramref name="string2" /> の指定部分より大きい。</span><span class="sxs-lookup"><span data-stu-id="b2214-253">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-254">セキュリティの決定が文字列の比較またはケースの変更に依存している場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティを使用して、オペレーティングシステムのカルチャ設定に関係なく、動作が一貫していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-254">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-255">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを使用して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-255">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-256">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-256">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-257">次の例では、異なる <xref:System.Globalization.CompareInfo> オブジェクトを使用して、2つの文字列の部分を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-257">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="b2214-258">国際並べ替えを使用してスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-258"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="b2214-259">従来の並べ替えでスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-259"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="b2214-260"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> に関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-260"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CPP/comparestrintintstrintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/CS/comparestrintintstrintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntInt/VB/comparestrintintstrintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-261"><paramref name="offset1" />、<paramref name="length1" />、<paramref name="offset2" />、または <paramref name="length2" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-261"><paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span></span>

<span data-ttu-id="b2214-262">または</span><span class="sxs-lookup"><span data-stu-id="b2214-262">-or-</span></span>

 <span data-ttu-id="b2214-263"><paramref name="offset1" /> が <paramref name="string1" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="b2214-263"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>

<span data-ttu-id="b2214-264">または</span><span class="sxs-lookup"><span data-stu-id="b2214-264">-or-</span></span>

 <span data-ttu-id="b2214-265"><paramref name="offset2" /> が <paramref name="string2" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="b2214-265"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span>

<span data-ttu-id="b2214-266">または</span><span class="sxs-lookup"><span data-stu-id="b2214-266">-or-</span></span>

 <span data-ttu-id="b2214-267"><paramref name="length1" /> が、<paramref name="offset1" /> から <paramref name="string1" /> の末尾までの文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="b2214-267"><paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span></span>

<span data-ttu-id="b2214-268">または</span><span class="sxs-lookup"><span data-stu-id="b2214-268">-or-</span></span>

 <span data-ttu-id="b2214-269"><paramref name="length2" /> が、<paramref name="offset2" /> から <paramref name="string2" /> の末尾までの文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="b2214-269"><paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-270">文字セットには無視できる文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-270">Character sets include ignorable characters.</span></span> <span data-ttu-id="b2214-271"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> メソッドは、言語またはカルチャに依存した比較を実行するときに、これらの文字を考慮しません。</span><span class="sxs-lookup"><span data-stu-id="b2214-271">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-272">比較で無視できる文字を認識するには、<see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドを呼び出し、<paramref name="options" /> パラメーターに <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> の値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-272">To recognize ignorable characters in your comparison, call the <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public virtual int Compare (string string1, int offset1, int length1, string string2, int offset2, int length2, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(string string1, int32 offset1, int32 length1, string string2, int32 offset2, int32 length2, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Compare (string1 As String, offset1 As Integer, length1 As Integer, string2 As String, offset2 As Integer, length2 As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::String ^ string1, int offset1, int length1, System::String ^ string2, int offset2, int length2, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.Compare : string * int * int * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.Compare (string1, offset1, length1, string2, offset2, length2, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="offset1" Type="System.Int32" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="string2" Type="System.String" />
        <Parameter Name="offset2" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="b2214-273">比較する最初の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-273">The first string to compare.</span></span></param>
        <param name="offset1"><span data-ttu-id="b2214-274"><paramref name="string1" /> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-274">The zero-based index of the character in <paramref name="string1" /> at which to start comparing.</span></span></param>
        <param name="length1"><span data-ttu-id="b2214-275">比較対象の <paramref name="string1" /> に含まれる連続する文字の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-275">The number of consecutive characters in <paramref name="string1" /> to compare.</span></span></param>
        <param name="string2"><span data-ttu-id="b2214-276">比較する 2 番目の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-276">The second string to compare.</span></span></param>
        <param name="offset2"><span data-ttu-id="b2214-277"><paramref name="string2" /> 内の比較を開始する位置にある文字の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-277">The zero-based index of the character in <paramref name="string2" /> at which to start comparing.</span></span></param>
        <param name="length2"><span data-ttu-id="b2214-278">比較対象の <paramref name="string2" /> に含まれる連続する文字の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-278">The number of consecutive characters in <paramref name="string2" /> to compare.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-279"><paramref name="string1" /> と <paramref name="string2" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-279">A value that defines how <paramref name="string1" /> and <paramref name="string2" /> should be compared.</span></span> <span data-ttu-id="b2214-280"><paramref name="options" /> は、それ自体で使用する列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />、<see cref="F:System.Globalization.CompareOptions.StringSort" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-280"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="b2214-281">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、ある文字列のセクションと別の文字列のセクションとを比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-281">Compares a section of one string with a section of another string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-282">2 つの比較対照値の構文上の関係を示す 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="b2214-282">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="b2214-283">[値]</span><span class="sxs-lookup"><span data-stu-id="b2214-283">Value</span></span>

 </term><description> <span data-ttu-id="b2214-284">条件</span><span class="sxs-lookup"><span data-stu-id="b2214-284">Condition</span></span>

 </description></listheader><item><term> <span data-ttu-id="b2214-285">ゼロ</span><span class="sxs-lookup"><span data-stu-id="b2214-285">zero</span></span>

 </term><description> <span data-ttu-id="b2214-286">2 つの文字列は等価。</span><span class="sxs-lookup"><span data-stu-id="b2214-286">The two strings are equal.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-287">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="b2214-287">less than zero</span></span>

 </term><description> <span data-ttu-id="b2214-288"><paramref name="string1" /> の指定部分は <paramref name="string2" /> の指定部分より小さい。</span><span class="sxs-lookup"><span data-stu-id="b2214-288">The specified section of <paramref name="string1" /> is less than the specified section of <paramref name="string2" />.</span></span>

 </description></item><item><term> <span data-ttu-id="b2214-289">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="b2214-289">greater than zero</span></span>

 </term><description> <span data-ttu-id="b2214-290"><paramref name="string1" /> の指定部分は <paramref name="string2" /> の指定部分より大きい。</span><span class="sxs-lookup"><span data-stu-id="b2214-290">The specified section of <paramref name="string1" /> is greater than the specified section of <paramref name="string2" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-291">セキュリティの決定が文字列の比較またはケースの変更に依存している場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティを使用して、オペレーティングシステムのカルチャ設定に関係なく、動作が一貫していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-291">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-292">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-292">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-293">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-293">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-294">次の例では、異なる <xref:System.Globalization.CompareOptions> 設定を使用して2つの文字列の部分を比較しています。</span><span class="sxs-lookup"><span data-stu-id="b2214-294">The following example compares portions of two strings using different <xref:System.Globalization.CompareOptions> settings.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CPP/comparestrintintstrintintopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/CS/comparestrintintstrintintopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrIntIntStrIntIntOpt/VB/comparestrintintstrintintopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-295"><paramref name="offset1" />、<paramref name="length1" />、<paramref name="offset2" />、または <paramref name="length2" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-295"><paramref name="offset1" /> or <paramref name="length1" /> or <paramref name="offset2" /> or <paramref name="length2" /> is less than zero.</span></span>

<span data-ttu-id="b2214-296">または</span><span class="sxs-lookup"><span data-stu-id="b2214-296">-or-</span></span>

 <span data-ttu-id="b2214-297"><paramref name="offset1" /> が <paramref name="string1" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="b2214-297"><paramref name="offset1" /> is greater than or equal to the number of characters in <paramref name="string1" />.</span></span>

<span data-ttu-id="b2214-298">または</span><span class="sxs-lookup"><span data-stu-id="b2214-298">-or-</span></span>

 <span data-ttu-id="b2214-299"><paramref name="offset2" /> が <paramref name="string2" /> の文字数以上です。</span><span class="sxs-lookup"><span data-stu-id="b2214-299"><paramref name="offset2" /> is greater than or equal to the number of characters in <paramref name="string2" />.</span></span>

<span data-ttu-id="b2214-300">または</span><span class="sxs-lookup"><span data-stu-id="b2214-300">-or-</span></span>

 <span data-ttu-id="b2214-301"><paramref name="length1" /> が、<paramref name="offset1" /> から <paramref name="string1" /> の末尾までの文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="b2214-301"><paramref name="length1" /> is greater than the number of characters from <paramref name="offset1" /> to the end of <paramref name="string1" />.</span></span>

<span data-ttu-id="b2214-302">または</span><span class="sxs-lookup"><span data-stu-id="b2214-302">-or-</span></span>

 <span data-ttu-id="b2214-303"><paramref name="length2" /> が、<paramref name="offset2" /> から <paramref name="string2" /> の末尾までの文字数を超えています。</span><span class="sxs-lookup"><span data-stu-id="b2214-303"><paramref name="length2" /> is greater than the number of characters from <paramref name="offset2" /> to the end of <paramref name="string2" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-304"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-304"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-305">文字セットには無視できる文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-305">Character sets include ignorable characters.</span></span> <span data-ttu-id="b2214-306"><see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドでは、カルチャに依存した比較を実行するときに、これらの文字は考慮されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-306">The <see cref="M:System.Globalization.CompareInfo.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method does not consider these characters when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-307">比較で無視できる文字を認識するには、<paramref name="options" /> パラメーターの値として <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-307">To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</span></span></para></block>
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compareInfo.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b2214-308">現在の <see cref="T:System.Globalization.CompareInfo" /> と比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-308">The object to compare with the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></param>
        <summary><span data-ttu-id="b2214-309">指定したオブジェクトが、現在の <see cref="T:System.Globalization.CompareInfo" /> オブジェクトと等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-309">Determines whether the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="b2214-310">指定したオブジェクトが現在の <see langword="true" /> オブジェクトと等しい場合は <see cref="T:System.Globalization.CompareInfo" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-310"><see langword="true" /> if the specified object is equal to the current <see cref="T:System.Globalization.CompareInfo" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-311">2つの <xref:System.Globalization.CompareInfo> オブジェクトは、<xref:System.Globalization.CompareInfo.LCID%2A> と <xref:System.Globalization.CompareInfo.Name%2A> プロパティが等しい場合に等しくなります。</span><span class="sxs-lookup"><span data-stu-id="b2214-311">Two <xref:System.Globalization.CompareInfo> objects are equal if their <xref:System.Globalization.CompareInfo.LCID%2A> and <xref:System.Globalization.CompareInfo.Name%2A> properties are equal.</span></span>

 <span data-ttu-id="b2214-312">このメソッドは、<xref:System.Object.Equals%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b2214-312">This method overrides <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="b2214-313">セキュリティの決定が文字列の比較またはケースの変更に依存している場合は、<xref:System.Globalization.CultureInfo.InvariantCulture%2A> プロパティを使用して、オペレーティングシステムのカルチャ設定に関係なく、動作が一貫していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-313">If a security decision depends on a string comparison or a case change, you should use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCompareInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-314">新しい <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b2214-314">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (culture As Integer) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="b2214-315">カルチャ識別子を表す整数。</span><span class="sxs-lookup"><span data-stu-id="b2214-315">An integer representing the culture identifier.</span></span></param>
        <summary><span data-ttu-id="b2214-316">指定した識別子のカルチャに関連付けられている新しい <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b2214-316">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified identifier.</span></span></summary>
        <returns><span data-ttu-id="b2214-317">指定した識別子のカルチャに関連付けられ、現在の <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-317">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="b2214-318">次の例では、異なる <xref:System.Globalization.CompareInfo> オブジェクトを使用して、2つの文字列の部分を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-318">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="b2214-319">国際並べ替えを使用してスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-319"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="b2214-320">従来の並べ替えでスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-320"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="b2214-321"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> に関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-321"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCompareInfo (name As String) As CompareInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2214-322">カルチャ名を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-322">A string representing the culture name.</span></span></param>
        <summary><span data-ttu-id="b2214-323">指定した名前のカルチャに関連付けられている新しい <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b2214-323">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the culture with the specified name.</span></span></summary>
        <returns><span data-ttu-id="b2214-324">指定した識別子のカルチャに関連付けられ、現在の <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-324">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="b2214-325">次の例では、異なる <xref:System.Globalization.CompareInfo> オブジェクトを使用して、2つの文字列の部分を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-325">The following example compares portions of two strings using the different <xref:System.Globalization.CompareInfo> objects:</span></span>

-   <span data-ttu-id="b2214-326">国際並べ替えを使用してスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-326"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with international sort</span></span>

-   <span data-ttu-id="b2214-327">従来の並べ替えでスペイン語 (スペイン) カルチャに関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-327"><xref:System.Globalization.CompareInfo> object associated with the Spanish (Spain) culture with traditional sort</span></span>

-   <span data-ttu-id="b2214-328"><xref:System.Globalization.CultureInfo.InvariantCulture%2A> に関連付けられている <xref:System.Globalization.CompareInfo> オブジェクト</span><span class="sxs-lookup"><span data-stu-id="b2214-328"><xref:System.Globalization.CompareInfo> object associated with the <xref:System.Globalization.CultureInfo.InvariantCulture%2A></span></span>

 [!code-cpp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CPP/comparestrstr.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/CS/comparestrstr.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.CompareStrStr#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.CompareStrStr/VB/comparestrstr.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-329"><paramref name="name" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-329"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-330"><paramref name="name" /> が無効なカルチャ名です。</span><span class="sxs-lookup"><span data-stu-id="b2214-330"><paramref name="name" /> is an invalid culture name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (int culture, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(int32 culture, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(int culture, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : int * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (culture, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="b2214-331">カルチャ識別子を表す整数。</span><span class="sxs-lookup"><span data-stu-id="b2214-331">An integer representing the culture identifier.</span></span></param>
        <param name="assembly"><span data-ttu-id="b2214-332">使用する文字列比較メソッドを含む <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="b2214-332">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span></span></param>
        <summary><span data-ttu-id="b2214-333">指定したカルチャに関連付けられ、指定した <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b2214-333">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="b2214-334">指定した識別子のカルチャに関連付けられ、現在の <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-334">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  <span data-ttu-id="b2214-335">このメソッドの動作は予測できません。</span><span class="sxs-lookup"><span data-stu-id="b2214-335">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="b2214-336">アプリケーションで、アセンブリ入力を受け取らないこのメソッドのバージョンを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b2214-336">It is recommended for your application to use a version of this method that does not take an assembly input.</span></span>

 <span data-ttu-id="b2214-337">`assembly` パラメーターは <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>と同じ型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-337">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-338"><paramref name="assembly" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-338"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-339"><paramref name="assembly" /> が無効な型です。</span><span class="sxs-lookup"><span data-stu-id="b2214-339"><paramref name="assembly" /> is of an invalid type.</span></span></exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="GetCompareInfo">
      <MemberSignature Language="C#" Value="public static System.Globalization.CompareInfo GetCompareInfo (string name, System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Globalization.CompareInfo GetCompareInfo(string name, class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::CompareInfo ^ GetCompareInfo(System::String ^ name, System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member GetCompareInfo : string * System.Reflection.Assembly -&gt; System.Globalization.CompareInfo" Usage="System.Globalization.CompareInfo.GetCompareInfo (name, assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CompareInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b2214-340">カルチャ名を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-340">A string representing the culture name.</span></span></param>
        <param name="assembly"><span data-ttu-id="b2214-341">使用する文字列比較メソッドを含む <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="b2214-341">An <see cref="T:System.Reflection.Assembly" /> that contains the string comparison methods to use.</span></span></param>
        <summary><span data-ttu-id="b2214-342">指定したカルチャに関連付けられ、指定した <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b2214-342">Initializes a new <see cref="T:System.Globalization.CompareInfo" /> object that is associated with the specified culture and that uses string comparison methods in the specified <see cref="T:System.Reflection.Assembly" />.</span></span></summary>
        <returns><span data-ttu-id="b2214-343">指定した識別子のカルチャに関連付けられ、現在の <see cref="T:System.Globalization.CompareInfo" /> 内の文字列比較メソッドを使用する新しい <see cref="T:System.Reflection.Assembly" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-343">A new <see cref="T:System.Globalization.CompareInfo" /> object associated with the culture with the specified identifier and using string comparison methods in the current <see cref="T:System.Reflection.Assembly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
>  <span data-ttu-id="b2214-344">このメソッドの動作は予測できません。</span><span class="sxs-lookup"><span data-stu-id="b2214-344">The behavior of this method is unpredictable.</span></span> <span data-ttu-id="b2214-345">アセンブリ入力を受け取らないこのメソッドのバージョンを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b2214-345">We recommend that you use a version of this method that does not take an assembly input.</span></span>

 <span data-ttu-id="b2214-346">`assembly` パラメーターは <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>と同じ型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-346">The `assembly` parameter must be of the same type as <xref:System.Reflection.Module.Assembly%2A?displayProperty=nameWithType>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-347"><paramref name="name" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-347"><paramref name="name" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-348">または</span><span class="sxs-lookup"><span data-stu-id="b2214-348">-or-</span></span>

 <span data-ttu-id="b2214-349"><paramref name="assembly" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-349"><paramref name="assembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-350"><paramref name="name" /> が無効なカルチャ名です。</span><span class="sxs-lookup"><span data-stu-id="b2214-350"><paramref name="name" /> is an invalid culture name.</span></span>

<span data-ttu-id="b2214-351">または</span><span class="sxs-lookup"><span data-stu-id="b2214-351">-or-</span></span>

 <span data-ttu-id="b2214-352"><paramref name="assembly" /> が無効な型です。</span><span class="sxs-lookup"><span data-stu-id="b2214-352"><paramref name="assembly" /> is of an invalid type.</span></span></exception>
        <altmember cref="P:System.Reflection.Module.Assembly" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHashCode">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-353">この <see cref="T:System.Globalization.CompareInfo" /> インスタンスまたは特定の文字列のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-353">Returns a hash code either for this <see cref="T:System.Globalization.CompareInfo" /> instance or for a particular string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compareInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2214-354">現在の <see cref="T:System.Globalization.CompareInfo" /> のハッシュ関数として機能し、ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-354">Serves as a hash function for the current <see cref="T:System.Globalization.CompareInfo" /> for hashing algorithms and data structures, such as a hash table.</span></span></summary>
        <returns><span data-ttu-id="b2214-355">現在の <see cref="T:System.Globalization.CompareInfo" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="b2214-355">A hash code for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-356">このメソッドは、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b2214-356">This method overrides <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="b2214-357">このメソッドは、<xref:System.Globalization.CompareInfo.Equals%2A> メソッドによって等しいと評価された 2 つのオブジェクトに対して同じハッシュ コードを生成します。</span><span class="sxs-lookup"><span data-stu-id="b2214-357">This method generates the same hash code for two objects that are equal according to the <xref:System.Globalization.CompareInfo.Equals%2A> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.CompareInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (ReadOnlySpan&lt;char&gt; source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHashCode(valuetype System.ReadOnlySpan`1&lt;char&gt; source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.ReadOnlySpan{System.Char},System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (source As ReadOnlySpan(Of Char), options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(ReadOnlySpan&lt;char&gt; source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : ReadOnlySpan&lt;char&gt; * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-358">ハッシュ コードが返される文字スパン。</span><span class="sxs-lookup"><span data-stu-id="b2214-358">The character span whose hash code is to be returned.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-359">文字列の比較方法を決定する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-359">A value that determines how strings are compared.</span></span></param>
        <summary><span data-ttu-id="b2214-360">指定した比較オプションに基づいて文字スパンに対するハッシュ コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2214-360">Gets the hash code for a character span based on specified comparison options.</span></span></summary>
        <returns><span data-ttu-id="b2214-361">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="b2214-361">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-362">このオーバーロードの動作は、共通言語ランタイムのあるバージョンから別のバージョン、または .NET 実装間で変更される可能性がある実装に依存します。</span><span class="sxs-lookup"><span data-stu-id="b2214-362">The behavior of this overload is dependent on its implementation, which might change from one version of the common language runtime to another, or from one .NET implementation to another.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="b2214-363">2つの文字範囲が等しい場合、このオーバーロードは同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-363">If two character spans are equal, this overload returns identical values.</span></span> <span data-ttu-id="b2214-364">ただし、一意の文字範囲値ごとに一意のハッシュコード値はありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-364">However, there is not a unique hash code value for each unique character span value.</span></span> <span data-ttu-id="b2214-365">文字の範囲が異なると、同じハッシュコードを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="b2214-365">Different character spans can return the same hash code.</span></span>
>
>  <span data-ttu-id="b2214-366">ハッシュコード自体は、安定しているとは限りません。</span><span class="sxs-lookup"><span data-stu-id="b2214-366">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="b2214-367">同一の文字範囲のハッシュコードは、.net 実装のバージョン間で異なる場合もあれば、1つのバージョンの .NET のプラットフォーム (32 ビットや64ビットなど) 間で異なる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-367">Hash codes for identical character spans can differ across versions of the .NET implementations and across platforms (such as 32-bit and 64-bit) for a single version of .NET.</span></span>
>
>  <span data-ttu-id="b2214-368">このため、ハッシュコードは、作成されたアプリケーションドメインの外部では使用できません。また、コレクションのキーフィールドとして使用することは避け、永続化しないでください。</span><span class="sxs-lookup"><span data-stu-id="b2214-368">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetHashCode (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetHashCode(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHashCode (source As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetHashCode(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.GetHashCode (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-369">ハッシュ コードが返される文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-369">The string whose hash code is to be returned.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-370">文字列の比較方法を決定する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-370">A value that determines how strings are compared.</span></span></param>
        <summary><span data-ttu-id="b2214-371">指定した比較オプションに基づいて文字列のハッシュ コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2214-371">Gets the hash code for a string based on specified comparison options.</span></span></summary>
        <returns><span data-ttu-id="b2214-372">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="b2214-372">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-373"><xref:System.Globalization.CompareInfo.GetHashCode%2A> の動作は、実装によって異なります。これは、共通言語ランタイムのあるバージョンから別のバージョン、または .NET Framework プラットフォーム間で変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-373">The behavior of <xref:System.Globalization.CompareInfo.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another, or from one .NET Framework platform to another.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="b2214-374">2つの文字列オブジェクトが等しい場合、<xref:System.Globalization.CompareInfo.GetHashCode%2A> メソッドは同一の値を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-374">If two string objects are equal, the <xref:System.Globalization.CompareInfo.GetHashCode%2A> method returns identical values.</span></span> <span data-ttu-id="b2214-375">ただし、一意の文字列値ごとに一意のハッシュコード値はありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-375">However, there is not a unique hash code value for each unique string value.</span></span> <span data-ttu-id="b2214-376">異なる文字列は、同じハッシュコードを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="b2214-376">Different strings can return the same hash code.</span></span>
>
>  <span data-ttu-id="b2214-377">ハッシュコード自体は、安定しているとは限りません。</span><span class="sxs-lookup"><span data-stu-id="b2214-377">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="b2214-378">同じ文字列のハッシュコードは、.NET Framework の1つのバージョンについて、.NET Framework のバージョンとプラットフォーム (32 ビットや64ビットなど) 間で異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-378">Hash codes for identical strings can differ across versions of the .NET Framework and across platforms (such as 32-bit and 64-bit) for a single version of the .NET Framework.</span></span> <span data-ttu-id="b2214-379">場合によっては、アプリケーションドメインによって異なる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-379">In some cases, they can even differ by application domain.</span></span>
>
>  <span data-ttu-id="b2214-380">このため、ハッシュコードは、作成されたアプリケーションドメインの外部では使用できません。また、コレクションのキーフィールドとして使用することは避け、永続化しないでください。</span><span class="sxs-lookup"><span data-stu-id="b2214-380">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-381"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-381"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSortKey">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-382">文字列の <see cref="T:System.Globalization.SortKey" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2214-382">Gets a <see cref="T:System.Globalization.SortKey" /> object for a string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-383"><see cref="T:System.Globalization.SortKey" /> オブジェクトを取得する対象となる文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-383">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span></span></param>
        <summary><span data-ttu-id="b2214-384">指定した文字列の並べ替えキーを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2214-384">Gets the sort key for the specified string.</span></span></summary>
        <returns><span data-ttu-id="b2214-385">指定した文字列の並べ替えキーを含む <see cref="T:System.Globalization.SortKey" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-385">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-386">文字列の各文字には、スクリプト、アルファベット、大文字と小文字の区別、および発音区別の重みを含む、いくつかのカテゴリの並べ替えの重みが与えられます。</span><span class="sxs-lookup"><span data-stu-id="b2214-386">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="b2214-387">並べ替えキーは、特定の文字列に対するこれらの重みのリポジトリです。</span><span class="sxs-lookup"><span data-stu-id="b2214-387">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="b2214-388">たとえば、並べ替えキーにはアルファベット順ウェイトの文字列、大文字小文字のウェイトの文字列などが特定の順序で格納されています。</span><span class="sxs-lookup"><span data-stu-id="b2214-388">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="b2214-389"><xref:System.Globalization.CompareInfo.GetSortKey%2A> メソッドは、LCMAP_SORTKEY フラグを使用した Windows API メソッド `LCMapString` と同じです。</span><span class="sxs-lookup"><span data-stu-id="b2214-389">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortKey" />
      </Docs>
    </Member>
    <Member MemberName="GetSortKey">
      <MemberSignature Language="C#" Value="public virtual System.Globalization.SortKey GetSortKey (string source, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Globalization.SortKey GetSortKey(string source, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortKey (source As String, options As CompareOptions) As SortKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Globalization::SortKey ^ GetSortKey(System::String ^ source, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey&#xA;override this.GetSortKey : string * System.Globalization.CompareOptions -&gt; System.Globalization.SortKey" Usage="compareInfo.GetSortKey (source, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.SortKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-390"><see cref="T:System.Globalization.SortKey" /> オブジェクトを取得する対象となる文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-390">The string for which a <see cref="T:System.Globalization.SortKey" /> object is obtained.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-391">並べ替えキーの計算方法を定義する、次の列挙値の 1 つ以上のビットごとの組み合わせ: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />、<see cref="F:System.Globalization.CompareOptions.StringSort" />。</span><span class="sxs-lookup"><span data-stu-id="b2214-391">A bitwise combination of one or more of the following enumeration values that define how the sort key is calculated: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />, and <see cref="F:System.Globalization.CompareOptions.StringSort" />.</span></span></param>
        <summary><span data-ttu-id="b2214-392">指定した <see cref="T:System.Globalization.SortKey" /> 値を使用して、指定した文字列の <see cref="T:System.Globalization.CompareOptions" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b2214-392">Gets a <see cref="T:System.Globalization.SortKey" /> object for the specified string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-393">指定した文字列の並べ替えキーを含む <see cref="T:System.Globalization.SortKey" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-393">The <see cref="T:System.Globalization.SortKey" /> object that contains the sort key for the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-394">文字列の各文字には、スクリプト、アルファベット、大文字と小文字の区別、および発音区別の重みを含む、いくつかのカテゴリの並べ替えの重みが与えられます。</span><span class="sxs-lookup"><span data-stu-id="b2214-394">Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</span></span> <span data-ttu-id="b2214-395">並べ替えキーは、特定の文字列に対するこれらの重みのリポジトリです。</span><span class="sxs-lookup"><span data-stu-id="b2214-395">A sort key is the repository of these weights for a particular string.</span></span> <span data-ttu-id="b2214-396">たとえば、並べ替えキーにはアルファベット順ウェイトの文字列、大文字小文字のウェイトの文字列などが特定の順序で格納されています。</span><span class="sxs-lookup"><span data-stu-id="b2214-396">For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</span></span> <span data-ttu-id="b2214-397"><xref:System.Globalization.CompareInfo.GetSortKey%2A> メソッドは、LCMAP_SORTKEY フラグを使用した Windows API メソッド `LCMapString` と同じです。</span><span class="sxs-lookup"><span data-stu-id="b2214-397">The <xref:System.Globalization.CompareInfo.GetSortKey%2A> method is equivalent to the Windows API method `LCMapString` with the LCMAP_SORTKEY flag.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-398"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-398"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="T:System.Globalization.SortKey" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-399">文字列または部分文字列内にある値のうち、最初に出現する値の、0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-399">Returns the zero-based index of the first occurrence of a value within a string or within a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char -&gt; int&#xA;override this.IndexOf : string * char -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-400">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-400">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-401"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-401">The character to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="b2214-402">指定した文字を検索し、検索対象文字列全体内で最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-402">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="b2214-403"><paramref name="value" /> 内で <paramref name="source" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-403">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-404"><paramref name="value" /> が無視できる文字の場合は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-404">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-405">このメソッドは、文字列の先頭から文字列の末尾までのソース文字列を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-405">This method searches the source string from the beginning of the string to the end of the string.</span></span>

 <span data-ttu-id="b2214-406">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-406">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-407">`value` が、合字 "Æ" (U + 00C6) などの構成済みの Unicode 文字を表している場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの発生と同等であると見なされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-407">If `value` represents a precomposed Unicode character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-408">Unicode コードポイントが同じである場合にのみ、文字が別の文字と等価と見なされる序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-408">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode code points are the same, you should call an overload that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="b2214-409">カルチャに依存した比較を実行する <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>とは異なり、文字を検索する <xref:System.String.IndexOf%2A?displayProperty=nameWithType> メソッドのオーバーロードは、序数の比較を実行し、文字列を検索するオーバーロードはカルチャに依存した比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-409">Unlike <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType>, which performs a culture-sensitive comparison, overloads of the <xref:System.String.IndexOf%2A?displayProperty=nameWithType> method that search for a character perform an ordinal comparison and overloads that search for a string perform a culture-sensitive comparison.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-410">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを使用して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-410">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-411">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-411">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-412">次の例では、文字列内の文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-412">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-413"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-413"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-414">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-414">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-415">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-415">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-416">この場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> メソッドは常に 0 (ゼロ) を返して、<paramref name="source" />の先頭に一致が見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-416">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="b2214-417">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> メソッドを使用して、2つの文字列でソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-417">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="b2214-418">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-418">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-419">どちらの場合も、ソフトハイフンが無視できる文字であるため、メソッドは 0 (ゼロ) を返して、文字列の先頭に一致するものが見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-419">In both cases, because the soft hyphen is an ignorable character, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>

<span data-ttu-id="b2214-420">[! code-csharp.[Compareinfo IndexOf # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)][! コード-vb[システム. CompareInfo. IndexOf # 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="b2214-420">[!code-csharp[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable2.cs#3)] [!code-vb[System.Globalization.CompareInfo.IndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable2.vb#3)]</span></span></para></block>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string -&gt; int&#xA;override this.IndexOf : string * string -&gt; int" Usage="compareInfo.IndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-421">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-421">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-422"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-422">The string to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="b2214-423">指定した部分文字列を検索し、検索対象文字列全体内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-423">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="b2214-424"><paramref name="value" /> 内で <paramref name="source" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-424">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-425"><paramref name="value" /> が無視できる文字の場合は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-425">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-426">ソース文字列は、文字列の先頭から順に検索され、文字列の末尾で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-426">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>

 <span data-ttu-id="b2214-427">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-427">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-428">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-428">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-429">Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードのいずれかを使用し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-429">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should use one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-430">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-430">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-431">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-431">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-432">次の例では、文字列内の文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-432">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-433"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-433"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-434">または</span><span class="sxs-lookup"><span data-stu-id="b2214-434">-or-</span></span>

 <span data-ttu-id="b2214-435"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-435"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-436">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-436">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-437">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-437">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-438"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> メソッドは常に 0 (ゼロ) を返して、<paramref name="source" />の先頭に一致が見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-438">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="b2214-439">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> メソッドを使用して、2つの文字列の3つの部分文字列 (ソフトハイフン (U + 00AD)、ソフトハイフンの後に "n"、ソフトハイフンの後に "m") を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-439">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="b2214-440">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-440">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-441">どちらの場合も、ソフトハイフンは無視できない文字なので、結果は <paramref name="value" />にソフトハイフンが含まれていなかった場合と同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-441">In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />.</span></span> <span data-ttu-id="b2214-442">ソフトハイフンのみを検索する場合、メソッドは、文字列の先頭に一致するものが見つかったことを示す 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-442">When searching for a soft hyphen only, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>

<span data-ttu-id="b2214-443">[! code-csharp.[Compareinfo IndexOf # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)][! コード-vb[システム. CompareInfo. IndexOf # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="b2214-443">[!code-csharp[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable1.cs#2)] [!code-vb[System.Globalization.CompareInfo.IndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-444">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-444">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-445"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-445">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-446">文字列の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-446">A value that defines how the strings should be compared.</span></span> <span data-ttu-id="b2214-447"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-447"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-448">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列全体内でその文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-448">Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-449">指定した比較オプションを使用して、<paramref name="value" /> 内で <paramref name="source" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-449">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-450"><paramref name="value" /> が無視できる文字の場合は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-450">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-451">ソース文字列は、文字列の先頭から順に検索され、文字列の末尾で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-451">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>

 <span data-ttu-id="b2214-452"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-452">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-453">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-453">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-454">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-454">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-455">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-455">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="b2214-456">Unicode 値が同じである場合にのみ、文字は別の文字と同じものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b2214-456">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="b2214-457">文字を検索する <xref:System.String.IndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-457">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-458">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを使用して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-458">When possible, you should use string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-459">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-459">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-460">次の例では、文字列内の文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-460">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-461"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-461"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-462"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-462"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-463">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-463">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-464">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-464">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-465">この場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> メソッドは常に 0 (ゼロ) を返して、<paramref name="source" />の先頭に一致が見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-465">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="b2214-466">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列でソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-466">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="b2214-467">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-467">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-468">どちらの場合も、ソフトハイフンは無視できる文字であるため、カルチャに依存した検索では、文字列の先頭に一致するものが見つかったことを示す 0 (ゼロ) が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-468">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span> <span data-ttu-id="b2214-469">ただし、序数検索では、1つの文字列でソフトハイフンが正常に検出され、2番目の文字列に存在しないことが報告されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-469">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="b2214-470">[! code-csharp.[Compareinfo IndexOf # 4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)][! コード-vb[システム. CompareInfo. IndexOf # 4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="b2214-470">[!code-csharp[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable3.cs#4)] [!code-vb[System.Globalization.CompareInfo.IndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable3.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int -&gt; int&#xA;override this.IndexOf : string * char * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-471">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-471">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-472"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-472">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-473">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-473">The zero-based starting index of the search.</span></span></param>
        <summary><span data-ttu-id="b2214-474">指定した文字を検索し、検索対象文字列の指定したインデックスから文字列の末尾までの範囲内で、その文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-474">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="b2214-475"><paramref name="value" /> から <paramref name="source" /> の末尾までの <paramref name="startIndex" /> のセクション内で、<paramref name="source" /> が見つかった場合は、最初に出現する位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-475">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-476"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-476">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-477">ソース文字列は `startIndex` から順に検索され、文字列の末尾で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-477">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>

 <span data-ttu-id="b2214-478">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-478">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-479">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-479">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-480">Unicode 値が同じ場合にのみ、文字が別の文字と見なされる序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードの1つを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-480">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="b2214-481">文字を検索する <xref:System.String.IndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-481">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-482">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-482">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-483">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-483">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-484">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-484">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="b2214-485"><xref:System.Globalization.CompareInfo.IndexOf%2A> と <xref:System.Globalization.CompareInfo.LastIndexOf%2A> は、同じ `startIndex` パラメーターを使用している場合でも、文字列の異なる部分を検索することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-485">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-486"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-486"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-487"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-487"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-488">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-488">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-489">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-489">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-490">この場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-490">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="b2214-491">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> メソッドを使用して、2つの文字列の "n" の後にソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-491">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="b2214-492">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-492">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-493">どちらの場合も、ソフトハイフンが無視できる文字であるため、メソッドは1を返して、"n" の位置に一致するものが見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-493">In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".</span></span>

<span data-ttu-id="b2214-494">[! code-csharp.[Compareinfo IndexOf # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)][! コード-vb[システム. CompareInfo. IndexOf # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</span><span class="sxs-lookup"><span data-stu-id="b2214-494">[!code-csharp[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable4.cs#5)] [!code-vb[System.Globalization.CompareInfo.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable4.vb#5)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-495">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-495">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-496"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-496">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-497"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-497">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-498"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-498"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-499">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列全体内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-499">Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-500">指定した比較オプションを使用して、<paramref name="value" /> 内で <paramref name="source" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-500">The zero-based index of the first occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-501"><paramref name="value" /> が無視できる文字の場合は 0 (ゼロ) を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-501">Returns 0 (zero) if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-502">ソース文字列は、文字列の先頭から順に検索され、文字列の末尾で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-502">The source string is searched forward starting at the beginning of the string and ending at the end of the string.</span></span>

 <span data-ttu-id="b2214-503"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-503">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-504">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-504">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-505">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-505">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-506">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは、Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-506">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-507">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-507">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-508">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-508">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-509">次の例では、文字列内の文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-509">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-510"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-510"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-511">または</span><span class="sxs-lookup"><span data-stu-id="b2214-511">-or-</span></span>

 <span data-ttu-id="b2214-512"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-512"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-513"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-513"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-514">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-514">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-515">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-515">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-516"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> メソッドは常に 0 (ゼロ) を返して、<paramref name="source" />の先頭に一致が見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-516">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of <paramref name="source" />.</span></span> <span data-ttu-id="b2214-517">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の3つの部分文字列 (ソフトハイフン (U + 00AD)、ソフトハイフンの後に "n"、ソフトハイフンの後に "m") を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-517">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="b2214-518">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-518">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-519">ソフトハイフンは無視できる文字であるため、カルチャに依存した検索では、検索文字列にソフトハイフンが含まれていない場合に返されるのと同じ値が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-519">Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="b2214-520">ただし、序数検索では、1つの文字列でソフトハイフンが正常に検出され、2番目の文字列に存在しないことが報告されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-520">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="b2214-521">[! code-csharp.[Compareinfo IndexOf # 6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)][! コード-vb[システム. CompareInfo. IndexOf # 6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</span><span class="sxs-lookup"><span data-stu-id="b2214-521">[!code-csharp[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable5.cs#6)] [!code-vb[System.Globalization.CompareInfo.IndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable5.vb#6)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int -&gt; int&#xA;override this.IndexOf : string * string * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-522">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-522">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-523"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-523">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-524">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-524">The zero-based starting index of the search.</span></span></param>
        <summary><span data-ttu-id="b2214-525">指定した部分文字列を検索し、検索対象文字列の指定したインデックスから文字列の末尾までの範囲内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-525">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</span></span></summary>
        <returns><span data-ttu-id="b2214-526"><paramref name="value" /> から <paramref name="source" /> の末尾までの <paramref name="startIndex" /> のセクション内で、<paramref name="source" /> が見つかった場合は、最初に出現する位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-526">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-527"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-527">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-528">ソース文字列は `startIndex` から順に検索され、文字列の末尾で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-528">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>

 <span data-ttu-id="b2214-529">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-529">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-530">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-530">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-531">Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードのいずれかを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-531">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-532">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-532">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-533">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-533">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-534">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-534">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="b2214-535"><xref:System.Globalization.CompareInfo.IndexOf%2A> と <xref:System.Globalization.CompareInfo.LastIndexOf%2A> は、同じ `startIndex` パラメーターを使用している場合でも、文字列の異なる部分を検索することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-535">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-536"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-536"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-537">または</span><span class="sxs-lookup"><span data-stu-id="b2214-537">-or-</span></span>

 <span data-ttu-id="b2214-538"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-538"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-539"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-539"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-540">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-540">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-541">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-541">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-542"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-542">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="b2214-543">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> メソッドを使用して、ソフトハイフン (U + 00AD) の後に2つの文字列の "m" が続く位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-543">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in two strings.</span></span> <span data-ttu-id="b2214-544">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-544">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="b2214-545">どちらの場合も、ソフトハイフンは無視できない文字であるため、メソッドは文字列内の "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-545">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string.</span></span> <span data-ttu-id="b2214-546">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-546">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>

<span data-ttu-id="b2214-547">[! code-csharp.[Compareinfo IndexOf # 14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)][! コード-vb[システム. CompareInfo. IndexOf # 14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</span><span class="sxs-lookup"><span data-stu-id="b2214-547">[!code-csharp[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable13.cs#14)] [!code-vb[System.Globalization.CompareInfo.IndexOf#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable13.vb#14)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-548">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-548">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-549"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-549">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-550">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-550">The zero-based starting index of the search.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-551"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-551">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-552"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-552"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-553">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列の指定したインデックスから文字列の末尾までのセクション内で、その文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-553">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-554">指定した比較オプションを使用して、<paramref name="value" /> から <paramref name="source" /> の末尾までの <paramref name="startIndex" /> のセクション内で、<paramref name="source" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-554">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-555"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-555">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-556">ソース文字列は `startIndex` から順に検索され、文字列の末尾で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-556">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>

 <span data-ttu-id="b2214-557"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-557">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-558">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-558">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-559">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-559">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-560">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-560">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="b2214-561">Unicode 値が同じである場合にのみ、文字は別の文字と同じものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b2214-561">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="b2214-562">文字を検索する <xref:System.String.IndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-562">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-563">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-563">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-564">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-564">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-565">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-565">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="b2214-566"><xref:System.Globalization.CompareInfo.IndexOf%2A> と <xref:System.Globalization.CompareInfo.LastIndexOf%2A> は、同じ `startIndex` パラメーターを使用している場合でも、文字列の異なる部分を検索することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-566">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-567"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-567"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-568"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-568"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-569"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-569"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-570">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-570">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-571">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-571">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-572">この場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を最初に開始した文字位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-572">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, the character position at which the search first began.</span></span> <span data-ttu-id="b2214-573">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の "n" の後にソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-573">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="b2214-574">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-574">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-575">どちらの場合も、ソフトハイフンは無視できる文字であるため、カルチャに依存した検索では、"n" の位置に一致するものが見つかったことを示す1が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-575">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n".</span></span> <span data-ttu-id="b2214-576">ただし、序数検索では、1つの文字列でソフトハイフンが正常に検出され、2番目の文字列に存在しないことが報告されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-576">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="b2214-577">[! code-csharp.[Compareinfo IndexOf # 8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)][! コード-vb[システム. CompareInfo. IndexOf # 8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</span><span class="sxs-lookup"><span data-stu-id="b2214-577">[!code-csharp[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable7.cs#8)] [!code-vb[System.Globalization.CompareInfo.IndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable7.vb#8)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int -&gt; int&#xA;override this.IndexOf : string * char * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-578">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-578">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-579"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-579">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-580">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-580">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="b2214-581">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-581">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="b2214-582">指定した文字を検索し、検索対象文字列の指定したインデックスから始まり、指定した数の要素を含んでいる範囲内で、その文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-582">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="b2214-583"><paramref name="value" /> から始まり、<paramref name="source" /> で指定した数の要素を含んでいる <paramref name="startIndex" /> の範囲内で、<paramref name="count" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-583">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-584"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-584">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-585">ソース文字列は `startIndex` から順に検索され、`startIndex` + `count`-1 で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-585">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>

 <span data-ttu-id="b2214-586">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-586">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-587">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-587">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-588">Unicode 値が同じ場合にのみ、文字が別の文字と見なされる序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードの1つを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-588">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="b2214-589">文字を検索する <xref:System.String.IndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-589">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-590">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-590">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-591">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-591">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-592">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-592">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-593"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-593"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-594"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-594"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="b2214-595">または</span><span class="sxs-lookup"><span data-stu-id="b2214-595">-or-</span></span>

 <span data-ttu-id="b2214-596"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-596"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="b2214-597">または</span><span class="sxs-lookup"><span data-stu-id="b2214-597">-or-</span></span>

 <span data-ttu-id="b2214-598"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="b2214-598"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-599">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-599">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-600">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-600">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-601">この場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を最初に開始した文字位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-601">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began.</span></span> <span data-ttu-id="b2214-602">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> メソッドを使用して、2つの文字列の "n" の後にソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-602">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="b2214-603">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-603">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-604">どちらの場合も、ソフトハイフンが無視できる文字であるため、メソッドは1を返して、"n" の位置に一致するものが見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-604">In both cases, because the soft hyphen is an ignorable character, the method returns 1 to indicate that it has found a match at the position of the "n".</span></span>

<span data-ttu-id="b2214-605">[! code-csharp.[Compareinfo IndexOf # 9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)][! コード-vb[システム. Compareinfo IndexOf # 9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</span><span class="sxs-lookup"><span data-stu-id="b2214-605">[!code-csharp[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable8.cs#9)] [!code-vb[System.Globalization.CompareInfo.IndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable8.vb#9)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-606">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-606">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-607"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-607">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-608">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-608">The zero-based starting index of the search.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-609"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-609">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-610"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-610"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-611">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列の指定したインデックスから文字列の末尾までの範囲内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-611">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-612">指定した比較オプションを使用して、<paramref name="value" /> から <paramref name="source" /> の末尾までの <paramref name="startIndex" /> のセクション内で、<paramref name="source" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-612">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from <paramref name="startIndex" /> to the end of <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-613"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-613">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-614">ソース文字列は `startIndex` から順に検索され、文字列の末尾で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-614">The source string is searched forward starting at `startIndex` and ending at the end of the string.</span></span>

 <span data-ttu-id="b2214-615"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-615">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-616">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-616">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-617">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-617">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-618">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは、Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-618">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-619">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-619">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-620">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-620">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-621">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-621">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="b2214-622"><xref:System.Globalization.CompareInfo.IndexOf%2A> と <xref:System.Globalization.CompareInfo.LastIndexOf%2A> は、同じ `startIndex` パラメーターを使用している場合でも、文字列の異なる部分を検索することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-622">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-623"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-623"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-624">または</span><span class="sxs-lookup"><span data-stu-id="b2214-624">-or-</span></span>

 <span data-ttu-id="b2214-625"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-625"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-626"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-626"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-627"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-627"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-628">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-628">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-629">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-629">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-630"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-630">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="b2214-631">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> メソッドを使用して、ソフトハイフン (U + 00AD) の後に2つの文字列の3番目の文字位置から始まる "m" を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-631">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting with the third character position in two strings.</span></span> <span data-ttu-id="b2214-632">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-632">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="b2214-633">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-633">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-634">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-634">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="b2214-635">このメソッドは、序数に基づく比較を実行したときのみ、最初の文字列に含まれるソフト ハイフンのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-635">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>

<span data-ttu-id="b2214-636">[! code-csharp.[Compareinfo IndexOf # 15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)][! コード-vb[システム. CompareInfo. IndexOf # 15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</span><span class="sxs-lookup"><span data-stu-id="b2214-636">[!code-csharp[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable14.cs#15)] [!code-vb[System.Globalization.CompareInfo.IndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable14.vb#15)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int -&gt; int&#xA;override this.IndexOf : string * string * int * int -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-637">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-637">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-638"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-638">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-639">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-639">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="b2214-640">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-640">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="b2214-641">指定した部分文字列を検索し、検索対象文字列の指定したインデックスから始まり、指定した数の要素を含んでいる範囲内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-641">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="b2214-642"><paramref name="value" /> から始まり、<paramref name="source" /> で指定した数の要素を含んでいる <paramref name="startIndex" /> の範囲内で、<paramref name="count" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-642">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-643"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-643">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-644">ソース文字列は `startIndex` から順に検索され、`startIndex` + `count`-1 で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-644">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>

 <span data-ttu-id="b2214-645">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-645">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-646">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-646">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-647">Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードのいずれかを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-647">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-648">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-648">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-649">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-649">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-650">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-650">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-651"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-651"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-652">または</span><span class="sxs-lookup"><span data-stu-id="b2214-652">-or-</span></span>

 <span data-ttu-id="b2214-653"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-653"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-654"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-654"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="b2214-655">または</span><span class="sxs-lookup"><span data-stu-id="b2214-655">-or-</span></span>

 <span data-ttu-id="b2214-656"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-656"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="b2214-657">または</span><span class="sxs-lookup"><span data-stu-id="b2214-657">-or-</span></span>

 <span data-ttu-id="b2214-658"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="b2214-658"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-659">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-659">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-660">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-660">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-661"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-661">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="b2214-662">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> メソッドを使用して、2つの文字列の3番目から6番目までの文字位置から、ソフトハイフン (U + 00AD) の後に "m" を続けた位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-662">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="b2214-663">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-663">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="b2214-664">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-664">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-665">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-665">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>

<span data-ttu-id="b2214-666">[! code-csharp.[Compareinfo IndexOf # 17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)][! コード-vb[システム. CompareInfo. IndexOf # 17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</span><span class="sxs-lookup"><span data-stu-id="b2214-666">[!code-csharp[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable16.cs#17)] [!code-vb[System.Globalization.CompareInfo.IndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable16.vb#17)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-667">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-667">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-668"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-668">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-669">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-669">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="b2214-670">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-670">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-671"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-671">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-672"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-672"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-673">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列の指定したインデックスから始まり、指定した数の要素を含んでいる範囲内で、その文字が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-673">Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-674">指定した比較オプションを使用して、<paramref name="value" /> から始まり、<paramref name="source" /> で指定した数の要素を含んでいる <paramref name="startIndex" /> の範囲内で、<paramref name="count" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-674">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-675"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-675">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-676">ソース文字列は `startIndex` から順に検索され、`startIndex` + `count`-1 で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-676">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>

 <span data-ttu-id="b2214-677"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-677">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-678">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-678">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-679">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-679">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-680">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-680">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="b2214-681">Unicode 値が同じである場合にのみ、文字は別の文字と同じものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b2214-681">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="b2214-682">文字を検索する <xref:System.String.IndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-682">Overloads of <xref:System.String.IndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-683">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-683">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-684">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-684">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-685">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-685">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-686"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-686"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-687"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-687"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="b2214-688">または</span><span class="sxs-lookup"><span data-stu-id="b2214-688">-or-</span></span>

 <span data-ttu-id="b2214-689"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-689"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="b2214-690">または</span><span class="sxs-lookup"><span data-stu-id="b2214-690">-or-</span></span>

 <span data-ttu-id="b2214-691"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="b2214-691"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-692"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-692"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-693">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-693">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-694">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-694">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-695">この場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を最初に開始した文字位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-695">In this case, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search first began.</span></span> <span data-ttu-id="b2214-696">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の "n" の後にソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-696">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the soft hyphen (U+00AD) after an "n" in two strings.</span></span> <span data-ttu-id="b2214-697">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-697">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-698">どちらの場合も、ソフトハイフンは無視できる文字であるため、カルチャに依存した検索では、"n" の位置に一致するものが見つかったことを示す1が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-698">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns 1 to indicate that it has found a match at the position of the "n".</span></span> <span data-ttu-id="b2214-699">ただし、序数検索では、1つの文字列でソフトハイフンが正常に検出され、2番目の文字列に存在しないことが報告されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-699">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="b2214-700">[! code-csharp.[Compareinfo IndexOf # 12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)][! コード-vb[システム. Compareinfo IndexOf # 12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</span><span class="sxs-lookup"><span data-stu-id="b2214-700">[!code-csharp[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable11.cs#12)] [!code-vb[System.Globalization.CompareInfo.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable11.vb#12)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.IndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.IndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-701">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-701">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-702"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-702">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-703">検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-703">The zero-based starting index of the search.</span></span></param>
        <param name="count"><span data-ttu-id="b2214-704">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-704">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-705"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-705">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-706"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-706"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-707">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列の指定したインデックスから始まり、指定した数の要素を含んでいる範囲内で、その部分文字列が最初に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-707">Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-708">指定した比較オプションを使用して、<paramref name="value" /> から始まり、<paramref name="source" /> で指定した数の要素を含んでいる <paramref name="startIndex" /> の範囲内で、<paramref name="count" /> が見つかった場合は、最初に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-708">The zero-based index of the first occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified by <paramref name="count" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-709"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-709">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-710">ソース文字列は `startIndex` から順に検索され、`startIndex` + `count`-1 で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-710">The source string is searched forward starting at `startIndex` and ending at `startIndex` + `count` - 1.</span></span>

 <span data-ttu-id="b2214-711"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-711">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-712">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-712">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-713">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-713">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-714">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは、Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-714">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-715">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-715">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-716">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-716">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-717">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-717">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-718"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-718"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-719">または</span><span class="sxs-lookup"><span data-stu-id="b2214-719">-or-</span></span>

 <span data-ttu-id="b2214-720"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-720"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-721"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-721"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="b2214-722">または</span><span class="sxs-lookup"><span data-stu-id="b2214-722">-or-</span></span>

 <span data-ttu-id="b2214-723"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-723"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="b2214-724">または</span><span class="sxs-lookup"><span data-stu-id="b2214-724">-or-</span></span>

 <span data-ttu-id="b2214-725"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="b2214-725"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-726"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-726"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-727">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-727">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-728">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-728">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-729"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-729">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="b2214-730">次の例では、<see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の3番目から6番目までの文字位置から、ソフトハイフン (U + 00AD) の後に "m" を続けた位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-730">In the following example, the <see cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="b2214-731">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-731">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="b2214-732">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-732">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-733">ただし、序数による比較を実行する場合は、最初の文字列でのみ部分文字列が検索されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-733">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="b2214-734">ソフトハイフンの後に "m" が続く最初の文字列の場合、メソッドはソフトハイフンのインデックスを返すのではなく、カルチャに依存した比較を実行するときに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-734">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-735">このメソッドは、序数に基づく比較を実行したときのみ、最初の文字列に含まれるソフト ハイフンのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-735">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>

<span data-ttu-id="b2214-736">[! code-csharp.[Compareinfo IndexOf # 16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)][! コード-vb[システム. Compareinfo IndexOf # 16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</span><span class="sxs-lookup"><span data-stu-id="b2214-736">[!code-csharp[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/ignorable15.cs#16)] [!code-vb[System.Globalization.CompareInfo.IndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/ignorable15.vb#16)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPrefix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-737">文字列が特定のプレフィックスで始まるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-737">Determines whether a string starts with a specific prefix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string -&gt; bool&#xA;override this.IsPrefix : string * string -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-738">検索範囲とする文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-738">The string to search in.</span></span></param>
        <param name="prefix"><span data-ttu-id="b2214-739"><paramref name="source" /> の先頭と比較する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-739">The string to compare with the beginning of <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="b2214-740">指定した検索対象文字列が指定したプリフィックスで始まるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-740">Determines whether the specified source string starts with the specified prefix.</span></span></summary>
        <returns><span data-ttu-id="b2214-741"><see langword="true" /> の長さが <paramref name="prefix" /> の長さ以下で、<paramref name="source" /> が <paramref name="source" /> で始まる場合は <paramref name="prefix" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-741"><see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-742">すべての文字列の先頭と末尾は空の部分文字列 ("") です。したがって、`prefix` が空の文字列の場合、このメソッドは `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-742">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-743">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-743">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-744">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-744">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-745">次の例では、文字列が別の文字列のプレフィックスまたはサフィックスであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-745">The following example determines whether a string is the prefix or suffix of another string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-746"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-746"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-747">または</span><span class="sxs-lookup"><span data-stu-id="b2214-747">-or-</span></span>

 <span data-ttu-id="b2214-748"><paramref name="prefix" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-748"><paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsPrefix">
      <MemberSignature Language="C#" Value="public virtual bool IsPrefix (string source, string prefix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrefix(string source, string prefix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPrefix (source As String, prefix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPrefix(System::String ^ source, System::String ^ prefix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsPrefix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsPrefix (source, prefix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-749">検索範囲とする文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-749">The string to search in.</span></span></param>
        <param name="prefix"><span data-ttu-id="b2214-750"><paramref name="source" /> の先頭と比較する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-750">The string to compare with the beginning of <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-751"><paramref name="source" /> と <paramref name="prefix" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-751">A value that defines how <paramref name="source" /> and <paramref name="prefix" /> should be compared.</span></span> <span data-ttu-id="b2214-752"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-752"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-753">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した検索対象文字列が指定したプレフィックスで始まるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-753">Determines whether the specified source string starts with the specified prefix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-754"><see langword="true" /> の長さが <paramref name="prefix" /> の長さ以下で、<paramref name="source" /> が <paramref name="source" /> で始まる場合は <paramref name="prefix" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-754"><see langword="true" /> if the length of <paramref name="prefix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> starts with <paramref name="prefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-755">すべての文字列の先頭と末尾は空の部分文字列 ("") です。したがって、`prefix` が空の文字列の場合、このメソッドは `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-755">Every string starts and ends with an empty substring (""); therefore, if `prefix` is an empty string, this method returns `true`.</span></span>

 <span data-ttu-id="b2214-756"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-756">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-757">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-757">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-758">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-758">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-759">次の例では、文字列が <xref:System.Globalization.CompareOptions>を使用して別の文字列のプレフィックスまたはサフィックスであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-759">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-760"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-760"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-761">または</span><span class="sxs-lookup"><span data-stu-id="b2214-761">-or-</span></span>

 <span data-ttu-id="b2214-762"><paramref name="prefix" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-762"><paramref name="prefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-763"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-763"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSortable">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-764">指定した Unicode 文字または文字列の並べ替えが可能かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-764">Indicates whether a specified Unicode character or string is sortable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(char ch);" />
      <MemberSignature Language="F#" Value="static member IsSortable : char -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="b2214-765">Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-765">A Unicode character.</span></span></param>
        <summary><span data-ttu-id="b2214-766">指定した Unicode 文字の並べ替えが可能かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-766">Indicates whether a specified Unicode character is sortable.</span></span></summary>
        <returns><span data-ttu-id="b2214-767"><see langword="true" /> パラメーターが並べ替え可能な場合は <paramref name="ch" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-767"><see langword="true" /> if the <paramref name="ch" /> parameter is sortable; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-768">`ch` パラメーターは、内部 <xref:System.Globalization.CompareInfo> クラスの並べ替えテーブルで定義されている Unicode 文字であり、プライベートに使用されていないか、上位または下位のサロゲート文字のペアになっていない場合に、並べ替え可能です。</span><span class="sxs-lookup"><span data-stu-id="b2214-768">The `ch` parameter is sortable if it is a Unicode character that is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSortable">
      <MemberSignature Language="C#" Value="public static bool IsSortable (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSortable(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSortable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSortable (text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSortable(System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsSortable : string -&gt; bool" Usage="System.Globalization.CompareInfo.IsSortable text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b2214-769">0 個以上の Unicode 文字から構成される文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-769">A string of zero or more Unicode characters.</span></span></param>
        <summary><span data-ttu-id="b2214-770">指定した Unicode 文字列の並べ替えが可能かどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-770">Indicates whether a specified Unicode string is sortable.</span></span></summary>
        <returns><span data-ttu-id="b2214-771"><see langword="true" /> パラメーターが空の文字列 ("") ではなく、<paramref name="str" /> 内のすべての Unicode 文字が並べ替え可能である場合は <paramref name="str" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-771"><see langword="true" /> if the <paramref name="str" /> parameter is not an empty string ("") and all the Unicode characters in <paramref name="str" /> are sortable; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-772">`str` パラメーターの各 Unicode 文字は、1つ以上の UTF-16 でエンコードされた <xref:System.Char> オブジェクトによって表されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-772">Each Unicode character in the `str` parameter is represented by one or more UTF-16 encoded <xref:System.Char> objects.</span></span> <span data-ttu-id="b2214-773">`str` パラメーターは、各 Unicode 文字が内部 <xref:System.Globalization.CompareInfo> クラスの並べ替えテーブルで定義されていて、プライベートで使用されていないか、上位または下位のサロゲート文字がペアでない場合に並べ替え可能です。</span><span class="sxs-lookup"><span data-stu-id="b2214-773">The `str` parameter is sortable if each Unicode character is defined in an internal <xref:System.Globalization.CompareInfo> class sort table, and is not a private use or unpaired high or low surrogate character.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-774"><paramref name="str" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-774"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSuffix">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-775">文字列が特定のサフィックスで終わるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-775">Determines whether a string ends with a specific suffix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string -&gt; bool&#xA;override this.IsSuffix : string * string -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-776">検索範囲とする文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-776">The string to search in.</span></span></param>
        <param name="suffix"><span data-ttu-id="b2214-777"><paramref name="source" /> の末尾と比較する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-777">The string to compare with the end of <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="b2214-778">指定した検索対象文字列が指定したサフィックスで終わるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-778">Determines whether the specified source string ends with the specified suffix.</span></span></summary>
        <returns><span data-ttu-id="b2214-779"><see langword="true" /> の長さが <paramref name="suffix" /> の長さ以下であり、<paramref name="source" /> が <paramref name="source" /> で終わる場合は <paramref name="suffix" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-779"><see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-780">すべての文字列の先頭と末尾は空の部分文字列 ("") です。したがって、`suffix` が空の文字列の場合、このメソッドは `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-780">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-781">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-781">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-782">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-782">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-783">次の例では、文字列が別の文字列のプレフィックスまたはサフィックスであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-783">The following example determines whether a string is the prefix or suffix of another string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CPP/isprefixsuffix.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/CS/isprefixsuffix.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffix/VB/isprefixsuffix.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-784"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-784"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-785">または</span><span class="sxs-lookup"><span data-stu-id="b2214-785">-or-</span></span>

 <span data-ttu-id="b2214-786"><paramref name="suffix" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-786"><paramref name="suffix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="IsSuffix">
      <MemberSignature Language="C#" Value="public virtual bool IsSuffix (string source, string suffix, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSuffix(string source, string suffix, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSuffix (source As String, suffix As String, options As CompareOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSuffix(System::String ^ source, System::String ^ suffix, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool&#xA;override this.IsSuffix : string * string * System.Globalization.CompareOptions -&gt; bool" Usage="compareInfo.IsSuffix (source, suffix, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="suffix" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-787">検索範囲とする文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-787">The string to search in.</span></span></param>
        <param name="suffix"><span data-ttu-id="b2214-788"><paramref name="source" /> の末尾と比較する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-788">The string to compare with the end of <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-789"><paramref name="source" /> と <paramref name="suffix" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-789">A value that defines how <paramref name="source" /> and <paramref name="suffix" /> should be compared.</span></span> <span data-ttu-id="b2214-790"><paramref name="options" /> は、それ自体で使用する列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-790"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" /> used by itself, or the bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-791">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した検索対象文字列が、指定したサフィックスで終わるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-791">Determines whether the specified source string ends with the specified suffix using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-792"><see langword="true" /> の長さが <paramref name="suffix" /> の長さ以下であり、<paramref name="source" /> が <paramref name="source" /> で終わる場合は <paramref name="suffix" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-792"><see langword="true" /> if the length of <paramref name="suffix" /> is less than or equal to the length of <paramref name="source" /> and <paramref name="source" /> ends with <paramref name="suffix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-793">すべての文字列の先頭と末尾は空の部分文字列 ("") です。したがって、`suffix` が空の文字列の場合、このメソッドは `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-793">Every string starts and ends with an empty substring (""); therefore, if `suffix` is an empty string, this method returns `true`.</span></span>

 <span data-ttu-id="b2214-794"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-794">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-795">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-795">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-796">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-796">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-797">次の例では、文字列が <xref:System.Globalization.CompareOptions>を使用して別の文字列のプレフィックスまたはサフィックスであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b2214-797">The following example determines whether a string is the prefix or suffix of another string using <xref:System.Globalization.CompareOptions>.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CPP/isprefixsuffixopt.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/CS/isprefixsuffixopt.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IsPrefixSuffixOpt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IsPrefixSuffixOpt/VB/isprefixsuffixopt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-798"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-798"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-799">または</span><span class="sxs-lookup"><span data-stu-id="b2214-799">-or-</span></span>

 <span data-ttu-id="b2214-800"><paramref name="suffix" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-800"><paramref name="suffix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-801"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-801"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b2214-802">文字列または部分文字列内にある値のうち、最後に出現する値の、0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-802">Returns the zero-based index of the last occurrence of a value within a string or within a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char -&gt; int&#xA;override this.LastIndexOf : string * char -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-803">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-803">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-804"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-804">The character to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="b2214-805">指定した文字を検索し、検索対象文字列全体内でその文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-805">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="b2214-806"><paramref name="value" /> 内で <paramref name="source" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-806">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-807">ソース文字列は、文字列の末尾から後方に検索され、文字列の先頭で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-807">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>

 <span data-ttu-id="b2214-808">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-808">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-809">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-809">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-810">Unicode 値が同じ場合にのみ、文字が別の文字と見なされる序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードの1つを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-810">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="b2214-811">文字を検索する <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-811">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-812">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-812">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-813">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-813">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-814">次の例では、文字列内の文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-814">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-815"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-815"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-816">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-816">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-817">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-817">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-818">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> メソッドは常に <paramref name="source" /> の最後のインデックス位置を返して、<paramref name="source" />の最後に一致が見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-818">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method always returns the last index position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />.</span></span> <span data-ttu-id="b2214-819">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> メソッドを使用して、2つの文字列でソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-819">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)" /> method is used to find the soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="b2214-820">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-820">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-821">どちらの場合も、ソフトハイフンは無視できる文字であるため、メソッドは文字列の最後のインデックス位置を返して、文字列の末尾に一致が見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-821">In both cases, because the soft hyphen is an ignorable character, the method returns the last index position in the string to indicate that it has found a match at the end of the string.</span></span>

<span data-ttu-id="b2214-822">[! code-csharp[LastIndexOf # 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] を入力します。[! code-vb[LastIndexOf # 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-822">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable2.cs#3)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable2.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string -&gt; int&#xA;override this.LastIndexOf : string * string -&gt; int" Usage="compareInfo.LastIndexOf (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-823">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-823">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-824"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-824">The string to locate within <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="b2214-825">指定した部分文字列を検索し、検索対象文字列全体内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-825">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.</span></span></summary>
        <returns><span data-ttu-id="b2214-826"><paramref name="value" /> 内で <paramref name="source" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-826">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-827">ソース文字列は、文字列の末尾から後方に検索され、文字列の先頭で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-827">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>

 <span data-ttu-id="b2214-828">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-828">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-829">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-829">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-830">Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードのいずれかを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-830">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-831">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-831">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-832">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-832">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-833">次の例では、文字列内の文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-833">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-834"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-834"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-835">または</span><span class="sxs-lookup"><span data-stu-id="b2214-835">-or-</span></span>

 <span data-ttu-id="b2214-836"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-836"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-837">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-837">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-838">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-838">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-839"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> メソッドは常に <paramref name="source" />を返します。<see cref="P:System.String.Length" /></span><span class="sxs-lookup"><span data-stu-id="b2214-839">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /></span></span> <span data-ttu-id="b2214-840"><paramref name="source" />の最後のインデックス位置を表す-1。</span><span class="sxs-lookup"><span data-stu-id="b2214-840">- 1, which represents the last index position in <paramref name="source" />.</span></span> <span data-ttu-id="b2214-841">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> メソッドを使用して、2つの文字列の3つの部分文字列 (ソフトハイフン (U + 00AD)、ソフトハイフンの後に "n"、ソフトハイフンの後に "m") を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-841">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="b2214-842">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-842">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-843">どちらの場合も、ソフトハイフンは無視できない文字なので、結果は <paramref name="value" />にソフトハイフンが含まれていなかった場合と同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-843">In each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in <paramref name="value" />.</span></span> <span data-ttu-id="b2214-844">ソフトハイフンのみを検索する場合、メソッドは6と5を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-844">When searching for a soft hyphen only, the method returns 6 and 5.</span></span> <span data-ttu-id="b2214-845">これらの値は、2つの文字列の最後の文字のインデックスに対応します。</span><span class="sxs-lookup"><span data-stu-id="b2214-845">These values correspond to the index of the last character in the two strings.</span></span>

<span data-ttu-id="b2214-846">[![LastIndexOf # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] を入力します。[! コード-vb[LastIndexOf # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-846">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable1.cs#2)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-847">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-847">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-848"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-848">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-849"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-849">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-850"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-850"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-851">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列全体内でその文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-851">Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-852">指定した比較オプションを使用して、<paramref name="value" /> 内で <paramref name="source" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-852">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-853">ソース文字列は、文字列の末尾から後方に検索され、文字列の先頭で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-853">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>

 <span data-ttu-id="b2214-854"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-854">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-855">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-855">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-856">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-856">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-857">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-857">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="b2214-858">Unicode 値が同じである場合にのみ、文字は別の文字と同じものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b2214-858">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="b2214-859">文字を検索する <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-859">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-860">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-860">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-861">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-861">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-862">次の例では、文字列内の文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-862">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-863"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-863"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-864"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-864"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-865">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-865">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-866">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-866">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-867">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="source" /> の最後の文字位置を返し、<paramref name="source" />の最後に一致が見つかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-867">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method always returns the last character position in <paramref name="source" /> to indicate that the match is found at the end of <paramref name="source" />.</span></span> <span data-ttu-id="b2214-868">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列でソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-868">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)" /> method is used to search for a soft hyphen (U+00AD) in two strings.</span></span> <span data-ttu-id="b2214-869">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-869">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-870">どちらの場合も、ソフトハイフンは無視できない文字であるため、カルチャに依存した検索では、ソース文字列内の最後のインデックス位置が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-870">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the last index position in the source string.</span></span> <span data-ttu-id="b2214-871">これに対して、序数検索では、1つの文字列でソフトハイフンが正常に検出され、2番目の文字列に存在しないことが報告されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-871">In contrast, an ordinal search successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="b2214-872">[! code-csharp[LastIndexOf # 4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] を入力します。[! コード-vb[LastIndexOf # 4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-872">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable3.cs#4)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable3.vb#4)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int -&gt; int&#xA;override this.LastIndexOf : string * char * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.Char" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-873">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-873">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-874"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-874">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-875">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-875">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="b2214-876">指定した文字を検索し、検索対象文字列の先頭から指定したインデックスまでの範囲内で、その文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-876">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span></span></summary>
        <returns><span data-ttu-id="b2214-877"><paramref name="value" /> の先頭から <paramref name="source" /> までの <paramref name="source" /> の範囲内で、<paramref name="startIndex" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-877">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-878"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-878">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-879">ソース文字列は `startIndex` から後方に検索され、文字列の先頭で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-879">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>

 <span data-ttu-id="b2214-880">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-880">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-881">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-881">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-882">Unicode 値が同じ場合にのみ、文字が別の文字と見なされる序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードの1つを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-882">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="b2214-883">文字を検索する <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-883">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-884">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-884">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-885">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-885">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-886">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-886">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="b2214-887"><xref:System.Globalization.CompareInfo.IndexOf%2A> と <xref:System.Globalization.CompareInfo.LastIndexOf%2A> は、同じ `startIndex` パラメーターを使用している場合でも、文字列の異なる部分を検索することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-887">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-888"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-888"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-889"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-889"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-890">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-890">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-891">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-891">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-892">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-892">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="b2214-893">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> メソッドを使用して、2つの文字列の最後の "m" の前にあるソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-893">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="b2214-894">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-894">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-895">どちらの場合も、ソフトハイフンは無視できる文字であるため、メソッドは、"m" のインデックス位置を返します。これは <paramref name="startIndex" />の値です。</span><span class="sxs-lookup"><span data-stu-id="b2214-895">In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span>

<span data-ttu-id="b2214-896">[! code-csharp[LastIndexOf # 5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] を入力します。[! コード-vb[LastIndexOf # 5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-896">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable4.cs#5)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable4.vb#5)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-897">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-897">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-898"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-898">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-899"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-899">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-900"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-900"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-901">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列全体内でその部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-901">Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-902">指定した比較オプションを使用して、<paramref name="value" /> 内で <paramref name="source" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-902">The zero-based index of the last occurrence of <paramref name="value" />, if found, within <paramref name="source" />, using the specified comparison options; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-903">ソース文字列は、文字列の末尾から後方に検索され、文字列の先頭で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-903">The source string is searched backward starting at the end of the string and ending at the beginning of the string.</span></span>

 <span data-ttu-id="b2214-904"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-904">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-905">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-905">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-906">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-906">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-907">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは、Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-907">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-908">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-908">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-909">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-909">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-910">次の例では、文字列内の文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-910">The following example determines the indexes of the first and last occurrences of a character or a substring within a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/CS/indexof.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOf/VB/indexof.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-911"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-911"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-912">または</span><span class="sxs-lookup"><span data-stu-id="b2214-912">-or-</span></span>

 <span data-ttu-id="b2214-913"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-913"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-914"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-914"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-915">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-915">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-916">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-916">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-917"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="source" />を返します。<see cref="P:System.String.Length" /></span><span class="sxs-lookup"><span data-stu-id="b2214-917">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method always returns <paramref name="source" />.<see cref="P:System.String.Length" /></span></span> <span data-ttu-id="b2214-918"><paramref name="source" />の最後のインデックス位置を表す-1。</span><span class="sxs-lookup"><span data-stu-id="b2214-918">- 1, which represents the last index position in <paramref name="source" />.</span></span> <span data-ttu-id="b2214-919">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の3つの部分文字列 (ソフトハイフン (U + 00AD)、ソフトハイフンの後に "n"、ソフトハイフンの後に "m") を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-919">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="b2214-920">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-920">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-921">ソフトハイフンは無視できる文字であるため、カルチャに依存した検索では、検索文字列にソフトハイフンが含まれていない場合に返されるのと同じ値が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-921">Because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string.</span></span> <span data-ttu-id="b2214-922">ただし、序数検索では、1つの文字列でソフトハイフンが正常に検出され、2番目の文字列に存在しないことが報告されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-922">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="b2214-923">[![LastIndexOf # 6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] を入力します。[! コード-vb[LastIndexOf # 6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-923">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable5.cs#6)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable5.vb#6)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int -&gt; int&#xA;override this.LastIndexOf : string * string * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-924">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-924">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-925"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-925">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-926">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-926">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="b2214-927">指定した部分文字列を検索し、検索対象文字列の先頭から指定したインデックスまでの範囲内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-927">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</span></span></summary>
        <returns><span data-ttu-id="b2214-928"><paramref name="value" /> の先頭から <paramref name="source" /> までの <paramref name="source" /> の範囲内で、<paramref name="startIndex" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-928">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-929"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-929">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-930">ソース文字列は `startIndex` から後方に検索され、文字列の先頭で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-930">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>

 <span data-ttu-id="b2214-931">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-931">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-932">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-932">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-933">Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードのいずれかを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-933">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-934">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-934">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-935">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-935">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-936">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-936">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="b2214-937"><xref:System.Globalization.CompareInfo.IndexOf%2A> と <xref:System.Globalization.CompareInfo.LastIndexOf%2A> は、同じ `startIndex` パラメーターを使用している場合でも、文字列の異なる部分を検索することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-937">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-938"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-938"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-939">または</span><span class="sxs-lookup"><span data-stu-id="b2214-939">-or-</span></span>

 <span data-ttu-id="b2214-940"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-940"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-941"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-941"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-942">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-942">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-943">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-943">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-944"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-944">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="b2214-945">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> メソッドを使用して、ソフトハイフン (U + 00AD) を含む部分文字列を検索し、最後の "m" を文字列の前または末尾に含めます。</span><span class="sxs-lookup"><span data-stu-id="b2214-945">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)" /> method is used to find a substring that includes a soft hyphen (U+00AD) and that precedes or includes the final "m" in a string.</span></span> <span data-ttu-id="b2214-946">検索文字列のソフトハイフンは無視されるため、ソフトハイフンと "m" で構成される部分文字列を検索するためにメソッドを呼び出すと、文字列内の "m" の位置が返されます。それを呼び出して、ソフトハイフンと "n" で構成される部分文字列を検索すると、 "n" の位置。</span><span class="sxs-lookup"><span data-stu-id="b2214-946">Because the soft hyphen in the search string is ignored, calling the method to find a substring that consists of the soft hyphen and "m" returns the position of the "m" in the string, whereas calling it to find a substring that consists of the soft hyphen and "n" returns the position of the "n".</span></span> <span data-ttu-id="b2214-947">検索文字列にソフトハイフンのみが含まれている場合、メソッドは、<paramref name="startIndex" />の値を表す "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-947">When the search string contains only the soft hyphen, the method returns the index of the "m", which represents the value of <paramref name="startIndex" />.</span></span>

<span data-ttu-id="b2214-948">[![LastIndexOf # 7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] を入力します。[! コード-vb[LastIndexOf # 7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-948">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable6.cs#7)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable6.vb#7)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-949">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-949">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-950"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-950">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-951">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-951">The zero-based starting index of the backward search.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-952"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-952">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-953"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-953"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-954">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象の文字列の先頭から指定したインデックスまでの範囲内で、その文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-954">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-955">指定した比較オプションを使用して、<paramref name="value" /> の先頭から <paramref name="source" /> までの <paramref name="source" /> の範囲内で <paramref name="startIndex" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-955">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-956"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-956">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-957">ソース文字列は `startIndex` から後方に検索され、文字列の先頭で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-957">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>

 <span data-ttu-id="b2214-958"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-958">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-959">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-959">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-960">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-960">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-961">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-961">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="b2214-962">Unicode 値が同じである場合にのみ、文字は別の文字と同じものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b2214-962">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="b2214-963">文字を検索する <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-963">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-964">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-964">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-965">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-965">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-966">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-966">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="b2214-967"><xref:System.Globalization.CompareInfo.IndexOf%2A> と <xref:System.Globalization.CompareInfo.LastIndexOf%2A> は、同じ `startIndex` パラメーターを使用している場合でも、文字列の異なる部分を検索することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-967">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-968"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-968"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-969"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-969"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-970"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-970"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-971">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-971">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-972">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-972">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-973">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-973">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="b2214-974">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の最後の "m" の前にあるソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-974">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="b2214-975">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-975">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-976">どちらの場合も、ソフトハイフンは無視できない文字であるため、カルチャに依存した検索では、"m" のインデックス位置が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-976">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m".</span></span> <span data-ttu-id="b2214-977">ただし、序数検索では、1つの文字列でソフトハイフンが正常に検出され、2番目の文字列に存在しないことが報告されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-977">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="b2214-978">[![LastIndexOf # 8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] を入力します。[! コード-vb[LastIndexOf # 8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-978">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable7.cs#8)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable7.vb#8)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int -&gt; int&#xA;override this.LastIndexOf : string * char * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-979">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-979">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-980"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-980">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-981">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-981">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="b2214-982">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-982">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="b2214-983">指定した文字を検索し、検索対象文字列の指定したインデックスで終了し、指定した数の要素を含んでいる範囲内で、その文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-983">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="b2214-984"><paramref name="value" /> で終わり、<paramref name="source" /> で指定した数の要素を含んでいる <paramref name="count" /> の範囲内で <paramref name="startIndex" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-984">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-985"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-985">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-986">ソース文字列は `startIndex` から後方に検索され、`startIndex` - `count` 1 で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-986">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>

 <span data-ttu-id="b2214-987">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-987">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-988">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-988">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-989">Unicode 値が同じ場合にのみ、文字が別の文字と見なされる序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードの1つを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-989">To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span> <span data-ttu-id="b2214-990">文字を検索する <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-990">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-991">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-991">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-992">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-992">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-993">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-993">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-994"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-994"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-995"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-995"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="b2214-996">または</span><span class="sxs-lookup"><span data-stu-id="b2214-996">-or-</span></span>

 <span data-ttu-id="b2214-997"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-997"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="b2214-998">または</span><span class="sxs-lookup"><span data-stu-id="b2214-998">-or-</span></span>

 <span data-ttu-id="b2214-999"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="b2214-999"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-1000">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1000">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-1001">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1001">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-1002">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1002">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="b2214-1003">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> メソッドを使用して、2つの文字列の最後の "m" の前にあるソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1003">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="b2214-1004">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1004">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-1005">どちらの場合も、ソフトハイフンは無視できる文字であるため、メソッドは、"m" のインデックス位置を返します。これは <paramref name="startIndex" />の値です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1005">In both cases, because the soft hyphen is an ignorable character, the method returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span>

<span data-ttu-id="b2214-1006">[![LastIndexOf # 9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] を入力します。[! コード-vb[LastIndexOf # 9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1006">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable8.cs#9)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable8.vb#9)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-1007">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-1007">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-1008"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-1008">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-1009">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-1009">The zero-based starting index of the backward search.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-1010"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-1010">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-1011"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-1011"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-1012">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象の文字列の先頭から指定したインデックスまでの範囲内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1012">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-1013">指定した比較オプションを使用して、<paramref name="value" /> の先頭から <paramref name="source" /> までの <paramref name="source" /> の範囲内で <paramref name="startIndex" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1013">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that extends from the beginning of <paramref name="source" /> to <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-1014"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1014">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-1015">ソース文字列は `startIndex` から後方に検索され、文字列の先頭で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1015">The source string is searched backward starting at `startIndex` and ending at the beginning of the string.</span></span>

 <span data-ttu-id="b2214-1016"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-1016">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-1017">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1017">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-1018">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-1018">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-1019">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは、Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1019">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-1020">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1020">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-1021">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1021">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-1022">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1022">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span> <span data-ttu-id="b2214-1023"><xref:System.Globalization.CompareInfo.IndexOf%2A> と <xref:System.Globalization.CompareInfo.LastIndexOf%2A> は、同じ `startIndex` パラメーターを使用している場合でも、文字列の異なる部分を検索することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-1023">Note that <xref:System.Globalization.CompareInfo.IndexOf%2A> and <xref:System.Globalization.CompareInfo.LastIndexOf%2A> are searching in different portions of the string, even with the same `startIndex` parameter.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CPP/indexofint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/CS/indexofint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfInt/VB/indexofint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-1024"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1024"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-1025">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1025">-or-</span></span>

 <span data-ttu-id="b2214-1026"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1026"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-1027"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1027"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-1028"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-1028"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-1029">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1029">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-1030">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1030">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-1031"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1031">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="b2214-1032">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の最後の "m" から始まる "m" の後に、ソフトハイフン (U + 00AD) の位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1032">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m", starting with the final "m" in two strings.</span></span> <span data-ttu-id="b2214-1033">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1033">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="b2214-1034">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1034">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-1035">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-1035">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span> <span data-ttu-id="b2214-1036">このメソッドは、序数に基づく比較を実行したときのみ、最初の文字列に含まれるソフト ハイフンのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1036">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>

<span data-ttu-id="b2214-1037">[![LastIndexOf # 15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] を入力します。[! コード-vb[LastIndexOf # 15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1037">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable14.cs#15)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable14.vb#15)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int -&gt; int&#xA;override this.LastIndexOf : string * string * int * int -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-1038">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-1038">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-1039"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-1039">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-1040">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-1040">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="b2214-1041">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-1041">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="b2214-1042">指定した部分文字列を検索し、検索対象文字列の指定したインデックスで終了し、指定した数の要素を含んでいる範囲内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1042">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="b2214-1043"><paramref name="value" /> で終わり、<paramref name="source" /> で指定した数の要素を含んでいる <paramref name="count" /> の範囲内で <paramref name="startIndex" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1043">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />; otherwise, -1.</span></span> <span data-ttu-id="b2214-1044"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1044">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-1045">ソース文字列は `startIndex` から後方に検索され、`startIndex` - `count` 1 で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1045">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>

 <span data-ttu-id="b2214-1046">このオーバーロードは、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1046">This overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-1047">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-1047">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-1048">Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行するには、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つオーバーロードのいずれかを呼び出し、<xref:System.Globalization.CompareOptions.Ordinal> 値を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1048">To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <xref:System.Globalization.CompareOptions> and use the <xref:System.Globalization.CompareOptions.Ordinal> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-1049">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1049">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-1050">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1050">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons .</span></span>



## Examples
 <span data-ttu-id="b2214-1051">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1051">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-1052"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1052"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-1053">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1053">-or-</span></span>

 <span data-ttu-id="b2214-1054"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1054"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-1055"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1055"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="b2214-1056">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1056">-or-</span></span>

 <span data-ttu-id="b2214-1057"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1057"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="b2214-1058">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1058">-or-</span></span>

 <span data-ttu-id="b2214-1059"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="b2214-1059"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-1060">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1060">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-1061">カルチャに依存した検索では、<paramref name="value" /> に無視できる文字が含まれている場合、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1061">In a culture-sensitive search, if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-1062"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1062">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="b2214-1063">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> メソッドを使用して、2つの文字列の最後の "m" の前にある3つの文字の中に、ソフトハイフン (U + 00AD) の後に "m" が続く位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1063">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in the three characters that precede the final "m" of two strings.</span></span> <span data-ttu-id="b2214-1064">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1064">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="b2214-1065">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1065">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-1066">"m" の後にソフト ハイフンが含まれる最初の文字列の場合、メソッドはソフト ハイフンのインデックスを返すことができず、代わりに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-1066">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>

<span data-ttu-id="b2214-1067">[! code-csharp[LastIndexOf # 17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] を入力します。[! コード-vb[LastIndexOf # 17] を入力し](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)ます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1067">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable16.cs#17)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable16.vb#17)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, char value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, char value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As Char, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, char value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * char * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-1068">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-1068">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-1069"><paramref name="source" /> 内で検索する文字。</span><span class="sxs-lookup"><span data-stu-id="b2214-1069">The character to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-1070">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-1070">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="b2214-1071">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-1071">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-1072"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-1072">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-1073"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-1073"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-1074">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した文字を検索し、検索対象文字列の指定したインデックスで終了し、指定した数の要素を含んでいる範囲内で、その文字が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1074">Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-1075">指定した比較オプションを使用して、<paramref name="value" /> で終わり、<paramref name="source" /> で指定した数の要素を含んでいる <paramref name="count" /> の範囲内で <paramref name="startIndex" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1075">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-1076"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1076">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-1077">ソース文字列は `startIndex` から後方に検索され、`startIndex` - `count` 1 で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1077">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>

 <span data-ttu-id="b2214-1078"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-1078">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-1079">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1079">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-1080">文字が "Æ" (U + 00C6) などの構成されていない文字を表す Unicode 値である場合、カルチャに応じて、"AE" (U + 0041 という, U + 0045) など、正しいシーケンスでのコンポーネントの出現と同等と見なされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1080">If the character is a Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-1081">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1081">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search.</span></span> <span data-ttu-id="b2214-1082">Unicode 値が同じである場合にのみ、文字は別の文字と同じものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1082">A character is considered equivalent to another character only if the Unicode values are the same.</span></span> <span data-ttu-id="b2214-1083">文字を検索する <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> のオーバーロードは、序数検索を実行します。一方、文字列を検索する場合は、カルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1083">Overloads of <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-1084">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1084">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-1085">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1085">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-1086">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1086">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-1087"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1087"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-1088"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1088"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="b2214-1089">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1089">-or-</span></span>

 <span data-ttu-id="b2214-1090"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1090"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="b2214-1091">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1091">-or-</span></span>

 <span data-ttu-id="b2214-1092"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="b2214-1092"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-1093"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-1093"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-1094">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1094">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-1095">カルチャに依存した検索では、<paramref name="value" /> が無視できる文字の場合、結果はその文字を削除して検索することと同じになります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1095">In a culture-sensitive search, if <paramref name="value" /> is an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-1096">この場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1096">In this case, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span> <span data-ttu-id="b2214-1097">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の最後の "m" の前にあるソフトハイフン (U + 00AD) を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1097">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find a soft hyphen (U+00AD) that precedes the final "m" in two strings.</span></span> <span data-ttu-id="b2214-1098">文字列の 1 つのみにソフト ハイフンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1098">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="b2214-1099">どちらの場合も、ソフトハイフンは無視できる文字であるため、カルチャに依存した検索では、"m" のインデックス位置 (<paramref name="startIndex" />の値) が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1099">In both cases, because the soft hyphen is an ignorable character, a culture-sensitive search returns the index position of the "m", which is the value of <paramref name="startIndex" />.</span></span> <span data-ttu-id="b2214-1100">ただし、序数検索では、1つの文字列でソフトハイフンが正常に検出され、2番目の文字列に存在しないことが報告されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1100">An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.</span></span>

<span data-ttu-id="b2214-1101">[! code-csharp[LastIndexOf # 12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] を入力します。[! コード-vb[LastIndexOf # 12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1101">[!code-csharp[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/cs/lastignorable11.cs#12)] [!code-vb[System.Globalization.CompareInfo.LastIndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable11.vb#12)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (string source, string value, int startIndex, int count, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(string source, string value, int32 startIndex, int32 count, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (source As String, value As String, startIndex As Integer, count As Integer, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::String ^ source, System::String ^ value, int startIndex, int count, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="abstract member LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int&#xA;override this.LastIndexOf : string * string * int * int * System.Globalization.CompareOptions -&gt; int" Usage="compareInfo.LastIndexOf (source, value, startIndex, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b2214-1102">検索対象の文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-1102">The string to search.</span></span></param>
        <param name="value"><span data-ttu-id="b2214-1103"><paramref name="source" /> 内で検索する文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-1103">The string to locate within <paramref name="source" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="b2214-1104">後方検索の開始位置を示す 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b2214-1104">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="b2214-1105">検索対象の範囲内にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="b2214-1105">The number of elements in the section to search.</span></span></param>
        <param name="options"><span data-ttu-id="b2214-1106"><paramref name="source" /> と <paramref name="value" /> の比較方法を定義する値。</span><span class="sxs-lookup"><span data-stu-id="b2214-1106">A value that defines how <paramref name="source" /> and <paramref name="value" /> should be compared.</span></span> <span data-ttu-id="b2214-1107"><paramref name="options" /> は、列挙値 <see cref="F:System.Globalization.CompareOptions.Ordinal" /> であるか、または <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />、<see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />、<see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />、<see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />、<see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" /> の 1 つ以上の値のビットごとの組み合わせです。</span><span class="sxs-lookup"><span data-stu-id="b2214-1107"><paramref name="options" /> is either the enumeration value <see cref="F:System.Globalization.CompareOptions.Ordinal" />, or a bitwise combination of one or more of the following values: <see cref="F:System.Globalization.CompareOptions.IgnoreCase" />, <see cref="F:System.Globalization.CompareOptions.IgnoreSymbols" />, <see cref="F:System.Globalization.CompareOptions.IgnoreNonSpace" />, <see cref="F:System.Globalization.CompareOptions.IgnoreWidth" />, and <see cref="F:System.Globalization.CompareOptions.IgnoreKanaType" />.</span></span></param>
        <summary><span data-ttu-id="b2214-1108">指定した <see cref="T:System.Globalization.CompareOptions" /> 値を使用して、指定した部分文字列を検索し、検索対象文字列の指定したインデックスで終了し、指定した数の要素を含んでいる範囲内で、その部分文字列が最後に出現する位置の 0 から始まるインデックス番号を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1108">Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></summary>
        <returns><span data-ttu-id="b2214-1109">指定した比較オプションを使用して、<paramref name="value" /> で終わり、<paramref name="source" /> で指定した数の要素を含んでいる <paramref name="count" /> の範囲内で <paramref name="startIndex" /> が見つかった場合は、最後に見つかった位置の 0 から始まるインデックス番号、それ以外の場合は -1 です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1109">The zero-based index of the last occurrence of <paramref name="value" />, if found, within the section of <paramref name="source" /> that contains the number of elements specified by <paramref name="count" /> and that ends at <paramref name="startIndex" />, using the specified comparison options; otherwise, -1.</span></span> <span data-ttu-id="b2214-1110"><paramref name="startIndex" /> が無視できる文字の場合は <paramref name="value" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1110">Returns <paramref name="startIndex" /> if <paramref name="value" /> is an ignorable character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-1111">ソース文字列は `startIndex` から後方に検索され、`startIndex` - `count` 1 で終わります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1111">The source string is searched backward starting at `startIndex` and ending at `startIndex` - `count` + 1.</span></span>

 <span data-ttu-id="b2214-1112"><xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> 値は、このメソッドでは有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b2214-1112">The <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType> value is not valid for this method.</span></span>

 <span data-ttu-id="b2214-1113">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれていない場合、このオーバーロードはカルチャに依存した検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1113">If `options` does not include the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs a culture-sensitive search.</span></span> <span data-ttu-id="b2214-1114">カルチャに応じて、"AE" (u + 0041 という, U + 0045) など、構成されていない文字を表す Unicode 値は、正しい順序で文字のコンポーネントが出現する場合と同等に見なされる場合があります (u + 00C6)。</span><span class="sxs-lookup"><span data-stu-id="b2214-1114">A Unicode value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span> <span data-ttu-id="b2214-1115">`options` に <xref:System.Globalization.CompareOptions.Ordinal> の値が含まれている場合、このオーバーロードは、Unicode 値が比較される序数 (カルチャに依存しない) 検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1115">If `options` includes the <xref:System.Globalization.CompareOptions.Ordinal> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</span></span>

> [!NOTE]
>  <span data-ttu-id="b2214-1116">可能であれば、<xref:System.Globalization.CompareOptions> 型のパラメーターを持つ文字列比較メソッドを呼び出して、予想される比較の種類を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1116">When possible, you should call string comparison methods that have a parameter of type <xref:System.Globalization.CompareOptions> to specify the kind of comparison expected.</span></span> <span data-ttu-id="b2214-1117">一般的な規則として、ユーザーインターフェイスに表示される文字列を比較するには (現在のカルチャを使用して) 言語オプションを使用し、セキュリティ比較には <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> または <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1117">As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> for security comparisons.</span></span>



## Examples
 <span data-ttu-id="b2214-1118">次の例では、文字列の一部に含まれる文字または部分文字列の最初と最後の出現箇所のインデックスを決定します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1118">The following example determines the indexes of the first and last occurrences of a character or a substring within a portion of a string.</span></span>

 [!code-cpp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CPP/indexofintint.cpp#1)]
 [!code-csharp[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/CS/indexofintint.cs#1)]
 [!code-vb[System.Globalization.CompareInfo.IndexOfIntInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CompareInfo.IndexOfIntInt/VB/indexofintint.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b2214-1119"><paramref name="source" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1119"><paramref name="source" /> is <see langword="null" />.</span></span>

<span data-ttu-id="b2214-1120">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1120">-or-</span></span>

 <span data-ttu-id="b2214-1121"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1121"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b2214-1122"><paramref name="startIndex" /> は <paramref name="source" /> の有効なインデックスの範囲外です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1122"><paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="source" />.</span></span>

<span data-ttu-id="b2214-1123">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1123">-or-</span></span>

 <span data-ttu-id="b2214-1124"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1124"><paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="b2214-1125">または</span><span class="sxs-lookup"><span data-stu-id="b2214-1125">-or-</span></span>

 <span data-ttu-id="b2214-1126"><paramref name="startIndex" /> および <paramref name="count" /> は <paramref name="source" /> 内の有効なセクションを指定していません。</span><span class="sxs-lookup"><span data-stu-id="b2214-1126"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="source" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b2214-1127"><paramref name="options" /> に無効な <see cref="T:System.Globalization.CompareOptions" /> 値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b2214-1127"><paramref name="options" /> contains an invalid <see cref="T:System.Globalization.CompareOptions" /> value.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-1128">文字セットには無視できる文字が含まれます。これは、言語またはカルチャに依存した並べ替えを実行するときには考慮されない文字です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1128">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive sort.</span></span> <span data-ttu-id="b2214-1129">カルチャに依存する検索の場合 (つまり、<paramref name="options" /> が <see cref="F:System.Globalization.CompareOptions.Ordinal" /> または <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> でない場合)、<paramref name="value" /> に無視できる文字が含まれていると、その文字を削除して検索した場合と同じ結果になります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1129">In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="b2214-1130"><paramref name="value" /> が1つ以上の無視できる文字で構成されている場合、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドは常に <paramref name="startIndex" />を返します。これは、検索を開始する文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1130">If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.</span></span>

<span data-ttu-id="b2214-1131">次の例では、<see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> メソッドを使用して、2つの文字列の最後の "m" の前にある最初の文字位置を除いて、ソフトハイフン (U + 00AD) の位置を検索します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1131">In the following example, the <see cref="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in all but the first character position before the final "m" in two strings.</span></span> <span data-ttu-id="b2214-1132">文字列の 1 つのみに必要な部分文字列が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1132">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="b2214-1133">どちらの場合も、ソフト ハイフンは無視可能な文字であるため、メソッドは、カルチャに依存した比較を実行すると、文字列に含まれる "m" のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1133">In both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-1134">ただし、序数による比較を実行する場合は、最初の文字列でのみ部分文字列が検索されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1134">When it performs an ordinal comparison, however, it finds the substring only in the first string.</span></span> <span data-ttu-id="b2214-1135">ソフトハイフンの後に "m" が続く最初の文字列の場合、メソッドはソフトハイフンのインデックスを返すのではなく、カルチャに依存した比較を実行するときに "m" のインデックスを返すことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-1135">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="b2214-1136">このメソッドは、序数に基づく比較を実行したときのみ、最初の文字列に含まれるソフト ハイフンのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1136">The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.</span></span>

<span data-ttu-id="b2214-1137">[! コード-vb[LastIndexOf # 16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)] を入力します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1137">[!code-vb[System.Globalization.CompareInfo.LastIndexOf#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.compareinfo.lastindexof/vb/lastignorable15.vb#16)]</span></span></para></block>
        <altmember cref="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)" />
        <altmember cref="T:System.Globalization.CompareOptions" />
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.LCID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Globalization.CompareInfo.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2214-1138">現在の <see cref="T:System.Globalization.CompareInfo" /> に対して適切な形式のカルチャ識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1138">Gets the properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></summary>
        <value><span data-ttu-id="b2214-1139">現在の <see cref="T:System.Globalization.CompareInfo" /> に対して適切に書式指定されたカルチャ識別子。</span><span class="sxs-lookup"><span data-stu-id="b2214-1139">The properly formed culture identifier for the current <see cref="T:System.Globalization.CompareInfo" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="b2214-1140"><xref:System.Globalization.CompareInfo.LCID%2A>プロパティの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1140">The following example demonstrates the <xref:System.Globalization.CompareInfo.LCID%2A> property.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Globalization.CompareInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2214-1141">この <see cref="T:System.Globalization.CompareInfo" /> による並べ替え操作に使用されるカルチャの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1141">Gets the name of the culture used for sorting operations by this <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <value><span data-ttu-id="b2214-1142">カルチャの名前。</span><span class="sxs-lookup"><span data-stu-id="b2214-1142">The name of a culture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-1143"><xref:System.Globalization.CompareInfo.Name%2A> プロパティと <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> プロパティの値は異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1143">The <xref:System.Globalization.CompareInfo.Name%2A> and <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> properties can have different values.</span></span> <span data-ttu-id="b2214-1144">たとえば、16進0x10407 の <xref:System.Globalization.CompareInfo.LCID%2A> プロパティ値は、ドイツの電話帳に表示される名前を並べ替える代替の並べ替えカルチャを識別します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1144">For example, an <xref:System.Globalization.CompareInfo.LCID%2A> property value of hexadecimal 0x10407 identifies an alternate sort culture that sorts names as they might appear in a German telephone book.</span></span> <span data-ttu-id="b2214-1145"><xref:System.Globalization.CompareInfo.Name%2A> プロパティの値は "de de_phoneb" ですが、関連付けられているドイツ語 (ドイツ) カルチャの <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> プロパティの値は "de DE" です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1145">The <xref:System.Globalization.CompareInfo.Name%2A> property has a value of "de-de_phoneb", whereas the <xref:System.Globalization.CultureInfo.Name?displayProperty=nameWithType> property of the associated German (Germany) culture has a value of "de-DE".</span></span>



## Examples
 <span data-ttu-id="b2214-1146">次の例では、fr-fr カルチャと ja-jp カルチャを使用して、3つの文字列を比較します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1146">The following example compares three strings using the fr-FR and ja-JP cultures.</span></span> <span data-ttu-id="b2214-1147"><xref:System.Globalization.CultureInfo.Name%2A> プロパティは、各カルチャの名前を表示するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1147">The <xref:System.Globalization.CultureInfo.Name%2A> property is used to display the name of each culture.</span></span>

 [!code-cpp[CompareInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CompareInfo/cpp/CompareInfo.cpp#1)]
 [!code-csharp[CompareInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CompareInfo/CS/CompareInfo.cs#1)]
 [!code-vb[CompareInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CompareInfo/VB/CompareInfo.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="b2214-1148">コールバックを開始したオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-1148">The object that initiated the callback.</span></span></param>
        <summary><span data-ttu-id="b2214-1149">オブジェクト グラフ全体が逆シリアル化された時点で実行します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1149">Runs when the entire object graph has been deserialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-1150">このメンバーは、現在の <xref:System.Globalization.CompareInfo> オブジェクトが <xref:System.Runtime.Serialization.IDeserializationCallback> インターフェイスにキャストされた場合にのみ使用できる明示的なインターフェイスメンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b2214-1150">This member is an explicit interface member implementation that can be used only when the current <xref:System.Globalization.CompareInfo> object is cast to an <xref:System.Runtime.Serialization.IDeserializationCallback> interface.</span></span> <span data-ttu-id="b2214-1151">詳細については、<xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-1151">For more information, see the <xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CompareInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="compareInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b2214-1152">現在の <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1152">Returns a string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="b2214-1153">現在の <see cref="T:System.Globalization.CompareInfo" /> オブジェクトを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="b2214-1153">A string that represents the current <see cref="T:System.Globalization.CompareInfo" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-1154">このメソッドは、<xref:System.Object.ToString%2A?displayProperty=nameWithType> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b2214-1154">This method overrides the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b2214-1155">このメソッドは、クラス名とインスタンス <xref:System.Globalization.CompareInfo.Name%2A> プロパティの値で構成される文字列をハイフンで区切って返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1155">It returns a string that consists of the class name and the value of the instance <xref:System.Globalization.CompareInfo.Name%2A> property, separated by a hyphen.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="b2214-1156">.NET Framework 4 では、<see cref="M:System.Globalization.CompareInfo.ToString" /> メソッドは、クラス名の後にスペース、ハイフン、スペース、および <see cref="P:System.Globalization.CompareInfo.Name" /> プロパティの値を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1156">Staring with the .NET Framework 4, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.Name" /> property.</span></span> <span data-ttu-id="b2214-1157">たとえば、en-us カルチャを表す <see cref="T:System.Globalization.CompareInfo" /> オブジェクトの場合、<see cref="M:System.Globalization.CompareInfo.ToString" /> メソッドは "CompareInfo-en-us" を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1157">For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - en-US".</span></span> <span data-ttu-id="b2214-1158">.NET Framework の以前のバージョンでは、クラス名の後にスペース、ハイフン、スペース、<see cref="P:System.Globalization.CompareInfo.LCID" /> プロパティの値が返されます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1158">In previous versions of the .NET Framework, it returns the class name followed by a space, a hyphen, a space, and the value of the <see cref="P:System.Globalization.CompareInfo.LCID" /> property.</span></span> <span data-ttu-id="b2214-1159">たとえば、en-us カルチャを表す <see cref="T:System.Globalization.CompareInfo" /> オブジェクトの場合、<see cref="M:System.Globalization.CompareInfo.ToString" /> メソッドは "CompareInfo-1033" を返します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1159">For example, for a <see cref="T:System.Globalization.CompareInfo" /> object that represents the en-US culture, the <see cref="M:System.Globalization.CompareInfo.ToString" /> method returns "CompareInfo - 1033".</span></span></para></block>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public System.Globalization.SortVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.SortVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.CompareInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As SortVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::SortVersion ^ Version { System::Globalization::SortVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : System.Globalization.SortVersion" Usage="System.Globalization.CompareInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.SortVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b2214-1160">文字列の比較および並べ替えに使用される Unicode のバージョンに関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1160">Gets information about the version of Unicode used for comparing and sorting strings.</span></span></summary>
        <value><span data-ttu-id="b2214-1161">文字列を比較および並べ替えるために使用される Unicode のバージョンに関する情報を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b2214-1161">An object that contains information about the Unicode version used for comparing and sorting strings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="b2214-1162">個々の文字の重み (したがって、特定の文字列を比較または順序付けする方法) は、.NET Framework の特定のバージョンが実装する Unicode 仕様のバージョンによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b2214-1162">The weight of individual characters, and therefore the way in which particular strings are compared or ordered, depends on the version of the Unicode specification that a particular version of the .NET Framework implements.</span></span> <span data-ttu-id="b2214-1163">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]では、次の表に示すように、これはホストオペレーティングシステムにも依存します。</span><span class="sxs-lookup"><span data-stu-id="b2214-1163">In the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], this also depends on the host operating system, as the following table shows.</span></span> <span data-ttu-id="b2214-1164">サポートされている Unicode バージョンの一覧は、文字の比較と並べ替えに対してのみ適用されます。カテゴリ別での Unicode 文字の分類には適用されません。</span><span class="sxs-lookup"><span data-stu-id="b2214-1164">Note that this list of supported Unicode versions applies to character comparison and sorting only; it does not apply to classification of Unicode characters by category.</span></span>

|<span data-ttu-id="b2214-1165">.NET Framework のバージョン</span><span class="sxs-lookup"><span data-stu-id="b2214-1165">.NET Framework version</span></span>|<span data-ttu-id="b2214-1166">オペレーティング システム</span><span class="sxs-lookup"><span data-stu-id="b2214-1166">Operating system</span></span>|<span data-ttu-id="b2214-1167">Unicode バージョン</span><span class="sxs-lookup"><span data-stu-id="b2214-1167">Unicode version</span></span>|
|----------------------------|----------------------|---------------------|
|[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]|<span data-ttu-id="b2214-1168">すべてのオペレーティング システム</span><span class="sxs-lookup"><span data-stu-id="b2214-1168">All operating systems</span></span>|<span data-ttu-id="b2214-1169">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="b2214-1169">Unicode 5.0</span></span>|
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] <span data-ttu-id="b2214-1170">以降のバージョン</span><span class="sxs-lookup"><span data-stu-id="b2214-1170">and later versions</span></span>|[!INCLUDE[win7](~/includes/win7-md.md)]|<span data-ttu-id="b2214-1171">Unicode 5.0</span><span class="sxs-lookup"><span data-stu-id="b2214-1171">Unicode 5.0</span></span>|
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)] <span data-ttu-id="b2214-1172">以降のバージョン</span><span class="sxs-lookup"><span data-stu-id="b2214-1172">and later versions</span></span>|[!INCLUDE[win8](~/includes/win8-md.md)] <span data-ttu-id="b2214-1173">以降の Windows オペレーティングシステムのバージョン</span><span class="sxs-lookup"><span data-stu-id="b2214-1173">and later Windows operating system versions</span></span>|<span data-ttu-id="b2214-1174">Unicode 6.3</span><span class="sxs-lookup"><span data-stu-id="b2214-1174">Unicode 6.3</span></span>|

 <span data-ttu-id="b2214-1175"><xref:System.Globalization.CompareInfo.Version%2A> プロパティによって返される <xref:System.Globalization.SortVersion> オブジェクトは、文字列の比較に使用される正確な Unicode バージョンを識別しません。</span><span class="sxs-lookup"><span data-stu-id="b2214-1175">The <xref:System.Globalization.SortVersion> object returned by the <xref:System.Globalization.CompareInfo.Version%2A> property doesn't identify the precise Unicode version used to compare strings.</span></span> <span data-ttu-id="b2214-1176">2つの <xref:System.Globalization.SortVersion> オブジェクトを比較して、同じ Unicode バージョンとカルチャを使用して文字列を比較するかどうかを判断する場合にのみ役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b2214-1176">It is useful only when comparing two <xref:System.Globalization.SortVersion> objects to determine whether they use the same Unicode version and culture to compare strings.</span></span> <span data-ttu-id="b2214-1177">詳細と例については、<xref:System.Globalization.SortVersion> リファレンスページを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b2214-1177">For more information and an example, see the <xref:System.Globalization.SortVersion> reference page.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.SortVersion" />
      </Docs>
    </Member>
  </Members>
</Type>
