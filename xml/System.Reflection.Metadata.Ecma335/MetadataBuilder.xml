<Type Name="MetadataBuilder" FullName="System.Reflection.Metadata.Ecma335.MetadataBuilder">
  <TypeSignature Language="C#" Value="public sealed class MetadataBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.MetadataBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataBuilder sealed" />
  <TypeSignature Language="F#" Value="type MetadataBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>MetadataBuilder クラスでは、パフォーマンスに非常に優れた方法で、アセンブリのメタデータの読み取りと書き込みが行われます。 コンパイラやその他のアセンブリ生成ツールによる使用を目的として設計されています。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataBuilder (int userStringHeapStartOffset = 0, int stringHeapStartOffset = 0, int blobHeapStartOffset = 0, int guidHeapStartOffset = 0);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 userStringHeapStartOffset, int32 stringHeapStartOffset, int32 blobHeapStartOffset, int32 guidHeapStartOffset) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional userStringHeapStartOffset As Integer = 0, Optional stringHeapStartOffset As Integer = 0, Optional blobHeapStartOffset As Integer = 0, Optional guidHeapStartOffset As Integer = 0)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="new System.Reflection.Metadata.Ecma335.MetadataBuilder : int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.MetadataBuilder" Usage="new System.Reflection.Metadata.Ecma335.MetadataBuilder (userStringHeapStartOffset, stringHeapStartOffset, blobHeapStartOffset, guidHeapStartOffset)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="userStringHeapStartOffset" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="stringHeapStartOffset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="blobHeapStartOffset" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="guidHeapStartOffset" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="userStringHeapStartOffset">ユーザー文字列ヒープの開始オフセット。 メタデータが EnC 差分メタデータの場合を除き、以前のすべての EnC 生成のユーザー文字列ヒープの累積サイズは 0 にする必要があります。</param>
        <param name="stringHeapStartOffset">文字列ヒープの開始オフセット。 メタデータが EnC 差分メタデータの場合を除き、以前のすべての EnC 生成の文字列ヒープの累積サイズは 0 にする必要があります。</param>
        <param name="blobHeapStartOffset">BLOB ヒープの開始オフセット。 メタデータが EnC 差分メタデータの場合を除き、以前のすべての EnC 生成の BLOB ヒープの累積サイズは 0 にする必要があります。</param>
        <param name="guidHeapStartOffset">GUID ヒープの開始オフセット。 メタデータが EnC 差分メタデータの場合を除き、以前のすべての EnC 生成の GUID ヒープの累積サイズは 0 にする必要があります。</param>
        <summary>メタデータ テーブルおよびヒープ用のビルダーを作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyDefinitionHandle AddAssembly (System.Reflection.Metadata.StringHandle name, Version version, System.Reflection.Metadata.StringHandle culture, System.Reflection.Metadata.BlobHandle publicKey, System.Reflection.AssemblyFlags flags, System.Reflection.AssemblyHashAlgorithm hashAlgorithm);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyDefinitionHandle AddAssembly(valuetype System.Reflection.Metadata.StringHandle name, class System.Version version, valuetype System.Reflection.Metadata.StringHandle culture, valuetype System.Reflection.Metadata.BlobHandle publicKey, valuetype System.Reflection.AssemblyFlags flags, valuetype System.Reflection.AssemblyHashAlgorithm hashAlgorithm) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssembly(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.AssemblyHashAlgorithm)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyDefinitionHandle AddAssembly(System::Reflection::Metadata::StringHandle name, Version ^ version, System::Reflection::Metadata::StringHandle culture, System::Reflection::Metadata::BlobHandle publicKey, System::Reflection::AssemblyFlags flags, System::Reflection::AssemblyHashAlgorithm hashAlgorithm);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddAssembly : System.Reflection.Metadata.StringHandle * Version * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.AssemblyFlags * System.Reflection.AssemblyHashAlgorithm -&gt; System.Reflection.Metadata.AssemblyDefinitionHandle" Usage="metadataBuilder.AddAssembly (name, version, culture, publicKey, flags, hashAlgorithm)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="version" Type="System.Version" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="culture" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="publicKey" Type="System.Reflection.Metadata.BlobHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="flags" Type="System.Reflection.AssemblyFlags" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Reflection.AssemblyHashAlgorithm" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="version">To be added.</param>
        <param name="culture">To be added.</param>
        <param name="publicKey">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssemblyFile">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyFileHandle AddAssemblyFile (System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle hashValue, bool containsMetadata);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyFileHandle AddAssemblyFile(valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle hashValue, bool containsMetadata) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyFile(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Boolean)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAssemblyFile (name As StringHandle, hashValue As BlobHandle, containsMetadata As Boolean) As AssemblyFileHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyFileHandle AddAssemblyFile(System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle hashValue, bool containsMetadata);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyFile : System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * bool -&gt; System.Reflection.Metadata.AssemblyFileHandle" Usage="metadataBuilder.AddAssemblyFile (name, hashValue, containsMetadata)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyFileHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashValue" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="containsMetadata" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="hashValue">To be added.</param>
        <param name="containsMetadata">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAssemblyReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.AssemblyReferenceHandle AddAssemblyReference (System.Reflection.Metadata.StringHandle name, Version version, System.Reflection.Metadata.StringHandle culture, System.Reflection.Metadata.BlobHandle publicKeyOrToken, System.Reflection.AssemblyFlags flags, System.Reflection.Metadata.BlobHandle hashValue);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.AssemblyReferenceHandle AddAssemblyReference(valuetype System.Reflection.Metadata.StringHandle name, class System.Version version, valuetype System.Reflection.Metadata.StringHandle culture, valuetype System.Reflection.Metadata.BlobHandle publicKeyOrToken, valuetype System.Reflection.AssemblyFlags flags, valuetype System.Reflection.Metadata.BlobHandle hashValue) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddAssemblyReference(System.Reflection.Metadata.StringHandle,System.Version,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.AssemblyFlags,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::AssemblyReferenceHandle AddAssemblyReference(System::Reflection::Metadata::StringHandle name, Version ^ version, System::Reflection::Metadata::StringHandle culture, System::Reflection::Metadata::BlobHandle publicKeyOrToken, System::Reflection::AssemblyFlags flags, System::Reflection::Metadata::BlobHandle hashValue);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddAssemblyReference : System.Reflection.Metadata.StringHandle * Version * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.AssemblyFlags * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.AssemblyReferenceHandle" Usage="metadataBuilder.AddAssemblyReference (name, version, culture, publicKeyOrToken, flags, hashValue)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.AssemblyReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="version" Type="System.Version" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="culture" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="publicKeyOrToken" Type="System.Reflection.Metadata.BlobHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="flags" Type="System.Reflection.AssemblyFlags" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashValue" Type="System.Reflection.Metadata.BlobHandle" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="version">To be added.</param>
        <param name="culture">To be added.</param>
        <param name="publicKeyOrToken">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="hashValue">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ConstantHandle AddConstant (System.Reflection.Metadata.EntityHandle parent, object value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ConstantHandle AddConstant(valuetype System.Reflection.Metadata.EntityHandle parent, object value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddConstant(System.Reflection.Metadata.EntityHandle,System.Object)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddConstant (parent As EntityHandle, value As Object) As ConstantHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ConstantHandle AddConstant(System::Reflection::Metadata::EntityHandle parent, System::Object ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddConstant : System.Reflection.Metadata.EntityHandle * obj -&gt; System.Reflection.Metadata.ConstantHandle" Usage="metadataBuilder.AddConstant (parent, value)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ConstantHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent">親エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.ParameterHandle" />、<see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />、または <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />。</param>
        <param name="value">定数値。</param>
        <summary>パラメーター、フィールド、プロパティの既定値を追加します。</summary>
        <returns>追加された定数のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは任意の順序で追加できます。 シリアル化されると、テーブルは自動的に並べ替えられます。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomAttribute">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.CustomAttributeHandle AddCustomAttribute (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.EntityHandle constructor, System.Reflection.Metadata.BlobHandle value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.CustomAttributeHandle AddCustomAttribute(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.EntityHandle constructor, valuetype System.Reflection.Metadata.BlobHandle value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomAttribute (parent As EntityHandle, constructor As EntityHandle, value As BlobHandle) As CustomAttributeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::CustomAttributeHandle AddCustomAttribute(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::EntityHandle constructor, System::Reflection::Metadata::BlobHandle value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddCustomAttribute : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.CustomAttributeHandle" Usage="metadataBuilder.AddCustomAttribute (parent, constructor, value)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.CustomAttributeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="constructor" Type="System.Reflection.Metadata.EntityHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent">カスタム属性の追加先エンティティ: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.ParameterHandle" />、<see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />、<see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />、<see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />, <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />、<see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />、<see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />、<see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />、<see cref="T:System.Reflection.Metadata.GenericParameterHandle" />、<see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />、または <see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />。</param>
        <param name="constructor">カスタム属性コンストラクター: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> または <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />。</param>
        <param name="value">カスタム属性値の BLOB。</param>
        <summary>カスタム属性を追加します。</summary>
        <returns>追加されたカスタム属性のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは任意の順序で追加できます。 シリアル化されると、テーブルは自動的に並べ替えられます。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCustomDebugInformation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.CustomDebugInformationHandle AddCustomDebugInformation (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.GuidHandle kind, System.Reflection.Metadata.BlobHandle value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.CustomDebugInformationHandle AddCustomDebugInformation(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.GuidHandle kind, valuetype System.Reflection.Metadata.BlobHandle value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddCustomDebugInformation(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCustomDebugInformation (parent As EntityHandle, kind As GuidHandle, value As BlobHandle) As CustomDebugInformationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::CustomDebugInformationHandle AddCustomDebugInformation(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::GuidHandle kind, System::Reflection::Metadata::BlobHandle value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddCustomDebugInformation : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.CustomDebugInformationHandle" Usage="metadataBuilder.AddCustomDebugInformation (parent, kind, value)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.CustomDebugInformationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="kind" Type="System.Reflection.Metadata.GuidHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent">デバッグ情報の追加先エンティティ: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.ParameterHandle" />、<see cref="T:System.Reflection.Metadata.InterfaceImplementationHandle" />、<see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />、<see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" />、<see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.StandaloneSignatureHandle" />、<see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />、<see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />、<see cref="T:System.Reflection.Metadata.ManifestResourceHandle" />、<see cref="T:System.Reflection.Metadata.GenericParameterHandle" />、<see cref="T:System.Reflection.Metadata.GenericParameterConstraintHandle" />、<see cref="T:System.Reflection.Metadata.MethodSpecificationHandle" />、<see cref="T:System.Reflection.Metadata.DocumentHandle" />、<see cref="T:System.Reflection.Metadata.LocalScopeHandle" />、<see cref="T:System.Reflection.Metadata.LocalVariableHandle" />、<see cref="T:System.Reflection.Metadata.LocalConstantHandle" />、または <see cref="T:System.Reflection.Metadata.ImportScopeHandle" />。</param>
        <param name="kind">情報の種類。 <paramref name="value" /> BLOB の構造を決定します。</param>
        <param name="value">カスタム デバッグ情報 BLOB。</param>
        <summary>カスタム デバッグ情報を追加します。</summary>
        <returns>追加されたカスタム デバッグ情報のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは任意の順序で追加できます。 シリアル化されると、テーブルは自動的に並べ替えられます。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeclarativeSecurityAttribute">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute (System.Reflection.Metadata.EntityHandle parent, System.Reflection.DeclarativeSecurityAction action, System.Reflection.Metadata.BlobHandle permissionSet);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.DeclarativeSecurityAction action, valuetype System.Reflection.Metadata.BlobHandle permissionSet) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDeclarativeSecurityAttribute(System.Reflection.Metadata.EntityHandle,System.Reflection.DeclarativeSecurityAction,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDeclarativeSecurityAttribute (parent As EntityHandle, action As DeclarativeSecurityAction, permissionSet As BlobHandle) As DeclarativeSecurityAttributeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::DeclarativeSecurityAttributeHandle AddDeclarativeSecurityAttribute(System::Reflection::Metadata::EntityHandle parent, System::Reflection::DeclarativeSecurityAction action, System::Reflection::Metadata::BlobHandle permissionSet);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddDeclarativeSecurityAttribute : System.Reflection.Metadata.EntityHandle * System.Reflection.DeclarativeSecurityAction * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.DeclarativeSecurityAttributeHandle" Usage="metadataBuilder.AddDeclarativeSecurityAttribute (parent, action, permissionSet)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.DeclarativeSecurityAttributeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="action" Type="System.Reflection.DeclarativeSecurityAction" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="permissionSet" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent">親エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />、または <see cref="T:System.Reflection.Metadata.AssemblyDefinitionHandle" />。</param>
        <param name="action">宣言セキュリティ アクション。</param>
        <param name="permissionSet">アクセス許可セット BLOB。</param>
        <summary>型、メソッド、またはアセンブリに宣言セキュリティ属性を追加します。</summary>
        <returns>追加された宣言セキュリティ属性のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは任意の順序で追加できます。 シリアル化されると、テーブルは自動的に並べ替えられます。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.DocumentHandle AddDocument (System.Reflection.Metadata.BlobHandle name, System.Reflection.Metadata.GuidHandle hashAlgorithm, System.Reflection.Metadata.BlobHandle hash, System.Reflection.Metadata.GuidHandle language);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.DocumentHandle AddDocument(valuetype System.Reflection.Metadata.BlobHandle name, valuetype System.Reflection.Metadata.GuidHandle hashAlgorithm, valuetype System.Reflection.Metadata.BlobHandle hash, valuetype System.Reflection.Metadata.GuidHandle language) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddDocument(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.GuidHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDocument (name As BlobHandle, hashAlgorithm As GuidHandle, hash As BlobHandle, language As GuidHandle) As DocumentHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::DocumentHandle AddDocument(System::Reflection::Metadata::BlobHandle name, System::Reflection::Metadata::GuidHandle hashAlgorithm, System::Reflection::Metadata::BlobHandle hash, System::Reflection::Metadata::GuidHandle language);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddDocument : System.Reflection.Metadata.BlobHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.BlobHandle * System.Reflection.Metadata.GuidHandle -&gt; System.Reflection.Metadata.DocumentHandle" Usage="metadataBuilder.AddDocument (name, hashAlgorithm, hash, language)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.DocumentHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.BlobHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Reflection.Metadata.GuidHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="hash" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="language" Type="System.Reflection.Metadata.GuidHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">ドキュメント名 BLOB。</param>
        <param name="hashAlgorithm"><paramref name="hash" /> の値の計算に使用されるハッシュ アルゴリズムの GUID。</param>
        <param name="hash">ドキュメント コンテンツのハッシュ。</param>
        <param name="language">言語の GUID。</param>
        <summary>ドキュメント デバッグ情報を追加します。</summary>
        <returns>追加されたドキュメントのハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`name` の詳細については、「<https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-name-blob>」を参照してください。

`hashAlgorithm`の一般的な値の詳細については、「<https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-table-0x30>」を参照してください。

`language`の一般的な値の詳細については、「<https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#document-table-0x30>」を参照してください。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEncLogEntry">
      <MemberSignature Language="C#" Value="public void AddEncLogEntry (System.Reflection.Metadata.EntityHandle entity, System.Reflection.Metadata.Ecma335.EditAndContinueOperation code);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEncLogEntry(valuetype System.Reflection.Metadata.EntityHandle entity, valuetype System.Reflection.Metadata.Ecma335.EditAndContinueOperation code) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncLogEntry(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.Ecma335.EditAndContinueOperation)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEncLogEntry (entity As EntityHandle, code As EditAndContinueOperation)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEncLogEntry(System::Reflection::Metadata::EntityHandle entity, System::Reflection::Metadata::Ecma335::EditAndContinueOperation code);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddEncLogEntry : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.Ecma335.EditAndContinueOperation -&gt; unit" Usage="metadataBuilder.AddEncLogEntry (entity, code)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="code" Type="System.Reflection.Metadata.Ecma335.EditAndContinueOperation" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <param name="code">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEncMapEntry">
      <MemberSignature Language="C#" Value="public void AddEncMapEntry (System.Reflection.Metadata.EntityHandle entity);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEncMapEntry(valuetype System.Reflection.Metadata.EntityHandle entity) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEncMapEntry(System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEncMapEntry (entity As EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEncMapEntry(System::Reflection::Metadata::EntityHandle entity);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddEncMapEntry : System.Reflection.Metadata.EntityHandle -&gt; unit" Usage="metadataBuilder.AddEncMapEntry entity" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEvent">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.EventDefinitionHandle AddEvent (System.Reflection.EventAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle type);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.EventDefinitionHandle AddEvent(valuetype System.Reflection.EventAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle type) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEvent(System.Reflection.EventAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddEvent (attributes As EventAttributes, name As StringHandle, type As EntityHandle) As EventDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::EventDefinitionHandle AddEvent(System::Reflection::EventAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle type);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddEvent : System.Reflection.EventAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.EventDefinitionHandle" Usage="metadataBuilder.AddEvent (attributes, name, type)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.EventDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.EventAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="type" Type="System.Reflection.Metadata.EntityHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">イベント属性。</param>
        <param name="name">イベントの名前です。</param>
        <param name="type">イベントの種類: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、または <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</param>
        <summary>イベント定義を追加します。</summary>
        <returns>追加されたイベント定義のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventMap">
      <MemberSignature Language="C#" Value="public void AddEventMap (System.Reflection.Metadata.TypeDefinitionHandle declaringType, System.Reflection.Metadata.EventDefinitionHandle eventList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEventMap(valuetype System.Reflection.Metadata.TypeDefinitionHandle declaringType, valuetype System.Reflection.Metadata.EventDefinitionHandle eventList) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddEventMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EventDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEventMap (declaringType As TypeDefinitionHandle, eventList As EventDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEventMap(System::Reflection::Metadata::TypeDefinitionHandle declaringType, System::Reflection::Metadata::EventDefinitionHandle eventList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddEventMap : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EventDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddEventMap (declaringType, eventList)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaringType" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="eventList" Type="System.Reflection.Metadata.EventDefinitionHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <param name="eventList">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExportedType">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ExportedTypeHandle AddExportedType (System.Reflection.TypeAttributes attributes, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle implementation, int typeDefinitionId);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ExportedTypeHandle AddExportedType(valuetype System.Reflection.TypeAttributes attributes, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle implementation, int32 typeDefinitionId) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddExportedType(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddExportedType (attributes As TypeAttributes, namespace As StringHandle, name As StringHandle, implementation As EntityHandle, typeDefinitionId As Integer) As ExportedTypeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ExportedTypeHandle AddExportedType(System::Reflection::TypeAttributes attributes, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle implementation, int typeDefinitionId);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddExportedType : System.Reflection.TypeAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * int -&gt; System.Reflection.Metadata.ExportedTypeHandle" Usage="metadataBuilder.AddExportedType (attributes, namespace, name, implementation, typeDefinitionId)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ExportedTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="implementation" Type="System.Reflection.Metadata.EntityHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="typeDefinitionId" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">型属性。</param>
        <param name="namespace">型の名前空間。</param>
        <param name="name">型名。</param>
        <param name="implementation">実装エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />、<see cref="T:System.Reflection.Metadata.ExportedTypeHandle" />、または <see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />。</param>
        <param name="typeDefinitionId">型定義 ID。</param>
        <summary>エクスポートされた型を追加します。</summary>
        <returns>追加されたエクスポートされた型のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFieldDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.FieldDefinitionHandle AddFieldDefinition (System.Reflection.FieldAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.FieldDefinitionHandle AddFieldDefinition(valuetype System.Reflection.FieldAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldDefinition(System.Reflection.FieldAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFieldDefinition (attributes As FieldAttributes, name As StringHandle, signature As BlobHandle) As FieldDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::FieldDefinitionHandle AddFieldDefinition(System::Reflection::FieldAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddFieldDefinition : System.Reflection.FieldAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.FieldDefinitionHandle" Usage="metadataBuilder.AddFieldDefinition (attributes, name, signature)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.FieldDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">フィールド属性。</param>
        <param name="name">フィールド名。</param>
        <param name="signature">フィールド シグネチャ。 <see cref="M:System.Reflection.Metadata.Ecma335.BlobEncoder.FieldSignature" /> を使用して BLOB を構築します。</param>
        <summary>フィールド定義を追加します。</summary>
        <returns>追加されたフィールド定義のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFieldLayout">
      <MemberSignature Language="C#" Value="public void AddFieldLayout (System.Reflection.Metadata.FieldDefinitionHandle field, int offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFieldLayout(valuetype System.Reflection.Metadata.FieldDefinitionHandle field, int32 offset) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldLayout(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFieldLayout (field As FieldDefinitionHandle, offset As Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFieldLayout(System::Reflection::Metadata::FieldDefinitionHandle field, int offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddFieldLayout : System.Reflection.Metadata.FieldDefinitionHandle * int -&gt; unit" Usage="metadataBuilder.AddFieldLayout (field, offset)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.Metadata.FieldDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="field">フィールド定義のハンドル。</param>
        <param name="offset">宣言する型インスタンス内のフィールドのバイト オフセット。</param>
        <summary>フィールド定義のフィールド レイアウトを定義します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは、対応するフィールド定義と同じ順序で追加する必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFieldRelativeVirtualAddress">
      <MemberSignature Language="C#" Value="public void AddFieldRelativeVirtualAddress (System.Reflection.Metadata.FieldDefinitionHandle field, int offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddFieldRelativeVirtualAddress(valuetype System.Reflection.Metadata.FieldDefinitionHandle field, int32 offset) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddFieldRelativeVirtualAddress(System.Reflection.Metadata.FieldDefinitionHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddFieldRelativeVirtualAddress (field As FieldDefinitionHandle, offset As Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddFieldRelativeVirtualAddress(System::Reflection::Metadata::FieldDefinitionHandle field, int offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddFieldRelativeVirtualAddress : System.Reflection.Metadata.FieldDefinitionHandle * int -&gt; unit" Usage="metadataBuilder.AddFieldRelativeVirtualAddress (field, offset)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.Metadata.FieldDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="field">フィールド定義のハンドル。</param>
        <param name="offset">マップされたフィールドの初期値を格納する、PE イメージ内のブロック内のオフセット (通常は .text セクション内)。</param>
        <summary>フィールドから PE イメージに格納されている初期値へのマッピングを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは、対応するフィールド定義と同じ順序で追加する必要があります。

メタデータに格納されている最終的な相対仮想アドレスは、ブロックの開始の仮想アドレスにオフセットを追加することによって、メタデータがシリアル化されるときに計算されます。
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGenericParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GenericParameterHandle AddGenericParameter (System.Reflection.Metadata.EntityHandle parent, System.Reflection.GenericParameterAttributes attributes, System.Reflection.Metadata.StringHandle name, int index);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GenericParameterHandle AddGenericParameter(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.GenericParameterAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, int32 index) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameter(System.Reflection.Metadata.EntityHandle,System.Reflection.GenericParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGenericParameter (parent As EntityHandle, attributes As GenericParameterAttributes, name As StringHandle, index As Integer) As GenericParameterHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GenericParameterHandle AddGenericParameter(System::Reflection::Metadata::EntityHandle parent, System::Reflection::GenericParameterAttributes attributes, System::Reflection::Metadata::StringHandle name, int index);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddGenericParameter : System.Reflection.Metadata.EntityHandle * System.Reflection.GenericParameterAttributes * System.Reflection.Metadata.StringHandle * int -&gt; System.Reflection.Metadata.GenericParameterHandle" Usage="metadataBuilder.AddGenericParameter (parent, attributes, name, index)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GenericParameterHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.GenericParameterAttributes" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent">親エンティティ ハンドル。<see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" /> または <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> となります。</param>
        <param name="attributes">ジェネリック パラメーターの属性。</param>
        <param name="name">パラメーターの名前。</param>
        <param name="index">0 から始まるパラメーター インデックス。</param>
        <summary>ジェネリック パラメーターの定義を追加します。</summary>
        <returns>追加されたジェネリック パラメーターのハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

ジェネリックパラメーターは、親エンティティ (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeOrMethodDef(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>) のコード化されたインデックスによって決定される順序で追加する必要があります。

同じ親を持つジェネリックパラメーターは、`index`で並べ替える必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddGenericParameterConstraint">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GenericParameterConstraintHandle AddGenericParameterConstraint (System.Reflection.Metadata.GenericParameterHandle genericParameter, System.Reflection.Metadata.EntityHandle constraint);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GenericParameterConstraintHandle AddGenericParameterConstraint(valuetype System.Reflection.Metadata.GenericParameterHandle genericParameter, valuetype System.Reflection.Metadata.EntityHandle constraint) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddGenericParameterConstraint(System.Reflection.Metadata.GenericParameterHandle,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddGenericParameterConstraint (genericParameter As GenericParameterHandle, constraint As EntityHandle) As GenericParameterConstraintHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GenericParameterConstraintHandle AddGenericParameterConstraint(System::Reflection::Metadata::GenericParameterHandle genericParameter, System::Reflection::Metadata::EntityHandle constraint);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddGenericParameterConstraint : System.Reflection.Metadata.GenericParameterHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.GenericParameterConstraintHandle" Usage="metadataBuilder.AddGenericParameterConstraint (genericParameter, constraint)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GenericParameterConstraintHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericParameter" Type="System.Reflection.Metadata.GenericParameterHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="constraint" Type="System.Reflection.Metadata.EntityHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="genericParameter">制約対象のジェネリック パラメーター。</param>
        <param name="constraint">型制約。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、または <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</param>
        <summary>ジェネリック パラメーターに型制約を追加します。</summary>
        <returns>追加されたジェネリック パラメーター制約のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

制約は、対応するジェネリックパラメーターと同じ順序で追加する必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ImportScopeHandle AddImportScope (System.Reflection.Metadata.ImportScopeHandle parentScope, System.Reflection.Metadata.BlobHandle imports);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ImportScopeHandle AddImportScope(valuetype System.Reflection.Metadata.ImportScopeHandle parentScope, valuetype System.Reflection.Metadata.BlobHandle imports) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddImportScope(System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddImportScope (parentScope As ImportScopeHandle, imports As BlobHandle) As ImportScopeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ImportScopeHandle AddImportScope(System::Reflection::Metadata::ImportScopeHandle parentScope, System::Reflection::Metadata::BlobHandle imports);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddImportScope : System.Reflection.Metadata.ImportScopeHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.ImportScopeHandle" Usage="metadataBuilder.AddImportScope (parentScope, imports)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ImportScopeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentScope" Type="System.Reflection.Metadata.ImportScopeHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="imports" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parentScope">親スコープ ハンドル。</param>
        <param name="imports">インポート スコープ ハンドル。</param>
        <summary>ローカル スコープのデバッグ情報を追加します。</summary>
        <returns>追加されたインポート スコープのハンドル。</returns>
        <remarks>
          <format type="text/markdown">
  <![CDA

## Remarks

`imports` の詳細については、「<https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#imports-blob>」を参照してください。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterfaceImplementation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.InterfaceImplementationHandle AddInterfaceImplementation (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.EntityHandle implementedInterface);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.InterfaceImplementationHandle AddInterfaceImplementation(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.EntityHandle implementedInterface) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddInterfaceImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddInterfaceImplementation (type As TypeDefinitionHandle, implementedInterface As EntityHandle) As InterfaceImplementationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::InterfaceImplementationHandle AddInterfaceImplementation(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::EntityHandle implementedInterface);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddInterfaceImplementation : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.InterfaceImplementationHandle" Usage="metadataBuilder.AddInterfaceImplementation (type, implementedInterface)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.InterfaceImplementationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="implementedInterface" Type="System.Reflection.Metadata.EntityHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="type">インターフェイスを実装する型。</param>
        <param name="implementedInterface">実装されるインターフェイス。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、または <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</param>
        <summary>インターフェイスの実装を型に追加します。</summary>
        <returns>追加されたインターフェイス実装のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

インターフェイスの実装は、インターフェイスを実装する対応する型定義と同じ順序で追加する必要があります。

型が複数のインターフェイスを実装する場合は、対応するエントリを、コード化されたインデックス (<xref:System.Reflection.Metadata.Ecma335.CodedIndex.TypeDefOrRefOrSpec(System.Reflection.Metadata.EntityHandle)?displayProperty=nameWithType>) によって決定される順序で追加する必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalConstantHandle AddLocalConstant (System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalConstantHandle AddLocalConstant(valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalConstant(System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalConstant (name As StringHandle, signature As BlobHandle) As LocalConstantHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalConstantHandle AddLocalConstant(System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddLocalConstant : System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.LocalConstantHandle" Usage="metadataBuilder.AddLocalConstant (name, signature)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalConstantHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name">変数の名前。</param>
        <param name="signature">LocalConstantSig BLOB。</param>
        <summary>ローカル定数のデバッグ情報を追加します。</summary>
        <returns>追加されたローカル定数のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`signature`の詳細については、GitHub の[LocalConstantSig Blob](https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#localconstantsig-blob)に関する説明を参照してください。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalScopeHandle AddLocalScope (System.Reflection.Metadata.MethodDefinitionHandle method, System.Reflection.Metadata.ImportScopeHandle importScope, System.Reflection.Metadata.LocalVariableHandle variableList, System.Reflection.Metadata.LocalConstantHandle constantList, int startOffset, int length);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalScopeHandle AddLocalScope(valuetype System.Reflection.Metadata.MethodDefinitionHandle method, valuetype System.Reflection.Metadata.ImportScopeHandle importScope, valuetype System.Reflection.Metadata.LocalVariableHandle variableList, valuetype System.Reflection.Metadata.LocalConstantHandle constantList, int32 startOffset, int32 length) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalScope(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.ImportScopeHandle,System.Reflection.Metadata.LocalVariableHandle,System.Reflection.Metadata.LocalConstantHandle,System.Int32,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalScope (method As MethodDefinitionHandle, importScope As ImportScopeHandle, variableList As LocalVariableHandle, constantList As LocalConstantHandle, startOffset As Integer, length As Integer) As LocalScopeHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalScopeHandle AddLocalScope(System::Reflection::Metadata::MethodDefinitionHandle method, System::Reflection::Metadata::ImportScopeHandle importScope, System::Reflection::Metadata::LocalVariableHandle variableList, System::Reflection::Metadata::LocalConstantHandle constantList, int startOffset, int length);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddLocalScope : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.Metadata.ImportScopeHandle * System.Reflection.Metadata.LocalVariableHandle * System.Reflection.Metadata.LocalConstantHandle * int * int -&gt; System.Reflection.Metadata.LocalScopeHandle" Usage="metadataBuilder.AddLocalScope (method, importScope, variableList, constantList, startOffset, length)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalScopeHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="importScope" Type="System.Reflection.Metadata.ImportScopeHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="variableList" Type="System.Reflection.Metadata.LocalVariableHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="constantList" Type="System.Reflection.Metadata.LocalConstantHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="startOffset" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="length" Type="System.Int32" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="method">含まれているメソッド。</param>
        <param name="importScope">関連付けられたインポート スコープのハンドル。</param>
        <param name="variableList">スコープで変数が宣言されている場合は、これは最初のハンドルに設定します。 それ以外の場合は、次のスコープ定義で宣言されている最初の変数のハンドルに設定します。 スコープに変数が定義されていない場合は、<see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalVariableHandle(1)" /> とします。</param>
        <param name="constantList">スコープで定数が宣言されている場合は、これは最初のハンドルに設定します。 それ以外の場合は、次のスコープ定義で宣言されている最初の定数のハンドルに設定します。 スコープに定数が定義されていない場合は、<see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.LocalConstantHandle(1)" /> とします。</param>
        <param name="startOffset">スコープによってカバーされる最初の命令のオフセット。</param>
        <param name="length">スコープの長さ (バイト単位)。</param>
        <summary>ローカル スコープのデバッグ情報を追加します。</summary>
        <returns>追加されたローカル スコープのハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

ローカルスコープは、対応するメソッド定義と同じ順序で追加する必要があります。

メソッド内では、昇順 `startOffset`、次に降順 `length`順に並べ替える必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLocalVariable">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.LocalVariableHandle AddLocalVariable (System.Reflection.Metadata.LocalVariableAttributes attributes, int index, System.Reflection.Metadata.StringHandle name);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.LocalVariableHandle AddLocalVariable(valuetype System.Reflection.Metadata.LocalVariableAttributes attributes, int32 index, valuetype System.Reflection.Metadata.StringHandle name) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddLocalVariable(System.Reflection.Metadata.LocalVariableAttributes,System.Int32,System.Reflection.Metadata.StringHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddLocalVariable (attributes As LocalVariableAttributes, index As Integer, name As StringHandle) As LocalVariableHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::LocalVariableHandle AddLocalVariable(System::Reflection::Metadata::LocalVariableAttributes attributes, int index, System::Reflection::Metadata::StringHandle name);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddLocalVariable : System.Reflection.Metadata.LocalVariableAttributes * int * System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.LocalVariableHandle" Usage="metadataBuilder.AddLocalVariable (attributes, index, name)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.LocalVariableHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.Metadata.LocalVariableAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">ローカル変数の属性。</param>
        <param name="index">ローカル シグネチャ内のローカル変数の 0 から始まるインデックス。</param>
        <param name="name">変数の名前。</param>
        <summary>ローカル変数のデバッグ情報を追加します。</summary>
        <returns>追加されたローカル変数のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddManifestResource">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ManifestResourceHandle AddManifestResource (System.Reflection.ManifestResourceAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle implementation, uint offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ManifestResourceHandle AddManifestResource(valuetype System.Reflection.ManifestResourceAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle implementation, unsigned int32 offset) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddManifestResource(System.Reflection.ManifestResourceAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.UInt32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddManifestResource (attributes As ManifestResourceAttributes, name As StringHandle, implementation As EntityHandle, offset As UInteger) As ManifestResourceHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ManifestResourceHandle AddManifestResource(System::Reflection::ManifestResourceAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle implementation, System::UInt32 offset);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddManifestResource : System.Reflection.ManifestResourceAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * uint32 -&gt; System.Reflection.Metadata.ManifestResourceHandle" Usage="metadataBuilder.AddManifestResource (attributes, name, implementation, offset)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ManifestResourceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.ManifestResourceAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="implementation" Type="System.Reflection.Metadata.EntityHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="offset" Type="System.UInt32" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">マニフェスト リソース属性。</param>
        <param name="name">マニフェスト リソースの名前。</param>
        <param name="implementation">実装エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.AssemblyFileHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />、または <see langword="null" />。</param>
        <param name="offset">このリソース レコードが始まる参照先ファイル内のバイト オフセットを指定します。</param>
        <summary>マニフェスト リソースを追加します。</summary>
        <returns>追加されたマニフェスト リソースのハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMarshallingDescriptor">
      <MemberSignature Language="C#" Value="public void AddMarshallingDescriptor (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.BlobHandle descriptor);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMarshallingDescriptor(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.BlobHandle descriptor) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMarshallingDescriptor(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMarshallingDescriptor (parent As EntityHandle, descriptor As BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMarshallingDescriptor(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::BlobHandle descriptor);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMarshallingDescriptor : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; unit" Usage="metadataBuilder.AddMarshallingDescriptor (parent, descriptor)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="descriptor" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent">親エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.ParameterHandle" /> または <see cref="T:System.Reflection.Metadata.FieldDefinitionHandle" />。</param>
        <param name="descriptor">既述子 BLOB。</param>
        <summary>フィールドまたはパラメーターにマーシャリング情報を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは任意の順序で追加できます。 シリアル化されると、テーブルは自動的に並べ替えられます。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMemberReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MemberReferenceHandle AddMemberReference (System.Reflection.Metadata.EntityHandle parent, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MemberReferenceHandle AddMemberReference(valuetype System.Reflection.Metadata.EntityHandle parent, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMemberReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMemberReference (parent As EntityHandle, name As StringHandle, signature As BlobHandle) As MemberReferenceHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MemberReferenceHandle AddMemberReference(System::Reflection::Metadata::EntityHandle parent, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMemberReference : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MemberReferenceHandle" Usage="metadataBuilder.AddMemberReference (parent, name, signature)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MemberReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="parent">含まれているエンティティ。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、<see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />、<see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" />、または <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</param>
        <param name="name">メンバー名。</param>
        <param name="signature">メンバー シグネチャ。</param>
        <summary>MemberRef テーブル行を追加します。</summary>
        <returns>追加されたメンバー参照のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodDebugInformation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodDebugInformationHandle AddMethodDebugInformation (System.Reflection.Metadata.DocumentHandle document, System.Reflection.Metadata.BlobHandle sequencePoints);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodDebugInformationHandle AddMethodDebugInformation(valuetype System.Reflection.Metadata.DocumentHandle document, valuetype System.Reflection.Metadata.BlobHandle sequencePoints) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDebugInformation(System.Reflection.Metadata.DocumentHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodDebugInformation (document As DocumentHandle, sequencePoints As BlobHandle) As MethodDebugInformationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodDebugInformationHandle AddMethodDebugInformation(System::Reflection::Metadata::DocumentHandle document, System::Reflection::Metadata::BlobHandle sequencePoints);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodDebugInformation : System.Reflection.Metadata.DocumentHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MethodDebugInformationHandle" Usage="metadataBuilder.AddMethodDebugInformation (document, sequencePoints)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodDebugInformationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Reflection.Metadata.DocumentHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="sequencePoints" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="document">メソッドのすべてのシーケンス ポイントを含む単一のドキュメントのハンドル。メソッドがシーケンス ポイントを持たない場合、または複数のドキュメントにまたがる場合は、<see langword="null" />。</param>
        <param name="sequencePoints">シーケンス ポイント BLOB。メソッドにシーケンス ポイントがない場合は、<see langword="null" />。</param>
        <summary>メソッドのデバッグ情報を追加します。</summary>
        <returns>追加されたメソッドのデバッグ情報のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

`sequencePoints`の詳細については、GitHub の「[シーケンスポイント Blob](https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#sequence-points-blob) 」を参照してください。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodDefinitionHandle AddMethodDefinition (System.Reflection.MethodAttributes attributes, System.Reflection.MethodImplAttributes implAttributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature, int bodyOffset, System.Reflection.Metadata.ParameterHandle parameterList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodDefinitionHandle AddMethodDefinition(valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.MethodImplAttributes implAttributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature, int32 bodyOffset, valuetype System.Reflection.Metadata.ParameterHandle parameterList) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodDefinition(System.Reflection.MethodAttributes,System.Reflection.MethodImplAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle,System.Int32,System.Reflection.Metadata.ParameterHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodDefinition (attributes As MethodAttributes, implAttributes As MethodImplAttributes, name As StringHandle, signature As BlobHandle, bodyOffset As Integer, parameterList As ParameterHandle) As MethodDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodDefinitionHandle AddMethodDefinition(System::Reflection::MethodAttributes attributes, System::Reflection::MethodImplAttributes implAttributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature, int bodyOffset, System::Reflection::Metadata::ParameterHandle parameterList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodDefinition : System.Reflection.MethodAttributes * System.Reflection.MethodImplAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle * int * System.Reflection.Metadata.ParameterHandle -&gt; System.Reflection.Metadata.MethodDefinitionHandle" Usage="metadataBuilder.AddMethodDefinition (attributes, implAttributes, name, signature, bodyOffset, parameterList)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="implAttributes" Type="System.Reflection.MethodImplAttributes" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="bodyOffset" Type="System.Int32" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="parameterList" Type="System.Reflection.Metadata.ParameterHandle" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">メソッド属性。</param>
        <param name="implAttributes">メソッド実装属性。</param>
        <param name="name">メソッド名。</param>
        <param name="signature">メソッド シグネチャ。</param>
        <param name="bodyOffset">メソッド本体 (IL ストリーム) を格納する、PE イメージ内のブロック内のオフセット。メソッドに本体がない場合は、-1。</param>
        <param name="parameterList">メソッドが Params テーブルでパラメーターを宣言する場合は、これは最初のハンドルに設定します。 それ以外の場合は、次のメソッド定義で宣言されている最初のパラメーターのハンドルに設定します。 モジュールでパラメーターが宣言されていない場合は、<see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.ParameterHandle(1)" /> とします。</param>
        <summary>メソッド定義を追加します。</summary>
        <returns>追加されたメソッド定義のハンドル。</returns>
        <remarks>メタデータに格納されている最終的な相対仮想アドレスは、ブロックの先頭の仮想アドレスにオフセットを追加することによって、メタデータがシリアル化されるときに計算されます。</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodImplementation">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodImplementationHandle AddMethodImplementation (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.EntityHandle methodBody, System.Reflection.Metadata.EntityHandle methodDeclaration);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodImplementationHandle AddMethodImplementation(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.EntityHandle methodBody, valuetype System.Reflection.Metadata.EntityHandle methodDeclaration) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImplementation(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodImplementation (type As TypeDefinitionHandle, methodBody As EntityHandle, methodDeclaration As EntityHandle) As MethodImplementationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodImplementationHandle AddMethodImplementation(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::EntityHandle methodBody, System::Reflection::Metadata::EntityHandle methodDeclaration);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodImplementation : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.MethodImplementationHandle" Usage="metadataBuilder.AddMethodImplementation (type, methodBody, methodDeclaration)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodImplementationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="methodBody" Type="System.Reflection.Metadata.EntityHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="methodDeclaration" Type="System.Reflection.Metadata.EntityHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="type">型定義。</param>
        <param name="methodBody">メソッド本体エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> または <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />。</param>
        <param name="methodDeclaration">メソッド宣言エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> または <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />。</param>
        <summary>型内のメソッド宣言の実装を定義します。</summary>
        <returns>追加されたメソッド実装のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

メソッドの実装は、対応する型定義と同じ順序で追加する必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodImport">
      <MemberSignature Language="C#" Value="public void AddMethodImport (System.Reflection.Metadata.MethodDefinitionHandle method, System.Reflection.MethodImportAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.ModuleReferenceHandle module);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMethodImport(valuetype System.Reflection.Metadata.MethodDefinitionHandle method, valuetype System.Reflection.MethodImportAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.ModuleReferenceHandle module) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodImport(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.MethodImportAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.ModuleReferenceHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMethodImport (method As MethodDefinitionHandle, attributes As MethodImportAttributes, name As StringHandle, module As ModuleReferenceHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMethodImport(System::Reflection::Metadata::MethodDefinitionHandle method, System::Reflection::MethodImportAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::ModuleReferenceHandle module);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodImport : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.MethodImportAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.ModuleReferenceHandle -&gt; unit" Usage="metadataBuilder.AddMethodImport (method, attributes, name, module)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="attributes" Type="System.Reflection.MethodImportAttributes" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="module" Type="System.Reflection.Metadata.ModuleReferenceHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="method">メソッド定義ハンドル。</param>
        <param name="attributes">メソッド インポート属性。</param>
        <param name="name">アンマネージ メソッドの名前。</param>
        <param name="module">アンマネージ メソッドが含まれているモジュール。</param>
        <summary>メソッド定義にインポート情報を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

メソッドのインポートは、対応するメソッドの定義と同じ順序で追加する必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodSemantics">
      <MemberSignature Language="C#" Value="public void AddMethodSemantics (System.Reflection.Metadata.EntityHandle association, System.Reflection.MethodSemanticsAttributes semantics, System.Reflection.Metadata.MethodDefinitionHandle methodDefinition);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMethodSemantics(valuetype System.Reflection.Metadata.EntityHandle association, valuetype System.Reflection.MethodSemanticsAttributes semantics, valuetype System.Reflection.Metadata.MethodDefinitionHandle methodDefinition) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSemantics(System.Reflection.Metadata.EntityHandle,System.Reflection.MethodSemanticsAttributes,System.Reflection.Metadata.MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMethodSemantics (association As EntityHandle, semantics As MethodSemanticsAttributes, methodDefinition As MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMethodSemantics(System::Reflection::Metadata::EntityHandle association, System::Reflection::MethodSemanticsAttributes semantics, System::Reflection::Metadata::MethodDefinitionHandle methodDefinition);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodSemantics : System.Reflection.Metadata.EntityHandle * System.Reflection.MethodSemanticsAttributes * System.Reflection.Metadata.MethodDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddMethodSemantics (association, semantics, methodDefinition)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="association" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="semantics" Type="System.Reflection.MethodSemanticsAttributes" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="methodDefinition" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="association">関連付けエンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.EventDefinitionHandle" />または <see cref="T:System.Reflection.Metadata.PropertyDefinitionHandle" />。</param>
        <param name="semantics">メソッドのセマンティクス属性。</param>
        <param name="methodDefinition">メソッド定義。</param>
        <summary>メソッド (getter、setter、adder など) をプロパティまたはイベントに関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは任意の順序で追加できます。 シリアル化されると、テーブルは自動的に並べ替えられます。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMethodSpecification">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.MethodSpecificationHandle AddMethodSpecification (System.Reflection.Metadata.EntityHandle method, System.Reflection.Metadata.BlobHandle instantiation);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.MethodSpecificationHandle AddMethodSpecification(valuetype System.Reflection.Metadata.EntityHandle method, valuetype System.Reflection.Metadata.BlobHandle instantiation) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddMethodSpecification(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMethodSpecification (method As EntityHandle, instantiation As BlobHandle) As MethodSpecificationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::MethodSpecificationHandle AddMethodSpecification(System::Reflection::Metadata::EntityHandle method, System::Reflection::Metadata::BlobHandle instantiation);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddMethodSpecification : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.MethodSpecificationHandle" Usage="metadataBuilder.AddMethodSpecification (method, instantiation)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.MethodSpecificationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="instantiation" Type="System.Reflection.Metadata.BlobHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="method">ジェネリック メソッド エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.MethodDefinitionHandle" /> または <see cref="T:System.Reflection.Metadata.MemberReferenceHandle" />。</param>
        <param name="instantiation">メソッドの汎用引数をエンコードするインスタンス化 BLOB。</param>
        <summary>メソッド仕様 (インスタンス化) を追加します。</summary>
        <returns>追加されたメソッド仕様のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ModuleDefinitionHandle AddModule (int generation, System.Reflection.Metadata.StringHandle moduleName, System.Reflection.Metadata.GuidHandle mvid, System.Reflection.Metadata.GuidHandle encId, System.Reflection.Metadata.GuidHandle encBaseId);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ModuleDefinitionHandle AddModule(int32 generation, valuetype System.Reflection.Metadata.StringHandle moduleName, valuetype System.Reflection.Metadata.GuidHandle mvid, valuetype System.Reflection.Metadata.GuidHandle encId, valuetype System.Reflection.Metadata.GuidHandle encBaseId) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModule(System.Int32,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle,System.Reflection.Metadata.GuidHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddModule (generation As Integer, moduleName As StringHandle, mvid As GuidHandle, encId As GuidHandle, encBaseId As GuidHandle) As ModuleDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ModuleDefinitionHandle AddModule(int generation, System::Reflection::Metadata::StringHandle moduleName, System::Reflection::Metadata::GuidHandle mvid, System::Reflection::Metadata::GuidHandle encId, System::Reflection::Metadata::GuidHandle encBaseId);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddModule : int * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.GuidHandle * System.Reflection.Metadata.GuidHandle -&gt; System.Reflection.Metadata.ModuleDefinitionHandle" Usage="metadataBuilder.AddModule (generation, moduleName, mvid, encId, encBaseId)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ModuleDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generation" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="moduleName" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="mvid" Type="System.Reflection.Metadata.GuidHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="encId" Type="System.Reflection.Metadata.GuidHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="encBaseId" Type="System.Reflection.Metadata.GuidHandle" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="generation">To be added.</param>
        <param name="moduleName">To be added.</param>
        <param name="mvid">To be added.</param>
        <param name="encId">To be added.</param>
        <param name="encBaseId">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddModuleReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ModuleReferenceHandle AddModuleReference (System.Reflection.Metadata.StringHandle moduleName);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ModuleReferenceHandle AddModuleReference(valuetype System.Reflection.Metadata.StringHandle moduleName) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddModuleReference(System.Reflection.Metadata.StringHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddModuleReference (moduleName As StringHandle) As ModuleReferenceHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ModuleReferenceHandle AddModuleReference(System::Reflection::Metadata::StringHandle moduleName);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddModuleReference : System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.ModuleReferenceHandle" Usage="metadataBuilder.AddModuleReference moduleName" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ModuleReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.Reflection.Metadata.StringHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="moduleName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddNestedType">
      <MemberSignature Language="C#" Value="public void AddNestedType (System.Reflection.Metadata.TypeDefinitionHandle type, System.Reflection.Metadata.TypeDefinitionHandle enclosingType);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNestedType(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, valuetype System.Reflection.Metadata.TypeDefinitionHandle enclosingType) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddNestedType(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.TypeDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNestedType (type As TypeDefinitionHandle, enclosingType As TypeDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNestedType(System::Reflection::Metadata::TypeDefinitionHandle type, System::Reflection::Metadata::TypeDefinitionHandle enclosingType);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddNestedType : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.TypeDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddNestedType (type, enclosingType)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="enclosingType" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="type">入れ子にされた型定義ハンドル。</param>
        <param name="enclosingType">外側の型定義ハンドル。</param>
        <summary>指定された型定義に対する入れ子の関係を定義します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは、対応する入れ子にされた型定義と同じ順序で追加する必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ParameterHandle AddParameter (System.Reflection.ParameterAttributes attributes, System.Reflection.Metadata.StringHandle name, int sequenceNumber);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ParameterHandle AddParameter(valuetype System.Reflection.ParameterAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, int32 sequenceNumber) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddParameter(System.Reflection.ParameterAttributes,System.Reflection.Metadata.StringHandle,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParameter (attributes As ParameterAttributes, name As StringHandle, sequenceNumber As Integer) As ParameterHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ParameterHandle AddParameter(System::Reflection::ParameterAttributes attributes, System::Reflection::Metadata::StringHandle name, int sequenceNumber);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddParameter : System.Reflection.ParameterAttributes * System.Reflection.Metadata.StringHandle * int -&gt; System.Reflection.Metadata.ParameterHandle" Usage="metadataBuilder.AddParameter (attributes, name, sequenceNumber)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ParameterHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="sequenceNumber" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">パラメーター属性。</param>
        <param name="name">任意。 パラメーターの名前。</param>
        <param name="sequenceNumber">パラメーターのシーケンス番号。 値 0 は、所有者メソッドの戻り値の型を表します。その後、そのパラメーターには 1 から順に番号が付けられます。</param>
        <summary>パラメーター定義を追加します。</summary>
        <returns>追加されたパラメーターのハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.PropertyDefinitionHandle AddProperty (System.Reflection.PropertyAttributes attributes, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.PropertyDefinitionHandle AddProperty(valuetype System.Reflection.PropertyAttributes attributes, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddProperty(System.Reflection.PropertyAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProperty (attributes As PropertyAttributes, name As StringHandle, signature As BlobHandle) As PropertyDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::PropertyDefinitionHandle AddProperty(System::Reflection::PropertyAttributes attributes, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Reflection.PropertyAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.PropertyDefinitionHandle" Usage="metadataBuilder.AddProperty (attributes, name, signature)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.PropertyDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">プロパティ属性。</param>
        <param name="name">プロパティ名。</param>
        <param name="signature">プロパティのシグネチャ。</param>
        <summary>プロパティ定義を追加します。</summary>
        <returns>追加されたプロパティ定義のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyMap">
      <MemberSignature Language="C#" Value="public void AddPropertyMap (System.Reflection.Metadata.TypeDefinitionHandle declaringType, System.Reflection.Metadata.PropertyDefinitionHandle propertyList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyMap(valuetype System.Reflection.Metadata.TypeDefinitionHandle declaringType, valuetype System.Reflection.Metadata.PropertyDefinitionHandle propertyList) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddPropertyMap(System.Reflection.Metadata.TypeDefinitionHandle,System.Reflection.Metadata.PropertyDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyMap (declaringType As TypeDefinitionHandle, propertyList As PropertyDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyMap(System::Reflection::Metadata::TypeDefinitionHandle declaringType, System::Reflection::Metadata::PropertyDefinitionHandle propertyList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddPropertyMap : System.Reflection.Metadata.TypeDefinitionHandle * System.Reflection.Metadata.PropertyDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddPropertyMap (declaringType, propertyList)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaringType" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="propertyList" Type="System.Reflection.Metadata.PropertyDefinitionHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="declaringType">To be added.</param>
        <param name="propertyList">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStandaloneSignature">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StandaloneSignatureHandle AddStandaloneSignature (System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.StandaloneSignatureHandle AddStandaloneSignature(valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStandaloneSignature(System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddStandaloneSignature (signature As BlobHandle) As StandaloneSignatureHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::StandaloneSignatureHandle AddStandaloneSignature(System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddStandaloneSignature : System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.StandaloneSignatureHandle" Usage="metadataBuilder.AddStandaloneSignature signature" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StandaloneSignatureHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStateMachineMethod">
      <MemberSignature Language="C#" Value="public void AddStateMachineMethod (System.Reflection.Metadata.MethodDefinitionHandle moveNextMethod, System.Reflection.Metadata.MethodDefinitionHandle kickoffMethod);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddStateMachineMethod(valuetype System.Reflection.Metadata.MethodDefinitionHandle moveNextMethod, valuetype System.Reflection.Metadata.MethodDefinitionHandle kickoffMethod) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddStateMachineMethod(System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddStateMachineMethod (moveNextMethod As MethodDefinitionHandle, kickoffMethod As MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddStateMachineMethod(System::Reflection::Metadata::MethodDefinitionHandle moveNextMethod, System::Reflection::Metadata::MethodDefinitionHandle kickoffMethod);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddStateMachineMethod : System.Reflection.Metadata.MethodDefinitionHandle * System.Reflection.Metadata.MethodDefinitionHandle -&gt; unit" Usage="metadataBuilder.AddStateMachineMethod (moveNextMethod, kickoffMethod)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveNextMethod" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="kickoffMethod" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="moveNextMethod">ステート マシンの <see langword="MoveNext" /> メソッドのハンドル (コンパイラによって生成されるメソッド)。</param>
        <param name="kickoffMethod">キックオフ メソッドのハンドル (ユーザー定義の反復子/非同期メソッド)。</param>
        <summary>ステート マシン メソッドのデバッグ情報を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは、対応する <see langword="MoveNext" /> メソッド定義と同じ順序で追加する必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeDefinition">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeDefinitionHandle AddTypeDefinition (System.Reflection.TypeAttributes attributes, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name, System.Reflection.Metadata.EntityHandle baseType, System.Reflection.Metadata.FieldDefinitionHandle fieldList, System.Reflection.Metadata.MethodDefinitionHandle methodList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeDefinitionHandle AddTypeDefinition(valuetype System.Reflection.TypeAttributes attributes, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name, valuetype System.Reflection.Metadata.EntityHandle baseType, valuetype System.Reflection.Metadata.FieldDefinitionHandle fieldList, valuetype System.Reflection.Metadata.MethodDefinitionHandle methodList) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeDefinition(System.Reflection.TypeAttributes,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.FieldDefinitionHandle,System.Reflection.Metadata.MethodDefinitionHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeDefinition (attributes As TypeAttributes, namespace As StringHandle, name As StringHandle, baseType As EntityHandle, fieldList As FieldDefinitionHandle, methodList As MethodDefinitionHandle) As TypeDefinitionHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeDefinitionHandle AddTypeDefinition(System::Reflection::TypeAttributes attributes, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name, System::Reflection::Metadata::EntityHandle baseType, System::Reflection::Metadata::FieldDefinitionHandle fieldList, System::Reflection::Metadata::MethodDefinitionHandle methodList);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddTypeDefinition : System.Reflection.TypeAttributes * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.FieldDefinitionHandle * System.Reflection.Metadata.MethodDefinitionHandle -&gt; System.Reflection.Metadata.TypeDefinitionHandle" Usage="metadataBuilder.AddTypeDefinition (attributes, namespace, name, baseType, fieldList, methodList)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeDefinitionHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.TypeAttributes" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="baseType" Type="System.Reflection.Metadata.EntityHandle" Index="3" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="fieldList" Type="System.Reflection.Metadata.FieldDefinitionHandle" Index="4" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="methodList" Type="System.Reflection.Metadata.MethodDefinitionHandle" Index="5" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="attributes">型属性。</param>
        <param name="namespace">型の名前空間。</param>
        <param name="name">型名。</param>
        <param name="baseType">基本データ型エンティティ ハンドル。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />、または <see langword="null" />。</param>
        <param name="fieldList">型でフィールドが宣言されている場合は、これは最初のハンドルに設定します。 それ以外の場合は、次の型定義で宣言されている最初のフィールドのハンドルに設定します。 モジュール内のフィールドを定義する型がない場合は、<see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.FieldDefinitionHandle(1)" /> とします。</param>
        <param name="methodList">型でメソッドが宣言されている場合は、最初のハンドルとします。 それ以外の場合は、次の型定義で宣言されている最初のメソッドのハンドルとします。 モジュール内のメソッドを定義する型がない場合は、<see langword="System.Reflection.Metadata.Ecma335.MetadataTokens.MethodDefinitionHandle(1)" /> とします。</param>
        <summary>型定義を追加します。</summary>
        <returns>追加された型定義のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeLayout">
      <MemberSignature Language="C#" Value="public void AddTypeLayout (System.Reflection.Metadata.TypeDefinitionHandle type, ushort packingSize, uint size);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTypeLayout(valuetype System.Reflection.Metadata.TypeDefinitionHandle type, unsigned int16 packingSize, unsigned int32 size) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeLayout(System.Reflection.Metadata.TypeDefinitionHandle,System.UInt16,System.UInt32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddTypeLayout (type As TypeDefinitionHandle, packingSize As UShort, size As UInteger)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTypeLayout(System::Reflection::Metadata::TypeDefinitionHandle type, System::UInt16 packingSize, System::UInt32 size);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddTypeLayout : System.Reflection.Metadata.TypeDefinitionHandle * uint16 * uint32 -&gt; unit" Usage="metadataBuilder.AddTypeLayout (type, packingSize, size)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.Metadata.TypeDefinitionHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="packingSize" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="size" Type="System.UInt32" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="type">型定義。</param>
        <param name="packingSize">フィールドを型インスタンス内の、<paramref name="packingSize" /> の倍数であるバイト アドレスか、またはそのフィールド型の自然整列のいずれか小さい方に配置する必要があることを指定します。 この値は次のいずれかにする必要があります。0、1、2、4、8、16、32、64、または 128。 値 0 は、使用されているパッキング サイズが現在のプラットフォームの既定値と一致する必要があることを示します。</param>
        <param name="size">型インスタンスの最小サイズを示し、埋め込みを可能にすることを目的としています。 割り当てられるメモリの量は、レイアウトと <paramref name="size" /> から計算されたサイズの最大値です。 このディレクティブが値型に適用される場合、サイズは 1 MB 未満になることに注意してください。</param>
        <summary>型定義の型レイアウトを定義します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

エントリは、対応する型定義と同じ順序で追加する必要があります。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeReference">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeReferenceHandle AddTypeReference (System.Reflection.Metadata.EntityHandle resolutionScope, System.Reflection.Metadata.StringHandle namespace, System.Reflection.Metadata.StringHandle name);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeReferenceHandle AddTypeReference(valuetype System.Reflection.Metadata.EntityHandle resolutionScope, valuetype System.Reflection.Metadata.StringHandle namespace, valuetype System.Reflection.Metadata.StringHandle name) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeReference(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.StringHandle,System.Reflection.Metadata.StringHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeReference (resolutionScope As EntityHandle, namespace As StringHandle, name As StringHandle) As TypeReferenceHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeReferenceHandle AddTypeReference(System::Reflection::Metadata::EntityHandle resolutionScope, System::Reflection::Metadata::StringHandle namespace, System::Reflection::Metadata::StringHandle name);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddTypeReference : System.Reflection.Metadata.EntityHandle * System.Reflection.Metadata.StringHandle * System.Reflection.Metadata.StringHandle -&gt; System.Reflection.Metadata.TypeReferenceHandle" Usage="metadataBuilder.AddTypeReference (resolutionScope, namespace, name)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeReferenceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolutionScope" Type="System.Reflection.Metadata.EntityHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="namespace" Type="System.Reflection.Metadata.StringHandle" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="name" Type="System.Reflection.Metadata.StringHandle" Index="2" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="resolutionScope">対象の型を宣言するエンティティ。次のいずれかとなります: <see cref="T:System.Reflection.Metadata.ModuleDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.ModuleReferenceHandle" />、<see cref="T:System.Reflection.Metadata.AssemblyReferenceHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" />、または <see langword="null" />。</param>
        <param name="namespace">型参照の名前空間。</param>
        <param name="name">型参照の名前。</param>
        <summary>型参照を追加します。</summary>
        <returns>追加した型参照のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTypeSpecification">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.TypeSpecificationHandle AddTypeSpecification (System.Reflection.Metadata.BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.TypeSpecificationHandle AddTypeSpecification(valuetype System.Reflection.Metadata.BlobHandle signature) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.AddTypeSpecification(System.Reflection.Metadata.BlobHandle)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTypeSpecification (signature As BlobHandle) As TypeSpecificationHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::TypeSpecificationHandle AddTypeSpecification(System::Reflection::Metadata::BlobHandle signature);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.AddTypeSpecification : System.Reflection.Metadata.BlobHandle -&gt; System.Reflection.Metadata.TypeSpecificationHandle" Usage="metadataBuilder.AddTypeSpecification signature" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.TypeSpecificationHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signature" Type="System.Reflection.Metadata.BlobHandle" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="signature">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (byte[] value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(unsigned int8[] value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Byte[])" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As Byte()) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(cli::array &lt;System::Byte&gt; ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : byte[] -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">BLOB が格納されている配列。</param>
        <summary>指定された BLOB を BLOB ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存の BLOB のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (System.Collections.Immutable.ImmutableArray&lt;byte&gt; value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Collections.Immutable.ImmutableArray{System.Byte})" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As ImmutableArray(Of Byte)) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">BLOB が格納されている配列。</param>
        <summary>バイト配列の指定された BLOB を BLOB ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存の BLOB のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlob (System.Reflection.Metadata.BlobBuilder value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlob(class System.Reflection.Metadata.BlobBuilder value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlob(System.Reflection.Metadata.BlobBuilder)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlob (value As BlobBuilder) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlob(System::Reflection::Metadata::BlobBuilder ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlob : System.Reflection.Metadata.BlobBuilder -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlob value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Reflection.Metadata.BlobBuilder" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">BLOB が含まれている BLOB ビルダー インスタンス。</param>
        <summary>不変バイト配列の指定された BLOB を BLOB ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存の BLOB のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlobUTF16">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF16 (string value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF16(string value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF16(System.String)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlobUTF16 (value As String) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddBlobUTF16(System::String ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlobUTF16 : string -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlobUTF16 value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">追加する文字列。</param>
        <summary>UTF-16 エンコードを使用して文字列を BLOB にエンコードし、BLOB ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存の BLOB のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddBlobUTF8">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF8 (string value, bool allowUnpairedSurrogates = true);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddBlobUTF8(string value, bool allowUnpairedSurrogates) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddBlobUTF8(System.String,System.Boolean)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddBlobUTF8 (value As String, Optional allowUnpairedSurrogates As Boolean = true) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddBlobUTF8 : string * bool -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddBlobUTF8 (value, allowUnpairedSurrogates)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="allowUnpairedSurrogates" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">加算する値。</param>
        <param name="allowUnpairedSurrogates"><see langword="true" /> の場合、ペアになっていないサロゲートを指定どおりエンコードします。<see langword="false" /> の場合、そのサロゲートを U+FFFD 文字で置換します。</param>
        <summary>UTF-8 エンコードを使用して文字列を BLOB にエンコードし、BLOB ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存の BLOB のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddConstantBlob">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddConstantBlob (object value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddConstantBlob(object value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddConstantBlob(System.Object)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddConstantBlob (value As Object) As BlobHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddConstantBlob(System::Object ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddConstantBlob : obj -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddConstantBlob value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">追加する定数値。</param>
        <summary>定数値を BLOB にエンコードし、BLOB ヒープに追加します (まだ存在しない場合)。 UTF-16 を使用して文字列定数をエンコードします。</summary>
        <returns>追加された、または既存の BLOB のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddDocumentName">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobHandle GetOrAddDocumentName (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.BlobHandle GetOrAddDocumentName(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddDocumentName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddDocumentName (value As String) As BlobHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::BlobHandle GetOrAddDocumentName(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetOrAddDocumentName : string -&gt; System.Reflection.Metadata.BlobHandle" Usage="metadataBuilder.GetOrAddDocumentName value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">追加するドキュメントの名前。</param>
        <summary>デバッグ ドキュメント名をエンコードし、BLOB ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存のドキュメント名 BLOB のハンドル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

ドキュメント名 blob の詳細については、次を参照してください: https://github.com/dotnet/corefx/blob/master/src/System.Reflection.Metadata/specs/PortablePdb-Metadata.md#DocumentNameBlob

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddGuid">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.GuidHandle GetOrAddGuid (Guid guid);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.GuidHandle GetOrAddGuid(valuetype System.Guid guid) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddGuid(System.Guid)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::GuidHandle GetOrAddGuid(Guid guid);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddGuid : Guid -&gt; System.Reflection.Metadata.GuidHandle" Usage="metadataBuilder.GetOrAddGuid guid" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.GuidHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.Guid" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="guid">追加する GUID。</param>
        <summary>指定された GUID を GUID ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存の GUID のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle GetOrAddString (string value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.StringHandle GetOrAddString(string value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddString(System.String)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddString (value As String) As StringHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::StringHandle GetOrAddString(System::String ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddString : string -&gt; System.Reflection.Metadata.StringHandle" Usage="metadataBuilder.GetOrAddString value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">追加する文字列。</param>
        <summary>指定された文字列を文字列ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存の文字列のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrAddUserString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.UserStringHandle GetOrAddUserString (string value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.UserStringHandle GetOrAddUserString(string value) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetOrAddUserString(System.String)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrAddUserString (value As String) As UserStringHandle" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::UserStringHandle GetOrAddUserString(System::String ^ value);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetOrAddUserString : string -&gt; System.Reflection.Metadata.UserStringHandle" Usage="metadataBuilder.GetOrAddUserString value" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.UserStringHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value">追加する文字列。</param>
        <summary>指定された文字列をユーザー文字列ヒープに追加します (まだ存在しない場合)。</summary>
        <returns>追加された、または既存の文字列のハンドル。 この値は <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" /> で使用できます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCount">
      <MemberSignature Language="C#" Value="public int GetRowCount (System.Reflection.Metadata.Ecma335.TableIndex table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRowCount(valuetype System.Reflection.Metadata.Ecma335.TableIndex table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCount(System.Reflection.Metadata.Ecma335.TableIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCount (table As TableIndex) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRowCount(System::Reflection::Metadata::Ecma335::TableIndex table);" />
      <MemberSignature Language="F#" Value="member this.GetRowCount : System.Reflection.Metadata.Ecma335.TableIndex -&gt; int" Usage="metadataBuilder.GetRowCount table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Reflection.Metadata.Ecma335.TableIndex" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="table">テーブル インデックス。</param>
        <summary>指定されたテーブル内の現在の項目数を返します。</summary>
        <returns>テーブル内の項目の数。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowCounts">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;int&gt; GetRowCounts ();" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;int32&gt; GetRowCounts() cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.GetRowCounts" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowCounts () As ImmutableArray(Of Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;int&gt; GetRowCounts();" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.GetRowCounts : unit -&gt; System.Collections.Immutable.ImmutableArray&lt;int&gt;" Usage="metadataBuilder.GetRowCounts " FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>各テーブル内の現在の項目数を返します。</summary>
        <returns><see cref="F:System.Reflection.Metadata.Ecma335.MetadataTokens.TableCount" /> サイズの配列。各項目には、対応するテーブルの現在の行数が格納されています。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReserveGuid">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt; ReserveGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ReservedBlob`1&lt;valuetype System.Reflection.Metadata.GuidHandle&gt; ReserveGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveGuid () As ReservedBlob(Of GuidHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ReservedBlob&lt;System::Reflection::Metadata::GuidHandle&gt; ReserveGuid();" />
      <MemberSignature Language="F#" Value="member this.ReserveGuid : unit -&gt; System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt;" Usage="metadataBuilder.ReserveGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.GuidHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GUID の GUID ヒープの領域を予約します。</summary>
        <returns>予約済み GUID と、ヒープに格納されている GUID BLOB を表す <see cref="T:System.Reflection.Metadata.Blob" /> のハンドル。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReserveUserString">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt; ReserveUserString (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.ReservedBlob`1&lt;valuetype System.Reflection.Metadata.UserStringHandle&gt; ReserveUserString(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.ReserveUserString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReserveUserString (length As Integer) As ReservedBlob(Of UserStringHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::ReservedBlob&lt;System::Reflection::Metadata::UserStringHandle&gt; ReserveUserString(int length);" />
      <MemberSignature Language="F#" Value="member this.ReserveUserString : int -&gt; System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt;" Usage="metadataBuilder.ReserveUserString length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.ReservedBlob&lt;System.Reflection.Metadata.UserStringHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="length">予約する文字数。</param>
        <summary>指定された長さの文字列に対して、ユーザー文字列ヒープの領域を予約します。</summary>
        <returns>予約されたユーザー文字列と、ユーザー文字列 BLOB 全体を表す <see cref="T:System.Reflection.Metadata.Blob" /> (長さと末端文字を含む) のハンドル。 ハンドルは <see cref="M:System.Reflection.Metadata.Ecma335.InstructionEncoder.LoadString(System.Reflection.Metadata.UserStringHandle)" /> で使用できます。
BLOB の内容を入力するには、<see cref="M:System.Reflection.Metadata.BlobWriter.WriteUserString(System.String)" /> を使用します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCapacity">
      <MemberSignature Language="C#" Value="public void SetCapacity (System.Reflection.Metadata.Ecma335.HeapIndex heap, int byteCount);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapacity(valuetype System.Reflection.Metadata.Ecma335.HeapIndex heap, int32 byteCount) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.HeapIndex,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCapacity (heap As HeapIndex, byteCount As Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCapacity(System::Reflection::Metadata::Ecma335::HeapIndex heap, int byteCount);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.SetCapacity : System.Reflection.Metadata.Ecma335.HeapIndex * int -&gt; unit" Usage="metadataBuilder.SetCapacity (heap, byteCount)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="heap" Type="System.Reflection.Metadata.Ecma335.HeapIndex" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="heap">ヒープ インデックス。</param>
        <param name="byteCount">バイト数。</param>
        <summary>指定されたヒープの容量を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

このメソッドは、おおよそのバイト数が事前にわかっている場合に割り当てを減らすために使用します。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCapacity">
      <MemberSignature Language="C#" Value="public void SetCapacity (System.Reflection.Metadata.Ecma335.TableIndex table, int rowCount);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCapacity(valuetype System.Reflection.Metadata.Ecma335.TableIndex table, int32 rowCount) cil managed" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.MetadataBuilder.SetCapacity(System.Reflection.Metadata.Ecma335.TableIndex,System.Int32)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCapacity (table As TableIndex, rowCount As Integer)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCapacity(System::Reflection::Metadata::Ecma335::TableIndex table, int rowCount);" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberSignature Language="F#" Value="member this.SetCapacity : System.Reflection.Metadata.Ecma335.TableIndex * int -&gt; unit" Usage="metadataBuilder.SetCapacity (table, rowCount)" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Reflection.Metadata.Ecma335.TableIndex" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
        <Parameter Name="rowCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="table">テーブル インデックス。</param>
        <param name="rowCount">表の行数。</param>
        <summary>指定されたテーブルの容量を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

このメソッドは、行の概数が事前にわかっている場合に割り当てを減らすために使用します。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
