<Type Name="ReceiveCompletedEventHandler" FullName="System.Messaging.ReceiveCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5808f70ef136e9503c3389c3af403edc295bbade" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78822638" /></Metadata><TypeSignature Language="C#" Value="public delegate void ReceiveCompletedEventHandler(object sender, ReceiveCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ReceiveCompletedEventHandler extends System.MulticastDelegate" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ReceiveCompletedEventHandler(sender As Object, e As ReceiveCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ReceiveCompletedEventHandler(System::Object ^ sender, ReceiveCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ReceiveCompletedEventHandler = delegate of obj * ReceiveCompletedEventArgs -&gt; unit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ReceiveCompletedEventHandler extends System.MulticastDelegate" FrameworkAlternate="xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Messaging.ReceiveCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="4947f-101">イベントのソースである <see cref="T:System.Messaging.MessageQueue" />。</span><span class="sxs-lookup"><span data-stu-id="4947f-101">The source of the event, the <see cref="T:System.Messaging.MessageQueue" />.</span></span></param>
    <param name="e"><span data-ttu-id="4947f-102">イベント データを含んでいる <see cref="T:System.Messaging.ReceiveCompletedEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="4947f-102">A <see cref="T:System.Messaging.ReceiveCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="4947f-103"><see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> の <see cref="T:System.Messaging.MessageQueue" /> イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="4947f-103">Represents the method that will handle the <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> event of a <see cref="T:System.Messaging.MessageQueue" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4947f-104"><xref:System.Messaging.ReceiveCompletedEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="4947f-104">When you create a <xref:System.Messaging.ReceiveCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="4947f-105">イベント ハンドラーにイベントを関連付けるには、イベントにデリゲートのインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="4947f-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="4947f-106">イベント ハンドラーは、デリゲートを削除しない限り、イベントが発生するたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4947f-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="4947f-107">イベントハンドラーデリゲートの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4947f-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4947f-108">次のコード例は、イベントハンドラー (`MyReceiveCompleted`) のイベントデリゲート (<xref:System.Messaging.ReceiveCompletedEventHandler>) を作成し、それを <xref:System.Messaging.MessageQueue.ReceiveCompleted?displayProperty=nameWithType> イベントに関連付ける方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4947f-108">The following code example illustrates how to create an event delegate (<xref:System.Messaging.ReceiveCompletedEventHandler>) for the event handler (`MyReceiveCompleted`) and associate it with the <xref:System.Messaging.MessageQueue.ReceiveCompleted?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="4947f-109">イベントハンドラーは、キューからメッセージを受信し、そのラベルを画面に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="4947f-109">The event handler receives a message from a queue, and writes its label to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventArgs" />
  </Docs>
</Type>
