<Type Name="SafeNCryptHandle" FullName="Microsoft.Win32.SafeHandles.SafeNCryptHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a6965a1677deb5d15a261ef46bb77f038dd71a7" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82482228" /></Metadata><TypeSignature Language="C#" Value="public abstract class SafeNCryptHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SafeNCryptHandle extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeNCryptHandle&#xA;Inherits SafeHandleZeroOrMinusOneIsInvalid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeNCryptHandle abstract : Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type SafeNCryptHandle = class&#xA;    inherit SafeHandleZeroOrMinusOneIsInvalid" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class SafeNCryptHandle : System.Runtime.InteropServices.SafeHandle" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SafeNCryptHandle extends System.Runtime.InteropServices.SafeHandle" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeNCryptHandle&#xA;Inherits SafeHandle" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeNCryptHandle abstract : System::Runtime::InteropServices::SafeHandle" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <TypeSignature Language="F#" Value="type SafeNCryptHandle = class&#xA;    inherit SafeHandle" FrameworkAlternate="netcore-1.0;netcore-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.3.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-1.0;netcore-1.1">System.Runtime.InteropServices.SafeHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="440fe-101">CNG (Cryptography Next Generation) オブジェクトで使用できるセーフ ハンドルを提供します。</span><span class="sxs-lookup"><span data-stu-id="440fe-101">Provides a safe handle that can be used by Cryptography Next Generation (CNG) objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
      
## Remarks


<span data-ttu-id="440fe-102">このクラスは、これらのハンドルを正しく複製して解放し、ネイティブ複製をシミュレートするロジックをラップします。</span><span class="sxs-lookup"><span data-stu-id="440fe-102">This class wraps up the logic to correctly duplicate and free these handles to simulate a native duplication.</span></span>
            
<span data-ttu-id="440fe-103">開いている各ハンドルオブジェクトは、次の3つの状態のいずれかであると考えることができます。</span><span class="sxs-lookup"><span data-stu-id="440fe-103">Each open handle object can be thought of as being in one of three states:</span></span>

- <span data-ttu-id="440fe-104">マーシャラーを使用して作成された**所有者**(従来のスタイルセーフハンドル)。</span><span class="sxs-lookup"><span data-stu-id="440fe-104">**Owner** - Created via the marshaler, traditional style safe handle.</span></span> <span data-ttu-id="440fe-105">特に、特定のネイティブハンドルに存在する所有者ハンドルは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="440fe-105">Notably, only one owner handle exists for a given native handle.</span></span>
- <span data-ttu-id="440fe-106">ホルダー状態のハンドルの**重複**するポイント。</span><span class="sxs-lookup"><span data-stu-id="440fe-106">**Duplicate** - Points at a handle in the Holder state.</span></span> <span data-ttu-id="440fe-107">重複状態のハンドルを解放すると、は、ネイティブハンドルのリリースではなく、ホルダーの参照カウントをデクリメントするだけです。</span><span class="sxs-lookup"><span data-stu-id="440fe-107">Releasing a handle in the duplicate state results only in decrementing the reference count of the holder, not in a release of the native handle.</span></span>
- <span data-ttu-id="440fe-108">**ホルダー** -はネイティブハンドルに保持され、重複状態のハンドルによって参照されます。</span><span class="sxs-lookup"><span data-stu-id="440fe-108">**Holder** - Holds onto a native handle and is referenced by handles in the duplicate state.</span></span> <span data-ttu-id="440fe-109">すべての重複するハンドルが閉じられると、ホルダーハンドルはネイティブハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="440fe-109">When all duplicate handles are closed, the holder handle releases the native handle.</span></span> <span data-ttu-id="440fe-110">ホルダーハンドルは完了しません。これは、重複するハンドルとホルダーハンドルのファイナライザーが競合するためです。</span><span class="sxs-lookup"><span data-stu-id="440fe-110">A holder handle will never be finalized, since this results in a race between the finalizers of the duplicate handles and the holder handle.</span></span> <span data-ttu-id="440fe-111">代わりに、すべての重複するハンドルを完了させ、参照カウントを0にデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="440fe-111">Instead, it relies upon all of the duplicate handles to be finalized and decrement the ref count to zero.</span></span> <span data-ttu-id="440fe-112">ホルダーハンドルのインスタンスは、重複するハンドル以外では参照されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="440fe-112">Instances of a holder handle should never be referenced by anything but a duplicate handle.</span></span>

      ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeNCryptHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeNCryptHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="440fe-113"><see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="440fe-113">Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeNCryptHandle (IntPtr handle, System.Runtime.InteropServices.SafeHandle parentHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int handle, class System.Runtime.InteropServices.SafeHandle parentHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (handle As IntPtr, parentHandle As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeNCryptHandle(IntPtr handle, System::Runtime::InteropServices::SafeHandle ^ parentHandle);" />
      <MemberSignature Language="F#" Value="new Microsoft.Win32.SafeHandles.SafeNCryptHandle : nativeint * System.Runtime.InteropServices.SafeHandle -&gt; Microsoft.Win32.SafeHandles.SafeNCryptHandle" Usage="new Microsoft.Win32.SafeHandles.SafeNCryptHandle (handle, parentHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parentHandle" Type="System.Runtime.InteropServices.SafeHandle" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="440fe-114">使用する既存のハンドル。</span><span class="sxs-lookup"><span data-stu-id="440fe-114">The pre-existing handle to use.</span></span> <span data-ttu-id="440fe-115"><see cref="F:System.IntPtr.Zero" /> を使用して無効なハンドルを返します。</span><span class="sxs-lookup"><span data-stu-id="440fe-115">Using <see cref="F:System.IntPtr.Zero" /> returns an invalid handle.</span></span></param>
        <param name="parentHandle"><span data-ttu-id="440fe-116">この <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> の親ハンドル。</span><span class="sxs-lookup"><span data-stu-id="440fe-116">The parent handle of this <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</span></span></param>
        <summary><span data-ttu-id="440fe-117"><see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> クラスの新しいインスタンスを生成します。</span><span class="sxs-lookup"><span data-stu-id="440fe-117">Instantiates a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="440fe-118"><paramref name="parentHandle" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="440fe-118"><paramref name="parentHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="440fe-119"><paramref name="parentHandle" /> は閉じています。</span><span class="sxs-lookup"><span data-stu-id="440fe-119"><paramref name="parentHandle" /> is closed.</span></span>  
  
<span data-ttu-id="440fe-120">- または -</span><span class="sxs-lookup"><span data-stu-id="440fe-120">-or-</span></span> 
 <span data-ttu-id="440fe-121"><paramref name="parentHandle" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="440fe-121"><paramref name="parentHandle" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvalid : bool" Usage="Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="440fe-122">ハンドルが無効かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="440fe-122">Gets a value that indicates whether the handle is invalid.</span></span></summary>
        <value><span data-ttu-id="440fe-123">ハンドルが無効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="440fe-123"><see langword="true" /> if the handle is not valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="protected override bool ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReleaseHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ReleaseHandle();" />
      <MemberSignature Language="F#" Value="override this.ReleaseHandle : unit -&gt; bool" Usage="safeNCryptHandle.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="440fe-124">CNG (Cryptography Next Generation) オブジェクトで使用されるハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="440fe-124">Releases a handle used by a Cryptography Next Generation (CNG) object.</span></span></summary>
        <returns><span data-ttu-id="440fe-125">ハンドルが正常に解放された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="440fe-125"><see langword="true" /> if the handle is released successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="440fe-126">重複と同様に、ハンドルを解放すると、ハンドルの状態に基づいてさまざまな操作が実行されます。</span><span class="sxs-lookup"><span data-stu-id="440fe-126">Similar to duplication, releasing a handle performs different operations based upon the state of the handle.</span></span>
            
<span data-ttu-id="440fe-127">ParentHandle 値を使用して構築されたインスタンスは、parentHandle オブジェクトでのみ DangerousRelease を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="440fe-127">An instance that was constructed with a parentHandle value will only call DangerousRelease on the parentHandle object.</span></span> <span data-ttu-id="440fe-128">それ以外の場合、動作は所有権の状態によって決まります。</span><span class="sxs-lookup"><span data-stu-id="440fe-128">Otherwise, the behavior is dictated by the ownership state.</span></span>

- <span data-ttu-id="440fe-129">**Owner** -release P/Invoke メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="440fe-129">**Owner** - Simply calls the release P/Invoke method.</span></span>
- <span data-ttu-id="440fe-130">**Duplicate** -現在の所有者の参照カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="440fe-130">**Duplicate** - Decrements the reference count of the current holder.</span></span>
- <span data-ttu-id="440fe-131">[**所有**者]-リリース P/Invoke を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="440fe-131">**Holder** - Calls the release P/Invoke.</span></span> <span data-ttu-id="440fe-132">ホルダーの ReleaseHandle は、参照カウントが0であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="440fe-132">Note that ReleaseHandle on a holder implies a reference count of zero.</span></span>

          ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ReleaseNativeHandle">
      <MemberSignature Language="C#" Value="protected abstract bool ReleaseNativeHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ReleaseNativeHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReleaseNativeHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ReleaseNativeHandle();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseNativeHandle : unit -&gt; bool" Usage="safeNCryptHandle.ReleaseNativeHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="440fe-133">CNG (Cryptography Next Generation) オブジェクトで使用されるネイティブ ハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="440fe-133">Releases a native handle used by a Cryptography Next Generation (CNG) object.</span></span></summary>
        <returns><span data-ttu-id="440fe-134">ハンドルが正常に解放された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="440fe-134"><see langword="true" /> if the handle is released successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
