<Type Name="SafeHandleMinusOneIsInvalid" FullName="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef8d75a54ff98fc98c55fc13b079f51f7957884e" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83451674" /></Metadata><TypeSignature Language="C#" Value="public abstract class SafeHandleMinusOneIsInvalid : System.Runtime.InteropServices.SafeHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SafeHandleMinusOneIsInvalid extends System.Runtime.InteropServices.SafeHandle" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeHandleMinusOneIsInvalid&#xA;Inherits SafeHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeHandleMinusOneIsInvalid abstract : System::Runtime::InteropServices::SafeHandle" />
  <TypeSignature Language="F#" Value="type SafeHandleMinusOneIsInvalid = class&#xA;    inherit SafeHandle" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.SafeHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="22f11-101">値 -1 が無効なハンドルである Win32 セーフ ハンドルの実装の基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="22f11-101">Provides a base class for Win32 safe handle implementations in which the value of -1 indicates an invalid handle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f11-102">このクラスは <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType> クラスから派生したクラスです。</span><span class="sxs-lookup"><span data-stu-id="22f11-102">This class derives from the <xref:System.Runtime.InteropServices.SafeHandle?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="22f11-103">この例では、値-1 を使用する無効なハンドルの形式について説明します。</span><span class="sxs-lookup"><span data-stu-id="22f11-103">It describes the format of an invalid handle that uses a value of -1.</span></span> <span data-ttu-id="22f11-104">このクラス (ファイルハンドルやレジストリハンドルなど) をさらに派生することで、これをさらに特殊化することができます。</span><span class="sxs-lookup"><span data-stu-id="22f11-104">Further derivations of this class (for example, file or registry handles) can specialize this further.</span></span> <span data-ttu-id="22f11-105"><xref:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid>から派生したクラスの例については、<xref:Microsoft.Win32.SafeHandles.SafeFileHandle> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f11-105">See the <xref:Microsoft.Win32.SafeHandles.SafeFileHandle> class for an example of a class that derives from <xref:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="22f11-106">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="22f11-106">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="22f11-107">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="22f11-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="22f11-108">直接的に型を破棄するには、`try`-`catch` ブロック内で <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="22f11-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`-`catch` block.</span></span> <span data-ttu-id="22f11-109">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="22f11-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="22f11-110">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="22f11-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
    <altmember cref="T:Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeHandleMinusOneIsInvalid (bool ownsHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool ownsHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (ownsHandle As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeHandleMinusOneIsInvalid(bool ownsHandle);" />
      <MemberSignature Language="F#" Value="new Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid : bool -&gt; Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" Usage="new Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid ownsHandle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ownsHandle" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownsHandle"><span data-ttu-id="22f11-111">終了処理中にハンドルを確実にリリースする場合は <see langword="true" />。信頼性の高いリリースを実行しない場合は <see langword="false" /> (お勧めしません)。</span><span class="sxs-lookup"><span data-stu-id="22f11-111"><see langword="true" /> to reliably release the handle during the finalization phase; <see langword="false" /> to prevent reliable release (not recommended).</span></span></param>
        <summary><span data-ttu-id="22f11-112"><see cref="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" /> クラスの新しいインスタンスを初期化し、ハンドルを安全に解放するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="22f11-112">Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid" /> class, specifying whether the handle is to be reliably released.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvalid : bool" Usage="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid.IsInvalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22f11-113">ハンドルが無効かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="22f11-113">Gets a value that indicates whether the handle is invalid.</span></span></summary>
        <value><span data-ttu-id="22f11-114">ハンドルが無効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22f11-114"><see langword="true" /> if the handle is not valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22f11-115">共通言語ランタイムは、このプロパティを使用して、重要な終了処理が必要かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="22f11-115">The common language runtime uses this property to determine whether critical finalization is required.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.InteropServices.SafeHandle.IsInvalid" />
        <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
      </Docs>
    </Member>
  </Members>
</Type>
