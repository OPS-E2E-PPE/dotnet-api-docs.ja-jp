<Type Name="ZipArchive" FullName="System.IO.Compression.ZipArchive">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7ce51f04b9bc5b2eef3bc47d0a6ee5bd47d5a39" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82323147" /></Metadata><TypeSignature Language="C#" Value="public class ZipArchive : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchive extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchive" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchive&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchive : IDisposable" />
  <TypeSignature Language="F#" Value="type ZipArchive = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>zip アーカイブ形式の圧縮ファイルのパッケージを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zip アーカイブとそのファイルエントリを操作する方法は、3つのクラス (<xref:System.IO.Compression.ZipFile>、<xref:System.IO.Compression.ZipArchive>、および <xref:System.IO.Compression.ZipArchiveEntry>) に分散されています。  
  
|終了|使用|  
|--------|---------|  
|ディレクトリから zip アーカイブを作成する|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|Zip アーカイブの内容をディレクトリに抽出する|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|既存の zip アーカイブに新しいファイルを追加する|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|Zip アーカイブからファイルを取得する|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|Zip アーカイブからすべてのファイルを取得する|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|Zip アーカイブに含まれる1つのファイルへのストリームを開く|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|Zip アーカイブからファイルを削除する|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 新しいエントリを作成すると、ファイルが圧縮され、zip パッケージに追加されます。 <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> メソッドを使用すると、エントリを追加するときにディレクトリ階層を指定できます。 Zip パッケージ内に新しいエントリの相対パスを含めます。 たとえば、`AddedFolder\NewFile.txt` の相対パスを使用して新しいエントリを作成すると、AddedFolder という名前のディレクトリに圧縮テキストファイルが作成されます。  
  
 プロジェクトで `System.IO.Compression.FileSystem` アセンブリを参照する場合は、<xref:System.IO.Compression.ZipArchive> クラス (<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String)>、<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive,System.String,System.String,System.IO.Compression.CompressionLevel)>、<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String)>、<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive,System.String,System.Boolean)> の4つの拡張メソッド <xref:System.IO.Compression.ZipFileExtensions> (.NET Core 2.0 以降のバージョンで使用可能) にアクセスできます。 これらの拡張メソッドを使用すると、エントリの内容をファイルに圧縮して圧縮解除できます。 `System.IO.Compression.FileSystem` アセンブリは [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでは使用できません。 [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでは、<xref:System.IO.Compression.DeflateStream> または <xref:System.IO.Compression.GZipStream> クラスを使用してファイルの圧縮と圧縮解除を行うことができます。また、[!INCLUDE[wrt](~/includes/wrt-md.md)] タイプの[コンプレッサー](https://go.microsoft.com/fwlink/p/?LinkID=246357)と[解凍](https://go.microsoft.com/fwlink/p/?LinkID=246358)を使用することもできます。  
  
   
  
## Examples  
 最初の例では、ストリームを使用して新しいエントリを作成し、それに書き込む方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 次の例は、zip アーカイブを開き、エントリのコレクションを反復処理する方法を示しています。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 3番目の例では、拡張メソッドを使用して、既存のファイルから zip アーカイブに新しいエントリを作成し、アーカイブの内容を抽出する方法を示します。 コードを実行するには、`System.IO.Compression.FileSystem` アセンブリを参照する必要があります。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Compression.ZipFile" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">読み取るアーカイブを格納しているストリーム。</param>
        <summary>指定したストリームから <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">ストリームが既に閉じているか、読み取りをサポートしていません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip アーカイブのフォームにありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As ZipArchiveMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <summary>指定したストリームと指定したモードから <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Read>に設定されている場合、ストリームは読み取りをサポートしている必要があります。 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Create>に設定されている場合、ストリームは書き込みをサポートしている必要があります。 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Update>に設定されている場合、ストリームは読み取り、書き込み、シークをサポートしている必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> が無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As ZipArchiveMode, leaveOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <param name="leaveOpen"><see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary>指定されたモードの指定されたストリームで <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Read>に設定されている場合、ストリームは読み取りをサポートしている必要があります。 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Create>に設定されている場合、ストリームは書き込みをサポートしている必要があります。 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Update>に設定されている場合、ストリームは読み取り、書き込み、シークをサポートしている必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> が無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As ZipArchiveMode, leaveOpen As Boolean, entryNameEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen, entryNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">入力ストリームまたは出力ストリーム。</param>
        <param name="mode">zip のアーカイブがエントリの読み込み、作成、または更新に使用されているかどうかを示す列挙値の 1 つ。</param>
        <param name="leaveOpen"><see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <param name="entryNameEncoding">このアーカイブのエントリ名の読み取りまたは書き込み時に使用するエンコード。 エントリ名の UTF-8 エンコードをサポートしない zip アーカイブ ツールとライブラリとの相互運用性のためにエンコードが必要な場合にのみ、このパラメーターの値を指定してください。</param>
        <summary>指定されたモードの指定されたストリームで <see cref="T:System.IO.Compression.ZipArchive" /> クラスの新しいインスタンスを初期化し、エントリ名に指定されたエンコーディングを使用します。また、必要に応じて、ストリームを開いたままにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Read>に設定されている場合、ストリームは読み取りをサポートしている必要があります。 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Create>に設定されている場合、ストリームは書き込みをサポートしている必要があります。 `mode` パラメーターが <xref:System.IO.Compression.ZipArchiveMode.Update>に設定されている場合、ストリームは読み取り、書き込み、シークをサポートしている必要があります。  
  
 Zip アーカイブファイルを読み取り用に開いて `entryNameEncoding` が `null`に設定されている場合、エントリ名は次の規則に従ってデコードされます。  
  
-   言語エンコードフラグ (ローカルファイルヘッダーの汎用ビットフラグ) が設定されていない場合、現在のシステムの既定のコードページを使用してエントリ名がデコードされます。  
  
-   言語のエンコードフラグが設定されている場合は、UTF-8 を使用してエントリ名がデコードされます。  
  
 Zip アーカイブファイルを読み取り用に開き、`entryNameEncoding` が `null`以外の値に設定されている場合、エントリ名は次の規則に従ってデコードされます。  
  
-   言語のエンコードフラグが設定されていない場合、指定された `entryNameEncoding` を使用してエントリ名がデコードされます。  
  
-   言語のエンコードフラグが設定されている場合は、UTF-8 を使用してエントリ名がデコードされます。  
  
 アーカイブファイルに書き込むと `entryNameEncoding` が `null`に設定されている場合、エントリ名は次の規則に従ってエンコードされます。  
  
-   ASCII の範囲外の文字を含むエントリ名の場合、言語エンコードフラグが設定され、エントリ名は UTF-8 を使用してエンコードされます。  
  
-   ASCII 文字のみを含むエントリ名の場合、言語エンコードフラグは設定されず、エントリ名は、現在のシステムの既定のコードページを使用してエンコードされます。  
  
 アーカイブファイルに書き込むときに、`entryNameEncoding` が `null`以外の値に設定されている場合は、指定した `entryNameEncoding` を使用してエントリ名がバイトにエンコードされます。 言語エンコードフラグ (ローカルファイルヘッダーの汎用ビットフラグ) は、指定されたエンコードが UTF-8 エンコーディングの場合にのみ設定されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ストリームは既に終了しているか、ストリームの機能がモードに一致しません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="mode" /> が無効な値です。</exception>
        <exception cref="T:System.IO.InvalidDataException">ストリームの内容は zip のアーカイブとして解釈できません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリがアーカイブにないか、または破損していて読み取ることができません。  
  
- または - 
 <paramref name="mode" /> が <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> で、エントリが大きすぎてメモリに収まりません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEntry">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>空のエントリを zip アーカイブに作成します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">作成されるエントリの名前を指定する、アーカイブのルートを基準とするパス。</param>
        <summary>指定したパスとエントリ名を持つ空のエントリを zip アーカイブに作成します。</summary>
        <returns>zip アーカイブ内の空のエントリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entryName` 文字列には、zip アーカイブ内に作成するエントリの相対パスを反映する必要があります。 指定した文字列に制限はありません。 ただし、相対パスとして書式設定されていない場合はエントリが作成されますが、zip アーカイブの内容を抽出するときに例外が発生する可能性があります。 指定したパスと名前を持つエントリがアーカイブ内に既に存在する場合は、同じパスと名前で2番目のエントリが作成されます。  
  
 新しいエントリの <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> プロパティの値は、現在の時刻に設定されます。 このエントリは、基になる圧縮アルゴリズムの既定の圧縮レベルを使用して圧縮されます。 別の圧縮レベルを指定する場合は、<xref:System.IO.Compression.ZipArchive.CreateEntry%2A> メソッドを使用します。  
  
   
  
## Examples  
 次の例では、ストリームを使用してエントリを作成し、それに書き込む方法を示します。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> が <see cref="F:System.String.Empty" />です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.NotSupportedException">zip アーカイブは書き込みをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String, compressionLevel As CompressionLevel) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry (entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="entryName">作成されるエントリの名前を指定する、アーカイブのルートを基準とするパス。</param>
        <param name="compressionLevel">エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の 1 つ。</param>
        <summary>指定したエントリ名と圧縮レベルを持つ空のエントリを zip アーカイブに作成します。</summary>
        <returns>zip アーカイブ内の空のエントリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entryName` 文字列には、zip アーカイブ内に作成するエントリの相対パスを反映する必要があります。 指定した文字列に制限はありません。 ただし、相対パスとして書式設定されていない場合はエントリが作成されますが、zip アーカイブの内容を抽出するときに例外が発生する可能性があります。 指定した名前のエントリがアーカイブ内に既に存在する場合は、同じ名前で2番目のエントリが作成されます。  
  
 新しいエントリの <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> プロパティの値は、現在の時刻に設定されます。 ファイルを可能な限り圧縮する場合は、`compressionLevel` パラメーターを <xref:System.IO.Compression.CompressionLevel.Optimal> に設定します。 `compressionLevel` パラメーターを <xref:System.IO.Compression.CompressionLevel.Fastest> に設定するのは、圧縮操作が実際のシナリオに対して十分に完了しないことが心配な場合に限られます。  
  
   
  
## Examples  
 次の例では、最適な圧縮レベルを使用してエントリを作成する方法を示します。 また、ストリームを使用して新しいエントリに書き込みます。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> が <see cref="F:System.String.Empty" />です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.NotSupportedException">zip アーカイブは書き込みをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>この <see cref="T:System.IO.Compression.ZipArchive" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="zipArchive.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Compression.ZipArchive" /> クラスの現在のインスタンスによって使用されているリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、アーカイブの書き込みを終了し、<xref:System.IO.Compression.ZipArchive> オブジェクトによって使用されているすべてのリソースを解放します。 <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> コンストラクターのオーバーロードを使用してオブジェクトを構築し、その `leaveOpen` パラメーターを `true`に設定しない限り、基になるすべてのストリームは閉じられ、後続の書き込み操作では使用できなくなります。  
  
 この <xref:System.IO.Compression.ZipArchive>インスタンスの使用が終了したら、<xref:System.IO.Compression.ZipArchive.Dispose> を呼び出して、このインスタンスで使用されているすべてのリソースを解放します。 ガベージコレクターがインスタンスのメモリを再利用できるように、この <xref:System.IO.Compression.ZipArchive> インスタンスへの参照を削除する必要があります。  
  
 <xref:System.IO.Compression.ZipArchive.Dispose> は、マネージリソースとアンマネージリソースを解放するコードを含む <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> メソッドを呼び出します。 詳細については、「[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="zipArchive.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">アーカイブの書き込みを終了し、アンマネージド リソースとマネージド リソースを解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="M:System.IO.Compression.ZipArchive.Dispose" /> クラスの現在のインスタンスによって使用されるアンマネージド リソースを解放するために、<see cref="M:System.Object.Finalize" /> メソッドと <see cref="T:System.IO.Compression.ZipArchive" /> メソッドによって呼び出されます。オプションで、アーカイブの書き込みを終了し、マネージド リソースを解放できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `disposing` が `true`に設定されている場合は、<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> コンストラクターのオーバーロードを使用してオブジェクトを構築し、その `leaveOpen` パラメーターを `true`に設定しない限り、基になるすべてのストリームが閉じられ、後続の書き込み操作で使用できなくなります。  
  
 このメソッドは、パブリック <xref:System.IO.Compression.ZipArchive.Dispose> および <xref:System.Object.Finalize> メソッドによってのみ呼び出されます。このメソッドを直接呼び出さないでください。  
  
 Dispose パターンを実装する場合は、<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> メソッドのブール型パラメーターを次のように使用する必要があります。  
  
-   現在のオブジェクトの <xref:System.IO.Compression.ZipArchive.Dispose> メソッドは、ブール型パラメーターを `true` に設定して <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> を呼び出し、マネージリソースとアンマネージリソースの両方を解放する必要があります。  
  
-   現在のオブジェクトの <xref:System.Object.Finalize> メソッドは、ブール型パラメーターを `false` に設定して <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> を呼び出し、アンマネージリソースだけを解放する必要があります。
  
 詳細については、「[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Compression.ZipArchiveEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As ReadOnlyCollection(Of ZipArchiveEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ Entries { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;" Usage="System.IO.Compression.ZipArchive.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在 zip アーカイブ内にあるエントリのコレクションを取得します。</summary>
        <value>現在 zip アーカイブ内にあるエントリのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Compression.ZipArchive.Entries%2A> プロパティを使用して、エントリのコレクション全体を取得します。 名前で1つのエントリを取得するには、<xref:System.IO.Compression.ZipArchive.GetEntry%2A> メソッドを使用します。  
  
   
  
## Examples  
 次の例は、zip アーカイブを開き、エントリのコレクションを反復処理する方法を示しています。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">zip アーカイブは読み取りをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
        <exception cref="T:System.IO.InvalidDataException">zip アーカイブが破損しているため、エントリを取得できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry GetEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.GetEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ GetEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.GetEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.GetEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">取得するエントリを識別する、アーカイブのルートを基準とするパス。</param>
        <summary>zip アーカイブ内の指定したエントリのラッパーを取得します。</summary>
        <returns>アーカイブ内の指定されたエントリのラッパー。エントリがアーカイブに存在しない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された名前を持つ複数のエントリがアーカイブ内に存在する場合は、最初のエントリが返されます。 エントリの名前は、序数による比較を使用して `entryName` と比較されます。  
  
   
  
## Examples  
 次の例は、<xref:System.IO.Compression.ZipArchive.GetEntry%2A> メソッドを使用してエントリを取得する方法を示しています。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="entryName" /> が <see cref="F:System.String.Empty" />です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="entryName" /> が <see langword="null" />です。</exception>
        <exception cref="T:System.NotSupportedException">zip アーカイブは読み取りをサポートしません。</exception>
        <exception cref="T:System.ObjectDisposedException">zip アーカイブが破棄されました。</exception>
        <exception cref="T:System.IO.InvalidDataException">zip アーカイブが破損しているため、エントリを取得できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Compression.ZipArchiveMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As ZipArchiveMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchiveMode Mode { System::IO::Compression::ZipArchiveMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.IO.Compression.ZipArchiveMode" Usage="System.IO.Compression.ZipArchive.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>zip アーカイブがエントリで実行できる操作の種類を示す値を取得します。</summary>
        <value>zip のアーカイブがエントリ上で実行できる操作の種類 (読み込み、作成、または更新) を示す列挙値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Compression.ZipArchive> クラスのインスタンスを作成する場合は、<xref:System.IO.Compression.ZipArchive> プロパティの値を指定します。 <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29> または <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> コンストラクターを使用して、<xref:System.IO.Compression.ZipArchive.Mode%2A> プロパティの値を指定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
