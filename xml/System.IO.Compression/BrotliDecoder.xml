<Type Name="BrotliDecoder" FullName="System.IO.Compression.BrotliDecoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3817d7a695b69f09327cf78f4c1ce38c0f473516" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75133415" /></Metadata><TypeSignature Language="C#" Value="public struct BrotliDecoder : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BrotliDecoder extends System.ValueType implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.BrotliDecoder" />
  <TypeSignature Language="VB.NET" Value="Public Structure BrotliDecoder&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public value class BrotliDecoder : IDisposable" />
  <TypeSignature Language="F#" Value="type BrotliDecoder = struct&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>非割り当てでハイ パフォーマンスの Brotli 圧縮解除メソッドを提供します。 これらのメソッドを使うと、<see cref="T:System.IO.Compression.BrotliStream" /> インスタンスを使用せずに 1 回のパスで圧縮を解除できます。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decompress">
      <MemberSignature Language="C#" Value="public System.Buffers.OperationStatus Decompress (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesConsumed, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Buffers.OperationStatus Decompress(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesConsumed, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliDecoder.Decompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Decompress (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesConsumed As Integer, ByRef bytesWritten As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Buffers::OperationStatus Decompress(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesConsumed, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.Decompress : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int * int -&gt; System.Buffers.OperationStatus" Usage="brotliDecoder.Decompress (source, destination, bytesConsumed, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source">圧縮されたデータが格納されているバッファー。</param>
        <param name="destination">このメソッドから制御が戻るときに、圧縮が解除されたデータが格納されるバイト スパン。</param>
        <param name="bytesConsumed"><paramref name="source" /> から読み取られた合計バイト数。</param>
        <param name="bytesWritten"><paramref name="destination" /> に書き込まれたバイト数の合計。</param>
        <summary>Brotli アルゴリズムを使用して圧縮されたデータの圧縮を解除します。</summary>
        <returns>圧縮解除操作の状態を示す列挙値の 1 つ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

戻り値は次のようになります。
- <xref:System.Buffers.OperationStatus.Done?displayProperty=nameWithType>: `source` は正常に `destination`に完全に圧縮解除されました。
- <xref:System.Buffers.OperationStatus.DestinationTooSmall?displayProperty=nameWithType>: `source`の圧縮を解除するのに十分な領域が `destination` にありません。
- <xref:System.Buffers.OperationStatus.NeedMoreData?displayProperty=nameWithType>: 圧縮解除操作を完了するには、少なくとも1バイトが必要です。 このメソッドは、圧縮解除するための入力を増やして再度呼び出す必要があります。
- <xref:System.Buffers.OperationStatus.InvalidData?displayProperty=nameWithType>: `source` のデータは無効であるため、圧縮解除できませんでした。

           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliDecoder.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="brotliDecoder.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の Brotli デコーダー インスタンスによって使用されているすべてのリソースを解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryDecompress">
      <MemberSignature Language="C#" Value="public static bool TryDecompress (ReadOnlySpan&lt;byte&gt; source, Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryDecompress(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.BrotliDecoder.TryDecompress(System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryDecompress (source As ReadOnlySpan(Of Byte), destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryDecompress(ReadOnlySpan&lt;System::Byte&gt; source, Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="static member TryDecompress : ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * int -&gt; bool" Usage="System.IO.Compression.BrotliDecoder.TryDecompress (source, destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression.Brotli</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source">圧縮されたデータが格納されているバッファー。</param>
        <param name="destination">このメソッドから制御が戻るときに、圧縮が解除されたデータが格納されるバイト スパン。</param>
        <param name="bytesWritten"><paramref name="destination" /> に書き込まれたバイト数の合計。</param>
        <summary>Brotli アルゴリズムを使用して圧縮されたデータの圧縮解除を試みます。</summary>
        <returns>正常に完了した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

このメソッドが `false`を返す場合、`destination` が空であるか、部分的に圧縮解除されたデータが含まれている可能性があります。これは `bytesWritten` が0であるか、または0よりも大きく、予想された合計よりも小さい

           ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
