<Type Name="GZipStream" FullName="System.IO.Compression.GZipStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e24da3141b7b05bc7bf9997552daaa91f83eace" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83524471" /></Metadata><TypeSignature Language="C#" Value="public class GZipStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GZipStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.GZipStream" />
  <TypeSignature Language="VB.NET" Value="Public Class GZipStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class GZipStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type GZipStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.IO.Compression" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.Compression" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.IO.Compression" FromVersion="4.0.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinmac-3.0" />
    <TypeForwarding From="System.IO.Compression" FromVersion="4.2.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
    <TypeForwarding From="System.IO.Compression" FromVersion="2.0.5.0" To="System" ToVersion="2.0.5.0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="09c56-101">GZip データ形式の仕様を使ってストリームを圧縮および圧縮解除するために使用するメソッドとプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="09c56-101">Provides methods and properties used to compress and decompress streams by using the GZip data format specification.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-102">このクラスは、無損失のファイル圧縮と圧縮解除に業界標準のアルゴリズムを使用する gzip データ形式を表します。</span><span class="sxs-lookup"><span data-stu-id="09c56-102">This class represents the gzip data format, which uses an industry-standard algorithm for lossless file compression and decompression.</span></span> <span data-ttu-id="09c56-103">この形式には、データの破損を検出するための巡回冗長チェックの値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="09c56-103">The format includes a cyclic redundancy check value for detecting data corruption.</span></span> <span data-ttu-id="09c56-104">Gzip データ形式は <xref:System.IO.Compression.DeflateStream> クラスと同じアルゴリズムを使用しますが、他の圧縮形式を使用するように拡張できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-104">The gzip data format uses the same algorithm as the <xref:System.IO.Compression.DeflateStream> class, but can be extended to use other compression formats.</span></span> <span data-ttu-id="09c56-105">形式は、特許の対象外となる方法で簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-105">The format can be readily implemented in a manner not covered by patents.</span></span>  
  
 <span data-ttu-id="09c56-106">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]以降では、<xref:System.IO.Compression.DeflateStream> クラスは、圧縮のために zlib ライブラリを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-106">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], the <xref:System.IO.Compression.DeflateStream> class uses the zlib library for compression.</span></span> <span data-ttu-id="09c56-107">その結果、より優れた圧縮アルゴリズムを利用でき、ほとんどの場合、.NET Framework の以前のバージョンのものに比べて、より小さく圧縮されたファイルになります。</span><span class="sxs-lookup"><span data-stu-id="09c56-107">As a result, it provides a better compression algorithm and, in most cases, a smaller compressed file than it provides in earlier versions of the .NET Framework.</span></span>  
  
 <span data-ttu-id="09c56-108">圧縮された <xref:System.IO.Compression.GZipStream> オブジェクトは、拡張子がのファイルに書き込まれます。 gz は、多くの一般的な圧縮ツールを使用して圧縮解除できます。ただし、このクラスは、zip アーカイブにファイルを追加したり、zip アーカイブからファイルを抽出したりするための機能を本質的に提供するわけではありません。</span><span class="sxs-lookup"><span data-stu-id="09c56-108">Compressed <xref:System.IO.Compression.GZipStream> objects written to a file with an extension of .gz can be decompressed using many common compression tools; however, this class does not inherently provide functionality for adding files to or extracting files from zip archives.</span></span>  
  
 <span data-ttu-id="09c56-109"><xref:System.IO.Compression.DeflateStream> と <xref:System.IO.Compression.GZipStream> の圧縮機能は、ストリームとして公開されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-109">The compression functionality in <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> is exposed as a stream.</span></span> <span data-ttu-id="09c56-110">データはバイト単位で読み取られます。そのため、ファイル全体または大量のデータを圧縮する場合、複数のパスを実行して、圧縮に最適な方法を決定することはできません。</span><span class="sxs-lookup"><span data-stu-id="09c56-110">Data is read on a byte-by-byte basis, so it is not possible to perform multiple passes to determine the best method for compressing entire files or large blocks of data.</span></span> <span data-ttu-id="09c56-111"><xref:System.IO.Compression.DeflateStream> と <xref:System.IO.Compression.GZipStream> クラスは、圧縮されていないデータ ソースで最もよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-111">The <xref:System.IO.Compression.DeflateStream> and <xref:System.IO.Compression.GZipStream> classes are best used on uncompressed sources of data.</span></span> <span data-ttu-id="09c56-112">ソース データが既に圧縮されている場合、これらのクラスを使用すると、実際にはストリームのサイズが大きくなります。</span><span class="sxs-lookup"><span data-stu-id="09c56-112">If the source data is already compressed, using these classes may actually increase the size of the stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09c56-113">次の例は、<xref:System.IO.Compression.GZipStream> クラスを使用して、ディレクトリにあるファイルを圧縮および展開する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="09c56-113">The following example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a directory of files.</span></span>  
  
 [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]
 [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="09c56-114"><see cref="T:System.IO.Compression.GZipStream" />から継承する場合は、<see cref="P:System.IO.Compression.GZipStream.CanSeek" />、<see cref="P:System.IO.Compression.GZipStream.CanWrite" />、および <see cref="P:System.IO.Compression.GZipStream.CanRead" />の各メンバーをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="09c56-114">When you inherit from <see cref="T:System.IO.Compression.GZipStream" />, you must override the following members: <see cref="P:System.IO.Compression.GZipStream.CanSeek" />, <see cref="P:System.IO.Compression.GZipStream.CanWrite" />, and <see cref="P:System.IO.Compression.GZipStream.CanRead" />.</span></span></para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09c56-115"><see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="09c56-115">Initializes a new instance of the <see cref="T:System.IO.Compression.GZipStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, compressionLevel As CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GZipStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.GZipStream : System.IO.Stream * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.GZipStream" Usage="new System.IO.Compression.GZipStream (stream, compressionLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="09c56-116">圧縮するストリーム。</span><span class="sxs-lookup"><span data-stu-id="09c56-116">The stream to compress.</span></span></param>
        <param name="compressionLevel"><span data-ttu-id="09c56-117">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="09c56-117">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</span></span></param>
        <summary><span data-ttu-id="09c56-118">指定したストリームと圧縮レベルを使用して、<see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="09c56-118">Initializes a new instance of the <see cref="T:System.IO.Compression.GZipStream" /> class by using the specified stream and compression level.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-119">このコンストラクターは、<xref:System.IO.Compression.GZipStream> クラスのインスタンスに対して圧縮の効率や速度を重視するかどうかを指定する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-119">You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class.</span></span>  
  
 <span data-ttu-id="09c56-120">このコンストラクターのオーバーロードでは、<xref:System.IO.Compression.CompressionMode.Compress>圧縮モードを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-120">This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>.</span></span> <span data-ttu-id="09c56-121">圧縮モードを別の値に設定するには、<xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> または <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-121">To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09c56-122">次の例は、<xref:System.IO.Compression.GZipStream> オブジェクトを作成するときに圧縮レベルを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="09c56-122">The following example shows how to set the compression level when creating a <xref:System.IO.Compression.GZipStream> object.</span></span>  
  
 [!code-csharp[System.IO.Compression.GZipStream#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.GZipStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09c56-123"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-123"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09c56-124">ストリームは圧縮などの書き込み操作をサポートしません</span><span class="sxs-lookup"><span data-stu-id="09c56-124">The stream does not support write operations such as compression.</span></span> <span data-ttu-id="09c56-125">(ストリーム オブジェクトの <see cref="P:System.IO.Stream.CanWrite" /> プロパティは <see langword="false" /> です)。</span><span class="sxs-lookup"><span data-stu-id="09c56-125">(The <see cref="P:System.IO.Stream.CanWrite" /> property on the stream object is <see langword="false" />.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As CompressionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GZipStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.GZipStream : System.IO.Stream * System.IO.Compression.CompressionMode -&gt; System.IO.Compression.GZipStream" Usage="new System.IO.Compression.GZipStream (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="09c56-126">圧縮されたデータまたは圧縮解除されたデータが書き込まれるストリーム。</span><span class="sxs-lookup"><span data-stu-id="09c56-126">The stream the compressed or decompressed data is written to.</span></span></param>
        <param name="mode"><span data-ttu-id="09c56-127">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="09c56-127">One of the enumeration values that indicates whether to compress or decompress the stream.</span></span></param>
        <summary><span data-ttu-id="09c56-128">指定したストリームと圧縮モードを使用して、<see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="09c56-128">Initializes a new instance of the <see cref="T:System.IO.Compression.GZipStream" /> class by using the specified stream and compression mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-129">既定では、<xref:System.IO.Compression.GZipStream> は基になるストリームを所有します。そのため、`stream` パラメーターを閉じると、基になるストリームも閉じられます。</span><span class="sxs-lookup"><span data-stu-id="09c56-129">By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream.</span></span> <span data-ttu-id="09c56-130">基になるストリームの状態は、ストリームの使いやすさに影響する可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-130">Note that the state of the underlying stream can affect the usability of the stream.</span></span> <span data-ttu-id="09c56-131">また、明示的なチェックは行われないため、新しいインスタンスが作成されても、追加の例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="09c56-131">Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</span></span>  
  
 <span data-ttu-id="09c56-132"><xref:System.IO.Compression.GZipStream> クラスのインスタンスが `Compress` と等しい `mode` パラメーターを使用して作成され、それ以上の操作が行われない場合、ストリームは有効な空の圧縮ファイルとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-132">If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file.</span></span>  
  
 <span data-ttu-id="09c56-133">既定では、圧縮モードが <xref:System.IO.Compression.CompressionMode.Compress>場合、圧縮レベルは <xref:System.IO.Compression.CompressionLevel.Optimal> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-133">By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09c56-134">次の例では、`mode` を <xref:System.IO.Compression.CompressionMode.Compress>に設定して、<xref:System.IO.Compression.GZipStream> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="09c56-134">The following example initializes a new instance of the <xref:System.IO.Compression.GZipStream> class with `mode` set to <xref:System.IO.Compression.CompressionMode.Compress>.</span></span> <span data-ttu-id="09c56-135">この例は、<xref:System.IO.Compression.GZipStream> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="09c56-135">This example is part of a larger example provided for the <xref:System.IO.Compression.GZipStream> class.</span></span>  
  
 [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]
 [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09c56-136"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-136"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09c56-137"><paramref name="mode" /> が有効な <see cref="T:System.IO.Compression.CompressionMode" /> 列挙値ではありません。</span><span class="sxs-lookup"><span data-stu-id="09c56-137"><paramref name="mode" /> is not a valid <see cref="T:System.IO.Compression.CompressionMode" /> enumeration value.</span></span>  
  
<span data-ttu-id="09c56-138">または</span><span class="sxs-lookup"><span data-stu-id="09c56-138">-or-</span></span> 
 <span data-ttu-id="09c56-139"><see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Compress" /> で、<see cref="P:System.IO.Stream.CanWrite" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-139"><see cref="T:System.IO.Compression.CompressionMode" /> is <see cref="F:System.IO.Compression.CompressionMode.Compress" /> and <see cref="P:System.IO.Stream.CanWrite" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="09c56-140">または</span><span class="sxs-lookup"><span data-stu-id="09c56-140">-or-</span></span> 
 <span data-ttu-id="09c56-141"><see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> で、<see cref="P:System.IO.Stream.CanRead" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-141"><see cref="T:System.IO.Compression.CompressionMode" /> is <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> and <see cref="P:System.IO.Stream.CanRead" /> is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionLevel compressionLevel, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, compressionLevel As CompressionLevel, leaveOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GZipStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionLevel compressionLevel, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.GZipStream : System.IO.Stream * System.IO.Compression.CompressionLevel * bool -&gt; System.IO.Compression.GZipStream" Usage="new System.IO.Compression.GZipStream (stream, compressionLevel, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="09c56-142">圧縮されたデータを書き込むストリーム。</span><span class="sxs-lookup"><span data-stu-id="09c56-142">The stream to write the compressed data to.</span></span></param>
        <param name="compressionLevel"><span data-ttu-id="09c56-143">ストリームの圧縮時に速度または圧縮の効率性を強調するかどうかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="09c56-143">One of the enumeration values that indicates whether to emphasize speed or compression efficiency when compressing the stream.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="09c56-144"><see cref="T:System.IO.Compression.GZipStream" /> オブジェクトを破棄した後にストリーム オブジェクトを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09c56-144"><see langword="true" /> to leave the stream object open after disposing the <see cref="T:System.IO.Compression.GZipStream" /> object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="09c56-145">指定したストリームと圧縮レベルを使用して <see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</span><span class="sxs-lookup"><span data-stu-id="09c56-145">Initializes a new instance of the <see cref="T:System.IO.Compression.GZipStream" /> class by using the specified stream and compression level, and optionally leaves the stream open.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-146">このコンストラクターは、<xref:System.IO.Compression.GZipStream> クラスのインスタンスに対して圧縮の効率や速度を重視するかどうか、および <xref:System.IO.Compression.GZipStream> オブジェクトを破棄した後にストリームオブジェクトを開いたままにするかどうかを指定する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-146">You use this constructor when you want to specify whether compression efficiency or speed is more important for an instance of the <xref:System.IO.Compression.GZipStream> class, and whether to leave the stream object open after disposing the <xref:System.IO.Compression.GZipStream> object.</span></span>  
  
 <span data-ttu-id="09c56-147">このコンストラクターのオーバーロードでは、<xref:System.IO.Compression.CompressionMode.Compress>圧縮モードを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-147">This constructor overload uses the compression mode <xref:System.IO.Compression.CompressionMode.Compress>.</span></span> <span data-ttu-id="09c56-148">圧縮モードを別の値に設定するには、<xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> または <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-148">To set the compression mode to another value, use the <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%29> or <xref:System.IO.Compression.GZipStream.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.CompressionMode%2CSystem.Boolean%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09c56-149">次の例は、<xref:System.IO.Compression.GZipStream> オブジェクトを作成するときに圧縮レベルを設定する方法と、ストリームを開いたままにする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="09c56-149">The following example shows how to set the compression level when creating a <xref:System.IO.Compression.GZipStream> object and how to leave the stream open.</span></span>  
  
 [!code-csharp[System.IO.Compression.GZipStream#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.GZipStream#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09c56-150"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-150"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09c56-151">ストリームは圧縮などの書き込み操作をサポートしません</span><span class="sxs-lookup"><span data-stu-id="09c56-151">The stream does not support write operations such as compression.</span></span> <span data-ttu-id="09c56-152">(ストリーム オブジェクトの <see cref="P:System.IO.Stream.CanWrite" /> プロパティは <see langword="false" /> です)。</span><span class="sxs-lookup"><span data-stu-id="09c56-152">(The <see cref="P:System.IO.Stream.CanWrite" /> property on the stream object is <see langword="false" />.)</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GZipStream (System.IO.Stream stream, System.IO.Compression.CompressionMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.CompressionMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stream As Stream, mode As CompressionMode, leaveOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GZipStream(System::IO::Stream ^ stream, System::IO::Compression::CompressionMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.GZipStream : System.IO.Stream * System.IO.Compression.CompressionMode * bool -&gt; System.IO.Compression.GZipStream" Usage="new System.IO.Compression.GZipStream (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.CompressionMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="09c56-153">圧縮するストリーム。</span><span class="sxs-lookup"><span data-stu-id="09c56-153">The stream to compress.</span></span></param>
        <param name="mode"><span data-ttu-id="09c56-154">ストリームを圧縮するか圧縮解除するかを示す列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="09c56-154">One of the enumeration values that indicates whether to compress or decompress the stream.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="09c56-155"><see cref="T:System.IO.Compression.GZipStream" /> オブジェクトを破棄した後にストリームを開いたままにする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09c56-155"><see langword="true" /> to leave the stream open after disposing the <see cref="T:System.IO.Compression.GZipStream" /> object; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="09c56-156">指定したストリームと圧縮モードを使用して <see cref="T:System.IO.Compression.GZipStream" /> クラスの新しいインスタンスを初期化し、必要に応じて、ストリームを開いたままにします。</span><span class="sxs-lookup"><span data-stu-id="09c56-156">Initializes a new instance of the <see cref="T:System.IO.Compression.GZipStream" /> class by using the specified stream and compression mode, and optionally leaves the stream open.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-157">既定では、<xref:System.IO.Compression.GZipStream> は基になるストリームを所有します。そのため、`stream` パラメーターを閉じると、基になるストリームも閉じられます。</span><span class="sxs-lookup"><span data-stu-id="09c56-157">By default, <xref:System.IO.Compression.GZipStream> owns the underlying stream, so closing the `stream` parameter also closes the underlying stream.</span></span> <span data-ttu-id="09c56-158">基になるストリームの状態は、ストリームの使いやすさに影響する可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-158">Note that the state of the underlying stream can affect the usability of the stream.</span></span> <span data-ttu-id="09c56-159">また、明示的なチェックは行われないため、新しいインスタンスが作成されても、追加の例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="09c56-159">Also, no explicit checks are performed, so no additional exceptions are thrown when the new instance is created.</span></span>  
  
 <span data-ttu-id="09c56-160"><xref:System.IO.Compression.GZipStream> クラスのインスタンスが `Compress` と等しい `mode` パラメーターを使用して作成され、それ以上の操作が行われない場合、ストリームは有効な空の圧縮ファイルとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-160">If an instance of the <xref:System.IO.Compression.GZipStream> class is created with the `mode` parameter equal to `Compress` and no further action occurs, the stream will appear as a valid, empty compressed file.</span></span>  
  
 <span data-ttu-id="09c56-161">既定では、圧縮モードが <xref:System.IO.Compression.CompressionMode.Compress>場合、圧縮レベルは <xref:System.IO.Compression.CompressionLevel.Optimal> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-161">By default, the compression level is set to <xref:System.IO.Compression.CompressionLevel.Optimal> when the compression mode is <xref:System.IO.Compression.CompressionMode.Compress>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09c56-162"><paramref name="stream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-162"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09c56-163"><paramref name="mode" /> が有効な <see cref="T:System.IO.Compression.CompressionMode" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="09c56-163"><paramref name="mode" /> is not a valid <see cref="T:System.IO.Compression.CompressionMode" /> value.</span></span>  
  
<span data-ttu-id="09c56-164">または</span><span class="sxs-lookup"><span data-stu-id="09c56-164">-or-</span></span> 
 <span data-ttu-id="09c56-165"><see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Compress" /> で、<see cref="P:System.IO.Stream.CanWrite" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-165"><see cref="T:System.IO.Compression.CompressionMode" /> is <see cref="F:System.IO.Compression.CompressionMode.Compress" /> and <see cref="P:System.IO.Stream.CanWrite" /> is <see langword="false" />.</span></span>  
  
<span data-ttu-id="09c56-166">または</span><span class="sxs-lookup"><span data-stu-id="09c56-166">-or-</span></span> 
 <span data-ttu-id="09c56-167"><see cref="T:System.IO.Compression.CompressionMode" /> が <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> で、<see cref="P:System.IO.Stream.CanRead" /> が <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-167"><see cref="T:System.IO.Compression.CompressionMode" /> is <see cref="F:System.IO.Compression.CompressionMode.Decompress" /> and <see cref="P:System.IO.Stream.CanRead" /> is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.GZipStream.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.Compression.GZipStream.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09c56-168">基になるストリームへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="09c56-168">Gets a reference to the underlying stream.</span></span></summary>
        <value><span data-ttu-id="09c56-169">基になるストリームを表すストリーム オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-169">A stream object that represents the underlying stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="09c56-170">基になるストリームが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="09c56-170">The underlying stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] array, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (array As Byte(), offset As Integer, count As Integer, asyncCallback As AsyncCallback, asyncState As Object) As IAsyncResult" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ array, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="gZipStream.BeginRead (array, offset, count, asyncCallback, asyncState)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback cback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback cback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, cback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ cback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="gZipStream.BeginRead (buffer, offset, count, cback, state)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="09c56-171">データを読み取るバイト配列。</span><span class="sxs-lookup"><span data-stu-id="09c56-171">The byte array to read the data into.</span></span></param>
        <param name="buffer"><span data-ttu-id="09c56-172">データを読み取るバイト配列。</span><span class="sxs-lookup"><span data-stu-id="09c56-172">The byte array to read the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="09c56-173">ストリームからのデータの読み込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="09c56-173">The byte offset in <paramref name="array" /> at which to begin reading data from the stream.</span></span></param>
        <param name="count"><span data-ttu-id="09c56-174">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="09c56-174">The maximum number of bytes to read.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="09c56-175">読み取り操作の完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="09c56-175">An optional asynchronous callback, to be called when the read operation is complete.</span></span></param>
        <param name="cback"><span data-ttu-id="09c56-176">読み取り操作の完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="09c56-176">An optional asynchronous callback, to be called when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="09c56-177">この特定の非同期読み取り要求を他の要求と区別する、ユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-177">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <param name="state"><span data-ttu-id="09c56-178">この特定の非同期読み取り要求を他の要求と区別する、ユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-178">A user-provided object that distinguishes this particular asynchronous read request from other requests.</span></span></param>
        <summary><span data-ttu-id="09c56-179">非同期の読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="09c56-179">Begins an asynchronous read operation.</span></span> <span data-ttu-id="09c56-180">(代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</span><span class="sxs-lookup"><span data-stu-id="09c56-180">(Consider using the <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="09c56-181">まだ保留中である可能性がある非同期の読み取り操作を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-181">An object that represents the asynchronous read operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-182">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]以降では、<xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType> メソッドを使用して非同期の読み取り操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-182">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="09c56-183"><xref:System.IO.Compression.GZipStream.BeginRead%2A> メソッドは、レガシコードをサポートするために [!INCLUDE[net_v45](~/includes/net-v45-md.md)] で引き続き使用できます。ただし、新しい非同期メソッドを使用すると、非同期 i/o 操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-183">The <xref:System.IO.Compression.GZipStream.BeginRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</span></span> <span data-ttu-id="09c56-184">詳細については、「[非同期ファイル I/O](~/docs/standard/io/asynchronous-file-i-o.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-184">For more information, see [Asynchronous File I/O](~/docs/standard/io/asynchronous-file-i-o.md).</span></span>
  
 <span data-ttu-id="09c56-185"><xref:System.IAsyncResult> 戻り値をストリームの <xref:System.IO.Compression.GZipStream.EndRead%2A> メソッドに渡して、読み取ったバイト数を確認し、読み取りに使用するオペレーティングシステムリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="09c56-185">Pass the <xref:System.IAsyncResult> return value to the <xref:System.IO.Compression.GZipStream.EndRead%2A> method of the stream to determine how many bytes were read and to release operating system resources used for reading.</span></span> <span data-ttu-id="09c56-186">これを行うには、<xref:System.IO.Compression.GZipStream.BeginRead%2A> を呼び出したコードと同じコードを使用するか、<xref:System.IO.Compression.GZipStream.BeginRead%2A>に渡されたコールバックを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-186">You can do this either by using the same code that called <xref:System.IO.Compression.GZipStream.BeginRead%2A> or in a callback passed to <xref:System.IO.Compression.GZipStream.BeginRead%2A>.</span></span>  
  
 <span data-ttu-id="09c56-187">ストリーム内の現在位置は、i/o 操作が完了したときではなく、非同期の読み取りまたは書き込みが実行されたときに更新されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-187">The current position in the stream is updated when the asynchronous read or write is issued, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="09c56-188">複数の同時非同期要求は、要求の完了順序が不明確であることを表示します。</span><span class="sxs-lookup"><span data-stu-id="09c56-188">Multiple simultaneous asynchronous requests render the request completion order uncertain.</span></span>  
  
 <span data-ttu-id="09c56-189">現在の <xref:System.IO.Compression.GZipStream> オブジェクトが読み取りをサポートするかどうかを判断するには、<xref:System.IO.Compression.GZipStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-189">Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current <xref:System.IO.Compression.GZipStream> object supports reading.</span></span>  
  
 <span data-ttu-id="09c56-190">ストリームが閉じている場合、または無効な引数を渡した場合、<xref:System.IO.Compression.GZipStream.BeginRead%2A>からすぐに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="09c56-190">If a stream is closed or you pass an invalid argument, exceptions are thrown immediately from <xref:System.IO.Compression.GZipStream.BeginRead%2A>.</span></span> <span data-ttu-id="09c56-191">I/o 要求中のディスク障害など、非同期の読み取り要求中に発生したエラーは、スレッドプールのスレッドで発生し、<xref:System.IO.Compression.GZipStream.EndRead%2A>を呼び出すときに例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="09c56-191">Errors that occur during an asynchronous read request, such as a disk failure during the I/O request, occur on the thread pool thread and throw exceptions when calling <xref:System.IO.Compression.GZipStream.EndRead%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09c56-192">次のコード例は、<xref:System.IO.Compression.GZipStream> クラスを使用してファイルを圧縮および圧縮解除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="09c56-192">The following code example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a file.</span></span>  
  
 [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]
 [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="09c56-193">メソッドは、ストリームの末尾を越えて非同期的に読み取ろうとしました。または、ディスク エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="09c56-193">The method tried to  read asynchronously past the end of the stream, or a disk error occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09c56-194">1 つ以上の引数が無効です。</span><span class="sxs-lookup"><span data-stu-id="09c56-194">One or more of the arguments is invalid.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="09c56-195">ストリームが閉じた後でメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="09c56-195">Methods were called after the stream was closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09c56-196">現在の <see cref="T:System.IO.Compression.GZipStream" /> 実装は、読み取り操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="09c56-196">The current <see cref="T:System.IO.Compression.GZipStream" /> implementation does not support the read operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09c56-197">ストリームが閉じているため、読み取り操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="09c56-197">A read operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] array, int offset, int count, AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] array, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (array As Byte(), offset As Integer, count As Integer, asyncCallback As AsyncCallback, asyncState As Object) As IAsyncResult" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ array, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="gZipStream.BeginWrite (array, offset, count, asyncCallback, asyncState)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback cback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback cback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, cback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ cback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="gZipStream.BeginWrite (buffer, offset, count, cback, state)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="09c56-198">現在のストリームに書き込むデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="09c56-198">The buffer containing data to write to the current stream.</span></span></param>
        <param name="buffer"><span data-ttu-id="09c56-199">現在のストリームに書き込むデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="09c56-199">The buffer containing data to write to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="09c56-200">書き込みの開始位置を示す <paramref name="array" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="09c56-200">The byte offset in <paramref name="array" /> at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="09c56-201">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="09c56-201">The maximum number of bytes to write.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="09c56-202">書き込みの操作完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="09c56-202">An optional asynchronous callback to be called when the write operation is complete.</span></span></param>
        <param name="cback"><span data-ttu-id="09c56-203">書き込みの操作完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="09c56-203">An optional asynchronous callback to be called when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="09c56-204">この特定の非同期書き込み要求を他の要求と区別する、ユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-204">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <param name="state"><span data-ttu-id="09c56-205">この特定の非同期書き込み要求を他の要求と区別する、ユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-205">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span></span></param>
        <summary><span data-ttu-id="09c56-206">非同期の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="09c56-206">Begins an asynchronous write operation.</span></span> <span data-ttu-id="09c56-207">(代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</span><span class="sxs-lookup"><span data-stu-id="09c56-207">(Consider using the <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="09c56-208">まだ保留中である可能性がある非同期の書き込み操作を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-208">An  object that represents the asynchronous write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-209">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]以降では、<xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType> メソッドを使用して、非同期の書き込み操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-209">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="09c56-210"><xref:System.IO.Compression.GZipStream.BeginWrite%2A> メソッドは、レガシコードをサポートするために [!INCLUDE[net_v45](~/includes/net-v45-md.md)] で引き続き使用できます。ただし、新しい非同期メソッドを使用すると、非同期 i/o 操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-210">The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</span></span> <span data-ttu-id="09c56-211">詳細については、「[非同期ファイル I/O](~/docs/standard/io/asynchronous-file-i-o.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-211">For more information, see [Asynchronous File I/O](~/docs/standard/io/asynchronous-file-i-o.md).</span></span>
  
 <span data-ttu-id="09c56-212"><xref:System.IO.Compression.GZipStream.BeginWrite%2A> メソッドは、<xref:System.IO.Compression.GZipStream> ストリームオブジェクトへの非同期書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="09c56-212">The <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method starts an asynchronous write operation to a <xref:System.IO.Compression.GZipStream> stream object.</span></span>  
  
 <span data-ttu-id="09c56-213"><xref:System.AsyncCallback> デリゲートを実装するコールバックメソッドを作成し、その名前を <xref:System.IO.Compression.GZipStream.BeginWrite%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="09c56-213">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09c56-214">基になるストリームが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-214">The underlying stream is <see langword="null" />.</span></span>  
  
<span data-ttu-id="09c56-215">または</span><span class="sxs-lookup"><span data-stu-id="09c56-215">-or-</span></span> 
<span data-ttu-id="09c56-216">基になるストリームが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="09c56-216">The underlying stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.GZipStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.Compression.GZipStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09c56-217">ファイルの圧縮解除中にストリームが読み取りをサポートするかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="09c56-217">Gets a value indicating whether the stream supports reading while decompressing a file.</span></span></summary>
        <value><span data-ttu-id="09c56-218"><see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Decompress," /> で、基になるストリームが読み取りをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09c56-218"><see langword="true" /> if the <see cref="T:System.IO.Compression.CompressionMode" /> value is <see langword="Decompress," /> and the underlying stream supports reading and is not closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="09c56-219"><see cref="T:System.IO.Compression.GZipStream" />から継承する場合は、<see cref="P:System.IO.Compression.GZipStream.CanSeek" />、<see cref="P:System.IO.Compression.GZipStream.CanWrite" />、および <see cref="P:System.IO.Compression.GZipStream.CanRead" />の各メンバーをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="09c56-219">When you inherit from <see cref="T:System.IO.Compression.GZipStream" />, you must override the following members: <see cref="P:System.IO.Compression.GZipStream.CanSeek" />, <see cref="P:System.IO.Compression.GZipStream.CanWrite" />, and <see cref="P:System.IO.Compression.GZipStream.CanRead" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.GZipStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.Compression.GZipStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09c56-220">ストリームがシークをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="09c56-220">Gets a value indicating whether the stream supports seeking.</span></span></summary>
        <value><span data-ttu-id="09c56-221">すべてのケースで <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09c56-221"><see langword="false" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="09c56-222"><see cref="T:System.IO.Compression.GZipStream" />から継承する場合は、<see cref="P:System.IO.Compression.GZipStream.CanSeek" />、<see cref="P:System.IO.Compression.GZipStream.CanWrite" />、および <see cref="P:System.IO.Compression.GZipStream.CanRead" />の各メンバーをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="09c56-222">When you inherit from <see cref="T:System.IO.Compression.GZipStream" />, you must override the following members: <see cref="P:System.IO.Compression.GZipStream.CanSeek" />, <see cref="P:System.IO.Compression.GZipStream.CanWrite" />, and <see cref="P:System.IO.Compression.GZipStream.CanRead" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.GZipStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.Compression.GZipStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09c56-223">ストリームが書き込みをサポートしているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="09c56-223">Gets a value indicating whether the stream supports writing.</span></span></summary>
        <value><span data-ttu-id="09c56-224"><see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> で、基になるストリームが書き込みをサポートし、閉じられていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09c56-224"><see langword="true" /> if the <see cref="T:System.IO.Compression.CompressionMode" /> value is <see langword="Compress" />, and the underlying stream supports writing and is not closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="09c56-225"><see cref="T:System.IO.Compression.GZipStream" />から継承する場合は、<see cref="P:System.IO.Compression.GZipStream.CanSeek" />、<see cref="P:System.IO.Compression.GZipStream.CanWrite" />、および <see cref="P:System.IO.Compression.GZipStream.CanRead" />の各メンバーをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="09c56-225">When you inherit from <see cref="T:System.IO.Compression.GZipStream" />, you must override the following members: <see cref="P:System.IO.Compression.GZipStream.CanSeek" />, <see cref="P:System.IO.Compression.GZipStream.CanWrite" />, and <see cref="P:System.IO.Compression.GZipStream.CanRead" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public override void CopyTo (System.IO.Stream destination, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyTo(class System.IO.Stream destination, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.CopyTo(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyTo (destination As Stream, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyTo(System::IO::Stream ^ destination, int bufferSize);" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.IO.Stream * int -&gt; unit" Usage="gZipStream.CopyTo (destination, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="09c56-226">現在の GZip ストリームの内容のコピー先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="09c56-226">The stream to which the contents of the current GZip stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="09c56-227">バッファーのサイズ。</span><span class="sxs-lookup"><span data-stu-id="09c56-227">The size of the buffer.</span></span> <span data-ttu-id="09c56-228">この値は、ゼロより大きな値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="09c56-228">This value must be greater than zero.</span></span> <span data-ttu-id="09c56-229">既定のサイズは 81920 です。</span><span class="sxs-lookup"><span data-stu-id="09c56-229">The default size is 81920.</span></span></param>
        <summary><span data-ttu-id="09c56-230">指定したバッファー サイズを使用して、現在の GZip ストリームからバイトを読み取り、別のストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="09c56-230">Reads the bytes from the current GZip stream and writes them to another stream, using a specified buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-231">コピーは現在の GZip ストリームの現在位置から開始し、コピー操作の完了後にコピー先ストリームの位置はリセットされません。</span><span class="sxs-lookup"><span data-stu-id="09c56-231">Copying begins at the current position in the current GZip stream, and does not reset the position of the destination stream after the copy operation is complete.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, int32 bufferSize, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CopyToAsync (destination As Stream, bufferSize As Integer, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ destination, int bufferSize, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CopyToAsync : System.IO.Stream * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="gZipStream.CopyToAsync (destination, bufferSize, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="09c56-232">現在の GZip ストリームの内容のコピー先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="09c56-232">The stream to which the contents of the current GZip stream will be copied.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="09c56-233">バッファーのサイズ (バイト数)。</span><span class="sxs-lookup"><span data-stu-id="09c56-233">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="09c56-234">この値は、ゼロより大きな値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="09c56-234">This value must be greater than zero.</span></span> <span data-ttu-id="09c56-235">既定のサイズは 81920 です。</span><span class="sxs-lookup"><span data-stu-id="09c56-235">The default size is 81920.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="09c56-236">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="09c56-236">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="09c56-237">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-237">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="09c56-238">指定のバッファー サイズを使用して、現在の GZip ストリームからバイトを非同期に読み取り、別のストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="09c56-238">Asynchronously reads the bytes from the current GZip stream and writes them to another stream, using a specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="09c56-239">非同期のコピー操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="09c56-239">A task that represents the asynchronous copy operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-240"><xref:System.IO.Compression.GZipStream.CopyToAsync%2A> メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-240">The <xref:System.IO.Compression.GZipStream.CopyToAsync%2A> method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="09c56-241">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="09c56-241">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="09c56-242">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-242">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="09c56-243">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="09c56-243">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

<span data-ttu-id="09c56-244">コピーは、現在の GZip ストリームの現在位置から開始します。</span><span class="sxs-lookup"><span data-stu-id="09c56-244">Copying begins at the current position in the current GZip stream.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="gZipStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="09c56-245">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09c56-245"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="09c56-246"><see cref="T:System.IO.Compression.GZipStream" /> で使用されたアンマネージド リソースを解放し、必要に応じてマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="09c56-246">Releases the unmanaged resources used by the <see cref="T:System.IO.Compression.GZipStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-247">このメソッドは、パブリックな <xref:System.ComponentModel.Component.Dispose%2A> メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-247">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="09c56-248"><xref:System.ComponentModel.Component.Dispose%2A> は、`disposing` パラメーターを `true`に設定して、protected <xref:System.IO.Compression.GZipStream.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="09c56-248"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Compression.GZipStream.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="09c56-249"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して <xref:System.IO.Compression.GZipStream.Dispose%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="09c56-249"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Compression.GZipStream.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="09c56-250">`disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.Compression.DeflateStream> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="09c56-250">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references.</span></span> <span data-ttu-id="09c56-251">このメソッドは、参照される各オブジェクトの <xref:System.ComponentModel.Component.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="09c56-251">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="09c56-252">
            <see cref="M:System.ComponentModel.Component.Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="09c56-252">
            <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="09c56-253"><see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" /> をオーバーライドする場合は、以前に <see cref="M:System.ComponentModel.Component.Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="09c56-253">When overriding <see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="09c56-254"><see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-254">For more information about how to implement <see cref="M:System.IO.Compression.GZipStream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="09c56-255"><see cref="M:System.ComponentModel.Component.Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-255">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="gZipStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09c56-256"><see cref="T:System.IO.Compression.GZipStream" /> によって使用されているアンマネージ リソースを非同期に解放します。</span><span class="sxs-lookup"><span data-stu-id="09c56-256">Asynchronously releases the unmanaged resources used by the <see cref="T:System.IO.Compression.GZipStream" />.</span></span></summary>
        <returns><span data-ttu-id="09c56-257">非同期の破棄操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="09c56-257">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-258">`DisposeAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する dispose 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-258">The `DisposeAsync` method enables you to perform a resource-intensive dispose operation without blocking the main thread.</span></span> <span data-ttu-id="09c56-259">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="09c56-259">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="09c56-260">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-260">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="09c56-261">このメソッドは、バッキングストアに変更を書き込み、ストリームを終了してリソースを解放することで、GZip ストリームを破棄します。</span><span class="sxs-lookup"><span data-stu-id="09c56-261">This method disposes the GZip stream by writing any changes to the backing store and closing the stream to release resources.</span></span>

<span data-ttu-id="09c56-262">`DisposeAsync` を呼び出すと、<xref:System.IO.Compression.GZipStream> によって使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="09c56-262">Calling `DisposeAsync` allows the resources used by the <xref:System.IO.Compression.GZipStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="09c56-263">詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-263">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="gZipStream.EndRead asyncResult" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult async_result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult async_result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (async_result As IAsyncResult) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ async_result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="gZipStream.EndRead async_result" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="async_result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="09c56-264">完了する保留中の非同期要求への参照。</span><span class="sxs-lookup"><span data-stu-id="09c56-264">The reference to the pending asynchronous request to finish.</span></span></param>
        <param name="async_result"><span data-ttu-id="09c56-265">完了する保留中の非同期要求への参照。</span><span class="sxs-lookup"><span data-stu-id="09c56-265">The reference to the pending asynchronous request to finish.</span></span></param>
        <summary><span data-ttu-id="09c56-266">保留中の非同期の読み取りが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="09c56-266">Waits for the pending asynchronous read to complete.</span></span> <span data-ttu-id="09c56-267">(代わりに、<see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</span><span class="sxs-lookup"><span data-stu-id="09c56-267">(Consider using the <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <returns><span data-ttu-id="09c56-268">ストリームから読み取ったバイト数 (0 ～要求したバイト数の数値)。</span><span class="sxs-lookup"><span data-stu-id="09c56-268">The number of bytes read from the stream, between 0 (zero) and the number of bytes you requested.</span></span> <span data-ttu-id="09c56-269"><see cref="T:System.IO.Compression.GZipStream" /> が 0 を返すのは、ストリームの末尾で読み取ろうとしたときだけです。それ以外の場合は、少なくとも 1 バイトが読み取り可能になるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="09c56-269"><see cref="T:System.IO.Compression.GZipStream" /> returns 0 only at the end of the stream; otherwise, it blocks until at least one byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-270">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]以降では、<xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType> メソッドを使用して非同期の読み取り操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-270">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous read operations by using the <xref:System.IO.Stream.ReadAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="09c56-271"><xref:System.IO.Compression.GZipStream.EndRead%2A> メソッドは、レガシコードをサポートするために [!INCLUDE[net_v45](~/includes/net-v45-md.md)] で引き続き使用できます。ただし、新しい非同期メソッドを使用すると、非同期 i/o 操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-271">The <xref:System.IO.Compression.GZipStream.EndRead%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</span></span> <span data-ttu-id="09c56-272">詳細については、「[非同期ファイル I/O](~/docs/standard/io/asynchronous-file-i-o.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-272">For more information, see [Asynchronous File I/O](~/docs/standard/io/asynchronous-file-i-o.md).</span></span>
  
 <span data-ttu-id="09c56-273">ストリームから読み取ったバイト数を確認するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="09c56-273">Call this method to determine how many bytes were read from the stream.</span></span> <span data-ttu-id="09c56-274">このメソッドを1回呼び出すと、<xref:System.IO.Compression.GZipStream.BeginRead%2A> と <xref:System.IO.Compression.GZipStream.EndRead%2A>の呼び出しの間に読み取られたバイト数を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="09c56-274">This method can be called once to return the amount of bytes read between calls to <xref:System.IO.Compression.GZipStream.BeginRead%2A> and <xref:System.IO.Compression.GZipStream.EndRead%2A>.</span></span>  
  
 <span data-ttu-id="09c56-275">このメソッドは、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="09c56-275">This method blocks until the I/O operation has completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09c56-276">次のコード例は、<xref:System.IO.Compression.GZipStream> クラスを使用してファイルを圧縮および圧縮解除する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="09c56-276">The following code example shows how to use the <xref:System.IO.Compression.GZipStream> class to compress and decompress a file.</span></span>  
  
 [!code-csharp[IO.Compression.GZip1#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Compression.GZip1/CS/gziptest.cs#1)]
 [!code-vb[IO.Compression.GZip1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Compression.GZip1/VB/gziptest.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09c56-277"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-277"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="09c56-278"><paramref name="asyncResult" /> は現在のストリームの <see cref="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドから取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="09c56-278"><paramref name="asyncResult" /> did not originate from a <see cref="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method on the current stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09c56-279">ストリームが閉じているため、終了操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="09c56-279">The end operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="gZipStream.EndWrite asyncResult" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult async_result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult async_result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (async_result As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ async_result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="gZipStream.EndWrite async_result" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="async_result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="09c56-280">非同期呼び出しを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-280">The object that represents the asynchronous call.</span></span></param>
        <param name="async_result"><span data-ttu-id="09c56-281">非同期呼び出しを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="09c56-281">The object that represents the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="09c56-282">非同期書き込み操作の終了を処理します。</span><span class="sxs-lookup"><span data-stu-id="09c56-282">Handles the end of an asynchronous write operation.</span></span> <span data-ttu-id="09c56-283">(代わりに、<see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> メソッドの使用を検討します)。</span><span class="sxs-lookup"><span data-stu-id="09c56-283">(Consider using the <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" /> method instead.)</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-284">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]以降では、<xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType> メソッドを使用して、非同期の書き込み操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-284">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], you can perform asynchronous write operations by using the <xref:System.IO.Stream.WriteAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="09c56-285"><xref:System.IO.Compression.GZipStream.EndWrite%2A> メソッドは、レガシコードをサポートするために [!INCLUDE[net_v45](~/includes/net-v45-md.md)] で引き続き使用できます。ただし、新しい非同期メソッドを使用すると、非同期 i/o 操作をより簡単に実装できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-285">The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method is still available in [!INCLUDE[net_v45](~/includes/net-v45-md.md)] to support legacy code; however, you can implement asynchronous I/O operations more easily by using the new async methods.</span></span> <span data-ttu-id="09c56-286">詳細については、「[非同期ファイル I/O](~/docs/standard/io/asynchronous-file-i-o.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="09c56-286">For more information, see [Asynchronous File I/O](~/docs/standard/io/asynchronous-file-i-o.md).</span></span>
  
 <span data-ttu-id="09c56-287"><xref:System.IO.Compression.GZipStream.EndWrite%2A> メソッドは、<xref:System.IO.Compression.GZipStream.BeginWrite%2A> メソッドで開始された非同期書き込み操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="09c56-287">The <xref:System.IO.Compression.GZipStream.EndWrite%2A> method completes the asynchronous write operation started in the <xref:System.IO.Compression.GZipStream.BeginWrite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09c56-288">基になるストリームが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-288">The underlying stream is <see langword="null" />.</span></span>  
  
<span data-ttu-id="09c56-289">または</span><span class="sxs-lookup"><span data-stu-id="09c56-289">-or-</span></span> 
<span data-ttu-id="09c56-290">基になるストリームが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="09c56-290">The underlying stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="gZipStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09c56-291">内部バッファーをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="09c56-291">Flushes the internal buffers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-292">このメソッドは、現在の圧縮モードが <xref:System.IO.Compression.CompressionMode.Compress>、基になるストリームにまだ書き込みが残っている入力がある場合にのみフラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="09c56-292">This method flushes only if the current compression mode is <xref:System.IO.Compression.CompressionMode.Compress> and the underlying stream still has some input left to write.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="09c56-293">基になるストリームが閉じられました。</span><span class="sxs-lookup"><span data-stu-id="09c56-293">The underlying stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync (cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="gZipStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="09c56-294">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="09c56-294">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="09c56-295">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-295">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="09c56-296">この GZip ストリームに対応するすべてのバッファーを非同期にクリアし、バッファー内のデータを基になるデバイスに書き込み、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="09c56-296">Asynchronously clears all buffers for this GZip stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="09c56-297">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="09c56-297">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-298">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="09c56-298">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.GZipStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.Compression.GZipStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09c56-299">このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="09c56-299">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="09c56-300">long 値。</span><span class="sxs-lookup"><span data-stu-id="09c56-300">A long value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09c56-301">このストリームでは、このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="09c56-301">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.GZipStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.Compression.GZipStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09c56-302">このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="09c56-302">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="09c56-303">long 値。</span><span class="sxs-lookup"><span data-stu-id="09c56-303">A long value.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09c56-304">このストリームでは、このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="09c56-304">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="gZipStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="09c56-305">メモリの領域。</span><span class="sxs-lookup"><span data-stu-id="09c56-305">A region of memory.</span></span> <span data-ttu-id="09c56-306">このメソッドが戻ると、この領域のコンテンツは現在のソースから読み取られたバイトに置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="09c56-306">When this method returns, the contents of this region are replaced by the bytes read from the current source.</span></span></param>
        <summary><span data-ttu-id="09c56-307">現在の GZip ストリームからバイト スパンにバイト シーケンスを読み取り、読み取られたバイト数だけ GZip ストリーム内の位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="09c56-307">Reads a sequence of bytes from the current GZip stream into a byte span and advances the position within the GZip stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="09c56-308">バッファーに読み取られた合計バイト数です。</span><span class="sxs-lookup"><span data-stu-id="09c56-308">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="09c56-309">要求しただけのバイト数を読み取ることができなかった場合、この値はバッファーに割り当てられているバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</span><span class="sxs-lookup"><span data-stu-id="09c56-309">This can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-310">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.Compression.GZipStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-310">Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span> <span data-ttu-id="09c56-311">現在のストリームから非同期的に読み取るには、<xref:System.IO.Compression.GZipStream.ReadAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-311">Use the <xref:System.IO.Compression.GZipStream.ReadAsync%2A> method to read asynchronously from the current stream.</span></span>

<span data-ttu-id="09c56-312">このメソッドは、現在のストリームから最大 `buffer.Length` バイトを読み取り、`buffer`に格納します。</span><span class="sxs-lookup"><span data-stu-id="09c56-312">This method read a maximum of `buffer.Length` bytes from the current stream and store them in `buffer`.</span></span> <span data-ttu-id="09c56-313">GZip ストリーム内の現在位置は、読み取られたバイト数で詳細になります。ただし、例外が発生した場合、GZip ストリーム内の現在位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="09c56-313">The current position within the GZip stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the GZip stream remains unchanged.</span></span> <span data-ttu-id="09c56-314">このメソッドは、データが使用できない場合に、少なくとも1バイトのデータを読み取ることができるようになるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="09c56-314">This method will block until at least one byte of data can be read, in the event that no data is available.</span></span> <span data-ttu-id="09c56-315">`Read` は、ストリームにデータがこれ以上ない場合にのみ0を返します。これ以上のデータは必要ありません (閉じているソケットやファイルの終端など)。</span><span class="sxs-lookup"><span data-stu-id="09c56-315">`Read` returns 0 only when there is no more data in the stream and no more is expected (such as a closed socket or end of file).</span></span> <span data-ttu-id="09c56-316">メソッドは、ストリームの末尾に到達していない場合でも、要求されたバイト数よりも小さい値を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="09c56-316">The method is free to return fewer bytes than requested even if the end of the stream has not been reached.</span></span>

 <span data-ttu-id="09c56-317">プリミティブデータ型を読み取るには、<xref:System.IO.BinaryReader> を使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-317">Use <xref:System.IO.BinaryReader> for reading primitive data types.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (array As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="gZipStream.Read (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="09c56-318">圧縮解除されたバイトを格納するために使用する配列。</span><span class="sxs-lookup"><span data-stu-id="09c56-318">The array used to store decompressed bytes.</span></span></param>
        <param name="offset"><span data-ttu-id="09c56-319">読み取られるバイトが配置される <paramref name="array" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="09c56-319">The byte offset in <paramref name="array" /> at which the read bytes will be placed.</span></span></param>
        <param name="count"><span data-ttu-id="09c56-320">読み取られる、圧縮解除されたバイトの最大数。</span><span class="sxs-lookup"><span data-stu-id="09c56-320">The maximum number of decompressed bytes to read.</span></span></param>
        <summary><span data-ttu-id="09c56-321">圧縮解除されたバイト数を、指定したバイト配列に読み取ります。</span><span class="sxs-lookup"><span data-stu-id="09c56-321">Reads a number of decompressed bytes into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="09c56-322">圧縮解除されバイト配列に読み取られたバイト数。</span><span class="sxs-lookup"><span data-stu-id="09c56-322">The number of bytes that were decompressed into the byte array.</span></span> <span data-ttu-id="09c56-323">既にストリームの末尾に到達している場合は、ゼロまたは読み取られたバイト数が返されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-323">If the end of the stream has been reached, zero or the number of bytes read is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-324">データが無効な形式で見つかった場合は、最後の操作の1つとして <xref:System.IO.InvalidDataException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="09c56-324">If data is found in an invalid format, an <xref:System.IO.InvalidDataException> is thrown as one of the last operations.</span></span> <span data-ttu-id="09c56-325">巡回冗長検査 (CRC) は、このメソッドの最後の操作の1つとして実行されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-325">A cyclic redundancy check (CRC) is performed as one of the last operations of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09c56-326">次の例では、<xref:System.IO.Compression.GZipStream.Read%2A> および <xref:System.IO.Compression.GZipStream.Write%2A> メソッドを使用してバイトの圧縮と圧縮解除を行う方法を示します。</span><span class="sxs-lookup"><span data-stu-id="09c56-326">The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.GZipStream.Read%2A> and <xref:System.IO.Compression.GZipStream.Write%2A> methods.</span></span>  
  
 [!code-csharp[System.IO.Compression.GZipStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.GZipStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="09c56-327"><paramref name="array" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-327"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09c56-328">オブジェクトが作成されたとき、<see cref="T:System.IO.Compression.CompressionMode" /> 値が <see langword="Compress" /> でした。</span><span class="sxs-lookup"><span data-stu-id="09c56-328">The <see cref="T:System.IO.Compression.CompressionMode" /> value was <see langword="Compress" /> when the object was created.</span></span>  
  
<span data-ttu-id="09c56-329">または</span><span class="sxs-lookup"><span data-stu-id="09c56-329">-or-</span></span> 
<span data-ttu-id="09c56-330">基になるストリームが読み取りをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="09c56-330">The underlying stream does not support reading.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="09c56-331"><paramref name="offset" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="09c56-331"><paramref name="offset" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="09c56-332">または</span><span class="sxs-lookup"><span data-stu-id="09c56-332">-or-</span></span> 
 <span data-ttu-id="09c56-333"><paramref name="array" /> の長さからインデックスの開始点を引いた値が <paramref name="count" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="09c56-333"><paramref name="array" /> length minus the index starting point is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.IO.InvalidDataException"><span data-ttu-id="09c56-334">データ形式が無効です。</span><span class="sxs-lookup"><span data-stu-id="09c56-334">The data is in an invalid format.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="09c56-335">ストリームは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="09c56-335">The stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (buffer As Memory(Of Byte), Optional cancellationToken As CancellationToken = null) As ValueTask(Of Integer)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="gZipStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="09c56-336">データを書き込むメモリの領域。</span><span class="sxs-lookup"><span data-stu-id="09c56-336">The region of memory to write the data into.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="09c56-337">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="09c56-337">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="09c56-338">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-338">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="09c56-339">現在の GZip ストリームからバイト メモリ領域にバイト シーケンスを非同期に読み取り、読み取られたバイト数だけ GZip ストリーム内の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="09c56-339">Asynchronously reads a sequence of bytes from the current GZip stream into a byte memory region, advances the position within the GZip stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="09c56-340">非同期の読み取り操作を表すタスク。バッファーに読み取られたバイト数の合計がラップされます。</span><span class="sxs-lookup"><span data-stu-id="09c56-340">A task that represents the asynchronous read operation, which wraps the total number of bytes read into the buffer.</span></span> <span data-ttu-id="09c56-341">要求しただけのバイト数を読み取ることができなかった場合、結果の値はバッファーに割り当てられているバイト数より小さくなります。GZip ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</span><span class="sxs-lookup"><span data-stu-id="09c56-341">The result value can be less than the number of bytes allocated in the buffer if that many bytes are not currently available, or it can be 0 (zero) if the end of the GZip stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-342">`ReadAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-342">The `ReadAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="09c56-343">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="09c56-343">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="09c56-344">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-344">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="09c56-345">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.Compression.GZipStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-345">Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="09c56-346">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="09c56-346">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] array, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAsync (array As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ array, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="gZipStream.ReadAsync (array, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="09c56-347">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="09c56-347">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="09c56-348">GZip ストリームからのデータの書き込み開始位置を示す <paramref name="array" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="09c56-348">The byte offset in <paramref name="array" /> at which to begin writing data from the GZip stream.</span></span></param>
        <param name="count"><span data-ttu-id="09c56-349">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="09c56-349">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="09c56-350">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="09c56-350">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="09c56-351">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-351">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="09c56-352">現在の GZip ストリームからバイト配列にバイト シーケンスを非同期に読み取り、読み取られたバイト数だけ GZip ストリーム内の位置を進め、キャンセル要求を監視します。</span><span class="sxs-lookup"><span data-stu-id="09c56-352">Asynchronously reads a sequence of bytes from the current GZip stream into a byte array, advances the position within the GZip stream by the number of bytes read, and monitors cancellation requests.</span></span></summary>
        <returns><span data-ttu-id="09c56-353">非同期の読み取り操作を表すタスク。<paramref name="array" /> に読み取られたバイト数の合計がラップされます。</span><span class="sxs-lookup"><span data-stu-id="09c56-353">A task that represents the asynchronous read operation, which wraps the total number of bytes read into the <paramref name="array" />.</span></span> <span data-ttu-id="09c56-354">現在使用できるバイト数が要求した数より小さい場合、結果の値は要求したバイト数より小さくなることがあります。また、GZip ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="09c56-354">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the GZip stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks

<span data-ttu-id="09c56-355">`ReadAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-355">The `ReadAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="09c56-356">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="09c56-356">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="09c56-357">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-357">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="09c56-358">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.Compression.GZipStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-358">Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

<span data-ttu-id="09c56-359">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="09c56-359">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="gZipStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09c56-360">ストリームから 1 バイトを読み取り、GZip ストリーム内の位置を 1 バイト進めます。GZip ストリームの末尾の場合は -1 を返します。</span><span class="sxs-lookup"><span data-stu-id="09c56-360">Reads a byte from the GZip stream and advances the position within the stream by one byte, or returns -1 if at the end of the GZip stream.</span></span></summary>
        <returns><span data-ttu-id="09c56-361"><see cref="T:System.Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="09c56-361">The unsigned byte cast to an <see cref="T:System.Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-362">現在のインスタンスが読み取りをサポートしているかどうかを確認するには、<xref:System.IO.Compression.GZipStream.CanRead%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-362">Use the <xref:System.IO.Compression.GZipStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="gZipStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="09c56-363">ストリーム内の位置。</span><span class="sxs-lookup"><span data-stu-id="09c56-363">The location in the stream.</span></span></param>
        <param name="origin"><span data-ttu-id="09c56-364"><see cref="T:System.IO.SeekOrigin" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="09c56-364">One of the <see cref="T:System.IO.SeekOrigin" /> values.</span></span></param>
        <summary><span data-ttu-id="09c56-365">このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="09c56-365">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="09c56-366">long 値。</span><span class="sxs-lookup"><span data-stu-id="09c56-366">A long value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09c56-367">このストリームでは、このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="09c56-367">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="gZipStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09c56-368">ストリームの長さです。</span><span class="sxs-lookup"><span data-stu-id="09c56-368">The length of the stream.</span></span></param>
        <summary><span data-ttu-id="09c56-369">このプロパティはサポートされていないため、常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="09c56-369">This property is not supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="09c56-370">このストリームでは、このプロパティはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="09c56-370">This property is not supported on this stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="gZipStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="09c56-371">メモリの領域。</span><span class="sxs-lookup"><span data-stu-id="09c56-371">A region of memory.</span></span> <span data-ttu-id="09c56-372">このメソッドでは、この領域のコンテンツが現在の GZip ストリームにコピーされます。</span><span class="sxs-lookup"><span data-stu-id="09c56-372">This method copies the contents of this region to the current GZip stream.</span></span></param>
        <summary><span data-ttu-id="09c56-373">読み取り専用バイト スパンから現在の GZip ストリームにバイト シーケンスを書き込み、書き込まれたバイト数だけこの GZip ストリーム内の現在位置を進めます。</span><span class="sxs-lookup"><span data-stu-id="09c56-373">Writes a sequence of bytes to the current GZip stream from a read-only byte span and advances the current position within this GZip stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-374">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.Compression.GZipStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-374">Use the <xref:System.IO.Compression.GZipStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span> <span data-ttu-id="09c56-375">現在のストリームに非同期に書き込むには、<xref:System.IO.Compression.GZipStream.WriteAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-375">Use the <xref:System.IO.Compression.GZipStream.WriteAsync%2A> method to write asynchronously to the current stream.</span></span>

<span data-ttu-id="09c56-376">書き込み操作が成功した場合、GZip ストリーム内の位置は、書き込まれたバイト数だけ進みます。</span><span class="sxs-lookup"><span data-stu-id="09c56-376">If the write operation is successful, the position within the GZip stream advances by the number of bytes written.</span></span> <span data-ttu-id="09c56-377">例外が発生した場合、GZip ストリーム内の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="09c56-377">If an exception occurs, the position within the GZip stream remains unchanged.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] array, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] array, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (array As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ array, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="gZipStream.Write (array, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="09c56-378">圧縮するデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="09c56-378">The buffer that contains the data to compress.</span></span></param>
        <param name="offset"><span data-ttu-id="09c56-379">バイトの読み取り元となる <paramref name="array" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="09c56-379">The byte offset in <paramref name="array" /> from which the bytes will be read.</span></span></param>
        <param name="count"><span data-ttu-id="09c56-380">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="09c56-380">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="09c56-381">圧縮されたバイトを、指定されたバイト配列から、基になる GZip ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="09c56-381">Writes compressed bytes to the underlying GZip stream from the specified byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09c56-382">書き込み操作はすぐには実行されませんが、バッファーサイズに達するか、<xref:System.IO.Compression.GZipStream.Flush%2A> または <xref:System.IO.Stream.Close%2A> メソッドが呼び出されるまでバッファリングされます。</span><span class="sxs-lookup"><span data-stu-id="09c56-382">The write operation might not occur immediately but is buffered until the buffer size is reached or until the <xref:System.IO.Compression.GZipStream.Flush%2A> or <xref:System.IO.Stream.Close%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09c56-383">次の例では、<xref:System.IO.Compression.GZipStream.Read%2A> および <xref:System.IO.Compression.GZipStream.Write%2A> メソッドを使用してバイトの圧縮と圧縮解除を行う方法を示します。</span><span class="sxs-lookup"><span data-stu-id="09c56-383">The following example shows how to compress and decompress bytes by using the <xref:System.IO.Compression.GZipStream.Read%2A> and <xref:System.IO.Compression.GZipStream.Write%2A> methods.</span></span>  
  
 [!code-csharp[System.IO.Compression.GZipStream#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.gzipstream/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.GZipStream#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.gzipstream/vb/program3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="09c56-384">ストリームが閉じているため、書き込み操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="09c56-384">The write operation cannot be performed because the stream is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As ReadOnlyMemory(Of Byte), Optional cancellationToken As CancellationToken = null) As ValueTask" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="gZipStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="09c56-385">データを書き込む元のメモリの領域。</span><span class="sxs-lookup"><span data-stu-id="09c56-385">The region of memory to write data from.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="09c56-386">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="09c56-386">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="09c56-387">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-387">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="09c56-388">圧縮されたバイトを、指定された読み取り専用バイト メモリ領域から、基になる GZip ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="09c56-388">Asynchronously writes compressed bytes to the underlying GZip stream from the specified read-only byte memory region.</span></span></summary>
        <returns><span data-ttu-id="09c56-389">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="09c56-389">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-390">`WriteAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-390">The `WriteAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="09c56-391">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="09c56-391">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="09c56-392">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-392">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="09c56-393">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.Compression.GZipStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-393">Use the <xref:System.IO.Compression.GZipStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="09c56-394">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="09c56-394">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] array, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] array, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.GZipStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (array As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ array, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="gZipStream.WriteAsync (array, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="09c56-395">圧縮するデータを格納しているバッファー。</span><span class="sxs-lookup"><span data-stu-id="09c56-395">The buffer that contains the data to compress.</span></span></param>
        <param name="offset"><span data-ttu-id="09c56-396">GZip ストリームへのバイトのコピーを開始する位置を示す <paramref name="array" /> 内のバイト オフセット。インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="09c56-396">The zero-based byte offset in <paramref name="array" /> from which to begin copying bytes to the GZip stream.</span></span></param>
        <param name="count"><span data-ttu-id="09c56-397">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="09c56-397">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="09c56-398">キャンセル要求を監視するトークン。</span><span class="sxs-lookup"><span data-stu-id="09c56-398">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="09c56-399">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="09c56-399">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="09c56-400">圧縮されたバイトを、指定のバイト配列から、基になる GZip ストリームに非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="09c56-400">Asynchronously writes compressed bytes to the underlying GZip stream from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="09c56-401">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="09c56-401">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="09c56-402">`WriteAsync` メソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する i/o 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="09c56-402">The `WriteAsync` method enables you to perform resource-intensive I/O operations without blocking the main thread.</span></span> <span data-ttu-id="09c56-403">このパフォーマンスに関する考慮事項は、時間のかかるストリーム操作によって UI スレッドがブロックされ、アプリが動作していないと見なされる可能性がある [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリまたは[!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] アプリで特に重要です。</span><span class="sxs-lookup"><span data-stu-id="09c56-403">This performance consideration is particularly important in a [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] app or [!INCLUDE[desktop_appname](~/includes/desktop-appname-md.md)] app where a time-consuming stream operation can block the UI thread and make your app appear as if it is not working.</span></span> <span data-ttu-id="09c56-404">非同期メソッドは Visual Basic およびC#の `await` キーワード `async` と組み合わせて使用されます。</span><span class="sxs-lookup"><span data-stu-id="09c56-404">The async methods are used in conjunction with the `async` and `await` keywords in Visual Basic and C#.</span></span>

<span data-ttu-id="09c56-405">現在のインスタンスが書き込みをサポートしているかどうかを判断するには、<xref:System.IO.Compression.GZipStream.CanWrite%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="09c56-405">Use the <xref:System.IO.Compression.GZipStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>

<span data-ttu-id="09c56-406">操作が完了前にキャンセルされた場合、返されたタスクには、<xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> プロパティの <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> 値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="09c56-406">If the operation is canceled before it completes, the returned task contains the <xref:System.Threading.Tasks.TaskStatus.Canceled?displayProperty=nameWithType> value for the <xref:System.Threading.Tasks.Task.Status?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
