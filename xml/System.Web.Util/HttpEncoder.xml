<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b1de409950df65290949f70254c48a035167b28" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78757820" /></Metadata><TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpEncoder extends System.Object" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <TypeSignature Language="F#" Value="type HttpEncoder = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="25021-101">エンコーディングとデコーディングのロジックを提供します。</span><span class="sxs-lookup"><span data-stu-id="25021-101">Provides encoding and decoding logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-102">クラスには、<xref:System.Web.HttpUtility>、<xref:System.Web.HttpServerUtility>、<xref:System.Net.HttpResponseHeader>などのクラスのメソッドによって使用されるエンコードおよびデコードのロジックが含まれています。</span><span class="sxs-lookup"><span data-stu-id="25021-102">The class contains encoding and decoding logic that is used by methods in classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.</span></span>  
  
 <span data-ttu-id="25021-103"><xref:System.Web.Util.HttpEncoder> クラスから継承し、その動作をオーバーライドして、ASP.NET の既定のエンコードおよびデコード動作をカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="25021-103">You can inherit from the <xref:System.Web.Util.HttpEncoder> class and override its behavior to customize the default encoding and decoding behavior of ASP.NET.</span></span> <span data-ttu-id="25021-104">次に、<xref:System.Web.Configuration.HttpRuntimeSection> クラスの <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> プロパティを設定して、カスタムクラスを構成します。</span><span class="sxs-lookup"><span data-stu-id="25021-104">You then set the <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> property of the <xref:System.Web.Configuration.HttpRuntimeSection> class to configure your custom class.</span></span>  
  
 <span data-ttu-id="25021-105"><xref:System.Web.Util.HttpEncoder> から派生するエンコードおよびデコード用のカスタムクラスを使用すると、組み込みの ASP.NET エンコードおよびデコード動作をオーバーライドしたり、選択した部分のみを変更したりできます。</span><span class="sxs-lookup"><span data-stu-id="25021-105">A custom class for encoding and decoding that derives from <xref:System.Web.Util.HttpEncoder> can override the built-in ASP.NET encoding and decoding behavior or change only selected aspects of it.</span></span>  
  
 <span data-ttu-id="25021-106">ASP.NET でのカスタムエンコードの種類を構成して、次のエンコーディング動作を置き換えるか補完することができます。</span><span class="sxs-lookup"><span data-stu-id="25021-106">You can configure the custom encoding type for in ASP.NET to replace or supplement the following encoding behavior:</span></span>  
  
-   <span data-ttu-id="25021-107">HTML エンコード</span><span class="sxs-lookup"><span data-stu-id="25021-107">HTML encoding</span></span>  
  
-   <span data-ttu-id="25021-108">HTML 属性のエンコード</span><span class="sxs-lookup"><span data-stu-id="25021-108">HTML attribute encoding</span></span>  
  
-   <span data-ttu-id="25021-109">URL エンコード</span><span class="sxs-lookup"><span data-stu-id="25021-109">URL encoding</span></span>  
  
-   <span data-ttu-id="25021-110">URL パスのエンコード</span><span class="sxs-lookup"><span data-stu-id="25021-110">URL path encoding</span></span>  
  
-   <span data-ttu-id="25021-111">HTTP ヘッダーの名前とヘッダー値のエンコード</span><span class="sxs-lookup"><span data-stu-id="25021-111">HTTP header name and header value encoding</span></span>  
  
 <span data-ttu-id="25021-112">既定では、ASP.NET アプリケーションは、すべての出力エンコーディングに <xref:System.Web.Security.AntiXss.AntiXssEncoder> の種類を使用するように構成されています。</span><span class="sxs-lookup"><span data-stu-id="25021-112">By default, ASP.NET applications are configured to use the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type for all output encoding.</span></span>  
  
 <span data-ttu-id="25021-113">アプリケーションレベルの Web.config ファイルの次の例は、ASP.NET アプリケーションに対して <xref:System.Web.Security.AntiXss.AntiXssEncoder> 型がどのように設定されているかを示しています。</span><span class="sxs-lookup"><span data-stu-id="25021-113">The following example from an application-level Web.config file shows how the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type is set for an ASP.NET application:</span></span>  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 <span data-ttu-id="25021-114">この例の構成設定は、アプリケーションですべての出力エンコーディングを実行するように <xref:System.Web.Security.AntiXss.AntiXssEncoder> クラスを設定します。</span><span class="sxs-lookup"><span data-stu-id="25021-114">The configuration setting in the example sets the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class to perform all output encoding in the application.</span></span> <span data-ttu-id="25021-115">詳細については、「<xref:System.Web.Security.AntiXss.AntiXssEncoder> クラスの概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="25021-115">For more information, see the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class overview.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="25021-116">カスタムエンコーダクラスを作成し、基底クラスの基本メソッドをオーバーライドすると、派生エンコーダーは、オーバーライドされたメソッドのいずれかから例外をスローする場合があります。</span><span class="sxs-lookup"><span data-stu-id="25021-116">When you create a custom encoder class and override the base methods of the base class, the derived encoder might throw an exception from any of the overridden methods.</span></span> <span data-ttu-id="25021-117">ただし、次の場合、このような例外をスローすると、ASP.NET で予期しない動作が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="25021-117">However, in the following cases throwing such an exception could lead to unexpected behavior in ASP.NET:</span></span>  
  
<span data-ttu-id="25021-118">-ASP.NET が、カスタムエンコーダーからスローされた未処理の例外によって発生したエラーページを表示している場合、ASP.NET はカスタムエンコーダーを呼び出すことによってエラー出力をエンコードしようとしません。</span><span class="sxs-lookup"><span data-stu-id="25021-118">-   If ASP.NET is rendering an error page that is caused by an unhandled exception that was thrown from a custom encoder, ASP.NET does not attempt to encode its error output by calling into the custom encoder.</span></span> <span data-ttu-id="25021-119">これにより、再帰エラー条件が回避します。</span><span class="sxs-lookup"><span data-stu-id="25021-119">This avoids recursive error conditions.</span></span>  
  
<span data-ttu-id="25021-120">-ASP.NET が IIS に HTTP ヘッダーを送信している場合、ASP.NET には未処理の例外のプロビジョニングがありません。</span><span class="sxs-lookup"><span data-stu-id="25021-120">-   When ASP.NET is sending HTTP headers to IIS, ASP.NET has no provision for unhandled exceptions.</span></span> <span data-ttu-id="25021-121">そのため、標準の ASP.NET エラーページが表示されます (構成設定によってこのページが表示される場合)。</span><span class="sxs-lookup"><span data-stu-id="25021-121">Therefore, the standard ASP.NET error page will be rendered (if configuration settings allows this page to be displayed).</span></span></para></block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25021-122"><see cref="T:System.Web.Util.HttpEncoder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="25021-122">Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.Util.HttpEncoder with get, set" Usage="System.Web.Util.HttpEncoder.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25021-123">アプリケーションで使用する <see cref="T:System.Web.Util.HttpEncoder" /> の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="25021-123">Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</span></span></summary>
        <value><span data-ttu-id="25021-124">使用するエンコーダー/デコーダーの種類への参照。</span><span class="sxs-lookup"><span data-stu-id="25021-124">A reference to the encoder/decoder type that will be used.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-125">派生 <xref:System.Web.Util.HttpEncoder> 型が構成ファイルで指定されている場合、<xref:System.Web.Util.HttpEncoder.Current%2A> プロパティはカスタム型への参照を返します。</span><span class="sxs-lookup"><span data-stu-id="25021-125">If a derived <xref:System.Web.Util.HttpEncoder> type is specified in the configuration file, the <xref:System.Web.Util.HttpEncoder.Current%2A> property returns a reference to the custom type.</span></span> <span data-ttu-id="25021-126">ただし、カスタムエンコーダーが使用されていない場合、プロパティは既定の ASP.NET <xref:System.Web.Util.HttpEncoder> インスタンスへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="25021-126">However, if no custom encoder is used, the property returns a reference to the default ASP.NET <xref:System.Web.Util.HttpEncoder> instance.</span></span>  
  
 <span data-ttu-id="25021-127"><xref:System.Web.Util.HttpEncoder.Current%2A> プロパティはスレッドセーフではありません。</span><span class="sxs-lookup"><span data-stu-id="25021-127">The <xref:System.Web.Util.HttpEncoder.Current%2A> property is not thread-safe.</span></span> <span data-ttu-id="25021-128">このプロパティは、`Application_Start` が1つのスレッドで実行されるため、アプリケーションの `Application_Start` メソッドでのみ設定します。</span><span class="sxs-lookup"><span data-stu-id="25021-128">Set this property only in the application's `Application_Start` method, because `Application_Start` runs on a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25021-129">このプロパティに割り当てられているエンコーダー インスタンスは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="25021-129">The encoder instance that is being assigned to this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.Util.HttpEncoder" Usage="System.Web.Util.HttpEncoder.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25021-130">ASP.NET の既定のエンコーダーへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="25021-130">Gets a reference to the default encoder for ASP.NET.</span></span></summary>
        <value><span data-ttu-id="25021-131">既定のエンコーダーへの参照。</span><span class="sxs-lookup"><span data-stu-id="25021-131">A reference to the default encoder.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-132">一般的なエンコードの問題は、既定の ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> 動作によってスペースが "+" 文字に変換されることです。</span><span class="sxs-lookup"><span data-stu-id="25021-132">A common encoding issue is that the default ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> behavior converts spaces into the "+" character.</span></span> <span data-ttu-id="25021-133">従来、"+" 文字は、URL のスペース文字をより人間が判読できる方法にエンコードするためのインターネット規約でした。</span><span class="sxs-lookup"><span data-stu-id="25021-133">Historically, the "+" character has been an Internet convention for encoding space characters in a URL into a more human-readable manner.</span></span> <span data-ttu-id="25021-134">ただし、標準によっては、空白文字は "+" 文字ではなく "%20" としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-134">However, according to standards, the space character is supposed to be encoded as "%20" and instead of as the "+" character.</span></span> <span data-ttu-id="25021-135">ASP.NET を使用すると、より標準に準拠したエンコードアルゴリズムを実装できます。</span><span class="sxs-lookup"><span data-stu-id="25021-135">ASP.NET lets you implement a more standards compliant encoding algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberSignature Language="F#" Value="abstract member HeaderNameValueEncode : string * string * string * string -&gt; unit&#xA;override this.HeaderNameValueEncode : string * string * string * string -&gt; unit" Usage="httpEncoder.HeaderNameValueEncode (headerName, headerValue, encodedHeaderName, encodedHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName"><span data-ttu-id="25021-136">エンコードする HTTP ヘッダーの名前。</span><span class="sxs-lookup"><span data-stu-id="25021-136">The HTTP header name to encode.</span></span></param>
        <param name="headerValue"><span data-ttu-id="25021-137">エンコードする HTTP ヘッダーの値。</span><span class="sxs-lookup"><span data-stu-id="25021-137">The HTTP header value to encode.</span></span></param>
        <param name="encodedHeaderName"><span data-ttu-id="25021-138">このメソッドから制御が戻るときに、HTTP ヘッダーとして使用する、エンコードされた名前が格納されます。</span><span class="sxs-lookup"><span data-stu-id="25021-138">When this method returns, contains the encoded name to use for an HTTP header.</span></span> <span data-ttu-id="25021-139">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="25021-139">This parameter is passed uninitialized.</span></span></param>
        <param name="encodedHeaderValue"><span data-ttu-id="25021-140">このメソッドから制御が戻るときに、HTTP ヘッダーとして使用する、エンコードされた値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="25021-140">When this method returns, contains the encoded value to use for an HTTP header.</span></span> <span data-ttu-id="25021-141">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="25021-141">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="25021-142">ヘッダーの名前と値を、HTTP ヘッダーとして使用できる文字列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-142">Encodes a header name and value into a string that can be used as an HTTP header.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-143"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> メソッドは、`headerName` と `headerValue` パラメーターから入力文字列を受け取り、それらをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-143">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method takes input strings from the `headerName` and `headerValue` parameters and encodes them.</span></span> <span data-ttu-id="25021-144">エンコードされた値は、out パラメーターとして返されます。</span><span class="sxs-lookup"><span data-stu-id="25021-144">The encoded values are returned as out parameters.</span></span>  
  
 <span data-ttu-id="25021-145"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> メソッドでは、次のロジックを使用してヘッダーの名前と値をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-145">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method uses the following logic to encode header names and values:</span></span>  
  
-   <span data-ttu-id="25021-146">Unicode 値が ascii 文字9を除く ASCII 文字32よりも小さい文字はすべて、`N` 文字が16進数値を表す `%NN` 形式に URL エンコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-146">All characters whose Unicode value is less than ASCII character 32, except ASCII character 9, are URL-encoded into a format of `%NN` where the `N` characters represent hexadecimal values.</span></span>  
  
-   <span data-ttu-id="25021-147">ASCII 文字 9 (水平タブ文字) は、URL エンコードされていません。</span><span class="sxs-lookup"><span data-stu-id="25021-147">ASCII character 9 (the horizontal tab character) is not URL-encoded.</span></span>  
  
-   <span data-ttu-id="25021-148">ASCII 文字127は `%7F`としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-148">ASCII character 127 is encoded as `%7F`.</span></span>  
  
-   <span data-ttu-id="25021-149">その他のすべての文字はエンコードされません。</span><span class="sxs-lookup"><span data-stu-id="25021-149">All other characters are not encoded.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="25021-150">このメソッドは Unicode 値に使用できますが、通常は ASCII の範囲の値に使用されます。</span><span class="sxs-lookup"><span data-stu-id="25021-150">Although this method can be used for Unicode values, it is typically used for values in the ASCII range.</span></span>  
  
 <span data-ttu-id="25021-151"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> メソッドの既定の実装では、`headerValue` が `null` の場合、または空の文字列の場合、`encodedHeaderValue` の `headerValue` の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="25021-151">The default implementation of the <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method returns the value of `headerValue` in `encodedHeaderValue` if `headerValue` is `null` or is an empty string.</span></span> <span data-ttu-id="25021-152">同様に、既定の実装では、`headerName` が `null` か、または空の文字列の場合、`encodedHeaderName` 内の `headerName` の値が返されます。</span><span class="sxs-lookup"><span data-stu-id="25021-152">Similarly, the default implementation returns the value of `headerName` in `encodedHeaderName` if `headerName` is `null` or is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="25021-153">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="25021-153">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="25021-154">エンコードされた値を書き込むテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="25021-154">The text writer to write the encoded value to.</span></span></param>
        <summary><span data-ttu-id="25021-155">受信した値を、一重または二重引用符を使用して区切られた HTML 属性に挿入できる文字列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-155">Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using single or double quotation marks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-156"><xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> メソッドは、標準の HTML エンティティを使用して文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-156">The <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> method encodes characters by using the standard HTML entities.</span></span> <span data-ttu-id="25021-157">たとえば、`<` (左山かっこ) は `&lt;` としてエンコードされ、`\` (円記号) は `&#92;`としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-157">For example, the `<` (left angle bracket) is encoded as `&lt;` and the `\` (backslash) is encoded as `&#92;`.</span></span>  
  
 <span data-ttu-id="25021-158">一重引用符と二重引用符で囲まれた属性内で <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> を使用するのは安全です。</span><span class="sxs-lookup"><span data-stu-id="25021-158">It is safe to use <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> within single-quoted and double-quoted attributes.</span></span> <span data-ttu-id="25021-159">値は引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="25021-159">The values must be quoted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25021-160"><paramref name="output" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="25021-160"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="25021-161">デコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="25021-161">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="25021-162">デコードされた値を書き込むテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="25021-162">The text writer to write the decoded value to.</span></span></param>
        <summary><span data-ttu-id="25021-163">HTML エンコードされた文字列の値をデコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-163">Decodes a value from an HTML-encoded string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-164">次の表は、ASP.NET デコードロジックでデコードできる文字シーケンスを示しています。</span><span class="sxs-lookup"><span data-stu-id="25021-164">The following table lists the character sequences that the ASP.NET decoding logic can decode.</span></span>  
  
|<span data-ttu-id="25021-165">文字シーケンス</span><span class="sxs-lookup"><span data-stu-id="25021-165">Character sequence</span></span>|<span data-ttu-id="25021-166">ルール</span><span class="sxs-lookup"><span data-stu-id="25021-166">Rule</span></span>|  
|------------------------|----------|  
|<span data-ttu-id="25021-167">`&#NNN;` (ASCII 文字の10進数コード)。</span><span class="sxs-lookup"><span data-stu-id="25021-167">`&#NNN;` (decimal codes for ASCII characters).</span></span>|<span data-ttu-id="25021-168">指定した ASCII 文字としてデコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-168">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="25021-169">文字シーケンスは、# 文字の後の最初の桁から始まり、セミコロンで終了します。</span><span class="sxs-lookup"><span data-stu-id="25021-169">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="25021-170">`&#xZZ;` (ASCII 文字の16進コード)。</span><span class="sxs-lookup"><span data-stu-id="25021-170">`&#xZZ;` (hexadecimal codes for ASCII characters).</span></span>|<span data-ttu-id="25021-171">指定した ASCII 文字としてデコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-171">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="25021-172">エンコードされたフォームは、10進値ではなく16進数を使用して文字を指定します。</span><span class="sxs-lookup"><span data-stu-id="25021-172">The encoded form specifies the character by using hexadecimal characters instead of a decimal value.</span></span> <span data-ttu-id="25021-173">文字シーケンスは、# 文字の後の最初の桁から始まり、セミコロンで終了します。</span><span class="sxs-lookup"><span data-stu-id="25021-173">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="25021-174">名前付き HTML エンティティ。</span><span class="sxs-lookup"><span data-stu-id="25021-174">Named HTML entities.</span></span>|<span data-ttu-id="25021-175">等価の ASCII 文字としてデコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-175">Decoded as the equivalent ASCII character.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25021-176"><paramref name="output" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="25021-176"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="25021-177">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="25021-177">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="25021-178">エンコードされた値を書き込むテキスト ライター。</span><span class="sxs-lookup"><span data-stu-id="25021-178">The text writer to write the encoded value to.</span></span></param>
        <summary><span data-ttu-id="25021-179">文字列を HTML エンコードされた文字列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-179">Encodes a string into an HTML-encoded string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-180">次の表は、ASP.NET encoding ロジックでデコードできる文字シーケンスを示しています。</span><span class="sxs-lookup"><span data-stu-id="25021-180">The following table lists the character sequences that the ASP.NET encoding logic can decode.</span></span>  
  
|<span data-ttu-id="25021-181">文字</span><span class="sxs-lookup"><span data-stu-id="25021-181">Character</span></span>|<span data-ttu-id="25021-182">エンコードされた</span><span class="sxs-lookup"><span data-stu-id="25021-182">Encoded as</span></span>|  
|---------------|----------------|  
|<span data-ttu-id="25021-183">`<` (左山かっこ)</span><span class="sxs-lookup"><span data-stu-id="25021-183">`<` (left angle bracket)</span></span>|`&lt;`|  
|<span data-ttu-id="25021-184">`>` (右山かっこ)</span><span class="sxs-lookup"><span data-stu-id="25021-184">`>` (right angle bracket)</span></span>|`&gt;`|  
|<span data-ttu-id="25021-185">`"` (二重引用符)</span><span class="sxs-lookup"><span data-stu-id="25021-185">`"` (double quotation marks)</span></span>|`&quot;`|  
|<span data-ttu-id="25021-186">`&` (アンパサンド)</span><span class="sxs-lookup"><span data-stu-id="25021-186">`&` (ampersand)</span></span>|`&amp;`|  
|<span data-ttu-id="25021-187">`\` (円記号)</span><span class="sxs-lookup"><span data-stu-id="25021-187">`\` (backslash)</span></span>|`&#92;`|  
|<span data-ttu-id="25021-188">160から255への ASCII 文字</span><span class="sxs-lookup"><span data-stu-id="25021-188">ASCII characters from 160 to 255</span></span>|<span data-ttu-id="25021-189">`&#NNN;`。ここで `NNN` は3桁の10進文字コードです。</span><span class="sxs-lookup"><span data-stu-id="25021-189">`&#NNN;`, where `NNN` is the three-digit decimal character code</span></span>|  
  
 <span data-ttu-id="25021-190"><xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> メソッドをオーバーライドする場合は、二重引用符または単一引用符で囲まれた HTML 属性内でも安全な出力を生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="25021-190">If you override the <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes.</span></span> <span data-ttu-id="25021-191">これは、\<タグ attr = "@value" > など、マークアップとコードを組み合わせることができる Razor エンジンによる解析に対応しています。</span><span class="sxs-lookup"><span data-stu-id="25021-191">This accommodates parsing by the Razor engine, where markup and code can be combined, such as \<tag attr="@value">.</span></span> <span data-ttu-id="25021-192">また、Razor エンジンによって処理される場合、@ 演算子はコンテキストに対応していないため、<xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>ではなく <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="25021-192">In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25021-193"><paramref name="output" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="25021-193"><paramref name="output" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member JavaScriptStringEncode : string -&gt; string&#xA;override this.JavaScriptStringEncode : string -&gt; string" Usage="httpEncoder.JavaScriptStringEncode value" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="25021-194">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="25021-194">The string to encode.</span></span></param>
        <summary><span data-ttu-id="25021-195">文字列をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-195">Encodes a string.</span></span></summary>
        <returns><span data-ttu-id="25021-196">エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="25021-196">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-197">URL エンコードは、すべてのブラウザーが URL 文字列内のテキストを正しく送信するようにします。</span><span class="sxs-lookup"><span data-stu-id="25021-197">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="25021-198">一部のブラウザーでは、疑問符 (?)、アンパサンド (&)、スラッシュ (/)、スペースなどの文字が切り捨てられたり、破損したりする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="25021-198">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="25021-199">そのため、これらの文字はエンコードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="25021-199">Therefore, these characters must be encoded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : byte[] * int * int -&gt; byte[]&#xA;override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="httpEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="25021-200">エンコードするバイト配列。</span><span class="sxs-lookup"><span data-stu-id="25021-200">An array of bytes to encode.</span></span></param>
        <param name="offset"><span data-ttu-id="25021-201"><paramref name="bytes" /> 配列内のエンコード開始位置。</span><span class="sxs-lookup"><span data-stu-id="25021-201">The position in the <paramref name="bytes" /> array at which to begin encoding.</span></span></param>
        <param name="count"><span data-ttu-id="25021-202">エンコードする <paramref name="bytes" /> 配列内の項目の数。</span><span class="sxs-lookup"><span data-stu-id="25021-202">The number of items in the <paramref name="bytes" /> array to encode.</span></span></param>
        <summary><span data-ttu-id="25021-203">URL では使用できない文字の配列を、16 進文字エンティティにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-203">Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</span></span></summary>
        <returns><span data-ttu-id="25021-204">エンコードされた文字の配列。</span><span class="sxs-lookup"><span data-stu-id="25021-204">An array of encoded characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-205"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A> メソッドは、<xref:System.Web.HttpUtility> クラスのいくつかの URL エンコードメソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="25021-205">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method is called by several URL encoding methods in the <xref:System.Web.HttpUtility> class.</span></span>  
  
 <span data-ttu-id="25021-206"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A> メソッドは、URL セーフであると見なされる ASCII 文字のセットに含まれていない任意の文字を URL エンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-206">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method URL-encodes any character that is not in the set of ASCII characters that is considered to be URL-safe.</span></span> <span data-ttu-id="25021-207">スペースは、ASCII の "`+"` 文字としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-207">Spaces are encoded as the ASCII "`+"` character.</span></span> <span data-ttu-id="25021-208">URL セーフな ASCII 文字には、ASCII 文字 (A から Z および a ~ z)、数字 (0 ~ 9)、およびいくつかの区切り記号が含まれます。</span><span class="sxs-lookup"><span data-stu-id="25021-208">URL-safe ASCII characters include the ASCII characters (A to Z and a to z), numerals (0 to 9), and some punctuation marks.</span></span> <span data-ttu-id="25021-209">次の表は、URL セーフな ASCII 文字と見なされる句読点を示しています。</span><span class="sxs-lookup"><span data-stu-id="25021-209">The following table lists the punctuation marks that are considered URL-safe ASCII characters.</span></span>  
  
|<span data-ttu-id="25021-210">文字</span><span class="sxs-lookup"><span data-stu-id="25021-210">Character</span></span>|<span data-ttu-id="25021-211">説明</span><span class="sxs-lookup"><span data-stu-id="25021-211">Description</span></span>|  
|---------------|-----------------|  
|-|<span data-ttu-id="25021-212">記号</span><span class="sxs-lookup"><span data-stu-id="25021-212">Hyphen</span></span>|  
|<span data-ttu-id="25021-213">_</span><span class="sxs-lookup"><span data-stu-id="25021-213">_</span></span>|<span data-ttu-id="25021-214">アンダースコア</span><span class="sxs-lookup"><span data-stu-id="25021-214">Underscore</span></span>|  
|<span data-ttu-id="25021-215">。</span><span class="sxs-lookup"><span data-stu-id="25021-215">.</span></span>|<span data-ttu-id="25021-216">ピリオド (ドット)</span><span class="sxs-lookup"><span data-stu-id="25021-216">Period (dot)</span></span>|  
|<span data-ttu-id="25021-217">!</span><span class="sxs-lookup"><span data-stu-id="25021-217">!</span></span>|<span data-ttu-id="25021-218">感嘆符</span><span class="sxs-lookup"><span data-stu-id="25021-218">Exclamation mark</span></span>|  
|*|<span data-ttu-id="25021-219">アスタリスク (星)</span><span class="sxs-lookup"><span data-stu-id="25021-219">Asterisk (star)</span></span>|  
|<span data-ttu-id="25021-220">(</span><span class="sxs-lookup"><span data-stu-id="25021-220">(</span></span>|<span data-ttu-id="25021-221">始めかっこ</span><span class="sxs-lookup"><span data-stu-id="25021-221">Opening parenthesis</span></span>|  
|<span data-ttu-id="25021-222">)</span><span class="sxs-lookup"><span data-stu-id="25021-222">)</span></span>|<span data-ttu-id="25021-223">右かっこ</span><span class="sxs-lookup"><span data-stu-id="25021-223">Closing parenthesis</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="25021-224"><paramref name="offset" /> が、0 未満か、<paramref name="bytes" /> 配列の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="25021-224"><paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array.</span></span>  
  
<span data-ttu-id="25021-225">または</span><span class="sxs-lookup"><span data-stu-id="25021-225">-or-</span></span> 
 <span data-ttu-id="25021-226"><paramref name="count" /> がゼロより小さいか、<paramref name="count" /> + <paramref name="offset" /> が <paramref name="bytes" /> 配列の長さより大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="25021-226"><paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25021-227"><paramref name="bytes" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="25021-227"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="25021-228">エンコードする文字列。</span><span class="sxs-lookup"><span data-stu-id="25021-228">The string to encode.</span></span></param>
        <summary><span data-ttu-id="25021-229">URL のサブセクションをエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-229">Encodes a subsection of a URL.</span></span></summary>
        <returns><span data-ttu-id="25021-230">URL エンコードされた文字列。</span><span class="sxs-lookup"><span data-stu-id="25021-230">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25021-231"><xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> メソッドは、<xref:System.Web.HttpUtility.UrlPathEncode%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="25021-231">The <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method is called by the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="25021-232"><xref:System.Web.HttpUtility.UrlPathEncode%2A> メソッドは、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="25021-232">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method performs the following steps:</span></span>  
  
-   <span data-ttu-id="25021-233"><xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> メソッドのエンコーディングロジックを URL のパス部分 (クエリ文字列を除く) にのみ適用します。</span><span class="sxs-lookup"><span data-stu-id="25021-233">Applies the encoding logic of the <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method to only the path part of the URL (which excludes the query string).</span></span> <span data-ttu-id="25021-234">メソッドは、URL が UTF-8 文字列としてエンコードされていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="25021-234">The method assumes that the URL is encoded as a UTF-8 string.</span></span>  
  
-   <span data-ttu-id="25021-235">最初の 128 ASCII 文字のサブセットのみが結果のエンコードされた文字列で使用されるように、スペース以外の文字をエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-235">Encodes non-spaces so that only a subset of the first 128 ASCII characters is used in the resulting encoded string.</span></span> <span data-ttu-id="25021-236">Unicode 値128以上、または32以下の文字は、URL エンコードされます。</span><span class="sxs-lookup"><span data-stu-id="25021-236">Any characters at Unicode value 128 and greater, or 32 and less, are URL-encoded.</span></span>  
  
-   <span data-ttu-id="25021-237">スペースを %20 としてエンコードします。</span><span class="sxs-lookup"><span data-stu-id="25021-237">Encodes spaces as %20.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
