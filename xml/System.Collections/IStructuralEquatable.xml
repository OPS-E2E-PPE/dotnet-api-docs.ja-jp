<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad85da86aaf5211419626d456b7257d22bfefed1" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75150406" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>オブジェクトの構造が等価かどうかの比較をサポートするメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 構造的等価性とは、2つのオブジェクトが等しい値を持つために等しいことを意味します。 これは、同じ物理オブジェクトを参照するため、2つのオブジェクト参照が等しいことを示す、参照の等価性とは異なります。 <xref:System.Collections.IStructuralEquatable> インターフェイスを使用すると、コレクションオブジェクトの構造的等価性を確認するためのカスタマイズされた比較を実装できます。 つまり、構造等値の独自の定義を作成し、この定義を <xref:System.Collections.IStructuralEquatable> インターフェイスを受け入れるコレクション型と共に使用するように指定できます。 インターフェイスには、<xref:System.Collections.IStructuralEquatable.Equals%2A>という2つのメンバーがあります。これは、指定された <xref:System.Collections.IEqualityComparer> 実装を使用して等しいかどうかをテストします。 <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>は、等しいオブジェクトに対して同一のハッシュコードを返します。  
  
> [!NOTE]
>  <xref:System.Collections.IStructuralEquatable> インターフェイスでは、構造の等価性のためにカスタム比較のみがサポートされます。 <xref:System.Collections.IStructuralComparable> インターフェイスは、並べ替えと順序付けのためのカスタム構造の比較をサポートしています。  
  
 .NET Framework には、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> プロパティと <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子も用意されています。 詳細については、例を参照してください。  
  
 ジェネリックのタプルクラス (<xref:System.Tuple%601>、 <xref:System.Tuple%602>、<xref:System.Tuple%603>など)、<xref:System.Array>クラスの明示的な実装を提供する、<xref:System.Collections.IStructuralEquatable>インターフェイス。 配列または組C#の現在のインスタンスを <xref:System.Collections.IStructuralEquatable> インターフェイス値にキャスト () または変換 (Visual Basic) し、<xref:System.Collections.IEqualityComparer> 実装を引数として <xref:System.Collections.IStructuralEquatable.Equals%2A> メソッドに渡すことで、配列またはコレクションのカスタム等値比較を定義できます。  
  
   
  
## Examples

既定の等値比較子である `EqualityComparer<Object>.Default.Equals`では、2つの `NaN` 値が等しいと見なされます。 ただし、場合によっては、`NaN` 値の等価性を比較して `false`を返すことが必要になることがあります。これは、値を比較できないことを示します。 次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IEqualityComparer> クラスを定義しています。 3番目の例では、タプルが実装する <xref:System.Collections.IStructuralEquatable> インターフェイスの <xref:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)> メソッドの引数として使用されます。 これは、等値演算子を使用して2つの <xref:System.Double> または2つの <xref:System.Single> 値を比較します。 これは、他の型の値を既定の等値比較子に渡します。  
  
[!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
[!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 次の例では、3つの <xref:System.Double> 値から構成されるコンポーネントを持つ2つの同一の3タプルオブジェクトを作成します。 2番目のコンポーネントの値は <xref:System.Double.NaN?displayProperty=nameWithType>です。 次に、<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> メソッドを呼び出し、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> メソッドを3回呼び出します。 最初に、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子を渡します。 2回目は、<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子を渡します。 3回目は、カスタム `NanComparer` オブジェクトを渡します。 この例の出力が示すように、最初の3つのメソッド呼び出しは `true`を返し、4番目の呼び出しは `false`を返します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">現在のインスタンスと比較するオブジェクト。</param>
        <param name="comparer">現在のインスタンスと <paramref name="other" /> が等しいかどうかを判断するオブジェクト。</param>
        <summary>オブジェクトが現在のインスタンスと構造的に等しいかどうかを判断します。</summary>
        <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.IStructuralEquatable.Equals%2A> メソッドは、配列および組オブジェクトのカスタム構造比較をサポートしています。 次に、このメソッドは `comparer` オブジェクトの <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> メソッドを呼び出して、個々の配列要素または組コンポーネントを、最初の要素またはコンポーネントから比較します。 メソッドの呼び出しによって `false` が返されたとき、またはすべての配列要素または組コンポーネントが比較された後に、<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end および <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> メソッドを呼び出すと、値が返されます。  
  
   
  
## Examples  
 既定の等値比較子である `EqualityComparer<Object>.Default.Equals`では、2つの `NaN` 値が等しいと見なされます。 ただし、場合によっては、`NaN` 値の等価性を比較して `false`を返すことが必要になることがあります。これは、値を比較できないことを示します。 次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。 これは、等値演算子を使用して2つの <xref:System.Double> または2つの <xref:System.Single> 値を比較します。 これは、他の型の値を既定の等値比較子に渡します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 次の例では、3つの <xref:System.Double> 値から構成されるコンポーネントを持つ2つの同一の3タプルオブジェクトを作成します。 2番目のコンポーネントの値は <xref:System.Double.NaN?displayProperty=nameWithType>です。 次に、<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> メソッドを呼び出し、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> メソッドを3回呼び出します。 最初に、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子を渡します。 2回目は、<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子を渡します。 3回目は、カスタム `NanComparer` オブジェクトを渡します。 この例の出力が示すように、最初の3つのメソッド呼び出しは `true`を返し、4番目の呼び出しは `false`を返します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</param>
        <summary>現在のインスタンスのハッシュ コードを返します。</summary>
        <returns>現在のインスタンスのハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを実装して、<xref:System.Collections.IStructuralEquatable.Equals%2A> メソッドによって提供される構造的等価性のカスタマイズされた比較に対応するコレクションオブジェクトのカスタマイズされたハッシュコードを返します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> メソッドが2つのオブジェクトに対して <see langword="true" /> を返す場合、2つのオブジェクトの <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> メソッドによって返される値も同じである必要があります。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
