<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67a99bc7ee1204e94c4d54abdb08b9cdc5160d80" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83473619" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fb31f-101">オブジェクトの構造が等価かどうかの比較をサポートするメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-101">Defines methods to support the comparison of objects for structural equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb31f-102">構造的等価性とは、2つのオブジェクトが等しい値を持つために等しいことを意味します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-102">Structural equality means that two objects are equal because they have equal values.</span></span> <span data-ttu-id="fb31f-103">これは、同じ物理オブジェクトを参照するため、2つのオブジェクト参照が等しいことを示す、参照の等価性とは異なります。</span><span class="sxs-lookup"><span data-stu-id="fb31f-103">It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</span></span> <span data-ttu-id="fb31f-104"><xref:System.Collections.IStructuralEquatable> インターフェイスを使用すると、コレクションオブジェクトの構造的等価性を確認するためのカスタマイズされた比較を実装できます。</span><span class="sxs-lookup"><span data-stu-id="fb31f-104">The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</span></span> <span data-ttu-id="fb31f-105">つまり、構造等値の独自の定義を作成し、この定義を <xref:System.Collections.IStructuralEquatable> インターフェイスを受け入れるコレクション型と共に使用するように指定できます。</span><span class="sxs-lookup"><span data-stu-id="fb31f-105">That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="fb31f-106">インターフェイスには、<xref:System.Collections.IStructuralEquatable.Equals%2A>という2つのメンバーがあります。これは、指定された <xref:System.Collections.IEqualityComparer> 実装を使用して等しいかどうかをテストします。 <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>は、等しいオブジェクトに対して同一のハッシュコードを返します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-106">The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fb31f-107"><xref:System.Collections.IStructuralEquatable> インターフェイスでは、構造の等価性のためにカスタム比較のみがサポートされます。</span><span class="sxs-lookup"><span data-stu-id="fb31f-107">The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality.</span></span> <span data-ttu-id="fb31f-108"><xref:System.Collections.IStructuralComparable> インターフェイスは、並べ替えと順序付けのためのカスタム構造の比較をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="fb31f-108">The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.</span></span>  
  
 <span data-ttu-id="fb31f-109">.NET Framework には、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> プロパティと <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子も用意されています。</span><span class="sxs-lookup"><span data-stu-id="fb31f-109">The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="fb31f-110">詳細については、例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fb31f-110">For more information, see the example.</span></span>  
  
 <span data-ttu-id="fb31f-111">ジェネリックのタプルクラス (<xref:System.Tuple%601>、 <xref:System.Tuple%602>、<xref:System.Tuple%603>など)、<xref:System.Array>クラスの明示的な実装を提供する、<xref:System.Collections.IStructuralEquatable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="fb31f-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="fb31f-112">配列または組C#の現在のインスタンスを <xref:System.Collections.IStructuralEquatable> インターフェイス値にキャスト () または変換 (Visual Basic) し、<xref:System.Collections.IEqualityComparer> 実装を引数として <xref:System.Collections.IStructuralEquatable.Equals%2A> メソッドに渡すことで、配列またはコレクションのカスタム等値比較を定義できます。</span><span class="sxs-lookup"><span data-stu-id="fb31f-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.</span></span>  
  
   
  
## Examples

<span data-ttu-id="fb31f-113">既定の等値比較子である `EqualityComparer<Object>.Default.Equals`では、2つの `NaN` 値が等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="fb31f-113">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="fb31f-114">ただし、場合によっては、`NaN` 値の等価性を比較して `false`を返すことが必要になることがあります。これは、値を比較できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-114">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="fb31f-115">次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IEqualityComparer> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="fb31f-115">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IEqualityComparer> interface.</span></span> <span data-ttu-id="fb31f-116">3番目の例では、タプルが実装する <xref:System.Collections.IStructuralEquatable> インターフェイスの <xref:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)> メソッドの引数として使用されます。</span><span class="sxs-lookup"><span data-stu-id="fb31f-116">It is used by the third example as an argument to the <xref:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)> method of the <xref:System.Collections.IStructuralEquatable> interface that tuples implement.</span></span> <span data-ttu-id="fb31f-117">これは、等値演算子を使用して2つの <xref:System.Double> または2つの <xref:System.Single> 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-117">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="fb31f-118">これは、他の型の値を既定の等値比較子に渡します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-118">It passes values of any other type to the default equality comparer.</span></span>  
  
[!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
[!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="fb31f-119">次の例では、3つの <xref:System.Double> 値から構成されるコンポーネントを持つ2つの同一の3タプルオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-119">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="fb31f-120">2番目のコンポーネントの値は <xref:System.Double.NaN?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="fb31f-120">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fb31f-121">次に、<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> メソッドを呼び出し、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> メソッドを3回呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-121">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="fb31f-122">最初に、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子を渡します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-122">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fb31f-123">2回目は、<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子を渡します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-123">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fb31f-124">3回目は、カスタム `NanComparer` オブジェクトを渡します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-124">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="fb31f-125">この例の出力が示すように、最初の3つのメソッド呼び出しは `true`を返し、4番目の呼び出しは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-125">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="fb31f-126">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fb31f-126">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="fb31f-127">現在のインスタンスと <paramref name="other" /> が等しいかどうかを判断するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fb31f-127">An object that determines whether the current instance and <paramref name="other" /> are equal.</span></span></param>
        <summary><span data-ttu-id="fb31f-128">オブジェクトが現在のインスタンスと構造的に等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-128">Determines whether an object is structurally equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="fb31f-129">2 つのオブジェクトが等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="fb31f-129"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb31f-130"><xref:System.Collections.IStructuralEquatable.Equals%2A> メソッドは、配列および組オブジェクトのカスタム構造比較をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="fb31f-130">The <xref:System.Collections.IStructuralEquatable.Equals%2A> method supports custom structural comparison of array and tuple objects.</span></span> <span data-ttu-id="fb31f-131">次に、このメソッドは `comparer` オブジェクトの <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> メソッドを呼び出して、個々の配列要素または組コンポーネントを、最初の要素またはコンポーネントから比較します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-131">This method in turn calls the `comparer` object's <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="fb31f-132">メソッドの呼び出しによって `false` が返されたとき、またはすべての配列要素または組コンポーネントが比較された後に、<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end および <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> メソッドを呼び出すと、値が返されます。</span><span class="sxs-lookup"><span data-stu-id="fb31f-132">The individual calls to <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method returns a value either when a method call returns `false` or after all array elements or tuple components have been compared.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fb31f-133">既定の等値比較子である `EqualityComparer<Object>.Default.Equals`では、2つの `NaN` 値が等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="fb31f-133">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="fb31f-134">ただし、場合によっては、`NaN` 値の等価性を比較して `false`を返すことが必要になることがあります。これは、値を比較できないことを示します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-134">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="fb31f-135">次の例では、 `NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。</span><span class="sxs-lookup"><span data-stu-id="fb31f-135">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="fb31f-136">これは、等値演算子を使用して2つの <xref:System.Double> または2つの <xref:System.Single> 値を比較します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-136">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="fb31f-137">これは、他の型の値を既定の等値比較子に渡します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-137">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="fb31f-138">次の例では、3つの <xref:System.Double> 値から構成されるコンポーネントを持つ2つの同一の3タプルオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-138">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="fb31f-139">2番目のコンポーネントの値は <xref:System.Double.NaN?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="fb31f-139">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fb31f-140">次に、<xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> メソッドを呼び出し、<xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> メソッドを3回呼び出します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-140">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="fb31f-141">最初に、<xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子を渡します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-141">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fb31f-142">2回目は、<xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> プロパティによって返される既定の等値比較子を渡します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-142">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fb31f-143">3回目は、カスタム `NanComparer` オブジェクトを渡します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-143">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="fb31f-144">この例の出力が示すように、最初の3つのメソッド呼び出しは `true`を返し、4番目の呼び出しは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-144">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="fb31f-145">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fb31f-145">An object that computes the hash code of the current object.</span></span></param>
        <summary><span data-ttu-id="fb31f-146">現在のインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-146">Returns a hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="fb31f-147">現在のインスタンスのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="fb31f-147">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fb31f-148">このメソッドを実装して、<xref:System.Collections.IStructuralEquatable.Equals%2A> メソッドによって提供される構造的等価性のカスタマイズされた比較に対応するコレクションオブジェクトのカスタマイズされたハッシュコードを返します。</span><span class="sxs-lookup"><span data-stu-id="fb31f-148">Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <xref:System.Collections.IStructuralEquatable.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fb31f-149"><see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> メソッドが2つのオブジェクトに対して <see langword="true" /> を返す場合、2つのオブジェクトの <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> メソッドによって返される値も同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="fb31f-149">If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
