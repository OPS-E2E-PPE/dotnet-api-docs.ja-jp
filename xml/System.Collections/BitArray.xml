<Type Name="BitArray" FullName="System.Collections.BitArray">
  <Metadata><Meta Name="ms.openlocfilehash" Value="197e6c69f4e07b7925cc8a4eee37b916ed9d6a80" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83940163" /></Metadata><TypeSignature Language="C#" Value="public sealed class BitArray : System.Collections.ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BitArray extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Collections.BitArray" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitArray&#xA;Implements ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitArray sealed : System::Collections::ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type BitArray = class&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public sealed class BitArray : ICloneable, System.Collections.ICollection" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BitArray extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitArray&#xA;Implements ICloneable, ICollection" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitArray sealed : ICloneable, System::Collections::ICollection" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type BitArray = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICloneable" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit BitArray extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type BitArray = class&#xA;    interface ICollection&#xA;    interface ICloneable&#xA;    interface IEnumerable" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Collections" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="18973-101">ビット値の小型の配列を管理します。このビット値はブール型として表され、 <see langword="true" /> はビットがオン (1)、 <see langword="false" /> はビットがオフ (0) であることを示します。</span><span class="sxs-lookup"><span data-stu-id="18973-101">Manages a compact array of bit values, which are represented as Booleans, where <see langword="true" /> indicates that the bit is on (1) and <see langword="false" /> indicates the bit is off (0).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-102"><xref:System.Collections.BitArray> クラスは、容量が常にカウントと同じであるコレクションクラスです。</span><span class="sxs-lookup"><span data-stu-id="18973-102">The <xref:System.Collections.BitArray> class is a collection class in which the capacity is always the same as the count.</span></span> <span data-ttu-id="18973-103">要素は、<xref:System.Collections.BitArray.Length%2A> プロパティを増やすことによって <xref:System.Collections.BitArray> に追加されます。要素は、<xref:System.Collections.BitArray.Length%2A> プロパティを小さくすることによって削除されます。</span><span class="sxs-lookup"><span data-stu-id="18973-103">Elements are added to a <xref:System.Collections.BitArray> by increasing the <xref:System.Collections.BitArray.Length%2A> property; elements are deleted by decreasing the <xref:System.Collections.BitArray.Length%2A> property.</span></span> <span data-ttu-id="18973-104"><xref:System.Collections.BitArray> のサイズは、クライアントによって制御されます。<xref:System.Collections.BitArray> の末尾を越えてインデックスを作成すると、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="18973-104">The size of a <xref:System.Collections.BitArray> is controlled by the client; indexing past the end of the <xref:System.Collections.BitArray> throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="18973-105"><xref:System.Collections.BitArray> クラスは、<xref:System.Collections.BitArray.And%2A>、<xref:System.Collections.BitArray.Or%2A>、<xref:System.Collections.BitArray.Xor%2A>、<xref:System.Collections.BitArray.Not%2A>、<xref:System.Collections.BitArray.SetAll%2A>などのフィルターを使用して複数の要素を一度に変更することを許可するメソッドなど、他のコレクションには存在しないメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="18973-105">The <xref:System.Collections.BitArray> class provides methods that are not found in other collections, including those that allow multiple elements to be modified at once using a filter, such as <xref:System.Collections.BitArray.And%2A>, <xref:System.Collections.BitArray.Or%2A>, <xref:System.Collections.BitArray.Xor%2A> , <xref:System.Collections.BitArray.Not%2A>, and <xref:System.Collections.BitArray.SetAll%2A>.</span></span>  
  
 <span data-ttu-id="18973-106"><xref:System.Collections.Specialized.BitVector32> クラスは <xref:System.Collections.BitArray>と同じ機能を提供するが、パフォーマンスが向上する構造体です。</span><span class="sxs-lookup"><span data-stu-id="18973-106">The <xref:System.Collections.Specialized.BitVector32> class is a structure that provides the same functionality as <xref:System.Collections.BitArray>, but with faster performance.</span></span> <span data-ttu-id="18973-107"><xref:System.Collections.Specialized.BitVector32> は値型であり、スタックに割り当てられるため、より高速になります。一方、<xref:System.Collections.BitArray> は参照型であるため、ヒープに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="18973-107"><xref:System.Collections.Specialized.BitVector32> is faster because it is a value type and therefore allocated on the stack, whereas <xref:System.Collections.BitArray> is a reference type and, therefore, allocated on the heap.</span></span>  
  
 <span data-ttu-id="18973-108"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> は正確に32ビットを格納できますが、<xref:System.Collections.BitArray> には可変数のビットを格納できます。</span><span class="sxs-lookup"><span data-stu-id="18973-108"><xref:System.Collections.Specialized.BitVector32?displayProperty=nameWithType> can store exactly 32 bits, whereas <xref:System.Collections.BitArray> can store a variable number of bits.</span></span> <span data-ttu-id="18973-109"><xref:System.Collections.Specialized.BitVector32> には、ビットフラグと小さい整数の両方が格納されるため、ユーザーに公開されていないデータに最適です。</span><span class="sxs-lookup"><span data-stu-id="18973-109"><xref:System.Collections.Specialized.BitVector32> stores both bit flags and small integers, thereby making it ideal for data that is not exposed to the user.</span></span> <span data-ttu-id="18973-110">ただし、必要なビットフラグの数が不明な場合、変数がである場合、または32より大きい場合は、代わりに <xref:System.Collections.BitArray> を使用します。</span><span class="sxs-lookup"><span data-stu-id="18973-110">However, if the number of required bit flags is unknown, is variable, or is greater than 32, use <xref:System.Collections.BitArray> instead.</span></span>  
  
 <span data-ttu-id="18973-111"><xref:System.Collections.BitArray> は <xref:System.Collections> 名前空間にあります。<xref:System.Collections.Specialized.BitVector32> は <xref:System.Collections.Specialized> 名前空間にあります。</span><span class="sxs-lookup"><span data-stu-id="18973-111"><xref:System.Collections.BitArray> is in the <xref:System.Collections> namespace; <xref:System.Collections.Specialized.BitVector32> is in the <xref:System.Collections.Specialized> namespace.</span></span>  
  
 <span data-ttu-id="18973-112">このコレクションの要素には、整数インデックスを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="18973-112">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="18973-113">このコレクションのインデックスは0から始まります。</span><span class="sxs-lookup"><span data-stu-id="18973-113">Indexes in this collection are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-114">次のコード例は、<xref:System.Collections.BitArray> を作成して初期化する方法と、その値を出力する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-114">The following code example shows how to create and initialize a <xref:System.Collections.BitArray> and how to print out its values.</span></span>  
  
 [!code-cpp[Classic BitArray Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="18973-115">パブリック静的 (Visual Basic では<see langword="Shared" />) なこの型のメンバーはスレッド セーフです</span><span class="sxs-lookup"><span data-stu-id="18973-115">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="18973-116">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="18973-116">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="18973-117">この実装は、<see cref="T:System.Collections.BitArray" />に対して同期された (スレッドセーフな) ラッパーを提供しません。</span><span class="sxs-lookup"><span data-stu-id="18973-117">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.BitArray" />.</span></span>  
  
<span data-ttu-id="18973-118">コレクションの列挙処理は、本質的にスレッドセーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="18973-118">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="18973-119">コレクションが同期されていても、他のスレッドがコレクションを変更する場合があり、このときは列挙子から例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="18973-119">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="18973-120">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="18973-120">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.Specialized.BitVector32" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18973-121">サイズと初期値を指定できる、<see cref="T:System.Collections.BitArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18973-121">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class whose capacity and initial values can be specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (bool[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Boolean[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Boolean())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;bool&gt; ^ values);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : bool[] -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="18973-122">コピーするブール値の配列。</span><span class="sxs-lookup"><span data-stu-id="18973-122">An array of Booleans to copy.</span></span></param>
        <summary><span data-ttu-id="18973-123">指定されたブール値配列からコピーされたビット値を含む <see cref="T:System.Collections.BitArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18973-123">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of Booleans.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-124">このコンストラクターは `O(n)` 操作で、`n` は `values`内の要素の数です。</span><span class="sxs-lookup"><span data-stu-id="18973-124">This constructor is an `O(n)` operation, where `n` is the number of elements in `values`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-125"><paramref name="values" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-125"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : byte[] -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray bytes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="18973-126">コピーする値を格納しているバイト配列。各バイトは 8 個の連続ビットを表します。</span><span class="sxs-lookup"><span data-stu-id="18973-126">An array of bytes containing the values to copy, where each byte represents eight consecutive bits.</span></span></param>
        <summary><span data-ttu-id="18973-127">指定したバイト配列からビット値をコピーして格納する、 <see cref="T:System.Collections.BitArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18973-127">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-128">配列の最初のバイトはビット 0 ~ 7 を表し、2番目のバイトはビット 8 ~ 15 を表します。</span><span class="sxs-lookup"><span data-stu-id="18973-128">The first byte in the array represents bits 0 through 7, the second byte represents bits 8 through 15, and so on.</span></span> <span data-ttu-id="18973-129">各バイトの最下位ビットは、最も小さいインデックス値を表します。 "`bytes` [0] & 1" はビット0を表します。 "`bytes` [0] & 2" はビット1を表し、"`bytes` [0] & 4" はビット2を表します。</span><span class="sxs-lookup"><span data-stu-id="18973-129">The Least Significant Bit of each byte represents the lowest index value: " `bytes` [0] & 1" represents bit 0, " `bytes` [0] & 2" represents bit 1, " `bytes` [0] & 4" represents bit 2, and so on.</span></span>  
  
 <span data-ttu-id="18973-130">このコンストラクターは `O(n)` 操作で、`n` は `bytes`内の要素の数です。</span><span class="sxs-lookup"><span data-stu-id="18973-130">This constructor is an `O(n)` operation, where `n` is the number of elements in `bytes`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-131"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-131"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18973-132"><paramref name="bytes" /> の長さが <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="18973-132">The length of <paramref name="bytes" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (System.Collections.BitArray bits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.BitArray bits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bits As BitArray)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(System::Collections::BitArray ^ bits);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : System.Collections.BitArray -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray bits" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bits" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="bits"><span data-ttu-id="18973-133">コピーする <see cref="T:System.Collections.BitArray" />。</span><span class="sxs-lookup"><span data-stu-id="18973-133">The <see cref="T:System.Collections.BitArray" /> to copy.</span></span></param>
        <summary><span data-ttu-id="18973-134">指定した <see cref="T:System.Collections.BitArray" /> からコピーされたビット値を格納する、 <see cref="T:System.Collections.BitArray" />クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18973-134">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-135">このコンストラクターは `O(n)` 操作で、`n` は `bits`内の要素の数です。</span><span class="sxs-lookup"><span data-stu-id="18973-135">This constructor is an `O(n)` operation, where `n` is the number of elements in `bits`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-136"><paramref name="bits" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-136"><paramref name="bits" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(int length);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : int -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray length" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="18973-137">新しい <see cref="T:System.Collections.BitArray" />内のビット値の数。</span><span class="sxs-lookup"><span data-stu-id="18973-137">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span></span></param>
        <summary><span data-ttu-id="18973-138">指定数のビット値を格納できる、 <see cref="T:System.Collections.BitArray" /> クラスの新しいインスタンスを初期化します。ビット値は <see langword="false" />に初期設定されます。</span><span class="sxs-lookup"><span data-stu-id="18973-138">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-139">このコンストラクターは、`n` が `length``O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-139">This constructor is an `O(n)` operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-140"><paramref name="length" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-140"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (values As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(cli::array &lt;int&gt; ^ values);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : int[] -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray values" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="values" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="18973-141">コピーする値を格納している整数配列。各整数は 32 個の連続ビットを表します。</span><span class="sxs-lookup"><span data-stu-id="18973-141">An array of integers containing the values to copy, where each integer represents 32 consecutive bits.</span></span></param>
        <summary><span data-ttu-id="18973-142">指定した 32 ビット整数配列からビット値をコピーして格納する、 <see cref="T:System.Collections.BitArray" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="18973-142">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that contains bit values copied from the specified array of 32-bit integers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-143">最初の `values` 配列要素の数値はビット 0 ~ 31 を表し、配列の2番目の数値はビット 32 ~ 63 を表します。</span><span class="sxs-lookup"><span data-stu-id="18973-143">The number in the first `values` array element represents bits 0 through 31, the second number in the array represents bits 32 through 63, and so on.</span></span> <span data-ttu-id="18973-144">各整数の最下位ビットは、最も小さいインデックス値を表します。 "`values` [0] & 1" はビット0を表します。 "`values` [0] & 2" はビット1を表し、"`values` [0] & 4" はビット2を表します。</span><span class="sxs-lookup"><span data-stu-id="18973-144">The Least Significant Bit of each integer represents the lowest index value: " `values` [0] & 1" represents bit 0, " `values` [0] & 2" represents bit 1, " `values` [0] & 4" represents bit 2, and so on.</span></span>  
  
 <span data-ttu-id="18973-145">このコンストラクターは `O(n)` 操作で、`n` は `values`内の要素の数です。</span><span class="sxs-lookup"><span data-stu-id="18973-145">This constructor is an `O(n)` operation, where `n` is the number of elements in `values`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-146"><paramref name="values" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-146"><paramref name="values" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18973-147"><paramref name="values" /> の長さが <see cref="F:System.Int32.MaxValue" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="18973-147">The length of <paramref name="values" /> is greater than <see cref="F:System.Int32.MaxValue" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitArray (int length, bool defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length, bool defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (length As Integer, defaultValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BitArray(int length, bool defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Collections.BitArray : int * bool -&gt; System.Collections.BitArray" Usage="new System.Collections.BitArray (length, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="defaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="18973-148">新しい <see cref="T:System.Collections.BitArray" />内のビット値の数。</span><span class="sxs-lookup"><span data-stu-id="18973-148">The number of bit values in the new <see cref="T:System.Collections.BitArray" />.</span></span></param>
        <param name="defaultValue"><span data-ttu-id="18973-149">各ビットに代入するブール値。</span><span class="sxs-lookup"><span data-stu-id="18973-149">The Boolean value to assign to each bit.</span></span></param>
        <summary><span data-ttu-id="18973-150">指定数のビット値を格納できる、 <see cref="T:System.Collections.BitArray" /> クラスの新しいインスタンスを初期化します。ビット値は指定値に初期設定されます。</span><span class="sxs-lookup"><span data-stu-id="18973-150">Initializes a new instance of the <see cref="T:System.Collections.BitArray" /> class that can hold the specified number of bit values, which are initially set to the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-151">このコンストラクターは、`n` が `length``O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-151">This constructor is an `O(n)` operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-152"><paramref name="length" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-152"><paramref name="length" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray And (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray And(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.And(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function And (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ And(System::Collections::BitArray ^ value);" />
      <MemberSignature Language="F#" Value="member this.And : System.Collections.BitArray -&gt; System.Collections.BitArray" Usage="bitArray.And value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="18973-153">ビットごとの AND 演算の実行対象となる配列。</span><span class="sxs-lookup"><span data-stu-id="18973-153">The array with which to perform the bitwise AND operation.</span></span></param>
        <summary><span data-ttu-id="18973-154">現在の <see cref="T:System.Collections.BitArray" /> オブジェクトの要素と指定した配列内の対応する要素の間で、ビットごとの AND 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="18973-154">Performs the bitwise AND operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span></span> <span data-ttu-id="18973-155">現在の <see cref="T:System.Collections.BitArray" /> オブジェクトが変更され、ビットごとの AND 演算の結果を格納します。</span><span class="sxs-lookup"><span data-stu-id="18973-155">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise AND operation.</span></span></summary>
        <returns><span data-ttu-id="18973-156">ビットごとの AND 演算の結果を含み、現在の <see cref="T:System.Collections.BitArray" /> オブジェクトへの参照である配列。</span><span class="sxs-lookup"><span data-stu-id="18973-156">An array containing the result of the bitwise AND operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-157">ビットごとの AND 演算は、両方のオペランドが `true`場合に `true` を返し、一方または両方のオペランドが `false`場合は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="18973-157">The bitwise AND operation returns `true` if both operands are `true`, and returns `false` if one or both operands are `false`.</span></span>  
  
 <span data-ttu-id="18973-158">このメソッドは、`n` が <xref:System.Collections.BitArray.Count%2A>`O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-158">This method is an `O(n)` operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-159">次のコード例は、2つの <xref:System.Collections.BitArray> オブジェクト間でビットごとの AND 演算を実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-159">The following code example shows how to perform the bitwise AND operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.And Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.And Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.And Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.And Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.And Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.And Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-160"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-160"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18973-161"><paramref name="value" /> と現在の <see cref="T:System.Collections.BitArray" /> に同じ数の要素が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="18973-161"><paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="bitArray.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18973-162"><see cref="T:System.Collections.BitArray" />の簡易コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="18973-162">Creates a shallow copy of the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <returns><span data-ttu-id="18973-163"><see cref="T:System.Collections.BitArray" />の簡易コピー。</span><span class="sxs-lookup"><span data-stu-id="18973-163">A shallow copy of the <see cref="T:System.Collections.BitArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-164">コレクションの簡易コピーは、参照型であるか値型であるかにかかわらず、コレクションの要素のみをコピーしますが、参照が参照するオブジェクトはコピーしません。</span><span class="sxs-lookup"><span data-stu-id="18973-164">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="18973-165">新しいコレクション内の参照は、元のコレクション内の参照が指すものと同じオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="18973-165">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="18973-166">これに対し、コレクションの詳細コピーでは、要素と、要素によって直接的または間接的に参照されるすべての要素がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="18973-166">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="18973-167">このメソッドは、`n` が <xref:System.Collections.BitArray.Count%2A>`O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-167">This method is an `O(n)` operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="bitArray.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="18973-168"><see cref="T:System.Array" /> のコピー先である、1 次元の <see cref="T:System.Collections.BitArray" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-168">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.BitArray" />.</span></span> <span data-ttu-id="18973-169"><see cref="T:System.Array" /> には、0 から始まるインデックスが設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="18973-169">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="18973-170"><paramref name="array" /> 内のコピーの開始位置である、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="18973-170">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="18973-171"><see cref="T:System.Collections.BitArray" /> 全体を互換性のある 1 次元の <see cref="T:System.Array" /> にコピーします。コピー操作は、コピー先の配列の指定したインデックスから始まります。</span><span class="sxs-lookup"><span data-stu-id="18973-171">Copies the entire <see cref="T:System.Collections.BitArray" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-172">指定された配列は、互換性のある型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="18973-172">The specified array must be of a compatible type.</span></span> <span data-ttu-id="18973-173">`bool`、`int`、および `byte` の種類の配列のみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="18973-173">Only `bool`, `int`, and `byte` types of arrays are supported.</span></span>  
  
 <span data-ttu-id="18973-174">このメソッドは <xref:System.Array.Copy%2A?displayProperty=nameWithType> を使用して要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="18973-174">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="18973-175">このメソッドは、`n` が <xref:System.Collections.BitArray.Count%2A>`O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-175">This method is an `O(n)` operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-176">次のコード例は、<xref:System.Collections.BitArray> を1次元の <xref:System.Array>にコピーする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-176">The following code example shows how to copy a <xref:System.Collections.BitArray> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic BitArray.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-177"><paramref name="array" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-177"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-178"><paramref name="index" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-178"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18973-179"><paramref name="array" /> に多次元配列が設定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-179"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="18973-180">または</span><span class="sxs-lookup"><span data-stu-id="18973-180">-or-</span></span> 
<span data-ttu-id="18973-181">コピー元の <see cref="T:System.Collections.BitArray" /> の要素数が、コピー先 <paramref name="array" /> の <paramref name="index" /> から最後までの使用可能領域を超えています。</span><span class="sxs-lookup"><span data-stu-id="18973-181">The number of elements in the source <see cref="T:System.Collections.BitArray" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="18973-182">コピー元の <see cref="T:System.Collections.BitArray" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストできません。</span><span class="sxs-lookup"><span data-stu-id="18973-182">The type of the source <see cref="T:System.Collections.BitArray" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.BitArray.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18973-183"><see cref="T:System.Collections.BitArray" />に格納されている要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="18973-183">Gets the number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <value><span data-ttu-id="18973-184"><see cref="T:System.Collections.BitArray" /> に含まれる要素の数。</span><span class="sxs-lookup"><span data-stu-id="18973-184">The number of elements contained in the <see cref="T:System.Collections.BitArray" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-185"><xref:System.Collections.BitArray.Length%2A> と <xref:System.Collections.BitArray.Count%2A> は同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="18973-185"><xref:System.Collections.BitArray.Length%2A> and <xref:System.Collections.BitArray.Count%2A> return the same value.</span></span> <span data-ttu-id="18973-186"><xref:System.Collections.BitArray.Length%2A> は特定の値に設定できますが、<xref:System.Collections.BitArray.Count%2A> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="18973-186"><xref:System.Collections.BitArray.Length%2A> can be set to a specific value, but <xref:System.Collections.BitArray.Count%2A> is read-only.</span></span>  
  
 <span data-ttu-id="18973-187">このプロパティの値の取得は `O(1)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-187">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public bool Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Get(int index);" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; bool" Usage="bitArray.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="18973-188">取得する値の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="18973-188">The zero-based index of the value to get.</span></span></param>
        <summary><span data-ttu-id="18973-189"><see cref="T:System.Collections.BitArray" />の特定位置にあるビット値を取得します。</span><span class="sxs-lookup"><span data-stu-id="18973-189">Gets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <returns><span data-ttu-id="18973-190"><paramref name="index" /> 位置にあるビット値。</span><span class="sxs-lookup"><span data-stu-id="18973-190">The value of the bit at position <paramref name="index" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-191">このメソッドは `O(1)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-191">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-192">次のコード例は、<xref:System.Collections.BitArray>内の特定の要素を設定して取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-192">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-193"><paramref name="index" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-193"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="18973-194">または</span><span class="sxs-lookup"><span data-stu-id="18973-194">-or-</span></span> 
 <span data-ttu-id="18973-195"><paramref name="index" /> が、 <see cref="T:System.Collections.BitArray" />の要素の数以上です。</span><span class="sxs-lookup"><span data-stu-id="18973-195"><paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="bitArray.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18973-196"><see cref="T:System.Collections.BitArray" /> を反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="18973-196">Returns an enumerator that iterates through the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <returns><span data-ttu-id="18973-197"><see cref="T:System.Collections.IEnumerator" /> 全体に対する <see cref="T:System.Collections.BitArray" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-197">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.BitArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-198">C# 言語の `foreach` ステートメント (Visual Basic の場合は `for each`) を使用することで列挙子の複雑さを回避できます。</span><span class="sxs-lookup"><span data-stu-id="18973-198">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="18973-199">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="18973-199">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="18973-200">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="18973-200">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="18973-201">最初、列挙子はコレクションの先頭の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="18973-201">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="18973-202">また、<xref:System.Collections.IEnumerator.Reset%2A> メソッドは、列挙子を最初の位置に戻します。</span><span class="sxs-lookup"><span data-stu-id="18973-202"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="18973-203">この位置では、<xref:System.Collections.IEnumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="18973-203">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="18973-204">したがって、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して、列挙子をコレクションの先頭の要素に進めておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="18973-204">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="18973-205"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="18973-205"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="18973-206"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="18973-206"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="18973-207"><xref:System.Collections.IEnumerator.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.Collections.IEnumerator.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="18973-207">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="18973-208">列挙子がこの位置にある場合、後続の <xref:System.Collections.IEnumerator.MoveNext%2A> 呼び出しも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="18973-208">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="18973-209"><xref:System.Collections.IEnumerator.MoveNext%2A> の最後の呼び出しが `false`を返した場合、<xref:System.Collections.IEnumerator.Current%2A> は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="18973-209">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="18973-210">コレクションの先頭の要素に再び <xref:System.Collections.IEnumerator.Current%2A> を設定するには、先に <xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="18973-210">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="18973-211">列挙子は、コレクションが変更されない限り有効です。</span><span class="sxs-lookup"><span data-stu-id="18973-211">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="18973-212">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="18973-212">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="18973-213">列挙子はコレクションに排他アクセスできないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="18973-213">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="18973-214">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="18973-214">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="18973-215">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="18973-215">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="18973-216">このメソッドは `O(1)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-216">This method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.BitArray.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18973-217"><see cref="T:System.Collections.BitArray" /> が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="18973-217">Gets a value indicating whether the <see cref="T:System.Collections.BitArray" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="18973-218">このプロパティは常に <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="18973-218">This property is always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-219"><xref:System.Collections.IList?displayProperty=nameWithType> インターフェイスで必要とされるため、<xref:System.Collections.BitArray> は <xref:System.Collections.BitArray.IsReadOnly%2A> プロパティを実装します。</span><span class="sxs-lookup"><span data-stu-id="18973-219"><xref:System.Collections.BitArray> implements the <xref:System.Collections.BitArray.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="18973-220">読み取り専用のコレクションでは、コレクション作成後に要素の追加、削除、または変更はできません。</span><span class="sxs-lookup"><span data-stu-id="18973-220">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="18973-221">読み取り専用のコレクションは、単純にコレクションを変更できないようにするラッパーを含むコレクションです。したがって、基になるコレクションに変更が加えられた場合、読み取り専用コレクションにはこれらの変更が反映されます。</span><span class="sxs-lookup"><span data-stu-id="18973-221">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="18973-222">このメソッドは `O(1)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-222">This method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.BitArray.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18973-223"><see cref="T:System.Collections.BitArray" /> へのアクセスが同期されるかどうか (スレッド セーフかどうか) を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="18973-223">Gets a value indicating whether access to the <see cref="T:System.Collections.BitArray" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="18973-224">このプロパティは常に <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="18973-224">This property is always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-225"><xref:System.Collections.ICollection?displayProperty=nameWithType> インターフェイスで必要とされるため、<xref:System.Collections.BitArray> は <xref:System.Collections.BitArray.IsSynchronized%2A> プロパティを実装します。</span><span class="sxs-lookup"><span data-stu-id="18973-225"><xref:System.Collections.BitArray> implements the <xref:System.Collections.BitArray.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="18973-226">コレクションの列挙処理は、本質的にスレッドセーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="18973-226">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="18973-227">コレクションが同期されていても、他のスレッドがコレクションを変更する場合があり、このときは列挙子から例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="18973-227">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="18973-228">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="18973-228">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-229">次のコード例は、列挙体全体で <xref:System.Collections.BitArray.SyncRoot%2A> を使用してコレクションをロックする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-229">The following code example shows how to lock the collection using the <xref:System.Collections.BitArray.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic BitArray Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic BitArray Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source2.cs#2)]
 [!code-vb[Classic BitArray Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="18973-230">このメソッドは `O(1)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-230">This method is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.BitArray.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool default[int] { bool get(int index); void set(int index, bool value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : bool with get, set" Usage="System.Collections.BitArray.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="18973-231">取得または設定する値の、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="18973-231">The zero-based index of the value to get or set.</span></span></param>
        <summary><span data-ttu-id="18973-232"><see cref="T:System.Collections.BitArray" />の特定位置にあるビット値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="18973-232">Gets or sets the value of the bit at a specific position in the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <value><span data-ttu-id="18973-233"><paramref name="index" /> 位置にあるビット値。</span><span class="sxs-lookup"><span data-stu-id="18973-233">The value of the bit at position <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-234">このプロパティは、構文 `myCollection[index]` を使用して、コレクションの特定の要素にアクセスする機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="18973-234">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="18973-235">このC#言語では、<xref:System.Collections.BitArray.Item%2A> プロパティを実装する代わりに、 [this](/dotnet/csharp/language-reference/keywords/this)キーワードを使用してインデクサーを定義します。</span><span class="sxs-lookup"><span data-stu-id="18973-235">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.BitArray.Item%2A> property.</span></span> <span data-ttu-id="18973-236">Visual Basic は、<xref:System.Collections.BitArray.Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="18973-236">Visual Basic implements <xref:System.Collections.BitArray.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="18973-237">このプロパティの値の取得は `O(1)` 操作です。プロパティの設定は、`O(1)` 操作でもあります。</span><span class="sxs-lookup"><span data-stu-id="18973-237">Retrieving the value of this property is an `O(1)` operation; setting the property is also an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-238"><paramref name="index" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-238"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="18973-239">または</span><span class="sxs-lookup"><span data-stu-id="18973-239">-or-</span></span> 
 <span data-ttu-id="18973-240"><paramref name="index" /> に <see cref="P:System.Collections.BitArray.Count" /> 以上の値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-240"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.BitArray.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.BitArray.Count" />
      </Docs>
    </Member>
    <Member MemberName="LeftShift">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray LeftShift (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray LeftShift(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.LeftShift(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LeftShift (count As Integer) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ LeftShift(int count);" />
      <MemberSignature Language="F#" Value="member this.LeftShift : int -&gt; System.Collections.BitArray" Usage="bitArray.LeftShift count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="18973-241">各ビットに対して行うシフトの数。</span><span class="sxs-lookup"><span data-stu-id="18973-241">The number of shifts to make for each bit.</span></span></param>
        <summary><span data-ttu-id="18973-242">現在の <see cref="T:System.Collections.BitArray" /> のすべてのビット値を、<paramref name="count" /> ビット分、左にシフトします。</span><span class="sxs-lookup"><span data-stu-id="18973-242">Shifts all the bit values of the current <see cref="T:System.Collections.BitArray" /> to the left on <paramref name="count" /> bits.</span></span></summary>
        <returns><span data-ttu-id="18973-243">現在の <see cref="T:System.Collections.BitArray" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-243">The current <see cref="T:System.Collections.BitArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="18973-244">現在の <xref:System.Collections.BitArray> が更新され、返されます。</span><span class="sxs-lookup"><span data-stu-id="18973-244">The current <xref:System.Collections.BitArray> is updated and returned.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-245"><paramref name="count" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-245"><paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Collections.BitArray.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18973-246"><see cref="T:System.Collections.BitArray" />内の要素の数を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="18973-246">Gets or sets the number of elements in the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <value><span data-ttu-id="18973-247"><see cref="T:System.Collections.BitArray" /> にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="18973-247">The number of elements in the <see cref="T:System.Collections.BitArray" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-248"><xref:System.Collections.BitArray.Length%2A> と <xref:System.Collections.BitArray.Count%2A> は同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="18973-248"><xref:System.Collections.BitArray.Length%2A> and <xref:System.Collections.BitArray.Count%2A> return the same value.</span></span> <span data-ttu-id="18973-249"><xref:System.Collections.BitArray.Length%2A> は特定の値に設定できますが、<xref:System.Collections.BitArray.Count%2A> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="18973-249"><xref:System.Collections.BitArray.Length%2A> can be set to a specific value, but <xref:System.Collections.BitArray.Count%2A> is read-only.</span></span>  
  
 <span data-ttu-id="18973-250"><xref:System.Collections.BitArray.Length%2A> が <xref:System.Collections.BitArray.Count%2A>未満の値に設定されている場合、<xref:System.Collections.BitArray> は切り捨てられ、インデックス `value`-1 の後の要素は削除されます。</span><span class="sxs-lookup"><span data-stu-id="18973-250">If <xref:System.Collections.BitArray.Length%2A> is set to a value that is less than <xref:System.Collections.BitArray.Count%2A>, the <xref:System.Collections.BitArray> is truncated and the elements after the index `value` -1 are deleted.</span></span>  
  
 <span data-ttu-id="18973-251"><xref:System.Collections.BitArray.Length%2A> が <xref:System.Collections.BitArray.Count%2A>より大きい値に設定されている場合、新しい要素は `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="18973-251">If <xref:System.Collections.BitArray.Length%2A> is set to a value that is greater than <xref:System.Collections.BitArray.Count%2A>, the new elements are set to `false`.</span></span>  
  
 <span data-ttu-id="18973-252">このプロパティの値の取得は `O(1)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-252">Retrieving the value of this property is an `O(1)` operation.</span></span> <span data-ttu-id="18973-253">このプロパティの設定は `O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-253">Setting this property is an `O(n)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-254">プロパティが 0 未満の値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-254">The property is set to a value that is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Not ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Not() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Not" />
      <MemberSignature Language="VB.NET" Value="Public Function Not () As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Not();" />
      <MemberSignature Language="F#" Value="member this.Not : unit -&gt; System.Collections.BitArray" Usage="bitArray.Not " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18973-255">現在の <see cref="T:System.Collections.BitArray" />にあるすべてのビット値を反転し、 <see langword="true" /> に設定されている要素を <see langword="false" />に変更し、 <see langword="false" /> に設定されている要素を <see langword="true" />に変更します。</span><span class="sxs-lookup"><span data-stu-id="18973-255">Inverts all the bit values in the current <see cref="T:System.Collections.BitArray" />, so that elements set to <see langword="true" /> are changed to <see langword="false" />, and elements set to <see langword="false" /> are changed to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="18973-256">ビット値の反転後の現在のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="18973-256">The current instance with inverted bit values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-257">このメソッドは、`n` が <xref:System.Collections.BitArray.Count%2A>`O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-257">This method is an `O(n)` operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-258">次のコード例は、<xref:System.Collections.BitArray>に NOT を適用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-258">The following code example shows how to apply NOT to a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Not Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Not Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Not Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Not Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Not Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Not Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Or (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Or(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Or(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function Or (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Or(System::Collections::BitArray ^ value);" />
      <MemberSignature Language="F#" Value="member this.Or : System.Collections.BitArray -&gt; System.Collections.BitArray" Usage="bitArray.Or value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="18973-259">ビットごとの OR 演算の実行対象となる配列。</span><span class="sxs-lookup"><span data-stu-id="18973-259">The array with which to perform the bitwise OR operation.</span></span></param>
        <summary><span data-ttu-id="18973-260">現在の <see cref="T:System.Collections.BitArray" /> オブジェクトの要素と、指定した配列内の対応する要素の間で、ビットごとの OR 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="18973-260">Performs the bitwise OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object and the corresponding elements in the specified array.</span></span> <span data-ttu-id="18973-261">現在の <see cref="T:System.Collections.BitArray" /> オブジェクトが変更され、ビットごとの OR 演算の結果を格納します。</span><span class="sxs-lookup"><span data-stu-id="18973-261">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise OR operation.</span></span></summary>
        <returns><span data-ttu-id="18973-262">ビットごとの OR 演算の結果を含み、現在の <see cref="T:System.Collections.BitArray" /> オブジェクトへの参照である配列。</span><span class="sxs-lookup"><span data-stu-id="18973-262">An array containing the result of the bitwise OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-263">ビットごとの OR 演算では、一方または両方のオペランドが `true`場合は `true` が返され、両方のオペランドが `false`場合は `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="18973-263">The bitwise OR operation returns `true` if one or both operands are `true`, and returns `false` if both operands are `false`.</span></span>  
  
 <span data-ttu-id="18973-264">このメソッドは、`n` が <xref:System.Collections.BitArray.Count%2A>`O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-264">This method is an `O(n)` operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-265">次のコード例は、2つの <xref:System.Collections.BitArray> オブジェクト間で OR 演算を実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-265">The following code example shows how to perform the OR operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.Or Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Or Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Or Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Or Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Or Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Or Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-266"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-266"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18973-267"><paramref name="value" /> と現在の <see cref="T:System.Collections.BitArray" /> に同じ数の要素が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="18973-267"><paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RightShift">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray RightShift (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray RightShift(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.RightShift(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function RightShift (count As Integer) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ RightShift(int count);" />
      <MemberSignature Language="F#" Value="member this.RightShift : int -&gt; System.Collections.BitArray" Usage="bitArray.RightShift count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="18973-268">各ビットに対して行うシフトの数。</span><span class="sxs-lookup"><span data-stu-id="18973-268">The number of shifts to make for each bit.</span></span></param>
        <summary><span data-ttu-id="18973-269">現在の <see cref="T:System.Collections.BitArray" /> のすべてのビット値を、<paramref name="count" /> ビット分、右にシフトします。</span><span class="sxs-lookup"><span data-stu-id="18973-269">Shifts all the bit values of the current <see cref="T:System.Collections.BitArray" /> to the right on <paramref name="count" /> bits.</span></span></summary>
        <returns><span data-ttu-id="18973-270">現在の <see cref="T:System.Collections.BitArray" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-270">The current <see cref="T:System.Collections.BitArray" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="18973-271">現在の <xref:System.Collections.BitArray> が更新され、返されます。</span><span class="sxs-lookup"><span data-stu-id="18973-271">The current <xref:System.Collections.BitArray> is updated and returned.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-272"><paramref name="count" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-272"><paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Set(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (index As Integer, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(int index, bool value);" />
      <MemberSignature Language="F#" Value="member this.Set : int * bool -&gt; unit" Usage="bitArray.Set (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="18973-273">設定するビットの、0 から始まるインデックス番号。</span><span class="sxs-lookup"><span data-stu-id="18973-273">The zero-based index of the bit to set.</span></span></param>
        <param name="value"><span data-ttu-id="18973-274">ビットに代入するブール値。</span><span class="sxs-lookup"><span data-stu-id="18973-274">The Boolean value to assign to the bit.</span></span></param>
        <summary><span data-ttu-id="18973-275"><see cref="T:System.Collections.BitArray" /> の特定位置にあるビットを指定した値に設定します。</span><span class="sxs-lookup"><span data-stu-id="18973-275">Sets the bit at a specific position in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-276">このメソッドは `O(1)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-276">This method is an `O(1)` operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-277">次のコード例は、<xref:System.Collections.BitArray>内の特定の要素を設定して取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-277">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-278"><paramref name="index" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-278"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="18973-279">または</span><span class="sxs-lookup"><span data-stu-id="18973-279">-or-</span></span> 
 <span data-ttu-id="18973-280"><paramref name="index" /> が、 <see cref="T:System.Collections.BitArray" />の要素の数以上です。</span><span class="sxs-lookup"><span data-stu-id="18973-280"><paramref name="index" /> is greater than or equal to the number of elements in the <see cref="T:System.Collections.BitArray" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAll">
      <MemberSignature Language="C#" Value="public void SetAll (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAll(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.SetAll(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAll (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAll(bool value);" />
      <MemberSignature Language="F#" Value="member this.SetAll : bool -&gt; unit" Usage="bitArray.SetAll value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="18973-281">すべてのビットに代入するブール値。</span><span class="sxs-lookup"><span data-stu-id="18973-281">The Boolean value to assign to all bits.</span></span></param>
        <summary><span data-ttu-id="18973-282"><see cref="T:System.Collections.BitArray" /> 内のすべてのビットを指定した値に設定します。</span><span class="sxs-lookup"><span data-stu-id="18973-282">Sets all bits in the <see cref="T:System.Collections.BitArray" /> to the specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-283">このメソッドは、`n` が <xref:System.Collections.BitArray.Count%2A>`O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-283">This method is an `O(n)` operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-284">次のコード例は、<xref:System.Collections.BitArray>内の特定の要素を設定して取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-284">The following code example shows how to set and get specific elements in a <xref:System.Collections.BitArray>.</span></span>  
  
 [!code-cpp[Classic BitArray.Get Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Get Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Get Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Get Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Get Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.BitArray.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18973-285"><see cref="T:System.Collections.BitArray" /> へのアクセスの同期に使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="18973-285">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <value><span data-ttu-id="18973-286"><see cref="T:System.Collections.BitArray" /> へのアクセスの同期に使用できるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="18973-286">An object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-287">派生クラスは、<xref:System.Collections.BitArray.SyncRoot%2A> プロパティを使用して、独自に同期されたバージョンの <xref:System.Collections.BitArray> を提供できます。</span><span class="sxs-lookup"><span data-stu-id="18973-287">Derived classes can provide their own synchronized version of the <xref:System.Collections.BitArray> using the <xref:System.Collections.BitArray.SyncRoot%2A> property.</span></span> <span data-ttu-id="18973-288">同期コードは、<xref:System.Collections.BitArray>上で直接ではなく、<xref:System.Collections.BitArray>の <xref:System.Collections.BitArray.SyncRoot%2A> に対して操作を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="18973-288">The synchronizing code must perform operations on the <xref:System.Collections.BitArray.SyncRoot%2A> of the <xref:System.Collections.BitArray>, not directly on the <xref:System.Collections.BitArray>.</span></span> <span data-ttu-id="18973-289">こうすることにより、他のオブジェクトから派生したコレクションを適切に操作することができます。</span><span class="sxs-lookup"><span data-stu-id="18973-289">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="18973-290">具体的には、<xref:System.Collections.BitArray> オブジェクトを同時に変更している可能性のある他のスレッドとの適切な同期を維持します。</span><span class="sxs-lookup"><span data-stu-id="18973-290">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.BitArray> object.</span></span>  
  
 <span data-ttu-id="18973-291">コレクションの列挙処理は、本質的にスレッドセーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="18973-291">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="18973-292">コレクションが同期されていても、他のスレッドがコレクションを変更する場合があり、このときは列挙子から例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="18973-292">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="18973-293">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="18973-293">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-294">次のコード例は、列挙体全体で <xref:System.Collections.BitArray.SyncRoot%2A> を使用してコレクションをロックする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-294">The following code example shows how to lock the collection using the <xref:System.Collections.BitArray.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic BitArray Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic BitArray Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray Example/CS/source2.cs#2)]
 [!code-vb[Classic BitArray Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="18973-295">このプロパティの値の取得は `O(1)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-295">Retrieving the value of this property is an `O(1)` operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.BitArray.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="bitArray.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="18973-296"><see cref="T:System.Array" /> のコピー先である、1 次元の <see cref="T:System.Collections.BitArray" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-296">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.BitArray" />.</span></span> <span data-ttu-id="18973-297"><see cref="T:System.Array" /> には、0 から始まるインデックスが設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="18973-297">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="18973-298"><paramref name="array" /> 内のコピーの開始位置である、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="18973-298">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="18973-299">指定した <see cref="T:System.Collections.BitArray" /> インデックスを開始位置として、<see cref="T:System.Array" /> の要素を <see cref="T:System.Array" /> にコピーします。</span><span class="sxs-lookup"><span data-stu-id="18973-299">Copies the elements of the <see cref="T:System.Collections.BitArray" /> to an <see cref="T:System.Array" />, starting at the specified <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-300"><paramref name="array" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="18973-300"><paramref name="array" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="18973-301"><paramref name="index" /> に 0 より小さい値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="18973-301"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18973-302"><paramref name="array" /> が多次元です。コピー元の <see cref="T:System.Collections.BitArray" /> の要素数が、<paramref name="index" /> から <paramref name="array" /> の末尾までに格納できる数を超えています。コピー元の <see cref="T:System.Collections.BitArray" /> の型をコピー先の <paramref name="array" /> の型に自動的にキャストすることはできません。</span><span class="sxs-lookup"><span data-stu-id="18973-302"><paramref name="array" /> is multidimensional.-or- The number of elements in the source <see cref="T:System.Collections.BitArray" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.-or-The type of the source <see cref="T:System.Collections.BitArray" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.Count : int" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18973-303"><see cref="T:System.Collections.BitArray" /> にある要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="18973-303">Gets the number of elements in the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <value><span data-ttu-id="18973-304"><see cref="T:System.Collections.BitArray" /> にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="18973-304">The number of elements in the <see cref="T:System.Collections.BitArray" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18973-305"><see cref="T:System.Collections.BitArray" /> へのアクセスが同期されるかどうか (スレッド セーフかどうか) を示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="18973-305">Gets a value that indicates whether access to the <see cref="T:System.Collections.BitArray" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="18973-306"><see cref="T:System.Collections.BitArray" /> へのアクセスが同期される場合 (スレッドセーフの場合) は true、同期されない場合は false です。</span><span class="sxs-lookup"><span data-stu-id="18973-306">true if access to the <see cref="T:System.Collections.BitArray" /> is synchronized (thread safe); otherwise, false.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="18973-307">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="18973-307">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="18973-308">これは、<xref:System.Collections.BitArray> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="18973-308">It can be used only when the <xref:System.Collections.BitArray> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.BitArray.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18973-309"><see cref="T:System.Collections.BitArray" /> へのアクセスの同期に使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="18973-309">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span></span></summary>
        <value><span data-ttu-id="18973-310"><see cref="T:System.Collections.BitArray" /> へのアクセスの同期に使用できるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="18973-310">An object that can be used to synchronize access to the <see cref="T:System.Collections.BitArray" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="18973-311">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="18973-311">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="18973-312">これは、<xref:System.Collections.BitArray> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="18973-312">It can be used only when the <xref:System.Collections.BitArray> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public System.Collections.BitArray Xor (System.Collections.BitArray value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.BitArray Xor(class System.Collections.BitArray value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.BitArray.Xor(System.Collections.BitArray)" />
      <MemberSignature Language="VB.NET" Value="Public Function Xor (value As BitArray) As BitArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::BitArray ^ Xor(System::Collections::BitArray ^ value);" />
      <MemberSignature Language="F#" Value="member this.Xor : System.Collections.BitArray -&gt; System.Collections.BitArray" Usage="bitArray.Xor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.BitArray</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.BitArray" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="18973-313">ビットごとの排他的 OR 演算の実行対象となる配列。</span><span class="sxs-lookup"><span data-stu-id="18973-313">The array with which to perform the bitwise exclusive OR operation.</span></span></param>
        <summary><span data-ttu-id="18973-314">指定した配列内の対応する要素に対して、現在の <see cref="T:System.Collections.BitArray" /> の要素間でビットごとの排他的 OR 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="18973-314">Performs the bitwise exclusive OR operation between the elements of the current <see cref="T:System.Collections.BitArray" /> object against the corresponding elements in the specified array.</span></span> <span data-ttu-id="18973-315">現在の <see cref="T:System.Collections.BitArray" /> オブジェクトが変更され、ビットごとの排他的 OR 演算の結果を格納します。</span><span class="sxs-lookup"><span data-stu-id="18973-315">The current <see cref="T:System.Collections.BitArray" /> object will be modified to store the result of the bitwise exclusive OR operation.</span></span></summary>
        <returns><span data-ttu-id="18973-316">ビットごとの排他的 OR 演算の結果を含み、現在の <see cref="T:System.Collections.BitArray" /> オブジェクトへの参照である配列。</span><span class="sxs-lookup"><span data-stu-id="18973-316">An array containing the result of the bitwise exclusive OR operation, which is a reference to the current <see cref="T:System.Collections.BitArray" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18973-317">1つのオペランドが `true`場合は、ビットごとの排他的 OR 演算によって `true` が返され、両方のオペランドが同じブール値を持つ場合は `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="18973-317">The bitwise exclusive OR operation returns `true` if exactly one operand is `true`, and returns `false` if both operands have the same Boolean value.</span></span>  
  
 <span data-ttu-id="18973-318">このメソッドは、`n` が <xref:System.Collections.BitArray.Count%2A>`O(n)` 操作です。</span><span class="sxs-lookup"><span data-stu-id="18973-318">This method is an `O(n)` operation, where `n` is <xref:System.Collections.BitArray.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18973-319">次のコード例は、2つの <xref:System.Collections.BitArray> オブジェクト間で XOR 演算を実行する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="18973-319">The following code example shows how to perform the XOR operation between two <xref:System.Collections.BitArray> objects.</span></span>  
  
 [!code-cpp[Classic BitArray.Xor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BitArray.Xor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/CS/source.cs#1)]
 [!code-vb[Classic BitArray.Xor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BitArray.Xor Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="18973-320"><paramref name="value" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="18973-320"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="18973-321"><paramref name="value" /> と現在の <see cref="T:System.Collections.BitArray" /> に同じ数の要素が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="18973-321"><paramref name="value" /> and the current <see cref="T:System.Collections.BitArray" /> do not have the same number of elements.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
