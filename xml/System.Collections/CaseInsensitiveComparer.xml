<Type Name="CaseInsensitiveComparer" FullName="System.Collections.CaseInsensitiveComparer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7488f9f54f8d5f69d9feec70e3085540e1b4c0fa" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83474190" /></Metadata><TypeSignature Language="C#" Value="public class CaseInsensitiveComparer : System.Collections.IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CaseInsensitiveComparer extends System.Object implements class System.Collections.IComparer" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Collections.CaseInsensitiveComparer" />
  <TypeSignature Language="VB.NET" Value="Public Class CaseInsensitiveComparer&#xA;Implements IComparer" />
  <TypeSignature Language="C++ CLI" Value="public ref class CaseInsensitiveComparer : System::Collections::IComparer" />
  <TypeSignature Language="F#" Value="type CaseInsensitiveComparer = class&#xA;    interface IComparer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CaseInsensitiveComparer extends System.Object implements class System.Collections.IComparer" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Collections.NonGeneric" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IComparer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>2 つのオブジェクトが等しいかどうかを比較します。比較時には文字列の大文字と小文字は区別されません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<xref:System.Collections.CaseInsensitiveComparer> は、文字列に対し <xref:System.Collections.CaseInsensitiveHashCodeProvider> て大文字と小文字を区別しない比較をサポートする <xref:System.Collections.IHashCodeProvider> インターフェイスを実装するのと同様に、文字列の大文字と小文字を区別しない比較をサポートする <xref:System.Collections.IComparer> インターフェイスを実装します  

> [!IMPORTANT]
>  新しい開発には `CaseInsensitiveComparer` クラスを使用しないことをお勧めします。 代わりに、<xref:System.StringComparer.CurrentCultureIgnoreCase?displayProperty=nameWithType>、<xref:System.StringComparer.InvariantCultureIgnoreCase?displayProperty=nameWithType>、または <xref:System.StringComparer.OrdinalIgnoreCase?displayProperty=nameWithType> プロパティによって返される <xref:System.StringComparer?displayProperty=nameWithType> オブジェクトを使用することをお勧めします。

<xref:System.Collections.Comparer> クラスは、<xref:System.Collections.IComparer> インターフェイスの既定の実装であり、大文字と小文字を区別する文字列比較を実行します。  
  
 <xref:System.Collections.Hashtable> によってキーとして使用されるオブジェクトは、<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> メソッド (または <xref:System.Collections.IHashCodeProvider> インターフェイス) と <xref:System.Object.Equals%2A?displayProperty=nameWithType> メソッド (または <xref:System.Collections.IComparer> インターフェイス) をオーバーライドするために必要です。 メソッドまたはインターフェイスの実装では、大文字と小文字の区別を同じように処理する必要があります。それ以外の場合、<xref:System.Collections.Hashtable> が正しく動作しない可能性があります。 たとえば、<xref:System.Collections.Hashtable>を作成する場合は、<xref:System.Collections.CaseInsensitiveHashCodeProvider> クラス、または大文字と小文字を区別しない <xref:System.Collections.IHashCodeProvider> の実装でこのクラスを使用する必要があります。  
  
 文字列比較の結果は、カルチャによって異なる場合があります。 カルチャ固有の比較の詳細については、<xref:System.Globalization> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。  
  
   
  
## Examples  
 次のコード例では、大文字と小文字を区別するハッシュテーブルと大文字と小文字を区別しないハッシュテーブルを作成し、両方に同じ要素が含まれている場合でも、それらの動作の違いを示します。  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.Comparer" />
    <altmember cref="T:System.Globalization.CompareInfo" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
    <altmember cref="T:System.Globalization.CultureInfo" />
    <altmember cref="T:System.Collections.CaseInsensitiveHashCodeProvider" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">カルチャの影響を受けないコレクションの操作の実行</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Collections.CaseInsensitiveComparer" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveComparer" /> を使用して、<see cref="P:System.Threading.Thread.CurrentCulture" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して <xref:System.Collections.CaseInsensitiveComparer> インスタンスを作成すると、現在のスレッドの <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> が保存されます。 比較手順では、保存したカルチャを使用して、並べ替え順序と大文字小文字の規則を決定します。したがって、カルチャによっては、文字列比較の結果が異なる場合があります。 カルチャ固有の比較の詳細については、<xref:System.Globalization> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。  
  
   
  
## Examples  
 次のコード例では、大文字と小文字を区別するハッシュテーブルと大文字と小文字を区別しないハッシュテーブルを作成し、両方に同じ要素が含まれている場合でも、それらの動作の違いを示します。  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">カルチャの影響を受けないコレクションの操作の実行</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CaseInsensitiveComparer (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CaseInsensitiveComparer(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Collections.CaseInsensitiveComparer : System.Globalization.CultureInfo -&gt; System.Collections.CaseInsensitiveComparer" Usage="new System.Collections.CaseInsensitiveComparer culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">新しい <see cref="T:System.Globalization.CultureInfo" /> で使用する <see cref="T:System.Collections.CaseInsensitiveComparer" />。</param>
        <summary>指定した <see cref="T:System.Collections.CaseInsensitiveComparer" /> を使用して、<see cref="T:System.Globalization.CultureInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 比較手順では、指定した <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> を使用して、並べ替え順序と大文字小文字の規則を決定します。 文字列比較の結果は、カルチャによって異なる場合があります。 カルチャ固有の比較の詳細については、<xref:System.Globalization> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。  
  
   
  
## Examples  
 次のコード例では、大文字と小文字を区別するハッシュテーブルと大文字と小文字を区別しないハッシュテーブルを作成し、両方に同じ要素が含まれている場合でも、それらの動作の違いを示します。  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="culture" /> が <see langword="null" /> です。</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">カルチャの影響を受けないコレクションの操作の実行</related>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public int Compare (object a, object b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Compare(object a, object b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.CaseInsensitiveComparer.Compare(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (a As Object, b As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Compare(System::Object ^ a, System::Object ^ b);" />
      <MemberSignature Language="F#" Value="abstract member Compare : obj * obj -&gt; int&#xA;override this.Compare : obj * obj -&gt; int" Usage="caseInsensitiveComparer.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IComparer.Compare(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Object" />
        <Parameter Name="b" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="a">比較する最初のオブジェクト。</param>
        <param name="b">比較する 2 番目のオブジェクト。</param>
        <summary>同じ型の 2 つのオブジェクトに対して大文字小文字を区別しない比較を実行し、一方が他方よりも小さいか、等しいか、大きいかを示す値を返します。</summary>
        <returns><paramref name="a" /> と <paramref name="b" /> の相対値を示す符号付き整数。次の表を参照してください。  
  
 <list type="table"><listheader><term> 値 
 </term><description> 意味 
 </description></listheader><item><term> ゼロより小さい 
 </term><description><paramref name="a" /> が <paramref name="b" /> より小さい。大文字と小文字は区別されません。  
  
 </description></item><item><term> ゼロ 
 </term><description><paramref name="a" /> と <paramref name="b" /> は等しい。大文字と小文字は区別されません。  
  
 </description></item><item><term> ゼロより大きい 
 </term><description><paramref name="a" /> が <paramref name="b" /> より大きい。大文字と小文字は区別されません。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `a` と `b` が両方とも文字列の場合、このメソッドは <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> を使用して文字列を大文字小文字を区別して比較します。それ以外の場合は、いずれかのオブジェクトの <xref:System.IComparable> 実装を使用します。 つまり、`a` が <xref:System.IComparable>を実装している場合、このメソッドは `a`の結果を返します。 `CompareTo` (`b`);それ以外の場合、`b` が <xref:System.IComparable>を実装している場合は、`b`の否定された結果を返します。 `CompareTo` (`a`).  
  
 `null` と任意の型の比較は許可されており、<xref:System.IComparable>を使用する場合、例外は生成されません。 並べ替えを行う場合、`null` は他のオブジェクトより小さいと見なされます。  
  
 文字列比較の結果は、カルチャによって異なる場合があります。 カルチャ固有の比較の詳細については、<xref:System.Globalization> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="a" /> と <paramref name="b" /> が、いずれも <see cref="T:System.IComparable" /> インターフェイスを実装していません。  
  
または 
 <paramref name="a" /> と <paramref name="b" /> の型が異なります。</exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">カルチャの影響を受けないコレクションの操作の実行</related>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer Default" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ Default { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Collections.CaseInsensitiveComparer" Usage="System.Collections.CaseInsensitiveComparer.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveComparer" /> に関連付けられた、常に使用できる <see cref="P:System.Threading.Thread.CurrentCulture" /> のインスタンスを取得します。</summary>
        <value>現在のスレッドの <see cref="T:System.Collections.CaseInsensitiveComparer" /> に関連付けられた <see cref="P:System.Threading.Thread.CurrentCulture" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーターなしのコンストラクターを使用して <xref:System.Collections.CaseInsensitiveComparer> インスタンスを作成すると、現在のスレッドの <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> が保存されます。 比較手順では、保存したカルチャを使用して、並べ替え順序と大文字小文字の規則を決定します。したがって、カルチャによっては、文字列比較の結果が異なる場合があります。 カルチャ固有の比較の詳細については、<xref:System.Globalization> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">カルチャの影響を受けないコレクションの操作の実行</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultInvariant">
      <MemberSignature Language="C#" Value="public static System.Collections.CaseInsensitiveComparer DefaultInvariant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.CaseInsensitiveComparer DefaultInvariant" />
      <MemberSignature Language="DocId" Value="P:System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultInvariant As CaseInsensitiveComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::CaseInsensitiveComparer ^ DefaultInvariant { System::Collections::CaseInsensitiveComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultInvariant : System.Collections.CaseInsensitiveComparer" Usage="System.Collections.CaseInsensitiveComparer.DefaultInvariant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.CaseInsensitiveComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Collections.CaseInsensitiveComparer" /> に関連付けられた、常に使用できる <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> のインスタンスを取得します。</summary>
        <value><see cref="T:System.Collections.CaseInsensitiveComparer" /> に関連付けられた <see cref="P:System.Globalization.CultureInfo.InvariantCulture" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 比較手順では、<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> を使用して、並べ替え順序と大文字小文字の規則を決定します。 文字列比較の結果は、カルチャによって異なる場合があります。 カルチャ固有の比較の詳細については、<xref:System.Globalization> 名前空間と[グローバリゼーションおよびローカリゼーション](~/docs/standard/globalization-localization/index.md)に関する説明を参照してください。  
  
   
  
## Examples  
 次のコード例では、大文字と小文字を区別するハッシュテーブルと大文字と小文字を区別しないハッシュテーブルを作成し、両方に同じ要素が含まれている場合でも、それらの動作の違いを示します。  
  
 [!code-cpp[System.Collections.CaseInsensitive#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CPP/caseinsensitive.cpp#1)]
 [!code-csharp[System.Collections.CaseInsensitive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/CS/caseinsensitive.cs#1)]
 [!code-vb[System.Collections.CaseInsensitive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.CaseInsensitive/VB/caseinsensitive.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.CompareInfo" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md">カルチャの影響を受けないコレクションの操作の実行</related>
      </Docs>
    </Member>
  </Members>
</Type>
