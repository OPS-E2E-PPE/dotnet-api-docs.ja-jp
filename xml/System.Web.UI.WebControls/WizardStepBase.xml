<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf6587879b982c5c3354f776345c641a2be6b9e8" /><Meta Name="ms.sourcegitcommit" Value="355778a8154b2dab885accd76cc040b19ea80e32" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/03/2020" /><Meta Name="ms.locfileid" Value="78243276" /></Metadata><TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <TypeSignature Language="F#" Value="type WizardStepBase = class&#xA;    inherit View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールの手順で必要な基本的な機能を実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase> クラスのインスタンスを直接作成することはできません。 代わりに、このクラスは <xref:System.Web.UI.WebControls.WizardStep> クラスと <xref:System.Web.UI.WebControls.TemplatedWizardStep> クラスによって継承され、ウィザードとして機能するコントロールのステップの基本機能を提供します。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase> クラスから派生させて、ウィザードコントロールの一意の手順を表すカスタムクラスを作成することができます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowReturn : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> コレクションの以降のステップから現在のステップに戻ることができるかどうかを示す値を取得します。</summary>
        <value>ユーザーが現在のステップに戻ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティは、<xref:System.Web.UI.WebControls.Wizard> コントロールに線形ナビゲーションを適用するために使用できます。 各ステップの <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティが `false`に設定されている場合、ユーザーはアクセスされた後にステップに戻ることはできません。 この機能を使用するシナリオの1つは、完了後にユーザーがステップに戻ることができないようにすることです。これは、各ステップが完了したときにデータベースにデータを保持するためです。 各手順の後にデータを保存し、保存後にユーザーがステップに戻り、情報を変更できるようにすると、保存されたデータが破損する可能性があります。 [<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>] プロパティを `false`に設定すると、ユーザーがステップを終了した後で、ユーザーはその手順に戻り、値を変更することはできません。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティは、**[戻る]** ボタンが表示されない方法とタイミングを決定します。 次の表は、**前**のボタンのレンダリング動作を示しています。  
  
|シナリオ|動作|  
|--------------|--------------|  
|Linear: ステップ1が `false` に設定されていて、ユーザーの操作が手順2に進み <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>。|手順 2. **[戻る]** ボタンが表示されません。|  
|非線形: ステップ実行が `false` に設定されていて、ユーザーの操作が手順3に進み <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>。|ステップ3では、**[戻る]** ボタンは表示されません。|  
|サイドバーボタン: 手順2は `false` に設定されており、<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> が `true`に設定されていて、ユーザーがサイドバーボタンをクリックした <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> ます。|<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> が `false`に設定されている場合、サイドバーのボタンは自動的に無効になります。 ユーザーがボタンをクリックした場合、アクションは無視されます。|  
|線形 & カスタムテンプレートを使用する: ステップにはカスタムナビゲーションテンプレートがあります。|テンプレートをナビゲーションに使用するときに <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> が `false` に設定されていると、自動的に非表示にしたり表示したりすることはありません。 テンプレートでは、**[戻る]** ボタンをオプションにする必要があります。|  
|Visual Studio デザイナーを使用して <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>: コントロールには5つの手順があります。手順 4. で作業し、ページを実行します。|手順4が <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>の場合は、**[戻る]** ボタンが表示されます。 **[戻る]** ボタンが非表示になるのは、<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 履歴の前のステップが `false`に設定されている場合に <xref:System.Web.UI.WebControls.WizardStepType.Step> に設定された <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> のみです。 手順4は最初に表示され、履歴にはステップがないため、**[戻る]** ボタンは非表示になりません。|  
|開始ステップと非線形ナビゲーション: ユーザーが手順 3. と手順 4. をクリックし、手順 1. を実行して、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> が <xref:System.Web.UI.WebControls.WizardStepType.Start>に設定されていることを示します。|この手順にユーザーが移動する方法に関係なく、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> が <xref:System.Web.UI.WebControls.WizardStepType.Start> に設定されている場合、ウィザードは [**前**へ] ボタンを追加しません。|  
|履歴の同じステップ: ユーザーがステップ3に移動すると、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> が <xref:System.Web.UI.WebControls.WizardStepType.Step> に設定され、ユーザーはその操作をコミットしません。 次に、手順 3. の [戻る] ボタンをクリックします。|ウィザードコントロールは、履歴内の**前**のステップがユーザーが現在実行されている "同じ" 手順であるかどうかを確認します。 手順が同じである場合、ウィザードコントロールは履歴を調べて前の "異なる" ステップを判別し、履歴内の "別のステップ" に基づいて**前**のボタンと宛先の表示を基にします。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティが `false`に設定されていても、<xref:System.Web.UI.WebControls.WizardStepBase> の親コントロールの <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> プロパティが `true`に設定されている場合、サイドバー領域のボタンをクリックしても効果はありません。 サイドバー領域は、通常、非線形ナビゲーションを提供するために表示されるので、非線形ナビゲーションの機能を使用していない場合は、<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> プロパティを `false`に設定することをお勧めします。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティを使用して、ユーザーがアクセスされた後、<xref:System.Web.UI.WebControls.Wizard> コントロールのステップに戻ることを停止します。 この例では、`Step1` のステップで <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティが `false`に設定されています。 ユーザーが `Step1` の手順を終了した後は、[前へ] ボタンが `Step2` の手順に表示されません。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーマがこのコントロールに適用されるかどうかを示す値を取得または設定します。</summary>
        <value>テーマを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> プロパティは、<xref:System.Web.UI.WebControls.WizardStepBase> コントロールに対してテーマが有効になっているかどうかを示します。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> プロパティは、コントロールコレクションに含まれるコントロールに対してテーマが有効になっているかどうかにも影響します。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> プロパティが `true`と、アプリケーションのテーマディレクトリが検索され、コントロールスキンが適用されます。 特定のコントロールのスキンがテーマディレクトリに存在しない場合、スキンは適用されません。 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> プロパティが `false`場合、テーマディレクトリは検索されず、<xref:System.Web.UI.Control.SkinID%2A> プロパティの値は使用されません。  
  
 コントロールは、親コントロールまたはそれを含んでいるページによって設定された <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 値をオーバーライドできます。 たとえば、<xref:System.Web.UI.WebControls.WizardStepBase> コントロールの <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> が `false`に設定されている場合、<xref:System.Web.UI.Control.EnableTheming%2A> プロパティを個々の子コントロールの `true` に設定することにより、ウィザードの手順に含まれる子コントロールにテーマを選択して適用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー コントロールに割り当てられたプログラム ID を取得または設定します。</summary>
        <value>コントロールに割り当てられたプログラム ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> プロパティを使用して、Web フォームページで特定のウィザードステップコントロールを識別および参照します。 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 値は、ページ内のコントロールインスタンスの名前になります。これにより、そのページのコード内の特定のステップに簡単にアクセスできます。 たとえば、<xref:System.Web.UI.WebControls.WizardStepBase> コントロールの [<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>] プロパティを "ステップ 1" に設定した場合、そのページのコード内のウィザードステップの子コントロールを `Step1.Controls`として参照できます。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase> コントロールを使うと、デザイン時にステップを追加または変更したときに、<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> コントロールの各ステップに有効な一意の識別子が与えられます。 たとえば、デザイン時にステップの <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> を設定した場合、<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> コントロールに含まれている別のステップの識別子と一致させることはできず、それを含んでいる <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> コントロールの <xref:System.Web.UI.Control.ID%2A> と一致させることはできません。  
  
   
  
## Examples  
 次のコード例では、Web フォームページの <xref:System.Web.UI.WebControls.Wizard> コントロールに対して3つのウィザードステップを定義します。 ページのコードでは、ウィザードのステップインスタンスの名前は、ID 値によって指定されます。また、コード内で `WizardStep1`、`WizardStep2`、および `WizardStep3`として参照することもできます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">デザイン時に、無効な ID 文字列がプロパティに設定されました。  
  
または 
デザイン時に、格納している側の <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> コントロールと同じ ID がプロパティに設定されました。  
  
または 
デザイン時に、格納している側の <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> コントロールの別のステップと同じ ID がプロパティに設定されました。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/1d04y8ss(v=vs.140)">ASP.NET 制御 Id</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="wizardStepBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表す <see cref="T:System.Object" />。</param>
        <summary><see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> メソッドによって保存された前回のページ要求からビューステート情報を復元します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィザードとして機能するコントロールのステップに関連付けられた名前を取得します。</summary>
        <value>ウィザードとして機能するコントロールのステップに関連付けられた名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> プロパティは、ウィザードコントロールのステップを識別する文字列を返します。 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティに値が指定されている場合、<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> プロパティはその値を返します。 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティに値が指定されていない場合、<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> プロパティは <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> プロパティの値を返します。 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> または <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> のいずれかのプロパティに値が指定されていない場合、<xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> プロパティは `null`を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLoad : EventArgs -&gt; unit" Usage="wizardStepBase.OnLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを保持する <see cref="T:System.EventArgs" /> オブジェクトです。</param>
        <summary><see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
        <related type="Article" href="~/docs/standard/events/index.md">イベントの処理と発生</related>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderChildren : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="wizardStepBase.RenderChildren writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定された <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトに <see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールの子コントロールの内容を出力します。このオブジェクトが、クライアントに表示するコンテンツを書き込みます。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberSignature Language="F#" Value="member this.StepType : System.Web.UI.WebControls.WizardStepType with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールのステップに表示するナビゲーション ユーザー インターフェイス (UI) の種類を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WizardStepType" /> 列挙値のいずれか。 既定値は <see langword="WizardStepType.Auto" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard> コントロールのステップに表示するナビゲーションボタンの種類を指定するには、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> プロパティを使用します。 このプロパティの値を指定すると、<xref:System.Web.UI.WebControls.WizardStepType.Complete> としてマークされたステップは、サイドバーに無効の状態で表示されます。  
  
 このプロパティの値を指定しない場合、既定値は `WizardStepType.Auto`になります。  
  
 次の表は、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> プロパティで使用可能な設定と、そのステップの結果の動作を示しています。  
  
 `WizardStepType.Auto`  
 ステップに対して表示されるナビゲーション UI は、ステップが宣言されている順序によって決まります。  
  
 `WizardStepType.Complete`  
 最後に表示されるステップです。 ナビゲーション ボタンは表示されません。  
  
 `WizardStepType.Finish`  
 最後のデータ収集ステップです。 ナビゲーション用に [完了] ボタンと [戻る] ボタンが表示されます。  
  
 `WizardStepType.Start`  
 最初に表示されるステップです。 [戻る] ボタンはレンダリングされません。  
  
 `WizardStepType.Step`  
 ステップは、[開始] ステップと [完了] ステップの間の任意の手順です。 ナビゲーション用に [戻る] および [次へ] ボタンが表示されます。 このステップの種類は、<xref:System.Web.UI.WebControls.WizardStepType.Auto> のステップの種類をオーバーライドする場合に便利です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 列挙値の 1 つではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイドバー機能が有効なときに <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールのステップに使用するタイトルを取得または設定します。</summary>
        <value>サイドバー機能が有効なときに <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールのステップに使用するタイトル。 既定値は空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サイドバー機能が有効になっている場合は、<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Wizard> コントロールのステップにわかりやすいタイトルを表示します。 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティが設定されておらず、サイドバー機能が有効になっている場合は、[サイドバー] ボタンの <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> プロパティの値が表示されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Wizard> コントロールのステップにわかりやすいタイトルを表示する方法を示します。 この例では、`Step1` に <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティが設定されていないため、<xref:System.Web.UI.WebControls.Wizard> コントロールに "WizardStep1" と表示されます。 `Step2` には <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティが設定されているため、"手順 2" と表示されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wizard : System.Web.UI.WebControls.Wizard" Usage="System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Wizard" /> から派生したオブジェクトの親である <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コントロールを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Wizard" /> から派生したオブジェクトの親である <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コントロール。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/fs0za4w6(v=vs.100)">ウィザード Web サーバーコントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
