<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a162c185d83cf1879268947a45a4b6f1c7f2188c" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963002" /></Metadata><TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <TypeSignature Language="F#" Value="type ButtonField = class&#xA;    inherit ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ バインド コントロール内にボタンとして表示されるフィールドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField> クラスは、<xref:System.Web.UI.WebControls.GridView> や <xref:System.Web.UI.WebControls.DetailsView>などの) データバインドコントロールによって、表示される各レコードのボタンを表示するために使用されます。 <xref:System.Web.UI.WebControls.ButtonField> オブジェクトは、使用されるデータバインドコントロールによって異なる方法で表示されます。 たとえば、<xref:System.Web.UI.WebControls.GridView> コントロールでは <xref:System.Web.UI.WebControls.ButtonField> オブジェクトが列として表示され、<xref:System.Web.UI.WebControls.DetailsView> コントロールでは行として表示されます。  
  
 ボタンフィールドのボタンをクリックすると、親データバインドコントロールのコマンドイベントが発生します。 コマンドイベントのイベントハンドラーを指定することで、コマンドボタンをクリックしたときに実行するカスタムルーチンを指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> コントロールによって <xref:System.Web.UI.WebControls.GridView.RowCommand> イベントが発生し、<xref:System.Web.UI.WebControls.DetailsView> コントロールによって <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> イベントが発生します。  
  
 コマンドイベントを発生させるレコードのインデックスを特定するには、データバインドコントロールのコマンドイベントに渡されるイベント引数の <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.ButtonField> クラスは、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> プロパティに適切なインデックス値を自動的に設定します。  
  
 表示するボタンの種類を指定するには、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> プロパティを使用します。 リンクまたはコマンドボタンを表示する場合は、[<xref:System.Web.UI.WebControls.ButtonField.Text%2A>] プロパティを使用して、ボタンに表示するキャプションを指定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.Text%2A> プロパティを設定した場合、<xref:System.Web.UI.WebControls.ButtonField> 内のすべてのボタンが同じキャプションを共有します。  
  
 または、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトをデータソースのフィールドにバインドすることもできます。 これにより、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトのボタンのさまざまなキャプションを表示できます。 指定したフィールドの値は、ボタンのテキストキャプションに使用されます。 <xref:System.Web.UI.WebControls.ButtonField> オブジェクトをデータソースのフィールドにバインドするには、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティを設定します。  
  
 イメージボタンを表示する場合は、<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトのボタンに表示するイメージを指定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField> オブジェクト内のすべてのボタンは、同じイメージを共有します。  
  
 データバインドコントロールの <xref:System.Web.UI.WebControls.ButtonField> オブジェクトを非表示にするには、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A> プロパティを `false`に設定します。  
  
 <xref:System.Web.UI.WebControls.ButtonField> オブジェクトを使用すると、ヘッダーセクションとフッターセクションをカスタマイズできます。 ヘッダーまたはフッターセクションにキャプションを表示するには、<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> または <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> プロパティをそれぞれ設定します。 ヘッダーセクションにテキストを表示するのではなく、<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> プロパティを設定して画像を表示できます。 <xref:System.Web.UI.WebControls.ButtonField> オブジェクトのヘッダーセクションを非表示にするには、<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> プロパティを `false`に設定します。  
  
> [!NOTE]
>  一部のデータバインドコントロール (<xref:System.Web.UI.WebControls.GridView> コントロールなど) では、コントロールのヘッダーセクション全体だけを表示または非表示にすることができます。 これらのデータバインドコントロールは、個々のボタンフィールドの <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> プロパティをサポートしていません。 データバインドコントロールのヘッダーセクション全体 (使用可能な場合) を表示または非表示にするには、コントロールの `ShowHeader` プロパティを使用します。  
  
 また、フィールドのさまざまな部分のスタイルプロパティを設定して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクト (フォントの色、背景色など) の外観をカスタマイズすることもできます。 次の表は、さまざまなスタイルプロパティを示しています。  
  
|Style プロパティ|のスタイル設定|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|<xref:System.Web.UI.WebControls.ButtonField>の子 Web サーバーコントロール。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|<xref:System.Web.UI.WebControls.ButtonField>のフッターセクション。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|<xref:System.Web.UI.WebControls.ButtonField>のヘッダーセクション。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|<xref:System.Web.UI.WebControls.ButtonField>内のデータ項目。|  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールにコマンドボタンの列を表示する方法を示します。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonField" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A> コンストラクターを使用して、<xref:System.Web.UI.WebControls.ButtonField> クラスの新しいインスタンスを初期化します。 このコンストラクターは、動的に作成されたデータバインドコントロールにフィールドを追加する場合によく使用されます。  
  
 データバインドコントロールに <xref:System.Web.UI.WebControls.ButtonField> オブジェクトを動的に追加するには、新しい <xref:System.Web.UI.WebControls.ButtonField> オブジェクトを作成し、そのプロパティを設定して、データバインドコントロールのフィールドコレクションに追加します。 たとえば、<xref:System.Web.UI.WebControls.GridView> コントロールを使用している場合は、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトを <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションに追加します。  
  
> [!NOTE]
>  フィールドをデータバインドコントロールに動的に追加することもできますが、フィールドは静的に宣言し、必要に応じて表示または非表示にする必要があります。 すべてのフィールドを静的に宣言すると、親データバインドコントロールのビューステートのサイズが縮小されます。  
  
   
  
## Examples  
 次のコード例では、M:System.Web.UI.WebControls.ButtonField. #ctor コンストラクターを使用して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトを <xref:System.Web.UI.WebControls.GridView> コントロールに動的に追加する方法を示します。  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトのボタンがクリックされたときに実行されるアクションを表す文字列を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonField" /> のボタンがクリックされたときに実行されるアクションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `"Add"` や `"Remove"`などのコマンド名を <xref:System.Web.UI.WebControls.ButtonField> オブジェクトのボタンと関連付けるには、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> プロパティは、コマンドボタンをクリックしたときに実行するアクションを識別する任意の文字列に設定できます。 次に、イベントハンドラーでコマンド名をプログラムによって判断し、適切なアクションを実行できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField> オブジェクト内のすべてのボタンは、同じコマンド名を共有します。  
  
 データバインドコントロールは、特定のコマンド名を認識し、コントロールの適切なイベントを自動的に発生させて処理します。 次のコマンド名が認識されます。  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 ページングを呼び出すには、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> を `"Page"` に設定し、含まれている <xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> を `"First"`、`"Last"`、`"Prev"`、`"Next"`、またはページ番号に設定します。 ただし、<xref:System.Web.UI.WebControls.ButtonField> コントロールの <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> は常に整数行のインデックスであるため、<xref:System.Web.UI.WebControls.ButtonField> コントロールはページングの呼び出しには適していません。 同様に、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> を `"Sort"`に設定することによって並べ替えを呼び出すことができますが、<xref:System.Web.UI.WebControls.ButtonField> コントロールの <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> プロパティは常に整数行インデックスです。 このため、<xref:System.Web.UI.WebControls.ButtonField> コントロールは並べ替えの呼び出しに適していません。 `"Add"` や `"Remove"`などのカスタムコマンド名については、イベントコードを記述してコマンド名を確認し、いくつかのカスタムアクションを実行する必要があります。 詳細については、<xref:System.Web.UI.WebControls.DataControlCommands> を参照してください。  
  
> [!NOTE]
>  すべてのコマンド名がすべてのデータバインドコントロールによって認識されるわけではありません。 たとえば、`"New"` は <xref:System.Web.UI.WebControls.GridView> コントロールによって認識されず、`"Select"` は <xref:System.Web.UI.WebControls.DetailsView> コントロールによって認識されません。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.ButtonField> オブジェクト内のボタンのコマンド名を指定する方法を示しています。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">現在の <see cref="T:System.Web.UI.WebControls.DataControlField" /> のプロパティをコピーする対象の <see cref="T:System.Web.UI.WebControls.ButtonField" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトの現在のプロパティを、指定された <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトにコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A> メソッドは、現在の <xref:System.Web.UI.WebControls.ButtonFieldBase>派生オブジェクトのプロパティを <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> メソッドによって作成された <xref:System.Web.UI.WebControls.DataControlField> オブジェクトにコピーするために、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> メソッドによって使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> メソッドをオーバーライドする場合は、基本クラスの <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> メソッドを呼び出して、オブジェクトのすべてのプロパティが確実にコピーされるようにします。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="buttonField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonField" /> クラスの新しいインスタンスを作成して返します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.ButtonField" /> クラスの新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A> メソッドは、現在の <xref:System.Web.UI.WebControls.ButtonField>派生オブジェクトのプロパティをコピーする空の <xref:System.Web.UI.WebControls.ButtonField> オブジェクトを作成するために、基本クラスの <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> メソッドによって使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> メソッドをオーバーライドして、派生クラスの新しいインスタンスを返します。 基底クラスの <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> メソッドを呼び出さないでください。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.Button.Text" /> オブジェクトが表示する <see cref="T:System.Web.UI.WebControls.Button" /> コントロールの <see cref="T:System.Web.UI.WebControls.ButtonField" /> プロパティにバインドされている値のデータ フィールド名を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonField" /> に連結するフィールドの名前。 既定値は空の文字列 ("") です。<see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField> オブジェクトの <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> プロパティが <xref:System.Web.UI.WebControls.ButtonType.Button> または <xref:System.Web.UI.WebControls.ButtonType.Link> 値に設定されている場合は、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトにバインドするフィールドの名前を指定します。 フィールドの値は、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトのボタンのテキストとして表示されます。 必要に応じて、[<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>] プロパティを設定して、表示されるテキストの書式を設定できます。  
  
 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトをデータソースのフィールドにバインドするのではなく、<xref:System.Web.UI.WebControls.ButtonField.Text%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクト内のボタンのテキストの静的テキストを表示できます。 <xref:System.Web.UI.WebControls.ButtonField.Text%2A> プロパティを使用すると、各ボタンは同じキャプションを共有します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティと <xref:System.Web.UI.WebControls.ButtonField.Text%2A> プロパティの両方が設定されている場合は、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティが優先されます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.ButtonField> 列に表示するフィールドを指定する方法を示します。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィールドの値の表示形式を指定する文字列を取得または設定します。</summary>
        <value>フィールドの値の表示形式を指定する書式指定文字列。 既定値は空の文字列 ("") です。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトに表示される値のカスタム表示形式を指定します。 <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> プロパティが設定されていない場合、フィールドの値は特別な書式設定なしで表示されます。  
  
> [!NOTE]
>  書式指定文字列は、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティが設定されている場合にのみ適用されます。  
  
 書式指定文字列は任意のリテラル文字列にすることができ、通常、フィールドの値のプレースホルダーが含まれます。 たとえば、書式指定文字列 `"Item Value: {0}"`では、`{0}` プレースホルダーは <xref:System.Web.UI.WebControls.ButtonField> オブジェクトに表示されるときにフィールドの値に置き換えられます。 書式指定文字列の残りの部分は、リテラルテキストとして表示されます。  
  
> [!NOTE]
>  書式指定文字列にプレースホルダーが含まれていない場合、データソースのフィールドの値は、最終的な表示テキストには含まれません。  
  
 プレースホルダーは、コロンで区切られ、{`A`: `Bxx`} の形式で中かっこで囲まれた2つの部分で構成されます。 コロンの前の値 (一般的な例では`A`) は、0から始まるパラメーターのリストのフィールド値のインデックスを指定します。  
  
> [!NOTE]
>  この `A` パラメーターは、書式設定の構文の一部です。 各セルにはフィールド値が1つしかないので、この値は0にのみ設定できます。  
  
 コロンとコロンの後の値は省略可能です。 コロンの後の文字 (一般的な例では`B`) は、値を表示する形式を指定します。 次の表は、共通の形式を示しています。  
  
|書式指定文字|説明|  
|----------------------|-----------------|  
|`C`|通貨書式で数値を表示します。|  
|`D`|数値を10進形式で表示します。|  
|`E`|指数 (指数) 形式で数値を表示します。|  
|`F`|固定形式で数値を表示します。|  
|`G`|一般的な形式で数値を表示します。|  
|`N`|数値形式で数値を表示します。|  
|`X`|数値を16進形式で表示します。|  
  
> [!NOTE]
>  `X`を除き、書式設定文字の大文字と小文字は区別されません。 `X` の書式文字は、指定された場合に16進文字を表示します。  
  
 書式文字 (一般的な例では`xx`) の後の値は、表示する有効桁数または小数点以下桁数を指定します。 たとえば、書式指定文字列 `"{0:F2}"` には、小数点以下2桁の固定小数点数が表示されます。  
  
 書式指定文字列の詳細については、「[Formatting Types](/dotnet/standard/base-types/formatting-types)」(型の書式設定) を参照してください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> プロパティを使用して、フィールドの値のカスタム表示形式を指定する方法を示します。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/base-types/formatting-types">.NET での型の書式設定</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonField.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">書式を変換するフィールド値。</param>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトのセルの指定したフィールド値を書式変換します。</summary>
        <returns><see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" /> プロパティで指定されている書式に変換されたフィールド値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A> メソッドは、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> プロパティによって指定された形式にフィールド値を変換するために使用されるヘルパーメソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.ButtonField" /> クラスを拡張するときに、<see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" /> メソッドをオーバーライドしてカスタム書式設定ルーチンを実行できます。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトの各ボタンに表示されるイメージを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonField" /> の各ボタンに表示されるイメージ。 既定値は空の文字列 ("") です。<see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField> オブジェクトの <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> プロパティが <xref:System.Web.UI.WebControls.ButtonType.Image> 値に設定されている場合は、<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> プロパティを使用して、各ボタンに表示するイメージを指定します。 このイメージは、クライアントのブラウザーがその形式をサポートしている限り、任意のファイル形式 (.jpg、.gif、.bmp など) にすることができます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトの各ボタンに表示するイメージを指定する方法を示します。 このコード例でを表示するには、独自のイメージを指定する必要があります。  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Initialize (sortingEnabled As Boolean, control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="buttonField.Initialize (sortingEnabled, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">並べ替えを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="control"><see cref="T:System.Web.UI.WebControls.ButtonField" /> を所有しているデータ コントロール。</param>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトを初期化します。</summary>
        <returns><see langword="false" />。この値は、コントロールにデータを再バインドする必要がないことを示します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> メソッドは、フィールドが行コレクションに追加される前に、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトが関連付けられているデータコントロールによって呼び出され、フィールドのインスタンスに対する基本的なオブジェクトの初期化を実行します。 <xref:System.Web.UI.WebControls.DetailsView> や <xref:System.Web.UI.WebControls.GridView>などのデータコントロールは、`CreateRow`などの他のメソッドを呼び出して、データを含む特定の行を作成する前に、`CreateChildControls` メソッドで <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> メソッドを呼び出します。  
  
 <xref:System.Web.UI.WebControls.TableCell> オブジェクトを使用して <xref:System.Web.UI.WebControls.ButtonField> オブジェクトの基本初期化を実行するカスタムデータバインドコントロールを作成する場合は、<xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> メソッドを呼び出します。 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> メソッドのデータまたはコントロールを <xref:System.Web.UI.WebControls.TableCell> オブジェクトに読み込む前に、<xref:System.Web.UI.WebControls.ButtonField>派生型でオブジェクトの初期化が必要な場合は、このメソッドを実装します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>フィールドを正しく動作させるためにデータバインディングをポストバックで実行する必要がある場合は、<see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" /> メソッドをオーバーライドして <see langword="true" />を返す必要があります。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="buttonField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">初期化する <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />。</param>
        <param name="cellType">行の型 (ヘッダー、フッター、またはデータ) を示す <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 値。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つです。</param>
        <param name="rowIndex">行の 0 から始まるインデックス。</param>
        <summary>指定された <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> オブジェクトを、指定された行の状態に初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> メソッドは、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> プロパティによって指定されたボタンの種類を作成し、<xref:System.Web.UI.WebControls.DataControlFieldCell> オブジェクトの <xref:System.Web.UI.Control.Controls%2A> コレクションに追加します。 <xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> プロパティは `rowIndex`に設定されています。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトの各ボタンに表示される静的キャプションを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ButtonField" /> の各ボタンに表示されるキャプション。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField> オブジェクトの <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> プロパティが <xref:System.Web.UI.WebControls.ButtonType.Button> または <xref:System.Web.UI.WebControls.ButtonType.Link> 値に設定されている場合は、<xref:System.Web.UI.WebControls.ButtonField.Text%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField>内のボタンのキャプションの静的テキストを表示します。 各ボタンは同じキャプションを共有します。  
  
 <xref:System.Web.UI.WebControls.ButtonField.Text%2A> プロパティを使用して <xref:System.Web.UI.WebControls.ButtonField> オブジェクトに静的テキストを表示する代わりに、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField> をデータソース内のフィールドにバインドすることができます。 フィールドの値は、ボタンのキャプションとして表示されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティと <xref:System.Web.UI.WebControls.ButtonField.Text%2A> プロパティの両方が設定されている場合は、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> プロパティが優先されます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.ButtonField.Text%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトの各ボタンに表示するキャプションを指定する方法を示しています。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="buttonField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトに格納されているコントロールがコールバックをサポートしているかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> メソッドは、<xref:System.Web.UI.WebControls.ButtonField> オブジェクトに格納されているコントロールがコールバックをサポートするかどうかを判断するために使用されるヘルパーメソッドです。 このメソッドは、コールバックがサポートされていることを示す空のメソッド (コードを含まないメソッド) として実装されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスから派生したクラスは、<see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> メソッドをオーバーライドして、フィールドに含まれているコントロールがコールバックをサポートするかどうかを示すことができます。 コールバックがサポートされていることを示すには、例外をスローしない空のメソッドとして <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> メソッドを実装します。それ以外の場合は、コールバックがサポートされていない理由を説明する便利なメッセージを含む例外をスローします。</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
