<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b8d506f7a36fb3abf346abf3311a260ddd41171" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83908255" /></Metadata><TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SendMailErrorEventHandler(sender As Object, e As SendMailErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SendMailErrorEventHandler(System::Object ^ sender, SendMailErrorEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventHandler = delegate of obj * SendMailErrorEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベントのソースです。</param>
    <param name="e">イベント データを格納する <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> オブジェクトです。</param>
    <summary><see cref="T:System.Web.UI.WebControls.ChangePassword" />、<see cref="T:System.Web.UI.WebControls.CreateUserWizard" />、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> などの各コントロールの <see langword="SendMailError" /> イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。 イベントをイベントハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 イベントハンドラーは、イベントからデリゲートを削除しない限り、イベントが発生するたびに呼び出されます。 イベントハンドラーデリゲートの詳細については、「 [ASP.NET Web Forms Pages のサーバーイベント処理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))」を参照してください。  
  
 `SendMailError` イベントを処理すると、電子メールメッセージを送信しようとしたときに例外が発生した場合でも、Web アプリケーションの実行を継続できます。 たとえば、これは、ユーザーが複数の手順から成るウィザードを使用しているときに例外が発生した場合に便利です。 エラーをログに記録し、情報メッセージをユーザーに表示し、ユーザーがアプリケーションを終了するのではなく、ウィザードを完了できるようにすることをお勧めします。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> イベントのイベントハンドラーを作成しない場合、またはイベントハンドラーを作成し、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティを `false`に設定したままにした場合、電子メールメッセージの送信時にエラーが発生すると Web アプリケーションは実行を停止し、ASP.NET にはエラーメッセージが表示されます。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> メソッドでは、派生クラスが <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>ではなくイベントを処理することもできます。 これは、<xref:System.Web.UI.WebControls.ChangePassword> または <xref:System.Web.UI.WebControls.CreateUserWizard>から派生したクラスでイベントを処理する場合に推奨される手法です。  
  
 イベントの処理の詳細については、「 [ASP.NET Web Forms Pages のサーバーイベント処理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.ChangePassword> Web コントロールを使用し、`SendMailError`という名前の <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> イベントのイベントハンドラーを含む ASP.NET ページを示しています。 このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。 詳細については、「[方法: 単純なフォーム認証を実装する](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100))」を参照してください。  
  
 パスワードの変更が成功した場合、コードは SMTP を使用して、変更を確認する電子メールメッセージをユーザーに送信しようとします。 これは、`SendingMail` イベントハンドラーで実行されます。 SMTP サーバーを構成する方法については、「[方法: IIS 6.0 で Smtp 仮想サーバーをインストールおよび構成](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))する」を参照してください。 この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。  
  
 メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、電子メールメッセージを送信できない場合は、`SendMailError` 関数が呼び出されます。 ユーザーにメッセージが表示されます。 さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。 指定されたイベントソースを作成するには、次のコード例を参照してください。 イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))」を参照してください。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティは `true` に設定され、エラーが処理されたことを示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。 最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)">ASP.NET Web ページでのサーバーイベント処理</related>
    <related type="Article" href="/dotnet/standard/events/">イベントの処理と発生</related>
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/smtp-element-network-settings">smtp 要素 (ネットワーク設定)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178346(v=vs.100)">ログインコントロールのセキュリティ保護</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zdh19h94(v=vs.100)">Web アプリケーションのセキュリティに関する基本的な対策</related>
  </Docs>
</Type>
