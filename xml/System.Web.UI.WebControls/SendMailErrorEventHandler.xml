<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2b8d506f7a36fb3abf346abf3311a260ddd41171" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83908255" /></Metadata><TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SendMailErrorEventHandler(sender As Object, e As SendMailErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SendMailErrorEventHandler(System::Object ^ sender, SendMailErrorEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventHandler = delegate of obj * SendMailErrorEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="1efda-101">イベントのソースです。</span><span class="sxs-lookup"><span data-stu-id="1efda-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="1efda-102">イベント データを格納する <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="1efda-102">A <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> object that contains the event data.</span></span></param>
    <summary><span data-ttu-id="1efda-103"><see cref="T:System.Web.UI.WebControls.ChangePassword" />、<see cref="T:System.Web.UI.WebControls.CreateUserWizard" />、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> などの各コントロールの <see langword="SendMailError" /> イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="1efda-103">Represents the method that handles the <see langword="SendMailError" /> event of controls such as the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> control, the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> control, and the <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1efda-104"><xref:System.Web.UI.WebControls.SendMailErrorEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="1efda-104">When you create a <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="1efda-105">イベントをイベントハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="1efda-105">To associate the event with the event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="1efda-106">イベントハンドラーは、イベントからデリゲートを削除しない限り、イベントが発生するたびに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1efda-106">The event handler is called whenever the event occurs, unless you remove the delegate from the event.</span></span> <span data-ttu-id="1efda-107">イベントハンドラーデリゲートの詳細については、「 [ASP.NET Web Forms Pages のサーバーイベント処理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1efda-107">For more information about event-handler delegates, see [Server Event Handling in ASP.NET Web Forms Pages](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)).</span></span>  
  
 <span data-ttu-id="1efda-108">`SendMailError` イベントを処理すると、電子メールメッセージを送信しようとしたときに例外が発生した場合でも、Web アプリケーションの実行を継続できます。</span><span class="sxs-lookup"><span data-stu-id="1efda-108">Handling the `SendMailError` event allows your Web application to continue running, even if an exception occurs when trying to send an email message.</span></span> <span data-ttu-id="1efda-109">たとえば、これは、ユーザーが複数の手順から成るウィザードを使用しているときに例外が発生した場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="1efda-109">For example, this is useful if the exception occurs when a user is working through a multi-step wizard.</span></span> <span data-ttu-id="1efda-110">エラーをログに記録し、情報メッセージをユーザーに表示し、ユーザーがアプリケーションを終了するのではなく、ウィザードを完了できるようにすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="1efda-110">It is preferable to log the error, display an informative message to the user, and allow the user to complete the wizard rather than terminate the application.</span></span>  
  
 <span data-ttu-id="1efda-111"><xref:System.Web.UI.WebControls.ChangePassword.SendMailError> イベントのイベントハンドラーを作成しない場合、またはイベントハンドラーを作成し、<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティを `false`に設定したままにした場合、電子メールメッセージの送信時にエラーが発生すると Web アプリケーションは実行を停止し、ASP.NET にはエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="1efda-111">If you do not create an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> event, or if you create an event handler but leave the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property set to `false`, your Web application will stop running if an error occurs when sending an email message, and ASP.NET will display an error message.</span></span>  
  
 <span data-ttu-id="1efda-112"><xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> メソッドでは、派生クラスが <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>ではなくイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="1efda-112">The <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> method also allows derived classes to handle the event instead of the <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>.</span></span> <span data-ttu-id="1efda-113">これは、<xref:System.Web.UI.WebControls.ChangePassword> または <xref:System.Web.UI.WebControls.CreateUserWizard>から派生したクラスでイベントを処理する場合に推奨される手法です。</span><span class="sxs-lookup"><span data-stu-id="1efda-113">This is the preferred technique for handling the event in a class that is derived from <xref:System.Web.UI.WebControls.ChangePassword> or <xref:System.Web.UI.WebControls.CreateUserWizard>.</span></span>  
  
 <span data-ttu-id="1efda-114">イベントの処理の詳細については、「 [ASP.NET Web Forms Pages のサーバーイベント処理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1efda-114">For more information about handling events, see [Server Event Handling in ASP.NET Web Forms Pages](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1efda-115">次のコード例は、<xref:System.Web.UI.WebControls.ChangePassword> Web コントロールを使用し、`SendMailError`という名前の <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> イベントのイベントハンドラーを含む ASP.NET ページを示しています。</span><span class="sxs-lookup"><span data-stu-id="1efda-115">The following code example demonstrates an ASP.NET page that uses a <xref:System.Web.UI.WebControls.ChangePassword> Web control, and includes an event handler for the <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> event named `SendMailError`.</span></span> <span data-ttu-id="1efda-116">このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="1efda-116">The code example assumes that the ASP.NET Web site has been configured to use ASP.NET membership and Forms authentication, and that a user has been created whose name and password are known to you.</span></span> <span data-ttu-id="1efda-117">詳細については、「[方法: 単純なフォーム認証を実装する](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1efda-117">For more information, see [How to: Implement Simple Forms Authentication](https://docs.microsoft.com/previous-versions/aspnet/xdt4thhy(v=vs.100)).</span></span>  
  
 <span data-ttu-id="1efda-118">パスワードの変更が成功した場合、コードは SMTP を使用して、変更を確認する電子メールメッセージをユーザーに送信しようとします。</span><span class="sxs-lookup"><span data-stu-id="1efda-118">If the password change succeeds, the code attempts to use SMTP to send an email message to the user to confirm the change.</span></span> <span data-ttu-id="1efda-119">これは、`SendingMail` イベントハンドラーで実行されます。</span><span class="sxs-lookup"><span data-stu-id="1efda-119">This is done in the `SendingMail` event handler.</span></span> <span data-ttu-id="1efda-120">SMTP サーバーを構成する方法については、「[方法: IIS 6.0 で Smtp 仮想サーバーをインストールおよび構成](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100))する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1efda-120">For information about how to configure an SMTP server, see [How to: Install and Configure SMTP Virtual Servers in IIS 6.0](https://docs.microsoft.com/previous-versions/aspnet/8b83ac7t(v=vs.100)).</span></span> <span data-ttu-id="1efda-121">この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。</span><span class="sxs-lookup"><span data-stu-id="1efda-121">For the purposes of this example, it is not necessary to configure an SMTP server; the example is constructed to test for a failure to send an email message.</span></span>  
  
 <span data-ttu-id="1efda-122">メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、電子メールメッセージを送信できない場合は、`SendMailError` 関数が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1efda-122">If a mail server is not configured correctly or some other error occurs and the email message cannot be sent, the `SendMailError` function is called.</span></span> <span data-ttu-id="1efda-123">ユーザーにメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="1efda-123">A message is displayed to the user.</span></span> <span data-ttu-id="1efda-124">さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。</span><span class="sxs-lookup"><span data-stu-id="1efda-124">In addition, an event is logged to the Windows Application event log with the assumption that an event source named MySamplesSite already exists.</span></span> <span data-ttu-id="1efda-125">指定されたイベントソースを作成するには、次のコード例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1efda-125">See the code example below to create the specified event source.</span></span> <span data-ttu-id="1efda-126">イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1efda-126">For more information about creating an event source, see [Server Event Handling in ASP.NET Web Forms Pages](https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)).</span></span> <span data-ttu-id="1efda-127"><xref:System.Web.UI.WebControls.SendMailErrorEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティは `true` に設定され、エラーが処理されたことを示します。</span><span class="sxs-lookup"><span data-stu-id="1efda-127">The <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> property of the <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> object is set to `true` to indicate that the error has been handled.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 <span data-ttu-id="1efda-128">MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。</span><span class="sxs-lookup"><span data-stu-id="1efda-128">Use the following code example if you need to programmatically add the event source named MySamplesSite to your Application log.</span></span> <span data-ttu-id="1efda-129">最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="1efda-129">This event source must exist in order for the first code example to work correctly.</span></span> <span data-ttu-id="1efda-130">次のコード例では、管理者特権が必要です。</span><span class="sxs-lookup"><span data-stu-id="1efda-130">The following code example requires Administrator privileges.</span></span>  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/xax2hw3x(v=vs.100)"><span data-ttu-id="1efda-131">ASP.NET Web ページでのサーバーイベント処理</span><span class="sxs-lookup"><span data-stu-id="1efda-131">Server Event Handling in ASP.NET Web Pages</span></span></related>
    <related type="Article" href="/dotnet/standard/events/"><span data-ttu-id="1efda-132">イベントの処理と発生</span><span class="sxs-lookup"><span data-stu-id="1efda-132">Handling and Raising Events</span></span></related>
    <related type="Article" href="/dotnet/framework/configure-apps/file-schema/network/smtp-element-network-settings"><span data-ttu-id="1efda-133">smtp 要素 (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="1efda-133">smtp Element (Network Settings)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8"><span data-ttu-id="1efda-134">Web サイト管理ツールの [アプリケーション] タブ</span><span class="sxs-lookup"><span data-stu-id="1efda-134">Web Site Administration Tool Application Tab</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178346(v=vs.100)"><span data-ttu-id="1efda-135">ログインコントロールのセキュリティ保護</span><span class="sxs-lookup"><span data-stu-id="1efda-135">Securing Login Controls</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/zdh19h94(v=vs.100)"><span data-ttu-id="1efda-136">Web アプリケーションのセキュリティに関する基本的な対策</span><span class="sxs-lookup"><span data-stu-id="1efda-136">Basic Security Practices for Web Applications</span></span></related>
  </Docs>
</Type>
