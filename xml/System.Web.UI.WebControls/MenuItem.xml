<Type Name="MenuItem" FullName="System.Web.UI.WebControls.MenuItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="506e073de26e2f3c93c9a487b485efd866448081" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78732388" /></Metadata><TypeSignature Language="C#" Value="public sealed class MenuItem : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MenuItem extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MenuItem" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MenuItem&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class MenuItem sealed : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type MenuItem = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールに表示されるメニュー項目を表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> コントロールは、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトによって表されるメニュー項目の階層で構成されます。 各メニュー項目には、<xref:System.Web.UI.WebControls.Menu> コントロールにメニュー項目を表示するレベルを指定する読み取り専用の <xref:System.Web.UI.WebControls.MenuItem.Depth%2A> プロパティがあります。 親メニュー項目を持たない最上位レベル (レベル 0) のメニュー項目は、ルートメニュー項目と呼ばれます。 親メニュー項目を持つメニュー項目は、サブメニュー項目と呼ばれます。 すべてのルートメニュー項目は、<xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションに格納されます。 サブメニュー項目は、親メニュー項目の <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションに格納されます。 メニュー項目の親メニュー項目にアクセスするには、<xref:System.Web.UI.WebControls.MenuItem.Parent%2A> プロパティを使用します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションと <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションには、次のレベルのメニュー項目のみが含まれています。 メニューツリーの下にあるメニュー項目にアクセスするには、後続のメニュー項目の [<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>] プロパティを使用します。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を作成するには、次のいずれかの方法を使用します。  
  
 静的メニュー項目を作成するには、宣言型の構文を使用します。  
  
 コンストラクターを使用して、<xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを動的に作成します。 これらの <xref:System.Web.UI.WebControls.MenuItem> オブジェクトは、<xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションまたは <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションに追加できます。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールをデータソースにバインドします。 <xref:System.Web.UI.WebControls.Menu> コントロールが <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールにバインドされると、データソース内の項目に対応する <xref:System.Web.UI.WebControls.MenuItem> オブジェクトが自動的に作成されます。 その他のデータソースの場合、データソースの階層構造に一致する <xref:System.Web.UI.WebControls.MenuItem> オブジェクトも自動的に作成されます。ただし、メニュー項目とそれに対応するデータ項目の間のバインド関係を指定するメニュー項目のバインドを定義するには、<xref:System.Web.UI.WebControls.Menu.DataBindings%2A> コレクションも使用する必要があります。  
  
 メニュー項目は、そのレベルに応じて、静的メニューまたは動的メニューのいずれかに表示されます。 静的メニューは、常に <xref:System.Web.UI.WebControls.Menu> コントロールに表示されます。 既定では、最上位レベル (レベル 0) のメニュー項目が静的メニューに表示されます。 静的メニュー内に追加のメニューレベル (静的サブメニュー) を表示するには、[<xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A>] プロパティを設定します。 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティによって指定された値よりも高いレベルのメニュー項目 (存在する場合) は、動的サブメニューに表示されます。 動的サブメニューは、ユーザーが動的サブメニューを含む親メニュー項目の上にマウスポインターを置いたときにのみ表示されます。  
  
 ユーザーがメニュー項目をクリックすると、<xref:System.Web.UI.WebControls.Menu> コントロールは、リンクされた Web ページに移動するか、単にサーバーにポストバックすることができます。 メニュー項目の [<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>] プロパティが設定されている場合、<xref:System.Web.UI.WebControls.Menu> コントロールはリンクページに移動します。それ以外の場合は、処理のためにページをサーバーにポストバックします。 既定では、リンクページは、<xref:System.Web.UI.WebControls.Menu> コントロールと同じウィンドウまたはフレームに表示されます。 リンクされたコンテンツを別のウィンドウまたはフレームに表示するには、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Target%2A> プロパティを使用します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Target%2A?displayProperty=nameWithType> プロパティは、コントロールのすべてのメニュー項目に影響します。 個々のメニュー項目のウィンドウまたはフレームを指定するには、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトの [<xref:System.Web.UI.WebControls.MenuItem.Target%2A>] プロパティを直接設定します。  
  
 各メニュー項目には、<xref:System.Web.UI.WebControls.MenuItem.Text%2A> と <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティがあります。 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティの値は <xref:System.Web.UI.WebControls.Menu> コントロールに表示されますが、<xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティは、メニュー項目に関連付けられたポストバックイベントに渡されるデータなど、メニュー項目に関する追加データを格納するために使用されます。 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティを設定しても、<xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティを設定しないままにした場合、<xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティは <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティと同じ値で自動的に設定されます。 反対の場合も同じです。 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティではなく、<xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティを設定した場合、<xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティは <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティと同じ値で自動的に設定されます。  
  
> [!NOTE]
>  同じメニューレベルのメニュー項目には、それぞれが <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティに対して一意の値を持つ必要があります。<xref:System.Web.UI.WebControls.Menu> コントロールは、同じレベルにある同じ値を持つ異なるメニュー項目を区別できません。 このシナリオでは、値が重複しているメニュー項目をユーザーがクリックすると、メニューの最初に表示されるメニュー項目が選択されます。  
  
 ユーザーがメニュー項目の上にマウスポインターを置いたときにツールヒントを表示するには、項目の <xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> プロパティを設定します。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールには、いくつかの異なる種類のメニュー項目があります。 次の表のプロパティを使用して、さまざまなメニュー項目の種類のスタイル (フォントサイズや色など) を制御できます。  
  
|メニュー項目のスタイルプロパティ|説明|  
|------------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|マウスポインターが上に置かれているときの動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|個々の動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|動的メニューのスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|現在選択されている動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|マウスポインターが上に置かれているときの静的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|個々の静的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|静的メニューのスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|現在選択されている静的メニュー項目のスタイル設定。|  
  
 個々のスタイルプロパティを設定する代わりに、次の表に示すスタイルコレクションを使用して、メニュー項目に適用されるスタイルをそのレベルに基づいて指定できます。  
  
|レベルスタイルのコレクション|説明|  
|-----------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|メニュー項目のスタイルをそのレベルに基づいて制御する <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのコレクション。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|選択したメニュー項目のスタイルをそのレベルに基づいて制御する <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのコレクション。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|サブメニュー項目のスタイルをそのレベルに基づいて制御する <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトのコレクション。|  
  
 コレクションの最初のスタイルは、メニューツリーの最初の深さのレベルにあるメニュー項目のスタイルに対応します。 コレクションの2番目のスタイルは、メニューツリーの2番目の深さのレベルにあるメニュー項目のスタイルに対応します。 これは、サブメニューがあるかどうかに関係なく、特定の深さのメニュー項目が同じ外観を持つ、目次スタイルのナビゲーションメニューを生成するために最もよく使用されます。  
  
> [!NOTE]
>  前の表に示したレベルスタイルのコレクションのいずれかを使用して <xref:System.Web.UI.WebControls.Menu> コントロールのスタイルを定義すると、これらのスタイル設定によって個々のメニュー項目のスタイルプロパティがオーバーライドされます。  
  
 メニュー項目のスタイルをカスタマイズするだけでなく、外観をカスタマイズすることもできます。 次の表のプロパティを設定すると、メニュー項目のさまざまな部分にカスタムイメージを指定できます。  
  
|Image プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|メニュー項目のテキストの横に表示されるオプションのイメージ。|  
|<xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A>|メニュー項目に動的サブメニューがあることを示すためにメニュー項目に表示されるオプションのイメージ。|  
|<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>|メニュー項目の下部に表示される、他のメニュー項目と区別するためのオプションのイメージ。|  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールでメニュー項目が現在選択されているかどうかを判断するには、<xref:System.Web.UI.WebControls.MenuItem.Selected%2A> プロパティを使用します。 また、<xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> プロパティを使用して、メニュー項目がデータにバインドされているかどうかを確認することもできます。 メニュー項目がデータにバインドされている場合は、[<xref:System.Web.UI.WebControls.MenuItem.DataItem%2A>] プロパティを使用して、メニュー項目にバインドされているデータ項目の値にアクセスできます。  
  
 <xref:System.Web.UI.WebControls.MenuItem> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.WebControls.MenuItem.%23ctor%2A> コンストラクターに関するトピックを参照してください。  
  
   
  
## Examples  
 次の例は、宣言型の構文を使用して静的 <xref:System.Web.UI.WebControls.MenuItem> オブジェクトを <xref:System.Web.UI.WebControls.Menu> コントロールに設定する方法を示しています。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 次の例は、<xref:System.Web.UI.WebControls.Menu> コントロールを <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールにバインドする方法を示しています。 データソースにバインドされると、<xref:System.Web.UI.WebControls.Menu> コントロールによって <xref:System.Web.UI.WebControls.MenuItem> オブジェクトが自動的に作成されます。 この例を正しく動作させるには、次のサンプルのサイトマップデータを、Web.config という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[MenuDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-aspx-vb[MenuDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 前の例のサイトマップデータの例を次に示します。  
  
 `<siteMap>`  
  
 `<siteMapNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<siteMapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<siteMapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<siteMapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<siteMapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</siteMapNode>`  
  
 `<siteMapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<siteMapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<siteMapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<siteMapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</siteMapNode>`  
  
 `</siteMapNode>`  
  
 `</siteMap>`  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Menu" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
    <altmember cref="T:System.Web.UI.WebControls.MenuItemStyle" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.Menu.Target" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
    <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItem" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>メニュー テキストまたは値を指定せずに、<see cref="T:System.Web.UI.WebControls.MenuItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、メニューテキストまたは値を持たない <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成します。  
  
> [!NOTE]
>  このコンストラクターを使用すると、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトのすべてのプロパティが既定値に設定されます。 オブジェクトを作成した後に、必要に応じてプロパティを設定してください。  
  
 このコンストラクターは、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションまたは <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションを動的に設定するときによく使用されます。  
  
   
  
## Examples  
 次の例は、このコンストラクターを使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成する方法を示しています。 次に、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を動的に設定します。  
  
 [!code-aspx-csharp[MenuItemCtorDefault#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtorDefault/CS/menuitemctordefaultcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtorDefault#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtorDefault/VB/menuitemctordefaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目に表示されるテキスト。</param>
        <summary>メニュー テキストを指定して、<see cref="T:System.Web.UI.WebControls.MenuItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text` パラメーターによって指定されたメニューテキストを使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成します。  
  
 次の表は、<xref:System.Web.UI.WebControls.MenuItem> クラスのインスタンスの初期プロパティ値を示しています。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|Text パラメーターの値。|  
  
 このコンストラクターは、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションまたは <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションを動的に設定するときによく使用されます。  
  
   
  
## Examples  
 次の例は、このコンストラクターを使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成する方法を示しています。 次に、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を動的に設定します。  
  
 [!code-aspx-csharp[MenuItemCtor1Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor1Param/CS/menuitemctor1paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor1Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor1Param/VB/menuitemctor1paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目に表示されるテキスト。</param>
        <param name="value">メニュー項目に関連付けられる補足データ。ポストバック イベントの処理で使用されるデータなどです。</param>
        <summary>メニュー テキストと値を指定して、<see cref="T:System.Web.UI.WebControls.MenuItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text` と `value` パラメーターで指定されたメニューテキストと値を使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成します。  
  
 <xref:System.Web.UI.WebControls.MenuItem> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|`text` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|`value` パラメーターの値。|  
  
 このコンストラクターは、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションまたは <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションを動的に設定するときによく使用されます。  
  
   
  
## Examples  
 次の例は、このコンストラクターを使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成する方法を示しています。 次に、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を動的に設定します。  
  
 [!code-aspx-csharp[MenuItemCtor2Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor2Param/CS/menuitemctor2paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor2Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor2Param/VB/menuitemctor2paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目に表示されるテキスト。</param>
        <param name="value">メニュー項目に関連付けられる補足データ。ポストバック イベントの処理で使用されるデータなどです。</param>
        <param name="imageUrl">メニュー項目のテキストの横に表示されるイメージの URL。</param>
        <summary>メニュー テキスト、値、イメージの URL を指定して、<see cref="T:System.Web.UI.WebControls.MenuItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text`、`value`、および `imageUrl` の各パラメーターで指定されたメニューテキスト、値、およびイメージの URL を使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成します。  
  
 <xref:System.Web.UI.WebControls.MenuItem> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|`text` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|`value` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|`imageUrl` パラメーターの値。|  
  
 このコンストラクターは、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションまたは <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションを動的に設定するときによく使用されます。  
  
   
  
## Examples  
 次の例は、このコンストラクターを使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成する方法を示しています。 次に、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を動的に設定します。  
  
 [!code-aspx-csharp[MenuItemCtor3Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor3Param/CS/menuitemctor3paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor3Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor3Param/VB/menuitemctor3paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl, string navigateUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl, navigateUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目に表示されるテキスト。</param>
        <param name="value">メニュー項目に関連付けられる補足データ。ポストバック イベントの処理で使用されるデータなどです。</param>
        <param name="imageUrl">メニュー項目のテキストの横に表示されるイメージの URL。</param>
        <param name="navigateUrl">メニュー項目がクリックされたときのリンク先 URL。</param>
        <summary>メニュー テキスト、値、イメージの URL、およびナビゲーション URL を指定して、<see cref="T:System.Web.UI.WebControls.MenuItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text`、`value`、`imageUrl`、および `navigateUrl` の各パラメーターによって指定されたメニューテキスト、値、イメージの URL、およびナビゲーション URL を使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成します。  
  
 <xref:System.Web.UI.WebControls.MenuItem> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|`text` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|`value` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|`imageUrl` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>|`navigateUrl` パラメーターの値。|  
  
 このコンストラクターは、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションまたは <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションを動的に設定するときによく使用されます。  
  
   
  
## Examples  
 次の例は、このコンストラクターを使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成する方法を示しています。 次に、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を動的に設定します。  
  
 [!code-aspx-csharp[MenuItemCtor4Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor4Param/CS/menuitemctor4paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor4Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor4Param/VB/menuitemctor4paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItem(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.MenuItem : string * string * string * string * string -&gt; System.Web.UI.WebControls.MenuItem" Usage="new System.Web.UI.WebControls.MenuItem (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目に表示されるテキスト。</param>
        <param name="value">メニュー項目に関連付けられる補足データ。ポストバック イベントの処理で使用されるデータなどです。</param>
        <param name="imageUrl">メニュー項目のテキストの横に表示されるイメージの URL。</param>
        <param name="navigateUrl">メニュー項目がクリックされたときのリンク先 URL。</param>
        <param name="target">メニュー項目がクリックされたときに、そのメニュー項目にリンクされている Web ページの内容を表示するウィンドウまたは枠。</param>
        <summary>メニュー テキスト、値、イメージの URL、ナビゲーション URL、および表示先を指定して、<see cref="T:System.Web.UI.WebControls.MenuItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、`text`、`value`、`imageUrl`、`navigateUrl`、および `target` の各パラメーターによって指定されたメニューテキスト、値、イメージの URL、ナビゲーション URL、およびターゲットを使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成します。  
  
 <xref:System.Web.UI.WebControls.MenuItem> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.MenuItem.Text%2A>|`text` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.Value%2A>|`value` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A>|`imageUrl` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>|`navigateUrl` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.MenuItem.Target%2A>|`target` パラメーターの値。|  
  
 このコンストラクターは、<xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションまたは <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションを動的に設定するときによく使用されます。  
  
   
  
## Examples  
 次の例は、このコンストラクターを使用して <xref:System.Web.UI.WebControls.MenuItem> クラスの新しいインスタンスを作成する方法を示しています。 次に、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を動的に設定します。  
  
 [!code-aspx-csharp[MenuItemCtor5Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemCtor5Param/CS/menuitemctor5paramcs.aspx#1)]
 [!code-aspx-vb[MenuItemCtor5Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemCtor5Param/VB/menuitemctor5paramvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ChildItems">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection ChildItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection ChildItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildItems As MenuItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItemCollection ^ ChildItems { System::Web::UI::WebControls::MenuItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildItems : System.Web.UI.WebControls.MenuItemCollection" Usage="System.Web.UI.WebControls.MenuItem.ChildItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のメニュー項目のサブメニュー項目を格納している <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> オブジェクトを取得します。</summary>
        <value>現在のメニュー項目のサブメニュー項目を格納している <see cref="T:System.Web.UI.WebControls.MenuItemCollection" />。 既定値は <see langword="null" /> で、このメニュー項目にサブメニュー項目がないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のメニュー項目 (存在する場合) のサブメニュー項目にアクセスするには、<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> プロパティ (コレクション) を使用します。 このコレクションには、次のレベルにあるメニュー項目のみが含まれています。 メニューツリーの下にあるメニュー項目にアクセスするには、後続のメニュー項目の [<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>] プロパティを使用します。 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> プロパティが `null`の場合、現在のメニューにはサブメニュー項目はありません。  
  
 <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> プロパティは、現在のメニュー項目のサブメニュー項目をプログラムで管理するためにも使用できます。 コレクションに対して <xref:System.Web.UI.WebControls.MenuItem> オブジェクトの追加、挿入、削除、取得、および変更を行うことができます。 コレクションに対する更新は、次回ページを更新したときに、<xref:System.Web.UI.WebControls.Menu> コントロールに自動的に反映されます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目を走査する方法を示します。  
  
 [!code-aspx-csharp[MenuItems#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-aspx-vb[MenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Parent" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.MenuItem.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目がデータ バインディングを使用して作成されたかどうかを示す値を取得します。</summary>
        <value>メニュー項目がデータ バインディングを使用して作成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> プロパティは、メニュー項目がデータバインディングによって作成されたかどうかをプログラムで判断するために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.MenuItem.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目にバインドされたデータ項目を取得します。</summary>
        <value>メニュー項目にバインドされたデータ項目を表す <see cref="T:System.Object" />。 既定値は <see langword="null" /> で、メニュー項目はどのデータ項目にもバインドされていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Menu> コントロールが、<xref:System.Web.UI.WebControls.XmlDataSource> オブジェクトなどのデータソースにバインドされている場合、このプロパティは、この特定のメニュー項目にバインドされているデータ項目に設定されます。 このプロパティは、通常、データ項目の値にアクセスするために使用されます。  
  
> [!NOTE]
>  このプロパティは、データバインディングが発生した後にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.MenuItem.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目にバインドされたデータへのパスを取得します。</summary>
        <value>ノードにバインドされたデータへのパス。 この値は、<see cref="T:System.Web.UI.WebControls.Menu" /> コントロールがバインドされた階層データ ソースのコントロールから取得されます。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> プロパティ値は、通常、<xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> メソッドを呼び出して、現在のメニュー項目にバインドされているデータへのパスを指定するときに使用されます。 次に、このメソッドは、指定されたパスにあるデータを格納する <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> オブジェクトを返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
        <altmember cref="M:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.MenuItem.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目が表示されるレベルを取得します。</summary>
        <value>メニュー項目が表示されるレベル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メニュー項目の深さを確認するには、<xref:System.Web.UI.WebControls.MenuItem.Depth%2A> プロパティを使用します。 この深さは、メニュー項目が表示されるレベルを示し、現在のメニュー項目とルートメニュー項目の間の階層のレベル数を表します。 たとえば、ルートメニュー項目の深さは0です。 ルートメニュー項目のサブメニュー項目には、深さ1などがあります。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.Depth%2A> プロパティを使用して、メニュー項目の深さを決定する方法を示します。  
  
 [!code-aspx-csharp[MenuItemDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDepth/CS/menuitemdepthcs.aspx#1)]
 [!code-aspx-vb[MenuItemDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDepth/VB/menuitemdepthvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目を有効にしてポップアウト イメージおよび子メニュー項目を表示する、<see cref="T:System.Web.UI.WebControls.MenuItem" /> オブジェクトが有効であるかどうかを示す値を取得または設定します。</summary>
        <value>メニュー項目が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティが `false`に設定されている場合、メニュー項目は無効になり、子項目が表示されることを示すポップアウトイメージは表示されません。 メニュー項目に対してこのプロパティを `false` に設定すると、そのノードの最後までメニュー項目が作成されます。そのノードには、それ以上のレベルは表示されません。 既定値は `true` です。  
  
 メニュー項目に子項目を表示し、それ自体を "クリック可能" にしないようにする場合は、<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> プロパティを使用して `false`に設定します。  
  
   
  
## Examples  
 次の例では、[<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>] プロパティが `false` に設定されているメニュー項目を、メニューに表示する方法を示します。  
  
 [!code-aspx-csharp[MenuSelectableEnabled#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectableEnabled/CS/menuselectableenabledcs.aspx#1)]
 [!code-aspx-vb[MenuSelectableEnabled#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectableEnabled/VB/menuselectableenabledvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Selectable" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目のテキストの横に表示されるイメージの URL を取得または設定します。</summary>
        <value>メニュー項目のテキストの横に表示されるカスタム イメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールの現在のメニュー項目のカスタムイメージを指定します。 このイメージは、メニュー項目のテキストの横に表示されます。クライアントのブラウザーがその形式をサポートしている限り、任意のファイル形式 (.jpg、.gif、.bmp など) にすることができます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> プロパティを使用して、メニュー項目のテキストの横にカスタムイメージを表示する方法を示します。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目がクリックされたときの移動先 URL を取得または設定します。</summary>
        <value>メニュー項目がクリックされたときの移動先 URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メニュー項目は、選択モードまたはナビゲーションモードの2つのモードのいずれかになります。 既定では、メニュー項目は選択モードになっています。 メニュー項目をナビゲーションモードにするには、メニュー項目の [<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A>] プロパティを空の文字列 ("") 以外の値に設定します。  
  
 メニュー項目がナビゲーションモードの場合は、そのメニュー項目のすべての選択イベントが無効になります。 ナビゲーションモードでメニュー項目をクリックすると、指定した URL にユーザーが移動します。 必要に応じて、[<xref:System.Web.UI.WebControls.MenuItem.Target%2A>] プロパティを設定して、リンクされたコンテンツを表示するウィンドウまたはフレームを指定することもできます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> プロパティを使用して、ユーザーがメニュー項目をクリックしたときの移動先 URL を指定する方法を示します。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::MenuItem ^ Parent { System::Web::UI::WebControls::MenuItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.MenuItem" Usage="System.Web.UI.WebControls.MenuItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のメニュー項目の親メニュー項目を取得します。</summary>
        <value>現在のメニュー項目の親メニュー項目を表す <see cref="T:System.Web.UI.WebControls.MenuItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.Parent%2A> プロパティを使用して、親メニュー項目を決定するか、そのプロパティにアクセスします。  
  
> [!NOTE]
>  ルートメニュー項目に親メニュー項目がありません。  
  
 現在のメニュー項目のサブメニュー項目にアクセスするには、<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> プロパティを使用します。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.Parent%2A> プロパティを使用して、子メニュー項目の親メニュー項目にアクセスする方法を示します。  
  
 [!code-aspx-csharp[MenuItemParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemParent/CS/menuitemparentcs.aspx#1)]
 [!code-aspx-vb[MenuItemParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemParent/VB/menuitemparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.Items" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="PopOutImageUrl">
      <MemberSignature Language="C#" Value="public string PopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property PopOutImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PopOutImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PopOutImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目に動的なサブメニューがあることを示すためにメニュー項目に表示されるイメージの URL を取得または設定します。</summary>
        <value>メニュー項目に動的なサブメニューがあることを示すためにメニュー項目に表示されるイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> が `List`に設定されている場合、または <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> が `Default` に設定されていて、<xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=nameWithType> が `4.0` 以降に設定されている場合、このプロパティは無効になります。 このプロパティの代わりに、<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A?displayProperty=nameWithType> プロパティまたは <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A?displayProperty=nameWithType> プロパティを使用してください。  
  
 <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> が `Table`に設定されている場合、または <xref:System.Web.UI.WebControls.MenuRenderingMode?displayProperty=nameWithType> が `Default` に設定され <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A?displayProperty=nameWithType> が `3.5`に設定されている場合は、このプロパティを使用して、メニュー項目に動的サブメニューがあることを示すためにメニュー項目に表示されるカスタムイメージを指定します。 このイメージは、クライアントのブラウザーがその形式をサポートしている限り、任意のファイル形式 (.jpg、.gif、.bmp など) にすることができます。  
  
> [!NOTE]
>  このプロパティを設定すると、<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A?displayProperty=nameWithType> および <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A?displayProperty=nameWithType> のプロパティで指定した画像がオーバーライドされます。  
  
 このプロパティを空の文字列に設定し、<xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを `false`に設定することによって、このイメージを静的メニューで無効にすることもできます。 同様に、このプロパティを空の文字列に設定し、<xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> プロパティを `false`に設定することによって、このイメージを動的メニューで無効にすることができます。  
  
   
  
## Examples  
 メニュー項目に動的サブメニューがある場合にメニュー項目に表示するカスタムイメージを指定するために <xref:System.Web.UI.WebControls.MenuItem.PopOutImageUrl%2A> プロパティを使用する方法を次の例に示します。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="public bool Selectable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selectable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Selectable" />
      <MemberSignature Language="VB.NET" Value="Public Property Selectable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selectable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selectable : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Selectable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItem" /> オブジェクトを選択できるかどうか、または "クリックできる" かどうかを示す値を取得または設定します。</summary>
        <value>メニュー項目を選択できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティがメニュー項目の `false` に設定されている場合、メニュー項目がクリックされたとき (選択されている場合)、アクションは発生しません。 メニュー項目 (存在する場合) の子メニュー項目が表示され、使用可能であることを示すポップアウトイメージ。  
  
 メニュー項目に子メニュー項目が表示されないようにするには、[<xref:System.Web.UI.WebControls.MenuItem.Enabled%2A>] プロパティを [`false`] に設定します。  
  
 <xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> は、メニュー項目をクリックしてポストバックし、選択された状態でその項目を設定することを意味するメニュー項目にのみ適用されます。 選択できないメニュー項目は、まだリンクとして書式設定されていることに注意してください。 これは、ユーザー補助の理由により、メニュー項目がアクションを発生させる可能性があるためです。 また、メニュー項目を選択できない場合でも、子メニュー項目を選択したり、表示したりする必要がある場合もあります。  
  
 ユーザーがメニュー項目をクリックしないようにするには、次のいずれかの操作を行います。  
  
-   <xref:System.Web.UI.WebControls.MenuItemBinding.NavigateUrl%2A> を設定せずに、<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A> を `false`に設定してください。  
  
-   メニュー項目の <xref:System.Web.UI.WebControls.MenuItem.Enabled%2A> プロパティを `false`に設定します。  
  
   
  
## Examples  
 次の例では、[<xref:System.Web.UI.WebControls.MenuItem.Selectable%2A>] プロパティが `false` に設定されているメニュー項目を、メニューに表示する方法を示します。  
  
 [!code-aspx-csharp[MenuSelectableEnabled#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectableEnabled/CS/menuselectableenabledcs.aspx#1)]
 [!code-aspx-vb[MenuSelectableEnabled#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectableEnabled/VB/menuselectableenabledvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.MenuItem.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のメニュー項目が <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールで選択されているかどうかを示す値を取得または設定します。</summary>
        <value>現在のメニュー項目が <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールで選択されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のメニュー項目が選択されているかどうかを指定または確認するには、<xref:System.Web.UI.WebControls.MenuItem.Selected%2A> プロパティを使用します。  
  
> [!NOTE]
>  プロパティを使用してメニュー項目が選択されているかどうかを判断することもできますが、<xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> プロパティを使用する方が一般的です。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールで一度に選択できるメニュー項目は1つだけです。  
  
   
  
## Examples  
 次の例は、<xref:System.Web.UI.WebControls.MenuItem.Selected%2A> プロパティを使用して、ページが最初に読み込まれるときに <xref:System.Web.UI.WebControls.Menu> コントロール内の特定のメニュー項目を選択する方法を示しています。 この例を正しく動作させるには、次のサンプルのサイトマップデータを、Web.config という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[MenuItemSelected#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemSelected/CS/menuitemselectedcs.aspx#1)]
 [!code-aspx-vb[MenuItemSelected#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemSelected/VB/menuitemselectedvb.aspx#1)]  
  
 前の例のサイトマップデータの例を次に示します。  
  
 `<siteMap>`  
  
 `<siteMapNode url="~\Home.aspx"`  
  
 `title="Home"`  
  
 `description="Home">`  
  
 `<siteMapNode url="~\Music.aspx"`  
  
 `title="Music"`  
  
 `description="Music">`  
  
 `<siteMapNode url="~\Classical.aspx"`  
  
 `title="Classical"`  
  
 `description="Classical"/>`  
  
 `<siteMapNode url="~\Rock.aspx"`  
  
 `title="Rock"`  
  
 `description="Rock"/>`  
  
 `<siteMapNode url="~\Jazz.aspx"`  
  
 `title="Jazz"`  
  
 `description="Jazz"/>`  
  
 `</siteMapNode>`  
  
 `<siteMapNode url="~\Movies.aspx"`  
  
 `title="Movies"`  
  
 `description="Movies">`  
  
 `<siteMapNode url="~\Action.aspx"`  
  
 `title="Action"`  
  
 `description="Action"/>`  
  
 `<siteMapNode url="~\Drama.aspx"`  
  
 `title="Drama"`  
  
 `description="Drama"/>`  
  
 `<siteMapNode url="~\Musical.aspx"`  
  
 `title="Musical"`  
  
 `description="Musical"/>`  
  
 `</siteMapNode>`  
  
 `</siteMapNode>`  
  
 `</siteMap>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string SeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property SeparatorImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SeparatorImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorImageUrl : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>他のメニュー項目と区別するためにメニュー項目の下部に表示するイメージの URL を取得または設定します。</summary>
        <value>現在のメニュー項目を他のメニュー項目と区別するために使用するイメージの URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A>] プロパティを使用して、メニュー項目の下部に表示されるカスタムイメージ (通常は線) を、他のメニュー項目と区別するように指定します。 このイメージは、クライアントのブラウザーがその形式をサポートしている限り、任意のファイル形式 (.jpg、.gif、.bmp など) にすることができます。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl%2A> プロパティを使用して、メニュー項目の下部に表示するカスタムイメージを指定し、<xref:System.Web.UI.WebControls.Menu> コントロールの他のメニュー項目と区別する方法を示します。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberSignature Language="F#" Value="abstract member System.ICloneable.Clone : unit -&gt; obj&#xA;override this.System.ICloneable.Clone : unit -&gt; obj" Usage="menuItem.System.ICloneable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.MenuItem" /> オブジェクトのコピーを作成します。</summary>
        <returns><see cref="T:System.Object" /> のコピーを表す <see cref="T:System.Web.UI.WebControls.MenuItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.System%23ICloneable%23Clone%2A> メソッドは、それ自体のコピーを作成するために <xref:System.Web.UI.WebControls.MenuItem> クラスによって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IStateManager.IsTrackingViewState : bool" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.MenuItem" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</summary>
        <value>コントロールがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、<xref:System.Web.UI.WebControls.MenuItem> オブジェクトがビューステートの変更を追跡しているかどうかを判断するには、<xref:System.Web.UI.WebControls.MenuItem.System%23Web%23UI%23IStateManager%23IsTrackingViewState%2A> メンバーを使用する必要があります。  
  
 <xref:System.Web.UI.WebControls.MenuItem.System%23Web%23UI%23IStateManager%23IsTrackingViewState%2A> メンバーは、明示的なインターフェイスメンバーの実装です。 <xref:System.Web.UI.WebControls.MenuItem> インスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされている場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit&#xA;override this.System.Web.UI.IStateManager.LoadViewState : obj -&gt; unit" Usage="menuItem.System.Web.UI.IStateManager.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">保存されたビューステートを格納している <see cref="T:System.Object" />。</param>
        <summary>メニュー項目が前回保存したビューステートを読み込みます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj&#xA;override this.System.Web.UI.IStateManager.SaveViewState : unit -&gt; obj" Usage="menuItem.System.Web.UI.IStateManager.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビューステートの変更を <see cref="T:System.Object" /> に保存します。</summary>
        <returns>ビューステートの変化を格納している <see cref="T:System.Object" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MenuItem.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit&#xA;override this.System.Web.UI.IStateManager.TrackViewState : unit -&gt; unit" Usage="menuItem.System.Web.UI.IStateManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー ステートへの変更を追跡するように <see cref="T:System.Web.UI.WebControls.MenuItem" /> オブジェクトに指示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドがサーバーコントロールで呼び出されると、<xref:System.Web.UI.Control.IsTrackingViewState%2A> プロパティは `true`を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状態管理の概要</related>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目に関連付けられている Web ページの内容を表示する対象のウィンドウまたはフレームを取得または設定します。</summary>
        <value>リンクされた Web ページの内容を表示する対象のウィンドウまたはフレーム。 既定値は空の文字列 ("") です。フォーカスのあるウィンドウまたはフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メニュー項目がクリックされたときに、メニュー項目にリンクされている Web コンテンツを表示するウィンドウまたはフレームを指定するには、<xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティを使用します。 値は、次の表に示すアンダースコア (_) から始まる特殊な値を除き、大文字小文字を区別しない A から Z の範囲の文字で始まる必要があります。 このプロパティを設定すると、このメニュー項目の <xref:System.Web.UI.WebControls.Menu> コントロールの <xref:System.Web.UI.WebControls.Menu.Target%2A> プロパティがオーバーライドされることに注意してください。  
  
|対象の値|説明|  
|------------------|-----------------|  
|`_blank`|フレームなしの新しいウィンドウに内容を表示します。|  
|`_parent`|直前のフレームセットの親に内容を表示します。|  
|`_search`|検索ペインに内容を表示します。|  
|`_self`|フォーカスのあるフレームに内容を表示します。|  
|`_top`|最大化されたフレームなしのウィンドウに内容を表示します。|  
  
> [!NOTE]
>  ブラウザーのドキュメントを参照して、`_search` 値がサポートされているかどうか確認してください。 たとえば、Microsoft Internet Explorer 5.0 以降では `_search` ターゲット値がサポートされています。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティは、`target` 属性として表示されます。 XHTML 1.1 strict ドキュメント型定義では、アンカー要素の `target` 属性は許可されていません。 <xref:System.Web.UI.WebControls.HyperLink> に表示される出力が XHTML 1.1 に準拠している必要がある場合は、<xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティを設定しないでください。 詳細については、「 [Visual Studio と ASP.NET の XHTML 標準](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100))」を参照してください。  
>   
>  アクセス可能な Web ページを作成する場合は、<xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティを使用して別のウィンドウを対象にしないようにすることを強くお勧めします。 詳細については、[Visual Studio と ASP.NET のアクセシビリティ](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))に関する記事を参照してください。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティを使用して、メニュー項目がクリックされたときにメニュー項目にリンクされた Web コンテンツを表示するウィンドウまたはフレームを指定する方法を示します。  
  
 [!code-aspx-csharp[MenuItemTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemTarget/CS/menuitemtargetcs.aspx#1)]
 [!code-aspx-vb[MenuItemTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemTarget/VB/menuitemtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目に表示されるテキストを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目に表示されるテキスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールのメニュー項目に表示されるテキストを指定または決定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティに `null`が含まれている場合、`get` アクセサーは <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティの値を返します。 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティに `null`が含まれている場合は、<xref:System.String.Empty> が返されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールの各メニュー項目に表示するテキストを指定する方法を示します。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目のツールヒントのテキストを取得または設定します。</summary>
        <value>メニュー項目のツールヒントのテキスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メニュー項目のツールヒントテキストを指定するには、<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> プロパティを使用します。 ツールヒントのテキストは、マウスポインターがメニュー項目の上に置かれたときに表示されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.UI.WebControls.MenuItem.ToolTip%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.Menu> コントロールの各メニュー項目のツールヒントを指定する方法を示します。  
  
 [!code-aspx-csharp[MenuItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItem/CS/menuitemcs.aspx#1)]
 [!code-aspx-vb[MenuItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItem/VB/menuitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.MenuItem.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目の補足データ (ポストバック イベントを処理するために使用するデータなど) を格納するために使用される、非表示の値を取得または設定します。</summary>
        <value>メニュー項目に関する非表示の補足データ。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティは、メニュー項目に関連付けられている追加データを格納することによって、<xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティを補完するために使用されます。 この値はコントロールには表示されず、通常、ポストバックイベントを処理するためのデータを格納するために使用されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティに `null`が含まれている場合、`get` アクセサーは <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティの値を返します。 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> プロパティに `null`が含まれている場合は、<xref:System.String.Empty> が返されます。  
  
 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティの値は、<xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> プロパティで指定された値のパスが生成されるときにも使用されます。 値パスは、ルートメニュー項目から現在のメニュー項目へのパスを形成するメニュー項目値の区切り記号で区切られたリストです。 値のパスは、<xref:System.Web.UI.WebControls.Menu> コントロール内のメニュー項目の位置を示すために使用されます。  
  
> [!NOTE]
>  同じメニューレベルのメニュー項目には、それぞれが <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティに対して一意の値を持つ必要があります。<xref:System.Web.UI.WebControls.Menu> コントロールは、同じレベルにある同じ値を持つ異なるメニュー項目を区別できません。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次の例は、ユーザーがメニュー項目を選択したときに、メニュー項目とその親の <xref:System.Web.UI.WebControls.MenuItem.Value%2A> を表示する方法を示しています。  
  
 [!code-aspx-csharp[MenuItemValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemValue/CS/menuitemvaluecs.aspx#1)]
 [!code-aspx-vb[MenuItemValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemValue/VB/menuitemvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Menu" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.PopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.SeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.MenuItem.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ルート メニュー項目から現在のメニュー項目までのパスを取得します。</summary>
        <value>ルート メニュー項目から現在のメニュー項目までのパスを構成するメニュー項目の値のコンマ区切りのリスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> プロパティには、ルートメニュー項目から現在のメニュー項目までのパスを形成するメニュー項目値の区切り記号で区切られたリストが含まれます。 値のパスは、<xref:System.Web.UI.WebControls.Menu> コントロール内のメニュー項目の位置を示すために使用されます。 メニュー項目の値を区切るために使用する区切り文字は、<xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> プロパティを使用して指定できます。 この値は、個々の値のリストを解析する場合、または <xref:System.Web.UI.WebControls.TreeView> クラスの <xref:System.Web.UI.WebControls.Menu.FindItem%2A> メソッドに引数として渡す場合によく使用されます。 <xref:System.Web.UI.WebControls.Menu> コントロールに表示される値によっては、競合を防ぐために区切り文字を変更する必要がある場合があります。 たとえば、区切り記号をコンマに設定した場合、表示される値にはコンマを含めることはできません。それ以外の場合、<xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> プロパティを正確に解析することはできません。  
  
> [!NOTE]
>  ルートメニュー項目から現在のメニュー項目までの各メニュー項目の [<xref:System.Web.UI.WebControls.MenuItem.Value%2A>] プロパティの値は、値のパスを生成するために使用されます。 同じメニューレベルのメニュー項目には、それぞれが <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティに対して一意の値を持つ必要があります。<xref:System.Web.UI.WebControls.Menu> コントロールは、同じレベルにある同じ値を持つ異なるメニュー項目を区別できません。  
  
   
  
## Examples  
 次の例は、値を個々のメニュー項目値の <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> プロパティに解析する方法を示しています。  
  
 [!code-aspx-csharp[MenuItemValuePath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemValuePath/CS/menuitemvaluepathcs.aspx#1)]
 [!code-aspx-vb[MenuItemValuePath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemValuePath/VB/menuitemvaluepathvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
