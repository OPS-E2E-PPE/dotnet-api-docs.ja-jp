<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7d1a75e75bcce4bdde71707b9f2d12dc6c06dc0" /><Meta Name="ms.sourcegitcommit" Value="727b0d12ef3417c3f060f482a8435eca1b266604" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/21/2020" /><Meta Name="ms.locfileid" Value="77543793" /></Metadata><TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザー定義のテンプレートを使用して、データ ソースから取得した単一レコードの値を表示します。 <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールを使用して、レコードを編集、削除、および挿入することができます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 このトピックの内容:

-   [はじめに](#introduction)

-   [テンプレート](#templates)

-   [バインド (データに)](#binding_to_data)

-   [データ操作](#data_operations)

-   [ユーザーインターフェイスのカスタマイズ](#customizing_the_user_interface)

-   [イベント](#events)

-   [ユーザー補助](#accessibility)

-   [CSS スタイルの適用](#applying_styles)

-   [宣言型の構文](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>はじめに
 <xref:System.Web.UI.WebControls.FormView> コントロールは、データソースから1つのレコードを表示するために使用されます。 これは、<xref:System.Web.UI.WebControls.DetailsView> コントロールに似ていますが、行フィールドではなくユーザー定義のテンプレートが表示される点が異なります。 独自のテンプレートを作成することにより、データの表示方法をより柔軟に制御できるようになります。 <xref:System.Web.UI.WebControls.FormView> コントロールは、次の機能をサポートしています。

-   <xref:System.Web.UI.WebControls.SqlDataSource> や <xref:System.Web.UI.WebControls.ObjectDataSource>などのデータソースコントロールにバインドする。

-   組み込みの挿入機能。

-   組み込みの更新および削除機能。

-   組み込みのページング機能。

-   プロパティの動的な設定、イベントの処理などを行うための、<xref:System.Web.UI.WebControls.FormView> オブジェクトモデルへのプログラムによるアクセス。

-   ユーザー定義のテンプレート、テーマ、およびスタイルを使用してカスタマイズ可能な外観。

<a name="templates"></a>
## <a name="templates"></a>テンプレート
 <xref:System.Web.UI.WebControls.FormView> コントロールでコンテンツを表示するには、コントロールのさまざまな部分のテンプレートを作成する必要があります。 ほとんどのテンプレートはオプションです。ただし、コントロールが構成されているモード用のテンプレートを作成する必要があります。 たとえば、レコードの挿入をサポートする <xref:System.Web.UI.WebControls.FormView> コントロールには、挿入項目テンプレートが定義されている必要があります。 次の表に、作成できるさまざまなテンプレートを示します。

|テンプレートの種類|Description|
|-------------------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールが編集モードの場合に、データ行の内容を定義します。 このテンプレートには、通常、ユーザーが既存のレコードを編集するための入力コントロールとコマンドボタンが含まれています。|
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールがレコードが含まれていないデータソースにバインドされている場合に表示される空のデータ行の内容を定義します。 このテンプレートには、通常、データソースにレコードが含まれていないことをユーザーに警告するためのコンテンツが含まれています。|
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|フッター行のコンテンツを定義します。 このテンプレートには、通常、フッター行に表示する追加のコンテンツが含まれています。 **注:** 別の方法として、[<xref:System.Web.UI.WebControls.FormView.FooterText%2A>] プロパティを設定して、フッター行に表示するテキストを指定することもできます。|
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|ヘッダー行のコンテンツを定義します。 このテンプレートには、通常、ヘッダー行に表示する追加のコンテンツが含まれています。 **注:** 別の方法として、[<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>] プロパティを設定して、ヘッダー行に表示するテキストを指定することもできます。|
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールが読み取り専用モードの場合に、データ行の内容を定義します。 このテンプレートには、通常、既存のレコードの値を表示するためのコンテンツが含まれています。|
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードの場合に、データ行の内容を定義します。 このテンプレートには、通常、ユーザーが新しいレコードを追加するための入力コントロールとコマンドボタンが含まれています。|
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|ページング機能が有効になっている場合に表示されるページャー行のコンテンツを定義します (<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティが `true`に設定されている場合)。 このテンプレートには、通常、ユーザーが別のレコードに移動できるコントロールが含まれています。 **注:** <xref:System.Web.UI.WebControls.FormView> コントロールには、組み込みのページャー行のユーザーインターフェイス (UI) があります。 ページャーテンプレートを作成する必要があるのは、独自のカスタムのページャー行を作成する場合のみです。|

 項目テンプレートのフィールドの値を表示するには、データバインディング式を使用します。 データバインディング式の詳細については、「[データバインディング式の構文](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)」を参照してください。

 編集項目テンプレートおよび挿入項目テンプレートの入力コントロールは、双方向のバインド式を使用して、データソースのフィールドにバインドできます。 これにより、<xref:System.Web.UI.WebControls.FormView> コントロールは、更新操作または挿入操作のために入力コントロールの値を自動的に抽出できます。 また、双方向のバインド式を使用すると、編集項目テンプレートの入力コントロールで元のフィールド値を自動的に表示できます。 双方向のバインド式の詳細については、「[データベースへのバインド](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))」を参照してください。

<a name="binding_to_data"></a>
## <a name="binding-to-data"></a>バインド (データに)
 <xref:System.Web.UI.WebControls.FormView> コントロールは、データソースコントロール (<xref:System.Web.UI.WebControls.SqlDataSource>、<xref:System.Web.UI.WebControls.ObjectDataSource>、<xref:System.Web.UI.WebControls.AccessDataSource>など)、または <xref:System.Collections.IEnumerable?displayProperty=nameWithType> インターフェイスを実装する任意のデータソースコレクション (<xref:System.Data.DataView?displayProperty=nameWithType>、<xref:System.Collections.ArrayList?displayProperty=nameWithType>、<xref:System.Collections.Generic.List%601?displayProperty=nameWithType>などのコレクション型) にバインドできます。 次のいずれかの方法を使用して、<xref:System.Web.UI.WebControls.FormView> コントロールを適切なデータソースの種類にバインドします。

-   データソースコントロールにバインドするには、<xref:System.Web.UI.WebControls.FormView> コントロールの <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> プロパティを、データソースコントロールの <xref:System.Web.UI.Control.ID%2A> 値に設定します。 <xref:System.Web.UI.WebControls.FormView> コントロールは、指定されたデータソースコントロールに自動的にバインドされ、データソースコントロールの機能を利用して、挿入、更新、削除、およびページング機能を実行できます。 これは、データにバインドするために推奨される方法です。

-   <xref:System.Collections.IEnumerable?displayProperty=nameWithType> インターフェイスを実装するデータソースにバインドするには、プログラムによって <xref:System.Web.UI.WebControls.FormView> コントロールの <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> プロパティをデータソースに設定してから、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドを呼び出します。 このメソッドを使用する場合、<xref:System.Web.UI.WebControls.FormView> コントロールには、組み込みの挿入、更新、削除、およびページング機能は用意されていません。 この機能を提供するには、適切なイベントを使用する必要があります。

 データバインディングの詳細については、「 [ASP.NET Data Access Content Map](https://docs.microsoft.com/previous-versions/aspnet/6759sth4(v=vs.100))」を参照してください。

> [!NOTE]
>  このコントロールを使用して、悪意のあるクライアントスクリプトを含む可能性のあるユーザー入力を表示できます。 アプリケーションに表示する前に、実行可能スクリプト、SQL ステートメント、またはその他のコードに対してクライアントから送信された情報を確認してください。 可能な限り、このコントロールに値を表示する前に、値を HTML エンコードすることを強くお勧めします。 ASP.NET には、ユーザー入力でスクリプトと HTML をブロックする入力要求の検証機能が用意されています。 検証サーバーコントロールは、ユーザーの入力を評価するためにも用意されています。 詳細については、「[検証コントロールの概要](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85))」を参照してください。

<a name="data_operations"></a>
## <a name="data-operations"></a>データ操作
 <xref:System.Web.UI.WebControls.FormView> コントロールには、ユーザーがコントロール内の項目を更新、削除、挿入、およびページ表示できるようにする多くの組み込み機能が用意されています。 <xref:System.Web.UI.WebControls.FormView> コントロールがデータソースコントロールにバインドされると、<xref:System.Web.UI.WebControls.FormView> コントロールはデータソースコントロールの機能を利用し、自動更新、削除、挿入、およびページング機能を提供できます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> コントロールは、他の種類のデータソースとの間で更新、削除、挿入、ページングなどの操作をサポートできます。ただし、これらの操作の実装には、適切なイベントハンドラーを用意する必要があります。

 <xref:System.Web.UI.WebControls.FormView> コントロールではテンプレートが使用されるため、更新、削除、または挿入操作を実行するコマンドボタンを自動的に生成する方法は用意されていません。 これらのコマンドボタンは、適切なテンプレートに手動で含める必要があります。 <xref:System.Web.UI.WebControls.FormView> コントロールは、`CommandName` プロパティが特定の値に設定されている特定のボタンを認識します。 次の表は、<xref:System.Web.UI.WebControls.FormView> コントロールが認識するコマンドボタンを示しています。

|ボタン|CommandName 値|Description|
|------------|-----------------------|-----------------|
|Cancel|中断|操作をキャンセルし、ユーザーが入力した値を破棄するために、更新または挿入操作で使用されます。 <xref:System.Web.UI.WebControls.FormView> コントロールは、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティによって指定されたモードに戻ります。|
|削除|"削除"|削除操作で、表示されているレコードをデータソースから削除するために使用されます。 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> イベントと <xref:System.Web.UI.WebControls.FormView.ItemDeleted> イベントを発生させます。|
|[編集]|編集|更新操作で <xref:System.Web.UI.WebControls.FormView> コントロールを編集モードにするために使用されます。 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> プロパティで指定された内容が、データ行に対して表示されます。|
|挿入|Insert|挿入操作で、ユーザーによって指定された値を使用してデータソースに新しいレコードを挿入しようとするために使用されます。 <xref:System.Web.UI.WebControls.FormView.ItemInserting> イベントと <xref:System.Web.UI.WebControls.FormView.ItemInserted> イベントを発生させます。|
|新規|New|挿入操作で <xref:System.Web.UI.WebControls.FormView> コントロールを挿入モードに配置するために使用されます。 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> プロパティで指定された内容が、データ行に対して表示されます。|
|ページ|改|ページング操作で、ページングを実行するページャー行のボタンを表すために使用されます。 ページング操作を指定するには、ボタンの [`CommandArgument`] プロパティを "Next"、"Prev"、"First"、"Last"、または移動先のページのインデックスに設定します。 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> イベントと <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> イベントを発生させます。 **注:** この種類のボタンは、通常、ページャーテンプレートでのみ使用されます。|
|更新|Update|更新操作で、ユーザーによって指定された値を使用して、データソース内の表示されているレコードを更新しようとするために使用されます。 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> イベントと <xref:System.Web.UI.WebControls.FormView.ItemUpdated> イベントを発生させます。|

 [削除] ボタン (表示されているレコードを直ちに削除するボタン) とは異なり、[編集] ボタンまたは [新規作成] ボタンをクリックすると、<xref:System.Web.UI.WebControls.FormView> コントロールはそれぞれ編集モードまたは挿入モードになります。 編集モードでは、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> プロパティに含まれているコンテンツが、現在のデータ項目に対して表示されます。 通常、編集項目テンプレートは、[編集] ボタンが更新と [キャンセル] ボタンに置き換えられるように定義されています。 フィールドのデータ型 (<xref:System.Web.UI.WebControls.TextBox> や <xref:System.Web.UI.WebControls.CheckBox> コントロールなど) に適した入力コントロールも、通常、ユーザーが変更するフィールドの値と共に表示されます。 [更新] ボタンをクリックすると、データソース内のレコードが更新されます。 [キャンセル] ボタンをクリックすると、すべての変更が破棄されます。

 同様に、コントロールが挿入モードの場合、[<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>] プロパティに含まれているコンテンツがデータ項目に対して表示されます。 挿入項目テンプレートは、通常、[新規] ボタンが挿入ボタンと [キャンセル] ボタンに置き換えられ、ユーザーが新しいレコードの値を入力するために空の入力コントロールが表示されるように定義されています。 [挿入] ボタンをクリックすると、データソースにレコードが挿入されます。 [キャンセル] ボタンをクリックすると、すべての変更が破棄されます。

 <xref:System.Web.UI.WebControls.FormView> コントロールはページング機能を提供します。これにより、ユーザーはデータソース内の他のレコードに移動できます。 有効にすると、ページナビゲーションコントロールを含む <xref:System.Web.UI.WebControls.FormView> コントロールに、ページャーの行が表示されます。 ページングを有効にするには、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティを `true`に設定します。 ページャー行をカスタマイズするには、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> に含まれるオブジェクトのプロパティと <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> プロパティを設定します。 組み込みのページャー行 UI を使用する代わりに、<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> プロパティを使用して独自の UI を作成することもできます。

<a name="customizing_the_user_interface"></a>
## <a name="customizing-the-user-interface"></a>ユーザーインターフェイスのカスタマイズ
 <xref:System.Web.UI.WebControls.FormView> コントロールの外観をカスタマイズするには、コントロールのさまざまな部分のスタイルプロパティを設定します。 次の表は、さまざまなスタイルプロパティを示しています。

|Style プロパティ|Description|
|--------------------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールが編集モードの場合のデータ行のスタイル設定。|
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|データソースにレコードが含まれていない場合に <xref:System.Web.UI.WebControls.FormView> コントロールに表示される空のデータ行のスタイル設定。|
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールのフッター行のスタイル設定。|
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールのヘッダー行のスタイル設定。|
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードの場合のデータ行のスタイル設定。|
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|ページング機能が有効になっている場合に <xref:System.Web.UI.WebControls.FormView> コントロールに表示される、ページャー行のスタイル設定。|
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|<xref:System.Web.UI.WebControls.FormView> コントロールが読み取り専用モードの場合のデータ行のスタイル設定。|

<a name="events"></a>
## <a name="events"></a>events
 <xref:System.Web.UI.WebControls.FormView> コントロールには、プログラミングできるいくつかのイベントが用意されています。 これにより、イベントが発生するたびにカスタムルーチンを実行できます。 次の表に、<xref:System.Web.UI.WebControls.FormView> コントロールでサポートされるイベントを示します。

|Event|Description|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|<xref:System.Web.UI.WebControls.FormView> コントロール内のボタンをクリックすると発生します。 このイベントは、コントロールのボタンがクリックされたときにタスクを実行するためによく使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|<xref:System.Web.UI.WebControls.FormView> コントロールにすべての <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトが作成された後に発生します。 このイベントは、レコードが表示される前にレコードの値を変更するためによく使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|削除ボタン (`CommandName` プロパティが "Delete" に設定されているボタン) をクリックしたが、<xref:System.Web.UI.WebControls.FormView> コントロールがデータソースからレコードを削除した後に発生します。 このイベントは、多くの場合、削除操作の結果を確認するために使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|削除ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがデータソースからレコードを削除する前に発生します。 このイベントは、多くの場合、削除操作を取り消すために使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|挿入ボタン (`CommandName` プロパティが "Insert" に設定されたボタン) がクリックされたときに、<xref:System.Web.UI.WebControls.FormView> コントロールによってレコードが挿入された後に発生します。 このイベントは、挿入操作の結果を確認するためによく使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|挿入ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがレコードを挿入する前に発生します。 このイベントは、挿入操作をキャンセルするためによく使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|更新ボタン (`CommandName` プロパティが "Update" に設定されているボタン) をクリックしたときに、<xref:System.Web.UI.WebControls.FormView> コントロールによって行が更新されたときに発生します。 このイベントは、多くの場合、更新操作の結果を確認するために使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|更新ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがレコードを更新する前に発生します。 このイベントは、多くの場合、更新操作を取り消すために使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|<xref:System.Web.UI.WebControls.FormView> コントロールがモードを変更した後 (編集モード、挿入モード、または読み取り専用モード) に発生します。 このイベントは、<xref:System.Web.UI.WebControls.FormView> コントロールがモードを変更したときにタスクを実行するためによく使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|<xref:System.Web.UI.WebControls.FormView> コントロールがモードを変更する前に発生します (編集モード、挿入モード、または読み取り専用モード)。 このイベントは、多くの場合、モードの変更を取り消すために使用されます。|
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|ページャー ボタンの 1 つがクリックされた場合に、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理した後に発生します。 このイベントは、ユーザーがコントロール内の別のレコードに移動した後にタスクを実行する必要がある場合によく使用されます。|
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|ページャー ボタンの 1 つがクリックされた場合に、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理する前に発生します。 このイベントは、ページング操作をキャンセルするためによく使用されます。|

<a name="accessibility"></a>
## <a name="accessibility"></a>アクセシビリティ
 ユーザー補助の標準に準拠したマークアップを生成するようにこのコントロールを構成する方法については、「 [Visual Studio でのユーザー補助と ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140))と[ASP.NET のコントロールとアクセシビリティ](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))」を参照してください。

<a name="applying_styles"></a>
## <a name="applying-css-styles"></a>CSS スタイルの適用
 <xref:System.Web.UI.WebControls.FormView> コントロールを使用すると、マークアップで CSS スタイルルールを指定できます。 テンプレートを使用して <xref:System.Web.UI.WebControls.FormView> コントロールの外観をカスタマイズする場合は、テンプレートのマークアップで CSS スタイルを指定できます。 その場合は、余分な外部テーブルは必要ありません。 <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> プロパティを `false`に設定することによって、テーブルが表示されないようにすることができます。

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>宣言型の構文

```
<asp:FormView
    AccessKey="string"
    AllowPaging="True|False"
    BackColor="color name|#dddddd"
    BackImageUrl="uri"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    Caption="string"
    CaptionAlign="NotSet|Top|Bottom|Left|Right"
    CellPadding="integer"
    CellSpacing="integer"
    CssClass="string"
    DataKeyNames="string"
    DataMember="string"
    DataSource="string"
    DataSourceID="string"
    DefaultMode="ReadOnly|Edit|Insert"
    EmptyDataText="string"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    FooterText="string"
    ForeColor="color name|#dddddd"
    GridLines="None|Horizontal|Vertical|Both"
    HeaderText="string"
    Height="size"
    HorizontalAlign="NotSet|Left|Center|Right|Justify"
    ID="string"
    OnDataBinding="DataBinding event handler"
    OnDataBound="DataBound event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnItemCommand="ItemCommand event handler"
    OnItemCreated="ItemCreated event handler"
    OnItemDeleted="ItemDeleted event handler"
    OnItemDeleting="ItemDeleting event handler"
    OnItemInserted="ItemInserted event handler"
    OnItemInserting="ItemInserting event handler"
    OnItemUpdated="ItemUpdated event handler"
    OnItemUpdating="ItemUpdating event handler"
    OnLoad="Load event handler"
    OnModeChanged="ModeChanged event handler"
    OnModeChanging="ModeChanging event handler"
    OnPageIndexChanged="PageIndexChanged event handler"
    OnPageIndexChanging="PageIndexChanging event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    PageIndex="integer"
    PagerSettings-FirstPageImageUrl="uri"
    PagerSettings-FirstPageText="string"
    PagerSettings-LastPageImageUrl="uri"
    PagerSettings-LastPageText="string"
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|
        NumericFirstLast"
    PagerSettings-NextPageImageUrl="uri"
    PagerSettings-NextPageText="string"
    PagerSettings-PageButtonCount="integer"
    PagerSettings-Position="Bottom|Top|TopAndBottom"
    PagerSettings-PreviousPageImageUrl="uri"
    PagerSettings-PreviousPageText="string"
    PagerSettings-Visible="True|False"
    RenderOuterTable="True|False"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    ToolTip="string"
    Visible="True|False"
    Width="size"
>
        <EditItemTemplate>
            <!-- child controls -->
        </EditItemTemplate>
        <EditRowStyle />
        <EmptyDataRowStyle />
        <EmptyDataTemplate>
            <!-- child controls -->
        </EmptyDataTemplate>
        <FooterStyle />
        <FooterTemplate>
            <!-- child controls -->
        </FooterTemplate>
        <HeaderStyle />
        <HeaderTemplate>
            <!-- child controls -->
        </HeaderTemplate>
        <InsertItemTemplate>
            <!-- child controls -->
        </InsertItemTemplate>
        <InsertRowStyle />
        <ItemTemplate>
            <!-- child controls -->
        </ItemTemplate>
        <PagerSettings
            FirstPageImageUrl="uri"
            FirstPageText="string"
            LastPageImageUrl="uri"
            LastPageText="string"
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|
                NumericFirstLast"
            NextPageImageUrl="uri"
            NextPageText="string"
            OnPropertyChanged="PropertyChanged event handler"
            PageButtonCount="integer"
            Position="Bottom|Top|TopAndBottom"
            PreviousPageImageUrl="uri"
            PreviousPageText="string"
            Visible="True|False"
        />
        <PagerStyle />
        <PagerTemplate>
            <!-- child controls -->
        </PagerTemplate>
        <RowStyle />
</asp:FormView>
```



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView> コントロールを使用して、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールの値を表示する方法を示します。

 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]

 次の例では、<xref:System.Web.UI.WebControls.FormView> コントロールを使用して既存のレコードを編集する方法を示します。

> [!IMPORTANT]
>  この例のコントロールには、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスがあります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]

 次の例では、<xref:System.Web.UI.WebControls.FormView> コントロールを使用して新しいレコードを挿入する方法を示します。

> [!IMPORTANT]
>  この例のコントロールには、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスがあります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このコンストラクターを使用して、<xref:System.Web.UI.WebControls.FormView> クラスの新しいインスタンスを初期化します。 <xref:System.Web.UI.WebControls.FormView> コントロールをページに動的に追加するには、新しい <xref:System.Web.UI.WebControls.FormView> オブジェクトを作成し、そのプロパティを設定して、<xref:System.Web.UI.WebControls.PlaceHolder>などのコンテナーコントロールの <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> コレクションに追加します。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.FormView> コントロールをページに動的に追加する方法を示しています。

 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページング機能が有効かどうかを示す値を取得または設定します。</summary>
        <value>ページング機能を有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールには、ユーザーがデータソース内の別のレコードに移動できるようにするためのページング機能が組み込まれています。 ページング機能は、<xref:System.Collections.ICollection?displayProperty=nameWithType> インターフェイスをサポートする任意のデータソースオブジェクト、またはページング機能をサポートするデータソースで使用できます。

 ページング機能を有効にするには、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティを `true`に設定します。 <xref:System.Web.UI.WebControls.FormView.PageCount%2A> プロパティを使用して、基になるデータソース内の項目の合計数を確認できます。 現在表示されている項目のインデックスを確認するには、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A> プロパティを使用します。

 ページングが有効になっている場合、ページャー行と呼ばれる追加の行が <xref:System.Web.UI.WebControls.FormView> コントロールに自動的に表示されます。 ページャー行にはページナビゲーションコントロールが含まれており、コントロールの上部、下部、またはその両方に表示できます。 ポケットベルの行には、4つの組み込みのページャー表示モードがあります。 次の表では、4つのモードについて説明します。

|モード|Description|
|----------|-----------------|
|`PagerButton.NextPrevious`|[戻る] ボタンと [次へ] ボタンで構成される改ページコントロールのセット。|
|`PagerButton.NextPreviousFirstLast`|[戻る]、[次へ]、[最初へ]、[最後] の各ボタンで構成される改ページコントロールのセット。|
|`PagerButton.Numeric`|直接ページにアクセスする番号付きリンク ボタンで構成されるページ編集コントロールのセット。 これは既定のモードです。|
|`PagerButton.NumericFirstLast`|番号付きおよび最初と最後のリンクボタンで構成される改ページコントロールのセット。|

> [!NOTE]
>  データソースに含まれているレコードが2つ未満の場合、<xref:System.Web.UI.WebControls.FormView> コントロールによって、ページャーの行が自動的に非表示になります。

 <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> プロパティを使用して、ページャーの表示モード、一度に表示するページリンクの数、およびページャーコントロールのテキストラベルなど、ページャーの行の設定を制御できます。 ページャー行の外観 (背景色とフォントの色を含む) を制御するには、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.FormView> コントロールでは、ページャー行のカスタムテンプレートを定義することもできます。 カスタムのページャー行テンプレートの作成の詳細については、「<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>」を参照してください。

 <xref:System.Web.UI.WebControls.FormView> コントロールには、ページングが発生したときにカスタムアクションを実行するために使用できるいくつかのイベントが用意されています。 次の表に、使用可能なイベントを示します。

|Event|Description|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|ページャー ボタンの 1 つがクリックされた場合に、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理した後に発生します。 このイベントは、ユーザーがコントロール内の別のレコードに移動した後にタスクを実行する必要がある場合によく使用されます。|
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|ページャー ボタンの 1 つがクリックされた場合に、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理する前に発生します。 このイベントは、ページング操作をキャンセルするためによく使用されます。|

> [!NOTE]
>  これらのイベントは、プログラムによって <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> プロパティを変更したときには発生しません。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールのページング機能を有効にする方法を示します。

 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの背景に表示するイメージの URL を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの背景に表示するイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの背景に表示するイメージの URL を指定します。

> [!NOTE]
>  指定した画像が <xref:System.Web.UI.WebControls.FormView> コントロールより小さい場合は、背景を埋めるように画像が並べて表示されます。 イメージがコントロールより大きい場合、イメージはトリミングされます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの背景にカスタムイメージを表示する方法を示します。

 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールの下部に表示されるページ行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールの下部のページ行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ページングが有効になっている場合 (<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティが `true`に設定されている場合)、ページャー行と呼ばれる追加の行が <xref:System.Web.UI.WebControls.FormView> コントロールに自動的に表示されます。 ページャー行には、ユーザーが他のレコードに移動できるコントロールが含まれており、コントロールの上部、下部、またはその両方に表示できます。 <xref:System.Web.UI.WebControls.FormView> コントロールの下部のページ行を表す <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトにプログラムでアクセスするには、<xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> プロパティを使用します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> プロパティは、<xref:System.Web.UI.WebControls.FormView> コントロールが <xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントの下部のページ行を作成した後にのみ使用できます。

 このプロパティは、カスタムコンテンツを追加する場合など、下部のページ行をプログラムで操作する必要がある場合によく使用されます。 <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> プロパティに対する変更は、下のページ行を表す <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトが作成された後に実行する必要があります。それ以外の場合は、<xref:System.Web.UI.WebControls.FormView> コントロールによってすべての変更が上書きされます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの下部に表示されるページャー行にアクセスする方法を示します。 その後、ページ行が追加のコンテンツで更新されます。

 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの HTML キャプション要素に表示するテキストを取得または設定します。 このプロパティは、補助技術デバイスのユーザーにとって、より使いやすいコントロールを実現するための手段として用意されています。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの HTML キャプション要素に表示されるテキストを表す文字列。 既定値は空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.Caption%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの HTML キャプション要素に表示するテキストを指定します。 指定したテキストによって、補助技術デバイスにテーブルの説明が表示され、コントロールをより使いやすくすることができます。

 <xref:System.Web.UI.WebControls.FormView> コントロールのユーザー補助機能の追加サポートは、<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> プロパティによって提供されます。 <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの HTML キャプション要素の配置を指定します。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.Caption%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールにレンダリングされる HTML キャプション要素のテキストを指定する方法を示します。

 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの HTML キャプション要素の水平位置または垂直位置を取得または設定します。 このプロパティは、補助技術デバイスのユーザーにとって、より使いやすいコントロールを実現するための手段として用意されています。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 値のいずれか 1 つです。 既定では、 <see langword="TableCaptionAlign.NotSet" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールの HTML キャプション要素の水平方向または垂直方向の位置を指定するには、<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> プロパティを使用します。 このプロパティは、補助技術デバイスのユーザーにとって、より使いやすいコントロールを実現するための手段として用意されています。

 このプロパティは、<xref:System.Web.UI.WebControls.TableCaptionAlign> 列挙値のいずれかを使用して設定されます。 次の表に、使用可能な値を示します。

|値|Description|
|-----------|-----------------|
|`TableCaptionAlign.Bottom`|キャプション要素は、テーブルの下部に揃えて配置されます。|
|`TableCaptionAlign.Left`|キャプション要素は、テーブルの左側に揃えて配置されます。|
|`TableCaptionAlign.NotSet`|キャプション要素のアラインメントが設定されていません。|
|`TableCaptionAlign.Right`|キャプション要素は、テーブルの右側に揃えて配置されます。|
|`TableCaptionAlign.Top`|キャプション要素は、テーブルの上部に揃えて配置されます。|

> [!NOTE]
>  このプロパティが `TableCaptionAlign.NotSet`に設定されている場合、ブラウザーの既定値が使用されます。

 <xref:System.Web.UI.WebControls.FormView> コントロールのユーザー補助機能の追加サポートは、<xref:System.Web.UI.WebControls.FormView.Caption%2A> プロパティによって提供されます。 <xref:System.Web.UI.WebControls.FormView.Caption%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの HTML キャプション要素に表示するテキストを指定します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの HTML キャプション要素をコントロールの左側にレンダリングするように指定する方法を示します。

 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 列挙値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの内容とセルの境界線との間隔を取得または設定します。</summary>
        <value>セルの内容とセルの境界線の間の間隔 (ピクセル単位)。 既定値は -1 です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> プロパティを使用して、セルの内容とセルの境界線の間の間隔を制御します。 指定された余白は、セルの4辺すべてに追加されます。

 <xref:System.Web.UI.WebControls.FormView> コントロールの同じ列にあるすべてのセルの幅は同じです。 余白は最も幅の広いセルに適用され、列内の他のすべてのセルはそのセルの幅に合わせて調整されます。 同様に、同じ行のすべてのセルの高さは同じになります。 埋め込みの量は行の最も大きいセルに適用され、その行の他のすべてのセルはそのセルの高さに合わせて調整されます。 個々のセルのサイズを指定することはできません。

 セル間の間隔を調整するには、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> プロパティを使用します。

> [!NOTE]
>  このプロパティが設定されていない場合は、ブラウザーの既定値が使用されます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.CellPadding%2A> プロパティを使用して、セルの内容とセルの境界線の間隔を指定する方法を示します。

 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル間の間隔を取得または設定します。</summary>
        <value>セルの間隔をピクセル単位で指定します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロール内の隣接するセル間の間隔を制御するには、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> プロパティを使用します。 この間隔は、垂直方向と水平方向の両方に適用されます。 セルの間隔は、コントロール全体に対して統一されています。 行または列の間の個々のセル間隔を指定することはできません。

> [!NOTE]
>  このプロパティを0より大きい値に設定し、<xref:System.Web.UI.WebControls.FormView.GridLines%2A> プロパティをセルの境界線を表示する値に設定すると、隣接するセルの境界線の間に空白が表示されます。 この場合、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> プロパティはギャップのサイズを制御します。

 セルの内容とセルの境界線の間の間隔を調整するには、<xref:System.Web.UI.WebControls.FormView.CellPadding%2A> プロパティを使用します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> プロパティを使用して、隣接するセル間の間隔を指定する方法を示します。

 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode"><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 列挙値のいずれか。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールを指定したデータ入力モードに切り替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> メソッドを使用して、編集、挿入、および読み取り専用の各モードで <xref:System.Web.UI.WebControls.FormView> コントロールをプログラムによって切り替えます。 このメソッドは、指定されたモードで <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> プロパティも更新します。 次の表に、異なるモード値の一覧を示します。

|モード|Description|
|----------|-----------------|
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> コントロールは編集モードであり、ユーザーはレコードの値を更新できます。|
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> コントロールは挿入モードであり、ユーザーはデータソースに新しいレコードを追加できます。|
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> コントロールは、通常の表示モードの読み取り専用モードです。|

> [!NOTE]
>  このメソッドが呼び出されても、<xref:System.Web.UI.WebControls.FormView.ModeChanged> イベントと <xref:System.Web.UI.WebControls.FormView.ModeChanging> イベントは発生しません。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> メソッドを使用して、ユーザーが別のレコードに移動するたびに、<xref:System.Web.UI.WebControls.FormView> コントロールを読み取り専用モードに戻す方法を示します。

 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">コントロール階層の作成に使用するデータ ソースを表す <see cref="T:System.Collections.IEnumerable" />。</param>
        <param name="dataBinding">コントロール階層が直接データ ソースから作成されることを示す場合は <see langword="true" />。コントロール階層がビューステートから作成されることを示す場合は <see langword="false" />。</param>
        <summary>データ ソースを指定して、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの表示に使用するコントロール階層を作成します。</summary>
        <returns>データ ソースから作成される項目の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> メソッドは、<xref:System.Web.UI.WebControls.FormView> コントロールのコントロール階層を作成するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。 `dataBinding` パラメーターが `true`場合、コントロール階層が作成される前にデータバインドが実行されます。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.DataSourceView" /> コントロールのバインド先である <see cref="T:System.Web.UI.IDataSource" /> の <see cref="T:System.Web.UI.WebControls.FormView" /> が <see langword="null" /> です。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張するときに、このメソッドをオーバーライドして独自のコントロール階層を作成することができます。</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの既定のテーブル スタイル オブジェクトを作成します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Style" /> コントロールの既定のテーブル スタイルを格納している <see cref="T:System.Web.UI.WebControls.FormView" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> メソッドは、既定のテーブルスタイルオブジェクトを作成するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。 このメソッドは、<xref:System.Web.UI.WebControls.TableStyle> オブジェクトの既定のスタイルを設定するだけでなく、<xref:System.Web.UI.WebControls.FormView.CellPadding%2A> プロパティも0に設定します。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張する場合は、このメソッドをオーバーライドして、独自の既定のスタイルを作成できます。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>処理のためにデータ ソースに渡される引数を格納する <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクトを作成します。</summary>
        <returns>データ ソースに渡される引数が格納された <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> メソッドは、データソースに渡される引数を格納する <xref:System.Web.UI.DataSourceSelectArguments> オブジェクトを作成するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。 この実装では、<xref:System.Web.UI.DataSourceSelectArguments> オブジェクトにページング操作のための引数が含まれています。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張するときに、このメソッドをオーバーライドして、データソースに渡される独自の値を指定できます。</para></block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">表示するデータ項目の 0 から始まるインデックス。</param>
        <param name="rowType"><see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 列挙値のいずれか。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 列挙値のビットごとの組み合わせ。</param>
        <summary>指定した項目のインデックス、行の種類、および行の状態を使用して、<see cref="T:System.Web.UI.WebControls.FormViewRow" /> オブジェクトを作成します。</summary>
        <returns>指定した項目のインデックス、行の種類、および行の状態の <see cref="T:System.Web.UI.WebControls.FormViewRow" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> メソッドは、コントロール内の行を表すために使用される <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトを作成するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張するときに、このメソッドをオーバーライドして、カスタム設定を持つ <see cref="T:System.Web.UI.WebControls.FormViewRow" /> オブジェクトを返すことができます。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのコンテナー テーブルを作成します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Table" /> コントロールのコンテナー テーブルを表す <see cref="T:System.Web.UI.WebControls.FormView" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> メソッドは、コントロールのコンテナーとして機能するテーブルを作成するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在の日付入力モードを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 値のいずれか 1 つです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールが編集モード、挿入モード、読み取り専用モードのどちらであるかを確認するには、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> プロパティを使用します。 次の表に、異なるモード値の一覧を示します。

|モード|Description|
|----------|-----------------|
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> コントロールは編集モードであり、ユーザーはレコードの値を更新できます。|
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> コントロールは挿入モードであり、ユーザーはデータソースに新しいレコードを追加できます。|
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> コントロールは、通常の表示モードの読み取り専用モードです。|

 この値は、通常、[新規]、[更新]、[挿入]、[削除]、または [キャンセル] コマンドボタンをクリックしたときに、<xref:System.Web.UI.WebControls.FormView> コントロールによって自動的に設定されます。 アクションに応じて <xref:System.Web.UI.WebControls.FormView> コントロールがモードを変更すると、次の表のイベントが発生します。 これにより、イベントが発生したときに適切なルーチンを実行するカスタムイベントハンドラーを作成できます。

|Event|Description|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|<xref:System.Web.UI.WebControls.FormView> コントロールがモードを変更したが、モードが変更された後で発生します。 このイベントは、<xref:System.Web.UI.WebControls.FormView> コントロールがモードを変更するたびにタスクを実行するためによく使用されます。|
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|<xref:System.Web.UI.WebControls.FormView> コントロールがモードを変更したときに、モードが変更される前に発生します。 このイベントは、通常、モードの変更を取り消すために使用されます。|

 **メモ**これらのイベントは、<xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> メソッドを使用してプログラムでモードを変更した場合には発生しません。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールが編集モード、挿入モード、または読み取り専用モードであるかどうかを確認する方法を示します。 <xref:System.Web.UI.WebControls.FormView> コントロールの編集中に別のレコードに移動しようとすると、ページング操作は取り消されます。

 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースを <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 データソースから <xref:System.Web.UI.WebControls.FormView> コントロールにデータをバインドするには、<xref:System.Web.UI.WebControls.FormView.DataBind> メソッドを使用します。 このメソッドは、コントロールのアクティブテンプレート内のすべてのデータバインディング式を解決します。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドされたデータ項目を取得します。</summary>
        <value><see cref="T:System.Object" /> コントロールにバインドされたデータ項目を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールにバインドされているデータ項目にアクセスするには、<xref:System.Web.UI.WebControls.FormView.DataItem%2A> プロパティを使用します。 データ項目は、現在のレコードのフィールド値に直接アクセスするためによく使用されます。 このプロパティによって返される <xref:System.Object> の型は、データソースによって異なります。 たとえば、<xref:System.Web.UI.WebControls.SqlDataSource> コントロールが <xref:System.Web.UI.WebControls.FormView> コントロールにバインドされている場合は、<xref:System.Data.DataRowView> オブジェクトが返されます。

> [!NOTE]
>  このプロパティは、データバインディングが発生した後にのみ使用できます。 データバインディングが発生する前に、このプロパティは `null`を返します。 このプロパティは、<xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードのときに `null`を返す場合にも適用されません。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.DataItem%2A> プロパティを使用して、データ項目内のフィールドの値を確認する方法を示します。

 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内のデータ項目の数を取得します。</summary>
        <value>データ ソース内のデータ項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 データソースに含まれるデータ項目の数を確認するには、<xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> プロパティを使用します。 このプロパティには、<xref:System.Web.UI.WebControls.FormView.PageCount%2A> プロパティと同じ値が格納されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースから <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドされているデータ項目のインデックスを取得します。</summary>
        <value>データ ソースから <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドされているデータ項目のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> プロパティを使用して、データソースから <xref:System.Web.UI.WebControls.FormView> コントロールにバインドされるデータ項目のインデックスを決定します。 このプロパティには、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A> プロパティと同じ値が格納されます。

> [!NOTE]
>  このプロパティは、<xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードの場合には適用されません。 コントロールが挿入モードの場合、<xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> プロパティは-1 を返します。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されているレコードの主キーを表す <see cref="T:System.Web.UI.WebControls.DataKey" /> オブジェクトを取得します。</summary>
        <value>表示されているレコードの主キーを表す <see cref="T:System.Web.UI.WebControls.DataKey" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.FormView> コントロールは、現在のレコードの <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティに一覧表示されているフィールドのキーと値のペアを含む <xref:System.Web.UI.WebControls.DataKey> オブジェクトを自動的に作成します。 この <xref:System.Web.UI.WebControls.DataKey> オブジェクトを取得するには、<xref:System.Web.UI.WebControls.FormView.DataKey%2A> プロパティを使用します。 このプロパティは、通常、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティで指定されたフィールドのキーとそれに対応する値を取得するために使用されます。

> [!NOTE]
>  ショートカットとして、<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティに一覧表示されている最初のキーフィールドの値を確認することもできます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.DataKey%2A> プロパティを使用して、キーフィールドの値を決定する方法を示します。

 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースのキー フィールドの名前を格納する配列を取得または設定します。</summary>
        <value>データ ソースのキー フィールドの名前を格納する配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 データソースの主キーを表すフィールド名のコンマ区切りの一覧を指定するには、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.FormView> コントロールは、現在のレコードの <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティに一覧表示されているフィールドのキーと値のペアを含む <xref:System.Web.UI.WebControls.DataKey> オブジェクトを自動的に作成します。 <xref:System.Web.UI.WebControls.DataKey> オブジェクトは、<xref:System.Web.UI.WebControls.FormView.DataKey%2A> プロパティに格納されます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> コントロールの組み込みの更新、削除、および挿入機能の <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティを機能させるには、このプロパティを設定する必要があります。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールにバインドされたデータソースのキーフィールドを指定する方法を示します。

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが更新、挿入、またはキャンセルの各操作後に戻る、データ入力モードを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 値のいずれか 1 つです。 既定では、 <see langword="FormViewMode.ReadOnly" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 更新、挿入、またはキャンセルの各操作が実行された後に、<xref:System.Web.UI.WebControls.FormView> コントロールが編集モード、挿入モード、または読み取り専用モードに戻るかどうかを指定するには、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティを使用します。 既定では、<xref:System.Web.UI.WebControls.FormView> コントロールは読み取り専用モードに戻ります。ただし、このプロパティを適切な値に設定することによって、<xref:System.Web.UI.WebControls.FormView> コントロールを編集モードまたは挿入モードのままにすることができます。 次の表に、異なるモード値の一覧を示します。

|モード|Description|
|----------|-----------------|
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> コントロールは編集モードであり、ユーザーはレコードの値を更新できます。|
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> コントロールは挿入モードであり、ユーザーはデータソースに新しいレコードを追加できます。|
|`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> コントロールは、通常の表示モードの読み取り専用モードです。|

 このプロパティは、レコードの挿入や編集だけを目的として、<xref:System.Web.UI.WebControls.FormView> コントロールに1つの目的がある場合によく使用されます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティを使用して、更新操作後に編集モードで <xref:System.Web.UI.WebControls.FormView> コントロールを保持する方法を示します。

 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が <see cref="T:System.Web.UI.WebControls.FormViewMode" /> 列挙値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のレコードをデータ ソースから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> メソッドを使用して、データソースから <xref:System.Web.UI.WebControls.FormView> コントロールの現在のレコードをプログラムによって削除します。 このメソッドは、ページ上の別のコントロールなど、<xref:System.Web.UI.WebControls.FormView> コントロールの外部から現在のレコードを削除する必要がある場合によく使用されます。 このメソッドを呼び出すと、<xref:System.Web.UI.WebControls.FormView.ItemDeleted> イベントと <xref:System.Web.UI.WebControls.FormView.ItemDeleting> イベントも発生します。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> メソッドを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの現在のレコードをデータソースからプログラムによって削除する方法を示しています。

 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが削除操作を実行するときに呼び出されるページのメソッドの名前を取得または設定します。</summary>
        <value>コントロールが削除操作を実行するときに呼び出されるページ上のメソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集モードの項目用のカスタム コンテンツを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールが編集モードの場合のデータ行のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.WebControls.FormView" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールは、(<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> プロパティによって指定された) コントロールの現在のモードに基づいて、データ行に対して異なるテンプレートをレンダリングします。 次の表は、各モードで使用されるテンプレートを示しています。

|モード|レンダリングされたテンプレート|
|----------|-----------------------|
|[編集]|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

 <xref:System.Web.UI.WebControls.FormView> コントロールが編集モードの場合は、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> プロパティを使用して、データ行に対して独自のユーザーインターフェイス (UI) を定義します。 通常、編集項目テンプレートには、既存のレコードの値を更新するためのユーザーの入力コントロールと、レコードを更新して更新操作を取り消すためのコマンドボタンが含まれています。

 カスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<EditItemTemplate>` タグを配置します。 次に、開始タグと終了 `<EditItemTemplate>` タグの間にテンプレートの内容を一覧表示できます。 双方向のバインド式を使用すると、フィールドを入力コントロールに関連付けることができます。 これにより、<xref:System.Web.UI.WebControls.FormView> コントロールは、関連付けられている入力コントロールの元のフィールド値を編集モードで自動的に表示できます。 レコードが更新されると、<xref:System.Web.UI.WebControls.FormView> コントロールによって、関連付けられている入力コントロールから更新されたフィールド値が自動的に抽出されます。 双方向のバインド式の詳細については、「[データベースへのバインド](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))」を参照してください。 組み込みのキャンセル操作と更新操作を実行するコマンドボタンを作成するには、[`CommandName`] プロパティを次の表に示すいずれかの値に設定して、テンプレートにコマンドボタンコントロールを追加します。

|コマンドボタンの種類|CommandName 値|
|-------------------------|-----------------------|
|Cancel|中断|
|更新|Update|

 項目テンプレートの外観を制御するには、<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> プロパティを使用します。



## Examples
 次の例では、編集モードでデータ行のカスタムテンプレートを定義する方法を示します。

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが編集モードの場合のデータ行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが編集モードの場合のデータ行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールが編集モードのときのデータ行の外観を制御するには、<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.FormView> コントロールが編集モードの場合、データ行には、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> プロパティによって指定されたユーザー定義コンテンツが表示されます。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、次のいずれかの方法を使用して、宣言によって設定できます。

-   属性を `Property-Subproperty`フォームの <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグに配置します。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティ (`EditRowStyle-ForeColor`など) です。

-   <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<EditRowStyle>` 要素を入れ子にします。

 プロパティは、`Property.Subproperty` (`EditRowStyle.ForeColor`など) の形式でプログラムによって設定することもできます。 一般的な設定には、カスタムの背景色、前景色、およびフォントプロパティが含まれます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView> コントロールが編集モードの場合に、<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> プロパティを使用してデータ行のカスタムスタイルを指定する方法を示します。

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールにバインドされたデータ ソースにレコードが格納されていない場合に表示される空のデータ行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value>空のデータ行の外観を設定できる <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールの空のデータ行の外観を制御するには、<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> プロパティを使用します。 空のデータ行は、コントロールにバインドされているデータソースにレコードが含まれていない場合に表示されます。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、次のいずれかの方法を使用して、宣言によって設定できます。

-   属性を `Property-Subproperty`フォームの <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグに配置します。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティ (`EmptyDataRowStyle-ForeColor`など) です。

-   <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<EmptyDataRowStyle>` 要素を入れ子にします。

 プロパティは、`Property.Subproperty` (`EmptyDataRowStyle.ForeColor`など) の形式でプログラムによって設定することもできます。 一般的な設定には、カスタムの背景色、前景色、およびフォントプロパティが含まれます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> プロパティを使用して、レコードが含まれていないデータソースに <xref:System.Web.UI.WebControls.FormView> コントロールがバインドされている場合に表示される空のデータ行のカスタムスタイルを指定する方法を示します。

 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>レコードが格納されていないデータ ソースに <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがバインドされている場合に表示される空のデータ行用の、ユーザー定義のコンテンツを取得または設定します。</summary>
        <value>空のデータ行用のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロールにバインドされているデータソースにレコードが含まれていない場合、<xref:System.Web.UI.WebControls.FormView> コントロールに空のデータ行が表示されます。 <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> プロパティを使用して、空のデータ行用に独自のカスタムユーザーインターフェイス (UI) を定義できます。 空のデータ行のカスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<EmptyDataTemplate>` タグを配置します。 次に、開始タグと終了 `<EmptyDataTemplate>` タグの間にテンプレートの内容を一覧表示できます。 空のデータ行のスタイルを制御するには、<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> プロパティを使用します。 または、このプロパティの代わりに <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> プロパティを設定して、空のデータ行に対して組み込みの UI を使用することもできます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> と <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> の両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> プロパティが優先されます。



## Examples
 次の例では、レコードが含まれていないデータソースに <xref:System.Web.UI.WebControls.FormView> コントロールがバインドされている場合に表示される空のデータ行に対して、カスタムテンプレートを定義する方法を示します。

 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>レコードが格納されていないデータ ソースに <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがバインドされている場合に表示される、空のデータ行に表示されるテキストを取得または設定します。</summary>
        <value>空のデータ行に表示されるテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロールにバインドされているデータソースにレコードが含まれていない場合、<xref:System.Web.UI.WebControls.FormView> コントロールに空のデータ行が表示されます。 <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> プロパティを使用して、空のデータ行に表示するテキストを指定します。 空のデータ行のスタイルを制御するには、<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> プロパティを使用します。 または、このプロパティの代わりに <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> プロパティを設定して、空のデータ行に対して独自のカスタムユーザーインターフェイス (UI) を定義することもできます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> と <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> の両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> プロパティが優先されます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> プロパティを使用して、空のデータ行に表示するテキストを指定する方法を示します。

 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入または更新の操作中に発生する例外を検証コントロールが処理するかどうかを示す値を取得または設定します。</summary>
        <value>挿入または更新の操作中に発生する例外を検証コントロールが処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>必要に応じて <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータにバインドされていることを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> メソッドは、必要に応じて <xref:System.Web.UI.WebControls.FormView> コントロールがデータにバインドされることを特定するために <xref:System.Web.UI.WebControls.FormView> クラスによって使用されるヘルパーメソッドです。 <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> メソッドは、通常、データバインドコントロールがバインドされていないが、データバインディングを必要とする場合に、コントロールをデータソースにバインドするために、<xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> メソッド中に呼び出されます。 このバージョンのメソッドは、<xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードのときにデータバインディングが発生しないようにするためにオーバーライドされました。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">現在のデータ項目のフィールド値を格納する <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</param>
        <param name="includeKeys">キー フィールドを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>データ行内で宣言された各フィールドの値を取得し、それらを指定した <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> オブジェクトに格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> メソッドは、データ行内で宣言されている各フィールドの値を取得するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。 データ行には現在のモードに基づく別のテンプレートが表示されるため、このメソッドは、現在のモードに対応するテンプレート内で宣言されたフィールド値のみを取得します。 次の表は、使用可能なモードと対応するテンプレートを示しています。

|モード|Template|
|----------|--------------|
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|[編集]|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

 抽出された値に、`includeKeys` パラメーターを使用してキーフィールドを含めるかどうかを指定できます。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張するときに、このメソッドをオーバーライドして、フィールド値を取得する独自のルーチンを作成できます。</para></block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのフッター行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのフッター行を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 フッター行は、<xref:System.Web.UI.WebControls.FormView.FooterText%2A> または <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.FormView> コントロールの下部に表示されます。 フッター行を表す <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトにプログラムでアクセスするには、<xref:System.Web.UI.WebControls.FormView.FooterRow%2A> プロパティを使用します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> プロパティは、<xref:System.Web.UI.WebControls.FormView> コントロールによって <xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントにフッター行が作成された後にのみ使用できます。

 このプロパティは、カスタムコンテンツの追加など、フッター行をプログラムで操作する必要がある場合によく使用されます。 <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> プロパティに対する変更は、<xref:System.Web.UI.WebControls.FormView> コントロールがレンダリングされた後に実行する必要があります。それ以外の場合は、<xref:System.Web.UI.WebControls.FormView> コントロールによってすべての変更が上書きされます。

 フッター行のスタイルを制御するには、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> プロパティを使用します。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.FormView.FooterRow%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView.ItemCreated> イベント中にフッター行のプロパティをプログラムで変更する方法を示しています。

 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのフッター行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのフッター行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 フッター行は、<xref:System.Web.UI.WebControls.FormView.FooterText%2A> または <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.FormView> コントロールの下部に表示されます。 <xref:System.Web.UI.WebControls.FormView> コントロールのフッター行の外観を制御するには、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、次のいずれかの方法を使用して、宣言によって設定できます。

-   属性を `Property-Subproperty`フォームの <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグに配置します。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティ (`FooterStyle-ForeColor`など) です。

-   <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<FooterStyle>` 要素を入れ子にします。

 プロパティは、`Property.Subproperty` (`FooterStyle.ForeColor`など) の形式でプログラムによって設定することもできます。 一般的な設定には、カスタムの背景色、前景色、およびフォントプロパティが含まれます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> プロパティを使用して、フッター行のカスタムスタイルを指定する方法を示します。

 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのフッター行のユーザー定義コンテンツを取得または設定します。</summary>
        <value>フッター行のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 フッター行は、<xref:System.Web.UI.WebControls.FormView.FooterText%2A> または <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.FormView> コントロールの下部に表示されます。 <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティを使用して、フッター行に独自のカスタムユーザーインターフェイス (UI) を定義できます。 フッター行のカスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<FooterTemplate>` タグを配置します。 次に、開始タグと終了 `<FooterTemplate>` タグの間にテンプレートの内容を一覧表示できます。 フッター行のスタイルを制御するには、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> プロパティを使用します。 または、このプロパティの代わりに <xref:System.Web.UI.WebControls.FormView.FooterText%2A> プロパティを設定して、フッター行にテキストを表示することもできます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.FooterText%2A> と <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> の両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティが優先されます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティを使用して、フッター行に表示するカスタムテンプレートを定義する方法を示します。

 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのフッター行に表示するテキストを取得または設定します。</summary>
        <value>フッター行に表示するテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 フッター行は、<xref:System.Web.UI.WebControls.FormView.FooterText%2A> または <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.FormView> コントロールの下部に表示されます。 フッター行に表示するテキストを指定するには、<xref:System.Web.UI.WebControls.FormView.FooterText%2A> プロパティを使用します。 フッター行のスタイルを制御するには、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> プロパティを使用します。 または、このプロパティの代わりに <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティを設定して、フッター行に独自のカスタムユーザーインターフェイス (UI) を定義することもできます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.FooterText%2A> と <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> の両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティが優先されます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.FooterText%2A> プロパティを使用して、フッター行に表示するテキストを指定する方法を示します。

 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのグリッド線のスタイルを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 値のいずれか 1 つです。 既定では、 <see langword="GridLines.None" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールのグリッド線のスタイルを指定するには、<xref:System.Web.UI.WebControls.FormView.GridLines%2A> プロパティを使用します。 次の表に、使用可能なスタイルを示します。

|Style|Description|
|-----------|-----------------|
|`GridLines.None`|グリッド線は表示されません。|
|`GridLines.Horizontal`|水平グリッド線のみを表示します。|
|`GridLines.Vertical`|垂直グリッド線だけを表示します。|
|`GridLines.Both`|水平グリッド線と垂直グリッド線の両方を表示します。|



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.GridLines%2A> プロパティを使用して、垂直方向と水平方向の両方のグリッド線を表示する方法を示します。

 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのヘッダー行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのヘッダー行を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ヘッダー行は、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A> または <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.FormView> コントロールの一番上に表示されます。 ヘッダー行を表す <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトにプログラムでアクセスするには、<xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> プロパティを使用します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> プロパティは、<xref:System.Web.UI.WebControls.FormView> コントロールによって <xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントにヘッダー行が作成された後にのみ使用できます。

 このプロパティは、カスタムコンテンツを追加するときなど、ヘッダー行をプログラムで操作する必要がある場合によく使用されます。 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> プロパティに対する変更は、<xref:System.Web.UI.WebControls.FormView> コントロールがレンダリングされた後に実行する必要があります。それ以外の場合は、<xref:System.Web.UI.WebControls.FormView> コントロールによってすべての変更が上書きされます。



## Examples
 次の例は、<xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView.ItemCreated> イベント中にヘッダー行のプロパティをプログラムで変更する方法を示しています。

 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのヘッダー行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのヘッダー行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ヘッダー行は、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A> または <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.FormView> コントロールの一番上に表示されます。 <xref:System.Web.UI.WebControls.FormView> コントロールのヘッダー行の外観を制御するには、<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、次のいずれかの方法を使用して、宣言によって設定できます。

-   属性を `Property-Subproperty`フォームの <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグに配置します。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティ (`HeaderStyle-ForeColor`など) です。

-   <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<HeaderStyle>` 要素を入れ子にします。

 プロパティは、`Property.Subproperty` (`HeaderStyle.ForeColor`など) の形式でプログラムによって設定することもできます。 一般的な設定には、カスタムの背景色、前景色、およびフォントプロパティが含まれます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> プロパティを使用して、ヘッダー行のカスタムスタイルを指定する方法を示します。

 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのヘッダー行のユーザー定義コンテンツを取得または設定します。</summary>
        <value>ヘッダー行のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ヘッダー行は、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A> または <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.FormView> コントロールの一番上に表示されます。 <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティを使用して、ヘッダー行用に独自のカスタムユーザーインターフェイス (UI) を定義できます。 ヘッダー行のカスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<HeaderTemplate>` タグを配置します。 次に、開始タグと終了 `<HeaderTemplate>` タグの間にテンプレートの内容を一覧表示できます。 ヘッダー行のスタイルを制御するには、<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> プロパティを使用します。 または、ヘッダー行にテキストを表示するだけで、このプロパティの代わりに <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> プロパティを設定することもできます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> と <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> の両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティが優先されます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティを使用して、ヘッダー行用にレンダリングするカスタムテンプレートを定義する方法を示します。

 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのヘッダー行に表示するテキストを取得または設定します。</summary>
        <value>ヘッダー行に表示するテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ヘッダー行は、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A> または <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.FormView> コントロールの一番上に表示されます。 ヘッダー行に表示するテキストを指定するには、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A> プロパティを使用します。 ヘッダー行のスタイルを制御するには、<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> プロパティを使用します。 または、このプロパティの代わりに <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティを設定して、ヘッダー行用に独自のカスタムユーザーインターフェイス (UI) を定義することもできます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> と <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> の両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティが優先されます。

 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A> プロパティを使用して、ヘッダー行に表示するテキストを指定する方法を示します。

 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページ上の <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの水平方向の配置を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 値のいずれか 1 つです。 既定では、 <see langword="HorizontalAlign.NotSet" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> プロパティを使用して、ページ内の <xref:System.Web.UI.WebControls.FormView> コントロールの水平方向の配置を指定します。 次の表に、横方向の配置スタイルの一覧を示します。

|水平方向の配置値|Description|
|---------------------------|-----------------|
|`HorizontalAlign.NotSet`|<xref:System.Web.UI.WebControls.FormView> コントロールの水平方向の配置が設定されていません。|
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView> コントロールはページ上で左揃えになっています。|
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.FormView> コントロールは、ページの中央に配置されます。|
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView> コントロールは、ページ上で右から右に調整されます。|
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView> コントロールは、ページの左右の余白の両方に合わせて配置されます。|



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールをページの中央に配置するように指定する方法を示します。

 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">ページ行を格納している <see cref="T:System.Web.UI.WebControls.FormViewRow" />。</param>
        <param name="pagedDataSource">現在のページのデータを格納している <see cref="T:System.Web.UI.WebControls.PagedDataSource" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのページ行を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> メソッドは、ページャー行を作成するために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。 `pagedDataSource` パラメーターに含まれている <xref:System.Web.UI.WebControls.PagedDataSource> オブジェクトのプロパティを使用して、ナビゲーションコントロールを含む <xref:System.Web.UI.WebControls.TableCell> オブジェクトを作成します。 次に、`row` パラメーターによって指定された行にセルが追加されます。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張するときに、このメソッドをオーバーライドして独自のポケットベル行を作成できます。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">初期化する <see cref="T:System.Web.UI.WebControls.FormViewRow" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.FormViewRow" /> オブジェクトを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> メソッドは、指定された <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトを初期化するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。 <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトは、それぞれの <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> と <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> プロパティによって指定された行の種類と行の状態に基づいて初期化されます。 次に、適切なコンテンツが <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトに追加されます。 次の表では、各行の種類を初期化する方法について説明します。

|行の種類|Description|
|--------------|-----------------|
|データ行|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>、または <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> プロパティの内容は、<xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> プロパティの値に応じて <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトに追加されます。|
|空のデータ行|設定されているプロパティに応じて、<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> プロパティの値、または <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> プロパティの内容が <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトに追加されます。 両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> プロパティが優先されます。|
|フッター行|設定されているプロパティに応じて、<xref:System.Web.UI.WebControls.FormView.FooterText%2A> プロパティの値、または <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティの内容が <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトに追加されます。 両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> プロパティが優先されます。|
|ヘッダー行|設定されているプロパティに応じて、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A> プロパティの値、または <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティの内容が <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトに追加されます。 両方のプロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> プロパティが優先されます。|

> [!NOTE]
>  このメソッドは、ポケットベルの行を初期化しません。 ポケットベルの行を作成するには、<xref:System.Web.UI.WebControls.FormView.InitializePager%2A> メソッドを使用します。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張するときに、このメソッドをオーバーライドして独自のカスタム行を作成できます。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">このメソッドが呼び出されたときにページの検証を実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>現在のレコードをデータ ソースに挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードの場合は、<xref:System.Web.UI.WebControls.FormView.InsertItem%2A> メソッドを使用して、プログラムによってデータソースの現在のレコードを挿入します。 このメソッドは、ページ上の別のコントロールなど、<xref:System.Web.UI.WebControls.FormView> コントロールの外部から現在のレコードを挿入する必要がある場合によく使用されます。

> [!NOTE]
>  このメソッドが呼び出された場合、<xref:System.Web.UI.WebControls.FormView> コントロールは挿入モードである必要があります。それ以外の場合は、<xref:System.Web.HttpException> がスローされます。

 挿入操作の前にページの検証を実行するかどうかを指定するには、`causesValidation` パラメーターを使用します。 このメソッドを呼び出すと、<xref:System.Web.UI.WebControls.FormView.ItemInserted> イベントと <xref:System.Web.UI.WebControls.FormView.ItemInserting> イベントも発生します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.InsertItem%2A> メソッドを使用して、データソースの <xref:System.Web.UI.WebControls.FormView> コントロールに現在のレコードをプログラムによって挿入する方法を示します。

 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが挿入モードではないときに、このメソッドは呼び出されています。

または

<see cref="T:System.Web.UI.DataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトが null です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入モードの項目用のカスタム コンテンツを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールが挿入モードの場合のデータ行のカスタム コンテンツを含む <see cref="T:System.Web.UI.WebControls.FormView" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールは、(<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> プロパティによって指定された) コントロールの現在のモードに基づいて、データ行に対して異なるテンプレートをレンダリングします。 次の表は、各モードで使用されるテンプレートを示しています。

|モード|レンダリングされたテンプレート|
|----------|-----------------------|
|[編集]|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

 <xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードの場合は、<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> プロパティを使用して、データ行に対して独自のユーザーインターフェイス (UI) を定義します。 挿入項目テンプレートには、通常、ユーザーが新しいレコードの値を入力するための入力コントロールと、レコードを挿入して挿入操作をキャンセルするためのコマンドボタンが含まれています。

 カスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<InsertItemTemplate>` タグを配置します。 次に、開始タグと終了 `<InsertItemTemplate>` タグの間にテンプレートの内容を一覧表示できます。 双方向のバインド式を使用すると、フィールドを入力コントロールに関連付けることができます。 レコードが挿入されると、<xref:System.Web.UI.WebControls.FormView> コントロールによって、関連付けられている入力コントロールからフィールド値が自動的に抽出されます。 双方向のバインド式の詳細については、「[データベースへのバインド](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100))」を参照してください。 組み込みのキャンセル操作と挿入操作を実行するコマンドボタンを作成するには、[`CommandName`] プロパティを次の表に示すいずれかの値に設定して、テンプレートにコマンドボタンコントロールを追加します。

|コマンドボタンの種類|CommandName 値|
|-------------------------|-----------------------|
|Cancel|中断|
|挿入|Insert|

 項目テンプレートの外観を制御するには、<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> プロパティを使用します。



## Examples
 次の例は、挿入モードでデータ行のカスタムテンプレートを定義する方法を示しています。

 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが挿入操作を実行するときに呼び出されるページのメソッドの名前を取得または設定します。</summary>
        <value>コントロールが挿入操作を実行するときに呼び出されるページ上のメソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが挿入モードの場合にこのコントロールのデータ行の外観を設定できる、<see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが挿入モードの場合にこのコントロールのデータ行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードの場合のデータ行の外観を制御するには、<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードの場合、データ行には、<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> プロパティによって指定されたユーザー定義のコンテンツが表示されます。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。

 プロパティは、次のいずれかの方法を使用して、宣言によって設定できます。

-   属性を `Property-Subproperty`フォームの <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグに配置します。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティ (`InsertRowStyle-ForeColor`など) です。

-   <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<InsertRowStyle>` 要素を入れ子にします。

 プロパティは、`Property.Subproperty` (`InsertRowStyle.ForeColor`など) の形式でプログラムによって設定することもできます。 一般的な設定には、カスタムの背景色、前景色、およびフォントプロパティが含まれます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView> コントロールが挿入モードの場合に、<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> プロパティを使用してデータ行のカスタムスタイルを指定する方法を示します。

 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">確認するデータ型を表す <see cref="T:System.Type" />。</param>
        <summary>指定したデータ型を <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのフィールドにバインドできるかどうかを確認します。</summary>
        <returns>指定したデータ型を <see langword="true" /> コントロールのフィールドにバインドできる場合は <see cref="T:System.Web.UI.WebControls.FormView" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> メソッドは、指定されたデータ型をコントロールのフィールドにバインドできるかどうかを判断するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。 <xref:System.Web.UI.WebControls.FormView> コントロールでは、次のデータ型がサポートされています。

-   <xref:System.Boolean>、<xref:System.Byte>、<xref:System.Int32>などのすべてのプリミティブデータ型。

-   <xref:System.DateTime>

-   <xref:System.Decimal>

-   <xref:System.Guid>

-   <xref:System.String>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張するときに、このメソッドをオーバーライドして、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールで使用できるデータ型を追加または制限することができます。</para></block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内のボタンをクリックすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ItemCommand> イベントは、<xref:System.Web.UI.WebControls.FormView> コントロール内のボタンがクリックされると発生します。 これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できます。

 <xref:System.Web.UI.WebControls.FormView> コントロール内のボタンは、コントロールの組み込み機能の一部を呼び出すこともできます。 これらの操作のいずれかを実行するには、ボタンの [`CommandName`] プロパティを次の表のいずれかの値に設定します。

|CommandName 値|Description|
|-----------------------|-----------------|
|中断|編集操作または挿入操作をキャンセルし、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティによって指定されたモードに <xref:System.Web.UI.WebControls.FormView> コントロールを返します。 <xref:System.Web.UI.WebControls.FormView.ModeChanged> イベントと <xref:System.Web.UI.WebControls.FormView.ModeChanging> イベントを発生させます。|
|"削除"|現在のレコードを削除します。 <xref:System.Web.UI.WebControls.FormView.ItemDeleted> イベントと <xref:System.Web.UI.WebControls.FormView.ItemDeleting> イベントを発生させます。|
|編集|<xref:System.Web.UI.WebControls.FormView> コントロールを編集モードにします。 <xref:System.Web.UI.WebControls.FormView.ModeChanged> イベントと <xref:System.Web.UI.WebControls.FormView.ModeChanging> イベントを発生させます。|
|Insert|現在のレコードをデータ ソースに挿入します。 <xref:System.Web.UI.WebControls.FormView.ItemInserted> イベントと <xref:System.Web.UI.WebControls.FormView.ItemInserting> イベントを発生させます。|
|New|<xref:System.Web.UI.WebControls.FormView> コントロールを挿入モードにします。 <xref:System.Web.UI.WebControls.FormView.ModeChanged> イベントと <xref:System.Web.UI.WebControls.FormView.ModeChanging> イベントを発生させます。|
|改|ページング操作を実行します。 ボタンの [`CommandArgument`] プロパティを "First"、"Last"、"Next"、"Prev"、またはページ番号に設定して、実行するページング操作の種類を指定します。 <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> イベントと <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> イベントを発生させます。|
|Update|データ ソースの現在のレコードを更新します。 <xref:System.Web.UI.WebControls.FormView.ItemUpdated> イベントと <xref:System.Web.UI.WebControls.FormView.ItemUpdating> イベントを発生させます。|

 <xref:System.Web.UI.WebControls.FormView.ItemCommand> イベントは、前の表に示したボタンがクリックされたときに発生しますが、この操作については、表に示されているイベントを使用することをお勧めします。

 <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> オブジェクトがイベント処理メソッドに渡されます。このメソッドを使用して、クリックされたボタンのコマンド名とコマンド引数を確認できます。 コマンド名とコマンド引数を決定するには、それぞれ <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> プロパティと <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> プロパティを使用します。 また、<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> プロパティを使用して、イベントを発生させたコントロールにアクセスすることもできます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ItemCommand> イベントを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールのボタンクリックを処理する方法を示します。 ユーザーが [追加] ボタンをクリックすると、現在表示されている項目が <xref:System.Web.UI.WebControls.ListBox> コントロールに追加されます。

 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにすべての行が作成された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントは、すべての行が <xref:System.Web.UI.WebControls.FormView> コントロールに作成された後に発生します。 これは、コントロールが最初に表示されたとき、またはユーザーが別のレコードに移動したときに発生する可能性があります。 このイベントを使用すると、このイベントが発生するたびに、行の内容の追加や変更などのカスタムルーチンを実行するイベント処理メソッドを提供できます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントは、<xref:System.Web.UI.WebControls.FormView> コントロールがデータにバインドされる前に発生します。 バインドされたフィールドの値を変更するには、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> イベントを使用します。

 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>、<xref:System.Web.UI.WebControls.FormView.FooterRow%2A>、<xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>、または <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> の各プロパティをそれぞれ使用して、<xref:System.Web.UI.WebControls.FormView> コントロールのヘッダー、フッター、およびポケットベルの行にアクセスできます。 データ行にアクセスするには、<xref:System.Web.UI.WebControls.FormView.Row%2A> プロパティを使用します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントを使用して、ページャー行に含まれる <xref:System.Web.UI.WebControls.Label> コントロールのテキストを更新する方法を示します。

 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Delete ボタンがクリックされた場合に、削除操作後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロール内で削除ボタン (その `CommandName` プロパティが "Delete" に設定されているボタン) をクリックしたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがレコードを削除した後に、<xref:System.Web.UI.WebControls.FormView> コントロールによって <xref:System.Web.UI.WebControls.FormView.ItemDeleted> イベントが発生します。 これにより、このイベントが発生するたびに、削除操作の結果を確認するなどのカスタムルーチンを実行するイベント処理メソッドを提供できます。

 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> オブジェクトがイベント処理メソッドに渡されます。これにより、影響を受けるレコードの数と発生した可能性のある例外を確認できます。 削除操作によって影響を受けたレコードの数を確認するには、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> プロパティを使用して、例外が発生したかどうかを確認します。 また、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> プロパティを設定して、イベント処理メソッドで例外が処理されたかどうかを示すこともできます。 削除されたレコードのキーフィールドとキー以外のフィールドの名前と値のペアにアクセスする場合は、それぞれ <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> プロパティと <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> プロパティを使用します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ItemDeleted> イベントを使用して、削除操作中に例外が発生したかどうかを判断する方法を示します。

 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Delete ボタンがクリックされた場合に、削除操作前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロール内で削除ボタン (その `CommandName` プロパティが "Delete" に設定されているボタン) をクリックしたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがレコードを削除する前に、<xref:System.Web.UI.WebControls.FormView> コントロールによって <xref:System.Web.UI.WebControls.FormView.ItemDeleting> イベントが発生します。 これにより、このイベントが発生するたびに、レコードを削除する前に検証するなどのカスタムルーチンを実行するイベント処理メソッドを提供できます。

 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> オブジェクトがイベント処理メソッドに渡されます。これにより、削除されるレコードのインデックスを特定し、削除操作を取り消す必要があることを示すことができます。 レコードのインデックスを特定するには、<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> プロパティを使用します。 削除操作を取り消すには、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。 <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> と <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> の各プロパティをそれぞれ使用して、キーフィールドと非キーフィールドにアクセスすることもできます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ItemDeleting> イベントを使用して削除操作を取り消す方法を示します。

 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Insert ボタンがクリックされた場合に、挿入操作後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールは、コントロール内で挿入ボタン (その `CommandName` プロパティが "Insert" に設定されたボタン) をクリックしたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがレコードを挿入した後に、<xref:System.Web.UI.WebControls.FormView.ItemInserted> イベントを発生させます。 これにより、このイベントが発生するたびに、挿入操作の結果を確認するなどのカスタムルーチンを実行するイベント処理メソッドを提供できます。

 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> オブジェクトがイベント処理メソッドに渡されます。これにより、影響を受けるレコードの数と発生した可能性のある例外を確認できます。 挿入操作によって影響を受けたレコードの数を確認するには、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> プロパティを使用して、例外が発生したかどうかを確認します。 また、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> プロパティを設定して、イベント処理メソッドで例外が処理されたかどうかを示すこともできます。 挿入されたレコードの値にアクセスする必要がある場合は、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> プロパティを使用します。

 既定では、<xref:System.Web.UI.WebControls.FormView> コントロールは、挿入操作後に <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティによって指定されたモードに戻ります。 <xref:System.Web.UI.WebControls.FormView> コントロールを挿入モードに保つには、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> プロパティを `true`に設定します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ItemInserted> イベントを使用して、挿入操作中に例外が発生したかどうかを判断する方法を示します。

 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Insert ボタンがクリックされた場合に、挿入操作前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールは、コントロール内で挿入ボタン (その `CommandName` プロパティが "Insert" に設定されているボタン) をクリックしたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがレコードを挿入する前に、<xref:System.Web.UI.WebControls.FormView.ItemInserting> イベントを発生させます。 これにより、このイベントが発生するたびに、データソースに挿入する前にレコードの値を HTML エンコードするなど、カスタムルーチンを実行するイベント処理メソッドを提供できます。

 <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> オブジェクトがイベント処理メソッドに渡されます。このメソッドを使用すると、<xref:System.Web.UI.WebControls.FormView> コントロールに送信されるオプションのコマンド引数の値を判断し、挿入操作をキャンセルする必要があることを示すことができます。 Command 引数の値は、[挿入] ボタンの [`CommandArgument`] プロパティに対応しています。 [挿入] ボタンの [`CommandArgument`] プロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> プロパティを使用して、コマンド引数の値を決定します。 挿入操作を取り消すには、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。 また、<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> プロパティを使用して、新しいレコードのフィールド値を読み取りまたは変更することもできます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ItemInserting> イベントを使用して挿入操作を取り消す方法を示します。

 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが読み取り専用モードの場合、このコントロールのデータ行にカスタム コンテンツを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールが読み取り専用モードの場合にデータ行のカスタム コンテンツを含む <see cref="T:System.Web.UI.WebControls.FormView" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールは、(<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> プロパティによって指定された) コントロールの現在のモードに基づいて、データ行に対して異なるテンプレートをレンダリングします。 次の表は、各モードで使用されるテンプレートを示しています。

|モード|レンダリングされたテンプレート|
|----------|-----------------------|
|[編集]|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

 <xref:System.Web.UI.WebControls.FormView> コントロールが読み取り専用モードの場合は、<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> プロパティを使用して、データ行に対して独自のユーザーインターフェイス (UI) を定義します。 通常、項目テンプレートには、レコードのフィールド値を表示するためのコントロールと、レコードを編集、挿入、および削除するためのコマンドボタンが含まれています。

 カスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<ItemTemplate>` タグを配置します。 次に、開始タグと終了 `<ItemTemplate>` タグの間にテンプレートの内容を一覧表示できます。 コントロールにバインドされているデータソースのフィールド値を表示するには、データバインディング式を使用します。 データバインディング式の詳細については、「[データバインディング式の構文](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)」を参照してください。 組み込みの削除、編集、および新しいレコード操作を実行するコマンドボタンを作成するには、[`CommandName`] プロパティを次の表に示すいずれかの値に設定して、テンプレートにコマンドボタンコントロールを追加します。

|コマンドボタンの種類|CommandName 値|
|-------------------------|-----------------------|
|削除|"削除"|
|[編集]|編集|
|新規|New|

 項目テンプレートの外観を制御するには、<xref:System.Web.UI.WebControls.FormView.RowStyle%2A> プロパティを使用します。



## Examples
 次の例は、データ行のカスタムテンプレートを読み取り専用モードで定義する方法を示しています。

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Update ボタンがクリックされた場合に、更新操作後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールは、コントロール内で更新ボタン (その `CommandName` プロパティが "Update" に設定されたボタン) をクリックしたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがレコードを更新した後に、<xref:System.Web.UI.WebControls.FormView.ItemUpdated> イベントを発生させます。 これにより、このイベントが発生するたびに、更新操作の結果を確認するなどのカスタムルーチンを実行するイベント処理メソッドを提供できます。

 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> オブジェクトがイベント処理メソッドに渡されます。これにより、影響を受けるレコードの数と発生した可能性のある例外を確認できます。 更新操作によって影響を受けたレコードの数を確認するには、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> プロパティを使用して、例外が発生したかどうかを確認します。 また、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを設定して、イベント処理メソッドで例外が処理されたかどうかを示すこともできます。 更新されたレコードのキーフィールドの値にアクセスする必要がある場合は、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> プロパティを使用します。 元のフィールド値と更新された非キーフィールド値には、それぞれ <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> プロパティと <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> プロパティを使用してアクセスできます。

 既定では、<xref:System.Web.UI.WebControls.FormView> コントロールは、更新操作の後、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティによって指定されたモードに戻ります。 <xref:System.Web.UI.WebControls.FormView> コントロールを編集モードに保つには、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> プロパティを `true`に設定します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ItemUpdated> イベントを使用して、更新操作中に例外が発生したかどうかを判断する方法を示します。

 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Update ボタンがクリックされた場合に、更新操作前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールは、コントロール内で更新ボタン (その `CommandName` プロパティが "Update" に設定されたボタン) をクリックしたときに、<xref:System.Web.UI.WebControls.FormView> コントロールがレコードを更新する前に、<xref:System.Web.UI.WebControls.FormView.ItemUpdating> イベントを発生させます。 これにより、このイベントが発生するたびに、データソースで更新する前にレコードの値を HTML エンコードするなど、カスタムルーチンを実行するイベント処理メソッドを提供できます。

 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> オブジェクトがイベント処理メソッドに渡されます。このメソッドを使用すると、<xref:System.Web.UI.WebControls.FormView> コントロールに送信されるオプションのコマンド引数の値を決定し、更新操作を取り消す必要があることを示すことができます。 Command 引数の値は、[更新] ボタンの [`CommandArgument`] プロパティに対応しています。 [更新] ボタンの [`CommandArgument`] プロパティが設定されている場合は、<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> プロパティを使用して、コマンド引数の値を決定します。 更新操作を取り消すには、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。 また、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> と <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> のプロパティを使用して、ユーザーが入力した新しい値を読み取りまたは変更することもできます。 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> プロパティにはキーフィールドが含まれていますが、<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> プロパティには非キーフィールドが含まれています。 元のキー以外のフィールド値にアクセスする必要がある場合は、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> プロパティを使用します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ItemUpdating> イベントを使用して更新操作を取り消す方法を示します。

 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> コントロールの状態を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> プロパティが <see cref="P:System.Web.UI.Control.EnableViewState" /> に設定されていても、永続化する必要がある <see langword="false" /> コントロールのプロパティの状態を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> メソッドは、<xref:System.Web.UI.Control.EnableViewState%2A> プロパティが `false`に設定されている場合でも、永続化する必要がある <xref:System.Web.UI.WebControls.FormView> コントロールプロパティの状態を読み込むために使用されます。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.FormView> コントロールを拡張するときに使用されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> コントロールの状態を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> メソッドは、以前に保存した <xref:System.Web.UI.WebControls.FormView> コントロールのビューステートを読み込むために使用されます。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.FormView> コントロールを拡張するときに使用されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが編集、挿入、および読み取り専用の各モード間の切り替えを行った場合に、モードの変更後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ModeChanged> イベントは、<xref:System.Web.UI.WebControls.FormView> コントロールが編集、挿入、および読み取り専用モードを切り替えようとしたときに、モードが実際に変更された後に発生します。 これにより、このイベントが発生するたびに、<xref:System.Web.UI.WebControls.FormView> コントロールを別のコントロールと同期するなど、カスタムルーチンを実行するイベント処理メソッドを提供できます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.ModeChanged> イベントを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールのヘッダー行に現在のモードを表示する方法を示します。

 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが編集、挿入、および読み取り専用の各モード間の切り替えを行う場合に、モードの変更前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.ModeChanging> イベントは、<xref:System.Web.UI.WebControls.FormView> コントロールが編集、挿入、および読み取り専用モードを切り替えようとしたときに、モードが実際に変更される前に発生します。 これにより、このイベントが発生するたびに、特定のモードの <xref:System.Web.UI.WebControls.FormView> コントロールを構成したり、モードの変更をキャンセルしたりするなど、カスタムルーチンを実行するイベント処理メソッドを提供できます。

 <xref:System.Web.UI.WebControls.FormViewModeEventArgs> オブジェクトは、イベント処理メソッドに渡されます。これにより、<xref:System.Web.UI.WebControls.FormView> コントロールの切り替え先のモードを決定し、ユーザーが編集操作をキャンセルした結果として <xref:System.Web.UI.WebControls.FormView.ModeChanging> イベントが発生したかどうかを判断したり、挿入操作をキャンセルする必要があることを示したりできます。 新しいモードを確認するには、<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> プロパティを使用します。 また、<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormViewMode> 列挙値のいずれかに設定することにより、代替モードに切り替えることもできます。 <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> プロパティを使用して、ユーザーが編集操作をキャンセルしたかどうかを判断します。 挿入操作を取り消すには、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView> コントロールが編集モードに移行するときに、<xref:System.Web.UI.WebControls.FormView.ModeChanging> イベントを使用して、ページャー行を非表示にする方法を示します。

 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに関連付けられているテーブル固有の CSS スタイル規則が既定値に設定されているかどうかを判断します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに関連付けられている既定の CSS スタイル規則。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 テーブル固有の CSS スタイルルールは、<xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>、<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>、<xref:System.Web.UI.WebControls.FormView.GridLines%2A>、<xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>、および <xref:System.Web.UI.WebControls.Style.Font%2A> の各プロパティを使用して、既定値に設定されます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソースです。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>コントロールの下位階層から渡されたイベントを処理します。</summary>
        <returns>イベントをさらにコントロールの上位階層に渡す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> メソッドは、必要に応じて、<xref:System.Web.UI.Control.RaiseBubbleEvent%2A> メソッドによってコントロール階層から渡されたイベントを処理するためにコントロールによって使用されます。 このメソッドは、`e` パラメーターに含まれている <xref:System.EventArgs> オブジェクトのプロパティを調べて、イベントを処理するかどうかを決定します。 イベントを処理する必要がある場合、メソッドは適切なアクションを実行します。 その他のイベントは無視され、コントロール階層が渡されます。 このメソッドは、戻り値を介して、イベントを制御階層のさらに上に渡すかどうかを示します。

 <xref:System.Web.UI.WebControls.FormView> コントロールは、このメソッドの基本実装をオーバーライドして、コントロールで認識されるボタンの1つがクリックされたときに適切なアクションを実行します。 次の表は、<xref:System.Web.UI.WebControls.FormView> コントロールが認識するコマンドボタンを示しています。

|ボタン|CommandName 値|Description|
|------------|-----------------------|-----------------|
|Cancel|中断|操作をキャンセルし、ユーザーが入力した値を破棄するために、更新または挿入操作で使用されます。 <xref:System.Web.UI.WebControls.FormView> コントロールは、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティによって指定されたモードに戻ります。|
|削除|"削除"|削除操作で、表示されているレコードをデータソースから削除するために使用されます。 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> イベントと <xref:System.Web.UI.WebControls.FormView.ItemDeleted> イベントを発生させます。|
|[編集]|編集|更新操作で <xref:System.Web.UI.WebControls.FormView> コントロールを編集モードにするために使用されます。 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> プロパティで指定された内容が、データ行に対して表示されます。|
|挿入|Insert|挿入操作で、ユーザーによって指定された値を使用してデータソースに新しいレコードを挿入しようとするために使用されます。 <xref:System.Web.UI.WebControls.FormView.ItemInserting> イベントと <xref:System.Web.UI.WebControls.FormView.ItemInserted> イベントを発生させます。|
|新規|New|挿入操作で <xref:System.Web.UI.WebControls.FormView> コントロールを挿入モードに配置するために使用されます。 <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> プロパティで指定された内容が、データ行に対して表示されます。|
|ページ|改|ページング操作で、ページングを実行するページャー行のボタンを表すために使用されます。 ページング操作を指定するには、ボタンの [`CommandArgument`] プロパティを "Next"、"Prev"、"First"、"Last"、または移動先のページのインデックスに設定します。 <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> イベントと <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> イベントを発生させます。 **注:** この種類のボタンは、通常、ページャーテンプレートでのみ使用されます。|
|更新|Update|更新操作で、ユーザーによって指定された値を使用して、データソース内の表示されているレコードを更新しようとするために使用されます。 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> イベントと <xref:System.Web.UI.WebControls.FormView.ItemUpdated> イベントを発生させます。|

 このバージョンのメソッドは、これらのボタンのいずれかが処理されたときに `true` を返します。 イベントバブルの詳細については、「[イベントの処理と発生](~/docs/standard/events/index.md)」を参照してください。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.FormView" /> クラスを拡張するときに、このメソッドをオーバーライドして独自のイベントを処理できます。 イベントをさらに上位のコントロール階層に渡す必要があるかどうかを示すために、戻り値を使用してください。</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> メソッドは、<xref:System.Web.UI.Control.Init> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ItemCommand> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ItemDeleted> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ItemDeleting> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、ユーザーが削除操作をキャンセルしなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ItemInserted> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ItemInserting> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、ユーザーが挿入操作をキャンセルしなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ItemUpdated> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ItemUpdating> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、ユーザーが更新操作をキャンセルしなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ModeChanged> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.ModeChanging> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、モードの変更がキャンセルされなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.PageIndexChanged> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" /> です。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> メソッドは、<xref:System.Web.UI.WebControls.FormView.PageIndexChanging> イベントを発生させるために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されます。 一般に、<xref:System.Web.UI.WebControls.FormView> クラスを拡張するときに、コントロールの開発者によって使用されます。

 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。

 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、ページング操作がキャンセルされなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内の全レコードを表示するために必要なページの合計数を取得します。</summary>
        <value>基になるデータ ソース内の項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ページング機能が有効になっている場合 (<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティが `true`に設定されている場合)、<xref:System.Web.UI.WebControls.FormView.PageCount%2A> プロパティを使用して、基になるデータソースのレコードの合計数を決定します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> コントロールは一度に1つのレコードのみを表示するため、この値は、データソース内のすべてのレコードを表示するために必要なページの合計数に対応します。 この値は、データバインディングが発生するまで正確ではありません。

 基になるデータソースから現在のレコードのインデックスを特定するには、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A> プロパティを使用します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.PageCount%2A> プロパティを使用して、コントロールに表示されるレコードの合計数を確認する方法を示します。

 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されているページのインデックスを取得または設定します。</summary>
        <value>基になるデータ ソースから <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに表示されているデータ項目の 0 から始まるインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ページング機能が有効になっている場合 (<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティが `true`に設定されている場合)、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A> プロパティを使用して、現在表示されているレコードのインデックスを決定します。 このプロパティを使用して、表示されているレコードをプログラムで変更することもできます。

> [!NOTE]
>  ページング機能が有効になっている場合は、このプロパティを使用して、表示されるレコードのページ番号を決定することもできます。ただし、このプロパティは0から始まることに注意してください。

 データソース内の項目の合計数を確認するには、<xref:System.Web.UI.WebControls.FormView.PageCount%2A> プロパティを使用します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A> プロパティを使用して、表示されるレコードのページインデックスを決定する方法を示します。

 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が -1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> プロパティの値が変更された場合に、ページング操作後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロール内でページャーボタン (その `CommandName` プロパティが "Page" に設定されているボタン) をクリックしたが、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理した後に、<xref:System.Web.UI.WebControls.FormView> コントロールによって <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> イベントが発生します。 これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できます。

> [!NOTE]
>  プログラムを使用して <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> プロパティを設定した場合、このイベントは発生しません。

 ページャーボタンは、通常、<xref:System.Web.UI.WebControls.FormView> コントロールのページャー行にあります。 このイベントは、<xref:System.Web.UI.WebControls.FormView> コントロールを <xref:System.Web.UI.WebControls.GridView> コントロールと同期したり、ページング操作の後 <xref:System.Web.UI.WebControls.FormView> コントロールの動作を設定したりするためによく使用されます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.PageIndexChanged> イベントを使用して、ユーザーが別のレコードに移動したときに <xref:System.Web.UI.WebControls.FormView> を読み取り専用モードに戻す方法を示します。

 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> プロパティの値が変更された場合に、ページング操作前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 コントロール内でページャーボタン (その `CommandName` プロパティが "Page" に設定されているボタン) をクリックしたが、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理する前に、<xref:System.Web.UI.WebControls.FormView> コントロールが <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> イベントを発生させます。 これにより、このイベントが発生するたびに、ページング操作のキャンセルなどのカスタムルーチンを実行するイベント処理メソッドを提供できます。

> [!NOTE]
>  プログラムを使用して <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> プロパティを設定した場合、このイベントは発生しません。

 ページャーボタンは、通常、<xref:System.Web.UI.WebControls.FormView> コントロールのページャー行にあります。

 <xref:System.Web.UI.WebControls.FormViewPageEventArgs> オブジェクトがイベント処理メソッドに渡されます。これにより、ユーザーが選択したページのインデックスを特定し、ページング操作を取り消す必要があることを示すことができます。 ユーザーが選択したページのインデックスを確認するには、<xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> プロパティを使用します。 ページング操作を取り消すには、<xref:System.Web.UI.WebControls.FormViewPageEventArgs> オブジェクトの <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`に設定します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.PageIndexChanging> イベントを使用して、ページング操作をキャンセルする方法を示します。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.PagerSettings" /> コントロールのページャー ボタンのプロパティを設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.PagerSettings" /> コントロールのページャー ボタンのプロパティを設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールのページャー行の設定を制御するには、<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> プロパティを使用します。 ページング機能を有効にすると (<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティが `true`に設定されている場合)、ページャー行が表示され、ユーザーがコントロール内の別のレコードに移動できるようにするコントロールが格納されます。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.PagerSettings> オブジェクトのプロパティを設定できます。 プロパティは、`Property-Subproperty`の形式で宣言して設定できます。 `Subproperty` は <xref:System.Web.UI.WebControls.PagerSettings> オブジェクトのプロパティ (`PagerSettings-Mode`など) です。 プロパティは、`Property.Subproperty` (`PagerSettings.Mode`など) の形式でプログラムによって設定することもできます。 一般的な設定には、通常、ページャー行の表示モードと、ナビゲーションコントロール用のカスタムテキストまたはイメージが含まれます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> プロパティを使用して、ページャー行のプロパティを指定する方法を示します。

 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのページ行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのページ行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールのページ行の外観を制御するには、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> プロパティを使用します。 ページング機能を有効にすると (<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティが `true`に設定されている場合)、ページャー行が表示され、ユーザーがコントロール内のさまざまなページに移動できるようにするコントロールが含まれます。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、次のいずれかの方法を使用して、宣言によって設定できます。

-   属性を `Property-Subproperty`フォームの <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグに配置します。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティ (`PagerStyle-ForeColor`など) です。

-   <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<PagerRowStyle>` 要素を入れ子にします。

 プロパティは、`Property.Subproperty` (`PagerStyle.ForeColor`など) の形式でプログラムによって設定することもできます。 一般的な設定には、カスタムの背景色、前景色、およびフォントプロパティが含まれます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> プロパティを使用して、ページャー行のスタイル設定を指定する方法を示します。

 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのページ行用のカスタム コンテンツを取得または設定します。</summary>
        <value>ページ行のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.ITemplate" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ページング機能が有効になっている場合 (<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティが true に設定されている場合) は、<xref:System.Web.UI.WebControls.FormView> コントロールにページャー行が表示されます。 ページャー行には、ユーザーがコントロール内のさまざまなページに移動できるようにするコントロールが含まれています。 組み込みのページャー行のユーザーインターフェイス (UI) を使用する代わりに、<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> プロパティを使用して独自の UI を定義できます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> プロパティが設定されている場合は、組み込みのページャー行の UI がオーバーライドされます。

 ページ行のカスタムテンプレートを指定するには、まず、<xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<PagerTemplate>` タグを配置します。 次に、開始タグと終了 `<PagerTemplate>` タグの間にテンプレートの内容を一覧表示できます。 ページ行の外観を制御するには、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> プロパティを使用します。

 通常、ページャーテンプレートには、ページング操作を実行するためのボタンコントロールが追加されています。 `CommandName` プロパティが "Page" に設定されているボタンコントロールがクリックされると、<xref:System.Web.UI.WebControls.FormView> コントロールはページング操作を実行します。 ボタンの `CommandArgument` プロパティによって、実行するページング操作の種類が決まります。 次の表に、<xref:System.Web.UI.WebControls.FormView> コントロールでサポートされるコマンド引数の値を示します。

|CommandArgument 値|Description|
|---------------------------|-----------------|
|前後|次のページに移動します。|
|前|前のページに移動します。|
|姓|最初のページに移動します。|
|末日|最後のページに移動します。|
|整数値|指定したページ番号に移動します。|



## Examples
 次の例は、カスタムのページャーテンプレートを定義する方法を示しています。

 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">データ ソースを表す <see cref="T:System.Collections.IEnumerable" />。</param>
        <summary>指定したデータ ソースを <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> メソッドは、指定されたデータソースをコントロールにバインドするために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> メソッドはシールされているため、データのバインド時に追加のタスクを実行する必要がある場合は、このメソッドをオーバーライドする必要があります。</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのコントロール階層を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> メソッドは、コントロールがレンダリングされる前に <xref:System.Web.UI.WebControls.FormView> コントロールにコントロールの階層を設定するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">発生する 1 つ以上のイベントの <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> を作成するためのイベント引数。</param>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに適切なイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ページは、<xref:System.Web.UI.WebControls.FormView> コントロールに対して適切なイベントを発生させるポストバックイベントが発生したときに、<xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> メソッドを呼び出します。 この呼び出しは、読み込みと変更通知の完了後、プリリリースが発生する前に、ページのライフサイクルで発生します。 このメソッドは、発生するイベントの <xref:System.Web.UI.WebControls.CommandEventArgs> オブジェクトを作成するために実装されています。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.FormView> コントロールを拡張するために使用されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに表示する出力ストリームを格納している <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>クライアントに <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.Render%2A> メソッドは、指定された <xref:System.Web.UI.HtmlTextWriter> オブジェクトを使用して、クライアントのブラウザーにサーバーコントロールの内容を表示するために使用されます。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インライン スタイルを適用するために、コントロールがレンダリングされる HTML を <see langword="table" /> 要素内に囲むかどうかを示す値を取得または設定します。</summary>
        <value>コントロールがレンダリングされる HTML を <see langword="true" /> 要素内に囲む場合は <see langword="table" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> などのインラインスタイルプロパティをコントロールに対してレンダリングされるすべての HTML に適用するために、ASP.NET は、レンダリングされた HTML を `table` 要素で囲みます。 外側の `table` 要素を表示しない場合は、このプロパティを `false`に設定します。 その場合、コントロール全体に適用されるインラインスタイルプロパティを設定しようとすると、例外がスローされます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのデータ行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのデータ行を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 データ行を表す <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトにプログラムでアクセスするには、<xref:System.Web.UI.WebControls.FormView.Row%2A> プロパティを使用します。 データ行には、現在のモード用に表示されたテンプレートに基づいて、(<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> プロパティによって指定された) 異なるコンテンツが含まれています。 現在のモードでは、テンプレートのコンテンツにしかアクセスできません。 次の表は、各モードで使用されるテンプレートを示しています。

|モード|レンダリングされたテンプレート|
|----------|-----------------------|
|[編集]|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.Row%2A> プロパティは、<xref:System.Web.UI.WebControls.FormView> コントロールによって <xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントにデータ行が作成された後にのみ使用できます。

 このプロパティは、カスタムコンテンツを追加するときなど、データ行をプログラムで操作する必要がある場合によく使用されます。 <xref:System.Web.UI.WebControls.FormView.Row%2A> プロパティに対する変更は、<xref:System.Web.UI.WebControls.FormView> コントロールがデータバインドされた後に実行する必要があります。それ以外の場合は、<xref:System.Web.UI.WebControls.FormView> コントロールによってすべての変更が上書きされます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.Row%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView.ItemCreated> イベント中にデータ行のプロパティにアクセスする方法を示します。

 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが読み取り専用モードの場合にこのコントロールのデータ行の外観を設定できるようにする、<see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが読み取り専用モードの場合にこのコントロールのデータ行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールが読み取り専用 (表示) モードの場合にデータ行の外観を制御するには、<xref:System.Web.UI.WebControls.FormView.RowStyle%2A> プロパティを使用します。 <xref:System.Web.UI.WebControls.FormView> コントロールが読み取り専用モードの場合、データ行には、<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> プロパティによって指定されたユーザー定義のコンテンツが表示されます。 このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティを設定できます。 プロパティは、次のいずれかの方法を使用して、宣言によって設定できます。

-   属性を `Property-Subproperty`フォームの <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグに配置します。 `Subproperty` は <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトのプロパティ (`RowStyle-ForeColor`など) です。

-   <xref:System.Web.UI.WebControls.FormView> コントロールの開始タグと終了タグの間に `<RowStyle>` 要素を入れ子にします。

 プロパティは、`Property.Subproperty` (`RowStyle.ForeColor`など) の形式でプログラムによって設定することもできます。 一般的な設定には、カスタムの背景色、前景色、およびフォントプロパティが含まれます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView> コントロールが読み取り専用モードの場合に、<xref:System.Web.UI.WebControls.FormView.RowStyle%2A> プロパティを使用してデータ行のカスタムスタイルを指定する方法を示します。

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> プロパティが <see cref="P:System.Web.UI.Control.EnableViewState" /> に設定されていても、永続化する必要がある <see langword="false" /> コントロールのプロパティの状態を保存します。</summary>
        <returns>サーバー コントロールの現在のビューステートを返します。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> プロパティが `false`に設定されている場合でも、永続化する必要がある <xref:System.Web.UI.WebControls.FormView> コントロールのプロパティの状態を保存するために使用されます。

> [!NOTE]
>  このメソッドは、主にコントロールの開発者が <xref:System.Web.UI.WebControls.FormView> コントロールを拡張するために使用されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のビューステートを保存します。</summary>
        <returns><see cref="T:System.Object" /> コントロールの保存された状態を格納している <see cref="T:System.Web.UI.WebControls.FormView" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> メソッドは、コントロールの状態を保存するために、<xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のレコードのデータ キー値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のレコードのデータ キー値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティが設定されている場合、<xref:System.Web.UI.WebControls.FormView> コントロールは、現在のレコードの <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティに一覧表示されているフィールドのキーと値のペアを含む <xref:System.Web.UI.WebControls.DataKey> オブジェクトを自動的に作成します。 <xref:System.Web.UI.WebControls.DataKey> オブジェクトは、現在のレコードの主キーフィールドを表し、<xref:System.Web.UI.WebControls.FormView.DataKey%2A> プロパティに格納されます。 <xref:System.Web.UI.WebControls.FormView.DataKey%2A> プロパティを使用してデータキー値にアクセスする代わりに、<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> プロパティをショートカットとして使用できます。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> プロパティに複数のフィールドが一覧表示されている場合、このプロパティは、一覧表示されている最初のフィールドの値を返します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> プロパティを使用して、キーフィールドの値を決定する方法を示します。

 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">設定するインデックス。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに現在表示されているページのインデックスを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />」をご覧ください。</summary>
        <value>表示インデックスを表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.IDataItemContainer> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />」をご覧ください。</summary>
        <value>常に 0 を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.IDataItemContainer> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ページは、ポストバックイベントが発生したときに <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> メソッドを呼び出します。 この呼び出しは、読み込みと変更通知が完了した後、ページが表示される前に、ページのライフサイクルで発生します。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundControl::DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに表示される項目の主キー フィールドの名前が格納された配列を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに表示される項目の主キー フィールドの名前が格納された配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースに複数のデータ項目一覧が含まれている場合に、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがバインドされるデータ項目の一覧の名前を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがバインドされるデータ項目の一覧の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::WebControls::IDataBoundControl::DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータの一覧を格納しているオブジェクトを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータの一覧を格納しているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータ項目の一覧を格納しているデータ ソース コントロールの ID を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータ項目の一覧を格納しているデータ ソース コントロールの ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータ項目の一覧を格納しているデータ ソース オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータ項目の一覧を格納しているデータ ソース オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IDataBoundItemControl::DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の行のデータ キー値を表すオブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の行のデータ キー値を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System::Web::UI::WebControls::IDataBoundItemControl::Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のモードを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のモード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">サーバーにポスト バックされるボタン コントロール。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのポストバック イベントのオプションを確認します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのポストバック イベントのオプション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> メソッドは、コントロールのポストバックイベントオプションを格納する <xref:System.Web.UI.PostBackOptions> オブジェクトを作成するために <xref:System.Web.UI.WebControls.FormView> コントロールによって呼び出されるヘルパーメソッドです。 <xref:System.Web.UI.PostBackOptions> オブジェクトは、通常、<xref:System.Web.UI.Page.GetPostBackEventReference%2A> メソッドのパラメーターとして使用されます。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buttonControl" /> パラメーターに格納されているオブジェクトが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> の <paramref name="buttonControl" /> プロパティが <see langword="true" /> です。</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールの <see cref="T:System.Web.UI.WebControls.FormView" /> 値を取得します。</summary>
        <value>常に <see langword="HtmlTextWriterTag.Table" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView.TagKey%2A> プロパティを使用すると、出力ストリームで <xref:System.Web.UI.WebControls.FormView> コントロールの適切な HTML マークアップを書き込むことができます。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>このプロパティをオーバーライドして、派生コントロールに使用する <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を指定できます。</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールの上部に表示されるページ行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールの上部のページ行を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ページングが有効になっている場合 (<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> プロパティが `true`に設定されている場合)、ページャー行と呼ばれる追加の行が <xref:System.Web.UI.WebControls.FormView> コントロールに自動的に表示されます。 ページャー行には、ユーザーが他のレコードに移動できるコントロールが含まれており、コントロールの上部、下部、またはその両方に表示できます。 <xref:System.Web.UI.WebControls.FormView> コントロールの上位のページ行を表す <xref:System.Web.UI.WebControls.FormViewRow> オブジェクトにプログラムでアクセスするには、<xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> プロパティを使用します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> プロパティは、<xref:System.Web.UI.WebControls.FormView> コントロールによって <xref:System.Web.UI.WebControls.FormView.ItemCreated> イベントの上位のページ行が作成された後にのみ使用できます。

 このプロパティは、たとえばカスタムコンテンツを追加するときに、最初のページ行をプログラムで操作する必要がある場合によく使用されます。 <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> プロパティに対する変更は、<xref:System.Web.UI.WebControls.FormView> コントロールがデータにバインドされた後に実行する必要があります。それ以外の場合は、<xref:System.Web.UI.WebControls.FormView> コントロールによってすべての変更が上書きされます。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.FormView> コントロールの上部に表示されるページャー行にアクセスする方法を示します。 その後、ページ行が追加のコンテンツで更新されます。

 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに対するビューステートの変更の追跡と保存を始める開始点にマークを付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、コントロールのビューステートの一部として、コントロールへの変更の追跡と保存を開始する開始点をマークするためにオーバーライドされます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">このメソッドが呼び出されたときにページの検証を実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>データ ソースの現在のレコードを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.FormView> コントロールが編集モードの場合は、<xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> メソッドを使用して、データソース内の現在のレコードをプログラムによって更新します。 このメソッドは、ページ上の別のコントロールなど、<xref:System.Web.UI.WebControls.FormView> コントロールの外部から現在のレコードを更新する必要がある場合によく使用されます。

> [!NOTE]
>  このメソッドが呼び出されると、<xref:System.Web.UI.WebControls.FormView> コントロールは編集モードである必要があります。それ以外の場合は、<xref:System.Web.HttpException> がスローされます。

 更新操作の前にページの検証を実行するかどうかを指定するには、`causesValidation` パラメーターを使用します。 このメソッドを呼び出すと、<xref:System.Web.UI.WebControls.FormView.ItemUpdated> イベントと <xref:System.Web.UI.WebControls.FormView.ItemUpdating> イベントも発生します。



## Examples
 次の例では、<xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> メソッドを使用して、データソース内の <xref:System.Web.UI.WebControls.FormView> コントロールの現在のレコードをプログラムによって更新する方法を示します。

 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが編集モードではないときに、このメソッドが呼び出されています。

または

<see cref="T:System.Web.UI.DataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトが null です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが更新操作を実行するときに呼び出されるページのメソッドの名前を取得または設定します。</summary>
        <value>コントロールが更新操作を実行するときに呼び出されるページ上のメソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
