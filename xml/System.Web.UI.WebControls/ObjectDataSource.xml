<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e618e3e7e0150367c594bb09c3ea35f3f4256d3" /><Meta Name="ms.sourcegitcommit" Value="83d757eaee63e682417f41094d711281691d9aba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/10/2020" /><Meta Name="ms.locfileid" Value="78956577" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>多階層 Web アプリケーション アーキテクチャで、データ バインド コントロールにデータを提供するビジネス オブジェクトを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 このトピックの内容:

-   [はじめに](#introduction)

-   [目的](#purpose)

-   [データの取得](#retrieving_data)

-   [データ操作の実行](#performing_data_operations)

-   [データのフィルター処理](#filtering_data)

-   [キャッシュ](#caching)

-   [機能](#features)

-   [[Data View] (データ ビュー)](#data_view)

-   [LINQ to SQL の使用](#using_linq_to_sql)

-   [宣言型の構文](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>はじめに
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、作成するクラスで動作します。 データを取得および更新するメソッドを作成し、それらのメソッドの名前をマークアップの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに指定します。 レンダリングまたはポストバック処理中に、<xref:System.Web.UI.WebControls.ObjectDataSource> は、指定したメソッドを呼び出します。

 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの視覚的なレンダリングはありません。 このため、<xref:System.Web.UI.WebControls.ObjectDataSource> は、<xref:System.Web.UI.DataSourceControl.EnableTheming%2A> や <xref:System.Web.UI.DataSourceControl.SkinID%2A> プロパティなどの視覚的な機能をサポートしていません。

<a name="purpose"></a>
## <a name="purpose"></a>目的
 非常に一般的なアプリケーションの設計方法は、プレゼンテーション層をビジネスロジックから分離し、ビジネスオブジェクトにビジネスロジックをカプセル化することです。 これらのビジネスオブジェクトは、プレゼンテーション層とデータ層の間に個別のレイヤーを形成し、その結果、3層アプリケーションアーキテクチャになります。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用すると、開発者は、3層アプリケーションアーキテクチャを保持しながら、ASP.NET データソースコントロールを使用できます。

 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、リフレクションを使用してビジネスオブジェクトのインスタンスを作成し、メソッドを呼び出してデータの取得、更新、挿入、および削除を行います。 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> が動作するクラスの名前を識別します。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、メソッド呼び出しごとにクラスのインスタンスを作成して破棄します。Web 要求の有効期間中は、オブジェクトをメモリ内に保持しません。 これは、使用するビジネスオブジェクトに多くのリソースが必要な場合、または作成と破棄にコストがかかる場合に、重大な考慮事項です。 高価なオブジェクトを使用することは、最適なデザイン選択ではない場合がありますが、オブジェクトのライフサイクルを制御するには、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを使用します。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>、および <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって識別されるメソッドは、インスタンスメソッドまたは `static` (`Shared`) メソッドにすることができます。 メソッドが `static` (Visual Basic で`Shared`) の場合、ビジネスオブジェクトのインスタンスは作成されず、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> のイベントは発生しません。

<a name="retrieving_data"></a>
## <a name="retrieving-data"></a>データの取得
 ビジネスオブジェクトからデータを取得するには、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティを、データを取得するメソッドの名前に設定します。 メソッドが <xref:System.Collections.IEnumerable> オブジェクトまたは <xref:System.Data.DataSet> オブジェクトを返さない場合、オブジェクトは <xref:System.Collections.IEnumerable> コレクションのランタイムによってラップされます。 メソッドシグネチャにパラメーターがある場合は、<xref:System.Web.UI.WebControls.Parameter> オブジェクトを <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクションに追加し、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドに渡す値にバインドできます。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールでパラメーターを使用するには、パラメーターがメソッドシグネチャ内のパラメーターの名前と型と一致している必要があります。 詳細については、「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。

 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドが呼び出されるたびにデータを取得します。 このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドにプログラムでアクセスできるようにします。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドは、`DataBind` メソッドが呼び出されたときに <xref:System.Web.UI.WebControls.ObjectDataSource> にバインドされているコントロールによって自動的に呼び出されます。 データバインドコントロールの `DataSourceID` プロパティを設定した場合、コントロールは必要に応じて、データソースのデータに自動的にバインドされます。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールをデータバインドコントロールにバインドするには、`DataSourceID` プロパティを設定することをお勧めします。 または、`DataSource` プロパティを設定することもできますが、その場合は、データバインドコントロールの `DataBind` メソッドを明示的に呼び出す必要があります。 いつでも <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドを呼び出して、データを取得できます。

 データバインドコントロールをデータソースコントロールにバインドする方法の詳細については、「[データソースコントロールを使用したデータへのバインド](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7)」を参照してください。

<a name="performing_data_operations"></a>
## <a name="performing-data-operations"></a>データ操作の実行
 <xref:System.Web.UI.WebControls.ObjectDataSource> 制御が使用するビジネスオブジェクトの機能によっては、更新、挿入、削除などのデータ操作を実行できます。 これらのデータ操作を実行するには、実行する操作の適切なメソッド名とそれに関連付けられているパラメーターを設定します。 たとえば、更新操作の場合は、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティを、更新を実行するビジネスオブジェクトメソッドの名前に設定し、必要なパラメーターを <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションに追加します。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがデータバインドコントロールに関連付けられている場合、パラメーターはデータバインドコントロールによって追加されます。 この場合は、メソッドのパラメーター名が、データバインドコントロール内のフィールド名と一致していることを確認する必要があります。 この更新は、<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> メソッドをコードによって明示的に呼び出すか、データバインドコントロールによって自動的に呼び出されると実行されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> と <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作についても、同じ一般的なパターンに従います。 ビジネスオブジェクトは、バッチ処理ではなく、一度に1つのレコードでこれらの種類のデータ操作を実行することを前提としています。

<a name="filtering_data"></a>
## <a name="filtering-data"></a>データのフィルター処理
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データが <xref:System.Data.DataSet> または <xref:System.Data.DataTable> オブジェクトとして返される場合、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって取得されるデータをフィルター処理できます。 書式指定文字列の構文を使用し、式の値を <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションに指定されているパラメーターにバインドすることによって、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティをフィルター式に設定できます。

<a name="caching"></a>
## <a name="caching"></a>キャッシュ
 <xref:System.Web.UI.WebControls.ObjectDataSource> は、ビジネスオブジェクトのインスタンスを複数の要求にわたって保持しませんが、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって識別されるメソッドを呼び出した結果をキャッシュすることができます。 データがキャッシュされている間、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドへの後続の呼び出しでは、ビジネスオブジェクトの作成とリフレクションを使用したその <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> の呼び出しではなく、キャッシュされたデータが返されます。 キャッシュを使用すると、Web サーバー上のメモリを犠牲にしてオブジェクトを作成し、そのデータメソッドを呼び出すことを回避できます。 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> プロパティが `true`に設定され、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティがキャッシュを破棄するまでにデータを格納する秒数に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource> はデータを自動的にキャッシュします。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティと省略可能な <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> プロパティを指定することもできます。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用すると、すべての種類のデータをキャッシュできますが、複数の要求を処理するために共有できないリソースや状態を保持するオブジェクト (たとえば、開いている <xref:System.Data.SqlClient.SqlDataReader> オブジェクト) をキャッシュすることはできません。これは、オブジェクトの同じインスタンスが複数の要求を処理するために使用されるためです。

<a name="features"></a>
## <a name="features"></a>[機能]
 次の表では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの機能について説明します。

|機能|要件|
|----------------|------------------|
|次を選択する|<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティを、データを選択するビジネスオブジェクトメソッドの名前に設定し、必要なパラメーターをプログラムによって、またはデータバインドコントロールを使用して <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクションに含めます。|
|並べ替え|<xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> プロパティを、並べ替え条件を含む <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> メソッドのパラメーターの名前に設定します。|
|Filtering|<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティをフィルター式に設定し、必要に応じて <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションにパラメーターを追加して、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドが呼び出されたときにデータをフィルター処理します。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドは、<xref:System.Data.DataSet> または <xref:System.Data.DataTable>を返す必要があります。|
|ページング|<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> メソッドに、取得するレコードの最大数のパラメーターと取得する最初のレコードのインデックスを含める場合、データソースのページングがサポートされます。 これらのパラメーターの名前は、<xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティと <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> プロパティでそれぞれ設定する必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドでは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがページングを直接サポートしていない場合でも、データバインドコントロールはページング自体を実行できる可能性があります。 これを実現するためのデータバインドコントロールの要件は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドが、<xref:System.Collections.ICollection> インターフェイスを実装するオブジェクトを返すことです。|
|更新中|<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティを、データを更新するビジネスオブジェクトメソッドの名前に設定し、必要なパラメーターを <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションに含めます。|
|削除中|<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティを、データを削除するビジネスオブジェクトのメソッドまたは関数の名前に設定し、必要なパラメーターを <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションに含めます。|
|挿入|<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティを、データを挿入するビジネスオブジェクトのメソッドまたは関数の名前に設定し、必要なパラメーターを <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションに含めます。|
|キャッシュ|<xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> プロパティを `true`に設定し、キャッシュされたデータに対して必要なキャッシュの動作に従って、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティと <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティを設定します。|

> [!NOTE]
>  <xref:System.Web.UI.WebControls.ObjectDataSource> クラスを使用してデータを更新または挿入する場合、クライアントで入力された文字列は、クライアントのカルチャ形式からサーバーのカルチャ形式に自動的に変換されません。 たとえば、クライアントカルチャでは、日付形式として DD/MM/YYYY を指定し、サーバーの日付形式を MM/DD/YYYY にすることができます。 この場合、2009年10月5日は5/10/2009 として <xref:System.Web.UI.WebControls.TextBox> コントロールに入力されますが、2009として解釈されます。 2009年10月15日は15/10/2009 として入力され、無効な日付として拒否されます。

<a name="data_view"></a>
## <a name="data-view"></a>データ ビュー
 すべてのデータソースコントロールと同様に、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールはデータソースビュークラスに関連付けられています。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、ページ開発者がデータを操作するために使用するインターフェイスですが、<xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスは、データバインドコントロールが操作するインターフェイスです。 さらに、<xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスは、データソースコントロールの機能を記述し、実際の作業を実行します。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールには、関連付けられた <xref:System.Web.UI.WebControls.ObjectDataSourceView>が1つだけあり、常に `DefaultView`という名前が付けられます。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトは <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> メソッドによって公開されますが、そのプロパティやメソッドの多くは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールによってラップされ、直接公開されます。 バックグラウンドでは、<xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトは、データの取得、挿入、更新、削除、フィルター処理、並べ替えなど、すべてのデータ操作を実行します。 詳細については、<xref:System.Web.UI.WebControls.ObjectDataSourceView> を参照してください。

<a name="using_linq_to_sql"></a>
## <a name="using-linq-to-sql"></a>LINQ to SQL の使用
 LINQ to SQL クラスを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用できます。 これを行うには、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティをデータコンテキストクラスの名前に設定します。 また、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>、および <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> の各メソッドを、対応する操作を実行するデータコンテキストクラスのメソッドに設定します。 データコンテキストクラスの破棄をキャンセルするには、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントのイベントハンドラーを作成する必要があります。 この手順が必要になるのは、LINQ to SQL で遅延実行がサポートされているのに対し、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは選択操作後にデータコンテキストを破棄しようとするためです。 LINQ to SQL クラスを作成する方法の詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。 データコンテキストクラスの破棄をキャンセルする方法の例については、「<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベント」を参照してください。

## <a name="using-the-entity-framework"></a>Entity Framework の使用
 Entity Framework で <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用することもできます。 詳細については、「 [Entity Framework と ObjectDataSource コントロールの使用](https://go.microsoft.com/fwlink/?LinkId=209117)」を参照してください。

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>宣言型の構文

```
<asp:ObjectDataSource
    CacheDuration="string|Infinite"
    CacheExpirationPolicy="Absolute|Sliding"
    CacheKeyDependency="string"
    ConflictDetection="OverwriteChanges|CompareAllValues"
    ConvertNullToDBNull="True|False"
    DataObjectTypeName="string"
    DeleteMethod="string"
    EnableCaching="True|False"
    EnablePaging="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    FilterExpression="string"
    ID="string"
    InsertMethod="string"
    MaximumRowsParameterName="string"
    OldValuesParameterFormatString="string"
    OnDataBinding="DataBinding event handler"
    OnDeleted="Deleted event handler"
    OnDeleting="Deleting event handler"
    OnDisposed="Disposed event handler"
    OnFiltering="Filtering event handler"
    OnInit="Init event handler"
    OnInserted="Inserted event handler"
    OnInserting="Inserting event handler"
    OnLoad="Load event handler"
    OnObjectCreated="ObjectCreated event handler"
    OnObjectCreating="ObjectCreating event handler"
    OnObjectDisposing="ObjectDisposing event handler"
    OnPreRender="PreRender event handler"
    OnSelected="Selected event handler"
    OnSelecting="Selecting event handler"
    OnUnload="Unload event handler"
    OnUpdated="Updated event handler"
    OnUpdating="Updating event handler"
    runat="server"
    SelectCountMethod="string"
    SelectMethod="string"
    SkinID="string"
    SortParameterName="string"
    SqlCacheDependency="string"
    StartRowIndexParameterName="string"
    TypeName="string"
    UpdateMethod="string"
    Visible="True|False"
>
        <DeleteParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </DeleteParameters>
        <FilterParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </FilterParameters>
        <InsertParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </InsertParameters>
        <SelectParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </SelectParameters>
        <UpdateParameters>
                <asp:ControlParameter
                    ControlID="string"
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:CookieParameter
                    ConvertEmptyStringToNull="True|False"
                    CookieName="string"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:FormParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    FormField="string"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:Parameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:ProfileParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    PropertyName="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:QueryStringParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    QueryStringField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
                <asp:SessionParameter
                    ConvertEmptyStringToNull="True|False"
                    DefaultValue="string"
                    Direction="Input|Output|InputOutput|ReturnValue"
                    Name="string"
                    SessionField="string"
                    Size="integer"
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|
                        Single|Double|Decimal|DateTime|String"
                />
        </UpdateParameters>
</asp:ObjectDataSource>
```



## Examples
 このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838)できます。

 このセクションでは、.aspx ページのマークアップの <xref:System.Web.UI.WebControls.ObjectDataSource> について説明します。このセクションには、使用するビジネスオブジェクトが表示されます。 この例は .aspx ページです。 これには、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールにバインドされている <xref:System.Web.UI.WebControls.GridView> コントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールマークアップでは、ビジネスオブジェクトの名前と、データを取得するために呼び出すビジネスオブジェクトメソッドの名前を指定します。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]

 次の例は、.aspx ページの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが使用するビジネスオブジェクトを示しています。 (他の多くの <xref:System.Web.UI.WebControls.ObjectDataSource> コード例でも、このビジネスオブジェクトを使用しています)。この例は、次の2つの基本クラスで構成されています。

-   `EmployeeLogic` クラスは、<xref:System.Web.UI.WebControls.ObjectDataSource> が使用するビジネスロジッククラスです。

-   `NorthwindEmployee` クラスは、`EmployeeLogic` クラスの `GetAllEmployees` メソッドによって返されるデータオブジェクトを定義します。

 追加の `NorthwindDataException` クラスが便宜的に提供されています。

 この一連のクラスの例は、Microsoft SQL Server および Microsoft Access で利用できる Northwind Traders データベースと連携しています。 完全な作業例については、提供されている .aspx ページの例でこれらのクラスをコンパイルして使用する必要があります。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">チュートリアル: カスタムビジネスオブジェクトへのデータバインディング</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するクラスの名前。</param>
        <param name="selectMethod"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> がデータを取得するために呼び出すメソッドまたは関数の名前。</param>
        <summary>型名とデータ取得メソッド名を指定して、<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `typeName` パラメーターの値には、Bin または App_Code ディレクトリに配置されているコードの部分修飾型、またはグローバルアセンブリキャッシュに登録されているコードの完全修飾型名を指定できます。 グローバルアセンブリキャッシュを使用する場合は、machine.config または web.config 構成ファイルの `assemblies` セクションに適切な参照を追加する必要があります。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティによって取得したデータを、データ ソース コントロールがキャッシュする時間 (秒単位) を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティの呼び出しの結果をキャッシュする秒数。 既定値は 0 です。 この値を負にすることはできません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データキャッシュをサポートしています。 データがキャッシュされている間、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの呼び出しは、<xref:System.Web.UI.WebControls.ObjectDataSource> が使用するビジネスオブジェクトからではなく、キャッシュからデータを取得します。 キャッシュが期限切れになると、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドはビジネスオブジェクトからデータを取得し、データを再度キャッシュします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> プロパティが `true` に設定され、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティが0より大きい値に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリが破棄される前にキャッシュがデータを格納する秒数を示します。 値が0の場合は、キャッシュが無限に長くなることを示します。

 キャッシュは、duration と <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 設定の組み合わせによって規制されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティが <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 値に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource> は <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの最初の呼び出し時にデータをキャッシュし、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティによって指定された時間だけ、メモリ内に格納します。 メモリが必要な場合は、期間が経過する前にデータが解放される可能性があります。 次に、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの呼び出し中にキャッシュが更新されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティが <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 値に設定されている場合、データソースコントロールは <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの最初の呼び出し時にデータをキャッシュしますが、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの後続の各呼び出しでキャッシュを保持する時間枠をリセットします。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの最後の呼び出し以降に <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティと同じ時間にアクティビティがない場合、キャッシュは期限切れになります。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトがキャッシュをサポートする方法を示しています。 2番目のコード例では、<xref:System.Data.DataSet> オブジェクトを返すラッパーメソッドを実装して、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトでのキャッシュを有効にする方法を示します。

 次のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがキャッシュをサポートする方法を示しています。 キャッシュを有効にするには、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって識別されるデータを取得するメソッドを実装して、データを <xref:System.Data.DataSet> オブジェクトとして返す必要があります。 この例では、<xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> プロパティが `true`に設定されており、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> および <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティが設定されています。 <xref:System.Web.UI.WebControls.ObjectDataSource> は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって返されたデータを30秒間キャッシュします。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]

 次のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールでキャッシュを有効にするために <xref:System.Data.DataSet> オブジェクトを返すラッパーメソッドを実装する方法を示しています。 `EmployeeLogic` クラスの基本実装では、`GetAllEmployees` メソッドは <xref:System.Collections.ArrayList> オブジェクトを返します。 Web フォームページで <xref:System.Web.UI.WebControls.ObjectDataSource> を操作するためにオブジェクトを完全にリファクタリングするのではなく、`GetAllEmployeesAsDataSet` という名前のラッパーメソッドを追加して、`NorthwindEmployee` データのセットを <xref:System.Data.DataSet>として返します。

 このコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> クラス用に用意されている大規模な例の一部です。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>存続期間と組み合わせた場合の、データ ソース コントロールが使用するキャッシュの動作を記述するキャッシュの有効期限の動作を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.DataSourceCacheExpiry" /> 値のいずれか 1 つです。 既定では、 <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データキャッシュをサポートしています。 データがキャッシュされている間、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの呼び出しは、<xref:System.Web.UI.WebControls.ObjectDataSource> が使用するビジネスオブジェクトからではなく、キャッシュからデータを取得します。 キャッシュが期限切れになると、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドはビジネスオブジェクトからデータを取得し、データを再度キャッシュします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> プロパティが `true` に設定され、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティが0より大きい値に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリが破棄される前にキャッシュがデータを格納する秒数を示します。 値0はキャッシュ期間が無限であることを示します。

 キャッシュは、duration と <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 設定の組み合わせによって規制されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティが <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> 値に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource> は <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの最初の呼び出し時にデータをキャッシュし、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティによって指定された時間だけ、メモリ内に格納します。 メモリが必要な場合は、期間が経過する前にデータが解放される可能性があります。 次に、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの呼び出し中にキャッシュが更新されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティが <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> 値に設定されている場合、データソースコントロールは <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの最初の呼び出し時にデータをキャッシュしますが、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの後続の呼び出しごとにキャッシュを保持する時間枠をリセットします。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの最後の呼び出し以降に <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティと同じ時間にアクティビティがない場合、キャッシュは期限切れになります。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトがフィルター処理とキャッシュをサポートする方法を示しています。 2番目のコード例では、<xref:System.Data.DataSet> オブジェクトを返すラッパーメソッドを実装し、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトを使用してキャッシュとフィルター処理を有効にする方法を示します。

 次のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがフィルター処理とキャッシュをサポートする方法を示しています。 フィルター処理とキャッシュを有効にするには、データを取得するメソッドを実装する必要があります。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって識別され、データを <xref:System.Data.DataSet> オブジェクトとして返します。 この例では、`EmployeeLogic` オブジェクトが <xref:System.Data.DataSet>としてデータを返し、<xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> プロパティが `true`に設定されており、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティと <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティが設定されているため、キャッシュが有効になっています。 <xref:System.Web.UI.WebControls.ObjectDataSource> は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって返されたデータを30秒間キャッシュします。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]

 次のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールでキャッシュとフィルター処理を有効にするために <xref:System.Data.DataSet> オブジェクトを返すラッパーメソッドを実装する方法を示しています。 `EmployeeLogic` クラスの基本実装では、`GetAllEmployees` メソッドは <xref:System.Collections.ArrayList>を返します。 Web フォームページで <xref:System.Web.UI.WebControls.ObjectDataSource> を操作するためにオブジェクトを完全にリファクタリングするのではなく、`GetAllEmployeesAsDataSet` という名前のラッパーメソッドを追加して、`NorthwindEmployee` データのセットを <xref:System.Data.DataSet>として返します。 このコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> クラス用に用意されている大規模な例の一部です。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース コントロールによって作成されたすべてのデータ キャッシュ オブジェクトにリンクされる、ユーザー定義のキー依存関係を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> によって作成されたすべてのキャッシュ オブジェクトを識別するキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> プロパティには任意の文字列値を設定できます。

 キーの有効期限が切れると、すべてのキャッシュ オブジェクトが明示的に期限切れになります。 これにより、プログラムによって独自のページコードから <xref:System.Web.UI.WebControls.ObjectDataSource> によって作成されたキャッシュエントリを無効にすることができます。

 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データキャッシュをサポートしています。 データがキャッシュされている間、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの呼び出しは、<xref:System.Web.UI.WebControls.ObjectDataSource> が使用するビジネスオブジェクトからではなく、キャッシュからデータを取得します。 キャッシュが期限切れになると、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドはビジネスオブジェクトからデータを取得し、データを再度キャッシュします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> プロパティが `true` に設定され、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティが0より大きい値に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリが破棄される前にキャッシュがデータを格納する秒数を示します。 値が0の場合は、キャッシュが無限に長くなることを示します。

 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとキーで作成されたすべてのキャッシュエントリの間に依存関係を作成するには、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> プロパティを設定します。 キーを期限切れにすると、すべてのキャッシュエントリをプログラムで有効期限切れにすることができます。 現在の <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 値をパラメーターとして <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> メソッドを使用して、キーを期限切れにします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>、および <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> の各プロパティの組み合わせごとに一意のキャッシュエントリが作成されます。 複数の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、同じ型、メソッド、およびパラメーターを使用してデータを読み込むシナリオで、同じキャッシュエントリを使用できます。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、および Northwind データベースの Employees テーブルからレコードを取得するデータアクセスクラスを示しています。

 最初の例は、2つの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、<xref:System.Web.UI.WebControls.DropDownList> コントロール、および <xref:System.Web.UI.WebControls.DetailsView> コントロールを含む Web ページを示しています。 最初の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DropDownList> コントロールを使用して、データベースから従業員名を取得して表示します。 2番目の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して、ユーザーが選択した従業員レコードを取得して表示します。

 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに対してキャッシュが有効になっています。 そのため、各レコードはデータベースから1回だけ取得されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> プロパティは "従業員の詳細" に設定されますが、文字列値はキーとして使用できます。 この Web ページには、ユーザーがクリックしてキャッシュされたデータを期限切れにすることができる <xref:System.Web.UI.WebControls.Button> コントロールも含まれています。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]

 2番目の例では、<xref:System.Web.UI.Control.Load> イベントのハンドラーと、<xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.WebControls.Button.Click> イベントのハンドラーを示します。 <xref:System.Web.UI.Control.Load> イベントハンドラーは、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 値に設定されたキーを持つキャッシュ項目を作成します。 <xref:System.Web.UI.WebControls.Button.Click> イベントハンドラーは、キーが <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 値と等しいキャッシュ項目を削除します。 キャッシュ項目が削除されると、キーに依存しているすべてのキャッシュされたデータの有効期限が切れます。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]

 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Update" /> メソッドに新しい値だけを渡すか、<see langword="Update" /> メソッドに新旧両方の値を渡すかを決定する値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ConflictOptions" /> 値のいずれか 1 つです。 既定では、 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このプロパティは、古い値と新しい値のパラメーターが、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティで指定されたメソッドに適用されるかどうかを決定します。 たとえば、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドが、`Name` と `Number`の列を持つ <xref:System.Data.DataTable> コントロールを返し、<xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.OverwriteChanges> フィールドに設定されている場合、`Name` 用のパラメーターと `Number` メソッドに対して `Update` が作成されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定されている場合、`Name`、`Number`、`original_Name`、および `original_Number`に対してパラメーターが作成されます。 (元の値のパラメーターの正確な名前は、<xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> プロパティによって異なります)。<xref:System.Web.UI.WebControls.ObjectDataSource> は、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティで指定されたメソッドに一致するパラメーターがあるかどうかを判断します。

 同時実行制御は、複数のクライアントが同じデータにアクセスして操作しているときに、ストア内のデータの読み取りと変更の方法を制御するためにデータストアで使用される手法です。 たとえば、あるクライアントがデータを読み取り、ユーザーに提示し、別のクライアントが同じデータを読み取って別のユーザーに提示します。 両方のユーザーがデータを更新してデータストレージに送信した場合、両方のクライアントが同じデータに対して異なる値を提供する可能性があるため、予期しない結果が発生する可能性があります。 これは、競合と見なされます。 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> プロパティを <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定することによって、`Update` メソッドは、古い値と新しい値を元のデータソースと比較して、競合を検出し、必要に応じて処理することができます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティに委任されます。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新、挿入、削除の各操作に渡される <see cref="T:System.Web.UI.WebControls.Parameter" /> 値を、<see langword="null" /> コントロールで <see cref="F:System.DBNull.Value" /> から <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 値に自動的に変換するかどうかを示す値を取得または設定します。</summary>
        <value><see langword="true" /> コントロールに渡される <see langword="null" /> オブジェクトのすべての <see cref="T:System.Web.UI.WebControls.Parameter" /> 値を <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 値に自動的に変換する場合は <see cref="F:System.DBNull.Value" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 `null` を <xref:System.DBNull.Value> の値に変換しないと、実行時にエラーが発生する可能性があります。 更新、挿入、または削除の各操作に渡された <xref:System.Web.UI.WebControls.Parameter> 値が、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールによって `null` から <xref:System.DBNull.Value> の値に自動的に変換されるかどうかを示すには、<xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> プロパティを使用します。

 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールが、データ バインド コントロールから個々の値を渡す代わりに、データの更新、挿入、削除の各操作のパラメーターに使用するクラスの名前を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> の各操作のパラメーターとして使用できるオブジェクトの型を識別する、部分修飾クラス名または完全修飾クラス名。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>、および <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドに渡されるいくつかのパラメーターを指定する代わりに、複数のデータフィールド値を集計する1つのオブジェクトを作成できます。 この1つのオブジェクトは、複数のパラメーターではなく、メソッドに渡されます。

 データバインドコントロールにバインドされている <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの既定の動作では、データバインドコントロールによって、データソース内の各パラメーターの <xref:System.Web.UI.WebControls.Parameter> オブジェクトが作成されます。 ビジネスオブジェクトに多数のフィールドがある場合、結果として得られるメソッドにも多くのフィールドがあります。 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティを使用すると、各データフィールドのプロパティを持つ型を指定できます。 次に、メソッドに複数のパラメーターを渡す代わりに、ランタイムが1つのオブジェクトを作成し、そのすべてのプロパティを設定します。 この1つのオブジェクトが、メソッド呼び出しの parameters コレクションに追加されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティによって指定された型には、パラメーターを持たないパラメーターなしのコンストラクターが必要です。したがって、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールでは、型のインスタンスを作成できます。 また、型には、データバインドコントロールから渡される値をオブジェクトに設定できる <xref:System.Web.UI.WebControls.ObjectDataSource> ようにする設定可能なプロパティも設定する必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールのプロパティ名は、データバインドコントロールによって渡される値のパラメーター名と正確に一致している必要があります。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティが設定されていて、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがデータバインドコントロールに関連付けられている場合、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> および <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって指定されるメソッドは、それぞれ、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティで指定された型のパラメーターを1つ持つ必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 値に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティによって指定されるメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティで指定されている型のパラメーターを1つ持つ必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティによって指定されるメソッドには、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティで指定されている型の2つのパラメーターが必要です。 最初のパラメーターには、元の値が含まれます。2番目のパラメーターには、新しい値が含まれています。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> の <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> プロパティに委任されます。



## Examples
 このセクションには、2つのコード例が含まれています。 最初のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティを使用して、すべてのパラメーター値を1つのオブジェクトに結合する型を実装する方法を示します。 2番目のコード例では、最初のコード例で使用されている2つのクラスを使用する Web ページを示します。

 次のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティを使用して、すべてのパラメーター値を1つのオブジェクトに結合する型を実装する方法を示しています。 `AggregateData` クラスの select メソッドは、`Name` と `Number`という名前の2つの列を持つ <xref:System.Data.DataTable> オブジェクトを返します。 同様に、`NewData` クラスは、`Name` と `Number`の2つの読み取り/書き込みプロパティを定義します。 `AggregateData` クラスの `Insert` メソッドは、`NewData`型のパラメーターを1つ受け取ります。 <xref:System.Web.UI.WebControls.ObjectDataSource> の `TypeName` プロパティが `AggregateData` に設定され、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティが `NewData`に設定されています。

 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]

 次のコード例は、前のコード例で使用されている2つのクラスを使用する Web ページを示しています。

 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">ObjectDataSource コントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> コレクション内のパラメーターを持つ <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" /> プロパティで識別されるメソッドを呼び出して削除操作を実行します。</summary>
        <returns><see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> イベントで <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> の <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> プロパティを設定する場合は、基になるデータ ストレージから削除する行数を表す値。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 操作が実行される前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> メソッドが呼び出されて、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントを処理して、パラメーターの値を調べたり、<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 操作の前に前処理を実行したりすることができます。 削除操作を実行するために、<xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトは、リフレクションを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティによって識別されるオブジェクトのインスタンスを作成します。 次に、関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって識別されるメソッドを呼び出します。 削除パラメーターが、関連付けられたデータバインドコントロールから取得される場合、パラメーターの名前は <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> プロパティに従って作成されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 操作が完了すると、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベントを処理して、戻り値、出力パラメーター、および例外を調べたり、後処理を実行したりすることができます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> メソッドにデリゲートします。

## <a name="data-bound-controls"></a>データバインドコントロール
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが、<xref:System.Web.UI.WebControls.GridView> コントロールなどのデータバインドコントロールに関連付けられている場合、ページコードから <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドを呼び出す必要はありません。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドは、代わりにデータバインドコントロールによって直接呼び出されます。

 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベントを処理して、戻り値または出力パラメーターの値を調べたり、<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 操作の完了後に例外がスローされたかどうかを確認したりします。 戻り値、出力パラメーター、および例外処理のプロパティは、イベントに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> オブジェクトから使用できます。

 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドから削除された行の数を返すことができます。 これを行うには、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> プロパティを設定します。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって指定されたメソッドから、削除された行数を返した場合は、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> プロパティから値を取得できます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.GridView> コントロールを使用してデータを削除する方法を示します。 2番目のコード例は、最初のコード例で使用される `EmployeeLogic` クラスを示しています。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用してデータを削除する方法を示します。 最初は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドを使用して `EmployeeLogic` オブジェクトからデータを取得する、すべての従業員のセットが <xref:System.Web.UI.WebControls.GridView> コントロールに表示されます。 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> プロパティは `true`に設定されているので、<xref:System.Web.UI.WebControls.GridView> コントロールでは、**[削除]** ボタンが自動的に表示されます。

 **[削除]** ボタンをクリックすると、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって指定されたメソッドと <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションで指定されているパラメーターを使用して、削除操作が実行されます。 このコード例では、一部の前処理と後処理の手順も実行します。 `NorthwindEmployeeDeleting` デリゲートは、操作が実行される前に <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントを処理するために呼び出され、`NorthwindEmployeeDeleted` デリゲートを呼び出して、例外処理を実行するために操作が完了した後に <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベントを処理します。 このコード例では、`NorthwindDataException` がスローされた場合、`NorthwindEmployeeDeleted` メソッドによって処理されます。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]

 次のコード例は、前のコード例で使用されている `EmployeeLogic` クラスを示しています。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールがデータを削除するために呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>データを削除するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ビジネスオブジェクトは、バッチではなく、一度に1つのレコードを削除することを想定しています。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティに委任されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクション内の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに構成されているパラメーター名が、select メソッドによって返される列名と一致していることを確認します。

## <a name="object-lifetime"></a>オブジェクトの有効期間
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって識別されるメソッドは、インスタンスメソッドまたは `static``Shared` (Visual Basic) メソッドにすることができます。 インスタンスメソッドの場合は、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティが呼び出されるたびにビジネスオブジェクトが作成され、破棄されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティが呼び出される前に、ビジネスオブジェクトを操作するために、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理できます。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティが呼び出された後に発生する <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理することもできます。 ビジネスオブジェクトが <xref:System.IDisposable> インターフェイスを実装している場合、オブジェクトが破棄される前に <xref:System.IDisposable.Dispose%2A> メソッドが呼び出されます。 メソッドが `static` (Visual Basic で`Shared`) メソッドの場合、ビジネスオブジェクトは作成されず、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理することはできません。

## <a name="parameter-merging"></a>パラメーターのマージ
 パラメーターは、次の3つのソースから <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションに追加されます。

-   実行時にデータバインドコントロールから。

-   `DeleteParameters` 要素から宣言によって。

-   `Deleting` メソッドから宣言によって。

 まず、データバインドコントロールから生成されたすべてのパラメーターが <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションに追加されます。 たとえば、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが、列 `Name` および `Number`を持つ <xref:System.Web.UI.WebControls.GridView> コントロールにバインドされている場合、`Name` と `Number` のパラメーターはコレクションに追加されます。 パラメーターの正確な名前は、<xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> プロパティによって異なります。 これらのパラメーターのデータ型は `string`です。 次に、`DeleteParameters` 要素に示されているパラメーターが追加されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクション内に既に存在するパラメーターと同じ名前を持つ `DeleteParameters` 要素内のパラメーターが見つかった場合、`DeleteParameters` 要素で指定されたパラメーターに一致するように既存のパラメーターが変更されます。 通常、これは、パラメーター内のデータの型を変更するために使用されます。 最後に、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントのパラメーターをプログラムによって追加および削除できます。このイベントは、<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドが実行される前に発生します。 メソッドは、パラメーターがマージされた後に解決されます。 メソッドの解決方法については、次のセクションで説明します。

## <a name="method-resolution"></a>メソッドの解決方法
 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドが呼び出されると、データバインドコントロールのデータフィールド、`DeleteParameters` 要素で宣言によって作成されたパラメーター、および <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントハンドラーに追加されたパラメーターがすべてマージされます。 (詳細については、前のセクションを参照してください)。次に、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトは、呼び出すメソッドの検索を試みます。 まず、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティで指定された名前を持つ1つ以上のメソッドを検索します。 一致するものが見つからない場合は、<xref:System.InvalidOperationException> 例外がスローされます。 一致するものが見つかった場合は、一致するパラメーター名が検索されます。 たとえば、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティによって指定された型に `DeleteARecord`という2つのメソッドがあるとします。 1つの `DeleteARecord` に1つのパラメーターがあり `ID`、もう一方の `DeleteARecord` には、`Name` と `Number`の2つのパラメーターがあります。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションに `ID`という名前のパラメーターが1つしかない場合、`ID` パラメーターだけを持つ `DeleteARecord` メソッドが呼び出されます。 パラメーターの型は、メソッドの解決時にチェックされません。 パラメーターの順序は重要ではありません。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティが設定されている場合、メソッドは別の方法で解決されます。 <xref:System.Web.UI.WebControls.ObjectDataSource> は、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティで指定された名前のメソッドを検索します。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティで指定された型のパラメーターを1つ受け取ります。 この場合、パラメーターの名前は関係ありません。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.GridView> コントロールを使用してデータを削除する方法を示します。 2番目のコード例は、最初のコード例で使用される `EmployeeLogic` クラスを示しています。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用してデータを削除する方法を示します。 最初は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドを使用して `EmployeeLogic` オブジェクトからデータを取得する、すべての従業員のセットが <xref:System.Web.UI.WebControls.GridView> コントロールに表示されます。 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> プロパティは `true`に設定されているので、<xref:System.Web.UI.WebControls.GridView> コントロールでは、**[削除]** ボタンが自動的に表示されます。

 **[削除]** ボタンをクリックすると、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって指定されたメソッドと <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションで指定されているパラメーターを使用して、削除操作が実行されます。 このコード例では、一部の前処理と後処理の手順も実行します。 `NorthwindEmployeeDeleting` デリゲートは、操作が実行される前に <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントを処理するために呼び出され、`NorthwindEmployeeDeleted` デリゲートを呼び出して、例外処理を実行するために操作が完了した後に <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベントを処理します。 この例では、`NorthwindDataException` がスローされると、`NorthwindDataException` デリゲートによって処理されます。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]

 次のコード例は、前のコード例で使用されている `EmployeeLogic` クラスを示しています。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> メソッドによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> メソッドによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションに含まれるパラメーターの名前と型は、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> メソッドシグネチャ内のパラメーターの名前と型と一致する必要があります。 パラメーター名は <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> プロパティの影響を受け、大文字と小文字が区別されます。 コレクション内のパラメーターは、データバインドコントロール内のデータ、宣言によって指定されるパラメーター、およびプログラムによって追加されるパラメーターによって異なります。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>」と「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトに含まれる <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> プロパティを取得します。

 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>」を参照してください。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.GridView> コントロールを使用してデータを削除する方法を示します。 2番目のコード例は、最初のコード例で使用される `EmployeeLogic` クラスを示しています。

 次のコード例では、ビジネスオブジェクトで <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> プロパティを使用し、データを削除する <xref:System.Web.UI.WebControls.GridView> コントロールを使用する方法を示します。 最初は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドを使用して `EmployeeLogic` オブジェクトからデータを取得する、すべての従業員のセットが <xref:System.Web.UI.WebControls.GridView> コントロールに表示されます。 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> プロパティは `true`に設定されているので、<xref:System.Web.UI.WebControls.GridView> コントロールでは、**[削除]** ボタンが自動的に表示されます。

 **[削除]** ボタンをクリックすると、2つのパラメーターを使用して <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントが呼び出されます。 1つのパラメーターである `EmpID`は、<xref:System.Web.UI.WebControls.DataGrid> コントロールから取得され、<xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティに基づいています。 もう1つのパラメーターは、宣言型の <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> プロパティから取得されます。 `EmployeeLogic` クラスは、`DeleteEmployee` メソッドをオーバーロードします。 一方のオーバーロードは `NorthwindEmployee` パラメーターを受け取り、もう1つのオーバーロードは `anID`という名前の <xref:System.Int32> パラメーターを受け取ります。 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントでは、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> プロパティのエントリが、`original_EmpID`の値を持つ `anID` という名前のパラメーターを1つだけ含むように調整されます。 イベントハンドラーが存在する場合、一致する `DeleteEmployee` メソッドが呼び出されます。

 次のコード例は、<xref:System.Web.UI.WebControls.DataGrid> コントロールを表示し、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントを処理する Web ページを示しています。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]

 次のコード例は、前のコード例で使用されている `EmployeeLogic` クラスを示しています。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントを処理して、アプリケーション固有の追加の初期化を実行したり、パラメーターの値を検証したり、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールで削除操作を実行する前にパラメーター値を変更したりします。 パラメーターは、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> オブジェクトによって公開される <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> プロパティによってアクセスされる <xref:System.Collections.IDictionary> コレクションとして使用できます。

 削除操作を取り消すには、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> の [<xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A>] プロパティを `true`に設定します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.GridView> コントロールを使用してデータを削除する方法を示します。 2番目のコード例は、最初のコード例で使用される `EmployeeLogic` クラスを示しています。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用してデータを削除する方法を示します。 最初は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドを使用して `EmployeeLogic` オブジェクトからデータを取得する、すべての従業員のセットが <xref:System.Web.UI.WebControls.GridView> コントロールに表示されます。 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> プロパティは `true`に設定されているので、<xref:System.Web.UI.WebControls.GridView> コントロールでは、**[削除]** ボタンが自動的に表示されます。

 **[削除]** ボタンをクリックすると、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって指定されたメソッドと <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションで指定されているパラメーターを使用して、削除操作が実行されます。 このコード例では、一部の前処理と後処理の手順も実行します。 `NorthwindEmployeeDeleting` デリゲートは、操作が実行される前に <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントを処理するために呼び出され、`NorthwindEmployeeDeleted` デリゲートを呼び出して、例外処理を実行するために操作が完了した後に <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベントを処理します。 このコード例では、`NorthwindDataException` がスローされた場合、`NorthwindEmployeeDeleted` メソッドによって処理されます。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]

 次のコード例は、前のコード例で使用されている `EmployeeLogic` クラスを示しています。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールでデータ キャッシュが有効かどうかを示す値を取得または設定します。</summary>
        <value>データ ソース コントロールでデータ キャッシュが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データキャッシュをサポートしています。 データがキャッシュされている間、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの呼び出しでは、ビジネスオブジェクトのインスタンスの作成とそのデータメソッドの呼び出し <xref:System.Web.UI.WebControls.ObjectDataSource> ではなく、キャッシュからデータを取得します。 キャッシュが期限切れになると、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドはビジネスオブジェクトからデータを取得し、データを再度キャッシュします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> プロパティが `true` に設定され、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> プロパティが0より大きい値に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリが破棄される前にキャッシュがデータを格納する秒数を示します。 値が0の場合は、キャッシュが無限に長くなることを示します。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、および Northwind データベースの Employees テーブルからレコードを取得するデータアクセスクラスを示しています。

 最初の例は、2つの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、<xref:System.Web.UI.WebControls.DropDownList> コントロール、および <xref:System.Web.UI.WebControls.DetailsView> コントロールを含む Web ページを示しています。 最初の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DropDownList> コントロールを使用して、データベースから従業員名を取得して表示します。 2番目の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して、ユーザーが選択した従業員レコードを取得して表示します。

 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに対してキャッシュが有効になっています。 そのため、各レコードはデータベースから1回だけ取得されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> プロパティは "従業員の詳細" に設定されますが、文字列値はキーとして使用できます。 この Web ページには、ユーザーがクリックしてキャッシュされたデータを期限切れにすることができる <xref:System.Web.UI.WebControls.Button> コントロールも含まれています。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]

 2番目の例では、<xref:System.Web.UI.Control.Load> イベントのハンドラーと、<xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.WebControls.Button.Click> イベントのハンドラーを示します。 <xref:System.Web.UI.Control.Load> イベントハンドラーは、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 値に設定されたキーを持つキャッシュ項目を作成します。 <xref:System.Web.UI.WebControls.Button.Click> イベントハンドラーは、キーが <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> 値と等しいキャッシュ項目を削除します。 キャッシュ項目が削除されると、キーに依存しているすべてのキャッシュされたデータの有効期限が切れます。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]

 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> プロパティで指定されたメソッドが <see langword="true" /> を返すと、<see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティが <see cref="T:System.Data.Common.DbDataReader" /> に設定されます。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース コントロールが取得したデータ セットを使用するページングをサポートしているかどうかを示す値を取得または設定します。</summary>
        <value>データ ソース コントロールが取得したデータを使用するページングをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールによるページングを処理するには、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> の <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>、および <xref:System.Web.UI.WebControls.ObjectDataSource> の各プロパティを設定し、適切なパラメーターを使用してビジネスオブジェクトの select メソッドを定義します。 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> プロパティが `true`に設定されている場合、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクションには、要求された最初の行の2つの追加パラメーターと、要求された行数が含まれます。 これらの2つのパラメーターには、<xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> プロパティと <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティによって定義された名前が付けられます。 `Select` メソッドは、指定されたインデックスを開始位置として、要求された行数を返す必要があります。 データはページサイズによって均等に分割されない場合があるため、最後のページの行数が少なくなる可能性があります。 したがって、要求された行数は実際に返される行の最大数になります。

 関連付けられているデータバインドコントロールでページングが有効になっている場合、データバインドコントロールは、開始インデックスと必要な行数を指定して `Select` メソッドを呼び出します。 また、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティが設定されている場合、データバインドコントロールはページャーコントロールを表示する前にメソッドを呼び出します。 たとえば、<xref:System.Web.UI.WebControls.GridView> コントロールのページングのページサイズが5で、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティによって指定されたメソッドが20を返した場合、ポケットベルでは4ページのみが表示されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> プロパティにデリゲートします。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、およびページに表示されるレコード数をユーザーが選択できるようにするデータアクセスクラスを示しています。

 この Web ページには、<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> プロパティが `true`に設定されている <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティは、クエリ内のレコードの合計数を返すメソッドの名前に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティと <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> プロパティは、Select メソッドで使用されるパラメーターの名前に設定されます。 このページには、<xref:System.Web.UI.WebControls.DropDownList> コントロールも含まれています。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]

 2番目の例は、<xref:System.Web.UI.WebControls.DropDownList> コントロールの <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> イベントのハンドラーを示しています。 ハンドラーのコードは、<xref:System.Web.UI.WebControls.GridView.PageSize%2A> プロパティをユーザーの選択に設定します。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]

 3番目の例は、Customers テーブルからデータを取得するデータアクセスクラスを示しています。 これには、`GetSubsetOfEmployees`という名前のメソッドが含まれています。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティに割り当てられています。 この例には、`GetEmployeeCount`という名前のメソッドも含まれています。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティに割り当てられています。 クラスは、LINQ を使用して Customers テーブルに対してクエリを実行します。 この例では、Northwind データベースと Customers テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティで指定されたメソッドの呼び出し時に適用されるフィルター式を取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティで識別されるメソッドまたは関数を使用してデータを取得するときに適用されるフィルター式を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドが <xref:System.Data.DataSet> または <xref:System.Data.DataTable> オブジェクトを返す場合にのみ、データのフィルター処理をサポートします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティに使用される構文は、書式設定文字列形式の式です。 フィルター式の構文は、<xref:System.Data.DataColumn.Expression%2A> プロパティで受け入れられる構文と同じです。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションにパラメーターを追加する場合は、書式文字列のプレースホルダーを含めることもできます。 たとえば、パラメーター値を置き換えるには、式に `"{0}"` を含めます。 プレースホルダーは、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクション内のパラメーターのインデックスに従って置き換えられます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティにパラメーターを含めることができます。 パラメーターの型が文字列型または文字型である場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型の場合、引用符は必要ありません。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションには、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティで検出されたプレースホルダーに対して評価されるパラメーターが含まれています。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> プロパティに委任されます。

> [!NOTE]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返される <xref:System.Data.DataSet> オブジェクトまたは <xref:System.Data.DataTable> オブジェクトに適用します。 返される項目の数を制限するセキュリティ対策として <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティを使用している場合は、フィルター処理が行われる前にパラメーター値を検証する必要があります。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用して、中間層のビジネスオブジェクトからデータを取得し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して結果を表示する方法を示します。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データを取得するメソッドが <xref:System.Data.DataSet> または <xref:System.Data.DataTable> オブジェクトとして取得する場合にのみ、データをフィルター処理できます。 このため、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティは、データを <xref:System.Data.DataSet>として取得するビジネスオブジェクトのメソッドを識別します。

 このコード例は、<xref:System.Web.UI.WebControls.TextBox> コントロール、<xref:System.Web.UI.WebControls.GridView> コントロール、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、および **[送信]** ボタンで構成されています。 既定では、<xref:System.Web.UI.WebControls.TextBox> に Northwind Traders の従業員の1つの名前が設定されます。 <xref:System.Web.UI.WebControls.GridView> には、<xref:System.Web.UI.WebControls.TextBox>の名前で識別される従業員に関する情報が表示されます。 別の従業員のデータを取得するには、<xref:System.Web.UI.WebControls.TextBox>に従業員の氏名を入力し、**[送信]** ボタンをクリックします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドによって取得されるデータをフィルター処理するために使用される式を指定します。 これは、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションに含まれるパラメーターに評価されるパラメーターのプレースホルダーを使用します。 この例では、パラメーターの型はスペースを含む可能性がある文字列型であるため、パラメータープレースホルダーは単一引用符で囲まれています。 パラメーターの型が数値または日付型の場合、外接する引用符は必要ありません。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]

 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトの例を示しています。 このコード例は、次の2つの基本クラスで構成されています。

-   `EmployeeLogic` クラス。ビジネスロジックをカプセル化するクラスです。

-   `NorthwindEmployee` クラス。これは、データ層からデータを読み込み、永続化するために必要な基本的な機能のみを含むモデルクラスです。

 わかりやすくするために、`EmployeeLogic` クラスはデータ層からデータを取得するのではなく、静的なデータセットを作成します。 また、このサンプルでは、Northwind Traders の従業員の完全な名前を入力してフィルター処理を示すため、この例でも役立ちます。 完全な作業例については、提供されている Web フォームのコード例でこれらのクラスをコンパイルして使用する必要があります。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> プロパティが設定されていますが、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> メソッドが <see cref="T:System.Data.DataSet" /> または <see cref="T:System.Data.DataTable" /> を返しません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィルター操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがフィルター操作を実行する前に、フィルターパラメーター値に対して検証操作を実行するために <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> イベントを処理します。 <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> の [<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>] プロパティを `true`に設定することにより、選択した操作を取り消すことができます。 イベントは、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティが設定されている場合にのみ発生します。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> イベントは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> の <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> イベントにデリゲートします。

> [!IMPORTANT]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返される <xref:System.Data.DataSet> オブジェクトまたは <xref:System.Data.DataTable> オブジェクトに適用します。 返される項目の数を制限するセキュリティ対策として <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティを使用している場合は、フィルター処理が行われる前にパラメーター値を検証する必要があります。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> 文字列のパラメーター プレースホルダーに関連付けられたパラメーターのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティに含まれる任意のパラメーター プレースホルダーに関連付けられたパラメーターのセットを格納している <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドが <xref:System.Data.DataSet> または <xref:System.Data.DataTable> オブジェクトを返す場合にのみ、データのフィルター処理をサポートします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> に使用される構文は、書式設定文字列形式の式です。 フィルター式の構文は、<xref:System.Data.DataColumn.Expression%2A> プロパティで受け入れられる構文と同じです。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションにパラメーターを追加する場合は、書式文字列のプレースホルダーを含めることもできます。 たとえば、パラメーター値を置き換えるには、式に `"{0}"` を含めます。 プレースホルダーは、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクション内のパラメーターのインデックスに従って置き換えられます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティにパラメーターを含めることができます。 パラメーターが文字列型または文字型の場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型の場合、引用符は必要ありません。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトに含まれる <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> プロパティを取得します。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトを使用してフィルター選択されたデータを表示し、中間層ビジネスオブジェクトからデータを取得し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して結果を表示する方法を示します。 2番目のコード例では、最初のコード例で使用されている中間層ビジネスオブジェクトの例を示します。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用して、中間層のビジネスオブジェクトからデータを取得し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して結果を表示する方法を示します。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データを取得するメソッドが <xref:System.Data.DataSet> または <xref:System.Data.DataTable> オブジェクトとして取得する場合にのみ、データをフィルター処理できます。 このため、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティは、データを <xref:System.Data.DataSet>として取得するビジネスオブジェクトのメソッドを識別します。

 このコード例は、<xref:System.Web.UI.WebControls.TextBox> コントロール、<xref:System.Web.UI.WebControls.GridView> コントロール、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、および **[送信]** ボタンで構成されています。 既定では、<xref:System.Web.UI.WebControls.TextBox> に Northwind Traders の従業員の1つの名前が設定されます。 <xref:System.Web.UI.WebControls.GridView> には、<xref:System.Web.UI.WebControls.TextBox>の名前で識別される従業員に関する情報が表示されます。 別の従業員のデータを取得するには、<xref:System.Web.UI.WebControls.TextBox>で、従業員の氏名を入力し、**送信** ボタンをクリックします。

 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって取得されるデータをフィルター処理するために使用される式を指定します。 これは、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションに含まれるパラメーターに評価されるパラメーターのプレースホルダーを使用します。 この例では、パラメーターの型はスペースを含む可能性がある文字列型であるため、パラメータープレースホルダーは単一引用符で囲まれています。 パラメーターの型が数値または日付型の場合、外接する引用符は必要ありません。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションには、<xref:System.Web.UI.WebControls.TextBox> コントロールにバインドされた <xref:System.Web.UI.WebControls.FormParameter> オブジェクトであるパラメーターが1つ含まれています。

> [!IMPORTANT]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返される <xref:System.Data.DataView> オブジェクトに適用します。 返される項目の数を制限するセキュリティ対策として <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティを使用している場合は、フィルター処理が行われる前にパラメーター値を検証する必要があります。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]

 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトの例を示しています。 このコード例は、次の2つの基本クラスで構成されています。

-   `EmployeeLogic` クラス。ビジネスロジックをカプセル化するクラスです。

-   `NorthwindEmployee` クラス。これは、データ層からデータを読み込み、永続化するために必要な基本的な機能のみを含むモデルクラスです。

 わかりやすくするために、`EmployeeLogic` クラスはデータ層からデータを取得するのではなく、静的なデータセットを作成します。 また、このサンプルでは、Northwind Traders の従業員の完全な名前を入力してフィルター処理を示すため、この例でも役立ちます。 完全な作業例については、提供されている Web フォームのコード例でこれらのクラスをコンパイルして使用する必要があります。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> プロパティを設定していますが、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> メソッドが <see cref="T:System.Data.DataSet" /> または <see cref="T:System.Data.DataTable" /> を返しません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">取得するビューの名前。 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> がサポートするビューは 1 つだけであるため、<paramref name="viewName" /> は無視されます。</param>
        <summary>データ ソース コントロールに関連付けられた名前付きデータ ソース ビューを取得します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> に関連付けられた <see langword="DefaultView" /> という名前の <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールでサポートされるデータソースビューは1つだけです。 すべてのデータソースビューオブジェクトと同様に、データソースコントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> はその機能を定義し、基になるデータストレージからデータを取得するために必要なすべての作業を実行し、並べ替え、挿入、削除、更新などの操作を実行します。

 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> メソッドは、ページコードではなく、データバインドコントロールによって呼び出されることを意図しています。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された <paramref name="viewName" /> が <see langword="null" /> であるか、<see langword="DefaultView" /> 以外の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> オブジェクトに関連付けられたビュー オブジェクトのリストを表す名前のコレクションを取得します。</summary>
        <returns><see cref="T:System.Collections.ICollection" /> に関連付けられたビューの名前が格納されている <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、基になるデータに対して `DefaultView`という名前のビューを1つだけサポートします。 <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> メソッドは、この1つのビュー名の単一要素コレクションを返します。

 <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> メソッドは、ページコードではなく、データバインドコントロールによって呼び出されることを意図しています。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> プロパティと <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" /> コレクション内のパラメーターで識別されるメソッドを呼び出して挿入操作を実行します。</summary>
        <returns>基になるデータ ストレージに挿入する行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作が実行される前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> メソッドが呼び出されて、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> イベントを処理して、パラメーターの値を調べたり、<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作の前に前処理を実行したりすることができます。 挿入操作を実行するために、<xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトは、リフレクションを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティによって識別されるオブジェクトのインスタンスを作成します。 次に、関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティによって識別されるメソッドを呼び出します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作が完了すると、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> イベントを処理して、戻り値、出力パラメーター、および例外を調べたり、後処理を実行したりすることができます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> メソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> の <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> メソッドにデリゲートします。

 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>」を参照してください。

## <a name="data-bound-controls"></a>データバインドコントロール
 <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトが、<xref:System.Web.UI.WebControls.GridView> コントロールなどのデータバインドコントロールに関連付けられている場合、ページコードから <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> メソッドを呼び出す必要はありません。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> メソッドは、代わりにデータバインドコントロールによって直接呼び出されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">チュートリアル: カスタムビジネスオブジェクトへのデータバインディング</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> 操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> イベントを処理して、戻り値または出力パラメーターの値を調べたり、<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作の完了後に例外がスローされたかどうかを確認したりします。 戻り値、出力パラメーター、および例外処理のプロパティは、イベントに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> オブジェクトから使用できます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> 操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> イベントを処理して、アプリケーションに固有の追加の初期化を実行したり、パラメーターの値を検証したり、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが挿入操作を実行する前にパラメーター値を変更したりします。 パラメーターは、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> オブジェクトによって公開される <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> プロパティによってアクセスされる <xref:System.Collections.IDictionary> コレクションとして使用できます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用してデータを挿入する方法を示します。 2番目のコード例では、最初のコード例で使用されている中間層ビジネスオブジェクトの例を示します。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用してデータを挿入する方法を示します。 最初に、<xref:System.Web.UI.WebControls.DetailsView> には、自動的に生成された**挿入**ボタンと共に新しい `NorthwindEmployee` レコードが表示されます。 <xref:System.Web.UI.WebControls.DetailsView> コントロールのフィールドにデータを入力したら、**[挿入]** ボタンをクリックします。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティは、挿入操作を実行するメソッドを識別します。

 この例では、`UpdateEmployeeInfo` メソッドを使用して挿入を実行します。ただし、データを挿入するには `NorthwindEmployee` パラメーターが必要です。 このため、<xref:System.Web.UI.WebControls.DetailsView> コントロールが自動的に渡す文字列のコレクションは十分ではありません。 `NorthwindEmployeeInserting` デリゲートは、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> イベントを処理する <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> オブジェクトであり、<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作が進む前に入力パラメーターを操作できます。 `UpdateEmployeeInfo` メソッドでは、パラメーターとして `NorthwindEmployee` オブジェクトが必要であるため、1つは文字列のコレクションを使用して作成され、メソッドが要求するパラメーター名 (`ne`) を使用して <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> コレクションに追加されます。 既存の中間層オブジェクトを、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロール専用に設計されていない型およびメソッドを含むデータソースとして使用する場合は、このような手順を実行できます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作が実行されると、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティによって識別されるメソッドが呼び出されます。 オブジェクトの `Insert` メソッドにパラメーターを含むメソッドシグネチャが含まれている場合、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションには、正常に完了するため <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> のメソッドシグネチャパラメーターと一致する名前のパラメーターが含まれている必要があります。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]

 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトの例を示しています。 このコード例は、次の2つの基本クラスで構成されています。

-   `EmployeeLogic` クラス。ビジネスロジックをカプセル化するステートレスクラスです。

-   `NorthwindEmployee` クラス。これは、データ層からデータを読み込み、永続化するために必要な基本的な機能のみを含むモデルクラスです。

 追加の `NorthwindDataException` クラスが便宜的に提供されています。 完全な作業例については、これらのクラスをコンパイルして使用する必要があります。 `UpdateEmployeeInfo` メソッドは完全には実装されていないため、この例を試してみると、Northwind Traders データベースにデータが挿入されません。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールがデータを挿入するために呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>データを挿入するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ビジネスオブジェクトは、バッチではなく、一度に1つのレコードを挿入することを想定しています。

 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティに委任されます。

## <a name="object-lifetime"></a>オブジェクトの有効期間
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティによって識別されるメソッドは、インスタンスメソッドまたは `static``Shared` (Visual Basic) メソッドにすることができます。 インスタンスメソッドの場合は、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティによって指定されたメソッドが呼び出されるたびに、ビジネスオブジェクトが作成され、破棄されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティが呼び出される前に、ビジネスオブジェクトを操作するために、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理できます。 また、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティによって指定されたメソッドが呼び出された後に発生する <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理することもできます。 ビジネスオブジェクトが <xref:System.IDisposable> インターフェイスを実装している場合、オブジェクトが破棄される前に <xref:System.IDisposable.Dispose%2A> メソッドが呼び出されます。 メソッドが `static` (Visual Basic で`Shared`) の場合、ビジネスオブジェクトは作成されず、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理することはできません。

## <a name="parameter-merging"></a>パラメーターのマージ
 パラメーターは、次の3つのソースから <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションに追加されます。

-   実行時にデータバインドコントロールから。

-   `InsertParameters` 要素から宣言によって。

-   プログラムによって `Inserting` メソッドから。

 まず、データバインドコントロールから生成されたすべてのパラメーターが <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションに追加されます。 たとえば、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが、列 `Name` および `Number`を持つ <xref:System.Web.UI.WebControls.GridView> コントロールにバインドされている場合、`Name` と `Number` のパラメーターがコレクションに追加されます。 これらのパラメーターのデータ型は `string`です。 次に、`InsertParameters` 要素に示されているパラメーターが追加されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクション内に既に存在するパラメーターと同じ名前を持つ `InsertParameters` 要素内のパラメーターが見つかった場合、`InsertParameters` 要素で指定されたパラメーターに一致するように既存のパラメーターが変更されます。 通常、これは、パラメーター内のデータの型を変更するために使用されます。 最後に、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> イベントのパラメーターをプログラムによって追加および削除できます。このイベントは、<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> メソッドが実行される前に発生します。 メソッドは、パラメーターがマージされた後に解決されます。 メソッドの解決方法については、次のセクションで説明します。

> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティに置き換えます。

## <a name="method-resolution"></a>メソッドの解決方法
 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> メソッドが呼び出されると、データバインドコントロールのデータフィールド、`InsertParameters` 要素で宣言によって作成されたパラメーター、および <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> イベントハンドラーに追加されたパラメーターがすべてマージされます。 (詳細については、前のセクションを参照してください)。次に、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトは、呼び出すメソッドの検索を試みます。 まず、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティで指定された名前を持つ1つ以上のメソッドを検索します。 一致するものが見つからない場合は、<xref:System.InvalidOperationException> 例外がスローされます。 一致するものが見つかった場合は、一致するパラメーター名が検索されます。 たとえば、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティによって指定された型に `InsertARecord`という2つのメソッドがあるとします。 1つの `InsertARecord` に1つのパラメーターがあり `ID`、もう一方の `InsertARecord` には、`Name` と `Number`の2つのパラメーターがあります。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションに `ID`という名前のパラメーターが1つしかない場合、`ID` パラメーターだけを持つ `InsertARecord` メソッドが呼び出されます。 パラメーターの型は、メソッドの解決時にチェックされません。 パラメーターの順序は重要ではありません。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティが設定されている場合、メソッドは別の方法で解決されます。 <xref:System.Web.UI.WebControls.ObjectDataSource> は、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティで指定された名前のメソッドを検索します。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティで指定された型のパラメーターを1つ受け取ります。 この場合、パラメーターの名前は関係ありません。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用してデータを挿入する方法を示します。 2番目のコード例では、最初のコード例で使用されている中間層ビジネスオブジェクトの例を示します。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用してデータを挿入する方法を示します。 最初に、<xref:System.Web.UI.WebControls.DetailsView> には、自動的に生成された**挿入**ボタンと共に新しい `NorthwindEmployee` レコードが表示されます。 <xref:System.Web.UI.WebControls.DetailsView> コントロールのフィールドにデータを入力したら、**[挿入]** ボタンをクリックします。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティは、挿入操作を実行するメソッドを識別します。

 この例では、`UpdateEmployeeInfo` メソッドを使用して挿入を実行します。ただし、データを挿入するには `NorthwindEmployee` パラメーターが必要です。 このため、<xref:System.Web.UI.WebControls.DetailsView> コントロールが自動的に渡す文字列のコレクションは十分ではありません。 `NorthwindEmployeeInserting` デリゲートは、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> イベントを処理する <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> オブジェクトであり、<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作が進む前に入力パラメーターを操作できます。 `UpdateEmployeeInfo` メソッドでは、パラメーターとして `NorthwindEmployee` オブジェクトが必要であるため、1つは文字列のコレクションを使用して作成され、メソッドが要求するパラメーター名 (`ne`) を使用して <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> コレクションに追加されます。 既存の中間層オブジェクトを、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロール専用に設計されていない型およびメソッドを含むデータソースとして使用する場合は、このような手順を実行できます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作が実行されると、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティによって識別されるメソッドが呼び出されます。 オブジェクトの `Insert` メソッドにパラメーターを含むメソッドシグネチャが含まれている場合、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションには、正常に完了するため <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> のメソッドシグネチャパラメーターと一致する名前のパラメーターが含まれている必要があります。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]

 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトの例を示しています。 このコード例は、次の2つの基本クラスで構成されています。

-   `EmployeeLogic` クラス。ビジネスロジックをカプセル化するステートレスクラスです。

-   `NorthwindEmployee` クラス。これは、データ層からデータを読み込み、永続化するために必要な基本的な機能のみを含むモデルクラスです。

 追加の `NorthwindDataException` クラスが便宜的に提供されています。 完全な作業例については、これらのクラスをコンパイルして使用する必要があります。 `UpdateEmployeeInfo` メソッドは完全には実装されていないため、この例を試してみると、Northwind Traders データベースにデータが挿入されません。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティで識別されたメソッドによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションに含まれるパラメーターの名前と型は、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティのシグネチャに含まれるパラメーターの名前と型と一致する必要があります。 パラメーター名では大文字と小文字が区別されます。 <xref:System.Web.UI.WebControls.GridView> や <xref:System.Web.UI.WebControls.DetailsView> コントロールなどのパラメーターを指定するデータバインドコントロールを使用する場合、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、コレクションに明示的に指定されているすべてのパラメーターを、データバインドコントロールによって提供されるパラメーターと共に自動的にマージします。 データバインドコントロールは常にパラメーターを <xref:System.String> 型として指定し、メソッドシグネチャに数値型または日付型が含まれている場合は、正しい型の <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションにパラメーターを明示的に含める必要があるため、これは重要です。 それ以外の場合、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、コレクション内のパラメーターで定義されている型に従って、パラメーターをキャストしようとします。 詳細については、「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。

 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> に含まれる <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> プロパティを取得します。

 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>」を参照してください。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用してデータを挿入する方法を示します。 2番目のコード例では、最初のコード例で使用する `Insert` メソッドの実装例を示します。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.DetailsView> コントロールを使用してデータを挿入する方法を示します。 <xref:System.Web.UI.WebControls.DetailsView> には、最初に、新しい `NorthwindEmployee` レコードのデータを入力できるテキストボックスが表示されます。このテキストボックスには、自動的に生成された **[挿入]** ボタンがあります。 <xref:System.Web.UI.WebControls.DetailsView> コントロールのフィールドにデータを入力したら、**[挿入]** ボタンをクリックします。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティは、挿入操作を実行するメソッドを識別します。

 **[挿入]** ボタンをクリックすると、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティによって指定されたメソッドと、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションで指定されたすべてのパラメーターを使用して操作が実行されます。 このコード例では、スーパーバイザーの ID に対応する <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションで1つのパラメーターが指定されています。 これは、ID が <xref:System.Web.UI.WebControls.BoundField> オブジェクトとして <xref:System.Web.UI.WebControls.DetailsView> コントロールの <xref:System.Web.UI.WebControls.GridView.Rows%2A> コレクションに表示されている場合でも、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに文字列として渡されるためです。 <xref:System.Web.UI.WebControls.Parameter.Type%2A> プロパティが <xref:System.TypeCode.Int32> 値に設定された <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションに明示的に追加することにより、文字列ではなく <xref:System.Int32>としてメソッドに <xref:System.Web.UI.WebControls.ObjectDataSource> によって正しく渡されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 操作が実行されると、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティによって識別されるメソッドが呼び出されます。 オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> メソッドにパラメーターを含むメソッドシグネチャが含まれている場合、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> コレクションには、正常に完了するために <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> メソッドのメソッドシグネチャパラメーターと一致する名前を持つパラメーターを含める必要があります。

> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティに置き換えます。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]

 次のコード例は、前のコード例で使用している `Insert` メソッドの実装例を示しています。 `InsertNewEmployeeWrapper` メソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> クラスの概要で提供されている `EmployeeLogic` 中間層オブジェクトに追加されます。これにより、実際のビジネスロジックに大幅に書き直しられることなく、Web シナリオで <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用してオブジェクトをより簡単に操作できるようになります。

 この例を実行するには、<xref:System.Web.UI.WebControls.ObjectDataSource> クラスの概要で提供されている `NorthwindEmployee` クラスが必要です。 この例では、パラメーターを使用して新しいデータベースレコードのデータを取得するビジネスオブジェクトメソッドに <xref:System.Web.UI.WebControls.ObjectDataSource> を接続する方法のみを示します。 この例では、データベースにレコードを追加しません。 `NorthwindEmployee` クラスの `Save` メソッドには、データベースを更新するためのコードが含まれていないためです。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">保存したコントロールのビューステートの値を格納しているオブジェクト。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドは、主に .NET Framework インフラストラクチャによって使用されます。独自に作成したコードから直接使用するためのものではありません。 ただし、コントロールの開発者は、このメソッドをオーバーライドして、カスタムサーバーコントロールがビューステートを復元する方法を指定できます。 詳細については、「 [ASP.NET State Management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。

 <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> メソッドは、以前に保存した <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールのビューステートを読み込むために使用されます。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> メソッドは、主にコントロールの開発者が <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールを拡張するときに使用します。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース ページングをサポートするために取得するレコード数を示す際に使用する、ビジネス オブジェクトのデータ取得メソッドのパラメーター名を取得または設定します。</summary>
        <value>取得するレコード数を示すために使用する <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> パラメーターの名前。 既定値は<c>"Maximumrows"</c>です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティは、データソースのページングをサポートするために使用されます。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールによるページングのサポート方法の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>」を参照してください。

 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> プロパティに委任されます。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、およびページに表示されるレコード数をユーザーが選択できるようにするデータアクセスクラスを示しています。

 この Web ページには、<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> プロパティが `true`に設定されている <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティは、クエリ内のレコードの合計数を返すメソッドの名前に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティと <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> プロパティは、Select メソッドで使用されるパラメーターの名前に設定されます。 このページには、<xref:System.Web.UI.WebControls.DropDownList> コントロールも含まれています。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]

 2番目の例は、<xref:System.Web.UI.WebControls.DropDownList> コントロールの <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> イベントのハンドラーを示しています。 ハンドラーのコードは、<xref:System.Web.UI.WebControls.GridView.PageSize%2A> プロパティをユーザーの選択に設定します。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]

 3番目の例は、Customers テーブルからデータを取得するデータアクセスクラスを示しています。 これには、`GetSubsetOfEmployees`という名前のメソッドが含まれています。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティに割り当てられています。 この例には、`GetEmployeeCount`という名前のメソッドも含まれています。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティに割り当てられています。 クラスは、LINQ を使用して Customers テーブルに対してクエリを実行します。 この例では、Northwind データベースと Customers テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> プロパティで識別されるオブジェクトが作成された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> イベントを処理して、ビジネスオブジェクトで他のメソッドを呼び出したり、プロパティを設定したり、ビジネスオブジェクトに固有のその他の初期化を実行したりして、データ操作を実行するには、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトが business object data メソッドを呼び出します。 オブジェクトへの参照は、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> オブジェクトによって公開されている <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> プロパティによってアクセスされます。

 データ操作を実行するように指定されたメソッドが `static` (Visual Basic で`Shared`) の場合、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントと <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> イベントは発生しません。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> プロパティで識別されるオブジェクトが作成される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 データ操作を実行するように指定されたメソッドが `static` (Visual Basic で`Shared`) の場合、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントと <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> イベントは発生しません。

 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、ビジネスオブジェクトのパラメーターなしのコンストラクターを自動的に呼び出して、リフレクションを使用してそのインスタンスを作成します。 別のコンストラクターを明示的に呼び出すために <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理し、結果として得られるオブジェクトのインスタンスを、関連付けられた <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> プロパティに設定します。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.GridView> コントロールを使用して情報を表示する方法を示します。 2番目のコード例では、最初のコード例で使用される中間層ビジネスオブジェクトを提供します。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して情報を表示する方法を示します。 Web ページで実行されるすべてのデータ操作に対して (時間またはリソースの観点から) 作成するのに非常にコストがかかるビジネスオブジェクトを使用する場合があります。 高価なオブジェクトを操作する方法の1つとして、そのインスタンスを1回作成した後、データ操作ごとに作成して破棄するのではなく、後続の操作用にキャッシュする方法があります。

> [!NOTE]
>  実稼働アプリケーションでは、同じインスタンスを使用して複数の要求が同時に終了する場合があります。 そのため、オブジェクトはスレッドセーフな方法で実装する必要があります。

 このコード例は、このパターンを示しています。 最初にオブジェクトのキャッシュを確認し、オブジェクトがまだキャッシュされていない場合にのみ、オブジェクトのインスタンスを作成するには、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理します。 次に、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理して、ビジネスオブジェクトを破棄するのではなく、将来使用するためにキャッシュします。 このコード例では、<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> オブジェクトの <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> プロパティを `true` に設定して、オブジェクトの <xref:System.IDisposable.Dispose%2A> メソッドを呼び出さないように <xref:System.Web.UI.WebControls.ObjectDataSource> に指示します。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]

 次のコード例では、前のコード例で使用している中間層ビジネスオブジェクトの例を示します。 このコード例は、ビジネスロジックをカプセル化するステートフルクラスである `EmployeeLogic` クラスによって定義される基本的なビジネスオブジェクトで構成されています。 完全な作業例を実行するには、このコードをライブラリとしてコンパイルし、ASP.NET ページ (.aspx ファイル) からこれらのクラスを使用する必要があります。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> プロパティで識別されるオブジェクトが破棄される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントは、ビジネスオブジェクトのインスタンスが破棄される前に常に発生します。 ビジネスオブジェクトが <xref:System.IDisposable> インターフェイスを実装している場合、このイベントが発生した後に、<xref:System.IDisposable.Dispose%2A> メソッドが呼び出されます。

 オブジェクトの他のメソッドを呼び出したり、プロパティを設定したり、オブジェクトが破棄される前にオブジェクトに固有のクリーンアップを実行したりするために、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理します。 オブジェクトへの参照は、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> オブジェクトによって公開されている <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> プロパティによってアクセスされます。

 LINQ to SQL クラスで <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用する場合は、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントのハンドラーでデータコンテキストクラスの破棄をキャンセルする必要があります。 この手順が必要になるのは、LINQ to SQL で遅延実行がサポートされているのに対し、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは選択操作後にデータコンテキストを破棄しようとするためです。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクトを含む <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトと <xref:System.Web.UI.WebControls.GridView> コントロールを使用して情報を表示する方法を示します。 2番目のコード例では、最初のコード例で使用される中間層ビジネスオブジェクトを提供します。

 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールとビジネスオブジェクトを使用し、<xref:System.Web.UI.WebControls.GridView> コントロールを使用して情報を表示する方法を示します。 Web ページで実行されるすべてのデータ操作に対して (時間またはリソースの観点から) 作成するのに非常にコストがかかるビジネスオブジェクトを使用する場合があります。 高価なオブジェクトを操作する方法の1つとして、そのインスタンスを1回作成した後、データ操作ごとに作成して破棄するのではなく、後続の操作用にキャッシュする方法があります。 この例は、このパターンを示しています。 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理して、最初にオブジェクトのキャッシュをチェックし、そのインスタンスがまだキャッシュされていない場合にのみ、そのインスタンスを作成することができます。 次に、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理して、ビジネスオブジェクトを破棄するのではなく、将来使用するためにキャッシュします。 このコード例では、<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> オブジェクトの <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> プロパティを `true` に設定して、オブジェクトの <xref:System.IDisposable.Dispose%2A> メソッドを呼び出さないように <xref:System.Web.UI.WebControls.ObjectDataSource> に指示します。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]

 次のコード例では、前のコード例で使用している中間層ビジネスオブジェクトの例を示します。 このコード例は、ビジネスロジックをカプセル化するステートフルクラスである `EmployeeLogic` クラスによって定義される基本的なビジネスオブジェクトで構成されています。 完全な作業例を実行するには、このコードをライブラリとしてコンパイルし、ASP.NET ページ (.aspx ファイル) からこれらのクラスを使用する必要があります。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]

 次の例は、LINQ to SQL クラスで <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用するときに、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理する方法を示しています。

```vb
Public Sub ExampleObjectDisposing(ByVal sender As Object, _
        ByVal e As ObjectDataSourceDisposingEventArgs)
    e.Cancel = True
End Sub
```

```csharp
public void ExampleObjectDisposing(object sender,
        ObjectDataSourceDisposingEventArgs e)
{
    e.Cancel = true;
}
```

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Delete" /> メソッドまたは <see langword="Update" /> メソッドに渡される元の値のパラメーター名に適用される書式指定文字列を取得または設定します。</summary>
        <value><paramref name="oldValues" /> メソッドまたは <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> メソッドに渡される <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> パラメーターまたは key パラメーターの名前に適用される書式指定文字列を表す文字列。 既定値は<c>"{0}"</c>です。これは、パラメーター名がフィールド名であることを意味します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> プロパティの値は主キーにのみ適用されます。たとえば、データバインドコントロールの `DataKeyNames` プロパティで識別されるものや、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定されている delete および update シナリオでは、元の値のセットが対応するデータメソッドに渡されます。

 次の2つの一般的なシナリオでは、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> プロパティを変更できます。

-   更新プログラムの古い値と新しい値を区別するように、プロパティを変更することができます。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティが <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値に設定されている場合、元の値と新しい値の両方のパラメーターが <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションに追加されます。 書式設定文字列がない場合、データフィールドごとに同じ名前の2つのパラメーターが作成されます。 元の値パラメーターの名前を変更することで、データを元のデータソースと比較して競合を検出し、キー値を比較することができます。

-   一部のビジュアルデザイナーでは、元の値とキーに対して特定の名前付けスキームが実装されています。

 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> プロパティに委任されます。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Page.LoadComplete" /> コントロールを格納するページに <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> イベント ハンドラーを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。

 <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> メソッドをオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> メソッドを呼び出す必要があります。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" /> で示される型のオブジェクトを構築するために文字列値を実際のプロパティ型に変換するときに使用するカルチャ情報を示す値を取得または設定します。</summary>
        <value>カルチャ情報。 既定値は <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールの状態を保存します。</summary>
        <returns>サーバー コントロールの現在のビューステートを返します。コントロールに関連付けられているビューステートがない場合は <see langword="null" /> を返します。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> コレクション内のパラメーターを持つ <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" /> プロパティで識別されるメソッドを呼び出して、基になるデータ ストレージからデータを取得します。</summary>
        <returns>データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 指定されたメソッドはメソッドシグネチャを持つ場合がありますが、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが正常に呼び出すには、次の表に示されている型のいずれかから返されるか、派生している必要があります。

|の戻り値の型 :|操作|
|-----------------|------------|
|<xref:System.Collections.IEnumerable>|<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって <xref:System.Collections.IEnumerable> が返されます。|
|<xref:System.Data.DataTable>|<xref:System.Data.DataView> は、<xref:System.Data.DataTable> を使用して作成され、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返されます。|
|<xref:System.Data.DataView>|<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって <xref:System.Data.DataView> が返されます。|
|<xref:System.Data.DataSet>|<xref:System.Data.DataSet> の最初の <xref:System.Data.DataTable> が抽出され、<xref:System.Data.DataView> が作成され、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返されます。|
|<xref:System.Object>|オブジェクトは、1つの要素 <xref:System.Collections.IEnumerable> コレクションにラップされ、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返されます。|

 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって識別されるメソッドは、インスタンスメソッドまたは `static``Shared` (Visual Basic) メソッドにすることができます。 インスタンスメソッドの場合は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドが呼び出されるたびに、ビジネスオブジェクトが作成され、破棄されます。ただし、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドと <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティによって指定されたメソッドの呼び出しに同じインスタンスが使用される点が異なります。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドは、<xref:System.Collections.IEnumerable> インターフェイスを返します。 ただし、キャッシュとフィルター処理のシナリオを有効にするには、戻り値が <xref:System.Data.DataSet> オブジェクトである必要があります。 <xref:System.Data.DataSet> クラスは <xref:System.Collections.IEnumerable> インターフェイスを実装していませんが、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、<xref:System.Collections.IEnumerable>を実装する既定の <xref:System.Data.DataView> コントロールを自動的に抽出します。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 操作が実行される前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> メソッドが呼び出されて、<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントを処理して、パラメーターの値を調べたり、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 操作の前に前処理を実行したりすることができます。 データ取得操作を実行するために、<xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトは、リフレクションを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティによって識別されるオブジェクトのインスタンスを作成します。 次に、関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって識別されるメソッドを呼び出します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 操作が完了すると、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントを処理して、戻り値、出力パラメーター、および例外を調べたり、後処理を実行したりすることができます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティが <xref:System.Data.DataSet>、<xref:System.Data.DataTable>、または <xref:System.Data.DataView> オブジェクトを返し、キャッシュが有効になっている場合、<xref:System.Web.UI.WebControls.ObjectDataSource> 操作中にデータをから取得してキャッシュに保存します。<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> キャッシュは、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> と <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> のプロパティの組み合わせによって指定されたキャッシュの動作に基づいて、作成、破棄、または更新されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティが <xref:System.Data.DataSet> または <xref:System.Data.DataTable> オブジェクトを返し、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティが指定されている場合は、指定されたすべての <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> プロパティを使用して評価され、結果のフィルターは <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 操作中にデータのリストに適用されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> の <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドにデリゲートします。

 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>」を参照してください。

## <a name="data-bound-controls"></a>データバインドコントロール
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが、<xref:System.Web.UI.WebControls.GridView> コントロールなどのデータバインドコントロールに関連付けられている場合、ページコードから <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドを呼び出す必要はありません。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドは、代わりにデータバインドコントロールによって直接呼び出されます。



## Examples
 コード例については、「<xref:System.Web.UI.WebControls.ObjectDataSource>」を参照してください。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行数を取得するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールが呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>行数を取得するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 このメソッドは、整数 (<see cref="T:System.Int32" />) を返す必要があります。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティは、データソースのページングをサポートするために、行の合計数を取得するために使用されるビジネスオブジェクトのメソッドを識別します。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> プロパティが `true`に設定されている場合にのみ評価されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> プロパティに委任されます。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールによるページングのサポート方法の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>」を参照してください。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、およびページに表示されるレコード数をユーザーが選択できるようにするデータアクセスクラスを示しています。

 この Web ページには、<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> プロパティが `true`に設定されている <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティは、クエリ内のレコードの合計数を返すメソッドの名前に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティと <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> プロパティは、Select メソッドで使用されるパラメーターの名前に設定されます。 このページには、<xref:System.Web.UI.WebControls.DropDownList> コントロールも含まれています。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]

 2番目の例は、<xref:System.Web.UI.WebControls.DropDownList> コントロールの <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> イベントのハンドラーを示しています。 ハンドラーのコードは、<xref:System.Web.UI.WebControls.GridView.PageSize%2A> プロパティをユーザーの選択に設定します。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]

 3番目の例は、Customers テーブルからデータを取得するデータアクセスクラスを示しています。 これには、`GetSubsetOfEmployees`という名前のメソッドが含まれています。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティに割り当てられています。 この例には、`GetEmployeeCount`という名前のメソッドも含まれています。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティに割り当てられています。 クラスは、LINQ を使用して Customers テーブルに対してクエリを実行します。 この例では、Northwind データベースと Customers テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントを処理して、戻り値または出力パラメーターの値を調べたり、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 操作の完了後に例外がスローされたかどうかを確認したりします。 戻り値、出力パラメーター、および例外処理のプロパティは、イベントに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> オブジェクトから使用できます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、およびユーザーが Northwind データベースの Employees テーブルのレコードを取得して更新できるようにするデータアクセスクラスを示しています。

 最初の例は、2つの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、<xref:System.Web.UI.WebControls.DropDownList> コントロール、および <xref:System.Web.UI.WebControls.DetailsView> コントロールを含む Web ページを示しています。 最初の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DropDownList> コントロールを使用して、データベースから従業員名を取得して表示します。 2番目の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して、ユーザーが選択した従業員レコードのデータを取得、表示、および変更します。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]

 2番目の例では、<xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントと <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントのハンドラーを示します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントハンドラーは、Employee テーブルから取得されたデータを含むオブジェクトをシリアル化します。 シリアル化されたオブジェクトはビューステートに格納されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントハンドラーは、更新するデータレコードの元のデータを含むビューステートのオブジェクトを逆シリアル化します。 元のデータを格納しているオブジェクトは、更新メソッドにパラメーターとして渡されます。 データが別のプロセスによって変更されたかどうかを確認するために使用できるように、元のデータをデータベースに渡す必要があります。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]

 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行し、更新します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントを処理して、アプリケーション固有の追加の初期化を実行したり、パラメーターの値を検証したり、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールでデータ取得操作を実行する前にパラメーター値を変更したりします。 パラメーターは、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> オブジェクトによって公開される <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> プロパティによってアクセスされる <xref:System.Collections.IDictionary> コレクションとして使用できます。

 このイベントは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティが設定されている場合に、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドの1回の呼び出しで発生する可能性があります。 <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> プロパティは、データの取得またはカウントの取得のために select が呼び出されたかどうかを判断するために使用されます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データを取得するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールが呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>データを取得するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 指定されたメソッドは任意のメソッドシグネチャを持つことができますが、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが正常に呼び出すには、次の表に示すいずれかの型を返す必要があります。

|の戻り値の型 :|操作|
|-----------------|------------|
|<xref:System.Collections.IEnumerable>|<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって <xref:System.Collections.IEnumerable> が返されます。|
|<xref:System.Data.DataTable>|<xref:System.Data.DataView> は、<xref:System.Data.DataTable> を使用して作成され、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返されます。|
|<xref:System.Data.DataView>|<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって <xref:System.Data.DataView> が返されます。|
|<xref:System.Data.DataSet>|<xref:System.Data.DataSet> の最初の <xref:System.Data.DataTable> が抽出され、<xref:System.Data.DataView> が作成され、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返されます。|
|<xref:System.Object>|オブジェクトは、1つの要素 <xref:System.Collections.IEnumerable> コレクションにラップされ、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドによって返されます。|

 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティに委任されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource> クラスを使用してデータを削除または更新する場合は、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションまたは <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクション内の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに対して構成されているパラメーター名が、select メソッドによって返される列名と一致していることを確認してください。

## <a name="object-lifetime"></a>オブジェクトの有効期間
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって識別されるメソッドは、インスタンスメソッドまたは `static``Shared` (Visual Basic) メソッドにすることができます。 インスタンスメソッドの場合は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドが呼び出されるたびに、ビジネスオブジェクトが作成され、破棄されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドが呼び出される前に、ビジネスオブジェクトを操作するために、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理できます。 また、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドが呼び出された後に発生する <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理することもできます。 ビジネスオブジェクトが <xref:System.IDisposable> インターフェイスを実装している場合、オブジェクトが破棄される前に <xref:System.IDisposable.Dispose%2A> メソッドが呼び出されます。 メソッドが `static` (Visual Basic で`Shared`) の場合、ビジネスオブジェクトは作成されず、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理することはできません。

## <a name="parameter-merging"></a>パラメーターのマージ
 これらのソースから <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクションにパラメーターが追加されます。

-   `SelectParameters` 要素から宣言によって宣言されます。

-   `Selecting` メソッドからプログラムで行います。

 最初に、`SelectParameters` 要素に示されているパラメーターが追加されます。 2つ目は、パラメーターがプログラムによって追加および削除される <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントです。これは、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドが実行される前に発生します。 メソッドは、パラメーターがマージされた後に解決されます。 メソッドの解決方法については、次のセクションで説明します。

> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティに置き換えます。

## <a name="method-resolution"></a>メソッドの解決方法
 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドが呼び出されると、データバインドコントロールのデータフィールド、`SelectParameters` 要素で宣言によって作成されたパラメーター、および <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントハンドラーに追加されたパラメーターがすべてマージされます。 (詳細については、前のセクションを参照してください)。次に、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、呼び出すメソッドの検索を試みます。 まず、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティで指定された名前を持つ1つ以上のメソッドを検索します。 一致するものが見つからない場合は、<xref:System.InvalidOperationException> 例外がスローされます。 一致するものが見つかった場合は、一致するパラメーター名が検索されます。 たとえば、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティによって指定された型に `SelectARecord`という2つのメソッドがあるとします。 1つの `SelectARecord` に1つのパラメーターがあり `ID`、もう一方の `SelectARecord` には、`Name` と `Number`の2つのパラメーターがあります。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクションに `ID`という名前のパラメーターが1つしかない場合、`ID` パラメーターだけを持つ `SelectARecord` メソッドが呼び出されます。 パラメーターの型は、メソッドの解決時にチェックされません。 パラメーターの順序は重要ではありません。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティが設定されている場合、メソッドは別の方法で解決されます。 <xref:System.Web.UI.WebControls.ObjectDataSource> は、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティで指定された名前のメソッドを検索します。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティで指定された型のパラメーターを1つ受け取ります。 この場合、パラメーターの名前は関係ありません。



## Examples
 次のコード例は、<xref:System.Web.UI.WebControls.GridView> コントロールが Web フォームページの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用してデータを表示する方法を示しています。 <xref:System.Web.UI.WebControls.ObjectDataSource> は、部分的または完全に修飾されたクラス名を <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティと共に識別し、その <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティを使用してデータを取得するために呼び出されるメソッドを指定します。 実行時に、オブジェクトが作成され、リフレクションを使用してメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.GridView> コントロールは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドによって返される <xref:System.Collections.IEnumerable> コレクションを列挙し、データを表示します。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティで指定されたメソッドにより使用されるパラメーターのコレクションを取得します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティで指定されたメソッドにより使用されるパラメーターのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> プロパティを取得します。

 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクションにパラメーターを追加するには、`SelectParameters` 要素を使用するか、<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントのハンドラーでプログラムを使用して、パラメーターを宣言します。 実行時には、`SelectParameters` 要素に列挙されているパラメーターが最初にコレクションに追加されます。 コレクション内のパラメーターは、<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントのハンドラーによって追加または削除されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドが実行される前に、<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントが発生します。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドを実行する前に、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクションに含まれるパラメーターの名前と型が、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドのシグネチャと一致している必要があります。 たとえば、`GetEmployeesByStateAndAge` という名前の select メソッドが `string` と整数をパラメーターとして受け取る場合、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> コレクションに2つのパラメーターが含まれている必要があります。 最初のパラメーターは文字列に解決される必要があり、2番目のパラメーターは整数に解決される必要があります。 両方のパラメーターは、`SelectParameters` 要素のマークアップで指定できます。 または、<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントハンドラーに追加することも、1つのパラメーターをマークアップに追加することもできます。また、もう1つのパラメーターをプログラムで追加することもできます。

 詳細については、「 [ObjectDataSource コントロール](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)と <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> プロパティでのパラメーターの使用」を参照してください。

> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベントハンドラーのコード、または <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって指定されたメソッドで、クライアントから受信したすべてのパラメーター値を検証するようにしてください。



## Examples
 次のコード例では、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用して1つのデータレコードを取得し、それを <xref:System.Web.UI.WebControls.DetailsView> コントロールに表示する方法を示します。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、`EmployeeLogic` クラスの `GetEmployee` メソッドを呼び出すことによって特定の従業員レコードを取得します。 `GetEmployee` メソッドには employee ID パラメーターが必要です。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、マークアップ内の `QueryStringParameter` 要素を使用して <xref:System.Web.UI.WebControls.QueryStringParameter> オブジェクトを作成します。このオブジェクトは、URL から指定されたクエリ文字列パラメーターの値を取得し、`GetEmployee` メソッドに渡します。

 他のパラメータークラスは、コントロールのプロパティ、フォームフィールド、cookie、ASP.NET プロファイルデータ、セッション状態など、他のソースから値を取得するために使用できます。 また、マークアップで定義されたパラメーターオブジェクトを使用して、ハードコーディングされた値を select メソッドに渡すこともできます。 使用可能なパラメータークラスの詳細については、「[フィルター処理のためのデータソースコントロールでのパラメーターの使用](https://docs.microsoft.com/previous-versions/aspnet/xt50s8kz(v=vs.100))」を参照してください。

 この例を実行するには、次のものが必要です。

-   Northwind Traders データベースに接続する `NorthwindConnection` という名前の接続文字列を持つ Web サイト。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource> クラスの概要」を参照してください。

-   <xref:System.Web.UI.WebControls.ObjectDataSource> クラスの概要のコード例の1つとして表示される `EmployeeLogic` クラス。 クラスファイルは、App_Code フォルダーに配置する必要があります。

-   サンプルコードは .aspx ページとして実行できます。 クエリ文字列パラメーターを指定せずにページを要求すると、エラーメッセージが表示されます。 .Aspx ファイルの名前の後に `?empid=1` などのクエリ文字列を使用してページを要求すると、要求された従業員の詳細が表示されます。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースの並べ替えをサポートするために、<see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> パラメーターで並べ替え式を指定する際に使用したビジネス オブジェクトの名前を取得また設定します。</summary>
        <value>データの並べ替えに使用するパラメーターを示すために使用するメソッド パラメーターの名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> プロパティは、データソースの並べ替えをサポートするために使用されます。 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> プロパティが <xref:System.Web.UI.DataSourceSelectArguments> オブジェクトに設定され <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドに渡されると、<xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> 値は、データの並べ替えに従って <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> ビジネスオブジェクトメソッドのパラメーター名を識別します。

 <xref:System.Web.UI.WebControls.ObjectDataSource> がデータバインドコントロールに関連付けられている場合、このパラメーターに渡される値は、コンマで区切られたフィールド値の形式で、`"ASC"` または `"DESC"`になります。 たとえば、`Name` の昇順の並べ替えの値は `"Name ASC"`になります。

 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> プロパティに委任されます。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、並べ替えをサポートする型を実装する方法を示します。 2番目のコード例では、並べ替え式を実装する方法を示します。

 次のコード例は、並べ替えをサポートする型を実装する方法を示しています。 `SortingData` クラスの `SelectMethod` は、`sortExpression`パラメーターを受け取ります。 `SelectMethod` に渡される文字列は、`SelectMethod`によって返される <xref:System.Data.DataView> オブジェクトの <xref:System.Data.DataView.Sort%2A> プロパティに使用されます。

 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]

 次のコード例は、並べ替え式を実装する方法を示しています。 Web ページのコードは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールのインスタンスを作成します。 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティが `SortingData` に設定されており、<xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> プロパティが `sortExpression`に設定されています。 <xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> プロパティは `true`に設定されています。 ユーザーが**並べ替え**ボタンをクリックすると、フィールド名、`Name` または `Number`が sort パラメーターの `SelectMethod` に渡されます。

 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft SQL Server キャッシュの依存関係で使用するデータベースとテーブルを示す、セミコロンで区切られた文字列を取得または設定します。</summary>
        <value>SQL Server キャッシュの依存関係で使用するデータベースとテーブルを示す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールでは、データキャッシュの <xref:System.Web.Caching.SqlCacheDependency> オブジェクトに基づくオプションの有効期限ポリシーがサポートされています (サービスをデータベースサーバー用に構成する必要があります)。

 SQL Server では、ポーリングと通知という2つのキャッシュ無効化メカニズムがサポートされています。 各メカニズムには、<xref:System.Web.Caching.SqlCacheDependency> オブジェクトに対して異なる構文があります。

 <xref:System.Web.UI.WebControls.ObjectDataSource> では、ポーリングのみがサポートされます。 <xref:System.Web.Caching.SqlCacheDependency> 文字列は、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドを実行する前に <xref:System.Data.Common.DbCommand> コンストラクターに渡される <xref:System.Data.SqlClient.SqlDependency> オブジェクトを作成するために使用されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> 文字列は、`@ Page` ディレクティブによって使用されるのと同じ形式に従ってデータベースとテーブルを識別します。ここで、文字列の最初の部分は SQL Server データベースへの接続文字列、末尾にコロンの区切り文字、最後にデータベーステーブルの名前 (`"connectionstring1:table1"`など) を指定します。 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> プロパティが複数のテーブルに依存している場合、接続文字列とテーブル名のペアはセミコロンで区切られます (たとえば、`"connectionstring1:table1";connectionstring2:table2"`)。

 通知をサポートするには、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティの実装にキャッシュロジックを記述し、コード内で <xref:System.Web.Caching.SqlCacheDependency> オブジェクトの構築を処理する必要があります。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、SQL Server キャッシュ依存関係を作成し、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> プロパティを設定する方法を示します。 2番目のコード例では、<xref:System.Data.DataSet> オブジェクトを返すラッパーメソッドを実装し、<xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトを使用してキャッシュとフィルター処理を有効にする方法を示します。

 次のコード例は、SQL Server キャッシュ依存関係を作成し、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> プロパティを設定する方法を示しています。 この例では、データベースは120秒ごとにポーリングされます。 Northwind Traders Employees テーブル内のデータがその期間中に変更された場合、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールによってキャッシュされ、<xref:System.Web.UI.WebControls.GridView> コントロールによって表示されるデータはすべて期限切れとなり、ページの次の要求時に新しいデータセットが取得されます。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]

 次のコード例は、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールでキャッシュとフィルター処理を有効にするために <xref:System.Data.DataSet> オブジェクトを返すラッパーメソッドを実装する方法を示しています。 `EmployeeLogic` クラスの基本実装では、`GetAllEmployees` メソッドは <xref:System.Collections.ArrayList> オブジェクトを返します。 Web フォームページで <xref:System.Web.UI.WebControls.ObjectDataSource> を操作するためにオブジェクトを完全にリファクタリングするのではなく、`GetAllEmployeesAsDataSet` という名前のラッパーメソッドを追加して、`NorthwindEmployee` データのセットを <xref:System.Data.DataSet>として返します。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース ページングをサポートするために取得する最初のレコードの識別子の値を示す際に使用する、データ取得メソッドのパラメーター名を取得または設定します。</summary>
        <value>取得する最初のレコードを示すために使用するビジネス オブジェクト メソッドのパラメーターの名前。 このパラメーターは、整数値を返す必要があります。 既定値は<c>"Startrowindex"</c>です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> プロパティは、データソースのページングをサポートするために使用されます。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールによるページングのサポート方法の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>」を参照してください。

 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> プロパティに委任されます。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、およびページに表示されるレコード数をユーザーが選択できるようにするデータアクセスクラスを示しています。

 この Web ページには、<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> プロパティが `true`に設定されている <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティは、クエリ内のレコードの合計数を返すメソッドの名前に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティと <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> プロパティは、Select メソッドで使用されるパラメーターの名前に設定されます。 このページには、<xref:System.Web.UI.WebControls.DropDownList> コントロールも含まれています。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]

 2番目の例は、<xref:System.Web.UI.WebControls.DropDownList> コントロールの <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> イベントのハンドラーを示しています。 ハンドラーのコードは、<xref:System.Web.UI.WebControls.GridView.PageSize%2A> プロパティをユーザーの選択に設定します。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]

 3番目の例は、Customers テーブルからデータを取得するデータアクセスクラスを示しています。 これには、`GetSubsetOfEmployees`という名前のメソッドが含まれています。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティに割り当てられています。 この例には、`GetEmployeeCount`という名前のメソッドも含まれています。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールの <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> プロパティに割り当てられています。 クラスは、LINQ を使用して Customers テーブルに対してクエリを実行します。 この例では、Northwind データベースと Customers テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールのビューステートの変更を追跡し、<see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> メソッドは、オブジェクトのビューステートの一部として、コントロールの変更の追跡と保存を開始する開始点をマークするためにオーバーライドされます。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> オブジェクトが表すクラスの名前を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が表すオブジェクトの型を識別する部分修飾クラス名または完全修飾クラス名。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがバインドするオブジェクトのインスタンスを作成するために、コントロールはリフレクションを使用して、実行時に型名によって識別される型を読み込みます。 したがって、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティの値は、Bin または App_Code ディレクトリにあるコードの部分修飾型、またはグローバルアセンブリキャッシュに登録されているコードの完全修飾型名にすることができます。 グローバルアセンブリキャッシュを使用する場合は、machine.config ファイルまたは web.config ファイルの `assemblies` セクションに適切な参照を追加する必要があります。

 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理して自分でインスタンスを作成する場合を除き、型にはパラメーターなしのコンストラクターが必要です。 型のメソッドがメンバーメソッドの場合、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>、<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>、および <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> の各メソッドを呼び出すたびに、型のインスタンスが作成されます。 メソッドが `static` (Visual Basic で`Shared`) の場合、インスタンスは作成されません。 型が <xref:System.IDisposable> インターフェイスを実装している場合、オブジェクトが破棄される前に <xref:System.IDisposable.Dispose%2A> メソッドが呼び出されます。



## Examples
 次のコード例は、Web フォームページで <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用して、<xref:System.Web.UI.WebControls.GridView> コントロールでデータを表示する方法を示しています。 <xref:System.Web.UI.WebControls.ObjectDataSource> は、部分的または完全に修飾されたクラス名を <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティと共に識別し、その <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティを使用してデータを取得するために呼び出されるメソッドを指定します。 実行時に、オブジェクトが作成され、リフレクションを使用してメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.GridView> コントロールは、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティによって返される <xref:System.Collections.IEnumerable> コレクションを列挙し、データを表示します。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]

 次の例は、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティの値が参照するクラスを示しています。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> プロパティと <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" /> コレクション内のパラメーターで識別されるメソッドを呼び出して更新操作を実行します。</summary>
        <returns>基になるデータ ストレージで更新された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ビジネスオブジェクトは、バッチではなく、一度に1つのレコードを更新することを前提としています。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 操作が実行される前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> メソッドが呼び出されて、<xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントを処理して、パラメーターの値を調べたり、<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 操作の前に前処理を実行したりすることができます。 更新操作を実行するために、<xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトは、リフレクションを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティによって識別されるオブジェクトのインスタンスを作成します。 次に、関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> プロパティを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティによって識別されるメソッドを呼び出します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 操作が完了すると、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.ObjectDataSource.Updated> イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> イベントを処理して、戻り値、出力パラメーター、および例外を調べたり、後処理を実行したりすることができます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> メソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> の <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> メソッドにデリゲートします。

 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>」を参照してください。

> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティに置き換えます。

## <a name="data-bound-controls"></a>データバインドコントロール
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが、<xref:System.Web.UI.WebControls.GridView> コントロールなどのデータバインドコントロールに関連付けられている場合、ページコードから <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> メソッドを呼び出す必要はありません。 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> メソッドは、代わりにデータバインドコントロールによって直接呼び出されます。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、<xref:System.Web.UI.WebControls.DropDownList> コントロール、<xref:System.Web.UI.WebControls.TextBox> コントロール、およびいくつかの <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトを使用してデータを更新する方法を示します。 2番目のコード例は、最初のコード例で使用される `EmployeeLogic` クラスを示しています。

 次のコード例は、<xref:System.Web.UI.WebControls.DropDownList> コントロール、<xref:System.Web.UI.WebControls.TextBox> コントロール、およびいくつかの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用してデータを更新する方法を示しています。 <xref:System.Web.UI.WebControls.DropDownList> に Northwind 従業員の名前が表示されますが、<xref:System.Web.UI.WebControls.TextBox> コントロールを使用して住所情報を入力および更新します。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションには、選択した <xref:System.Web.UI.WebControls.DropDownList>の値にバインドされている <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトが含まれているため、<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 操作を発生させるボタンは、従業員が選択された後にのみ有効になります。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]

 次のコード例は、前のコード例で使用されている `EmployeeLogic` クラスを示しています。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> イベントを処理して、戻り値または出力パラメーターの値を調べたり、<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 操作の完了後に例外がスローされたかどうかを確認したりします。 戻り値、出力パラメーター、および例外処理のプロパティは、イベントに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> オブジェクトから使用できます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールがデータを更新するために呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>データを更新するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティによって識別されるメソッドがバッチではなく、一度に1つの更新を実行することを前提としています。

 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトの <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティに委任されます。

 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクション内の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに構成されているパラメーター名が、select メソッドによって返される列名と一致していることを確認します。

## <a name="object-lifetime"></a>オブジェクトの有効期間
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティによって識別されるメソッドは、インスタンスメソッドまたは `static``Shared` (Visual Basic) メソッドにすることができます。 インスタンスメソッドの場合は、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティによって指定されたメソッドが呼び出されるたびに、ビジネスオブジェクトが作成され、破棄されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティによって指定されたメソッドが呼び出される前に、ビジネスオブジェクトを操作するために、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> イベントを処理できます。 また、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティによって指定されたメソッドが呼び出された後に発生する <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理することもできます。 ビジネスオブジェクトが <xref:System.IDisposable> インターフェイスを実装している場合、オブジェクトが破棄される前に <xref:System.IDisposable.Dispose%2A> メソッドが呼び出されます。 メソッドが `static` (Visual Basic で`Shared`) の場合、ビジネスオブジェクトは作成されず、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、および <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> イベントを処理することはできません。

## <a name="parameter-merging"></a>パラメーターのマージ
 パラメーターは、次の3つのソースから <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションに追加されます。

-   実行時にデータバインドコントロールから。

-   `UpdateParameters` 要素から宣言によって。

-   プログラムによって <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントハンドラーから。

 まず、データバインドコントロールから生成されたすべてのパラメーターが <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションに追加されます。 たとえば、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが、列 `Name` および `Number`を持つ <xref:System.Web.UI.WebControls.GridView> コントロールにバインドされている場合、`Name` と `Number` のパラメーターがコレクションに追加されます。 パラメーターの正確な名前は、<xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> プロパティによって異なります。 これらのパラメーターのデータ型は `string`です。 次に、`UpdateParameters` 要素に示されているパラメーターが追加されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクション内に既に存在するパラメーターと同じ名前を持つ `UpdateParameters` 要素内のパラメーターが見つかった場合、`UpdateParameters` 要素で指定されたパラメーターに一致するように既存のパラメーターが変更されます。 通常、これは、パラメーター内のデータの型を変更するために使用されます。 最後に、<xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントのパラメーターをプログラムによって追加および削除できます。このイベントは、<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> メソッドが実行される前に発生します。 メソッドは、パラメーターがマージされた後に解決されます。 メソッドの解決方法については、次のセクションで説明します。

> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティに置き換えます。

## <a name="method-resolution"></a>メソッドの解決方法
 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> メソッドが呼び出されると、データバインドコントロールのデータフィールド、`UpdateParameters` 要素で宣言によって作成されたパラメーター、および <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントハンドラーに追加されたパラメーターがすべてマージされます。 (詳細については、前のセクションを参照してください)。次に、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、呼び出すメソッドの検索を試みます。 まず、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティで指定された名前を持つ1つ以上のメソッドを検索します。 一致するものが見つからない場合は、<xref:System.InvalidOperationException> 例外がスローされます。 一致するものが見つかった場合は、一致するパラメーター名が検索されます。 たとえば、<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティによって指定された型に `UpdateARecord`という2つのメソッドがあるとします。 1つの `UpdateARecord` に1つのパラメーターがあり `ID`、もう一方の `UpdateARecord` には、`Name` と `Number`の2つのパラメーターがあります。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションに `ID`という名前のパラメーターが1つしかない場合、`ID` パラメーターだけを持つ `UpdateARecord` メソッドが呼び出されます。 パラメーターの型は、メソッドの解決時にチェックされません。 パラメーターの順序は重要ではありません。

 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティが設定されている場合、メソッドは別の方法で解決されます。 <xref:System.Web.UI.WebControls.ObjectDataSource> は、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティで指定された名前のメソッドを検索します。このメソッドは、<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> プロパティで指定された型のパラメーターを1つ受け取ります。 この場合、パラメーターの名前は関係ありません。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、およびユーザーが Northwind データベースの Employees テーブルのレコードを取得して更新できるようにするデータアクセスクラスを示しています。

 最初の例は、2つの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、<xref:System.Web.UI.WebControls.DropDownList> コントロール、および <xref:System.Web.UI.WebControls.DetailsView> コントロールを含む Web ページを示しています。 最初の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DropDownList> コントロールを使用して、データベースから従業員名を取得して表示します。 2番目の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して、ユーザーが選択した従業員レコードのデータを取得、表示、および変更します。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]

 2番目の例では、<xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントと <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントのハンドラーを示します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントハンドラーは、Employee テーブルから取得されたデータを含むオブジェクトをシリアル化します。 シリアル化されたオブジェクトはビューステートに格納されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントハンドラーは、更新するデータレコードの元のデータを含むビューステートのオブジェクトを逆シリアル化します。 元のデータを格納しているオブジェクトは、更新メソッドにパラメーターとして渡されます。 データが別のプロセスによって変更されたかどうかを確認するために使用できるように、元のデータをデータベースに渡す必要があります。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]

 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行し、更新します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> プロパティで指定されたメソッドによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティで指定されたメソッドによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションに含まれるパラメーターの名前と型は、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> メソッドシグネチャ内のパラメーターの名前と型と一致する必要があります。 パラメーター名は <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> プロパティの影響を受け、大文字と小文字が区別されます。 コレクション内のパラメーターは、データバインドコントロールのデータ、宣言によって指定されるパラメーター、およびプログラムによって追加されるパラメーターによって異なります。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>」の「パラメーターのマージ」と「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。

 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> プロパティは、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールに関連付けられている <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトに含まれる <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> プロパティを取得します。

 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>」を参照してください。

> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティに置き換えます。



## Examples
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、<xref:System.Web.UI.WebControls.DropDownList> コントロール、<xref:System.Web.UI.WebControls.TextBox> コントロール、およびいくつかの <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトを使用してデータを更新する方法を示します。 2番目のコード例は、最初のコード例で使用される `EmployeeLogic` クラスを示しています。

 次のコード例は、<xref:System.Web.UI.WebControls.DropDownList> コントロール、<xref:System.Web.UI.WebControls.TextBox> コントロール、およびいくつかの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールを使用してデータを更新する方法を示しています。 <xref:System.Web.UI.WebControls.DropDownList> に Northwind 従業員の名前が表示されますが、<xref:System.Web.UI.WebControls.TextBox> コントロールを使用して住所情報を入力および更新します。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションには <xref:System.Web.UI.WebControls.DropDownList>の選択値にバインドされた <xref:System.Web.UI.WebControls.ControlParameter> が含まれているため、<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 操作を発生させるボタンは、従業員が選択された後にのみ有効になります。

> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]

 次のコード例は、前のコード例で使用されている `EmployeeLogic` クラスを示しています。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントを処理して、アプリケーションに固有の追加の初期化を実行したり、パラメーターの値を検証したり、<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが更新操作を実行する前にパラメーター値を変更したりします。 パラメーターは、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> オブジェクトによって公開される <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> プロパティによってアクセスされる <xref:System.Collections.IDictionary> コレクションとして使用できます。

 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。



## Examples
 次の3つの例は、Web ページ、分離コードページクラス、およびユーザーが Northwind データベースの Employees テーブルのレコードを取得して更新できるようにするデータアクセスクラスを示しています。

 最初の例は、2つの <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、<xref:System.Web.UI.WebControls.DropDownList> コントロール、および <xref:System.Web.UI.WebControls.DetailsView> コントロールを含む Web ページを示しています。 最初の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DropDownList> コントロールを使用して、データベースから従業員名を取得して表示します。 2番目の <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールと <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用して、ユーザーが選択した従業員レコードのデータを取得、表示、および変更します。

 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]

 2番目の例では、<xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントと <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントのハンドラーを示します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベントハンドラーは、Employee テーブルから取得されたデータを含むオブジェクトをシリアル化します。 シリアル化されたオブジェクトはビューステートに格納されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベントハンドラーは、更新するデータレコードの元のデータを含むビューステートのオブジェクトを逆シリアル化します。 元のデータを格納しているオブジェクトは、更新メソッドにパラメーターとして渡されます。 データが別のプロセスによって変更されたかどうかを確認するために使用できるように、元のデータをデータベースに渡す必要があります。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]

 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行し、更新します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。

 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms247258(v=vs.100)">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/9a4kyhcx(v=vs.100)">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms227436(v=vs.100)">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
  </Members>
</Type>
